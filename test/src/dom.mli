[@@@ocaml.warning "-7-11-32-33-39"]
[@@@js.implem 
  [@@@ocaml.warning "-7-11-32-33-39"]
]
open Ts2ocaml_baselib
(* 
  unknown identifiers:
  - ArrayBuffer
  - ArrayBufferLike
  - ArrayBufferView
  - DataView
  - Date
  - Error
  - Exclude<T1, T2>
  - Float32Array
  - Float64Array
  - Int16Array
  - Int32Array
  - Int8Array
  - Pick<T1, T2>
  - Promise<T1>
  - PromiseLike<T1>
  - Record<T1, T2>
  - Uint16Array
  - Uint32Array
  - Uint8Array
  - Uint8ClampedArray
 *)
[@@@js.stop]
module type Missing = sig
  module ArrayBuffer : sig
    type t_0
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module ArrayBufferLike : sig
    type t_0
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module ArrayBufferView : sig
    type t_0
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module DataView : sig
    type t_0
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module Date : sig
    type t_0
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module Error : sig
    type t_0
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module Exclude : sig
    type ('T1, 'T2) t_2
    val t_2_to_js: ('T1 -> Ojs.t) -> ('T2 -> Ojs.t) -> ('T1, 'T2) t_2 -> Ojs.t
    val t_2_of_js: (Ojs.t -> 'T1) -> (Ojs.t -> 'T2) -> Ojs.t -> ('T1, 'T2) t_2
  end
  module Float32Array : sig
    type t_0
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module Float64Array : sig
    type t_0
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module Int16Array : sig
    type t_0
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module Int32Array : sig
    type t_0
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module Int8Array : sig
    type t_0
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module Pick : sig
    type ('T1, 'T2) t_2
    val t_2_to_js: ('T1 -> Ojs.t) -> ('T2 -> Ojs.t) -> ('T1, 'T2) t_2 -> Ojs.t
    val t_2_of_js: (Ojs.t -> 'T1) -> (Ojs.t -> 'T2) -> Ojs.t -> ('T1, 'T2) t_2
  end
  module Promise : sig
    type 'T1 t_1
    val t_1_to_js: ('T1 -> Ojs.t) -> 'T1 t_1 -> Ojs.t
    val t_1_of_js: (Ojs.t -> 'T1) -> Ojs.t -> 'T1 t_1
  end
  module PromiseLike : sig
    type 'T1 t_1
    val t_1_to_js: ('T1 -> Ojs.t) -> 'T1 t_1 -> Ojs.t
    val t_1_of_js: (Ojs.t -> 'T1) -> Ojs.t -> 'T1 t_1
  end
  module Record : sig
    type ('T1, 'T2) t_2
    val t_2_to_js: ('T1 -> Ojs.t) -> ('T2 -> Ojs.t) -> ('T1, 'T2) t_2 -> Ojs.t
    val t_2_of_js: (Ojs.t -> 'T1) -> (Ojs.t -> 'T2) -> Ojs.t -> ('T1, 'T2) t_2
  end
  module Uint16Array : sig
    type t_0
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module Uint32Array : sig
    type t_0
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module Uint8Array : sig
    type t_0
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module Uint8ClampedArray : sig
    type t_0
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
end
[@@@js.start]
[@@@js.implem 
  module type Missing = sig
    module ArrayBuffer : sig
      type t_0
      val t_0_to_js: t_0 -> Ojs.t
      val t_0_of_js: Ojs.t -> t_0
    end
    module ArrayBufferLike : sig
      type t_0
      val t_0_to_js: t_0 -> Ojs.t
      val t_0_of_js: Ojs.t -> t_0
    end
    module ArrayBufferView : sig
      type t_0
      val t_0_to_js: t_0 -> Ojs.t
      val t_0_of_js: Ojs.t -> t_0
    end
    module DataView : sig
      type t_0
      val t_0_to_js: t_0 -> Ojs.t
      val t_0_of_js: Ojs.t -> t_0
    end
    module Date : sig
      type t_0
      val t_0_to_js: t_0 -> Ojs.t
      val t_0_of_js: Ojs.t -> t_0
    end
    module Error : sig
      type t_0
      val t_0_to_js: t_0 -> Ojs.t
      val t_0_of_js: Ojs.t -> t_0
    end
    module Exclude : sig
      type ('T1, 'T2) t_2
      val t_2_to_js: ('T1 -> Ojs.t) -> ('T2 -> Ojs.t) -> ('T1, 'T2) t_2 -> Ojs.t
      val t_2_of_js: (Ojs.t -> 'T1) -> (Ojs.t -> 'T2) -> Ojs.t -> ('T1, 'T2) t_2
    end
    module Float32Array : sig
      type t_0
      val t_0_to_js: t_0 -> Ojs.t
      val t_0_of_js: Ojs.t -> t_0
    end
    module Float64Array : sig
      type t_0
      val t_0_to_js: t_0 -> Ojs.t
      val t_0_of_js: Ojs.t -> t_0
    end
    module Int16Array : sig
      type t_0
      val t_0_to_js: t_0 -> Ojs.t
      val t_0_of_js: Ojs.t -> t_0
    end
    module Int32Array : sig
      type t_0
      val t_0_to_js: t_0 -> Ojs.t
      val t_0_of_js: Ojs.t -> t_0
    end
    module Int8Array : sig
      type t_0
      val t_0_to_js: t_0 -> Ojs.t
      val t_0_of_js: Ojs.t -> t_0
    end
    module Pick : sig
      type ('T1, 'T2) t_2
      val t_2_to_js: ('T1 -> Ojs.t) -> ('T2 -> Ojs.t) -> ('T1, 'T2) t_2 -> Ojs.t
      val t_2_of_js: (Ojs.t -> 'T1) -> (Ojs.t -> 'T2) -> Ojs.t -> ('T1, 'T2) t_2
    end
    module Promise : sig
      type 'T1 t_1
      val t_1_to_js: ('T1 -> Ojs.t) -> 'T1 t_1 -> Ojs.t
      val t_1_of_js: (Ojs.t -> 'T1) -> Ojs.t -> 'T1 t_1
    end
    module PromiseLike : sig
      type 'T1 t_1
      val t_1_to_js: ('T1 -> Ojs.t) -> 'T1 t_1 -> Ojs.t
      val t_1_of_js: (Ojs.t -> 'T1) -> Ojs.t -> 'T1 t_1
    end
    module Record : sig
      type ('T1, 'T2) t_2
      val t_2_to_js: ('T1 -> Ojs.t) -> ('T2 -> Ojs.t) -> ('T1, 'T2) t_2 -> Ojs.t
      val t_2_of_js: (Ojs.t -> 'T1) -> (Ojs.t -> 'T2) -> Ojs.t -> ('T1, 'T2) t_2
    end
    module Uint16Array : sig
      type t_0
      val t_0_to_js: t_0 -> Ojs.t
      val t_0_of_js: Ojs.t -> t_0
    end
    module Uint32Array : sig
      type t_0
      val t_0_to_js: t_0 -> Ojs.t
      val t_0_of_js: Ojs.t -> t_0
    end
    module Uint8Array : sig
      type t_0
      val t_0_to_js: t_0 -> Ojs.t
      val t_0_of_js: Ojs.t -> t_0
    end
    module Uint8ClampedArray : sig
      type t_0
      val t_0_to_js: t_0 -> Ojs.t
      val t_0_of_js: Ojs.t -> t_0
    end
  end
]
module Make (M: Missing) : sig
  open M
  module Internal : sig
    module AnonymousInterfaces : sig
      type anonymous_interface_0 = [`anonymous_interface_0] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_1 = [`anonymous_interface_1] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_2 = [`anonymous_interface_2] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_3 = [`anonymous_interface_3] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_4 = [`anonymous_interface_4] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_5 = [`anonymous_interface_5] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_6 = [`anonymous_interface_6] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_7 = [`anonymous_interface_7] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_8 = [`anonymous_interface_8] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_9 = [`anonymous_interface_9] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_10 = [`anonymous_interface_10] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_11 = [`anonymous_interface_11] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_12 = [`anonymous_interface_12] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_13 = [`anonymous_interface_13] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_14 = [`anonymous_interface_14] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_15 = [`anonymous_interface_15] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_16 = [`anonymous_interface_16] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_17 = [`anonymous_interface_17] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_18 = [`anonymous_interface_18] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_19 = [`anonymous_interface_19] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_20 = [`anonymous_interface_20] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_21 = [`anonymous_interface_21] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_22 = [`anonymous_interface_22] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_23 = [`anonymous_interface_23] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_24 = [`anonymous_interface_24] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_25 = [`anonymous_interface_25] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_26 = [`anonymous_interface_26] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_27 = [`anonymous_interface_27] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_28 = [`anonymous_interface_28] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_29 = [`anonymous_interface_29] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_30 = [`anonymous_interface_30] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_31 = [`anonymous_interface_31] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_32 = [`anonymous_interface_32] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_33 = [`anonymous_interface_33] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_34 = [`anonymous_interface_34] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_35 = [`anonymous_interface_35] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_36 = [`anonymous_interface_36] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_37 = [`anonymous_interface_37] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_38 = [`anonymous_interface_38] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_39 = [`anonymous_interface_39] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_40 = [`anonymous_interface_40] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_41 = [`anonymous_interface_41] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_42 = [`anonymous_interface_42] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_43 = [`anonymous_interface_43] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_44 = [`anonymous_interface_44] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_45 = [`anonymous_interface_45] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_46 = [`anonymous_interface_46] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_47 = [`anonymous_interface_47] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_48 = [`anonymous_interface_48] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_49 = [`anonymous_interface_49] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_50 = [`anonymous_interface_50] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_51 = [`anonymous_interface_51] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_52 = [`anonymous_interface_52] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_53 = [`anonymous_interface_53] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_54 = [`anonymous_interface_54] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_55 = [`anonymous_interface_55] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_56 = [`anonymous_interface_56] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_57 = [`anonymous_interface_57] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_58 = [`anonymous_interface_58] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_59 = [`anonymous_interface_59] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_60 = [`anonymous_interface_60] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_61 = [`anonymous_interface_61] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_62 = [`anonymous_interface_62] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_63 = [`anonymous_interface_63] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_64 = [`anonymous_interface_64] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_65 = [`anonymous_interface_65] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_66 = [`anonymous_interface_66] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_67 = [`anonymous_interface_67] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_68 = [`anonymous_interface_68] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_69 = [`anonymous_interface_69] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_70 = [`anonymous_interface_70] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_71 = [`anonymous_interface_71] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_72 = [`anonymous_interface_72] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_73 = [`anonymous_interface_73] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_74 = [`anonymous_interface_74] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_75 = [`anonymous_interface_75] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_76 = [`anonymous_interface_76] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_77 = [`anonymous_interface_77] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_78 = [`anonymous_interface_78] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_79 = [`anonymous_interface_79] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_80 = [`anonymous_interface_80] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_81 = [`anonymous_interface_81] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_82 = [`anonymous_interface_82] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_83 = [`anonymous_interface_83] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_84 = [`anonymous_interface_84] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_85 = [`anonymous_interface_85] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_86 = [`anonymous_interface_86] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_87 = [`anonymous_interface_87] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_88 = [`anonymous_interface_88] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_89 = [`anonymous_interface_89] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_90 = [`anonymous_interface_90] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_91 = [`anonymous_interface_91] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_92 = [`anonymous_interface_92] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_93 = [`anonymous_interface_93] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_94 = [`anonymous_interface_94] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_95 = [`anonymous_interface_95] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_96 = [`anonymous_interface_96] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_97 = [`anonymous_interface_97] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_98 = [`anonymous_interface_98] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_99 = [`anonymous_interface_99] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_100 = [`anonymous_interface_100] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_101 = [`anonymous_interface_101] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_102 = [`anonymous_interface_102] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_103 = [`anonymous_interface_103] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_104 = [`anonymous_interface_104] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_105 = [`anonymous_interface_105] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_106 = [`anonymous_interface_106] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_107 = [`anonymous_interface_107] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_108 = [`anonymous_interface_108] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_109 = [`anonymous_interface_109] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_110 = [`anonymous_interface_110] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_111 = [`anonymous_interface_111] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_112 = [`anonymous_interface_112] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_113 = [`anonymous_interface_113] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_114 = [`anonymous_interface_114] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_115 = [`anonymous_interface_115] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_116 = [`anonymous_interface_116] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_117 = [`anonymous_interface_117] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_118 = [`anonymous_interface_118] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_119 = [`anonymous_interface_119] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_120 = [`anonymous_interface_120] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_121 = [`anonymous_interface_121] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_122 = [`anonymous_interface_122] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_123 = [`anonymous_interface_123] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_124 = [`anonymous_interface_124] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_125 = [`anonymous_interface_125] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_126 = [`anonymous_interface_126] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_127 = [`anonymous_interface_127] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_128 = [`anonymous_interface_128] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_129 = [`anonymous_interface_129] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_130 = [`anonymous_interface_130] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_131 = [`anonymous_interface_131] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_132 = [`anonymous_interface_132] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_133 = [`anonymous_interface_133] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_134 = [`anonymous_interface_134] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_135 = [`anonymous_interface_135] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_136 = [`anonymous_interface_136] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_137 = [`anonymous_interface_137] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_138 = [`anonymous_interface_138] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_139 = [`anonymous_interface_139] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_140 = [`anonymous_interface_140] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_141 = [`anonymous_interface_141] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_142 = [`anonymous_interface_142] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_143 = [`anonymous_interface_143] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_144 = [`anonymous_interface_144] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_145 = [`anonymous_interface_145] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_146 = [`anonymous_interface_146] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_147 = [`anonymous_interface_147] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_148 = [`anonymous_interface_148] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_149 = [`anonymous_interface_149] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_150 = [`anonymous_interface_150] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_151 = [`anonymous_interface_151] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_152 = [`anonymous_interface_152] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_153 = [`anonymous_interface_153] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_154 = [`anonymous_interface_154] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_155 = [`anonymous_interface_155] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_156 = [`anonymous_interface_156] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_157 = [`anonymous_interface_157] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_158 = [`anonymous_interface_158] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_159 = [`anonymous_interface_159] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_160 = [`anonymous_interface_160] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_161 = [`anonymous_interface_161] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_162 = [`anonymous_interface_162] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_163 = [`anonymous_interface_163] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_164 = [`anonymous_interface_164] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_165 = [`anonymous_interface_165] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_166 = [`anonymous_interface_166] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_167 = [`anonymous_interface_167] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_168 = [`anonymous_interface_168] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_169 = [`anonymous_interface_169] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_170 = [`anonymous_interface_170] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_171 = [`anonymous_interface_171] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_172 = [`anonymous_interface_172] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_173 = [`anonymous_interface_173] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_174 = [`anonymous_interface_174] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_175 = [`anonymous_interface_175] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_176 = [`anonymous_interface_176] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_177 = [`anonymous_interface_177] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_178 = [`anonymous_interface_178] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_179 = [`anonymous_interface_179] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_180 = [`anonymous_interface_180] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_181 = [`anonymous_interface_181] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_182 = [`anonymous_interface_182] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_183 = [`anonymous_interface_183] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_184 = [`anonymous_interface_184] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_185 = [`anonymous_interface_185] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_186 = [`anonymous_interface_186] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_187 = [`anonymous_interface_187] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_188 = [`anonymous_interface_188] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_189 = [`anonymous_interface_189] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_190 = [`anonymous_interface_190] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_191 = [`anonymous_interface_191] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_192 = [`anonymous_interface_192] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_193 = [`anonymous_interface_193] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_194 = [`anonymous_interface_194] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_195 = [`anonymous_interface_195] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_196 = [`anonymous_interface_196] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_197 = [`anonymous_interface_197] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_198 = [`anonymous_interface_198] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_199 = [`anonymous_interface_199] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_200 = [`anonymous_interface_200] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_201 = [`anonymous_interface_201] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_202 = [`anonymous_interface_202] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_203 = [`anonymous_interface_203] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_204 = [`anonymous_interface_204] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_205 = [`anonymous_interface_205] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_206 = [`anonymous_interface_206] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_207 = [`anonymous_interface_207] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_208 = [`anonymous_interface_208] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_209 = [`anonymous_interface_209] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_210 = [`anonymous_interface_210] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_211 = [`anonymous_interface_211] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_212 = [`anonymous_interface_212] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_213 = [`anonymous_interface_213] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_214 = [`anonymous_interface_214] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_215 = [`anonymous_interface_215] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_216 = [`anonymous_interface_216] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_217 = [`anonymous_interface_217] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_218 = [`anonymous_interface_218] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_219 = [`anonymous_interface_219] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_220 = [`anonymous_interface_220] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_221 = [`anonymous_interface_221] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_222 = [`anonymous_interface_222] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_223 = [`anonymous_interface_223] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_224 = [`anonymous_interface_224] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_225 = [`anonymous_interface_225] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_226 = [`anonymous_interface_226] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_227 = [`anonymous_interface_227] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_228 = [`anonymous_interface_228] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_229 = [`anonymous_interface_229] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_230 = [`anonymous_interface_230] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_231 = [`anonymous_interface_231] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_232 = [`anonymous_interface_232] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_233 = [`anonymous_interface_233] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_234 = [`anonymous_interface_234] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_235 = [`anonymous_interface_235] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_236 = [`anonymous_interface_236] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_237 = [`anonymous_interface_237] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_238 = [`anonymous_interface_238] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_239 = [`anonymous_interface_239] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_240 = [`anonymous_interface_240] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_241 = [`anonymous_interface_241] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_242 = [`anonymous_interface_242] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_243 = [`anonymous_interface_243] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_244 = [`anonymous_interface_244] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_245 = [`anonymous_interface_245] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_246 = [`anonymous_interface_246] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_247 = [`anonymous_interface_247] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_248 = [`anonymous_interface_248] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_249 = [`anonymous_interface_249] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_250 = [`anonymous_interface_250] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_251 = [`anonymous_interface_251] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_252 = [`anonymous_interface_252] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_253 = [`anonymous_interface_253] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_254 = [`anonymous_interface_254] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_255 = [`anonymous_interface_255] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_256 = [`anonymous_interface_256] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_257 = [`anonymous_interface_257] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_258 = [`anonymous_interface_258] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_259 = [`anonymous_interface_259] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_260 = [`anonymous_interface_260] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_261 = [`anonymous_interface_261] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_262 = [`anonymous_interface_262] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_263 = [`anonymous_interface_263] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_264 = [`anonymous_interface_264] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_265 = [`anonymous_interface_265] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_266 = [`anonymous_interface_266] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_267 = [`anonymous_interface_267] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_268 = [`anonymous_interface_268] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_269 = [`anonymous_interface_269] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_270 = [`anonymous_interface_270] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_271 = [`anonymous_interface_271] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_272 = [`anonymous_interface_272] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_273 = [`anonymous_interface_273] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_274 = [`anonymous_interface_274] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_275 = [`anonymous_interface_275] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_276 = [`anonymous_interface_276] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_277 = [`anonymous_interface_277] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_278 = [`anonymous_interface_278] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_279 = [`anonymous_interface_279] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_280 = [`anonymous_interface_280] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_281 = [`anonymous_interface_281] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_282 = [`anonymous_interface_282] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_283 = [`anonymous_interface_283] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_284 = [`anonymous_interface_284] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_285 = [`anonymous_interface_285] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_286 = [`anonymous_interface_286] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_287 = [`anonymous_interface_287] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_288 = [`anonymous_interface_288] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_289 = [`anonymous_interface_289] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_290 = [`anonymous_interface_290] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_291 = [`anonymous_interface_291] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_292 = [`anonymous_interface_292] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_293 = [`anonymous_interface_293] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_294 = [`anonymous_interface_294] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_295 = [`anonymous_interface_295] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_296 = [`anonymous_interface_296] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_297 = [`anonymous_interface_297] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_298 = [`anonymous_interface_298] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_299 = [`anonymous_interface_299] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_300 = [`anonymous_interface_300] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_301 = [`anonymous_interface_301] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_302 = [`anonymous_interface_302] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_303 = [`anonymous_interface_303] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_304 = [`anonymous_interface_304] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_305 = [`anonymous_interface_305] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_306 = [`anonymous_interface_306] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_307 = [`anonymous_interface_307] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_308 = [`anonymous_interface_308] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_309 = [`anonymous_interface_309] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_310 = [`anonymous_interface_310] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_311 = [`anonymous_interface_311] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_312 = [`anonymous_interface_312] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_313 = [`anonymous_interface_313] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_314 = [`anonymous_interface_314] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_315 = [`anonymous_interface_315] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_316 = [`anonymous_interface_316] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_317 = [`anonymous_interface_317] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_318 = [`anonymous_interface_318] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_319 = [`anonymous_interface_319] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_320 = [`anonymous_interface_320] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_321 = [`anonymous_interface_321] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_322 = [`anonymous_interface_322] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_323 = [`anonymous_interface_323] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_324 = [`anonymous_interface_324] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_325 = [`anonymous_interface_325] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_326 = [`anonymous_interface_326] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_327 = [`anonymous_interface_327] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_328 = [`anonymous_interface_328] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_329 = [`anonymous_interface_329] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_330 = [`anonymous_interface_330] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_331 = [`anonymous_interface_331] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_332 = [`anonymous_interface_332] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_333 = [`anonymous_interface_333] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_334 = [`anonymous_interface_334] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_335 = [`anonymous_interface_335] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_336 = [`anonymous_interface_336] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_337 = [`anonymous_interface_337] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_338 = [`anonymous_interface_338] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_339 = [`anonymous_interface_339] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_340 = [`anonymous_interface_340] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_341 = [`anonymous_interface_341] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_342 = [`anonymous_interface_342] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_343 = [`anonymous_interface_343] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_344 = [`anonymous_interface_344] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_345 = [`anonymous_interface_345] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_346 = [`anonymous_interface_346] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_347 = [`anonymous_interface_347] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_348 = [`anonymous_interface_348] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_349 = [`anonymous_interface_349] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_350 = [`anonymous_interface_350] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_351 = [`anonymous_interface_351] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_352 = [`anonymous_interface_352] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_353 = [`anonymous_interface_353] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_354 = [`anonymous_interface_354] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_355 = [`anonymous_interface_355] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_356 = [`anonymous_interface_356] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_357 = [`anonymous_interface_357] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_358 = [`anonymous_interface_358] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_359 = [`anonymous_interface_359] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_360 = [`anonymous_interface_360] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_361 = [`anonymous_interface_361] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_362 = [`anonymous_interface_362] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_363 = [`anonymous_interface_363] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_364 = [`anonymous_interface_364] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_365 = [`anonymous_interface_365] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_366 = [`anonymous_interface_366] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_367 = [`anonymous_interface_367] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_368 = [`anonymous_interface_368] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_369 = [`anonymous_interface_369] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_370 = [`anonymous_interface_370] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_371 = [`anonymous_interface_371] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_372 = [`anonymous_interface_372] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_373 = [`anonymous_interface_373] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_374 = [`anonymous_interface_374] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_375 = [`anonymous_interface_375] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_376 = [`anonymous_interface_376] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_377 = [`anonymous_interface_377] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_378 = [`anonymous_interface_378] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_379 = [`anonymous_interface_379] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_380 = [`anonymous_interface_380] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_381 = [`anonymous_interface_381] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_382 = [`anonymous_interface_382] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_383 = [`anonymous_interface_383] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_384 = [`anonymous_interface_384] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_385 = [`anonymous_interface_385] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_386 = [`anonymous_interface_386] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_387 = [`anonymous_interface_387] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_388 = [`anonymous_interface_388] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_389 = [`anonymous_interface_389] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_390 = [`anonymous_interface_390] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_391 = [`anonymous_interface_391] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_392 = [`anonymous_interface_392] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_393 = [`anonymous_interface_393] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_394 = [`anonymous_interface_394] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_395 = [`anonymous_interface_395] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_396 = [`anonymous_interface_396] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_397 = [`anonymous_interface_397] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_398 = [`anonymous_interface_398] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_399 = [`anonymous_interface_399] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_400 = [`anonymous_interface_400] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_401 = [`anonymous_interface_401] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_402 = [`anonymous_interface_402] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_403 = [`anonymous_interface_403] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_404 = [`anonymous_interface_404] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_405 = [`anonymous_interface_405] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_406 = [`anonymous_interface_406] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_407 = [`anonymous_interface_407] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_408 = [`anonymous_interface_408] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_409 = [`anonymous_interface_409] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_410 = [`anonymous_interface_410] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_411 = [`anonymous_interface_411] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_412 = [`anonymous_interface_412] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_413 = [`anonymous_interface_413] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_414 = [`anonymous_interface_414] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_415 = [`anonymous_interface_415] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_416 = [`anonymous_interface_416] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_417 = [`anonymous_interface_417] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_418 = [`anonymous_interface_418] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_419 = [`anonymous_interface_419] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_420 = [`anonymous_interface_420] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_421 = [`anonymous_interface_421] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_422 = [`anonymous_interface_422] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_423 = [`anonymous_interface_423] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_424 = [`anonymous_interface_424] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_425 = [`anonymous_interface_425] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_426 = [`anonymous_interface_426] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_427 = [`anonymous_interface_427] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_428 = [`anonymous_interface_428] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_429 = [`anonymous_interface_429] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_430 = [`anonymous_interface_430] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_431 = [`anonymous_interface_431] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_432 = [`anonymous_interface_432] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_433 = [`anonymous_interface_433] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_434 = [`anonymous_interface_434] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_435 = [`anonymous_interface_435] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_436 = [`anonymous_interface_436] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_437 = [`anonymous_interface_437] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_438 = [`anonymous_interface_438] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_439 = [`anonymous_interface_439] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_440 = [`anonymous_interface_440] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_441 = [`anonymous_interface_441] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_442 = [`anonymous_interface_442] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_443 = [`anonymous_interface_443] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_444 = [`anonymous_interface_444] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_445 = [`anonymous_interface_445] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_446 = [`anonymous_interface_446] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_447 = [`anonymous_interface_447] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_448 = [`anonymous_interface_448] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_449 = [`anonymous_interface_449] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_450 = [`anonymous_interface_450] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_451 = [`anonymous_interface_451] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_452 = [`anonymous_interface_452] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_453 = [`anonymous_interface_453] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_454 = [`anonymous_interface_454] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_455 = [`anonymous_interface_455] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_456 = [`anonymous_interface_456] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_457 = [`anonymous_interface_457] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_458 = [`anonymous_interface_458] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_459 = [`anonymous_interface_459] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_460 = [`anonymous_interface_460] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_461 = [`anonymous_interface_461] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_462 = [`anonymous_interface_462] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_463 = [`anonymous_interface_463] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_464 = [`anonymous_interface_464] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_465 = [`anonymous_interface_465] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_466 = [`anonymous_interface_466] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_467 = [`anonymous_interface_467] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_468 = [`anonymous_interface_468] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_469 = [`anonymous_interface_469] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_470 = [`anonymous_interface_470] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_471 = [`anonymous_interface_471] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_472 = [`anonymous_interface_472] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_473 = [`anonymous_interface_473] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_474 = [`anonymous_interface_474] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_475 = [`anonymous_interface_475] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_476 = [`anonymous_interface_476] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_477 = [`anonymous_interface_477] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_478 = [`anonymous_interface_478] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_479 = [`anonymous_interface_479] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_480 = [`anonymous_interface_480] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_481 = [`anonymous_interface_481] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_482 = [`anonymous_interface_482] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_483 = [`anonymous_interface_483] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_484 = [`anonymous_interface_484] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_485 = [`anonymous_interface_485] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_486 = [`anonymous_interface_486] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_487 = [`anonymous_interface_487] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_488 = [`anonymous_interface_488] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_489 = [`anonymous_interface_489] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_490 = [`anonymous_interface_490] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_491 = [`anonymous_interface_491] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_492 = [`anonymous_interface_492] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_493 = [`anonymous_interface_493] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_494 = [`anonymous_interface_494] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_495 = [`anonymous_interface_495] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_496 = [`anonymous_interface_496] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_497 = [`anonymous_interface_497] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_498 = [`anonymous_interface_498] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_499 = [`anonymous_interface_499] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_500 = [`anonymous_interface_500] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_501 = [`anonymous_interface_501] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_502 = [`anonymous_interface_502] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_503 = [`anonymous_interface_503] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_504 = [`anonymous_interface_504] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_505 = [`anonymous_interface_505] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_506 = [`anonymous_interface_506] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_507 = [`anonymous_interface_507] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_508 = [`anonymous_interface_508] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_509 = [`anonymous_interface_509] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_510 = [`anonymous_interface_510] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_511 = [`anonymous_interface_511] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_512 = [`anonymous_interface_512] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_513 = [`anonymous_interface_513] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_514 = [`anonymous_interface_514] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_515 = [`anonymous_interface_515] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_516 = [`anonymous_interface_516] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_517 = [`anonymous_interface_517] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_518 = [`anonymous_interface_518] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_519 = [`anonymous_interface_519] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_520 = [`anonymous_interface_520] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_521 = [`anonymous_interface_521] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_522 = [`anonymous_interface_522] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_523 = [`anonymous_interface_523] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_524 = [`anonymous_interface_524] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_525 = [`anonymous_interface_525] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_526 = [`anonymous_interface_526] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_527 = [`anonymous_interface_527] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_528 = [`anonymous_interface_528] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_529 = [`anonymous_interface_529] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_530 = [`anonymous_interface_530] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_531 = [`anonymous_interface_531] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_532 = [`anonymous_interface_532] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_533 = [`anonymous_interface_533] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_534 = [`anonymous_interface_534] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_535 = [`anonymous_interface_535] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_536 = [`anonymous_interface_536] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_537 = [`anonymous_interface_537] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_538 = [`anonymous_interface_538] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_539 = [`anonymous_interface_539] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_540 = [`anonymous_interface_540] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_541 = [`anonymous_interface_541] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_542 = [`anonymous_interface_542] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_543 = [`anonymous_interface_543] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_544 = [`anonymous_interface_544] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_545 = [`anonymous_interface_545] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_546 = [`anonymous_interface_546] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_547 = [`anonymous_interface_547] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_548 = [`anonymous_interface_548] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_549 = [`anonymous_interface_549] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_550 = [`anonymous_interface_550] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_551 = [`anonymous_interface_551] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_552 = [`anonymous_interface_552] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_553 = [`anonymous_interface_553] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_554 = [`anonymous_interface_554] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_555 = [`anonymous_interface_555] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_556 = [`anonymous_interface_556] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_557 = [`anonymous_interface_557] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_558 = [`anonymous_interface_558] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_559 = [`anonymous_interface_559] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_560 = [`anonymous_interface_560] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_561 = [`anonymous_interface_561] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_562 = [`anonymous_interface_562] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_563 = [`anonymous_interface_563] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_564 = [`anonymous_interface_564] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_565 = [`anonymous_interface_565] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_566 = [`anonymous_interface_566] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_567 = [`anonymous_interface_567] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_568 = [`anonymous_interface_568] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_569 = [`anonymous_interface_569] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_570 = [`anonymous_interface_570] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_571 = [`anonymous_interface_571] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_572 = [`anonymous_interface_572] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_573 = [`anonymous_interface_573] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_574 = [`anonymous_interface_574] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_575 = [`anonymous_interface_575] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_576 = [`anonymous_interface_576] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_577 = [`anonymous_interface_577] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_578 = [`anonymous_interface_578] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_579 = [`anonymous_interface_579] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_580 = [`anonymous_interface_580] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_581 = [`anonymous_interface_581] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_582 = [`anonymous_interface_582] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_583 = [`anonymous_interface_583] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_584 = [`anonymous_interface_584] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_585 = [`anonymous_interface_585] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_586 = [`anonymous_interface_586] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_587 = [`anonymous_interface_587] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_588 = [`anonymous_interface_588] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_589 = [`anonymous_interface_589] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_590 = [`anonymous_interface_590] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_591 = [`anonymous_interface_591] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_592 = [`anonymous_interface_592] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_593 = [`anonymous_interface_593] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_594 = [`anonymous_interface_594] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_595 = [`anonymous_interface_595] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_596 = [`anonymous_interface_596] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_597 = [`anonymous_interface_597] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_598 = [`anonymous_interface_598] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_599 = [`anonymous_interface_599] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_600 = [`anonymous_interface_600] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_601 = [`anonymous_interface_601] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_602 = [`anonymous_interface_602] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_603 = [`anonymous_interface_603] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_604 = [`anonymous_interface_604] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_605 = [`anonymous_interface_605] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_606 = [`anonymous_interface_606] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_607 = [`anonymous_interface_607] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_608 = [`anonymous_interface_608] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_609 = [`anonymous_interface_609] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_610 = [`anonymous_interface_610] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_611 = [`anonymous_interface_611] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_612 = [`anonymous_interface_612] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_613 = [`anonymous_interface_613] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      type anonymous_interface_614 = [`anonymous_interface_614] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
    end
    module Types : sig
      open AnonymousInterfaces
      type _AAGUID = _BufferSource
      and _ANGLE_instanced_arrays = [`ANGLE_instanced_arrays] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AbortController = [`AbortController] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AbortSignal = [`AbortSignal | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AbortSignalEventMap = [`AbortSignalEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AbstractRange = [`AbstractRange] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AbstractWorker = [`AbstractWorker] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AbstractWorkerEventMap = [`AbstractWorkerEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _Account = [`Account] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AddEventListenerOptions = [`AddEventListenerOptions | `EventListenerOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AesCbcParams = [`AesCbcParams | `Algorithm] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AesCfbParams = [`AesCfbParams | `Algorithm] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AesCmacParams = [`AesCmacParams | `Algorithm] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AesCtrParams = [`AesCtrParams | `Algorithm] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AesDerivedKeyParams = [`AesDerivedKeyParams | `Algorithm] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AesGcmParams = [`AesGcmParams | `Algorithm] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AesKeyAlgorithm = [`AesKeyAlgorithm | `KeyAlgorithm] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AesKeyGenParams = [`AesKeyGenParams | `Algorithm] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _Algorithm = [`Algorithm] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AlgorithmIdentifier = _Algorithm or_string
      and _AlignSetting = ([`L_s232_center[@js "center"] | `L_s327_end[@js "end"] | `L_s482_left[@js "left"] | `L_s691_right[@js "right"] | `L_s757_start[@js "start"]] [@js.enum])
      and _AnalyserNode = [`AnalyserNode | `AudioNode | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AnalyserOptions = [`AnalyserOptions | `AudioNodeOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _Animatable = [`Animatable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _Animation = [`Animation | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AnimationEffect = [`AnimationEffect] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AnimationEvent = [`AnimationEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AnimationEventInit = [`AnimationEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AnimationEventMap = [`AnimationEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AnimationFrameProvider = [`AnimationFrameProvider] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AnimationPlayState = ([`L_s372_finished[@js "finished"] | `L_s435_idle[@js "idle"] | `L_s614_paused[@js "paused"] | `L_s701_running[@js "running"]] [@js.enum])
      and _AnimationPlaybackEvent = [`AnimationPlaybackEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AnimationPlaybackEventInit = [`AnimationPlaybackEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AnimationTimeline = [`AnimationTimeline] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AppendMode = ([`L_s715_segments[@js "segments"] | `L_s722_sequence[@js "sequence"]] [@js.enum])
      and _ApplicationCache = [`ApplicationCache | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ApplicationCacheEventMap = [`ApplicationCacheEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AssertionOptions = [`AssertionOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AssignedNodesOptions = [`AssignedNodesOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AttestationConveyancePreference = ([`L_s297_direct[@js "direct"] | `L_s452_indirect[@js "indirect"] | `L_s571_none[@js "none"]] [@js.enum])
      and _Attr = [`Attr | `EventTarget | `Node] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AudioBuffer = [`AudioBuffer] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AudioBufferOptions = [`AudioBufferOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AudioBufferSourceNode = [`AudioBufferSourceNode | `AudioNode | `AudioScheduledSourceNode | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AudioBufferSourceOptions = [`AudioBufferSourceOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AudioContext = [`AudioContext | `BaseAudioContext | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AudioContextInfo = [`AudioContextInfo] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AudioContextLatencyCategory = ([`L_s190_balanced[@js "balanced"] | `L_s460_interactive[@js "interactive"] | `L_s626_playback[@js "playback"]] [@js.enum])
      and _AudioContextOptions = [`AudioContextOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AudioContextState = ([`L_s247_closed[@js "closed"] | `L_s701_running[@js "running"] | `L_s777_suspended[@js "suspended"]] [@js.enum])
      and _AudioDestinationNode = [`AudioDestinationNode | `AudioNode | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AudioListener = [`AudioListener] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AudioNode = [`AudioNode | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AudioNodeOptions = [`AudioNodeOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AudioParam = [`AudioParam] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AudioParamDescriptor = [`AudioParamDescriptor] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AudioParamMap = [`AudioParamMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AudioProcessingEvent = [`AudioProcessingEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AudioProcessingEventInit = [`AudioProcessingEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AudioScheduledSourceNode = [`AudioScheduledSourceNode | `AudioNode | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AudioScheduledSourceNodeEventMap = [`AudioScheduledSourceNodeEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AudioTimestamp = [`AudioTimestamp] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AudioTrack = [`AudioTrack] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AudioTrackList = [`AudioTrackList | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AudioTrackListEventMap = [`AudioTrackListEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AudioWorklet = [`AudioWorklet | `Worklet] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AudioWorkletNode = [`AudioWorkletNode | `AudioNode | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AudioWorkletNodeEventMap = [`AudioWorkletNodeEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AudioWorkletNodeOptions = [`AudioWorkletNodeOptions | `AudioNodeOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AuthenticationExtensionsClientInputs = [`AuthenticationExtensionsClientInputs] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AuthenticationExtensionsClientOutputs = [`AuthenticationExtensionsClientOutputs] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AuthenticationExtensionsSupported = string list
      and _AuthenticatorAssertionResponse = [`AuthenticatorAssertionResponse | `AuthenticatorResponse] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AuthenticatorAttachment = ([`L_s264_cross_platform[@js "cross-platform"] | `L_s624_platform[@js "platform"]] [@js.enum])
      and _AuthenticatorAttestationResponse = [`AuthenticatorAttestationResponse | `AuthenticatorResponse] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AuthenticatorResponse = [`AuthenticatorResponse] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AuthenticatorSelectionCriteria = [`AuthenticatorSelectionCriteria] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _AuthenticatorSelectionList = _AAGUID list
      and _AuthenticatorTransport = ([`L_s203_ble[@js "ble"] | `L_s461_internal[@js "internal"] | `L_s563_nfc[@js "nfc"] | `L_s839_usb[@js "usb"]] [@js.enum])
      and _AutoKeyword = ([`L_s183_auto[@js "auto"]] [@js.enum])
      and _AutomationRate = ([`L_s134_a_rate[@js "a-rate"] | `L_s470_k_rate[@js "k-rate"]] [@js.enum])
      and _BarProp = [`BarProp] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _BaseAudioContext = [`BaseAudioContext | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _BaseAudioContextEventMap = [`BaseAudioContextEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _BeforeUnloadEvent = [`BeforeUnloadEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _BhxBrowser = [`BhxBrowser] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _BigInteger = Uint8Array.t_0
      and _BinaryType = ([`L_s168_arraybuffer[@js "arraybuffer"] | `L_s204_blob[@js "blob"]] [@js.enum])
      and _BiquadFilterNode = [`BiquadFilterNode | `AudioNode | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _BiquadFilterOptions = [`BiquadFilterOptions | `AudioNodeOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _BiquadFilterType = ([`L_s151_allpass[@js "allpass"] | `L_s191_bandpass[@js "bandpass"] | `L_s420_highpass[@js "highpass"] | `L_s421_highshelf[@js "highshelf"] | `L_s506_lowpass[@js "lowpass"] | `L_s507_lowshelf[@js "lowshelf"] | `L_s576_notch[@js "notch"] | `L_s615_peaking[@js "peaking"]] [@js.enum])
      and _Blob = [`Blob] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _BlobCallback = [`BlobCallback] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _BlobPart = (_Blob, _BufferSource) union2 or_string
      and _BlobPropertyBag = [`BlobPropertyBag] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _Body = [`Body] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _BodyInit = (_Blob, _BufferSource, _FormData, _URLSearchParams, Uint8Array.t_0 _ReadableStream) union5 or_string
      and _BroadcastChannel = [`BroadcastChannel | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _BroadcastChannelEventMap = [`BroadcastChannelEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _BufferSource = (ArrayBuffer.t_0, ArrayBufferView.t_0) union2
      and _ByteLengthChunk = [`ByteLengthChunk] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ByteLengthQueuingStrategy = [`ByteLengthQueuingStrategy | `QueuingStrategy of ArrayBufferView.t_0] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CDATASection = [`CDATASection | `CharacterData | `ChildNode | `EventTarget | `Node | `NonDocumentTypeChildNode | `Slotable | `Text] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _COSEAlgorithmIdentifier = float
      and _CSS = [`CSS] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CSSConditionRule = [`CSSConditionRule | `CSSGroupingRule | `CSSRule] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CSSFontFaceRule = [`CSSFontFaceRule | `CSSRule] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CSSGroupingRule = [`CSSGroupingRule | `CSSRule] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CSSImportRule = [`CSSImportRule | `CSSRule] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CSSKeyframeRule = [`CSSKeyframeRule | `CSSRule] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CSSKeyframesRule = [`CSSKeyframesRule | `CSSRule] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CSSMediaRule = [`CSSMediaRule | `CSSConditionRule | `CSSGroupingRule | `CSSRule] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CSSNamespaceRule = [`CSSNamespaceRule | `CSSRule] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CSSPageRule = [`CSSPageRule | `CSSRule] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CSSRule = [`CSSRule] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CSSRuleList = [`CSSRuleList] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CSSStyleDeclaration = [`CSSStyleDeclaration] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CSSStyleRule = [`CSSStyleRule | `CSSRule] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CSSStyleSheet = [`CSSStyleSheet | `StyleSheet] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CSSSupportsRule = [`CSSSupportsRule | `CSSConditionRule | `CSSGroupingRule | `CSSRule] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _Cache = [`Cache] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CacheQueryOptions = [`CacheQueryOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CacheStorage = [`CacheStorage] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CanPlayTypeResult = ([`L_s0[@js ""] | `L_s524_maybe[@js "maybe"] | `L_s655_probably[@js "probably"]] [@js.enum])
      and _CanvasCompositing = [`CanvasCompositing] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CanvasDirection = ([`L_s454_inherit[@js "inherit"] | `L_s509_ltr[@js "ltr"] | `L_s698_rtl[@js "rtl"]] [@js.enum])
      and _CanvasDrawImage = [`CanvasDrawImage] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CanvasDrawPath = [`CanvasDrawPath] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CanvasFillRule = ([`L_s333_evenodd[@js "evenodd"] | `L_s572_nonzero[@js "nonzero"]] [@js.enum])
      and _CanvasFillStrokeStyles = [`CanvasFillStrokeStyles] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CanvasFilters = [`CanvasFilters] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CanvasGradient = [`CanvasGradient] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CanvasImageData = [`CanvasImageData] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CanvasImageSmoothing = [`CanvasImageSmoothing] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CanvasImageSource = (_HTMLCanvasElement, _HTMLOrSVGImageElement, _HTMLVideoElement, _ImageBitmap, _OffscreenCanvas) union5
      and _CanvasLineCap = ([`L_s217_butt[@js "butt"] | `L_s694_round[@js "round"] | `L_s752_square[@js "square"]] [@js.enum])
      and _CanvasLineJoin = ([`L_s201_bevel[@js "bevel"] | `L_s537_miter[@js "miter"] | `L_s694_round[@js "round"]] [@js.enum])
      and _CanvasPath = [`CanvasPath] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CanvasPathDrawingStyles = [`CanvasPathDrawingStyles] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CanvasPattern = [`CanvasPattern] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CanvasRect = [`CanvasRect] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CanvasRenderingContext2D = [`CanvasRenderingContext2D | `CanvasCompositing | `CanvasDrawImage | `CanvasDrawPath | `CanvasFillStrokeStyles | `CanvasFilters | `CanvasImageData | `CanvasImageSmoothing | `CanvasPath | `CanvasPathDrawingStyles | `CanvasRect | `CanvasShadowStyles | `CanvasState | `CanvasText | `CanvasTextDrawingStyles | `CanvasTransform | `CanvasUserInterface] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CanvasRenderingContext2DSettings = [`CanvasRenderingContext2DSettings] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CanvasShadowStyles = [`CanvasShadowStyles] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CanvasState = [`CanvasState] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CanvasText = [`CanvasText] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CanvasTextAlign = ([`L_s232_center[@js "center"] | `L_s327_end[@js "end"] | `L_s482_left[@js "left"] | `L_s691_right[@js "right"] | `L_s757_start[@js "start"]] [@js.enum])
      and _CanvasTextBaseline = ([`L_s152_alphabetic[@js "alphabetic"] | `L_s211_bottom[@js "bottom"] | `L_s405_hanging[@js "hanging"] | `L_s434_ideographic[@js "ideographic"] | `L_s535_middle[@js "middle"] | `L_s805_top[@js "top"]] [@js.enum])
      and _CanvasTextDrawingStyles = [`CanvasTextDrawingStyles] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CanvasTransform = [`CanvasTransform] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CanvasUserInterface = [`CanvasUserInterface] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CaretPosition = [`CaretPosition] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ChannelCountMode = ([`L_s240_clamped_max[@js "clamped-max"] | `L_s336_explicit[@js "explicit"] | `L_s521_max[@js "max"]] [@js.enum])
      and _ChannelInterpretation = ([`L_s302_discrete[@js "discrete"] | `L_s748_speakers[@js "speakers"]] [@js.enum])
      and _ChannelMergerNode = [`ChannelMergerNode | `AudioNode | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ChannelMergerOptions = [`ChannelMergerOptions | `AudioNodeOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ChannelSplitterNode = [`ChannelSplitterNode | `AudioNode | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ChannelSplitterOptions = [`ChannelSplitterOptions | `AudioNodeOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CharacterData = [`CharacterData | `ChildNode | `EventTarget | `Node | `NonDocumentTypeChildNode] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ChildNode = [`ChildNode | `EventTarget | `Node] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ClientData = [`ClientData] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ClientQueryOptions = [`ClientQueryOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ClientRect = [`ClientRect] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ClientRectList = [`ClientRectList] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ClientTypes = ([`L_s149_all[@js "all"] | `L_s726_sharedworker[@js "sharedworker"] | `L_s871_window[@js "window"] | `L_s872_worker[@js "worker"]] [@js.enum])
      and _Clipboard = [`Clipboard | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ClipboardEvent = [`ClipboardEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ClipboardEventInit = [`ClipboardEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CloseEvent = [`CloseEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CloseEventInit = [`CloseEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _Comment = [`Comment | `CharacterData | `ChildNode | `EventTarget | `Node | `NonDocumentTypeChildNode] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CompositeOperation = ([`L_s138_accumulate[@js "accumulate"] | `L_s142_add[@js "add"] | `L_s680_replace[@js "replace"]] [@js.enum])
      and _CompositeOperationOrAuto = ([`L_s138_accumulate[@js "accumulate"] | `L_s142_add[@js "add"] | `L_s183_auto[@js "auto"] | `L_s680_replace[@js "replace"]] [@js.enum])
      and _CompositionEvent = [`CompositionEvent | `Event | `UIEvent] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CompositionEventInit = [`CompositionEventInit | `EventInit | `UIEventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ComputedEffectTiming = [`ComputedEffectTiming | `EffectTiming] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ComputedKeyframe = [`ComputedKeyframe] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ConcatParams = [`ConcatParams | `Algorithm] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ConfirmSiteSpecificExceptionsInformation = [`ConfirmSiteSpecificExceptionsInformation | `ExceptionInformation] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _Console = [`Console] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ConstantSourceNode = [`ConstantSourceNode | `AudioNode | `AudioScheduledSourceNode | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ConstantSourceOptions = [`ConstantSourceOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ConstrainBoolean = _ConstrainBooleanParameters or_boolean
      and _ConstrainBooleanParameters = [`ConstrainBooleanParameters] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ConstrainDOMString = (_ConstrainDOMStringParameters, string) or_array or_string
      and _ConstrainDOMStringParameters = [`ConstrainDOMStringParameters] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ConstrainDouble = _ConstrainDoubleRange or_number
      and _ConstrainDoubleRange = [`ConstrainDoubleRange | `DoubleRange] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ConstrainULong = _ConstrainULongRange or_number
      and _ConstrainULongRange = [`ConstrainULongRange | `ULongRange] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ConstrainVideoFacingModeParameters = [`ConstrainVideoFacingModeParameters] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ConvolverNode = [`ConvolverNode | `AudioNode | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ConvolverOptions = [`ConvolverOptions | `AudioNodeOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _Coordinates = [`Coordinates] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CountQueuingStrategy = [`CountQueuingStrategy | `QueuingStrategy] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _Credential = [`Credential] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CredentialCreationOptions = [`CredentialCreationOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CredentialMediationRequirement = ([`L_s593_optional[@js "optional"] | `L_s684_required[@js "required"] | `L_s734_silent[@js "silent"]] [@js.enum])
      and _CredentialRequestOptions = [`CredentialRequestOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CredentialsContainer = [`CredentialsContainer] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _Crypto = [`Crypto] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CryptoKey = [`CryptoKey] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CryptoKeyPair = [`CryptoKeyPair] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CustomElementConstructor = [`CustomElementConstructor] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _CustomElementRegistry = [`CustomElementRegistry] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and 'T _CustomEvent = [`CustomEvent of 'T | `Event] intf
      [@@js.custom { of_js=(fun _T -> Obj.magic); to_js=(fun _T -> Obj.magic) }]
      and 'T _CustomEventInit = [`CustomEventInit of 'T | `EventInit] intf
      [@@js.custom { of_js=(fun _T -> Obj.magic); to_js=(fun _T -> Obj.magic) }]
      and _DOMError = [`DOMError] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DOMException = [`DOMException] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DOMHighResTimeStamp = float
      and _DOMImplementation = [`DOMImplementation] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DOML2DeprecatedColorProperty = [`DOML2DeprecatedColorProperty] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DOMMatrix = [`DOMMatrix | `DOMMatrixReadOnly] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DOMMatrix2DInit = [`DOMMatrix2DInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DOMMatrixInit = [`DOMMatrixInit | `DOMMatrix2DInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DOMMatrixReadOnly = [`DOMMatrixReadOnly] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DOMParser = [`DOMParser] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DOMPoint = [`DOMPoint | `DOMPointReadOnly] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DOMPointInit = [`DOMPointInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DOMPointReadOnly = [`DOMPointReadOnly] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DOMQuad = [`DOMQuad] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DOMQuadInit = [`DOMQuadInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DOMRect = [`DOMRect | `DOMRectReadOnly] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DOMRectInit = [`DOMRectInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DOMRectList = [`DOMRectList] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DOMRectReadOnly = [`DOMRectReadOnly] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DOMSettableTokenList = [`DOMSettableTokenList | `DOMTokenList] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DOMStringList = [`DOMStringList] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DOMStringMap = [`DOMStringMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DOMTimeStamp = float
      and _DOMTokenList = [`DOMTokenList] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DataCue = [`DataCue | `EventTarget | `TextTrackCue] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DataTransfer = [`DataTransfer] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DataTransferItem = [`DataTransferItem] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DataTransferItemList = [`DataTransferItemList] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DecodeErrorCallback = [`DecodeErrorCallback] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DecodeSuccessCallback = [`DecodeSuccessCallback] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DeferredPermissionRequest = [`DeferredPermissionRequest] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DelayNode = [`DelayNode | `AudioNode | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DelayOptions = [`DelayOptions | `AudioNodeOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DeviceAcceleration = [`DeviceAcceleration] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DeviceLightEvent = [`DeviceLightEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DeviceLightEventInit = [`DeviceLightEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DeviceMotionEvent = [`DeviceMotionEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DeviceMotionEventAcceleration = [`DeviceMotionEventAcceleration] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DeviceMotionEventAccelerationInit = [`DeviceMotionEventAccelerationInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DeviceMotionEventInit = [`DeviceMotionEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DeviceMotionEventRotationRate = [`DeviceMotionEventRotationRate] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DeviceMotionEventRotationRateInit = [`DeviceMotionEventRotationRateInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DeviceOrientationEvent = [`DeviceOrientationEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DeviceOrientationEventInit = [`DeviceOrientationEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DevicePermissionDescriptor = [`DevicePermissionDescriptor | `PermissionDescriptor] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DeviceRotationRate = [`DeviceRotationRate] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DhImportKeyParams = [`DhImportKeyParams | `Algorithm] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DhKeyAlgorithm = [`DhKeyAlgorithm | `KeyAlgorithm] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DhKeyDeriveParams = [`DhKeyDeriveParams | `Algorithm] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DhKeyGenParams = [`DhKeyGenParams | `Algorithm] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DirectionSetting = ([`L_s0[@js ""] | `L_s508_lr[@js "lr"] | `L_s692_rl[@js "rl"]] [@js.enum])
      and _DisplayCaptureSurfaceType = ([`L_s164_application[@js "application"] | `L_s215_browser[@js "browser"] | `L_s539_monitor[@js "monitor"] | `L_s871_window[@js "window"]] [@js.enum])
      and _DistanceModelType = ([`L_s337_exponential[@js "exponential"] | `L_s466_inverse[@js "inverse"] | `L_s491_linear[@js "linear"]] [@js.enum])
      and _Document = [`Document | `DocumentAndElementEventHandlers | `DocumentOrShadowRoot | `EventTarget | `GlobalEventHandlers | `Node | `NonElementParentNode | `ParentNode | `XPathEvaluatorBase] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DocumentAndElementEventHandlers = [`DocumentAndElementEventHandlers] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DocumentAndElementEventHandlersEventMap = [`DocumentAndElementEventHandlersEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DocumentEvent = [`DocumentEvent] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DocumentEventMap = [`DocumentEventMap | `DocumentAndElementEventHandlersEventMap | `GlobalEventHandlersEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DocumentFragment = [`DocumentFragment | `EventTarget | `Node | `NonElementParentNode | `ParentNode] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DocumentOrShadowRoot = [`DocumentOrShadowRoot] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DocumentReadyState = ([`L_s253_complete[@js "complete"] | `L_s460_interactive[@js "interactive"] | `L_s500_loading[@js "loading"]] [@js.enum])
      and _DocumentTimeline = [`DocumentTimeline | `AnimationTimeline] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DocumentTimelineOptions = [`DocumentTimelineOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DocumentType = [`DocumentType | `ChildNode | `EventTarget | `Node] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DoubleRange = [`DoubleRange] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DragEvent = [`DragEvent | `Event | `MouseEvent | `UIEvent] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DragEventInit = [`DragEventInit | `EventInit | `EventModifierInit | `MouseEventInit | `UIEventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DynamicsCompressorNode = [`DynamicsCompressorNode | `AudioNode | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _DynamicsCompressorOptions = [`DynamicsCompressorOptions | `AudioNodeOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _EXT_blend_minmax = [`EXT_blend_minmax] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _EXT_frag_depth = [`EXT_frag_depth] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _EXT_sRGB = [`EXT_sRGB] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _EXT_shader_texture_lod = [`EXT_shader_texture_lod] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _EXT_texture_filter_anisotropic = [`EXT_texture_filter_anisotropic] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _EcKeyAlgorithm = [`EcKeyAlgorithm | `KeyAlgorithm] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _EcKeyGenParams = [`EcKeyGenParams | `Algorithm] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _EcKeyImportParams = [`EcKeyImportParams | `Algorithm] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _EcdhKeyDeriveParams = [`EcdhKeyDeriveParams | `Algorithm] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _EcdsaParams = [`EcdsaParams | `Algorithm] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _EffectTiming = [`EffectTiming] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _Element = [`Element | `Animatable | `ChildNode | `EventTarget | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ElementCSSInlineStyle = [`ElementCSSInlineStyle] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ElementContentEditable = [`ElementContentEditable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ElementCreationOptions = [`ElementCreationOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ElementDefinitionOptions = [`ElementDefinitionOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ElementEventMap = [`ElementEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ElementTagNameMap = (_HTMLElementTagNameMap, (_SVGElementTagNameMap, (([`L_s133_a[@js "a"] | `L_s238_circle[@js "circle"] | `L_s244_clipPath[@js "clipPath"] | `L_s278_defs[@js "defs"] | `L_s285_desc[@js "desc"] | `L_s320_ellipse[@js "ellipse"] | `L_s342_feBlend[@js "feBlend"] | `L_s343_feColorMatrix[@js "feColorMatrix"] | `L_s344_feComponentTransfer[@js "feComponentTransfer"] | `L_s345_feComposite[@js "feComposite"] | `L_s346_feConvolveMatrix[@js "feConvolveMatrix"] | `L_s347_feDiffuseLighting[@js "feDiffuseLighting"] | `L_s348_feDisplacementMap[@js "feDisplacementMap"] | `L_s349_feDistantLight[@js "feDistantLight"] | `L_s350_feFlood[@js "feFlood"] | `L_s351_feFuncA[@js "feFuncA"] | `L_s352_feFuncB[@js "feFuncB"] | `L_s353_feFuncG[@js "feFuncG"] | `L_s354_feFuncR[@js "feFuncR"] | `L_s355_feGaussianBlur[@js "feGaussianBlur"] | `L_s356_feImage[@js "feImage"] | `L_s357_feMerge[@js "feMerge"] | `L_s358_feMergeNode[@js "feMergeNode"] | `L_s359_feMorphology[@js "feMorphology"] | `L_s360_feOffset[@js "feOffset"] | `L_s361_fePointLight[@js "fePointLight"] | `L_s362_feSpecularLighting[@js "feSpecularLighting"] | `L_s363_feSpotLight[@js "feSpotLight"] | `L_s364_feTile[@js "feTile"] | `L_s365_feTurbulence[@js "feTurbulence"] | `L_s369_filter[@js "filter"] | `L_s381_foreignObject[@js "foreignObject"] | `L_s391_g[@js "g"] | `L_s445_image[@js "image"] | `L_s488_line[@js "line"] | `L_s492_linearGradient[@js "linearGradient"] | `L_s518_marker[@js "marker"] | `L_s520_mask[@js "mask"] | `L_s532_metadata[@js "metadata"] | `L_s611_path[@js "path"] | `L_s612_pattern[@js "pattern"] | `L_s639_polygon[@js "polygon"] | `L_s640_polyline[@js "polyline"] | `L_s663_radialGradient[@js "radialGradient"] | `L_s669_rect[@js "rect"] | `L_s706_script[@js "script"] | `L_s761_stop[@js "stop"] | `L_s767_style[@js "style"] | `L_s778_svg[@js "svg"] | `L_s779_switch[@js "switch"] | `L_s780_symbol[@js "symbol"] | `L_s790_text[@js "text"] | `L_s794_textPath[@js "textPath"] | `L_s802_title[@js "title"] | `L_s819_tspan[@js "tspan"] | `L_s840_use[@js "use"] | `L_s849_view[@js "view"]] [@js.enum]), ([`L_s133_a[@js "a"] | `L_s135_abbr[@js "abbr"] | `L_s143_address[@js "address"] | `L_s163_applet[@js "applet"] | `L_s167_area[@js "area"] | `L_s169_article[@js "article"] | `L_s170_aside[@js "aside"] | `L_s173_audio[@js "audio"] | `L_s185_b[@js "b"] | `L_s192_base[@js "base"] | `L_s193_basefont[@js "basefont"] | `L_s195_bdi[@js "bdi"] | `L_s196_bdo[@js "bdo"] | `L_s206_blockquote[@js "blockquote"] | `L_s209_body[@js "body"] | `L_s214_br[@js "br"] | `L_s218_button[@js "button"] | `L_s229_canvas[@js "canvas"] | `L_s230_caption[@js "caption"] | `L_s239_cite[@js "cite"] | `L_s249_code[@js "code"] | `L_s250_col[@js "col"] | `L_s251_colgroup[@js "colgroup"] | `L_s268_data[@js "data"] | `L_s271_datalist[@js "datalist"] | `L_s273_dd[@js "dd"] | `L_s279_del[@js "del"] | `L_s287_details[@js "details"] | `L_s294_dfn[@js "dfn"] | `L_s295_dialog[@js "dialog"] | `L_s296_dir[@js "dir"] | `L_s303_div[@js "div"] | `L_s304_dl[@js "dl"] | `L_s317_dt[@js "dt"] | `L_s321_em[@js "em"] | `L_s322_embed[@js "embed"] | `L_s366_fieldset[@js "fieldset"] | `L_s367_figcaption[@js "figcaption"] | `L_s368_figure[@js "figure"] | `L_s378_font[@js "font"] | `L_s379_footer[@js "footer"] | `L_s382_form[@js "form"] | `L_s385_frame[@js "frame"] | `L_s386_frameset[@js "frameset"] | `L_s399_h1[@js "h1"] | `L_s400_h2[@js "h2"] | `L_s401_h3[@js "h3"] | `L_s402_h4[@js "h4"] | `L_s403_h5[@js "h5"] | `L_s404_h6[@js "h6"] | `L_s413_head[@js "head"] | `L_s414_header[@js "header"] | `L_s415_hgroup[@js "hgroup"] | `L_s423_hr[@js "hr"] | `L_s424_html[@js "html"] | `L_s427_i[@js "i"] | `L_s444_iframe[@js "iframe"] | `L_s447_img[@js "img"] | `L_s456_input[@js "input"] | `L_s457_ins[@js "ins"] | `L_s471_kbd[@js "kbd"] | `L_s476_label[@js "label"] | `L_s483_legend[@js "legend"] | `L_s484_li[@js "li"] | `L_s493_link[@js "link"] | `L_s511_main[@js "main"] | `L_s516_map[@js "map"] | `L_s517_mark[@js "mark"] | `L_s519_marquee[@js "marquee"] | `L_s528_menu[@js "menu"] | `L_s531_meta[@js "meta"] | `L_s533_meter[@js "meter"] | `L_s553_nav[@js "nav"] | `L_s574_noscript[@js "noscript"] | `L_s580_object[@js "object"] | `L_s584_ol[@js "ol"] | `L_s591_optgroup[@js "optgroup"] | `L_s592_option[@js "option"] | `L_s598_output[@js "output"] | `L_s601_p[@js "p"] | `L_s606_param[@js "param"] | `L_s621_picture[@js "picture"] | `L_s646_pre[@js "pre"] | `L_s657_progress[@js "progress"] | `L_s662_q[@js "q"] | `L_s695_rp[@js "rp"] | `L_s696_rt[@js "rt"] | `L_s700_ruby[@js "ruby"] | `L_s702_s[@js "s"] | `L_s704_samp[@js "samp"] | `L_s706_script[@js "script"] | `L_s711_section[@js "section"] | `L_s716_select[@js "select"] | `L_s736_slot[@js "slot"] | `L_s737_small[@js "small"] | `L_s742_source[@js "source"] | `L_s746_span[@js "span"] | `L_s766_strong[@js "strong"] | `L_s767_style[@js "style"] | `L_s769_sub[@js "sub"] | `L_s774_summary[@js "summary"] | `L_s775_sup[@js "sup"] | `L_s784_table[@js "table"] | `L_s785_tbody[@js "tbody"] | `L_s787_td[@js "td"] | `L_s788_template[@js "template"] | `L_s795_textarea[@js "textarea"] | `L_s796_tfoot[@js "tfoot"] | `L_s797_th[@js "th"] | `L_s798_thead[@js "thead"] | `L_s799_time[@js "time"] | `L_s802_title[@js "title"] | `L_s810_tr[@js "tr"] | `L_s811_track[@js "track"] | `L_s820_u[@js "u"] | `L_s822_ul[@js "ul"] | `L_s842_var[@js "var"] | `L_s847_video[@js "video"] | `L_s866_wbr[@js "wbr"]] [@js.enum])) Exclude.t_2) Pick.t_2) intersection2
      and _EndOfStreamError = ([`L_s274_decode[@js "decode"] | `L_s559_network[@js "network"]] [@js.enum])
      and _EndingType = ([`L_s551_native[@js "native"] | `L_s816_transparent[@js "transparent"]] [@js.enum])
      and _ErrorEvent = [`ErrorEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ErrorEventInit = [`ErrorEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _Event = [`Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _EventHandlerNonNull = [`EventHandlerNonNull] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _EventInit = [`EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _EventListener = [`EventListener] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _EventListenerObject = [`EventListenerObject] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _EventListenerOptions = [`EventListenerOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _EventListenerOrEventListenerObject = (_EventListener, _EventListenerObject) union2
      and _EventModifierInit = [`EventModifierInit | `EventInit | `UIEventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _EventSource = [`EventSource | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _EventSourceEventMap = [`EventSourceEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _EventSourceInit = [`EventSourceInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _EventTarget = [`EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ExceptionInformation = [`ExceptionInformation] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ExtensionScriptApis = [`ExtensionScriptApis] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _External = [`External] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _File = [`File | `Blob] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _FileList = [`FileList] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _FilePropertyBag = [`FilePropertyBag | `BlobPropertyBag] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _FileReader = [`FileReader | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _FileReaderEventMap = [`FileReaderEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _FillMode = ([`L_s183_auto[@js "auto"] | `L_s189_backwards[@js "backwards"] | `L_s210_both[@js "both"] | `L_s384_forwards[@js "forwards"] | `L_s571_none[@js "none"]] [@js.enum])
      and _Float32List = (Float32Array.t_0, _GLfloat) or_array
      and _FocusEvent = [`FocusEvent | `Event | `UIEvent] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _FocusEventInit = [`FocusEventInit | `EventInit | `UIEventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _FocusNavigationEvent = [`FocusNavigationEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _FocusNavigationEventInit = [`FocusNavigationEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _FocusNavigationOrigin = [`FocusNavigationOrigin] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _FocusOptions = [`FocusOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ForEachCallback = [`ForEachCallback] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _FormData = [`FormData] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _FormDataEntryValue = _File or_string
      and _FrameRequestCallback = [`FrameRequestCallback] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _FullscreenNavigationUI = ([`L_s183_auto[@js "auto"] | `L_s417_hide[@js "hide"] | `L_s730_show[@js "show"]] [@js.enum])
      and _FullscreenOptions = [`FullscreenOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _FunctionStringCallback = [`FunctionStringCallback] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _GLbitfield = float
      and _GLboolean = bool
      and _GLclampf = float
      and _GLenum = float
      and _GLfloat = float
      and _GLint = float
      and _GLint64 = float
      and _GLintptr = float
      and _GLsizei = float
      and _GLsizeiptr = float
      and _GLuint = float
      and _GLuint64 = float
      and _GainNode = [`GainNode | `AudioNode | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _GainOptions = [`GainOptions | `AudioNodeOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _Gamepad = [`Gamepad] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _GamepadButton = [`GamepadButton] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _GamepadEvent = [`GamepadEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _GamepadEventInit = [`GamepadEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _GamepadHand = ([`L_s0[@js ""] | `L_s482_left[@js "left"] | `L_s691_right[@js "right"]] [@js.enum])
      and _GamepadHapticActuator = [`GamepadHapticActuator] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _GamepadHapticActuatorType = ([`L_s846_vibration[@js "vibration"]] [@js.enum])
      and _GamepadMappingType = ([`L_s0[@js ""] | `L_s756_standard[@js "standard"]] [@js.enum])
      and _GamepadPose = [`GamepadPose] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _GenericTransformStream = [`GenericTransformStream] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _Geolocation = [`Geolocation] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _GetNotificationOptions = [`GetNotificationOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _GetRootNodeOptions = [`GetRootNodeOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _GlobalEventHandlers = [`GlobalEventHandlers] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _GlobalEventHandlersEventMap = [`GlobalEventHandlersEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLAllCollection = [`HTMLAllCollection] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLAnchorElement = [`HTMLAnchorElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLHyperlinkElementUtils | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLAppletElement = [`HTMLAppletElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLAreaElement = [`HTMLAreaElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLHyperlinkElementUtils | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLAudioElement = [`HTMLAudioElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLMediaElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLBRElement = [`HTMLBRElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLBaseElement = [`HTMLBaseElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLBaseFontElement = [`HTMLBaseFontElement | `Animatable | `ChildNode | `DOML2DeprecatedColorProperty | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLBodyElement = [`HTMLBodyElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable | `WindowEventHandlers] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLBodyElementEventMap = [`HTMLBodyElementEventMap | `DocumentAndElementEventHandlersEventMap | `ElementEventMap | `GlobalEventHandlersEventMap | `HTMLElementEventMap | `WindowEventHandlersEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLButtonElement = [`HTMLButtonElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLCanvasElement = [`HTMLCanvasElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLCollection = [`HTMLCollection | `HTMLCollectionBase] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLCollectionBase = [`HTMLCollectionBase] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and 'T _HTMLCollectionOf = [`HTMLCollectionOf of 'T | `HTMLCollectionBase] intf
      [@@js.custom { of_js=(fun _T -> Obj.magic); to_js=(fun _T -> Obj.magic) }]
      and _HTMLDListElement = [`HTMLDListElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLDataElement = [`HTMLDataElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLDataListElement = [`HTMLDataListElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLDetailsElement = [`HTMLDetailsElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLDialogElement = [`HTMLDialogElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLDirectoryElement = [`HTMLDirectoryElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLDivElement = [`HTMLDivElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLDocument = [`HTMLDocument | `Document | `DocumentAndElementEventHandlers | `DocumentOrShadowRoot | `EventTarget | `GlobalEventHandlers | `Node | `NonElementParentNode | `ParentNode | `XPathEvaluatorBase] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLElement = [`HTMLElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLElementDeprecatedTagNameMap = [`HTMLElementDeprecatedTagNameMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLElementEventMap = [`HTMLElementEventMap | `DocumentAndElementEventHandlersEventMap | `ElementEventMap | `GlobalEventHandlersEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLElementTagNameMap = [`HTMLElementTagNameMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLEmbedElement = [`HTMLEmbedElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLFieldSetElement = [`HTMLFieldSetElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLFontElement = [`HTMLFontElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLFormControlsCollection = [`HTMLFormControlsCollection | `HTMLCollectionBase] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLFormElement = [`HTMLFormElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLFrameElement = [`HTMLFrameElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLFrameSetElement = [`HTMLFrameSetElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable | `WindowEventHandlers] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLFrameSetElementEventMap = [`HTMLFrameSetElementEventMap | `DocumentAndElementEventHandlersEventMap | `ElementEventMap | `GlobalEventHandlersEventMap | `HTMLElementEventMap | `WindowEventHandlersEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLHRElement = [`HTMLHRElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLHeadElement = [`HTMLHeadElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLHeadingElement = [`HTMLHeadingElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLHtmlElement = [`HTMLHtmlElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLHyperlinkElementUtils = [`HTMLHyperlinkElementUtils] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLIFrameElement = [`HTMLIFrameElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLImageElement = [`HTMLImageElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLInputElement = [`HTMLInputElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLLIElement = [`HTMLLIElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLLabelElement = [`HTMLLabelElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLLegendElement = [`HTMLLegendElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLLinkElement = [`HTMLLinkElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `LinkStyle | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLMapElement = [`HTMLMapElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLMarqueeElement = [`HTMLMarqueeElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLMarqueeElementEventMap = [`HTMLMarqueeElementEventMap | `DocumentAndElementEventHandlersEventMap | `ElementEventMap | `GlobalEventHandlersEventMap | `HTMLElementEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLMediaElement = [`HTMLMediaElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLMediaElementEventMap = [`HTMLMediaElementEventMap | `DocumentAndElementEventHandlersEventMap | `ElementEventMap | `GlobalEventHandlersEventMap | `HTMLElementEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLMenuElement = [`HTMLMenuElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLMetaElement = [`HTMLMetaElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLMeterElement = [`HTMLMeterElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLModElement = [`HTMLModElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLOListElement = [`HTMLOListElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLObjectElement = [`HTMLObjectElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLOptGroupElement = [`HTMLOptGroupElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLOptionElement = [`HTMLOptionElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLOptionsCollection = [`HTMLOptionsCollection | `HTMLCollectionBase | `HTMLCollectionOf of _HTMLOptionElement] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLOrSVGElement = [`HTMLOrSVGElement] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLOrSVGImageElement = (_HTMLImageElement, _SVGImageElement) union2
      and _HTMLOrSVGScriptElement = (_HTMLScriptElement, _SVGScriptElement) union2
      and _HTMLOutputElement = [`HTMLOutputElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLParagraphElement = [`HTMLParagraphElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLParamElement = [`HTMLParamElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLPictureElement = [`HTMLPictureElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLPreElement = [`HTMLPreElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLProgressElement = [`HTMLProgressElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLQuoteElement = [`HTMLQuoteElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLScriptElement = [`HTMLScriptElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLSelectElement = [`HTMLSelectElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLSlotElement = [`HTMLSlotElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLSourceElement = [`HTMLSourceElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLSpanElement = [`HTMLSpanElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLStyleElement = [`HTMLStyleElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `LinkStyle | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLTableCaptionElement = [`HTMLTableCaptionElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLTableCellElement = [`HTMLTableCellElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLTableColElement = [`HTMLTableColElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLTableDataCellElement = [`HTMLTableDataCellElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `HTMLTableCellElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLTableElement = [`HTMLTableElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLTableHeaderCellElement = [`HTMLTableHeaderCellElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `HTMLTableCellElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLTableRowElement = [`HTMLTableRowElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLTableSectionElement = [`HTMLTableSectionElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLTemplateElement = [`HTMLTemplateElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLTextAreaElement = [`HTMLTextAreaElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLTimeElement = [`HTMLTimeElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLTitleElement = [`HTMLTitleElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLTrackElement = [`HTMLTrackElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLUListElement = [`HTMLUListElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLUnknownElement = [`HTMLUnknownElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLVideoElement = [`HTMLVideoElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `ElementContentEditable | `EventTarget | `GlobalEventHandlers | `HTMLElement | `HTMLMediaElement | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HTMLVideoElementEventMap = [`HTMLVideoElementEventMap | `DocumentAndElementEventHandlersEventMap | `ElementEventMap | `GlobalEventHandlersEventMap | `HTMLElementEventMap | `HTMLMediaElementEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HashAlgorithmIdentifier = _AlgorithmIdentifier
      and _HashChangeEvent = [`HashChangeEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HashChangeEventInit = [`HashChangeEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _Headers = [`Headers] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HeadersInit = ((_Headers, (string, string) Record.t_2) union2, string list) or_array
      and _History = [`History] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HkdfCtrParams = [`HkdfCtrParams | `Algorithm] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HkdfParams = [`HkdfParams | `Algorithm] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HmacImportParams = [`HmacImportParams | `Algorithm] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HmacKeyAlgorithm = [`HmacKeyAlgorithm | `KeyAlgorithm] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _HmacKeyGenParams = [`HmacKeyGenParams | `Algorithm] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _IDBArrayKey = [`IDBArrayKey | `Array of _IDBValidKey] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _IDBCursor = [`IDBCursor] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _IDBCursorDirection = ([`L_s561_next[@js "next"] | `L_s562_nextunique[@js "nextunique"] | `L_s651_prev[@js "prev"] | `L_s652_prevunique[@js "prevunique"]] [@js.enum])
      and _IDBCursorWithValue = [`IDBCursorWithValue | `IDBCursor] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _IDBDatabase = [`IDBDatabase | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _IDBDatabaseEventMap = [`IDBDatabaseEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _IDBFactory = [`IDBFactory] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _IDBIndex = [`IDBIndex] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _IDBIndexParameters = [`IDBIndexParameters] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _IDBKeyPath = string
      and _IDBKeyRange = [`IDBKeyRange] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _IDBObjectStore = [`IDBObjectStore] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _IDBObjectStoreParameters = [`IDBObjectStoreParameters] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _IDBOpenDBRequest = [`IDBOpenDBRequest | `EventTarget | `IDBRequest of _IDBDatabase] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _IDBOpenDBRequestEventMap = [`IDBOpenDBRequestEventMap | `IDBRequestEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and 'T _IDBRequest = [`IDBRequest of 'T | `EventTarget] intf
      [@@js.custom { of_js=(fun _T -> Obj.magic); to_js=(fun _T -> Obj.magic) }]
      and _IDBRequestEventMap = [`IDBRequestEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _IDBRequestReadyState = ([`L_s306_done[@js "done"] | `L_s617_pending[@js "pending"]] [@js.enum])
      and _IDBTransaction = [`IDBTransaction | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _IDBTransactionEventMap = [`IDBTransactionEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _IDBTransactionMode = ([`L_s666_readonly[@js "readonly"] | `L_s667_readwrite[@js "readwrite"] | `L_s844_versionchange[@js "versionchange"]] [@js.enum])
      and _IDBValidKey = (_BufferSource, Date.t_0, _IDBArrayKey) union3 or_string or_number
      and _IDBVersionChangeEvent = [`IDBVersionChangeEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _IDBVersionChangeEventInit = [`IDBVersionChangeEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _IIRFilterNode = [`IIRFilterNode | `AudioNode | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _IIRFilterOptions = [`IIRFilterOptions | `AudioNodeOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ImageBitmap = [`ImageBitmap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ImageBitmapOptions = [`ImageBitmapOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ImageBitmapRenderingContext = [`ImageBitmapRenderingContext] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ImageBitmapRenderingContextSettings = [`ImageBitmapRenderingContextSettings] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ImageBitmapSource = (_Blob, _CanvasImageSource, _ImageData) union3
      and _ImageData = [`ImageData] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ImageEncodeOptions = [`ImageEncodeOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ImageSmoothingQuality = ([`L_s418_high[@js "high"] | `L_s504_low[@js "low"] | `L_s526_medium[@js "medium"]] [@js.enum])
      and _InnerHTML = [`InnerHTML] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _InputDeviceInfo = [`InputDeviceInfo | `MediaDeviceInfo] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _InputEvent = [`InputEvent | `Event | `UIEvent] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _InputEventInit = [`InputEventInit | `EventInit | `UIEventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _InsertPosition = ([`L_s146_afterbegin[@js "afterbegin"] | `L_s147_afterend[@js "afterend"] | `L_s197_beforebegin[@js "beforebegin"] | `L_s198_beforeend[@js "beforeend"]] [@js.enum])
      and _Int32List = (Int32Array.t_0, _GLint) or_array
      and _IntersectionObserver = [`IntersectionObserver] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _IntersectionObserverCallback = [`IntersectionObserverCallback] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _IntersectionObserverEntry = [`IntersectionObserverEntry] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _IntersectionObserverEntryInit = [`IntersectionObserverEntryInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _IntersectionObserverInit = [`IntersectionObserverInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _IterationCompositeOperation = ([`L_s138_accumulate[@js "accumulate"] | `L_s680_replace[@js "replace"]] [@js.enum])
      and _JsonWebKey = [`JsonWebKey] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _KeyAlgorithm = [`KeyAlgorithm] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _KeyFormat = ([`L_s469_jwk[@js "jwk"] | `L_s623_pkcs8[@js "pkcs8"] | `L_s665_raw[@js "raw"] | `L_s751_spki[@js "spki"]] [@js.enum])
      and _KeyType = ([`L_s654_private[@js "private"] | `L_s659_public[@js "public"] | `L_s710_secret[@js "secret"]] [@js.enum])
      and _KeyUsage = ([`L_s275_decrypt[@js "decrypt"] | `L_s283_deriveBits[@js "deriveBits"] | `L_s284_deriveKey[@js "deriveKey"] | `L_s325_encrypt[@js "encrypt"] | `L_s732_sign[@js "sign"] | `L_s830_unwrapKey[@js "unwrapKey"] | `L_s843_verify[@js "verify"] | `L_s873_wrapKey[@js "wrapKey"]] [@js.enum])
      and _KeyboardEvent = [`KeyboardEvent | `Event | `UIEvent] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _KeyboardEventInit = [`KeyboardEventInit | `EventInit | `EventModifierInit | `UIEventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _Keyframe = [`Keyframe] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _KeyframeAnimationOptions = [`KeyframeAnimationOptions | `EffectTiming | `KeyframeEffectOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _KeyframeEffect = [`KeyframeEffect | `AnimationEffect] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _KeyframeEffectOptions = [`KeyframeEffectOptions | `EffectTiming] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _LineAlignSetting = ([`L_s232_center[@js "center"] | `L_s327_end[@js "end"] | `L_s757_start[@js "start"]] [@js.enum])
      and _LineAndPositionSetting = _AutoKeyword or_number
      and _LinkStyle = [`LinkStyle] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ListeningState = ([`L_s141_active[@js "active"] | `L_s299_disambiguation[@js "disambiguation"] | `L_s449_inactive[@js "inactive"]] [@js.enum])
      and _ListeningStateChangedEvent = [`ListeningStateChangedEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _Location = [`Location] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MSAssertion = [`MSAssertion] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MSBlobBuilder = [`MSBlobBuilder] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MSCredentialType = ([`L_s27_FIDO_2_0[@js "FIDO_2_0"]] [@js.enum])
      and _MSFIDOCredentialAssertion = [`MSFIDOCredentialAssertion | `MSAssertion] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MSFIDOSignature = [`MSFIDOSignature] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MSFIDOSignatureAssertion = [`MSFIDOSignatureAssertion | `MSAssertion] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MSFileSaver = [`MSFileSaver] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MSGesture = [`MSGesture] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MSGestureEvent = [`MSGestureEvent | `Event | `UIEvent] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MSGraphicsTrust = [`MSGraphicsTrust] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MSInputMethodContext = [`MSInputMethodContext | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MSInputMethodContextEventMap = [`MSInputMethodContextEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MSLaunchUriCallback = [`MSLaunchUriCallback] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MSMediaKeyError = [`MSMediaKeyError] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MSMediaKeyMessageEvent = [`MSMediaKeyMessageEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MSMediaKeyNeededEvent = [`MSMediaKeyNeededEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MSMediaKeySession = [`MSMediaKeySession | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MSMediaKeys = [`MSMediaKeys] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MSNavigatorDoNotTrack = [`MSNavigatorDoNotTrack] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MSPointerEvent = [`MSPointerEvent | `Event | `MouseEvent | `UIEvent] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MSStream = [`MSStream] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MSTransportType = ([`L_s8_BT[@js "BT"] | `L_s23_Embedded[@js "Embedded"] | `L_s73_NFC[@js "NFC"] | `L_s119_USB[@js "USB"]] [@js.enum])
      and _MSWebViewPermissionState = ([`L_s150_allow[@js "allow"] | `L_s277_defer[@js "defer"] | `L_s282_deny[@js "deny"] | `L_s824_unknown[@js "unknown"]] [@js.enum])
      and _MSWebViewPermissionType = ([`L_s394_geolocation[@js "geolocation"] | `L_s525_media[@js "media"] | `L_s632_pointerlock[@js "pointerlock"] | `L_s825_unlimitedIndexedDBQuota[@js "unlimitedIndexedDBQuota"] | `L_s869_webnotifications[@js "webnotifications"]] [@js.enum])
      and _MediaDeviceInfo = [`MediaDeviceInfo] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaDeviceKind = ([`L_s177_audioinput[@js "audioinput"] | `L_s178_audiooutput[@js "audiooutput"] | `L_s848_videoinput[@js "videoinput"]] [@js.enum])
      and _MediaDevices = [`MediaDevices | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaDevicesEventMap = [`MediaDevicesEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaElementAudioSourceNode = [`MediaElementAudioSourceNode | `AudioNode | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaElementAudioSourceOptions = [`MediaElementAudioSourceOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaEncryptedEvent = [`MediaEncryptedEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaEncryptedEventInit = [`MediaEncryptedEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaError = [`MediaError] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaKeyMessageEvent = [`MediaKeyMessageEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaKeyMessageEventInit = [`MediaKeyMessageEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaKeyMessageType = ([`L_s453_individualization_request[@js "individualization-request"] | `L_s485_license_release[@js "license-release"] | `L_s486_license_renewal[@js "license-renewal"] | `L_s487_license_request[@js "license-request"]] [@js.enum])
      and _MediaKeySession = [`MediaKeySession | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaKeySessionEventMap = [`MediaKeySessionEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaKeySessionType = ([`L_s618_persistent_license[@js "persistent-license"] | `L_s789_temporary[@js "temporary"]] [@js.enum])
      and _MediaKeyStatus = ([`L_s335_expired[@js "expired"] | `L_s462_internal_error[@js "internal-error"] | `L_s599_output_downscaled[@js "output-downscaled"] | `L_s600_output_restricted[@js "output-restricted"] | `L_s675_released[@js "released"] | `L_s760_status_pending[@js "status-pending"] | `L_s838_usable[@js "usable"]] [@js.enum])
      and _MediaKeyStatusMap = [`MediaKeyStatusMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaKeySystemAccess = [`MediaKeySystemAccess] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaKeySystemConfiguration = [`MediaKeySystemConfiguration] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaKeySystemMediaCapability = [`MediaKeySystemMediaCapability] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaKeys = [`MediaKeys] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaKeysRequirement = ([`L_s575_not_allowed[@js "not-allowed"] | `L_s593_optional[@js "optional"] | `L_s684_required[@js "required"]] [@js.enum])
      and _MediaList = [`MediaList] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaQueryList = [`MediaQueryList | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaQueryListEvent = [`MediaQueryListEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaQueryListEventInit = [`MediaQueryListEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaQueryListEventMap = [`MediaQueryListEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaSource = [`MediaSource | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaSourceEventMap = [`MediaSourceEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaStream = [`MediaStream | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaStreamAudioDestinationNode = [`MediaStreamAudioDestinationNode | `AudioNode | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaStreamAudioSourceNode = [`MediaStreamAudioSourceNode | `AudioNode | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaStreamAudioSourceOptions = [`MediaStreamAudioSourceOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaStreamConstraints = [`MediaStreamConstraints] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaStreamError = [`MediaStreamError] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaStreamErrorEvent = [`MediaStreamErrorEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaStreamErrorEventInit = [`MediaStreamErrorEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaStreamEvent = [`MediaStreamEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaStreamEventInit = [`MediaStreamEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaStreamEventMap = [`MediaStreamEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaStreamTrack = [`MediaStreamTrack | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaStreamTrackAudioSourceNode = [`MediaStreamTrackAudioSourceNode | `AudioNode | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaStreamTrackAudioSourceOptions = [`MediaStreamTrackAudioSourceOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaStreamTrackEvent = [`MediaStreamTrackEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaStreamTrackEventInit = [`MediaStreamTrackEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaStreamTrackEventMap = [`MediaStreamTrackEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaStreamTrackState = ([`L_s328_ended[@js "ended"] | `L_s495_live[@js "live"]] [@js.enum])
      and _MediaTrackCapabilities = [`MediaTrackCapabilities] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaTrackConstraintSet = [`MediaTrackConstraintSet] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaTrackConstraints = [`MediaTrackConstraints | `MediaTrackConstraintSet] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaTrackSettings = [`MediaTrackSettings] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MediaTrackSupportedConstraints = [`MediaTrackSupportedConstraints] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MessageChannel = [`MessageChannel] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MessageEvent = [`MessageEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MessageEventInit = [`MessageEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MessageEventSource = (_MessagePort, _ServiceWorker, _WindowProxy) union3
      and _MessagePort = [`MessagePort | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MessagePortEventMap = [`MessagePortEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MidiPermissionDescriptor = [`MidiPermissionDescriptor | `PermissionDescriptor] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MimeType = [`MimeType] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MimeTypeArray = [`MimeTypeArray] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MouseEvent = [`MouseEvent | `Event | `UIEvent] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MouseEventInit = [`MouseEventInit | `EventInit | `EventModifierInit | `UIEventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MouseWheelEvent = _WheelEvent
      and _MultiCacheQueryOptions = [`MultiCacheQueryOptions | `CacheQueryOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MutationCallback = [`MutationCallback] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MutationEvent = [`MutationEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MutationObserver = [`MutationObserver] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MutationObserverInit = [`MutationObserverInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MutationRecord = [`MutationRecord] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _MutationRecordType = ([`L_s172_attributes[@js "attributes"] | `L_s235_characterData[@js "characterData"] | `L_s237_childList[@js "childList"]] [@js.enum])
      and _NamedCurve = string
      and _NamedNodeMap = [`NamedNodeMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _NavigationPreloadManager = [`NavigationPreloadManager] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _NavigationPreloadState = [`NavigationPreloadState] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _NavigationReason = ([`L_s307_down[@js "down"] | `L_s482_left[@js "left"] | `L_s691_right[@js "right"] | `L_s831_up[@js "up"]] [@js.enum])
      and _NavigationType = ([`L_s186_back_forward[@js "back_forward"] | `L_s554_navigate[@js "navigate"] | `L_s649_prerender[@js "prerender"] | `L_s676_reload[@js "reload"]] [@js.enum])
      and _Navigator = [`Navigator | `MSFileSaver | `MSNavigatorDoNotTrack | `NavigatorAutomationInformation | `NavigatorBeacon | `NavigatorConcurrentHardware | `NavigatorContentUtils | `NavigatorCookies | `NavigatorID | `NavigatorLanguage | `NavigatorOnLine | `NavigatorPlugins | `NavigatorStorage] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _NavigatorAutomationInformation = [`NavigatorAutomationInformation] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _NavigatorBeacon = [`NavigatorBeacon] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _NavigatorConcurrentHardware = [`NavigatorConcurrentHardware] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _NavigatorContentUtils = [`NavigatorContentUtils] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _NavigatorCookies = [`NavigatorCookies] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _NavigatorID = [`NavigatorID] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _NavigatorLanguage = [`NavigatorLanguage] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _NavigatorOnLine = [`NavigatorOnLine] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _NavigatorPlugins = [`NavigatorPlugins] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _NavigatorStorage = [`NavigatorStorage] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _NavigatorUserMediaErrorCallback = [`NavigatorUserMediaErrorCallback] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _NavigatorUserMediaSuccessCallback = [`NavigatorUserMediaSuccessCallback] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _Node = [`Node | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _NodeFilter = [`NodeFilter] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _NodeIterator = [`NodeIterator] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _NodeList = [`NodeList] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and 'TNode _NodeListOf = [`NodeListOf of 'TNode | `NodeList] intf
      [@@js.custom { of_js=(fun _TNode -> Obj.magic); to_js=(fun _TNode -> Obj.magic) }]
      and _NonDocumentTypeChildNode = [`NonDocumentTypeChildNode] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _NonElementParentNode = [`NonElementParentNode] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _Notification = [`Notification | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _NotificationAction = [`NotificationAction] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _NotificationDirection = ([`L_s183_auto[@js "auto"] | `L_s509_ltr[@js "ltr"] | `L_s698_rtl[@js "rtl"]] [@js.enum])
      and _NotificationEventMap = [`NotificationEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _NotificationOptions = [`NotificationOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _NotificationPermission = ([`L_s276_default[@js "default"] | `L_s281_denied[@js "denied"] | `L_s397_granted[@js "granted"]] [@js.enum])
      and _NotificationPermissionCallback = [`NotificationPermissionCallback] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _OES_element_index_uint = [`OES_element_index_uint] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _OES_standard_derivatives = [`OES_standard_derivatives] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _OES_texture_float = [`OES_texture_float] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _OES_texture_float_linear = [`OES_texture_float_linear] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _OES_texture_half_float = [`OES_texture_half_float] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _OES_texture_half_float_linear = [`OES_texture_half_float_linear] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _OES_vertex_array_object = [`OES_vertex_array_object] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _OfflineAudioCompletionEvent = [`OfflineAudioCompletionEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _OfflineAudioCompletionEventInit = [`OfflineAudioCompletionEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _OfflineAudioContext = [`OfflineAudioContext | `BaseAudioContext | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _OfflineAudioContextEventMap = [`OfflineAudioContextEventMap | `BaseAudioContextEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _OfflineAudioContextOptions = [`OfflineAudioContextOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _OffscreenCanvas = [`OffscreenCanvas | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _OffscreenCanvasRenderingContext2D = [`OffscreenCanvasRenderingContext2D | `CanvasCompositing | `CanvasDrawImage | `CanvasDrawPath | `CanvasFillStrokeStyles | `CanvasFilters | `CanvasImageData | `CanvasImageSmoothing | `CanvasPath | `CanvasPathDrawingStyles | `CanvasRect | `CanvasShadowStyles | `CanvasState | `CanvasText | `CanvasTextDrawingStyles | `CanvasTransform] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _OffscreenRenderingContext = (_ImageBitmapRenderingContext, _OffscreenCanvasRenderingContext2D, _WebGL2RenderingContext, _WebGLRenderingContext) union4
      and _OffscreenRenderingContextId = ([`L_s1_2d[@js "2d"] | `L_s202_bitmaprenderer[@js "bitmaprenderer"] | `L_s867_webgl[@js "webgl"] | `L_s868_webgl2[@js "webgl2"]] [@js.enum])
      and _OnBeforeUnloadEventHandler = _OnBeforeUnloadEventHandlerNonNull or_null
      and _OnBeforeUnloadEventHandlerNonNull = [`OnBeforeUnloadEventHandlerNonNull] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _OnErrorEventHandler = _OnErrorEventHandlerNonNull or_null
      and _OnErrorEventHandlerNonNull = [`OnErrorEventHandlerNonNull] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _OptionalEffectTiming = [`OptionalEffectTiming] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _OrientationLockType = ([`L_s161_any[@js "any"] | `L_s477_landscape[@js "landscape"] | `L_s478_landscape_primary[@js "landscape-primary"] | `L_s479_landscape_secondary[@js "landscape-secondary"] | `L_s552_natural[@js "natural"] | `L_s642_portrait[@js "portrait"] | `L_s643_portrait_primary[@js "portrait-primary"] | `L_s644_portrait_secondary[@js "portrait-secondary"]] [@js.enum])
      and _OrientationType = ([`L_s478_landscape_primary[@js "landscape-primary"] | `L_s479_landscape_secondary[@js "landscape-secondary"] | `L_s643_portrait_primary[@js "portrait-primary"] | `L_s644_portrait_secondary[@js "portrait-secondary"]] [@js.enum])
      and _OscillatorNode = [`OscillatorNode | `AudioNode | `AudioScheduledSourceNode | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _OscillatorOptions = [`OscillatorOptions | `AudioNodeOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _OscillatorType = ([`L_s266_custom[@js "custom"] | `L_s705_sawtooth[@js "sawtooth"] | `L_s735_sine[@js "sine"] | `L_s752_square[@js "square"] | `L_s818_triangle[@js "triangle"]] [@js.enum])
      and _OverSampleType = ([`L_s2_2x[@js "2x"] | `L_s3_4x[@js "4x"] | `L_s571_none[@js "none"]] [@js.enum])
      and _OverconstrainedError = [`OverconstrainedError] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _OverflowEvent = [`OverflowEvent | `Event | `UIEvent] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PageTransitionEvent = [`PageTransitionEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PageTransitionEventInit = [`PageTransitionEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PannerNode = [`PannerNode | `AudioNode | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PannerOptions = [`PannerOptions | `AudioNodeOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PanningModelType = ([`L_s31_HRTF[@js "HRTF"] | `L_s331_equalpower[@js "equalpower"]] [@js.enum])
      and _ParentNode = [`ParentNode] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _Path2D = [`Path2D | `CanvasPath] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PaymentAddress = [`PaymentAddress] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PaymentComplete = ([`L_s340_fail[@js "fail"] | `L_s773_success[@js "success"] | `L_s824_unknown[@js "unknown"]] [@js.enum])
      and _PaymentCurrencyAmount = [`PaymentCurrencyAmount] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PaymentDetailsBase = [`PaymentDetailsBase] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PaymentDetailsInit = [`PaymentDetailsInit | `PaymentDetailsBase] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PaymentDetailsModifier = [`PaymentDetailsModifier] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PaymentDetailsUpdate = [`PaymentDetailsUpdate | `PaymentDetailsBase] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PaymentItem = [`PaymentItem] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PaymentMethodData = [`PaymentMethodData] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PaymentOptions = [`PaymentOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PaymentRequest = [`PaymentRequest | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PaymentRequestEventMap = [`PaymentRequestEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PaymentRequestUpdateEvent = [`PaymentRequestUpdateEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PaymentRequestUpdateEventInit = [`PaymentRequestUpdateEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PaymentResponse = [`PaymentResponse] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PaymentShippingOption = [`PaymentShippingOption] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PaymentShippingType = ([`L_s280_delivery[@js "delivery"] | `L_s620_pickup[@js "pickup"] | `L_s727_shipping[@js "shipping"]] [@js.enum])
      and _Pbkdf2Params = [`Pbkdf2Params | `Algorithm] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PerfWidgetExternal = [`PerfWidgetExternal] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _Performance = [`Performance | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PerformanceEntry = [`PerformanceEntry] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PerformanceEntryList = _PerformanceEntry list
      and _PerformanceEventMap = [`PerformanceEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PerformanceMark = [`PerformanceMark | `PerformanceEntry] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PerformanceMeasure = [`PerformanceMeasure | `PerformanceEntry] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PerformanceNavigation = [`PerformanceNavigation] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PerformanceNavigationTiming = [`PerformanceNavigationTiming | `PerformanceEntry | `PerformanceResourceTiming] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PerformanceObserver = [`PerformanceObserver] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PerformanceObserverCallback = [`PerformanceObserverCallback] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PerformanceObserverEntryList = [`PerformanceObserverEntryList] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PerformanceObserverInit = [`PerformanceObserverInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PerformanceResourceTiming = [`PerformanceResourceTiming | `PerformanceEntry] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PerformanceTiming = [`PerformanceTiming] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PeriodicWave = [`PeriodicWave] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PeriodicWaveConstraints = [`PeriodicWaveConstraints] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PeriodicWaveOptions = [`PeriodicWaveOptions | `PeriodicWaveConstraints] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PermissionDescriptor = [`PermissionDescriptor] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PermissionName = ([`L_s137_accelerometer[@js "accelerometer"] | `L_s155_ambient_light_sensor[@js "ambient-light-sensor"] | `L_s187_background_sync[@js "background-sync"] | `L_s207_bluetooth[@js "bluetooth"] | `L_s222_camera[@js "camera"] | `L_s245_clipboard[@js "clipboard"] | `L_s288_device_info[@js "device-info"] | `L_s394_geolocation[@js "geolocation"] | `L_s398_gyroscope[@js "gyroscope"] | `L_s510_magnetometer[@js "magnetometer"] | `L_s534_microphone[@js "microphone"] | `L_s536_midi[@js "midi"] | `L_s577_notifications[@js "notifications"] | `L_s619_persistent_storage[@js "persistent-storage"] | `L_s661_push[@js "push"] | `L_s747_speaker[@js "speaker"]] [@js.enum])
      and _PermissionRequest = [`PermissionRequest | `DeferredPermissionRequest] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PermissionRequestedEvent = [`PermissionRequestedEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PermissionState = ([`L_s281_denied[@js "denied"] | `L_s397_granted[@js "granted"] | `L_s658_prompt[@js "prompt"]] [@js.enum])
      and _PermissionStatus = [`PermissionStatus | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PermissionStatusEventMap = [`PermissionStatusEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _Permissions = [`Permissions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PipeOptions = [`PipeOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PlaybackDirection = ([`L_s153_alternate[@js "alternate"] | `L_s154_alternate_reverse[@js "alternate-reverse"] | `L_s573_normal[@js "normal"] | `L_s690_reverse[@js "reverse"]] [@js.enum])
      and _Plugin = [`Plugin] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PluginArray = [`PluginArray] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PointerEvent = [`PointerEvent | `Event | `MouseEvent | `UIEvent] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PointerEventInit = [`PointerEventInit | `EventInit | `EventModifierInit | `MouseEventInit | `UIEventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PopStateEvent = [`PopStateEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PopStateEventInit = [`PopStateEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _Position = [`Position] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PositionAlignSetting = ([`L_s183_auto[@js "auto"] | `L_s232_center[@js "center"] | `L_s489_line_left[@js "line-left"] | `L_s490_line_right[@js "line-right"]] [@js.enum])
      and _PositionCallback = [`PositionCallback] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PositionError = [`PositionError] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PositionErrorCallback = [`PositionErrorCallback] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PositionOptions = [`PositionOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PostMessageOptions = [`PostMessageOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ProcessingInstruction = [`ProcessingInstruction | `CharacterData | `ChildNode | `EventTarget | `Node | `NonDocumentTypeChildNode] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and 'T _ProgressEvent = [`ProgressEvent of 'T | `Event] intf
      [@@js.custom { of_js=(fun _T -> Obj.magic); to_js=(fun _T -> Obj.magic) }]
      and _ProgressEventInit = [`ProgressEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PromiseRejectionEvent = [`PromiseRejectionEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PromiseRejectionEventInit = [`PromiseRejectionEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PropertyIndexedKeyframes = [`PropertyIndexedKeyframes] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PublicKeyCredential = [`PublicKeyCredential | `Credential] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PublicKeyCredentialCreationOptions = [`PublicKeyCredentialCreationOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PublicKeyCredentialDescriptor = [`PublicKeyCredentialDescriptor] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PublicKeyCredentialEntity = [`PublicKeyCredentialEntity] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PublicKeyCredentialParameters = [`PublicKeyCredentialParameters] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PublicKeyCredentialRequestOptions = [`PublicKeyCredentialRequestOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PublicKeyCredentialRpEntity = [`PublicKeyCredentialRpEntity | `PublicKeyCredentialEntity] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PublicKeyCredentialType = ([`L_s660_public_key[@js "public-key"]] [@js.enum])
      and _PublicKeyCredentialUserEntity = [`PublicKeyCredentialUserEntity | `PublicKeyCredentialEntity] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PushEncryptionKeyName = ([`L_s182_auth[@js "auth"] | `L_s602_p256dh[@js "p256dh"]] [@js.enum])
      and _PushManager = [`PushManager] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PushPermissionDescriptor = [`PushPermissionDescriptor | `PermissionDescriptor] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PushPermissionState = ([`L_s281_denied[@js "denied"] | `L_s397_granted[@js "granted"] | `L_s658_prompt[@js "prompt"]] [@js.enum])
      and _PushSubscription = [`PushSubscription] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PushSubscriptionJSON = [`PushSubscriptionJSON] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PushSubscriptionOptions = [`PushSubscriptionOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _PushSubscriptionOptionsInit = [`PushSubscriptionOptionsInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and 'T _QueuingStrategy = [`QueuingStrategy of 'T] intf
      [@@js.custom { of_js=(fun _T -> Obj.magic); to_js=(fun _T -> Obj.magic) }]
      and 'T _QueuingStrategySizeCallback = [`QueuingStrategySizeCallback of 'T] intf
      [@@js.custom { of_js=(fun _T -> Obj.magic); to_js=(fun _T -> Obj.magic) }]
      and _RTCAnswerOptions = [`RTCAnswerOptions | `RTCOfferAnswerOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCBundlePolicy = ([`L_s190_balanced[@js "balanced"] | `L_s522_max_bundle[@js "max-bundle"] | `L_s523_max_compat[@js "max-compat"]] [@js.enum])
      and _RTCCertificate = [`RTCCertificate] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCCertificateExpiration = [`RTCCertificateExpiration] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCConfiguration = [`RTCConfiguration] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCDTMFSender = [`RTCDTMFSender | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCDTMFSenderEventMap = [`RTCDTMFSenderEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCDTMFToneChangeEvent = [`RTCDTMFToneChangeEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCDTMFToneChangeEventInit = [`RTCDTMFToneChangeEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCDataChannel = [`RTCDataChannel | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCDataChannelEvent = [`RTCDataChannelEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCDataChannelEventInit = [`RTCDataChannelEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCDataChannelEventMap = [`RTCDataChannelEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCDataChannelInit = [`RTCDataChannelInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCDataChannelState = ([`L_s247_closed[@js "closed"] | `L_s248_closing[@js "closing"] | `L_s256_connecting[@js "connecting"] | `L_s590_open[@js "open"]] [@js.enum])
      and _RTCDegradationPreference = ([`L_s190_balanced[@js "balanced"] | `L_s512_maintain_framerate[@js "maintain-framerate"] | `L_s513_maintain_resolution[@js "maintain-resolution"]] [@js.enum])
      and _RTCDtlsFingerprint = [`RTCDtlsFingerprint] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCDtlsParameters = [`RTCDtlsParameters] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCDtlsRole = ([`L_s183_auto[@js "auto"] | `L_s243_client[@js "client"] | `L_s723_server[@js "server"]] [@js.enum])
      and _RTCDtlsTransport = [`RTCDtlsTransport | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCDtlsTransportEventMap = [`RTCDtlsTransportEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCDtlsTransportState = ([`L_s247_closed[@js "closed"] | `L_s255_connected[@js "connected"] | `L_s256_connecting[@js "connecting"] | `L_s341_failed[@js "failed"] | `L_s560_new[@js "new"]] [@js.enum])
      and _RTCDtlsTransportStateChangedEvent = [`RTCDtlsTransportStateChangedEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCDtmfSender = [`RTCDtmfSender | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCDtmfSenderEventMap = [`RTCDtmfSenderEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCDtxStatus = ([`L_s298_disabled[@js "disabled"] | `L_s324_enabled[@js "enabled"]] [@js.enum])
      and _RTCError = [`RTCError | `DOMException] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCErrorDetailType = ([`L_s269_data_channel_failure[@js "data-channel-failure"] | `L_s318_dtls_failure[@js "dtls-failure"] | `L_s370_fingerprint_failure[@js "fingerprint-failure"] | `L_s406_hardware_encoder_error[@js "hardware-encoder-error"] | `L_s407_hardware_encoder_not_available[@js "hardware-encoder-not-available"] | `L_s436_idp_bad_script_failure[@js "idp-bad-script-failure"] | `L_s437_idp_execution_failure[@js "idp-execution-failure"] | `L_s438_idp_load_failure[@js "idp-load-failure"] | `L_s439_idp_need_login[@js "idp-need-login"] | `L_s440_idp_timeout[@js "idp-timeout"] | `L_s441_idp_tls_failure[@js "idp-tls-failure"] | `L_s442_idp_token_expired[@js "idp-token-expired"] | `L_s443_idp_token_invalid[@js "idp-token-invalid"] | `L_s708_sctp_failure[@js "sctp-failure"] | `L_s709_sdp_syntax_error[@js "sdp-syntax-error"]] [@js.enum])
      and _RTCErrorEvent = [`RTCErrorEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCErrorEventInit = [`RTCErrorEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCErrorInit = [`RTCErrorInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCIceCandidate = [`RTCIceCandidate] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCIceCandidateAttributes = [`RTCIceCandidateAttributes | `RTCStats] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCIceCandidateComplete = [`RTCIceCandidateComplete] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCIceCandidateDictionary = [`RTCIceCandidateDictionary] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCIceCandidateInit = [`RTCIceCandidateInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCIceCandidatePair = [`RTCIceCandidatePair] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCIceCandidatePairChangedEvent = [`RTCIceCandidatePairChangedEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCIceCandidatePairStats = [`RTCIceCandidatePairStats | `RTCStats] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCIceCandidateType = ([`L_s422_host[@js "host"] | `L_s653_prflx[@js "prflx"] | `L_s673_relay[@js "relay"] | `L_s753_srflx[@js "srflx"]] [@js.enum])
      and _RTCIceComponent = ([`L_s697_rtcp[@js "rtcp"] | `L_s699_rtp[@js "rtp"]] [@js.enum])
      and _RTCIceConnectionState = ([`L_s236_checking[@js "checking"] | `L_s247_closed[@js "closed"] | `L_s254_completed[@js "completed"] | `L_s255_connected[@js "connected"] | `L_s300_disconnected[@js "disconnected"] | `L_s341_failed[@js "failed"] | `L_s560_new[@js "new"]] [@js.enum])
      and _RTCIceCredentialType = ([`L_s579_oauth[@js "oauth"] | `L_s609_password[@js "password"]] [@js.enum])
      and _RTCIceGatherCandidate = (_RTCIceCandidateComplete, _RTCIceCandidateDictionary) union2
      and _RTCIceGatherOptions = [`RTCIceGatherOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCIceGatherPolicy = ([`L_s149_all[@js "all"] | `L_s569_nohost[@js "nohost"] | `L_s673_relay[@js "relay"]] [@js.enum])
      and _RTCIceGatherer = [`RTCIceGatherer | `EventTarget | `RTCStatsProvider] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCIceGathererEvent = [`RTCIceGathererEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCIceGathererEventMap = [`RTCIceGathererEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCIceGathererState = ([`L_s253_complete[@js "complete"] | `L_s392_gathering[@js "gathering"] | `L_s560_new[@js "new"]] [@js.enum])
      and _RTCIceGatheringState = ([`L_s253_complete[@js "complete"] | `L_s392_gathering[@js "gathering"] | `L_s560_new[@js "new"]] [@js.enum])
      and _RTCIceParameters = [`RTCIceParameters] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCIceProtocol = ([`L_s786_tcp[@js "tcp"] | `L_s821_udp[@js "udp"]] [@js.enum])
      and _RTCIceRole = ([`L_s259_controlled[@js "controlled"] | `L_s261_controlling[@js "controlling"] | `L_s824_unknown[@js "unknown"]] [@js.enum])
      and _RTCIceServer = [`RTCIceServer] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCIceTcpCandidateType = ([`L_s141_active[@js "active"] | `L_s608_passive[@js "passive"] | `L_s739_so[@js "so"]] [@js.enum])
      and _RTCIceTransport = [`RTCIceTransport | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCIceTransportEventMap = [`RTCIceTransportEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCIceTransportPolicy = ([`L_s149_all[@js "all"] | `L_s673_relay[@js "relay"]] [@js.enum])
      and _RTCIceTransportState = ([`L_s236_checking[@js "checking"] | `L_s247_closed[@js "closed"] | `L_s254_completed[@js "completed"] | `L_s255_connected[@js "connected"] | `L_s300_disconnected[@js "disconnected"] | `L_s341_failed[@js "failed"] | `L_s560_new[@js "new"]] [@js.enum])
      and _RTCIceTransportStateChangedEvent = [`RTCIceTransportStateChangedEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCIdentityAssertion = [`RTCIdentityAssertion] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCIdentityProviderOptions = [`RTCIdentityProviderOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCInboundRTPStreamStats = [`RTCInboundRTPStreamStats | `RTCRTPStreamStats | `RTCStats] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCMediaStreamTrackStats = [`RTCMediaStreamTrackStats | `RTCStats] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCOAuthCredential = [`RTCOAuthCredential] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCOfferAnswerOptions = [`RTCOfferAnswerOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCOfferOptions = [`RTCOfferOptions | `RTCOfferAnswerOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCOutboundRTPStreamStats = [`RTCOutboundRTPStreamStats | `RTCRTPStreamStats | `RTCStats] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCPeerConnection = [`RTCPeerConnection | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCPeerConnectionErrorCallback = [`RTCPeerConnectionErrorCallback] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCPeerConnectionEventMap = [`RTCPeerConnectionEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCPeerConnectionIceErrorEvent = [`RTCPeerConnectionIceErrorEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCPeerConnectionIceErrorEventInit = [`RTCPeerConnectionIceErrorEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCPeerConnectionIceEvent = [`RTCPeerConnectionIceEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCPeerConnectionIceEventInit = [`RTCPeerConnectionIceEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCPeerConnectionState = ([`L_s247_closed[@js "closed"] | `L_s255_connected[@js "connected"] | `L_s256_connecting[@js "connecting"] | `L_s300_disconnected[@js "disconnected"] | `L_s341_failed[@js "failed"] | `L_s560_new[@js "new"]] [@js.enum])
      and _RTCPriorityType = ([`L_s418_high[@js "high"] | `L_s504_low[@js "low"] | `L_s526_medium[@js "medium"] | `L_s845_very_low[@js "very-low"]] [@js.enum])
      and _RTCRTPStreamStats = [`RTCRTPStreamStats | `RTCStats] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCRtcpFeedback = [`RTCRtcpFeedback] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCRtcpMuxPolicy = ([`L_s557_negotiate[@js "negotiate"] | `L_s683_require[@js "require"]] [@js.enum])
      and _RTCRtcpParameters = [`RTCRtcpParameters] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCRtpCapabilities = [`RTCRtpCapabilities] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCRtpCodecCapability = [`RTCRtpCodecCapability] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCRtpCodecParameters = [`RTCRtpCodecParameters] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCRtpCodingParameters = [`RTCRtpCodingParameters] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCRtpContributingSource = [`RTCRtpContributingSource] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCRtpDecodingParameters = [`RTCRtpDecodingParameters | `RTCRtpCodingParameters] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCRtpEncodingParameters = [`RTCRtpEncodingParameters | `RTCRtpCodingParameters] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCRtpFecParameters = [`RTCRtpFecParameters] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCRtpHeaderExtension = [`RTCRtpHeaderExtension] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCRtpHeaderExtensionCapability = [`RTCRtpHeaderExtensionCapability] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCRtpHeaderExtensionParameters = [`RTCRtpHeaderExtensionParameters] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCRtpParameters = [`RTCRtpParameters] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCRtpReceiveParameters = [`RTCRtpReceiveParameters | `RTCRtpParameters] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCRtpReceiver = [`RTCRtpReceiver] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCRtpRtxParameters = [`RTCRtpRtxParameters] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCRtpSendParameters = [`RTCRtpSendParameters | `RTCRtpParameters] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCRtpSender = [`RTCRtpSender] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCRtpSynchronizationSource = [`RTCRtpSynchronizationSource | `RTCRtpContributingSource] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCRtpTransceiver = [`RTCRtpTransceiver] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCRtpTransceiverDirection = ([`L_s449_inactive[@js "inactive"] | `L_s670_recvonly[@js "recvonly"] | `L_s720_sendonly[@js "sendonly"] | `L_s721_sendrecv[@js "sendrecv"] | `L_s762_stopped[@js "stopped"]] [@js.enum])
      and _RTCRtpTransceiverInit = [`RTCRtpTransceiverInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCRtpUnhandled = [`RTCRtpUnhandled] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCSctpTransport = [`RTCSctpTransport | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCSctpTransportEventMap = [`RTCSctpTransportEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCSctpTransportState = ([`L_s247_closed[@js "closed"] | `L_s255_connected[@js "connected"] | `L_s256_connecting[@js "connecting"]] [@js.enum])
      and _RTCSdpType = ([`L_s160_answer[@js "answer"] | `L_s582_offer[@js "offer"] | `L_s645_pranswer[@js "pranswer"] | `L_s693_rollback[@js "rollback"]] [@js.enum])
      and _RTCSessionDescription = [`RTCSessionDescription] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCSessionDescriptionCallback = [`RTCSessionDescriptionCallback] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCSessionDescriptionInit = [`RTCSessionDescriptionInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCSignalingState = ([`L_s247_closed[@js "closed"] | `L_s409_have_local_offer[@js "have-local-offer"] | `L_s410_have_local_pranswer[@js "have-local-pranswer"] | `L_s411_have_remote_offer[@js "have-remote-offer"] | `L_s412_have_remote_pranswer[@js "have-remote-pranswer"] | `L_s754_stable[@js "stable"]] [@js.enum])
      and _RTCSrtpKeyParam = [`RTCSrtpKeyParam] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCSrtpSdesParameters = [`RTCSrtpSdesParameters] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCSrtpSdesTransport = [`RTCSrtpSdesTransport | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCSrtpSdesTransportEventMap = [`RTCSrtpSdesTransportEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCSsrcConflictEvent = [`RTCSsrcConflictEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCSsrcRange = [`RTCSsrcRange] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCStats = [`RTCStats] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCStatsCallback = [`RTCStatsCallback] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCStatsEvent = [`RTCStatsEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCStatsEventInit = [`RTCStatsEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCStatsIceCandidatePairState = ([`L_s225_cancelled[@js "cancelled"] | `L_s341_failed[@js "failed"] | `L_s387_frozen[@js "frozen"] | `L_s455_inprogress[@js "inprogress"] | `L_s772_succeeded[@js "succeeded"] | `L_s864_waiting[@js "waiting"]] [@js.enum])
      and _RTCStatsIceCandidateType = ([`L_s422_host[@js "host"] | `L_s616_peerreflexive[@js "peerreflexive"] | `L_s674_relayed[@js "relayed"] | `L_s724_serverreflexive[@js "serverreflexive"]] [@js.enum])
      and _RTCStatsProvider = [`RTCStatsProvider | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCStatsReport = [`RTCStatsReport] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCStatsType = ([`L_s226_candidatepair[@js "candidatepair"] | `L_s270_datachannel[@js "datachannel"] | `L_s450_inboundrtp[@js "inboundrtp"] | `L_s502_localcandidate[@js "localcandidate"] | `L_s597_outboundrtp[@js "outboundrtp"] | `L_s677_remotecandidate[@js "remotecandidate"] | `L_s725_session[@js "session"] | `L_s811_track[@js "track"] | `L_s817_transport[@js "transport"]] [@js.enum])
      and _RTCTrackEvent = [`RTCTrackEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCTrackEventInit = [`RTCTrackEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RTCTransport = (_RTCDtlsTransport, _RTCSrtpSdesTransport) union2
      and _RTCTransportStats = [`RTCTransportStats | `RTCStats] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RadioNodeList = [`RadioNodeList | `NodeList] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RandomSource = [`RandomSource] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _Range = [`Range | `AbstractRange] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ReadableByteStreamController = [`ReadableByteStreamController] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ReadableByteStreamControllerCallback = [`ReadableByteStreamControllerCallback] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and 'R _ReadableStream = [`ReadableStream of 'R] intf
      [@@js.custom { of_js=(fun _R -> Obj.magic); to_js=(fun _R -> Obj.magic) }]
      and _ReadableStreamBYOBReader = [`ReadableStreamBYOBReader] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ReadableStreamBYOBRequest = [`ReadableStreamBYOBRequest] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and 'R _ReadableStreamDefaultController = [`ReadableStreamDefaultController of 'R] intf
      [@@js.custom { of_js=(fun _R -> Obj.magic); to_js=(fun _R -> Obj.magic) }]
      and 'R _ReadableStreamDefaultControllerCallback = [`ReadableStreamDefaultControllerCallback of 'R] intf
      [@@js.custom { of_js=(fun _R -> Obj.magic); to_js=(fun _R -> Obj.magic) }]
      and 'R _ReadableStreamDefaultReader = [`ReadableStreamDefaultReader of 'R] intf
      [@@js.custom { of_js=(fun _R -> Obj.magic); to_js=(fun _R -> Obj.magic) }]
      and _ReadableStreamErrorCallback = [`ReadableStreamErrorCallback] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and 'T _ReadableStreamReadDoneResult = [`ReadableStreamReadDoneResult of 'T] intf
      [@@js.custom { of_js=(fun _T -> Obj.magic); to_js=(fun _T -> Obj.magic) }]
      and 'T _ReadableStreamReadResult = ([`U_b_false of 'T _ReadableStreamReadValueResult [@js false] | `U_b_true of 'T _ReadableStreamReadDoneResult [@js true]] [@js.union on_field "done"])
      and 'T _ReadableStreamReadValueResult = [`ReadableStreamReadValueResult of 'T] intf
      [@@js.custom { of_js=(fun _T -> Obj.magic); to_js=(fun _T -> Obj.magic) }]
      and 'R _ReadableStreamReader = [`ReadableStreamReader of 'R] intf
      [@@js.custom { of_js=(fun _R -> Obj.magic); to_js=(fun _R -> Obj.magic) }]
      and _ReadyState = ([`L_s247_closed[@js "closed"] | `L_s328_ended[@js "ended"] | `L_s590_open[@js "open"]] [@js.enum])
      and _ReferrerPolicy = ([`L_s0[@js ""] | `L_s566_no_referrer[@js "no-referrer"] | `L_s567_no_referrer_when_downgrade[@js "no-referrer-when-downgrade"] | `L_s595_origin[@js "origin"] | `L_s596_origin_when_cross_origin[@js "origin-when-cross-origin"] | `L_s703_same_origin[@js "same-origin"] | `L_s764_strict_origin[@js "strict-origin"] | `L_s765_strict_origin_when_cross_origin[@js "strict-origin-when-cross-origin"] | `L_s829_unsafe_url[@js "unsafe-url"]] [@js.enum])
      and _RegistrationOptions = [`RegistrationOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RenderingContext = (_CanvasRenderingContext2D, _ImageBitmapRenderingContext, _WebGL2RenderingContext, _WebGLRenderingContext) union4
      and _Request = [`Request | `Body] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RequestCache = ([`L_s276_default[@js "default"] | `L_s380_force_cache[@js "force-cache"] | `L_s564_no_cache[@js "no-cache"] | `L_s568_no_store[@js "no-store"] | `L_s587_only_if_cached[@js "only-if-cached"] | `L_s676_reload[@js "reload"]] [@js.enum])
      and _RequestCredentials = ([`L_s451_include[@js "include"] | `L_s585_omit[@js "omit"] | `L_s703_same_origin[@js "same-origin"]] [@js.enum])
      and _RequestDestination = ([`L_s0[@js ""] | `L_s173_audio[@js "audio"] | `L_s181_audioworklet[@js "audioworklet"] | `L_s305_document[@js "document"] | `L_s322_embed[@js "embed"] | `L_s378_font[@js "font"] | `L_s445_image[@js "image"] | `L_s514_manifest[@js "manifest"] | `L_s580_object[@js "object"] | `L_s605_paintworklet[@js "paintworklet"] | `L_s681_report[@js "report"] | `L_s706_script[@js "script"] | `L_s726_sharedworker[@js "sharedworker"] | `L_s767_style[@js "style"] | `L_s811_track[@js "track"] | `L_s847_video[@js "video"] | `L_s872_worker[@js "worker"] | `L_s875_xslt[@js "xslt"]] [@js.enum])
      and _RequestInfo = _Request or_string
      and _RequestInit = [`RequestInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RequestMode = ([`L_s263_cors[@js "cors"] | `L_s554_navigate[@js "navigate"] | `L_s565_no_cors[@js "no-cors"] | `L_s703_same_origin[@js "same-origin"]] [@js.enum])
      and _RequestRedirect = ([`L_s332_error[@js "error"] | `L_s377_follow[@js "follow"] | `L_s515_manual[@js "manual"]] [@js.enum])
      and _Response = [`Response | `Body] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ResponseInit = [`ResponseInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ResponseType = ([`L_s194_basic[@js "basic"] | `L_s263_cors[@js "cors"] | `L_s276_default[@js "default"] | `L_s332_error[@js "error"] | `L_s588_opaque[@js "opaque"] | `L_s589_opaqueredirect[@js "opaqueredirect"]] [@js.enum])
      and _RsaHashedImportParams = [`RsaHashedImportParams | `Algorithm] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RsaHashedKeyAlgorithm = [`RsaHashedKeyAlgorithm | `KeyAlgorithm | `RsaKeyAlgorithm] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RsaHashedKeyGenParams = [`RsaHashedKeyGenParams | `Algorithm | `RsaKeyGenParams] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RsaKeyAlgorithm = [`RsaKeyAlgorithm | `KeyAlgorithm] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RsaKeyGenParams = [`RsaKeyGenParams | `Algorithm] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RsaOaepParams = [`RsaOaepParams | `Algorithm] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RsaOtherPrimesInfo = [`RsaOtherPrimesInfo] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _RsaPssParams = [`RsaPssParams | `Algorithm] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGAElement = [`SVGAElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGGraphicsElement | `SVGTests | `SVGURIReference | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGAngle = [`SVGAngle] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGAnimateElement = [`SVGAnimateElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGAnimationElement | `SVGElement | `SVGElementInstance | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGAnimateMotionElement = [`SVGAnimateMotionElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGAnimationElement | `SVGElement | `SVGElementInstance | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGAnimateTransformElement = [`SVGAnimateTransformElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGAnimationElement | `SVGElement | `SVGElementInstance | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGAnimatedAngle = [`SVGAnimatedAngle] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGAnimatedBoolean = [`SVGAnimatedBoolean] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGAnimatedEnumeration = [`SVGAnimatedEnumeration] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGAnimatedInteger = [`SVGAnimatedInteger] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGAnimatedLength = [`SVGAnimatedLength] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGAnimatedLengthList = [`SVGAnimatedLengthList] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGAnimatedNumber = [`SVGAnimatedNumber] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGAnimatedNumberList = [`SVGAnimatedNumberList] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGAnimatedPoints = [`SVGAnimatedPoints] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGAnimatedPreserveAspectRatio = [`SVGAnimatedPreserveAspectRatio] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGAnimatedRect = [`SVGAnimatedRect] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGAnimatedString = [`SVGAnimatedString] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGAnimatedTransformList = [`SVGAnimatedTransformList] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGAnimationElement = [`SVGAnimationElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGBoundingBoxOptions = [`SVGBoundingBoxOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGCircleElement = [`SVGCircleElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGGeometryElement | `SVGGraphicsElement | `SVGTests | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGClipPathElement = [`SVGClipPathElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGComponentTransferFunctionElement = [`SVGComponentTransferFunctionElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGCursorElement = [`SVGCursorElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGDefsElement = [`SVGDefsElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGGraphicsElement | `SVGTests | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGDescElement = [`SVGDescElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGElement = [`SVGElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElementInstance | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGElementEventMap = [`SVGElementEventMap | `DocumentAndElementEventHandlersEventMap | `ElementEventMap | `GlobalEventHandlersEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGElementInstance = [`SVGElementInstance | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGElementInstanceList = [`SVGElementInstanceList] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGElementTagNameMap = [`SVGElementTagNameMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGEllipseElement = [`SVGEllipseElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGGeometryElement | `SVGGraphicsElement | `SVGTests | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGFEBlendElement = [`SVGFEBlendElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGFilterPrimitiveStandardAttributes | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGFEColorMatrixElement = [`SVGFEColorMatrixElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGFilterPrimitiveStandardAttributes | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGFEComponentTransferElement = [`SVGFEComponentTransferElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGFilterPrimitiveStandardAttributes | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGFECompositeElement = [`SVGFECompositeElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGFilterPrimitiveStandardAttributes | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGFEConvolveMatrixElement = [`SVGFEConvolveMatrixElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGFilterPrimitiveStandardAttributes | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGFEDiffuseLightingElement = [`SVGFEDiffuseLightingElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGFilterPrimitiveStandardAttributes | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGFEDisplacementMapElement = [`SVGFEDisplacementMapElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGFilterPrimitiveStandardAttributes | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGFEDistantLightElement = [`SVGFEDistantLightElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGFEDropShadowElement = [`SVGFEDropShadowElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGFilterPrimitiveStandardAttributes | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGFEFloodElement = [`SVGFEFloodElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGFilterPrimitiveStandardAttributes | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGFEFuncAElement = [`SVGFEFuncAElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGComponentTransferFunctionElement | `SVGElement | `SVGElementInstance | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGFEFuncBElement = [`SVGFEFuncBElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGComponentTransferFunctionElement | `SVGElement | `SVGElementInstance | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGFEFuncGElement = [`SVGFEFuncGElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGComponentTransferFunctionElement | `SVGElement | `SVGElementInstance | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGFEFuncRElement = [`SVGFEFuncRElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGComponentTransferFunctionElement | `SVGElement | `SVGElementInstance | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGFEGaussianBlurElement = [`SVGFEGaussianBlurElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGFilterPrimitiveStandardAttributes | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGFEImageElement = [`SVGFEImageElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGFilterPrimitiveStandardAttributes | `SVGURIReference | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGFEMergeElement = [`SVGFEMergeElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGFilterPrimitiveStandardAttributes | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGFEMergeNodeElement = [`SVGFEMergeNodeElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGFEMorphologyElement = [`SVGFEMorphologyElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGFilterPrimitiveStandardAttributes | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGFEOffsetElement = [`SVGFEOffsetElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGFilterPrimitiveStandardAttributes | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGFEPointLightElement = [`SVGFEPointLightElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGFESpecularLightingElement = [`SVGFESpecularLightingElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGFilterPrimitiveStandardAttributes | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGFESpotLightElement = [`SVGFESpotLightElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGFETileElement = [`SVGFETileElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGFilterPrimitiveStandardAttributes | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGFETurbulenceElement = [`SVGFETurbulenceElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGFilterPrimitiveStandardAttributes | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGFilterElement = [`SVGFilterElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGURIReference | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGFilterPrimitiveStandardAttributes = [`SVGFilterPrimitiveStandardAttributes] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGFitToViewBox = [`SVGFitToViewBox] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGForeignObjectElement = [`SVGForeignObjectElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGGraphicsElement | `SVGTests | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGGElement = [`SVGGElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGGraphicsElement | `SVGTests | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGGeometryElement = [`SVGGeometryElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGGraphicsElement | `SVGTests | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGGradientElement = [`SVGGradientElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGURIReference | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGGraphicsElement = [`SVGGraphicsElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGTests | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGImageElement = [`SVGImageElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGGraphicsElement | `SVGTests | `SVGURIReference | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGLength = [`SVGLength] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGLengthList = [`SVGLengthList] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGLineElement = [`SVGLineElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGGeometryElement | `SVGGraphicsElement | `SVGTests | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGLinearGradientElement = [`SVGLinearGradientElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGGradientElement | `SVGURIReference | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGMarkerElement = [`SVGMarkerElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGFitToViewBox | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGMaskElement = [`SVGMaskElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGMatrix = _DOMMatrix
      and _SVGMetadataElement = [`SVGMetadataElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGNumber = [`SVGNumber] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGNumberList = [`SVGNumberList] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGPathElement = [`SVGPathElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGGraphicsElement | `SVGTests | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGPathSeg = [`SVGPathSeg] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGPathSegArcAbs = [`SVGPathSegArcAbs | `SVGPathSeg] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGPathSegArcRel = [`SVGPathSegArcRel | `SVGPathSeg] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGPathSegClosePath = [`SVGPathSegClosePath | `SVGPathSeg] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGPathSegCurvetoCubicAbs = [`SVGPathSegCurvetoCubicAbs | `SVGPathSeg] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGPathSegCurvetoCubicRel = [`SVGPathSegCurvetoCubicRel | `SVGPathSeg] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGPathSegCurvetoCubicSmoothAbs = [`SVGPathSegCurvetoCubicSmoothAbs | `SVGPathSeg] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGPathSegCurvetoCubicSmoothRel = [`SVGPathSegCurvetoCubicSmoothRel | `SVGPathSeg] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGPathSegCurvetoQuadraticAbs = [`SVGPathSegCurvetoQuadraticAbs | `SVGPathSeg] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGPathSegCurvetoQuadraticRel = [`SVGPathSegCurvetoQuadraticRel | `SVGPathSeg] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGPathSegCurvetoQuadraticSmoothAbs = [`SVGPathSegCurvetoQuadraticSmoothAbs | `SVGPathSeg] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGPathSegCurvetoQuadraticSmoothRel = [`SVGPathSegCurvetoQuadraticSmoothRel | `SVGPathSeg] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGPathSegLinetoAbs = [`SVGPathSegLinetoAbs | `SVGPathSeg] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGPathSegLinetoHorizontalAbs = [`SVGPathSegLinetoHorizontalAbs | `SVGPathSeg] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGPathSegLinetoHorizontalRel = [`SVGPathSegLinetoHorizontalRel | `SVGPathSeg] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGPathSegLinetoRel = [`SVGPathSegLinetoRel | `SVGPathSeg] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGPathSegLinetoVerticalAbs = [`SVGPathSegLinetoVerticalAbs | `SVGPathSeg] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGPathSegLinetoVerticalRel = [`SVGPathSegLinetoVerticalRel | `SVGPathSeg] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGPathSegList = [`SVGPathSegList] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGPathSegMovetoAbs = [`SVGPathSegMovetoAbs | `SVGPathSeg] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGPathSegMovetoRel = [`SVGPathSegMovetoRel | `SVGPathSeg] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGPatternElement = [`SVGPatternElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGFitToViewBox | `SVGURIReference | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGPoint = _DOMPoint
      and _SVGPointList = [`SVGPointList] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGPolygonElement = [`SVGPolygonElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGAnimatedPoints | `SVGElement | `SVGElementInstance | `SVGGeometryElement | `SVGGraphicsElement | `SVGTests | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGPolylineElement = [`SVGPolylineElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGAnimatedPoints | `SVGElement | `SVGElementInstance | `SVGGeometryElement | `SVGGraphicsElement | `SVGTests | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGPreserveAspectRatio = [`SVGPreserveAspectRatio] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGRadialGradientElement = [`SVGRadialGradientElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGGradientElement | `SVGURIReference | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGRect = _DOMRect
      and _SVGRectElement = [`SVGRectElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGGeometryElement | `SVGGraphicsElement | `SVGTests | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGSVGElement = [`SVGSVGElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `DocumentEvent | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGFitToViewBox | `SVGGraphicsElement | `SVGTests | `SVGZoomAndPan | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGSVGElementEventMap = [`SVGSVGElementEventMap | `DocumentAndElementEventHandlersEventMap | `ElementEventMap | `GlobalEventHandlersEventMap | `SVGElementEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGScriptElement = [`SVGScriptElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGURIReference | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGStopElement = [`SVGStopElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGStringList = [`SVGStringList] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGStyleElement = [`SVGStyleElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGSwitchElement = [`SVGSwitchElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGGraphicsElement | `SVGTests | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGSymbolElement = [`SVGSymbolElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGFitToViewBox | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGTSpanElement = [`SVGTSpanElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGGraphicsElement | `SVGTests | `SVGTextContentElement | `SVGTextPositioningElement | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGTests = [`SVGTests] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGTextContentElement = [`SVGTextContentElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGGraphicsElement | `SVGTests | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGTextElement = [`SVGTextElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGGraphicsElement | `SVGTests | `SVGTextContentElement | `SVGTextPositioningElement | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGTextPathElement = [`SVGTextPathElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGGraphicsElement | `SVGTests | `SVGTextContentElement | `SVGURIReference | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGTextPositioningElement = [`SVGTextPositioningElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGGraphicsElement | `SVGTests | `SVGTextContentElement | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGTitleElement = [`SVGTitleElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGTransform = [`SVGTransform] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGTransformList = [`SVGTransformList] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGURIReference = [`SVGURIReference] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGUnitTypes = [`SVGUnitTypes] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGUseElement = [`SVGUseElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGGraphicsElement | `SVGTests | `SVGURIReference | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGViewElement = [`SVGViewElement | `Animatable | `ChildNode | `DocumentAndElementEventHandlers | `Element | `ElementCSSInlineStyle | `EventTarget | `GlobalEventHandlers | `HTMLOrSVGElement | `InnerHTML | `Node | `NonDocumentTypeChildNode | `ParentNode | `SVGElement | `SVGElementInstance | `SVGFitToViewBox | `SVGZoomAndPan | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGZoomAndPan = [`SVGZoomAndPan] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SVGZoomEvent = [`SVGZoomEvent | `Event | `UIEvent] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ScopedCredential = [`ScopedCredential] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ScopedCredentialDescriptor = [`ScopedCredentialDescriptor] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ScopedCredentialInfo = [`ScopedCredentialInfo] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ScopedCredentialOptions = [`ScopedCredentialOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ScopedCredentialParameters = [`ScopedCredentialParameters] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ScopedCredentialType = ([`L_s106_ScopedCred[@js "ScopedCred"]] [@js.enum])
      and _Screen = [`Screen] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ScreenOrientation = [`ScreenOrientation | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ScreenOrientationEventMap = [`ScreenOrientationEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ScriptProcessorNode = [`ScriptProcessorNode | `AudioNode | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ScriptProcessorNodeEventMap = [`ScriptProcessorNodeEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ScrollBehavior = ([`L_s183_auto[@js "auto"] | `L_s738_smooth[@js "smooth"]] [@js.enum])
      and _ScrollIntoViewOptions = [`ScrollIntoViewOptions | `ScrollOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ScrollLogicalPosition = ([`L_s232_center[@js "center"] | `L_s327_end[@js "end"] | `L_s556_nearest[@js "nearest"] | `L_s757_start[@js "start"]] [@js.enum])
      and _ScrollOptions = [`ScrollOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ScrollRestoration = ([`L_s183_auto[@js "auto"] | `L_s515_manual[@js "manual"]] [@js.enum])
      and _ScrollSetting = ([`L_s0[@js ""] | `L_s831_up[@js "up"]] [@js.enum])
      and _ScrollToOptions = [`ScrollToOptions | `ScrollOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SecurityPolicyViolationEvent = [`SecurityPolicyViolationEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SecurityPolicyViolationEventInit = [`SecurityPolicyViolationEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _Selection = [`Selection] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SelectionMode = ([`L_s327_end[@js "end"] | `L_s650_preserve[@js "preserve"] | `L_s716_select[@js "select"] | `L_s757_start[@js "start"]] [@js.enum])
      and _ServiceUIFrameContext = [`ServiceUIFrameContext] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ServiceWorker = [`ServiceWorker | `AbstractWorker | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ServiceWorkerContainer = [`ServiceWorkerContainer | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ServiceWorkerContainerEventMap = [`ServiceWorkerContainerEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ServiceWorkerEventMap = [`ServiceWorkerEventMap | `AbstractWorkerEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ServiceWorkerMessageEvent = [`ServiceWorkerMessageEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ServiceWorkerMessageEventInit = [`ServiceWorkerMessageEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ServiceWorkerRegistration = [`ServiceWorkerRegistration | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ServiceWorkerRegistrationEventMap = [`ServiceWorkerRegistrationEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ServiceWorkerState = ([`L_s139_activated[@js "activated"] | `L_s140_activating[@js "activating"] | `L_s458_installed[@js "installed"] | `L_s459_installing[@js "installing"] | `L_s607_parsed[@js "parsed"] | `L_s671_redundant[@js "redundant"]] [@js.enum])
      and _ServiceWorkerUpdateViaCache = ([`L_s149_all[@js "all"] | `L_s448_imports[@js "imports"] | `L_s571_none[@js "none"]] [@js.enum])
      and _ShadowRoot = [`ShadowRoot | `DocumentFragment | `DocumentOrShadowRoot | `EventTarget | `InnerHTML | `Node | `NonElementParentNode | `ParentNode] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ShadowRootInit = [`ShadowRootInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ShadowRootMode = ([`L_s247_closed[@js "closed"] | `L_s590_open[@js "open"]] [@js.enum])
      and _Slotable = [`Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SourceBuffer = [`SourceBuffer | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SourceBufferEventMap = [`SourceBufferEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SourceBufferList = [`SourceBufferList | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SourceBufferListEventMap = [`SourceBufferListEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SpeechGrammar = [`SpeechGrammar] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SpeechGrammarList = [`SpeechGrammarList] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SpeechRecognition = [`SpeechRecognition | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SpeechRecognitionAlternative = [`SpeechRecognitionAlternative] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SpeechRecognitionEvent = [`SpeechRecognitionEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SpeechRecognitionEventMap = [`SpeechRecognitionEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SpeechRecognitionResult = [`SpeechRecognitionResult] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SpeechRecognitionResultList = [`SpeechRecognitionResultList] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SpeechSynthesis = [`SpeechSynthesis | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SpeechSynthesisErrorCode = ([`L_s174_audio_busy[@js "audio-busy"] | `L_s175_audio_hardware[@js "audio-hardware"] | `L_s224_canceled[@js "canceled"] | `L_s463_interrupted[@js "interrupted"] | `L_s465_invalid_argument[@js "invalid-argument"] | `L_s480_language_unavailable[@js "language-unavailable"] | `L_s559_network[@js "network"] | `L_s575_not_allowed[@js "not-allowed"] | `L_s782_synthesis_failed[@js "synthesis-failed"] | `L_s783_synthesis_unavailable[@js "synthesis-unavailable"] | `L_s791_text_too_long[@js "text-too-long"] | `L_s852_voice_unavailable[@js "voice-unavailable"]] [@js.enum])
      and _SpeechSynthesisErrorEvent = [`SpeechSynthesisErrorEvent | `Event | `SpeechSynthesisEvent] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SpeechSynthesisErrorEventInit = [`SpeechSynthesisErrorEventInit | `EventInit | `SpeechSynthesisEventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SpeechSynthesisEvent = [`SpeechSynthesisEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SpeechSynthesisEventInit = [`SpeechSynthesisEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SpeechSynthesisEventMap = [`SpeechSynthesisEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SpeechSynthesisUtterance = [`SpeechSynthesisUtterance | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SpeechSynthesisUtteranceEventMap = [`SpeechSynthesisUtteranceEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SpeechSynthesisVoice = [`SpeechSynthesisVoice] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _StaticRange = [`StaticRange | `AbstractRange] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _StaticRangeInit = [`StaticRangeInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _StereoPannerNode = [`StereoPannerNode | `AudioNode | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _StereoPannerOptions = [`StereoPannerOptions | `AudioNodeOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _Storage = [`Storage] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _StorageEstimate = [`StorageEstimate] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _StorageEvent = [`StorageEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _StorageEventInit = [`StorageEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _StorageManager = [`StorageManager] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _StoreExceptionsInformation = [`StoreExceptionsInformation | `ExceptionInformation] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _StoreSiteSpecificExceptionsInformation = [`StoreSiteSpecificExceptionsInformation | `ExceptionInformation | `StoreExceptionsInformation] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _StyleMedia = [`StyleMedia] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _StyleSheet = [`StyleSheet] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _StyleSheetList = [`StyleSheetList] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SubtleCrypto = [`SubtleCrypto] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _SupportedType = ([`L_s165_application_xhtml_xml[@js "application/xhtml+xml"] | `L_s166_application_xml[@js "application/xml"] | `L_s446_image_svg_xml[@js "image/svg+xml"] | `L_s792_text_html[@js "text/html"] | `L_s793_text_xml[@js "text/xml"]] [@js.enum])
      and _SyncManager = [`SyncManager] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _TexImageSource = (_HTMLCanvasElement, _HTMLImageElement, _HTMLVideoElement, _ImageBitmap, _ImageData, _OffscreenCanvas) union6
      and _Text = [`Text | `CharacterData | `ChildNode | `EventTarget | `Node | `NonDocumentTypeChildNode | `Slotable] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _TextDecodeOptions = [`TextDecodeOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _TextDecoder = [`TextDecoder | `TextDecoderCommon] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _TextDecoderCommon = [`TextDecoderCommon] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _TextDecoderOptions = [`TextDecoderOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _TextDecoderStream = [`TextDecoderStream | `GenericTransformStream | `TextDecoderCommon] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _TextEncoder = [`TextEncoder | `TextEncoderCommon] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _TextEncoderCommon = [`TextEncoderCommon] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _TextEncoderEncodeIntoResult = [`TextEncoderEncodeIntoResult] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _TextEncoderStream = [`TextEncoderStream | `GenericTransformStream | `TextEncoderCommon] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _TextEvent = [`TextEvent | `Event | `UIEvent] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _TextMetrics = [`TextMetrics] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _TextTrack = [`TextTrack | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _TextTrackCue = [`TextTrackCue | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _TextTrackCueEventMap = [`TextTrackCueEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _TextTrackCueList = [`TextTrackCueList] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _TextTrackEventMap = [`TextTrackEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _TextTrackKind = ([`L_s231_captions[@js "captions"] | `L_s234_chapters[@js "chapters"] | `L_s286_descriptions[@js "descriptions"] | `L_s532_metadata[@js "metadata"] | `L_s771_subtitles[@js "subtitles"]] [@js.enum])
      and _TextTrackList = [`TextTrackList | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _TextTrackListEventMap = [`TextTrackListEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _TextTrackMode = ([`L_s298_disabled[@js "disabled"] | `L_s416_hidden[@js "hidden"] | `L_s731_showing[@js "showing"]] [@js.enum])
      and _TimeRanges = [`TimeRanges] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _TimerHandler = untyped_function or_string
      and _Touch = [`Touch] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _TouchEvent = [`TouchEvent | `Event | `UIEvent] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _TouchEventInit = [`TouchEventInit | `EventInit | `EventModifierInit | `UIEventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _TouchInit = [`TouchInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _TouchList = [`TouchList] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _TouchType = ([`L_s297_direct[@js "direct"] | `L_s768_stylus[@js "stylus"]] [@js.enum])
      and _TrackEvent = [`TrackEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _TrackEventInit = [`TrackEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _Transferable = (ArrayBuffer.t_0, _ImageBitmap, _MessagePort, _OffscreenCanvas) union4
      and ('I, 'O) _TransformStream = [`TransformStream of ('I * 'O)] intf
      [@@js.custom { of_js=(fun _I _O -> Obj.magic); to_js=(fun _I _O -> Obj.magic) }]
      and 'O _TransformStreamDefaultController = [`TransformStreamDefaultController of 'O] intf
      [@@js.custom { of_js=(fun _O -> Obj.magic); to_js=(fun _O -> Obj.magic) }]
      and 'O _TransformStreamDefaultControllerCallback = [`TransformStreamDefaultControllerCallback of 'O] intf
      [@@js.custom { of_js=(fun _O -> Obj.magic); to_js=(fun _O -> Obj.magic) }]
      and ('I, 'O) _TransformStreamDefaultControllerTransformCallback = [`TransformStreamDefaultControllerTransformCallback of ('I * 'O)] intf
      [@@js.custom { of_js=(fun _I _O -> Obj.magic); to_js=(fun _I _O -> Obj.magic) }]
      and ('I, 'O) _Transformer = [`Transformer of ('I * 'O)] intf
      [@@js.custom { of_js=(fun _I _O -> Obj.magic); to_js=(fun _I _O -> Obj.magic) }]
      and _TransitionEvent = [`TransitionEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _TransitionEventInit = [`TransitionEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _Transport = ([`L_s203_ble[@js "ble"] | `L_s563_nfc[@js "nfc"] | `L_s839_usb[@js "usb"]] [@js.enum])
      and _TreeWalker = [`TreeWalker] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _UIEvent = [`UIEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _UIEventInit = [`UIEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ULongRange = [`ULongRange] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _URL = [`URL] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _URLSearchParams = [`URLSearchParams] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _Uint32List = (Uint32Array.t_0, _GLuint) or_array
      and _UnderlyingByteSource = [`UnderlyingByteSource] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and 'W _UnderlyingSink = [`UnderlyingSink of 'W] intf
      [@@js.custom { of_js=(fun _W -> Obj.magic); to_js=(fun _W -> Obj.magic) }]
      and 'R _UnderlyingSource = [`UnderlyingSource of 'R] intf
      [@@js.custom { of_js=(fun _R -> Obj.magic); to_js=(fun _R -> Obj.magic) }]
      and _UserVerificationRequirement = ([`L_s301_discouraged[@js "discouraged"] | `L_s647_preferred[@js "preferred"] | `L_s684_required[@js "required"]] [@js.enum])
      and _UvmEntries = _UvmEntry list
      and _UvmEntry = float list
      and _VRDisplay = [`VRDisplay | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _VRDisplayCapabilities = [`VRDisplayCapabilities] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _VRDisplayEvent = [`VRDisplayEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _VRDisplayEventInit = [`VRDisplayEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _VRDisplayEventReason = ([`L_s540_mounted[@js "mounted"] | `L_s555_navigation[@js "navigation"] | `L_s682_requested[@js "requested"] | `L_s827_unmounted[@js "unmounted"]] [@js.enum])
      and _VREyeParameters = [`VREyeParameters] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _VRFieldOfView = [`VRFieldOfView] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _VRFrameData = [`VRFrameData] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _VRLayer = [`VRLayer] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _VRPose = [`VRPose] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _VRStageParameters = [`VRStageParameters] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _VTTCue = [`VTTCue | `EventTarget | `TextTrackCue] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _VTTRegion = [`VTTRegion] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _ValidityState = [`ValidityState] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _VibratePattern = float list or_number
      and _VideoFacingModeEnum = ([`L_s330_environment[@js "environment"] | `L_s482_left[@js "left"] | `L_s691_right[@js "right"] | `L_s841_user[@js "user"]] [@js.enum])
      and _VideoPlaybackQuality = [`VideoPlaybackQuality] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _VideoTrack = [`VideoTrack] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _VideoTrackList = [`VideoTrackList | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _VideoTrackListEventMap = [`VideoTrackListEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _VisibilityState = ([`L_s416_hidden[@js "hidden"] | `L_s851_visible[@js "visible"]] [@js.enum])
      and _VoidFunction = [`VoidFunction] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WEBGL_color_buffer_float = [`WEBGL_color_buffer_float] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WEBGL_compressed_texture_astc = [`WEBGL_compressed_texture_astc] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WEBGL_compressed_texture_s3tc = [`WEBGL_compressed_texture_s3tc] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WEBGL_compressed_texture_s3tc_srgb = [`WEBGL_compressed_texture_s3tc_srgb] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WEBGL_debug_renderer_info = [`WEBGL_debug_renderer_info] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WEBGL_debug_shaders = [`WEBGL_debug_shaders] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WEBGL_depth_texture = [`WEBGL_depth_texture] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WEBGL_draw_buffers = [`WEBGL_draw_buffers] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WEBGL_lose_context = [`WEBGL_lose_context] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WaveShaperNode = [`WaveShaperNode | `AudioNode | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WaveShaperOptions = [`WaveShaperOptions | `AudioNodeOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebAssembly_CompileError = [`WebAssembly_CompileError] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebAssembly_ExportValue = (untyped_function, _WebAssembly_Global, _WebAssembly_Memory, _WebAssembly_Table) union4
      and _WebAssembly_Exports = (string, _WebAssembly_ExportValue) Record.t_2
      and _WebAssembly_Global = [`WebAssembly_Global] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebAssembly_GlobalDescriptor = [`WebAssembly_GlobalDescriptor] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebAssembly_ImportExportKind = ([`L_s390_function[@js "function"] | `L_s395_global[@js "global"] | `L_s527_memory[@js "memory"] | `L_s784_table[@js "table"]] [@js.enum])
      and _WebAssembly_ImportValue = _WebAssembly_ExportValue or_number
      and _WebAssembly_Imports = (string, _WebAssembly_ModuleImports) Record.t_2
      and _WebAssembly_Instance = [`WebAssembly_Instance] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebAssembly_LinkError = [`WebAssembly_LinkError] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebAssembly_Memory = [`WebAssembly_Memory] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebAssembly_MemoryDescriptor = [`WebAssembly_MemoryDescriptor] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebAssembly_Module = [`WebAssembly_Module] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebAssembly_ModuleExportDescriptor = [`WebAssembly_ModuleExportDescriptor] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebAssembly_ModuleImportDescriptor = [`WebAssembly_ModuleImportDescriptor] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebAssembly_ModuleImports = (string, _WebAssembly_ImportValue) Record.t_2
      and _WebAssembly_RuntimeError = [`WebAssembly_RuntimeError] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebAssembly_Table = [`WebAssembly_Table] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebAssembly_TableDescriptor = [`WebAssembly_TableDescriptor] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebAssembly_TableKind = ([`L_s162_anyfunc[@js "anyfunc"]] [@js.enum])
      and _WebAssembly_ValueType = ([`L_s338_f32[@js "f32"] | `L_s339_f64[@js "f64"] | `L_s428_i32[@js "i32"] | `L_s429_i64[@js "i64"]] [@js.enum])
      and _WebAssembly_WebAssemblyInstantiatedSource = [`WebAssembly_WebAssemblyInstantiatedSource] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebAuthentication = [`WebAuthentication] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebAuthnAssertion = [`WebAuthnAssertion] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebAuthnExtensions = [`WebAuthnExtensions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebGL2RenderingContext = [`WebGL2RenderingContext | `WebGL2RenderingContextBase | `WebGL2RenderingContextOverloads | `WebGLRenderingContextBase] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebGL2RenderingContextBase = [`WebGL2RenderingContextBase] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebGL2RenderingContextOverloads = [`WebGL2RenderingContextOverloads] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebGLActiveInfo = [`WebGLActiveInfo] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebGLBuffer = [`WebGLBuffer | `WebGLObject] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebGLContextAttributes = [`WebGLContextAttributes] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebGLContextEvent = [`WebGLContextEvent | `Event] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebGLContextEventInit = [`WebGLContextEventInit | `EventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebGLFramebuffer = [`WebGLFramebuffer | `WebGLObject] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebGLObject = [`WebGLObject] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebGLPowerPreference = ([`L_s276_default[@js "default"] | `L_s419_high_performance[@js "high-performance"] | `L_s505_low_power[@js "low-power"]] [@js.enum])
      and _WebGLProgram = [`WebGLProgram | `WebGLObject] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebGLQuery = [`WebGLQuery | `WebGLObject] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebGLRenderbuffer = [`WebGLRenderbuffer | `WebGLObject] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebGLRenderingContext = [`WebGLRenderingContext | `WebGLRenderingContextBase | `WebGLRenderingContextOverloads] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebGLRenderingContextBase = [`WebGLRenderingContextBase] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebGLRenderingContextOverloads = [`WebGLRenderingContextOverloads] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebGLSampler = [`WebGLSampler | `WebGLObject] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebGLShader = [`WebGLShader | `WebGLObject] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebGLShaderPrecisionFormat = [`WebGLShaderPrecisionFormat] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebGLSync = [`WebGLSync | `WebGLObject] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebGLTexture = [`WebGLTexture | `WebGLObject] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebGLTransformFeedback = [`WebGLTransformFeedback | `WebGLObject] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebGLUniformLocation = [`WebGLUniformLocation] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebGLVertexArrayObject = [`WebGLVertexArrayObject | `WebGLObject] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebGLVertexArrayObjectOES = [`WebGLVertexArrayObjectOES | `WebGLObject] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebKitCSSMatrix = _DOMMatrix
      and _WebKitPoint = [`WebKitPoint] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebSocket = [`WebSocket | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WebSocketEventMap = [`WebSocketEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WheelEvent = [`WheelEvent | `Event | `MouseEvent | `UIEvent] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WheelEventInit = [`WheelEventInit | `EventInit | `EventModifierInit | `MouseEventInit | `UIEventInit] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _Window = [`Window | `AnimationFrameProvider | `EventTarget | `GlobalEventHandlers | `WindowConsole | `WindowEventHandlers | `WindowLocalStorage | `WindowOrWorkerGlobalScope | `WindowSessionStorage] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WindowConsole = [`WindowConsole] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WindowEventHandlers = [`WindowEventHandlers] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WindowEventHandlersEventMap = [`WindowEventHandlersEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WindowEventMap = [`WindowEventMap | `GlobalEventHandlersEventMap | `WindowEventHandlersEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WindowLocalStorage = [`WindowLocalStorage] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WindowOrWorkerGlobalScope = [`WindowOrWorkerGlobalScope] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WindowProxy = _Window
      and _WindowSessionStorage = [`WindowSessionStorage] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _Worker = [`Worker | `AbstractWorker | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WorkerEventMap = [`WorkerEventMap | `AbstractWorkerEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WorkerOptions = [`WorkerOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WorkerType = ([`L_s241_classic[@js "classic"] | `L_s538_module[@js "module"]] [@js.enum])
      and _Worklet = [`Worklet] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WorkletOptions = [`WorkletOptions] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and 'W _WritableStream = [`WritableStream of 'W] intf
      [@@js.custom { of_js=(fun _W -> Obj.magic); to_js=(fun _W -> Obj.magic) }]
      and _WritableStreamDefaultController = [`WritableStreamDefaultController] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WritableStreamDefaultControllerCloseCallback = [`WritableStreamDefaultControllerCloseCallback] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _WritableStreamDefaultControllerStartCallback = [`WritableStreamDefaultControllerStartCallback] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and 'W _WritableStreamDefaultControllerWriteCallback = [`WritableStreamDefaultControllerWriteCallback of 'W] intf
      [@@js.custom { of_js=(fun _W -> Obj.magic); to_js=(fun _W -> Obj.magic) }]
      and 'W _WritableStreamDefaultWriter = [`WritableStreamDefaultWriter of 'W] intf
      [@@js.custom { of_js=(fun _W -> Obj.magic); to_js=(fun _W -> Obj.magic) }]
      and _WritableStreamErrorCallback = [`WritableStreamErrorCallback] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _XMLDocument = [`XMLDocument | `Document | `DocumentAndElementEventHandlers | `DocumentOrShadowRoot | `EventTarget | `GlobalEventHandlers | `Node | `NonElementParentNode | `ParentNode | `XPathEvaluatorBase] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _XMLHttpRequest = [`XMLHttpRequest | `EventTarget | `XMLHttpRequestEventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _XMLHttpRequestEventMap = [`XMLHttpRequestEventMap | `XMLHttpRequestEventTargetEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _XMLHttpRequestEventTarget = [`XMLHttpRequestEventTarget | `EventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _XMLHttpRequestEventTargetEventMap = [`XMLHttpRequestEventTargetEventMap] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _XMLHttpRequestResponseType = ([`L_s0[@js ""] | `L_s168_arraybuffer[@js "arraybuffer"] | `L_s204_blob[@js "blob"] | `L_s305_document[@js "document"] | `L_s468_json[@js "json"] | `L_s790_text[@js "text"]] [@js.enum])
      and _XMLHttpRequestUpload = [`XMLHttpRequestUpload | `EventTarget | `XMLHttpRequestEventTarget] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _XMLSerializer = [`XMLSerializer] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _XPathEvaluator = [`XPathEvaluator | `XPathEvaluatorBase] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _XPathEvaluatorBase = [`XPathEvaluatorBase] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _XPathExpression = [`XPathExpression] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _XPathNSResolver = (anonymous_interface_611, (prefix:string or_null -> string or_null)) union2
      and _XPathResult = [`XPathResult] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and _XSLTProcessor = [`XSLTProcessor] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and txAuthGenericArg = [`TxAuthGenericArg] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and webkitRTCPeerConnection = [`WebkitRTCPeerConnection | `EventTarget | `RTCPeerConnection] intf
      [@@js.custom { of_js=Obj.magic; to_js=Obj.magic }]
      and webkitURL = _URL
    end
  end
  
  open Internal
  open AnonymousInterfaces
  open Types
  module AnonymousInterface0 : sig
    type t = anonymous_interface_0
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_FILTER_ACCEPT: t -> float [@@js.get "FILTER_ACCEPT"]
    val get_FILTER_REJECT: t -> float [@@js.get "FILTER_REJECT"]
    val get_FILTER_SKIP: t -> float [@@js.get "FILTER_SKIP"]
    val get_SHOW_ALL: t -> float [@@js.get "SHOW_ALL"]
    val get_SHOW_ATTRIBUTE: t -> float [@@js.get "SHOW_ATTRIBUTE"]
    val get_SHOW_CDATA_SECTION: t -> float [@@js.get "SHOW_CDATA_SECTION"]
    val get_SHOW_COMMENT: t -> float [@@js.get "SHOW_COMMENT"]
    val get_SHOW_DOCUMENT: t -> float [@@js.get "SHOW_DOCUMENT"]
    val get_SHOW_DOCUMENT_FRAGMENT: t -> float [@@js.get "SHOW_DOCUMENT_FRAGMENT"]
    val get_SHOW_DOCUMENT_TYPE: t -> float [@@js.get "SHOW_DOCUMENT_TYPE"]
    val get_SHOW_ELEMENT: t -> float [@@js.get "SHOW_ELEMENT"]
    val get_SHOW_ENTITY: t -> float [@@js.get "SHOW_ENTITY"]
    val get_SHOW_ENTITY_REFERENCE: t -> float [@@js.get "SHOW_ENTITY_REFERENCE"]
    val get_SHOW_NOTATION: t -> float [@@js.get "SHOW_NOTATION"]
    val get_SHOW_PROCESSING_INSTRUCTION: t -> float [@@js.get "SHOW_PROCESSING_INSTRUCTION"]
    val get_SHOW_TEXT: t -> float [@@js.get "SHOW_TEXT"]
  end
  module AnonymousInterface1 : sig
    type t = anonymous_interface_1
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_SVG_ZOOMANDPAN_DISABLE: t -> float [@@js.get "SVG_ZOOMANDPAN_DISABLE"]
    val get_SVG_ZOOMANDPAN_MAGNIFY: t -> float [@@js.get "SVG_ZOOMANDPAN_MAGNIFY"]
    val get_SVG_ZOOMANDPAN_UNKNOWN: t -> float [@@js.get "SVG_ZOOMANDPAN_UNKNOWN"]
  end
  module AnonymousInterface2 : sig
    type t = anonymous_interface_2
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_highWaterMark: t -> float [@@js.get "highWaterMark"]
    val set_highWaterMark: t -> float -> unit [@@js.set "highWaterMark"]
  end
  module AnonymousInterface3 : sig
    type t = anonymous_interface_3
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_highWaterMark: t -> float [@@js.get "highWaterMark"]
    val set_highWaterMark: t -> float -> unit [@@js.set "highWaterMark"]
    val get_size: t -> never or_undefined [@@js.get "size"]
    val set_size: t -> never or_undefined -> unit [@@js.set "size"]
  end
  module AnonymousInterface4 : sig
    type t = anonymous_interface_4
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_mode: t -> ([`L_s219_byob[@js "byob"]] [@js.enum]) [@@js.get "mode"]
    val set_mode: t -> ([`L_s219_byob] [@js.enum]) -> unit [@@js.set "mode"]
  end
  module AnonymousInterface5 : sig
    type t = anonymous_interface_5
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _AbortController [@@js.get "prototype"]
    val set_prototype: t -> _AbortController -> unit [@@js.set "prototype"]
    val create: t -> _AbortController [@@js.apply_newable]
  end
  module AnonymousInterface6 : sig
    type t = anonymous_interface_6
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _AbortSignal [@@js.get "prototype"]
    val set_prototype: t -> _AbortSignal -> unit [@@js.set "prototype"]
    val create: t -> _AbortSignal [@@js.apply_newable]
  end
  module AnonymousInterface7 : sig
    type t = anonymous_interface_7
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _AbstractRange [@@js.get "prototype"]
    val set_prototype: t -> _AbstractRange -> unit [@@js.set "prototype"]
    val create: t -> _AbstractRange [@@js.apply_newable]
  end
  module AnonymousInterface8 : sig
    type t = anonymous_interface_8
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _AnalyserNode [@@js.get "prototype"]
    val set_prototype: t -> _AnalyserNode -> unit [@@js.set "prototype"]
    val create: t -> context:_BaseAudioContext -> ?options:_AnalyserOptions -> unit -> _AnalyserNode [@@js.apply_newable]
  end
  module AnonymousInterface9 : sig
    type t = anonymous_interface_9
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _Animation [@@js.get "prototype"]
    val set_prototype: t -> _Animation -> unit [@@js.set "prototype"]
    val create: t -> ?effect:_AnimationEffect or_null -> ?timeline:_AnimationTimeline or_null -> unit -> _Animation [@@js.apply_newable]
  end
  module AnonymousInterface10 : sig
    type t = anonymous_interface_10
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _AnimationEffect [@@js.get "prototype"]
    val set_prototype: t -> _AnimationEffect -> unit [@@js.set "prototype"]
    val create: t -> _AnimationEffect [@@js.apply_newable]
  end
  module AnonymousInterface11 : sig
    type t = anonymous_interface_11
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _AnimationEvent [@@js.get "prototype"]
    val set_prototype: t -> _AnimationEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> ?animationEventInitDict:_AnimationEventInit -> unit -> _AnimationEvent [@@js.apply_newable]
  end
  module AnonymousInterface12 : sig
    type t = anonymous_interface_12
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _AnimationPlaybackEvent [@@js.get "prototype"]
    val set_prototype: t -> _AnimationPlaybackEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> ?eventInitDict:_AnimationPlaybackEventInit -> unit -> _AnimationPlaybackEvent [@@js.apply_newable]
  end
  module AnonymousInterface13 : sig
    type t = anonymous_interface_13
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _AnimationTimeline [@@js.get "prototype"]
    val set_prototype: t -> _AnimationTimeline -> unit [@@js.set "prototype"]
    val create: t -> _AnimationTimeline [@@js.apply_newable]
  end
  module AnonymousInterface14 : sig
    type t = anonymous_interface_14
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _ApplicationCache [@@js.get "prototype"]
    val set_prototype: t -> _ApplicationCache -> unit [@@js.set "prototype"]
    val create: t -> _ApplicationCache [@@js.apply_newable]
    val get_CHECKING: t -> float [@@js.get "CHECKING"]
    val get_DOWNLOADING: t -> float [@@js.get "DOWNLOADING"]
    val get_IDLE: t -> float [@@js.get "IDLE"]
    val get_OBSOLETE: t -> float [@@js.get "OBSOLETE"]
    val get_UNCACHED: t -> float [@@js.get "UNCACHED"]
    val get_UPDATEREADY: t -> float [@@js.get "UPDATEREADY"]
  end
  module AnonymousInterface15 : sig
    type t = anonymous_interface_15
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _Attr [@@js.get "prototype"]
    val set_prototype: t -> _Attr -> unit [@@js.set "prototype"]
    val create: t -> _Attr [@@js.apply_newable]
  end
  module AnonymousInterface16 : sig
    type t = anonymous_interface_16
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _AudioBuffer [@@js.get "prototype"]
    val set_prototype: t -> _AudioBuffer -> unit [@@js.set "prototype"]
    val create: t -> options:_AudioBufferOptions -> _AudioBuffer [@@js.apply_newable]
  end
  module AnonymousInterface17 : sig
    type t = anonymous_interface_17
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _AudioBufferSourceNode [@@js.get "prototype"]
    val set_prototype: t -> _AudioBufferSourceNode -> unit [@@js.set "prototype"]
    val create: t -> context:_BaseAudioContext -> ?options:_AudioBufferSourceOptions -> unit -> _AudioBufferSourceNode [@@js.apply_newable]
  end
  module AnonymousInterface18 : sig
    type t = anonymous_interface_18
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _AudioContext [@@js.get "prototype"]
    val set_prototype: t -> _AudioContext -> unit [@@js.set "prototype"]
    val create: t -> ?contextOptions:_AudioContextOptions -> unit -> _AudioContext [@@js.apply_newable]
  end
  module AnonymousInterface19 : sig
    type t = anonymous_interface_19
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _AudioDestinationNode [@@js.get "prototype"]
    val set_prototype: t -> _AudioDestinationNode -> unit [@@js.set "prototype"]
    val create: t -> _AudioDestinationNode [@@js.apply_newable]
  end
  module AnonymousInterface20 : sig
    type t = anonymous_interface_20
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _AudioListener [@@js.get "prototype"]
    val set_prototype: t -> _AudioListener -> unit [@@js.set "prototype"]
    val create: t -> _AudioListener [@@js.apply_newable]
  end
  module AnonymousInterface21 : sig
    type t = anonymous_interface_21
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _AudioNode [@@js.get "prototype"]
    val set_prototype: t -> _AudioNode -> unit [@@js.set "prototype"]
    val create: t -> _AudioNode [@@js.apply_newable]
  end
  module AnonymousInterface22 : sig
    type t = anonymous_interface_22
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _AudioParam [@@js.get "prototype"]
    val set_prototype: t -> _AudioParam -> unit [@@js.set "prototype"]
    val create: t -> _AudioParam [@@js.apply_newable]
  end
  module AnonymousInterface23 : sig
    type t = anonymous_interface_23
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _AudioParamMap [@@js.get "prototype"]
    val set_prototype: t -> _AudioParamMap -> unit [@@js.set "prototype"]
    val create: t -> _AudioParamMap [@@js.apply_newable]
  end
  module AnonymousInterface24 : sig
    type t = anonymous_interface_24
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _AudioProcessingEvent [@@js.get "prototype"]
    val set_prototype: t -> _AudioProcessingEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> eventInitDict:_AudioProcessingEventInit -> _AudioProcessingEvent [@@js.apply_newable]
  end
  module AnonymousInterface25 : sig
    type t = anonymous_interface_25
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _AudioScheduledSourceNode [@@js.get "prototype"]
    val set_prototype: t -> _AudioScheduledSourceNode -> unit [@@js.set "prototype"]
    val create: t -> _AudioScheduledSourceNode [@@js.apply_newable]
  end
  module AnonymousInterface26 : sig
    type t = anonymous_interface_26
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _AudioTrack [@@js.get "prototype"]
    val set_prototype: t -> _AudioTrack -> unit [@@js.set "prototype"]
    val create: t -> _AudioTrack [@@js.apply_newable]
  end
  module AnonymousInterface27 : sig
    type t = anonymous_interface_27
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _AudioTrackList [@@js.get "prototype"]
    val set_prototype: t -> _AudioTrackList -> unit [@@js.set "prototype"]
    val create: t -> _AudioTrackList [@@js.apply_newable]
  end
  module AnonymousInterface28 : sig
    type t = anonymous_interface_28
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _AudioWorklet [@@js.get "prototype"]
    val set_prototype: t -> _AudioWorklet -> unit [@@js.set "prototype"]
    val create: t -> _AudioWorklet [@@js.apply_newable]
  end
  module AnonymousInterface29 : sig
    type t = anonymous_interface_29
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _AudioWorkletNode [@@js.get "prototype"]
    val set_prototype: t -> _AudioWorkletNode -> unit [@@js.set "prototype"]
    val create: t -> context:_BaseAudioContext -> name:string -> ?options:_AudioWorkletNodeOptions -> unit -> _AudioWorkletNode [@@js.apply_newable]
  end
  module AnonymousInterface30 : sig
    type t = anonymous_interface_30
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _AuthenticatorAssertionResponse [@@js.get "prototype"]
    val set_prototype: t -> _AuthenticatorAssertionResponse -> unit [@@js.set "prototype"]
    val create: t -> _AuthenticatorAssertionResponse [@@js.apply_newable]
  end
  module AnonymousInterface31 : sig
    type t = anonymous_interface_31
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _AuthenticatorAttestationResponse [@@js.get "prototype"]
    val set_prototype: t -> _AuthenticatorAttestationResponse -> unit [@@js.set "prototype"]
    val create: t -> _AuthenticatorAttestationResponse [@@js.apply_newable]
  end
  module AnonymousInterface32 : sig
    type t = anonymous_interface_32
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _AuthenticatorResponse [@@js.get "prototype"]
    val set_prototype: t -> _AuthenticatorResponse -> unit [@@js.set "prototype"]
    val create: t -> _AuthenticatorResponse [@@js.apply_newable]
  end
  module AnonymousInterface33 : sig
    type t = anonymous_interface_33
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _BarProp [@@js.get "prototype"]
    val set_prototype: t -> _BarProp -> unit [@@js.set "prototype"]
    val create: t -> _BarProp [@@js.apply_newable]
  end
  module AnonymousInterface34 : sig
    type t = anonymous_interface_34
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _BaseAudioContext [@@js.get "prototype"]
    val set_prototype: t -> _BaseAudioContext -> unit [@@js.set "prototype"]
    val create: t -> _BaseAudioContext [@@js.apply_newable]
  end
  module AnonymousInterface35 : sig
    type t = anonymous_interface_35
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _BeforeUnloadEvent [@@js.get "prototype"]
    val set_prototype: t -> _BeforeUnloadEvent -> unit [@@js.set "prototype"]
    val create: t -> _BeforeUnloadEvent [@@js.apply_newable]
  end
  module AnonymousInterface36 : sig
    type t = anonymous_interface_36
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _BhxBrowser [@@js.get "prototype"]
    val set_prototype: t -> _BhxBrowser -> unit [@@js.set "prototype"]
    val create: t -> _BhxBrowser [@@js.apply_newable]
  end
  module AnonymousInterface37 : sig
    type t = anonymous_interface_37
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _BiquadFilterNode [@@js.get "prototype"]
    val set_prototype: t -> _BiquadFilterNode -> unit [@@js.set "prototype"]
    val create: t -> context:_BaseAudioContext -> ?options:_BiquadFilterOptions -> unit -> _BiquadFilterNode [@@js.apply_newable]
  end
  module AnonymousInterface38 : sig
    type t = anonymous_interface_38
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _Blob [@@js.get "prototype"]
    val set_prototype: t -> _Blob -> unit [@@js.set "prototype"]
    val create: t -> ?blobParts:_BlobPart list -> ?options:_BlobPropertyBag -> unit -> _Blob [@@js.apply_newable]
  end
  module AnonymousInterface39 : sig
    type t = anonymous_interface_39
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _BroadcastChannel [@@js.get "prototype"]
    val set_prototype: t -> _BroadcastChannel -> unit [@@js.set "prototype"]
    val create: t -> name:string -> _BroadcastChannel [@@js.apply_newable]
  end
  module AnonymousInterface40 : sig
    type t = anonymous_interface_40
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _ByteLengthQueuingStrategy [@@js.get "prototype"]
    val set_prototype: t -> _ByteLengthQueuingStrategy -> unit [@@js.set "prototype"]
    val create: t -> options:anonymous_interface_2 -> _ByteLengthQueuingStrategy [@@js.apply_newable]
  end
  module AnonymousInterface41 : sig
    type t = anonymous_interface_41
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _CDATASection [@@js.get "prototype"]
    val set_prototype: t -> _CDATASection -> unit [@@js.set "prototype"]
    val create: t -> _CDATASection [@@js.apply_newable]
  end
  module AnonymousInterface42 : sig
    type t = anonymous_interface_42
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _CSSConditionRule [@@js.get "prototype"]
    val set_prototype: t -> _CSSConditionRule -> unit [@@js.set "prototype"]
    val create: t -> _CSSConditionRule [@@js.apply_newable]
  end
  module AnonymousInterface43 : sig
    type t = anonymous_interface_43
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _CSSFontFaceRule [@@js.get "prototype"]
    val set_prototype: t -> _CSSFontFaceRule -> unit [@@js.set "prototype"]
    val create: t -> _CSSFontFaceRule [@@js.apply_newable]
  end
  module AnonymousInterface44 : sig
    type t = anonymous_interface_44
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _CSSGroupingRule [@@js.get "prototype"]
    val set_prototype: t -> _CSSGroupingRule -> unit [@@js.set "prototype"]
    val create: t -> _CSSGroupingRule [@@js.apply_newable]
  end
  module AnonymousInterface45 : sig
    type t = anonymous_interface_45
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _CSSImportRule [@@js.get "prototype"]
    val set_prototype: t -> _CSSImportRule -> unit [@@js.set "prototype"]
    val create: t -> _CSSImportRule [@@js.apply_newable]
  end
  module AnonymousInterface46 : sig
    type t = anonymous_interface_46
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _CSSKeyframeRule [@@js.get "prototype"]
    val set_prototype: t -> _CSSKeyframeRule -> unit [@@js.set "prototype"]
    val create: t -> _CSSKeyframeRule [@@js.apply_newable]
  end
  module AnonymousInterface47 : sig
    type t = anonymous_interface_47
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _CSSKeyframesRule [@@js.get "prototype"]
    val set_prototype: t -> _CSSKeyframesRule -> unit [@@js.set "prototype"]
    val create: t -> _CSSKeyframesRule [@@js.apply_newable]
  end
  module AnonymousInterface48 : sig
    type t = anonymous_interface_48
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _CSSMediaRule [@@js.get "prototype"]
    val set_prototype: t -> _CSSMediaRule -> unit [@@js.set "prototype"]
    val create: t -> _CSSMediaRule [@@js.apply_newable]
  end
  module AnonymousInterface49 : sig
    type t = anonymous_interface_49
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _CSSNamespaceRule [@@js.get "prototype"]
    val set_prototype: t -> _CSSNamespaceRule -> unit [@@js.set "prototype"]
    val create: t -> _CSSNamespaceRule [@@js.apply_newable]
  end
  module AnonymousInterface50 : sig
    type t = anonymous_interface_50
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _CSSPageRule [@@js.get "prototype"]
    val set_prototype: t -> _CSSPageRule -> unit [@@js.set "prototype"]
    val create: t -> _CSSPageRule [@@js.apply_newable]
  end
  module AnonymousInterface51 : sig
    type t = anonymous_interface_51
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _CSSRule [@@js.get "prototype"]
    val set_prototype: t -> _CSSRule -> unit [@@js.set "prototype"]
    val create: t -> _CSSRule [@@js.apply_newable]
    val get_CHARSET_RULE: t -> float [@@js.get "CHARSET_RULE"]
    val get_FONT_FACE_RULE: t -> float [@@js.get "FONT_FACE_RULE"]
    val get_IMPORT_RULE: t -> float [@@js.get "IMPORT_RULE"]
    val get_KEYFRAMES_RULE: t -> float [@@js.get "KEYFRAMES_RULE"]
    val get_KEYFRAME_RULE: t -> float [@@js.get "KEYFRAME_RULE"]
    val get_MEDIA_RULE: t -> float [@@js.get "MEDIA_RULE"]
    val get_NAMESPACE_RULE: t -> float [@@js.get "NAMESPACE_RULE"]
    val get_PAGE_RULE: t -> float [@@js.get "PAGE_RULE"]
    val get_STYLE_RULE: t -> float [@@js.get "STYLE_RULE"]
    val get_SUPPORTS_RULE: t -> float [@@js.get "SUPPORTS_RULE"]
    val get_UNKNOWN_RULE: t -> float [@@js.get "UNKNOWN_RULE"]
    val get_VIEWPORT_RULE: t -> float [@@js.get "VIEWPORT_RULE"]
  end
  module AnonymousInterface52 : sig
    type t = anonymous_interface_52
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _CSSRuleList [@@js.get "prototype"]
    val set_prototype: t -> _CSSRuleList -> unit [@@js.set "prototype"]
    val create: t -> _CSSRuleList [@@js.apply_newable]
  end
  module AnonymousInterface53 : sig
    type t = anonymous_interface_53
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _CSSStyleDeclaration [@@js.get "prototype"]
    val set_prototype: t -> _CSSStyleDeclaration -> unit [@@js.set "prototype"]
    val create: t -> _CSSStyleDeclaration [@@js.apply_newable]
  end
  module AnonymousInterface54 : sig
    type t = anonymous_interface_54
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _CSSStyleRule [@@js.get "prototype"]
    val set_prototype: t -> _CSSStyleRule -> unit [@@js.set "prototype"]
    val create: t -> _CSSStyleRule [@@js.apply_newable]
  end
  module AnonymousInterface55 : sig
    type t = anonymous_interface_55
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _CSSStyleSheet [@@js.get "prototype"]
    val set_prototype: t -> _CSSStyleSheet -> unit [@@js.set "prototype"]
    val create: t -> _CSSStyleSheet [@@js.apply_newable]
  end
  module AnonymousInterface56 : sig
    type t = anonymous_interface_56
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _CSSSupportsRule [@@js.get "prototype"]
    val set_prototype: t -> _CSSSupportsRule -> unit [@@js.set "prototype"]
    val create: t -> _CSSSupportsRule [@@js.apply_newable]
  end
  module AnonymousInterface57 : sig
    type t = anonymous_interface_57
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _Cache [@@js.get "prototype"]
    val set_prototype: t -> _Cache -> unit [@@js.set "prototype"]
    val create: t -> _Cache [@@js.apply_newable]
  end
  module AnonymousInterface58 : sig
    type t = anonymous_interface_58
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _CacheStorage [@@js.get "prototype"]
    val set_prototype: t -> _CacheStorage -> unit [@@js.set "prototype"]
    val create: t -> _CacheStorage [@@js.apply_newable]
  end
  module AnonymousInterface59 : sig
    type t = anonymous_interface_59
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _CanvasGradient [@@js.get "prototype"]
    val set_prototype: t -> _CanvasGradient -> unit [@@js.set "prototype"]
    val create: t -> _CanvasGradient [@@js.apply_newable]
  end
  module AnonymousInterface60 : sig
    type t = anonymous_interface_60
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _CanvasPattern [@@js.get "prototype"]
    val set_prototype: t -> _CanvasPattern -> unit [@@js.set "prototype"]
    val create: t -> _CanvasPattern [@@js.apply_newable]
  end
  module AnonymousInterface61 : sig
    type t = anonymous_interface_61
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _CanvasRenderingContext2D [@@js.get "prototype"]
    val set_prototype: t -> _CanvasRenderingContext2D -> unit [@@js.set "prototype"]
    val create: t -> _CanvasRenderingContext2D [@@js.apply_newable]
  end
  module AnonymousInterface62 : sig
    type t = anonymous_interface_62
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _CaretPosition [@@js.get "prototype"]
    val set_prototype: t -> _CaretPosition -> unit [@@js.set "prototype"]
    val create: t -> _CaretPosition [@@js.apply_newable]
  end
  module AnonymousInterface63 : sig
    type t = anonymous_interface_63
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _ChannelMergerNode [@@js.get "prototype"]
    val set_prototype: t -> _ChannelMergerNode -> unit [@@js.set "prototype"]
    val create: t -> context:_BaseAudioContext -> ?options:_ChannelMergerOptions -> unit -> _ChannelMergerNode [@@js.apply_newable]
  end
  module AnonymousInterface64 : sig
    type t = anonymous_interface_64
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _ChannelSplitterNode [@@js.get "prototype"]
    val set_prototype: t -> _ChannelSplitterNode -> unit [@@js.set "prototype"]
    val create: t -> context:_BaseAudioContext -> ?options:_ChannelSplitterOptions -> unit -> _ChannelSplitterNode [@@js.apply_newable]
  end
  module AnonymousInterface65 : sig
    type t = anonymous_interface_65
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _CharacterData [@@js.get "prototype"]
    val set_prototype: t -> _CharacterData -> unit [@@js.set "prototype"]
    val create: t -> _CharacterData [@@js.apply_newable]
  end
  module AnonymousInterface66 : sig
    type t = anonymous_interface_66
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _ClientRect [@@js.get "prototype"]
    val set_prototype: t -> _ClientRect -> unit [@@js.set "prototype"]
    val create: t -> _ClientRect [@@js.apply_newable]
  end
  module AnonymousInterface67 : sig
    type t = anonymous_interface_67
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _ClientRectList [@@js.get "prototype"]
    val set_prototype: t -> _ClientRectList -> unit [@@js.set "prototype"]
    val create: t -> _ClientRectList [@@js.apply_newable]
  end
  module AnonymousInterface68 : sig
    type t = anonymous_interface_68
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _Clipboard [@@js.get "prototype"]
    val set_prototype: t -> _Clipboard -> unit [@@js.set "prototype"]
    val create: t -> _Clipboard [@@js.apply_newable]
  end
  module AnonymousInterface69 : sig
    type t = anonymous_interface_69
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _ClipboardEvent [@@js.get "prototype"]
    val set_prototype: t -> _ClipboardEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> ?eventInitDict:_ClipboardEventInit -> unit -> _ClipboardEvent [@@js.apply_newable]
  end
  module AnonymousInterface70 : sig
    type t = anonymous_interface_70
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _CloseEvent [@@js.get "prototype"]
    val set_prototype: t -> _CloseEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> ?eventInitDict:_CloseEventInit -> unit -> _CloseEvent [@@js.apply_newable]
  end
  module AnonymousInterface71 : sig
    type t = anonymous_interface_71
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _Comment [@@js.get "prototype"]
    val set_prototype: t -> _Comment -> unit [@@js.set "prototype"]
    val create: t -> ?data:string -> unit -> _Comment [@@js.apply_newable]
  end
  module AnonymousInterface72 : sig
    type t = anonymous_interface_72
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _WebAssembly_CompileError [@@js.get "prototype"]
    val set_prototype: t -> _WebAssembly_CompileError -> unit [@@js.set "prototype"]
    val create: t -> _WebAssembly_CompileError [@@js.apply_newable]
  end
  module AnonymousInterface73 : sig
    type t = anonymous_interface_73
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _CompositionEvent [@@js.get "prototype"]
    val set_prototype: t -> _CompositionEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> ?eventInitDict:_CompositionEventInit -> unit -> _CompositionEvent [@@js.apply_newable]
  end
  module AnonymousInterface74 : sig
    type t = anonymous_interface_74
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _Console [@@js.get "prototype"]
    val set_prototype: t -> _Console -> unit [@@js.set "prototype"]
    val create: t -> _Console [@@js.apply_newable]
  end
  module AnonymousInterface75 : sig
    type t = anonymous_interface_75
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _ConstantSourceNode [@@js.get "prototype"]
    val set_prototype: t -> _ConstantSourceNode -> unit [@@js.set "prototype"]
    val create: t -> context:_BaseAudioContext -> ?options:_ConstantSourceOptions -> unit -> _ConstantSourceNode [@@js.apply_newable]
  end
  module AnonymousInterface76 : sig
    type t = anonymous_interface_76
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _ConvolverNode [@@js.get "prototype"]
    val set_prototype: t -> _ConvolverNode -> unit [@@js.set "prototype"]
    val create: t -> context:_BaseAudioContext -> ?options:_ConvolverOptions -> unit -> _ConvolverNode [@@js.apply_newable]
  end
  module AnonymousInterface77 : sig
    type t = anonymous_interface_77
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _CountQueuingStrategy [@@js.get "prototype"]
    val set_prototype: t -> _CountQueuingStrategy -> unit [@@js.set "prototype"]
    val create: t -> options:anonymous_interface_2 -> _CountQueuingStrategy [@@js.apply_newable]
  end
  module AnonymousInterface78 : sig
    type t = anonymous_interface_78
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _Credential [@@js.get "prototype"]
    val set_prototype: t -> _Credential -> unit [@@js.set "prototype"]
    val create: t -> _Credential [@@js.apply_newable]
  end
  module AnonymousInterface79 : sig
    type t = anonymous_interface_79
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _CredentialsContainer [@@js.get "prototype"]
    val set_prototype: t -> _CredentialsContainer -> unit [@@js.set "prototype"]
    val create: t -> _CredentialsContainer [@@js.apply_newable]
  end
  module AnonymousInterface80 : sig
    type t = anonymous_interface_80
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _Crypto [@@js.get "prototype"]
    val set_prototype: t -> _Crypto -> unit [@@js.set "prototype"]
    val create: t -> _Crypto [@@js.apply_newable]
  end
  module AnonymousInterface81 : sig
    type t = anonymous_interface_81
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _CryptoKey [@@js.get "prototype"]
    val set_prototype: t -> _CryptoKey -> unit [@@js.set "prototype"]
    val create: t -> _CryptoKey [@@js.apply_newable]
  end
  module AnonymousInterface82 : sig
    type t = anonymous_interface_82
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _CryptoKeyPair [@@js.get "prototype"]
    val set_prototype: t -> _CryptoKeyPair -> unit [@@js.set "prototype"]
    val create: t -> _CryptoKeyPair [@@js.apply_newable]
  end
  module AnonymousInterface83 : sig
    type t = anonymous_interface_83
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _CustomElementRegistry [@@js.get "prototype"]
    val set_prototype: t -> _CustomElementRegistry -> unit [@@js.set "prototype"]
    val create: t -> _CustomElementRegistry [@@js.apply_newable]
  end
  module AnonymousInterface84 : sig
    type t = anonymous_interface_84
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> any _CustomEvent [@@js.get "prototype"]
    val set_prototype: t -> any _CustomEvent -> unit [@@js.set "prototype"]
    val create: t -> typeArg:string -> ?eventInitDict:'T _CustomEventInit -> unit -> 'T _CustomEvent [@@js.apply_newable]
  end
  module AnonymousInterface85 : sig
    type t = anonymous_interface_85
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _DOMError [@@js.get "prototype"]
    val set_prototype: t -> _DOMError -> unit [@@js.set "prototype"]
    val create: t -> _DOMError [@@js.apply_newable]
  end
  module AnonymousInterface86 : sig
    type t = anonymous_interface_86
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _DOMException [@@js.get "prototype"]
    val set_prototype: t -> _DOMException -> unit [@@js.set "prototype"]
    val create: t -> ?message:string -> ?name:string -> unit -> _DOMException [@@js.apply_newable]
    val get_ABORT_ERR: t -> float [@@js.get "ABORT_ERR"]
    val get_DATA_CLONE_ERR: t -> float [@@js.get "DATA_CLONE_ERR"]
    val get_DOMSTRING_SIZE_ERR: t -> float [@@js.get "DOMSTRING_SIZE_ERR"]
    val get_HIERARCHY_REQUEST_ERR: t -> float [@@js.get "HIERARCHY_REQUEST_ERR"]
    val get_INDEX_SIZE_ERR: t -> float [@@js.get "INDEX_SIZE_ERR"]
    val get_INUSE_ATTRIBUTE_ERR: t -> float [@@js.get "INUSE_ATTRIBUTE_ERR"]
    val get_INVALID_ACCESS_ERR: t -> float [@@js.get "INVALID_ACCESS_ERR"]
    val get_INVALID_CHARACTER_ERR: t -> float [@@js.get "INVALID_CHARACTER_ERR"]
    val get_INVALID_MODIFICATION_ERR: t -> float [@@js.get "INVALID_MODIFICATION_ERR"]
    val get_INVALID_NODE_TYPE_ERR: t -> float [@@js.get "INVALID_NODE_TYPE_ERR"]
    val get_INVALID_STATE_ERR: t -> float [@@js.get "INVALID_STATE_ERR"]
    val get_NAMESPACE_ERR: t -> float [@@js.get "NAMESPACE_ERR"]
    val get_NETWORK_ERR: t -> float [@@js.get "NETWORK_ERR"]
    val get_NOT_FOUND_ERR: t -> float [@@js.get "NOT_FOUND_ERR"]
    val get_NOT_SUPPORTED_ERR: t -> float [@@js.get "NOT_SUPPORTED_ERR"]
    val get_NO_DATA_ALLOWED_ERR: t -> float [@@js.get "NO_DATA_ALLOWED_ERR"]
    val get_NO_MODIFICATION_ALLOWED_ERR: t -> float [@@js.get "NO_MODIFICATION_ALLOWED_ERR"]
    val get_QUOTA_EXCEEDED_ERR: t -> float [@@js.get "QUOTA_EXCEEDED_ERR"]
    val get_SECURITY_ERR: t -> float [@@js.get "SECURITY_ERR"]
    val get_SYNTAX_ERR: t -> float [@@js.get "SYNTAX_ERR"]
    val get_TIMEOUT_ERR: t -> float [@@js.get "TIMEOUT_ERR"]
    val get_TYPE_MISMATCH_ERR: t -> float [@@js.get "TYPE_MISMATCH_ERR"]
    val get_URL_MISMATCH_ERR: t -> float [@@js.get "URL_MISMATCH_ERR"]
    val get_VALIDATION_ERR: t -> float [@@js.get "VALIDATION_ERR"]
    val get_WRONG_DOCUMENT_ERR: t -> float [@@js.get "WRONG_DOCUMENT_ERR"]
  end
  module AnonymousInterface87 : sig
    type t = anonymous_interface_87
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _DOMImplementation [@@js.get "prototype"]
    val set_prototype: t -> _DOMImplementation -> unit [@@js.set "prototype"]
    val create: t -> _DOMImplementation [@@js.apply_newable]
  end
  module AnonymousInterface88 : sig
    type t = anonymous_interface_88
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _DOMMatrix [@@js.get "prototype"]
    val set_prototype: t -> _DOMMatrix -> unit [@@js.set "prototype"]
    val create: t -> ?init:float list or_string -> unit -> _DOMMatrix [@@js.apply_newable]
    val fromFloat32Array: t -> array32:Float32Array.t_0 -> _DOMMatrix [@@js.call "fromFloat32Array"]
    val fromFloat64Array: t -> array64:Float64Array.t_0 -> _DOMMatrix [@@js.call "fromFloat64Array"]
    val fromMatrix: t -> ?other:_DOMMatrixInit -> unit -> _DOMMatrix [@@js.call "fromMatrix"]
  end
  module AnonymousInterface89 : sig
    type t = anonymous_interface_89
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _DOMMatrixReadOnly [@@js.get "prototype"]
    val set_prototype: t -> _DOMMatrixReadOnly -> unit [@@js.set "prototype"]
    val create: t -> ?init:float list or_string -> unit -> _DOMMatrixReadOnly [@@js.apply_newable]
    val fromFloat32Array: t -> array32:Float32Array.t_0 -> _DOMMatrixReadOnly [@@js.call "fromFloat32Array"]
    val fromFloat64Array: t -> array64:Float64Array.t_0 -> _DOMMatrixReadOnly [@@js.call "fromFloat64Array"]
    val fromMatrix: t -> ?other:_DOMMatrixInit -> unit -> _DOMMatrixReadOnly [@@js.call "fromMatrix"]
    val toString: t -> string [@@js.call "toString"]
  end
  module AnonymousInterface90 : sig
    type t = anonymous_interface_90
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _DOMParser [@@js.get "prototype"]
    val set_prototype: t -> _DOMParser -> unit [@@js.set "prototype"]
    val create: t -> _DOMParser [@@js.apply_newable]
  end
  module AnonymousInterface91 : sig
    type t = anonymous_interface_91
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _DOMPoint [@@js.get "prototype"]
    val set_prototype: t -> _DOMPoint -> unit [@@js.set "prototype"]
    val create: t -> ?x:float -> ?y:float -> ?z:float -> ?w:float -> unit -> _DOMPoint [@@js.apply_newable]
    val fromPoint: t -> ?other:_DOMPointInit -> unit -> _DOMPoint [@@js.call "fromPoint"]
  end
  module AnonymousInterface92 : sig
    type t = anonymous_interface_92
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _DOMPointReadOnly [@@js.get "prototype"]
    val set_prototype: t -> _DOMPointReadOnly -> unit [@@js.set "prototype"]
    val create: t -> ?x:float -> ?y:float -> ?z:float -> ?w:float -> unit -> _DOMPointReadOnly [@@js.apply_newable]
    val fromPoint: t -> ?other:_DOMPointInit -> unit -> _DOMPointReadOnly [@@js.call "fromPoint"]
  end
  module AnonymousInterface93 : sig
    type t = anonymous_interface_93
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _DOMQuad [@@js.get "prototype"]
    val set_prototype: t -> _DOMQuad -> unit [@@js.set "prototype"]
    val create: t -> ?p1:_DOMPointInit -> ?p2:_DOMPointInit -> ?p3:_DOMPointInit -> ?p4:_DOMPointInit -> unit -> _DOMQuad [@@js.apply_newable]
    val fromQuad: t -> ?other:_DOMQuadInit -> unit -> _DOMQuad [@@js.call "fromQuad"]
    val fromRect: t -> ?other:_DOMRectInit -> unit -> _DOMQuad [@@js.call "fromRect"]
  end
  module AnonymousInterface94 : sig
    type t = anonymous_interface_94
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _DOMRect [@@js.get "prototype"]
    val set_prototype: t -> _DOMRect -> unit [@@js.set "prototype"]
    val create: t -> ?x:float -> ?y:float -> ?width:float -> ?height:float -> unit -> _DOMRect [@@js.apply_newable]
    val fromRect: t -> ?other:_DOMRectInit -> unit -> _DOMRect [@@js.call "fromRect"]
  end
  module AnonymousInterface95 : sig
    type t = anonymous_interface_95
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _DOMRectList [@@js.get "prototype"]
    val set_prototype: t -> _DOMRectList -> unit [@@js.set "prototype"]
    val create: t -> _DOMRectList [@@js.apply_newable]
  end
  module AnonymousInterface96 : sig
    type t = anonymous_interface_96
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _DOMRectReadOnly [@@js.get "prototype"]
    val set_prototype: t -> _DOMRectReadOnly -> unit [@@js.set "prototype"]
    val create: t -> ?x:float -> ?y:float -> ?width:float -> ?height:float -> unit -> _DOMRectReadOnly [@@js.apply_newable]
    val fromRect: t -> ?other:_DOMRectInit -> unit -> _DOMRectReadOnly [@@js.call "fromRect"]
  end
  module AnonymousInterface97 : sig
    type t = anonymous_interface_97
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _DOMSettableTokenList [@@js.get "prototype"]
    val set_prototype: t -> _DOMSettableTokenList -> unit [@@js.set "prototype"]
    val create: t -> _DOMSettableTokenList [@@js.apply_newable]
  end
  module AnonymousInterface98 : sig
    type t = anonymous_interface_98
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _DOMStringList [@@js.get "prototype"]
    val set_prototype: t -> _DOMStringList -> unit [@@js.set "prototype"]
    val create: t -> _DOMStringList [@@js.apply_newable]
  end
  module AnonymousInterface99 : sig
    type t = anonymous_interface_99
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _DOMStringMap [@@js.get "prototype"]
    val set_prototype: t -> _DOMStringMap -> unit [@@js.set "prototype"]
    val create: t -> _DOMStringMap [@@js.apply_newable]
  end
  module AnonymousInterface100 : sig
    type t = anonymous_interface_100
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _DOMTokenList [@@js.get "prototype"]
    val set_prototype: t -> _DOMTokenList -> unit [@@js.set "prototype"]
    val create: t -> _DOMTokenList [@@js.apply_newable]
  end
  module AnonymousInterface101 : sig
    type t = anonymous_interface_101
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _DataCue [@@js.get "prototype"]
    val set_prototype: t -> _DataCue -> unit [@@js.set "prototype"]
    val create: t -> _DataCue [@@js.apply_newable]
  end
  module AnonymousInterface102 : sig
    type t = anonymous_interface_102
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _DataTransfer [@@js.get "prototype"]
    val set_prototype: t -> _DataTransfer -> unit [@@js.set "prototype"]
    val create: t -> _DataTransfer [@@js.apply_newable]
  end
  module AnonymousInterface103 : sig
    type t = anonymous_interface_103
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _DataTransferItem [@@js.get "prototype"]
    val set_prototype: t -> _DataTransferItem -> unit [@@js.set "prototype"]
    val create: t -> _DataTransferItem [@@js.apply_newable]
  end
  module AnonymousInterface104 : sig
    type t = anonymous_interface_104
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _DataTransferItemList [@@js.get "prototype"]
    val set_prototype: t -> _DataTransferItemList -> unit [@@js.set "prototype"]
    val create: t -> _DataTransferItemList [@@js.apply_newable]
  end
  module AnonymousInterface105 : sig
    type t = anonymous_interface_105
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _DeferredPermissionRequest [@@js.get "prototype"]
    val set_prototype: t -> _DeferredPermissionRequest -> unit [@@js.set "prototype"]
    val create: t -> _DeferredPermissionRequest [@@js.apply_newable]
  end
  module AnonymousInterface106 : sig
    type t = anonymous_interface_106
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _DelayNode [@@js.get "prototype"]
    val set_prototype: t -> _DelayNode -> unit [@@js.set "prototype"]
    val create: t -> context:_BaseAudioContext -> ?options:_DelayOptions -> unit -> _DelayNode [@@js.apply_newable]
  end
  module AnonymousInterface107 : sig
    type t = anonymous_interface_107
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _DeviceAcceleration [@@js.get "prototype"]
    val set_prototype: t -> _DeviceAcceleration -> unit [@@js.set "prototype"]
    val create: t -> _DeviceAcceleration [@@js.apply_newable]
  end
  module AnonymousInterface108 : sig
    type t = anonymous_interface_108
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _DeviceLightEvent [@@js.get "prototype"]
    val set_prototype: t -> _DeviceLightEvent -> unit [@@js.set "prototype"]
    val create: t -> typeArg:string -> ?eventInitDict:_DeviceLightEventInit -> unit -> _DeviceLightEvent [@@js.apply_newable]
  end
  module AnonymousInterface109 : sig
    type t = anonymous_interface_109
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _DeviceMotionEvent [@@js.get "prototype"]
    val set_prototype: t -> _DeviceMotionEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> ?eventInitDict:_DeviceMotionEventInit -> unit -> _DeviceMotionEvent [@@js.apply_newable]
    val requestPermission: t -> _PermissionState Promise.t_1 [@@js.call "requestPermission"]
  end
  module AnonymousInterface110 : sig
    type t = anonymous_interface_110
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _DeviceOrientationEvent [@@js.get "prototype"]
    val set_prototype: t -> _DeviceOrientationEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> ?eventInitDict:_DeviceOrientationEventInit -> unit -> _DeviceOrientationEvent [@@js.apply_newable]
    val requestPermission: t -> _PermissionState Promise.t_1 [@@js.call "requestPermission"]
  end
  module AnonymousInterface111 : sig
    type t = anonymous_interface_111
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _DeviceRotationRate [@@js.get "prototype"]
    val set_prototype: t -> _DeviceRotationRate -> unit [@@js.set "prototype"]
    val create: t -> _DeviceRotationRate [@@js.apply_newable]
  end
  module AnonymousInterface112 : sig
    type t = anonymous_interface_112
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _Document [@@js.get "prototype"]
    val set_prototype: t -> _Document -> unit [@@js.set "prototype"]
    val create: t -> _Document [@@js.apply_newable]
  end
  module AnonymousInterface113 : sig
    type t = anonymous_interface_113
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _DocumentFragment [@@js.get "prototype"]
    val set_prototype: t -> _DocumentFragment -> unit [@@js.set "prototype"]
    val create: t -> _DocumentFragment [@@js.apply_newable]
  end
  module AnonymousInterface114 : sig
    type t = anonymous_interface_114
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _DocumentTimeline [@@js.get "prototype"]
    val set_prototype: t -> _DocumentTimeline -> unit [@@js.set "prototype"]
    val create: t -> ?options:_DocumentTimelineOptions -> unit -> _DocumentTimeline [@@js.apply_newable]
  end
  module AnonymousInterface115 : sig
    type t = anonymous_interface_115
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _DocumentType [@@js.get "prototype"]
    val set_prototype: t -> _DocumentType -> unit [@@js.set "prototype"]
    val create: t -> _DocumentType [@@js.apply_newable]
  end
  module AnonymousInterface116 : sig
    type t = anonymous_interface_116
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _DragEvent [@@js.get "prototype"]
    val set_prototype: t -> _DragEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> ?eventInitDict:_DragEventInit -> unit -> _DragEvent [@@js.apply_newable]
  end
  module AnonymousInterface117 : sig
    type t = anonymous_interface_117
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _DynamicsCompressorNode [@@js.get "prototype"]
    val set_prototype: t -> _DynamicsCompressorNode -> unit [@@js.set "prototype"]
    val create: t -> context:_BaseAudioContext -> ?options:_DynamicsCompressorOptions -> unit -> _DynamicsCompressorNode [@@js.apply_newable]
  end
  module AnonymousInterface118 : sig
    type t = anonymous_interface_118
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _Element [@@js.get "prototype"]
    val set_prototype: t -> _Element -> unit [@@js.set "prototype"]
    val create: t -> _Element [@@js.apply_newable]
  end
  module AnonymousInterface119 : sig
    type t = anonymous_interface_119
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _ErrorEvent [@@js.get "prototype"]
    val set_prototype: t -> _ErrorEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> ?eventInitDict:_ErrorEventInit -> unit -> _ErrorEvent [@@js.apply_newable]
  end
  module AnonymousInterface120 : sig
    type t = anonymous_interface_120
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _Event [@@js.get "prototype"]
    val set_prototype: t -> _Event -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> ?eventInitDict:_EventInit -> unit -> _Event [@@js.apply_newable]
    val get_AT_TARGET: t -> float [@@js.get "AT_TARGET"]
    val get_BUBBLING_PHASE: t -> float [@@js.get "BUBBLING_PHASE"]
    val get_CAPTURING_PHASE: t -> float [@@js.get "CAPTURING_PHASE"]
    val get_NONE: t -> float [@@js.get "NONE"]
  end
  module AnonymousInterface121 : sig
    type t = anonymous_interface_121
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _EventSource [@@js.get "prototype"]
    val set_prototype: t -> _EventSource -> unit [@@js.set "prototype"]
    val create: t -> url:string -> ?eventSourceInitDict:_EventSourceInit -> unit -> _EventSource [@@js.apply_newable]
    val get_CLOSED: t -> float [@@js.get "CLOSED"]
    val get_CONNECTING: t -> float [@@js.get "CONNECTING"]
    val get_OPEN: t -> float [@@js.get "OPEN"]
  end
  module AnonymousInterface122 : sig
    type t = anonymous_interface_122
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _EventTarget [@@js.get "prototype"]
    val set_prototype: t -> _EventTarget -> unit [@@js.set "prototype"]
    val create: t -> _EventTarget [@@js.apply_newable]
  end
  module AnonymousInterface123 : sig
    type t = anonymous_interface_123
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _ExtensionScriptApis [@@js.get "prototype"]
    val set_prototype: t -> _ExtensionScriptApis -> unit [@@js.set "prototype"]
    val create: t -> _ExtensionScriptApis [@@js.apply_newable]
  end
  module AnonymousInterface124 : sig
    type t = anonymous_interface_124
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _External [@@js.get "prototype"]
    val set_prototype: t -> _External -> unit [@@js.set "prototype"]
    val create: t -> _External [@@js.apply_newable]
  end
  module AnonymousInterface125 : sig
    type t = anonymous_interface_125
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _File [@@js.get "prototype"]
    val set_prototype: t -> _File -> unit [@@js.set "prototype"]
    val create: t -> fileBits:_BlobPart list -> fileName:string -> ?options:_FilePropertyBag -> unit -> _File [@@js.apply_newable]
  end
  module AnonymousInterface126 : sig
    type t = anonymous_interface_126
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _FileList [@@js.get "prototype"]
    val set_prototype: t -> _FileList -> unit [@@js.set "prototype"]
    val create: t -> _FileList [@@js.apply_newable]
  end
  module AnonymousInterface127 : sig
    type t = anonymous_interface_127
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _FileReader [@@js.get "prototype"]
    val set_prototype: t -> _FileReader -> unit [@@js.set "prototype"]
    val create: t -> _FileReader [@@js.apply_newable]
    val get_DONE: t -> float [@@js.get "DONE"]
    val get_EMPTY: t -> float [@@js.get "EMPTY"]
    val get_LOADING: t -> float [@@js.get "LOADING"]
  end
  module AnonymousInterface128 : sig
    type t = anonymous_interface_128
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _FocusEvent [@@js.get "prototype"]
    val set_prototype: t -> _FocusEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> ?eventInitDict:_FocusEventInit -> unit -> _FocusEvent [@@js.apply_newable]
  end
  module AnonymousInterface129 : sig
    type t = anonymous_interface_129
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _FocusNavigationEvent [@@js.get "prototype"]
    val set_prototype: t -> _FocusNavigationEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> ?eventInitDict:_FocusNavigationEventInit -> unit -> _FocusNavigationEvent [@@js.apply_newable]
  end
  module AnonymousInterface130 : sig
    type t = anonymous_interface_130
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _FormData [@@js.get "prototype"]
    val set_prototype: t -> _FormData -> unit [@@js.set "prototype"]
    val create: t -> ?form:_HTMLFormElement -> unit -> _FormData [@@js.apply_newable]
  end
  module AnonymousInterface131 : sig
    type t = anonymous_interface_131
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _GainNode [@@js.get "prototype"]
    val set_prototype: t -> _GainNode -> unit [@@js.set "prototype"]
    val create: t -> context:_BaseAudioContext -> ?options:_GainOptions -> unit -> _GainNode [@@js.apply_newable]
  end
  module AnonymousInterface132 : sig
    type t = anonymous_interface_132
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _Gamepad [@@js.get "prototype"]
    val set_prototype: t -> _Gamepad -> unit [@@js.set "prototype"]
    val create: t -> _Gamepad [@@js.apply_newable]
  end
  module AnonymousInterface133 : sig
    type t = anonymous_interface_133
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _GamepadButton [@@js.get "prototype"]
    val set_prototype: t -> _GamepadButton -> unit [@@js.set "prototype"]
    val create: t -> _GamepadButton [@@js.apply_newable]
  end
  module AnonymousInterface134 : sig
    type t = anonymous_interface_134
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _GamepadEvent [@@js.get "prototype"]
    val set_prototype: t -> _GamepadEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> eventInitDict:_GamepadEventInit -> _GamepadEvent [@@js.apply_newable]
  end
  module AnonymousInterface135 : sig
    type t = anonymous_interface_135
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _GamepadHapticActuator [@@js.get "prototype"]
    val set_prototype: t -> _GamepadHapticActuator -> unit [@@js.set "prototype"]
    val create: t -> _GamepadHapticActuator [@@js.apply_newable]
  end
  module AnonymousInterface136 : sig
    type t = anonymous_interface_136
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _GamepadPose [@@js.get "prototype"]
    val set_prototype: t -> _GamepadPose -> unit [@@js.set "prototype"]
    val create: t -> _GamepadPose [@@js.apply_newable]
  end
  module AnonymousInterface137 : sig
    type t = anonymous_interface_137
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _WebAssembly_Global [@@js.get "prototype"]
    val set_prototype: t -> _WebAssembly_Global -> unit [@@js.set "prototype"]
    val create: t -> descriptor:_WebAssembly_GlobalDescriptor -> ?v:any -> unit -> _WebAssembly_Global [@@js.apply_newable]
  end
  module AnonymousInterface138 : sig
    type t = anonymous_interface_138
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLAllCollection [@@js.get "prototype"]
    val set_prototype: t -> _HTMLAllCollection -> unit [@@js.set "prototype"]
    val create: t -> _HTMLAllCollection [@@js.apply_newable]
  end
  module AnonymousInterface139 : sig
    type t = anonymous_interface_139
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLAnchorElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLAnchorElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLAnchorElement [@@js.apply_newable]
  end
  module AnonymousInterface140 : sig
    type t = anonymous_interface_140
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLAppletElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLAppletElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLAppletElement [@@js.apply_newable]
  end
  module AnonymousInterface141 : sig
    type t = anonymous_interface_141
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLAreaElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLAreaElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLAreaElement [@@js.apply_newable]
  end
  module AnonymousInterface142 : sig
    type t = anonymous_interface_142
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLAudioElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLAudioElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLAudioElement [@@js.apply_newable]
  end
  module AnonymousInterface143 : sig
    type t = anonymous_interface_143
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLBRElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLBRElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLBRElement [@@js.apply_newable]
  end
  module AnonymousInterface144 : sig
    type t = anonymous_interface_144
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLBaseElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLBaseElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLBaseElement [@@js.apply_newable]
  end
  module AnonymousInterface145 : sig
    type t = anonymous_interface_145
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLBaseFontElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLBaseFontElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLBaseFontElement [@@js.apply_newable]
  end
  module AnonymousInterface146 : sig
    type t = anonymous_interface_146
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLBodyElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLBodyElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLBodyElement [@@js.apply_newable]
  end
  module AnonymousInterface147 : sig
    type t = anonymous_interface_147
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLButtonElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLButtonElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLButtonElement [@@js.apply_newable]
  end
  module AnonymousInterface148 : sig
    type t = anonymous_interface_148
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLCanvasElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLCanvasElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLCanvasElement [@@js.apply_newable]
  end
  module AnonymousInterface149 : sig
    type t = anonymous_interface_149
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLCollection [@@js.get "prototype"]
    val set_prototype: t -> _HTMLCollection -> unit [@@js.set "prototype"]
    val create: t -> _HTMLCollection [@@js.apply_newable]
  end
  module AnonymousInterface150 : sig
    type t = anonymous_interface_150
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLDListElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLDListElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLDListElement [@@js.apply_newable]
  end
  module AnonymousInterface151 : sig
    type t = anonymous_interface_151
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLDataElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLDataElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLDataElement [@@js.apply_newable]
  end
  module AnonymousInterface152 : sig
    type t = anonymous_interface_152
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLDataListElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLDataListElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLDataListElement [@@js.apply_newable]
  end
  module AnonymousInterface153 : sig
    type t = anonymous_interface_153
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLDetailsElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLDetailsElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLDetailsElement [@@js.apply_newable]
  end
  module AnonymousInterface154 : sig
    type t = anonymous_interface_154
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLDialogElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLDialogElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLDialogElement [@@js.apply_newable]
  end
  module AnonymousInterface155 : sig
    type t = anonymous_interface_155
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLDirectoryElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLDirectoryElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLDirectoryElement [@@js.apply_newable]
  end
  module AnonymousInterface156 : sig
    type t = anonymous_interface_156
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLDivElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLDivElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLDivElement [@@js.apply_newable]
  end
  module AnonymousInterface157 : sig
    type t = anonymous_interface_157
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLDocument [@@js.get "prototype"]
    val set_prototype: t -> _HTMLDocument -> unit [@@js.set "prototype"]
    val create: t -> _HTMLDocument [@@js.apply_newable]
  end
  module AnonymousInterface158 : sig
    type t = anonymous_interface_158
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLElement [@@js.apply_newable]
  end
  module AnonymousInterface159 : sig
    type t = anonymous_interface_159
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLEmbedElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLEmbedElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLEmbedElement [@@js.apply_newable]
  end
  module AnonymousInterface160 : sig
    type t = anonymous_interface_160
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLFieldSetElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLFieldSetElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLFieldSetElement [@@js.apply_newable]
  end
  module AnonymousInterface161 : sig
    type t = anonymous_interface_161
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLFontElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLFontElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLFontElement [@@js.apply_newable]
  end
  module AnonymousInterface162 : sig
    type t = anonymous_interface_162
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLFormControlsCollection [@@js.get "prototype"]
    val set_prototype: t -> _HTMLFormControlsCollection -> unit [@@js.set "prototype"]
    val create: t -> _HTMLFormControlsCollection [@@js.apply_newable]
  end
  module AnonymousInterface163 : sig
    type t = anonymous_interface_163
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLFormElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLFormElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLFormElement [@@js.apply_newable]
  end
  module AnonymousInterface164 : sig
    type t = anonymous_interface_164
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLFrameElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLFrameElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLFrameElement [@@js.apply_newable]
  end
  module AnonymousInterface165 : sig
    type t = anonymous_interface_165
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLFrameSetElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLFrameSetElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLFrameSetElement [@@js.apply_newable]
  end
  module AnonymousInterface166 : sig
    type t = anonymous_interface_166
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLHRElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLHRElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLHRElement [@@js.apply_newable]
  end
  module AnonymousInterface167 : sig
    type t = anonymous_interface_167
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLHeadElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLHeadElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLHeadElement [@@js.apply_newable]
  end
  module AnonymousInterface168 : sig
    type t = anonymous_interface_168
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLHeadingElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLHeadingElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLHeadingElement [@@js.apply_newable]
  end
  module AnonymousInterface169 : sig
    type t = anonymous_interface_169
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLHtmlElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLHtmlElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLHtmlElement [@@js.apply_newable]
  end
  module AnonymousInterface170 : sig
    type t = anonymous_interface_170
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLIFrameElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLIFrameElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLIFrameElement [@@js.apply_newable]
  end
  module AnonymousInterface171 : sig
    type t = anonymous_interface_171
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLImageElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLImageElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLImageElement [@@js.apply_newable]
  end
  module AnonymousInterface172 : sig
    type t = anonymous_interface_172
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLInputElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLInputElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLInputElement [@@js.apply_newable]
  end
  module AnonymousInterface173 : sig
    type t = anonymous_interface_173
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLLIElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLLIElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLLIElement [@@js.apply_newable]
  end
  module AnonymousInterface174 : sig
    type t = anonymous_interface_174
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLLabelElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLLabelElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLLabelElement [@@js.apply_newable]
  end
  module AnonymousInterface175 : sig
    type t = anonymous_interface_175
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLLegendElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLLegendElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLLegendElement [@@js.apply_newable]
  end
  module AnonymousInterface176 : sig
    type t = anonymous_interface_176
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLLinkElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLLinkElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLLinkElement [@@js.apply_newable]
  end
  module AnonymousInterface177 : sig
    type t = anonymous_interface_177
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLMapElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLMapElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLMapElement [@@js.apply_newable]
  end
  module AnonymousInterface178 : sig
    type t = anonymous_interface_178
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLMarqueeElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLMarqueeElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLMarqueeElement [@@js.apply_newable]
  end
  module AnonymousInterface179 : sig
    type t = anonymous_interface_179
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLMediaElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLMediaElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLMediaElement [@@js.apply_newable]
    val get_HAVE_CURRENT_DATA: t -> float [@@js.get "HAVE_CURRENT_DATA"]
    val get_HAVE_ENOUGH_DATA: t -> float [@@js.get "HAVE_ENOUGH_DATA"]
    val get_HAVE_FUTURE_DATA: t -> float [@@js.get "HAVE_FUTURE_DATA"]
    val get_HAVE_METADATA: t -> float [@@js.get "HAVE_METADATA"]
    val get_HAVE_NOTHING: t -> float [@@js.get "HAVE_NOTHING"]
    val get_NETWORK_EMPTY: t -> float [@@js.get "NETWORK_EMPTY"]
    val get_NETWORK_IDLE: t -> float [@@js.get "NETWORK_IDLE"]
    val get_NETWORK_LOADING: t -> float [@@js.get "NETWORK_LOADING"]
    val get_NETWORK_NO_SOURCE: t -> float [@@js.get "NETWORK_NO_SOURCE"]
  end
  module AnonymousInterface180 : sig
    type t = anonymous_interface_180
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLMenuElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLMenuElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLMenuElement [@@js.apply_newable]
  end
  module AnonymousInterface181 : sig
    type t = anonymous_interface_181
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLMetaElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLMetaElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLMetaElement [@@js.apply_newable]
  end
  module AnonymousInterface182 : sig
    type t = anonymous_interface_182
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLMeterElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLMeterElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLMeterElement [@@js.apply_newable]
  end
  module AnonymousInterface183 : sig
    type t = anonymous_interface_183
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLModElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLModElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLModElement [@@js.apply_newable]
  end
  module AnonymousInterface184 : sig
    type t = anonymous_interface_184
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLOListElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLOListElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLOListElement [@@js.apply_newable]
  end
  module AnonymousInterface185 : sig
    type t = anonymous_interface_185
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLObjectElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLObjectElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLObjectElement [@@js.apply_newable]
  end
  module AnonymousInterface186 : sig
    type t = anonymous_interface_186
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLOptGroupElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLOptGroupElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLOptGroupElement [@@js.apply_newable]
  end
  module AnonymousInterface187 : sig
    type t = anonymous_interface_187
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLOptionElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLOptionElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLOptionElement [@@js.apply_newable]
  end
  module AnonymousInterface188 : sig
    type t = anonymous_interface_188
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLOptionsCollection [@@js.get "prototype"]
    val set_prototype: t -> _HTMLOptionsCollection -> unit [@@js.set "prototype"]
    val create: t -> _HTMLOptionsCollection [@@js.apply_newable]
  end
  module AnonymousInterface189 : sig
    type t = anonymous_interface_189
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLOutputElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLOutputElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLOutputElement [@@js.apply_newable]
  end
  module AnonymousInterface190 : sig
    type t = anonymous_interface_190
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLParagraphElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLParagraphElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLParagraphElement [@@js.apply_newable]
  end
  module AnonymousInterface191 : sig
    type t = anonymous_interface_191
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLParamElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLParamElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLParamElement [@@js.apply_newable]
  end
  module AnonymousInterface192 : sig
    type t = anonymous_interface_192
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLPictureElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLPictureElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLPictureElement [@@js.apply_newable]
  end
  module AnonymousInterface193 : sig
    type t = anonymous_interface_193
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLPreElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLPreElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLPreElement [@@js.apply_newable]
  end
  module AnonymousInterface194 : sig
    type t = anonymous_interface_194
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLProgressElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLProgressElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLProgressElement [@@js.apply_newable]
  end
  module AnonymousInterface195 : sig
    type t = anonymous_interface_195
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLQuoteElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLQuoteElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLQuoteElement [@@js.apply_newable]
  end
  module AnonymousInterface196 : sig
    type t = anonymous_interface_196
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLScriptElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLScriptElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLScriptElement [@@js.apply_newable]
  end
  module AnonymousInterface197 : sig
    type t = anonymous_interface_197
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLSelectElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLSelectElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLSelectElement [@@js.apply_newable]
  end
  module AnonymousInterface198 : sig
    type t = anonymous_interface_198
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLSlotElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLSlotElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLSlotElement [@@js.apply_newable]
  end
  module AnonymousInterface199 : sig
    type t = anonymous_interface_199
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLSourceElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLSourceElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLSourceElement [@@js.apply_newable]
  end
  module AnonymousInterface200 : sig
    type t = anonymous_interface_200
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLSpanElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLSpanElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLSpanElement [@@js.apply_newable]
  end
  module AnonymousInterface201 : sig
    type t = anonymous_interface_201
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLStyleElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLStyleElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLStyleElement [@@js.apply_newable]
  end
  module AnonymousInterface202 : sig
    type t = anonymous_interface_202
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLTableCaptionElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLTableCaptionElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLTableCaptionElement [@@js.apply_newable]
  end
  module AnonymousInterface203 : sig
    type t = anonymous_interface_203
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLTableCellElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLTableCellElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLTableCellElement [@@js.apply_newable]
  end
  module AnonymousInterface204 : sig
    type t = anonymous_interface_204
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLTableColElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLTableColElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLTableColElement [@@js.apply_newable]
  end
  module AnonymousInterface205 : sig
    type t = anonymous_interface_205
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLTableDataCellElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLTableDataCellElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLTableDataCellElement [@@js.apply_newable]
  end
  module AnonymousInterface206 : sig
    type t = anonymous_interface_206
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLTableElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLTableElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLTableElement [@@js.apply_newable]
  end
  module AnonymousInterface207 : sig
    type t = anonymous_interface_207
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLTableHeaderCellElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLTableHeaderCellElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLTableHeaderCellElement [@@js.apply_newable]
  end
  module AnonymousInterface208 : sig
    type t = anonymous_interface_208
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLTableRowElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLTableRowElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLTableRowElement [@@js.apply_newable]
  end
  module AnonymousInterface209 : sig
    type t = anonymous_interface_209
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLTableSectionElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLTableSectionElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLTableSectionElement [@@js.apply_newable]
  end
  module AnonymousInterface210 : sig
    type t = anonymous_interface_210
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLTemplateElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLTemplateElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLTemplateElement [@@js.apply_newable]
  end
  module AnonymousInterface211 : sig
    type t = anonymous_interface_211
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLTextAreaElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLTextAreaElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLTextAreaElement [@@js.apply_newable]
  end
  module AnonymousInterface212 : sig
    type t = anonymous_interface_212
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLTimeElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLTimeElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLTimeElement [@@js.apply_newable]
  end
  module AnonymousInterface213 : sig
    type t = anonymous_interface_213
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLTitleElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLTitleElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLTitleElement [@@js.apply_newable]
  end
  module AnonymousInterface214 : sig
    type t = anonymous_interface_214
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLTrackElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLTrackElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLTrackElement [@@js.apply_newable]
    val get_ERROR: t -> float [@@js.get "ERROR"]
    val get_LOADED: t -> float [@@js.get "LOADED"]
    val get_LOADING: t -> float [@@js.get "LOADING"]
    val get_NONE: t -> float [@@js.get "NONE"]
  end
  module AnonymousInterface215 : sig
    type t = anonymous_interface_215
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLUListElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLUListElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLUListElement [@@js.apply_newable]
  end
  module AnonymousInterface216 : sig
    type t = anonymous_interface_216
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLUnknownElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLUnknownElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLUnknownElement [@@js.apply_newable]
  end
  module AnonymousInterface217 : sig
    type t = anonymous_interface_217
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HTMLVideoElement [@@js.get "prototype"]
    val set_prototype: t -> _HTMLVideoElement -> unit [@@js.set "prototype"]
    val create: t -> _HTMLVideoElement [@@js.apply_newable]
  end
  module AnonymousInterface218 : sig
    type t = anonymous_interface_218
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _HashChangeEvent [@@js.get "prototype"]
    val set_prototype: t -> _HashChangeEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> ?eventInitDict:_HashChangeEventInit -> unit -> _HashChangeEvent [@@js.apply_newable]
  end
  module AnonymousInterface219 : sig
    type t = anonymous_interface_219
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _Headers [@@js.get "prototype"]
    val set_prototype: t -> _Headers -> unit [@@js.set "prototype"]
    val create: t -> ?init:_HeadersInit -> unit -> _Headers [@@js.apply_newable]
  end
  module AnonymousInterface220 : sig
    type t = anonymous_interface_220
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _History [@@js.get "prototype"]
    val set_prototype: t -> _History -> unit [@@js.set "prototype"]
    val create: t -> _History [@@js.apply_newable]
  end
  module AnonymousInterface221 : sig
    type t = anonymous_interface_221
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _IDBCursor [@@js.get "prototype"]
    val set_prototype: t -> _IDBCursor -> unit [@@js.set "prototype"]
    val create: t -> _IDBCursor [@@js.apply_newable]
  end
  module AnonymousInterface222 : sig
    type t = anonymous_interface_222
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _IDBCursorWithValue [@@js.get "prototype"]
    val set_prototype: t -> _IDBCursorWithValue -> unit [@@js.set "prototype"]
    val create: t -> _IDBCursorWithValue [@@js.apply_newable]
  end
  module AnonymousInterface223 : sig
    type t = anonymous_interface_223
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _IDBDatabase [@@js.get "prototype"]
    val set_prototype: t -> _IDBDatabase -> unit [@@js.set "prototype"]
    val create: t -> _IDBDatabase [@@js.apply_newable]
  end
  module AnonymousInterface224 : sig
    type t = anonymous_interface_224
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _IDBFactory [@@js.get "prototype"]
    val set_prototype: t -> _IDBFactory -> unit [@@js.set "prototype"]
    val create: t -> _IDBFactory [@@js.apply_newable]
  end
  module AnonymousInterface225 : sig
    type t = anonymous_interface_225
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _IDBIndex [@@js.get "prototype"]
    val set_prototype: t -> _IDBIndex -> unit [@@js.set "prototype"]
    val create: t -> _IDBIndex [@@js.apply_newable]
  end
  module AnonymousInterface226 : sig
    type t = anonymous_interface_226
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _IDBKeyRange [@@js.get "prototype"]
    val set_prototype: t -> _IDBKeyRange -> unit [@@js.set "prototype"]
    val create: t -> _IDBKeyRange [@@js.apply_newable]
    val bound: t -> lower:any -> upper:any -> ?lowerOpen:bool -> ?upperOpen:bool -> unit -> _IDBKeyRange [@@js.call "bound"]
    val lowerBound: t -> lower:any -> ?open_:bool -> unit -> _IDBKeyRange [@@js.call "lowerBound"]
    val only: t -> value:any -> _IDBKeyRange [@@js.call "only"]
    val upperBound: t -> upper:any -> ?open_:bool -> unit -> _IDBKeyRange [@@js.call "upperBound"]
  end
  module AnonymousInterface227 : sig
    type t = anonymous_interface_227
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _IDBObjectStore [@@js.get "prototype"]
    val set_prototype: t -> _IDBObjectStore -> unit [@@js.set "prototype"]
    val create: t -> _IDBObjectStore [@@js.apply_newable]
  end
  module AnonymousInterface228 : sig
    type t = anonymous_interface_228
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _IDBOpenDBRequest [@@js.get "prototype"]
    val set_prototype: t -> _IDBOpenDBRequest -> unit [@@js.set "prototype"]
    val create: t -> _IDBOpenDBRequest [@@js.apply_newable]
  end
  module AnonymousInterface229 : sig
    type t = anonymous_interface_229
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> any _IDBRequest [@@js.get "prototype"]
    val set_prototype: t -> any _IDBRequest -> unit [@@js.set "prototype"]
    val create: t -> any _IDBRequest [@@js.apply_newable]
  end
  module AnonymousInterface230 : sig
    type t = anonymous_interface_230
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _IDBTransaction [@@js.get "prototype"]
    val set_prototype: t -> _IDBTransaction -> unit [@@js.set "prototype"]
    val create: t -> _IDBTransaction [@@js.apply_newable]
  end
  module AnonymousInterface231 : sig
    type t = anonymous_interface_231
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _IDBVersionChangeEvent [@@js.get "prototype"]
    val set_prototype: t -> _IDBVersionChangeEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> ?eventInitDict:_IDBVersionChangeEventInit -> unit -> _IDBVersionChangeEvent [@@js.apply_newable]
  end
  module AnonymousInterface232 : sig
    type t = anonymous_interface_232
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _IIRFilterNode [@@js.get "prototype"]
    val set_prototype: t -> _IIRFilterNode -> unit [@@js.set "prototype"]
    val create: t -> context:_BaseAudioContext -> options:_IIRFilterOptions -> _IIRFilterNode [@@js.apply_newable]
  end
  module AnonymousInterface233 : sig
    type t = anonymous_interface_233
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _ImageBitmap [@@js.get "prototype"]
    val set_prototype: t -> _ImageBitmap -> unit [@@js.set "prototype"]
    val create: t -> _ImageBitmap [@@js.apply_newable]
  end
  module AnonymousInterface234 : sig
    type t = anonymous_interface_234
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _ImageBitmapRenderingContext [@@js.get "prototype"]
    val set_prototype: t -> _ImageBitmapRenderingContext -> unit [@@js.set "prototype"]
    val create: t -> _ImageBitmapRenderingContext [@@js.apply_newable]
  end
  module AnonymousInterface235 : sig
    type t = anonymous_interface_235
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _ImageData [@@js.get "prototype"]
    val set_prototype: t -> _ImageData -> unit [@@js.set "prototype"]
    val create: t -> width:float -> height:float -> _ImageData [@@js.apply_newable]
    val create': t -> array:Uint8ClampedArray.t_0 -> width:float -> ?height:float -> unit -> _ImageData [@@js.apply_newable]
  end
  module AnonymousInterface236 : sig
    type t = anonymous_interface_236
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _InputDeviceInfo [@@js.get "prototype"]
    val set_prototype: t -> _InputDeviceInfo -> unit [@@js.set "prototype"]
    val create: t -> _InputDeviceInfo [@@js.apply_newable]
  end
  module AnonymousInterface237 : sig
    type t = anonymous_interface_237
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _InputEvent [@@js.get "prototype"]
    val set_prototype: t -> _InputEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> ?eventInitDict:_InputEventInit -> unit -> _InputEvent [@@js.apply_newable]
  end
  module AnonymousInterface238 : sig
    type t = anonymous_interface_238
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _WebAssembly_Instance [@@js.get "prototype"]
    val set_prototype: t -> _WebAssembly_Instance -> unit [@@js.set "prototype"]
    val create: t -> module_:_WebAssembly_Module -> ?importObject:_WebAssembly_Imports -> unit -> _WebAssembly_Instance [@@js.apply_newable]
  end
  module AnonymousInterface239 : sig
    type t = anonymous_interface_239
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _IntersectionObserver [@@js.get "prototype"]
    val set_prototype: t -> _IntersectionObserver -> unit [@@js.set "prototype"]
    val create: t -> callback:_IntersectionObserverCallback -> ?options:_IntersectionObserverInit -> unit -> _IntersectionObserver [@@js.apply_newable]
  end
  module AnonymousInterface240 : sig
    type t = anonymous_interface_240
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _IntersectionObserverEntry [@@js.get "prototype"]
    val set_prototype: t -> _IntersectionObserverEntry -> unit [@@js.set "prototype"]
    val create: t -> intersectionObserverEntryInit:_IntersectionObserverEntryInit -> _IntersectionObserverEntry [@@js.apply_newable]
  end
  module AnonymousInterface241 : sig
    type t = anonymous_interface_241
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _KeyboardEvent [@@js.get "prototype"]
    val set_prototype: t -> _KeyboardEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> ?eventInitDict:_KeyboardEventInit -> unit -> _KeyboardEvent [@@js.apply_newable]
    val get_DOM_KEY_LOCATION_LEFT: t -> float [@@js.get "DOM_KEY_LOCATION_LEFT"]
    val get_DOM_KEY_LOCATION_NUMPAD: t -> float [@@js.get "DOM_KEY_LOCATION_NUMPAD"]
    val get_DOM_KEY_LOCATION_RIGHT: t -> float [@@js.get "DOM_KEY_LOCATION_RIGHT"]
    val get_DOM_KEY_LOCATION_STANDARD: t -> float [@@js.get "DOM_KEY_LOCATION_STANDARD"]
  end
  module AnonymousInterface242 : sig
    type t = anonymous_interface_242
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _KeyframeEffect [@@js.get "prototype"]
    val set_prototype: t -> _KeyframeEffect -> unit [@@js.set "prototype"]
    val create: t -> target:_Element or_null -> keyframes:(_PropertyIndexedKeyframes, _Keyframe) or_array or_null -> ?options:_KeyframeEffectOptions or_number -> unit -> _KeyframeEffect [@@js.apply_newable]
    val create': t -> source:_KeyframeEffect -> _KeyframeEffect [@@js.apply_newable]
  end
  module AnonymousInterface243 : sig
    type t = anonymous_interface_243
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _WebAssembly_LinkError [@@js.get "prototype"]
    val set_prototype: t -> _WebAssembly_LinkError -> unit [@@js.set "prototype"]
    val create: t -> _WebAssembly_LinkError [@@js.apply_newable]
  end
  module AnonymousInterface244 : sig
    type t = anonymous_interface_244
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _ListeningStateChangedEvent [@@js.get "prototype"]
    val set_prototype: t -> _ListeningStateChangedEvent -> unit [@@js.set "prototype"]
    val create: t -> _ListeningStateChangedEvent [@@js.apply_newable]
  end
  module AnonymousInterface245 : sig
    type t = anonymous_interface_245
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _Location [@@js.get "prototype"]
    val set_prototype: t -> _Location -> unit [@@js.set "prototype"]
    val create: t -> _Location [@@js.apply_newable]
  end
  module AnonymousInterface246 : sig
    type t = anonymous_interface_246
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MSAssertion [@@js.get "prototype"]
    val set_prototype: t -> _MSAssertion -> unit [@@js.set "prototype"]
    val create: t -> _MSAssertion [@@js.apply_newable]
  end
  module AnonymousInterface247 : sig
    type t = anonymous_interface_247
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MSBlobBuilder [@@js.get "prototype"]
    val set_prototype: t -> _MSBlobBuilder -> unit [@@js.set "prototype"]
    val create: t -> _MSBlobBuilder [@@js.apply_newable]
  end
  module AnonymousInterface248 : sig
    type t = anonymous_interface_248
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MSFIDOCredentialAssertion [@@js.get "prototype"]
    val set_prototype: t -> _MSFIDOCredentialAssertion -> unit [@@js.set "prototype"]
    val create: t -> _MSFIDOCredentialAssertion [@@js.apply_newable]
  end
  module AnonymousInterface249 : sig
    type t = anonymous_interface_249
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MSFIDOSignature [@@js.get "prototype"]
    val set_prototype: t -> _MSFIDOSignature -> unit [@@js.set "prototype"]
    val create: t -> _MSFIDOSignature [@@js.apply_newable]
  end
  module AnonymousInterface250 : sig
    type t = anonymous_interface_250
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MSFIDOSignatureAssertion [@@js.get "prototype"]
    val set_prototype: t -> _MSFIDOSignatureAssertion -> unit [@@js.set "prototype"]
    val create: t -> _MSFIDOSignatureAssertion [@@js.apply_newable]
  end
  module AnonymousInterface251 : sig
    type t = anonymous_interface_251
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MSGesture [@@js.get "prototype"]
    val set_prototype: t -> _MSGesture -> unit [@@js.set "prototype"]
    val create: t -> _MSGesture [@@js.apply_newable]
  end
  module AnonymousInterface252 : sig
    type t = anonymous_interface_252
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MSGestureEvent [@@js.get "prototype"]
    val set_prototype: t -> _MSGestureEvent -> unit [@@js.set "prototype"]
    val create: t -> _MSGestureEvent [@@js.apply_newable]
    val get_MSGESTURE_FLAG_BEGIN: t -> float [@@js.get "MSGESTURE_FLAG_BEGIN"]
    val get_MSGESTURE_FLAG_CANCEL: t -> float [@@js.get "MSGESTURE_FLAG_CANCEL"]
    val get_MSGESTURE_FLAG_END: t -> float [@@js.get "MSGESTURE_FLAG_END"]
    val get_MSGESTURE_FLAG_INERTIA: t -> float [@@js.get "MSGESTURE_FLAG_INERTIA"]
    val get_MSGESTURE_FLAG_NONE: t -> float [@@js.get "MSGESTURE_FLAG_NONE"]
  end
  module AnonymousInterface253 : sig
    type t = anonymous_interface_253
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MSGraphicsTrust [@@js.get "prototype"]
    val set_prototype: t -> _MSGraphicsTrust -> unit [@@js.set "prototype"]
    val create: t -> _MSGraphicsTrust [@@js.apply_newable]
  end
  module AnonymousInterface254 : sig
    type t = anonymous_interface_254
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MSInputMethodContext [@@js.get "prototype"]
    val set_prototype: t -> _MSInputMethodContext -> unit [@@js.set "prototype"]
    val create: t -> _MSInputMethodContext [@@js.apply_newable]
  end
  module AnonymousInterface255 : sig
    type t = anonymous_interface_255
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MSMediaKeyError [@@js.get "prototype"]
    val set_prototype: t -> _MSMediaKeyError -> unit [@@js.set "prototype"]
    val create: t -> _MSMediaKeyError [@@js.apply_newable]
    val get_MS_MEDIA_KEYERR_CLIENT: t -> float [@@js.get "MS_MEDIA_KEYERR_CLIENT"]
    val get_MS_MEDIA_KEYERR_DOMAIN: t -> float [@@js.get "MS_MEDIA_KEYERR_DOMAIN"]
    val get_MS_MEDIA_KEYERR_HARDWARECHANGE: t -> float [@@js.get "MS_MEDIA_KEYERR_HARDWARECHANGE"]
    val get_MS_MEDIA_KEYERR_OUTPUT: t -> float [@@js.get "MS_MEDIA_KEYERR_OUTPUT"]
    val get_MS_MEDIA_KEYERR_SERVICE: t -> float [@@js.get "MS_MEDIA_KEYERR_SERVICE"]
    val get_MS_MEDIA_KEYERR_UNKNOWN: t -> float [@@js.get "MS_MEDIA_KEYERR_UNKNOWN"]
  end
  module AnonymousInterface256 : sig
    type t = anonymous_interface_256
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MSMediaKeyMessageEvent [@@js.get "prototype"]
    val set_prototype: t -> _MSMediaKeyMessageEvent -> unit [@@js.set "prototype"]
    val create: t -> _MSMediaKeyMessageEvent [@@js.apply_newable]
  end
  module AnonymousInterface257 : sig
    type t = anonymous_interface_257
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MSMediaKeyNeededEvent [@@js.get "prototype"]
    val set_prototype: t -> _MSMediaKeyNeededEvent -> unit [@@js.set "prototype"]
    val create: t -> _MSMediaKeyNeededEvent [@@js.apply_newable]
  end
  module AnonymousInterface258 : sig
    type t = anonymous_interface_258
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MSMediaKeySession [@@js.get "prototype"]
    val set_prototype: t -> _MSMediaKeySession -> unit [@@js.set "prototype"]
    val create: t -> _MSMediaKeySession [@@js.apply_newable]
  end
  module AnonymousInterface259 : sig
    type t = anonymous_interface_259
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MSMediaKeys [@@js.get "prototype"]
    val set_prototype: t -> _MSMediaKeys -> unit [@@js.set "prototype"]
    val create: t -> keySystem:string -> _MSMediaKeys [@@js.apply_newable]
    val isTypeSupported: t -> keySystem:string -> ?type_:string or_null -> unit -> bool [@@js.call "isTypeSupported"]
    val isTypeSupportedWithFeatures: t -> keySystem:string -> ?type_:string or_null -> unit -> string [@@js.call "isTypeSupportedWithFeatures"]
  end
  module AnonymousInterface260 : sig
    type t = anonymous_interface_260
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MSPointerEvent [@@js.get "prototype"]
    val set_prototype: t -> _MSPointerEvent -> unit [@@js.set "prototype"]
    val create: t -> typeArg:string -> ?eventInitDict:_PointerEventInit -> unit -> _MSPointerEvent [@@js.apply_newable]
  end
  module AnonymousInterface261 : sig
    type t = anonymous_interface_261
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MSStream [@@js.get "prototype"]
    val set_prototype: t -> _MSStream -> unit [@@js.set "prototype"]
    val create: t -> _MSStream [@@js.apply_newable]
  end
  module AnonymousInterface262 : sig
    type t = anonymous_interface_262
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MediaDeviceInfo [@@js.get "prototype"]
    val set_prototype: t -> _MediaDeviceInfo -> unit [@@js.set "prototype"]
    val create: t -> _MediaDeviceInfo [@@js.apply_newable]
  end
  module AnonymousInterface263 : sig
    type t = anonymous_interface_263
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MediaDevices [@@js.get "prototype"]
    val set_prototype: t -> _MediaDevices -> unit [@@js.set "prototype"]
    val create: t -> _MediaDevices [@@js.apply_newable]
  end
  module AnonymousInterface264 : sig
    type t = anonymous_interface_264
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MediaElementAudioSourceNode [@@js.get "prototype"]
    val set_prototype: t -> _MediaElementAudioSourceNode -> unit [@@js.set "prototype"]
    val create: t -> context:_AudioContext -> options:_MediaElementAudioSourceOptions -> _MediaElementAudioSourceNode [@@js.apply_newable]
  end
  module AnonymousInterface265 : sig
    type t = anonymous_interface_265
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MediaEncryptedEvent [@@js.get "prototype"]
    val set_prototype: t -> _MediaEncryptedEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> ?eventInitDict:_MediaEncryptedEventInit -> unit -> _MediaEncryptedEvent [@@js.apply_newable]
  end
  module AnonymousInterface266 : sig
    type t = anonymous_interface_266
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MediaError [@@js.get "prototype"]
    val set_prototype: t -> _MediaError -> unit [@@js.set "prototype"]
    val create: t -> _MediaError [@@js.apply_newable]
    val get_MEDIA_ERR_ABORTED: t -> float [@@js.get "MEDIA_ERR_ABORTED"]
    val get_MEDIA_ERR_DECODE: t -> float [@@js.get "MEDIA_ERR_DECODE"]
    val get_MEDIA_ERR_NETWORK: t -> float [@@js.get "MEDIA_ERR_NETWORK"]
    val get_MEDIA_ERR_SRC_NOT_SUPPORTED: t -> float [@@js.get "MEDIA_ERR_SRC_NOT_SUPPORTED"]
    val get_MS_MEDIA_ERR_ENCRYPTED: t -> float [@@js.get "MS_MEDIA_ERR_ENCRYPTED"]
  end
  module AnonymousInterface267 : sig
    type t = anonymous_interface_267
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MediaKeyMessageEvent [@@js.get "prototype"]
    val set_prototype: t -> _MediaKeyMessageEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> eventInitDict:_MediaKeyMessageEventInit -> _MediaKeyMessageEvent [@@js.apply_newable]
  end
  module AnonymousInterface268 : sig
    type t = anonymous_interface_268
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MediaKeySession [@@js.get "prototype"]
    val set_prototype: t -> _MediaKeySession -> unit [@@js.set "prototype"]
    val create: t -> _MediaKeySession [@@js.apply_newable]
  end
  module AnonymousInterface269 : sig
    type t = anonymous_interface_269
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MediaKeyStatusMap [@@js.get "prototype"]
    val set_prototype: t -> _MediaKeyStatusMap -> unit [@@js.set "prototype"]
    val create: t -> _MediaKeyStatusMap [@@js.apply_newable]
  end
  module AnonymousInterface270 : sig
    type t = anonymous_interface_270
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MediaKeySystemAccess [@@js.get "prototype"]
    val set_prototype: t -> _MediaKeySystemAccess -> unit [@@js.set "prototype"]
    val create: t -> _MediaKeySystemAccess [@@js.apply_newable]
  end
  module AnonymousInterface271 : sig
    type t = anonymous_interface_271
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MediaKeys [@@js.get "prototype"]
    val set_prototype: t -> _MediaKeys -> unit [@@js.set "prototype"]
    val create: t -> _MediaKeys [@@js.apply_newable]
  end
  module AnonymousInterface272 : sig
    type t = anonymous_interface_272
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MediaList [@@js.get "prototype"]
    val set_prototype: t -> _MediaList -> unit [@@js.set "prototype"]
    val create: t -> _MediaList [@@js.apply_newable]
  end
  module AnonymousInterface273 : sig
    type t = anonymous_interface_273
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MediaQueryList [@@js.get "prototype"]
    val set_prototype: t -> _MediaQueryList -> unit [@@js.set "prototype"]
    val create: t -> _MediaQueryList [@@js.apply_newable]
  end
  module AnonymousInterface274 : sig
    type t = anonymous_interface_274
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MediaQueryListEvent [@@js.get "prototype"]
    val set_prototype: t -> _MediaQueryListEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> ?eventInitDict:_MediaQueryListEventInit -> unit -> _MediaQueryListEvent [@@js.apply_newable]
  end
  module AnonymousInterface275 : sig
    type t = anonymous_interface_275
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MediaSource [@@js.get "prototype"]
    val set_prototype: t -> _MediaSource -> unit [@@js.set "prototype"]
    val create: t -> _MediaSource [@@js.apply_newable]
    val isTypeSupported: t -> type_:string -> bool [@@js.call "isTypeSupported"]
  end
  module AnonymousInterface276 : sig
    type t = anonymous_interface_276
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MediaStream [@@js.get "prototype"]
    val set_prototype: t -> _MediaStream -> unit [@@js.set "prototype"]
    val create: t -> _MediaStream [@@js.apply_newable]
    val create': t -> stream:_MediaStream -> _MediaStream [@@js.apply_newable]
    val create'': t -> tracks:_MediaStreamTrack list -> _MediaStream [@@js.apply_newable]
  end
  module AnonymousInterface277 : sig
    type t = anonymous_interface_277
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MediaStreamAudioDestinationNode [@@js.get "prototype"]
    val set_prototype: t -> _MediaStreamAudioDestinationNode -> unit [@@js.set "prototype"]
    val create: t -> context:_AudioContext -> ?options:_AudioNodeOptions -> unit -> _MediaStreamAudioDestinationNode [@@js.apply_newable]
  end
  module AnonymousInterface278 : sig
    type t = anonymous_interface_278
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MediaStreamAudioSourceNode [@@js.get "prototype"]
    val set_prototype: t -> _MediaStreamAudioSourceNode -> unit [@@js.set "prototype"]
    val create: t -> context:_AudioContext -> options:_MediaStreamAudioSourceOptions -> _MediaStreamAudioSourceNode [@@js.apply_newable]
  end
  module AnonymousInterface279 : sig
    type t = anonymous_interface_279
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MediaStreamError [@@js.get "prototype"]
    val set_prototype: t -> _MediaStreamError -> unit [@@js.set "prototype"]
    val create: t -> _MediaStreamError [@@js.apply_newable]
  end
  module AnonymousInterface280 : sig
    type t = anonymous_interface_280
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MediaStreamErrorEvent [@@js.get "prototype"]
    val set_prototype: t -> _MediaStreamErrorEvent -> unit [@@js.set "prototype"]
    val create: t -> typeArg:string -> ?eventInitDict:_MediaStreamErrorEventInit -> unit -> _MediaStreamErrorEvent [@@js.apply_newable]
  end
  module AnonymousInterface281 : sig
    type t = anonymous_interface_281
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MediaStreamEvent [@@js.get "prototype"]
    val set_prototype: t -> _MediaStreamEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> eventInitDict:_MediaStreamEventInit -> _MediaStreamEvent [@@js.apply_newable]
  end
  module AnonymousInterface282 : sig
    type t = anonymous_interface_282
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MediaStreamTrack [@@js.get "prototype"]
    val set_prototype: t -> _MediaStreamTrack -> unit [@@js.set "prototype"]
    val create: t -> _MediaStreamTrack [@@js.apply_newable]
  end
  module AnonymousInterface283 : sig
    type t = anonymous_interface_283
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MediaStreamTrackAudioSourceNode [@@js.get "prototype"]
    val set_prototype: t -> _MediaStreamTrackAudioSourceNode -> unit [@@js.set "prototype"]
    val create: t -> context:_AudioContext -> options:_MediaStreamTrackAudioSourceOptions -> _MediaStreamTrackAudioSourceNode [@@js.apply_newable]
  end
  module AnonymousInterface284 : sig
    type t = anonymous_interface_284
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MediaStreamTrackEvent [@@js.get "prototype"]
    val set_prototype: t -> _MediaStreamTrackEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> eventInitDict:_MediaStreamTrackEventInit -> _MediaStreamTrackEvent [@@js.apply_newable]
  end
  module AnonymousInterface285 : sig
    type t = anonymous_interface_285
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _WebAssembly_Memory [@@js.get "prototype"]
    val set_prototype: t -> _WebAssembly_Memory -> unit [@@js.set "prototype"]
    val create: t -> descriptor:_WebAssembly_MemoryDescriptor -> _WebAssembly_Memory [@@js.apply_newable]
  end
  module AnonymousInterface286 : sig
    type t = anonymous_interface_286
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MessageChannel [@@js.get "prototype"]
    val set_prototype: t -> _MessageChannel -> unit [@@js.set "prototype"]
    val create: t -> _MessageChannel [@@js.apply_newable]
  end
  module AnonymousInterface287 : sig
    type t = anonymous_interface_287
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MessageEvent [@@js.get "prototype"]
    val set_prototype: t -> _MessageEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> ?eventInitDict:_MessageEventInit -> unit -> _MessageEvent [@@js.apply_newable]
  end
  module AnonymousInterface288 : sig
    type t = anonymous_interface_288
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MessagePort [@@js.get "prototype"]
    val set_prototype: t -> _MessagePort -> unit [@@js.set "prototype"]
    val create: t -> _MessagePort [@@js.apply_newable]
  end
  module AnonymousInterface289 : sig
    type t = anonymous_interface_289
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MimeType [@@js.get "prototype"]
    val set_prototype: t -> _MimeType -> unit [@@js.set "prototype"]
    val create: t -> _MimeType [@@js.apply_newable]
  end
  module AnonymousInterface290 : sig
    type t = anonymous_interface_290
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MimeTypeArray [@@js.get "prototype"]
    val set_prototype: t -> _MimeTypeArray -> unit [@@js.set "prototype"]
    val create: t -> _MimeTypeArray [@@js.apply_newable]
  end
  module AnonymousInterface291 : sig
    type t = anonymous_interface_291
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _WebAssembly_Module [@@js.get "prototype"]
    val set_prototype: t -> _WebAssembly_Module -> unit [@@js.set "prototype"]
    val create: t -> bytes:_BufferSource -> _WebAssembly_Module [@@js.apply_newable]
    val customSections: t -> moduleObject:_WebAssembly_Module -> sectionName:string -> ArrayBuffer.t_0 list [@@js.call "customSections"]
    val exports: t -> moduleObject:_WebAssembly_Module -> _WebAssembly_ModuleExportDescriptor list [@@js.call "exports"]
    val imports: t -> moduleObject:_WebAssembly_Module -> _WebAssembly_ModuleImportDescriptor list [@@js.call "imports"]
  end
  module AnonymousInterface292 : sig
    type t = anonymous_interface_292
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MouseEvent [@@js.get "prototype"]
    val set_prototype: t -> _MouseEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> ?eventInitDict:_MouseEventInit -> unit -> _MouseEvent [@@js.apply_newable]
  end
  module AnonymousInterface293 : sig
    type t = anonymous_interface_293
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MutationEvent [@@js.get "prototype"]
    val set_prototype: t -> _MutationEvent -> unit [@@js.set "prototype"]
    val create: t -> _MutationEvent [@@js.apply_newable]
    val get_ADDITION: t -> float [@@js.get "ADDITION"]
    val get_MODIFICATION: t -> float [@@js.get "MODIFICATION"]
    val get_REMOVAL: t -> float [@@js.get "REMOVAL"]
  end
  module AnonymousInterface294 : sig
    type t = anonymous_interface_294
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MutationObserver [@@js.get "prototype"]
    val set_prototype: t -> _MutationObserver -> unit [@@js.set "prototype"]
    val create: t -> callback:_MutationCallback -> _MutationObserver [@@js.apply_newable]
  end
  module AnonymousInterface295 : sig
    type t = anonymous_interface_295
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _MutationRecord [@@js.get "prototype"]
    val set_prototype: t -> _MutationRecord -> unit [@@js.set "prototype"]
    val create: t -> _MutationRecord [@@js.apply_newable]
  end
  module AnonymousInterface296 : sig
    type t = anonymous_interface_296
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _NamedNodeMap [@@js.get "prototype"]
    val set_prototype: t -> _NamedNodeMap -> unit [@@js.set "prototype"]
    val create: t -> _NamedNodeMap [@@js.apply_newable]
  end
  module AnonymousInterface297 : sig
    type t = anonymous_interface_297
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _NavigationPreloadManager [@@js.get "prototype"]
    val set_prototype: t -> _NavigationPreloadManager -> unit [@@js.set "prototype"]
    val create: t -> _NavigationPreloadManager [@@js.apply_newable]
  end
  module AnonymousInterface298 : sig
    type t = anonymous_interface_298
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _Navigator [@@js.get "prototype"]
    val set_prototype: t -> _Navigator -> unit [@@js.set "prototype"]
    val create: t -> _Navigator [@@js.apply_newable]
  end
  module AnonymousInterface299 : sig
    type t = anonymous_interface_299
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _Node [@@js.get "prototype"]
    val set_prototype: t -> _Node -> unit [@@js.set "prototype"]
    val create: t -> _Node [@@js.apply_newable]
    val get_ATTRIBUTE_NODE: t -> float [@@js.get "ATTRIBUTE_NODE"]
    val get_CDATA_SECTION_NODE: t -> float [@@js.get "CDATA_SECTION_NODE"]
    val get_COMMENT_NODE: t -> float [@@js.get "COMMENT_NODE"]
    val get_DOCUMENT_FRAGMENT_NODE: t -> float [@@js.get "DOCUMENT_FRAGMENT_NODE"]
    val get_DOCUMENT_NODE: t -> float [@@js.get "DOCUMENT_NODE"]
    val get_DOCUMENT_POSITION_CONTAINED_BY: t -> float [@@js.get "DOCUMENT_POSITION_CONTAINED_BY"]
    val get_DOCUMENT_POSITION_CONTAINS: t -> float [@@js.get "DOCUMENT_POSITION_CONTAINS"]
    val get_DOCUMENT_POSITION_DISCONNECTED: t -> float [@@js.get "DOCUMENT_POSITION_DISCONNECTED"]
    val get_DOCUMENT_POSITION_FOLLOWING: t -> float [@@js.get "DOCUMENT_POSITION_FOLLOWING"]
    val get_DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: t -> float [@@js.get "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC"]
    val get_DOCUMENT_POSITION_PRECEDING: t -> float [@@js.get "DOCUMENT_POSITION_PRECEDING"]
    val get_DOCUMENT_TYPE_NODE: t -> float [@@js.get "DOCUMENT_TYPE_NODE"]
    val get_ELEMENT_NODE: t -> float [@@js.get "ELEMENT_NODE"]
    val get_ENTITY_NODE: t -> float [@@js.get "ENTITY_NODE"]
    val get_ENTITY_REFERENCE_NODE: t -> float [@@js.get "ENTITY_REFERENCE_NODE"]
    val get_NOTATION_NODE: t -> float [@@js.get "NOTATION_NODE"]
    val get_PROCESSING_INSTRUCTION_NODE: t -> float [@@js.get "PROCESSING_INSTRUCTION_NODE"]
    val get_TEXT_NODE: t -> float [@@js.get "TEXT_NODE"]
  end
  module AnonymousInterface300 : sig
    type t = anonymous_interface_300
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _NodeIterator [@@js.get "prototype"]
    val set_prototype: t -> _NodeIterator -> unit [@@js.set "prototype"]
    val create: t -> _NodeIterator [@@js.apply_newable]
  end
  module AnonymousInterface301 : sig
    type t = anonymous_interface_301
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _NodeList [@@js.get "prototype"]
    val set_prototype: t -> _NodeList -> unit [@@js.set "prototype"]
    val create: t -> _NodeList [@@js.apply_newable]
  end
  module AnonymousInterface302 : sig
    type t = anonymous_interface_302
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _Notification [@@js.get "prototype"]
    val set_prototype: t -> _Notification -> unit [@@js.set "prototype"]
    val create: t -> title:string -> ?options:_NotificationOptions -> unit -> _Notification [@@js.apply_newable]
    val get_maxActions: t -> float [@@js.get "maxActions"]
    val get_permission: t -> _NotificationPermission [@@js.get "permission"]
    val requestPermission: t -> ?deprecatedCallback:_NotificationPermissionCallback -> unit -> _NotificationPermission Promise.t_1 [@@js.call "requestPermission"]
  end
  module AnonymousInterface303 : sig
    type t = anonymous_interface_303
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _OfflineAudioCompletionEvent [@@js.get "prototype"]
    val set_prototype: t -> _OfflineAudioCompletionEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> eventInitDict:_OfflineAudioCompletionEventInit -> _OfflineAudioCompletionEvent [@@js.apply_newable]
  end
  module AnonymousInterface304 : sig
    type t = anonymous_interface_304
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _OfflineAudioContext [@@js.get "prototype"]
    val set_prototype: t -> _OfflineAudioContext -> unit [@@js.set "prototype"]
    val create: t -> contextOptions:_OfflineAudioContextOptions -> _OfflineAudioContext [@@js.apply_newable]
    val create': t -> numberOfChannels:float -> length:float -> sampleRate:float -> _OfflineAudioContext [@@js.apply_newable]
  end
  module AnonymousInterface305 : sig
    type t = anonymous_interface_305
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _OffscreenCanvas [@@js.get "prototype"]
    val set_prototype: t -> _OffscreenCanvas -> unit [@@js.set "prototype"]
    val create: t -> width:float -> height:float -> _OffscreenCanvas [@@js.apply_newable]
  end
  module AnonymousInterface306 : sig
    type t = anonymous_interface_306
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _OffscreenCanvasRenderingContext2D [@@js.get "prototype"]
    val set_prototype: t -> _OffscreenCanvasRenderingContext2D -> unit [@@js.set "prototype"]
    val create: t -> _OffscreenCanvasRenderingContext2D [@@js.apply_newable]
  end
  module AnonymousInterface307 : sig
    type t = anonymous_interface_307
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _OscillatorNode [@@js.get "prototype"]
    val set_prototype: t -> _OscillatorNode -> unit [@@js.set "prototype"]
    val create: t -> context:_BaseAudioContext -> ?options:_OscillatorOptions -> unit -> _OscillatorNode [@@js.apply_newable]
  end
  module AnonymousInterface308 : sig
    type t = anonymous_interface_308
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _OverconstrainedError [@@js.get "prototype"]
    val set_prototype: t -> _OverconstrainedError -> unit [@@js.set "prototype"]
    val create: t -> _OverconstrainedError [@@js.apply_newable]
  end
  module AnonymousInterface309 : sig
    type t = anonymous_interface_309
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _OverflowEvent [@@js.get "prototype"]
    val set_prototype: t -> _OverflowEvent -> unit [@@js.set "prototype"]
    val create: t -> _OverflowEvent [@@js.apply_newable]
    val get_BOTH: t -> float [@@js.get "BOTH"]
    val get_HORIZONTAL: t -> float [@@js.get "HORIZONTAL"]
    val get_VERTICAL: t -> float [@@js.get "VERTICAL"]
  end
  module AnonymousInterface310 : sig
    type t = anonymous_interface_310
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _PageTransitionEvent [@@js.get "prototype"]
    val set_prototype: t -> _PageTransitionEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> ?eventInitDict:_PageTransitionEventInit -> unit -> _PageTransitionEvent [@@js.apply_newable]
  end
  module AnonymousInterface311 : sig
    type t = anonymous_interface_311
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _PannerNode [@@js.get "prototype"]
    val set_prototype: t -> _PannerNode -> unit [@@js.set "prototype"]
    val create: t -> context:_BaseAudioContext -> ?options:_PannerOptions -> unit -> _PannerNode [@@js.apply_newable]
  end
  module AnonymousInterface312 : sig
    type t = anonymous_interface_312
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _Path2D [@@js.get "prototype"]
    val set_prototype: t -> _Path2D -> unit [@@js.set "prototype"]
    val create: t -> ?path:_Path2D or_string -> unit -> _Path2D [@@js.apply_newable]
  end
  module AnonymousInterface313 : sig
    type t = anonymous_interface_313
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _PaymentAddress [@@js.get "prototype"]
    val set_prototype: t -> _PaymentAddress -> unit [@@js.set "prototype"]
    val create: t -> _PaymentAddress [@@js.apply_newable]
  end
  module AnonymousInterface314 : sig
    type t = anonymous_interface_314
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _PaymentRequest [@@js.get "prototype"]
    val set_prototype: t -> _PaymentRequest -> unit [@@js.set "prototype"]
    val create: t -> methodData:_PaymentMethodData list -> details:_PaymentDetailsInit -> ?options:_PaymentOptions -> unit -> _PaymentRequest [@@js.apply_newable]
  end
  module AnonymousInterface315 : sig
    type t = anonymous_interface_315
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _PaymentRequestUpdateEvent [@@js.get "prototype"]
    val set_prototype: t -> _PaymentRequestUpdateEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> ?eventInitDict:_PaymentRequestUpdateEventInit -> unit -> _PaymentRequestUpdateEvent [@@js.apply_newable]
  end
  module AnonymousInterface316 : sig
    type t = anonymous_interface_316
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _PaymentResponse [@@js.get "prototype"]
    val set_prototype: t -> _PaymentResponse -> unit [@@js.set "prototype"]
    val create: t -> _PaymentResponse [@@js.apply_newable]
  end
  module AnonymousInterface317 : sig
    type t = anonymous_interface_317
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _PerfWidgetExternal [@@js.get "prototype"]
    val set_prototype: t -> _PerfWidgetExternal -> unit [@@js.set "prototype"]
    val create: t -> _PerfWidgetExternal [@@js.apply_newable]
  end
  module AnonymousInterface318 : sig
    type t = anonymous_interface_318
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _Performance [@@js.get "prototype"]
    val set_prototype: t -> _Performance -> unit [@@js.set "prototype"]
    val create: t -> _Performance [@@js.apply_newable]
  end
  module AnonymousInterface319 : sig
    type t = anonymous_interface_319
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _PerformanceEntry [@@js.get "prototype"]
    val set_prototype: t -> _PerformanceEntry -> unit [@@js.set "prototype"]
    val create: t -> _PerformanceEntry [@@js.apply_newable]
  end
  module AnonymousInterface320 : sig
    type t = anonymous_interface_320
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _PerformanceMark [@@js.get "prototype"]
    val set_prototype: t -> _PerformanceMark -> unit [@@js.set "prototype"]
    val create: t -> _PerformanceMark [@@js.apply_newable]
  end
  module AnonymousInterface321 : sig
    type t = anonymous_interface_321
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _PerformanceMeasure [@@js.get "prototype"]
    val set_prototype: t -> _PerformanceMeasure -> unit [@@js.set "prototype"]
    val create: t -> _PerformanceMeasure [@@js.apply_newable]
  end
  module AnonymousInterface322 : sig
    type t = anonymous_interface_322
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _PerformanceNavigation [@@js.get "prototype"]
    val set_prototype: t -> _PerformanceNavigation -> unit [@@js.set "prototype"]
    val create: t -> _PerformanceNavigation [@@js.apply_newable]
    val get_TYPE_BACK_FORWARD: t -> float [@@js.get "TYPE_BACK_FORWARD"]
    val get_TYPE_NAVIGATE: t -> float [@@js.get "TYPE_NAVIGATE"]
    val get_TYPE_RELOAD: t -> float [@@js.get "TYPE_RELOAD"]
    val get_TYPE_RESERVED: t -> float [@@js.get "TYPE_RESERVED"]
  end
  module AnonymousInterface323 : sig
    type t = anonymous_interface_323
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _PerformanceNavigationTiming [@@js.get "prototype"]
    val set_prototype: t -> _PerformanceNavigationTiming -> unit [@@js.set "prototype"]
    val create: t -> _PerformanceNavigationTiming [@@js.apply_newable]
  end
  module AnonymousInterface324 : sig
    type t = anonymous_interface_324
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _PerformanceObserver [@@js.get "prototype"]
    val set_prototype: t -> _PerformanceObserver -> unit [@@js.set "prototype"]
    val create: t -> callback:_PerformanceObserverCallback -> _PerformanceObserver [@@js.apply_newable]
    val get_supportedEntryTypes: t -> string list [@@js.get "supportedEntryTypes"]
  end
  module AnonymousInterface325 : sig
    type t = anonymous_interface_325
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _PerformanceObserverEntryList [@@js.get "prototype"]
    val set_prototype: t -> _PerformanceObserverEntryList -> unit [@@js.set "prototype"]
    val create: t -> _PerformanceObserverEntryList [@@js.apply_newable]
  end
  module AnonymousInterface326 : sig
    type t = anonymous_interface_326
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _PerformanceResourceTiming [@@js.get "prototype"]
    val set_prototype: t -> _PerformanceResourceTiming -> unit [@@js.set "prototype"]
    val create: t -> _PerformanceResourceTiming [@@js.apply_newable]
  end
  module AnonymousInterface327 : sig
    type t = anonymous_interface_327
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _PerformanceTiming [@@js.get "prototype"]
    val set_prototype: t -> _PerformanceTiming -> unit [@@js.set "prototype"]
    val create: t -> _PerformanceTiming [@@js.apply_newable]
  end
  module AnonymousInterface328 : sig
    type t = anonymous_interface_328
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _PeriodicWave [@@js.get "prototype"]
    val set_prototype: t -> _PeriodicWave -> unit [@@js.set "prototype"]
    val create: t -> context:_BaseAudioContext -> ?options:_PeriodicWaveOptions -> unit -> _PeriodicWave [@@js.apply_newable]
  end
  module AnonymousInterface329 : sig
    type t = anonymous_interface_329
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _PermissionRequest [@@js.get "prototype"]
    val set_prototype: t -> _PermissionRequest -> unit [@@js.set "prototype"]
    val create: t -> _PermissionRequest [@@js.apply_newable]
  end
  module AnonymousInterface330 : sig
    type t = anonymous_interface_330
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _PermissionRequestedEvent [@@js.get "prototype"]
    val set_prototype: t -> _PermissionRequestedEvent -> unit [@@js.set "prototype"]
    val create: t -> _PermissionRequestedEvent [@@js.apply_newable]
  end
  module AnonymousInterface331 : sig
    type t = anonymous_interface_331
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _PermissionStatus [@@js.get "prototype"]
    val set_prototype: t -> _PermissionStatus -> unit [@@js.set "prototype"]
    val create: t -> _PermissionStatus [@@js.apply_newable]
  end
  module AnonymousInterface332 : sig
    type t = anonymous_interface_332
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _Permissions [@@js.get "prototype"]
    val set_prototype: t -> _Permissions -> unit [@@js.set "prototype"]
    val create: t -> _Permissions [@@js.apply_newable]
  end
  module AnonymousInterface333 : sig
    type t = anonymous_interface_333
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _Plugin [@@js.get "prototype"]
    val set_prototype: t -> _Plugin -> unit [@@js.set "prototype"]
    val create: t -> _Plugin [@@js.apply_newable]
  end
  module AnonymousInterface334 : sig
    type t = anonymous_interface_334
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _PluginArray [@@js.get "prototype"]
    val set_prototype: t -> _PluginArray -> unit [@@js.set "prototype"]
    val create: t -> _PluginArray [@@js.apply_newable]
  end
  module AnonymousInterface335 : sig
    type t = anonymous_interface_335
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _PointerEvent [@@js.get "prototype"]
    val set_prototype: t -> _PointerEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> ?eventInitDict:_PointerEventInit -> unit -> _PointerEvent [@@js.apply_newable]
  end
  module AnonymousInterface336 : sig
    type t = anonymous_interface_336
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _PopStateEvent [@@js.get "prototype"]
    val set_prototype: t -> _PopStateEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> ?eventInitDict:_PopStateEventInit -> unit -> _PopStateEvent [@@js.apply_newable]
  end
  module AnonymousInterface337 : sig
    type t = anonymous_interface_337
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _ProcessingInstruction [@@js.get "prototype"]
    val set_prototype: t -> _ProcessingInstruction -> unit [@@js.set "prototype"]
    val create: t -> _ProcessingInstruction [@@js.apply_newable]
  end
  module AnonymousInterface338 : sig
    type t = anonymous_interface_338
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _EventTarget _ProgressEvent [@@js.get "prototype"]
    val set_prototype: t -> _EventTarget _ProgressEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> ?eventInitDict:_ProgressEventInit -> unit -> _EventTarget _ProgressEvent [@@js.apply_newable]
  end
  module AnonymousInterface339 : sig
    type t = anonymous_interface_339
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _PromiseRejectionEvent [@@js.get "prototype"]
    val set_prototype: t -> _PromiseRejectionEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> eventInitDict:_PromiseRejectionEventInit -> _PromiseRejectionEvent [@@js.apply_newable]
  end
  module AnonymousInterface340 : sig
    type t = anonymous_interface_340
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _PublicKeyCredential [@@js.get "prototype"]
    val set_prototype: t -> _PublicKeyCredential -> unit [@@js.set "prototype"]
    val create: t -> _PublicKeyCredential [@@js.apply_newable]
    val isUserVerifyingPlatformAuthenticatorAvailable: t -> bool Promise.t_1 [@@js.call "isUserVerifyingPlatformAuthenticatorAvailable"]
  end
  module AnonymousInterface341 : sig
    type t = anonymous_interface_341
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _PushManager [@@js.get "prototype"]
    val set_prototype: t -> _PushManager -> unit [@@js.set "prototype"]
    val create: t -> _PushManager [@@js.apply_newable]
    val get_supportedContentEncodings: t -> string list [@@js.get "supportedContentEncodings"]
  end
  module AnonymousInterface342 : sig
    type t = anonymous_interface_342
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _PushSubscription [@@js.get "prototype"]
    val set_prototype: t -> _PushSubscription -> unit [@@js.set "prototype"]
    val create: t -> _PushSubscription [@@js.apply_newable]
  end
  module AnonymousInterface343 : sig
    type t = anonymous_interface_343
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _PushSubscriptionOptions [@@js.get "prototype"]
    val set_prototype: t -> _PushSubscriptionOptions -> unit [@@js.set "prototype"]
    val create: t -> _PushSubscriptionOptions [@@js.apply_newable]
  end
  module AnonymousInterface344 : sig
    type t = anonymous_interface_344
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _RTCCertificate [@@js.get "prototype"]
    val set_prototype: t -> _RTCCertificate -> unit [@@js.set "prototype"]
    val create: t -> _RTCCertificate [@@js.apply_newable]
    val getSupportedAlgorithms: t -> _AlgorithmIdentifier list [@@js.call "getSupportedAlgorithms"]
  end
  module AnonymousInterface345 : sig
    type t = anonymous_interface_345
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _RTCDTMFSender [@@js.get "prototype"]
    val set_prototype: t -> _RTCDTMFSender -> unit [@@js.set "prototype"]
    val create: t -> _RTCDTMFSender [@@js.apply_newable]
  end
  module AnonymousInterface346 : sig
    type t = anonymous_interface_346
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _RTCDTMFToneChangeEvent [@@js.get "prototype"]
    val set_prototype: t -> _RTCDTMFToneChangeEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> eventInitDict:_RTCDTMFToneChangeEventInit -> _RTCDTMFToneChangeEvent [@@js.apply_newable]
  end
  module AnonymousInterface347 : sig
    type t = anonymous_interface_347
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _RTCDataChannel [@@js.get "prototype"]
    val set_prototype: t -> _RTCDataChannel -> unit [@@js.set "prototype"]
    val create: t -> _RTCDataChannel [@@js.apply_newable]
  end
  module AnonymousInterface348 : sig
    type t = anonymous_interface_348
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _RTCDataChannelEvent [@@js.get "prototype"]
    val set_prototype: t -> _RTCDataChannelEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> eventInitDict:_RTCDataChannelEventInit -> _RTCDataChannelEvent [@@js.apply_newable]
  end
  module AnonymousInterface349 : sig
    type t = anonymous_interface_349
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _RTCDtlsTransport [@@js.get "prototype"]
    val set_prototype: t -> _RTCDtlsTransport -> unit [@@js.set "prototype"]
    val create: t -> _RTCDtlsTransport [@@js.apply_newable]
  end
  module AnonymousInterface350 : sig
    type t = anonymous_interface_350
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _RTCDtlsTransportStateChangedEvent [@@js.get "prototype"]
    val set_prototype: t -> _RTCDtlsTransportStateChangedEvent -> unit [@@js.set "prototype"]
    val create: t -> _RTCDtlsTransportStateChangedEvent [@@js.apply_newable]
  end
  module AnonymousInterface351 : sig
    type t = anonymous_interface_351
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _RTCDtmfSender [@@js.get "prototype"]
    val set_prototype: t -> _RTCDtmfSender -> unit [@@js.set "prototype"]
    val create: t -> sender:_RTCRtpSender -> _RTCDtmfSender [@@js.apply_newable]
  end
  module AnonymousInterface352 : sig
    type t = anonymous_interface_352
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _RTCError [@@js.get "prototype"]
    val set_prototype: t -> _RTCError -> unit [@@js.set "prototype"]
    val create: t -> init:_RTCErrorInit -> ?message:string -> unit -> _RTCError [@@js.apply_newable]
  end
  module AnonymousInterface353 : sig
    type t = anonymous_interface_353
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _RTCErrorEvent [@@js.get "prototype"]
    val set_prototype: t -> _RTCErrorEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> eventInitDict:_RTCErrorEventInit -> _RTCErrorEvent [@@js.apply_newable]
  end
  module AnonymousInterface354 : sig
    type t = anonymous_interface_354
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _RTCIceCandidate [@@js.get "prototype"]
    val set_prototype: t -> _RTCIceCandidate -> unit [@@js.set "prototype"]
    val create: t -> ?candidateInitDict:_RTCIceCandidateInit -> unit -> _RTCIceCandidate [@@js.apply_newable]
  end
  module AnonymousInterface355 : sig
    type t = anonymous_interface_355
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _RTCIceCandidatePairChangedEvent [@@js.get "prototype"]
    val set_prototype: t -> _RTCIceCandidatePairChangedEvent -> unit [@@js.set "prototype"]
    val create: t -> _RTCIceCandidatePairChangedEvent [@@js.apply_newable]
  end
  module AnonymousInterface356 : sig
    type t = anonymous_interface_356
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _RTCIceGatherer [@@js.get "prototype"]
    val set_prototype: t -> _RTCIceGatherer -> unit [@@js.set "prototype"]
    val create: t -> options:_RTCIceGatherOptions -> _RTCIceGatherer [@@js.apply_newable]
  end
  module AnonymousInterface357 : sig
    type t = anonymous_interface_357
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _RTCIceGathererEvent [@@js.get "prototype"]
    val set_prototype: t -> _RTCIceGathererEvent -> unit [@@js.set "prototype"]
    val create: t -> _RTCIceGathererEvent [@@js.apply_newable]
  end
  module AnonymousInterface358 : sig
    type t = anonymous_interface_358
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _RTCIceTransport [@@js.get "prototype"]
    val set_prototype: t -> _RTCIceTransport -> unit [@@js.set "prototype"]
    val create: t -> _RTCIceTransport [@@js.apply_newable]
  end
  module AnonymousInterface359 : sig
    type t = anonymous_interface_359
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _RTCIceTransportStateChangedEvent [@@js.get "prototype"]
    val set_prototype: t -> _RTCIceTransportStateChangedEvent -> unit [@@js.set "prototype"]
    val create: t -> _RTCIceTransportStateChangedEvent [@@js.apply_newable]
  end
  module AnonymousInterface360 : sig
    type t = anonymous_interface_360
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _RTCIdentityAssertion [@@js.get "prototype"]
    val set_prototype: t -> _RTCIdentityAssertion -> unit [@@js.set "prototype"]
    val create: t -> idp:string -> name:string -> _RTCIdentityAssertion [@@js.apply_newable]
  end
  module AnonymousInterface361 : sig
    type t = anonymous_interface_361
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _RTCPeerConnection [@@js.get "prototype"]
    val set_prototype: t -> _RTCPeerConnection -> unit [@@js.set "prototype"]
    val create: t -> ?configuration:_RTCConfiguration -> unit -> _RTCPeerConnection [@@js.apply_newable]
    val generateCertificate: t -> keygenAlgorithm:_AlgorithmIdentifier -> _RTCCertificate Promise.t_1 [@@js.call "generateCertificate"]
    val getDefaultIceServers: t -> _RTCIceServer list [@@js.call "getDefaultIceServers"]
  end
  module AnonymousInterface362 : sig
    type t = anonymous_interface_362
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _RTCPeerConnectionIceErrorEvent [@@js.get "prototype"]
    val set_prototype: t -> _RTCPeerConnectionIceErrorEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> eventInitDict:_RTCPeerConnectionIceErrorEventInit -> _RTCPeerConnectionIceErrorEvent [@@js.apply_newable]
  end
  module AnonymousInterface363 : sig
    type t = anonymous_interface_363
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _RTCPeerConnectionIceEvent [@@js.get "prototype"]
    val set_prototype: t -> _RTCPeerConnectionIceEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> ?eventInitDict:_RTCPeerConnectionIceEventInit -> unit -> _RTCPeerConnectionIceEvent [@@js.apply_newable]
  end
  module AnonymousInterface364 : sig
    type t = anonymous_interface_364
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _RTCRtpReceiver [@@js.get "prototype"]
    val set_prototype: t -> _RTCRtpReceiver -> unit [@@js.set "prototype"]
    val create: t -> _RTCRtpReceiver [@@js.apply_newable]
    val getCapabilities: t -> kind:string -> _RTCRtpCapabilities or_null [@@js.call "getCapabilities"]
  end
  module AnonymousInterface365 : sig
    type t = anonymous_interface_365
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _RTCRtpSender [@@js.get "prototype"]
    val set_prototype: t -> _RTCRtpSender -> unit [@@js.set "prototype"]
    val create: t -> _RTCRtpSender [@@js.apply_newable]
    val getCapabilities: t -> kind:string -> _RTCRtpCapabilities or_null [@@js.call "getCapabilities"]
  end
  module AnonymousInterface366 : sig
    type t = anonymous_interface_366
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _RTCRtpTransceiver [@@js.get "prototype"]
    val set_prototype: t -> _RTCRtpTransceiver -> unit [@@js.set "prototype"]
    val create: t -> _RTCRtpTransceiver [@@js.apply_newable]
  end
  module AnonymousInterface367 : sig
    type t = anonymous_interface_367
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _RTCSctpTransport [@@js.get "prototype"]
    val set_prototype: t -> _RTCSctpTransport -> unit [@@js.set "prototype"]
    val create: t -> _RTCSctpTransport [@@js.apply_newable]
  end
  module AnonymousInterface368 : sig
    type t = anonymous_interface_368
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _RTCSessionDescription [@@js.get "prototype"]
    val set_prototype: t -> _RTCSessionDescription -> unit [@@js.set "prototype"]
    val create: t -> ?descriptionInitDict:_RTCSessionDescriptionInit -> unit -> _RTCSessionDescription [@@js.apply_newable]
  end
  module AnonymousInterface369 : sig
    type t = anonymous_interface_369
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _RTCSrtpSdesTransport [@@js.get "prototype"]
    val set_prototype: t -> _RTCSrtpSdesTransport -> unit [@@js.set "prototype"]
    val create: t -> transport:_RTCIceTransport -> encryptParameters:_RTCSrtpSdesParameters -> decryptParameters:_RTCSrtpSdesParameters -> _RTCSrtpSdesTransport [@@js.apply_newable]
    val getLocalParameters: t -> _RTCSrtpSdesParameters list [@@js.call "getLocalParameters"]
  end
  module AnonymousInterface370 : sig
    type t = anonymous_interface_370
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _RTCSsrcConflictEvent [@@js.get "prototype"]
    val set_prototype: t -> _RTCSsrcConflictEvent -> unit [@@js.set "prototype"]
    val create: t -> _RTCSsrcConflictEvent [@@js.apply_newable]
  end
  module AnonymousInterface371 : sig
    type t = anonymous_interface_371
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _RTCStatsEvent [@@js.get "prototype"]
    val set_prototype: t -> _RTCStatsEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> eventInitDict:_RTCStatsEventInit -> _RTCStatsEvent [@@js.apply_newable]
  end
  module AnonymousInterface372 : sig
    type t = anonymous_interface_372
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _RTCStatsProvider [@@js.get "prototype"]
    val set_prototype: t -> _RTCStatsProvider -> unit [@@js.set "prototype"]
    val create: t -> _RTCStatsProvider [@@js.apply_newable]
  end
  module AnonymousInterface373 : sig
    type t = anonymous_interface_373
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _RTCStatsReport [@@js.get "prototype"]
    val set_prototype: t -> _RTCStatsReport -> unit [@@js.set "prototype"]
    val create: t -> _RTCStatsReport [@@js.apply_newable]
  end
  module AnonymousInterface374 : sig
    type t = anonymous_interface_374
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _RTCTrackEvent [@@js.get "prototype"]
    val set_prototype: t -> _RTCTrackEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> eventInitDict:_RTCTrackEventInit -> _RTCTrackEvent [@@js.apply_newable]
  end
  module AnonymousInterface375 : sig
    type t = anonymous_interface_375
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _RadioNodeList [@@js.get "prototype"]
    val set_prototype: t -> _RadioNodeList -> unit [@@js.set "prototype"]
    val create: t -> _RadioNodeList [@@js.apply_newable]
  end
  module AnonymousInterface376 : sig
    type t = anonymous_interface_376
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _RandomSource [@@js.get "prototype"]
    val set_prototype: t -> _RandomSource -> unit [@@js.set "prototype"]
    val create: t -> _RandomSource [@@js.apply_newable]
  end
  module AnonymousInterface377 : sig
    type t = anonymous_interface_377
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _Range [@@js.get "prototype"]
    val set_prototype: t -> _Range -> unit [@@js.set "prototype"]
    val create: t -> _Range [@@js.apply_newable]
    val get_END_TO_END: t -> float [@@js.get "END_TO_END"]
    val get_END_TO_START: t -> float [@@js.get "END_TO_START"]
    val get_START_TO_END: t -> float [@@js.get "START_TO_END"]
    val get_START_TO_START: t -> float [@@js.get "START_TO_START"]
    val toString: t -> string [@@js.call "toString"]
  end
  module AnonymousInterface378 : sig
    type t = anonymous_interface_378
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> any _ReadableStream [@@js.get "prototype"]
    val set_prototype: t -> any _ReadableStream -> unit [@@js.set "prototype"]
    val create: t -> underlyingSource:_UnderlyingByteSource -> ?strategy:anonymous_interface_3 -> unit -> Uint8Array.t_0 _ReadableStream [@@js.apply_newable]
    val create': t -> ?underlyingSource:'R _UnderlyingSource -> ?strategy:'R _QueuingStrategy -> unit -> 'R _ReadableStream [@@js.apply_newable]
  end
  module AnonymousInterface379 : sig
    type t = anonymous_interface_379
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> any _ReadableStreamReader [@@js.get "prototype"]
    val set_prototype: t -> any _ReadableStreamReader -> unit [@@js.set "prototype"]
    val create: t -> any _ReadableStreamReader [@@js.apply_newable]
  end
  module AnonymousInterface380 : sig
    type t = anonymous_interface_380
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _Request [@@js.get "prototype"]
    val set_prototype: t -> _Request -> unit [@@js.set "prototype"]
    val create: t -> input:_RequestInfo -> ?init:_RequestInit -> unit -> _Request [@@js.apply_newable]
  end
  module AnonymousInterface381 : sig
    type t = anonymous_interface_381
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _Response [@@js.get "prototype"]
    val set_prototype: t -> _Response -> unit [@@js.set "prototype"]
    val create: t -> ?body:_BodyInit or_null -> ?init:_ResponseInit -> unit -> _Response [@@js.apply_newable]
    val error: t -> _Response [@@js.call "error"]
    val redirect: t -> url:string -> ?status:float -> unit -> _Response [@@js.call "redirect"]
  end
  module AnonymousInterface382 : sig
    type t = anonymous_interface_382
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _WebAssembly_RuntimeError [@@js.get "prototype"]
    val set_prototype: t -> _WebAssembly_RuntimeError -> unit [@@js.set "prototype"]
    val create: t -> _WebAssembly_RuntimeError [@@js.apply_newable]
  end
  module AnonymousInterface383 : sig
    type t = anonymous_interface_383
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGAElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGAElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGAElement [@@js.apply_newable]
  end
  module AnonymousInterface384 : sig
    type t = anonymous_interface_384
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGAngle [@@js.get "prototype"]
    val set_prototype: t -> _SVGAngle -> unit [@@js.set "prototype"]
    val create: t -> _SVGAngle [@@js.apply_newable]
    val get_SVG_ANGLETYPE_DEG: t -> float [@@js.get "SVG_ANGLETYPE_DEG"]
    val get_SVG_ANGLETYPE_GRAD: t -> float [@@js.get "SVG_ANGLETYPE_GRAD"]
    val get_SVG_ANGLETYPE_RAD: t -> float [@@js.get "SVG_ANGLETYPE_RAD"]
    val get_SVG_ANGLETYPE_UNKNOWN: t -> float [@@js.get "SVG_ANGLETYPE_UNKNOWN"]
    val get_SVG_ANGLETYPE_UNSPECIFIED: t -> float [@@js.get "SVG_ANGLETYPE_UNSPECIFIED"]
  end
  module AnonymousInterface385 : sig
    type t = anonymous_interface_385
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGAnimateElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGAnimateElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGAnimateElement [@@js.apply_newable]
  end
  module AnonymousInterface386 : sig
    type t = anonymous_interface_386
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGAnimateMotionElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGAnimateMotionElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGAnimateMotionElement [@@js.apply_newable]
  end
  module AnonymousInterface387 : sig
    type t = anonymous_interface_387
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGAnimateTransformElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGAnimateTransformElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGAnimateTransformElement [@@js.apply_newable]
  end
  module AnonymousInterface388 : sig
    type t = anonymous_interface_388
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGAnimatedAngle [@@js.get "prototype"]
    val set_prototype: t -> _SVGAnimatedAngle -> unit [@@js.set "prototype"]
    val create: t -> _SVGAnimatedAngle [@@js.apply_newable]
  end
  module AnonymousInterface389 : sig
    type t = anonymous_interface_389
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGAnimatedBoolean [@@js.get "prototype"]
    val set_prototype: t -> _SVGAnimatedBoolean -> unit [@@js.set "prototype"]
    val create: t -> _SVGAnimatedBoolean [@@js.apply_newable]
  end
  module AnonymousInterface390 : sig
    type t = anonymous_interface_390
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGAnimatedEnumeration [@@js.get "prototype"]
    val set_prototype: t -> _SVGAnimatedEnumeration -> unit [@@js.set "prototype"]
    val create: t -> _SVGAnimatedEnumeration [@@js.apply_newable]
  end
  module AnonymousInterface391 : sig
    type t = anonymous_interface_391
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGAnimatedInteger [@@js.get "prototype"]
    val set_prototype: t -> _SVGAnimatedInteger -> unit [@@js.set "prototype"]
    val create: t -> _SVGAnimatedInteger [@@js.apply_newable]
  end
  module AnonymousInterface392 : sig
    type t = anonymous_interface_392
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGAnimatedLength [@@js.get "prototype"]
    val set_prototype: t -> _SVGAnimatedLength -> unit [@@js.set "prototype"]
    val create: t -> _SVGAnimatedLength [@@js.apply_newable]
  end
  module AnonymousInterface393 : sig
    type t = anonymous_interface_393
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGAnimatedLengthList [@@js.get "prototype"]
    val set_prototype: t -> _SVGAnimatedLengthList -> unit [@@js.set "prototype"]
    val create: t -> _SVGAnimatedLengthList [@@js.apply_newable]
  end
  module AnonymousInterface394 : sig
    type t = anonymous_interface_394
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGAnimatedNumber [@@js.get "prototype"]
    val set_prototype: t -> _SVGAnimatedNumber -> unit [@@js.set "prototype"]
    val create: t -> _SVGAnimatedNumber [@@js.apply_newable]
  end
  module AnonymousInterface395 : sig
    type t = anonymous_interface_395
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGAnimatedNumberList [@@js.get "prototype"]
    val set_prototype: t -> _SVGAnimatedNumberList -> unit [@@js.set "prototype"]
    val create: t -> _SVGAnimatedNumberList [@@js.apply_newable]
  end
  module AnonymousInterface396 : sig
    type t = anonymous_interface_396
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGAnimatedPreserveAspectRatio [@@js.get "prototype"]
    val set_prototype: t -> _SVGAnimatedPreserveAspectRatio -> unit [@@js.set "prototype"]
    val create: t -> _SVGAnimatedPreserveAspectRatio [@@js.apply_newable]
  end
  module AnonymousInterface397 : sig
    type t = anonymous_interface_397
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGAnimatedRect [@@js.get "prototype"]
    val set_prototype: t -> _SVGAnimatedRect -> unit [@@js.set "prototype"]
    val create: t -> _SVGAnimatedRect [@@js.apply_newable]
  end
  module AnonymousInterface398 : sig
    type t = anonymous_interface_398
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGAnimatedString [@@js.get "prototype"]
    val set_prototype: t -> _SVGAnimatedString -> unit [@@js.set "prototype"]
    val create: t -> _SVGAnimatedString [@@js.apply_newable]
  end
  module AnonymousInterface399 : sig
    type t = anonymous_interface_399
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGAnimatedTransformList [@@js.get "prototype"]
    val set_prototype: t -> _SVGAnimatedTransformList -> unit [@@js.set "prototype"]
    val create: t -> _SVGAnimatedTransformList [@@js.apply_newable]
  end
  module AnonymousInterface400 : sig
    type t = anonymous_interface_400
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGAnimationElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGAnimationElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGAnimationElement [@@js.apply_newable]
  end
  module AnonymousInterface401 : sig
    type t = anonymous_interface_401
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGCircleElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGCircleElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGCircleElement [@@js.apply_newable]
  end
  module AnonymousInterface402 : sig
    type t = anonymous_interface_402
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGClipPathElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGClipPathElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGClipPathElement [@@js.apply_newable]
  end
  module AnonymousInterface403 : sig
    type t = anonymous_interface_403
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGComponentTransferFunctionElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGComponentTransferFunctionElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGComponentTransferFunctionElement [@@js.apply_newable]
    val get_SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE: t -> float [@@js.get "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE"]
    val get_SVG_FECOMPONENTTRANSFER_TYPE_GAMMA: t -> float [@@js.get "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA"]
    val get_SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY: t -> float [@@js.get "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY"]
    val get_SVG_FECOMPONENTTRANSFER_TYPE_LINEAR: t -> float [@@js.get "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR"]
    val get_SVG_FECOMPONENTTRANSFER_TYPE_TABLE: t -> float [@@js.get "SVG_FECOMPONENTTRANSFER_TYPE_TABLE"]
    val get_SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN: t -> float [@@js.get "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN"]
  end
  module AnonymousInterface404 : sig
    type t = anonymous_interface_404
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGCursorElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGCursorElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGCursorElement [@@js.apply_newable]
  end
  module AnonymousInterface405 : sig
    type t = anonymous_interface_405
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGDefsElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGDefsElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGDefsElement [@@js.apply_newable]
  end
  module AnonymousInterface406 : sig
    type t = anonymous_interface_406
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGDescElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGDescElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGDescElement [@@js.apply_newable]
  end
  module AnonymousInterface407 : sig
    type t = anonymous_interface_407
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGElement [@@js.apply_newable]
  end
  module AnonymousInterface408 : sig
    type t = anonymous_interface_408
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGElementInstance [@@js.get "prototype"]
    val set_prototype: t -> _SVGElementInstance -> unit [@@js.set "prototype"]
    val create: t -> _SVGElementInstance [@@js.apply_newable]
  end
  module AnonymousInterface409 : sig
    type t = anonymous_interface_409
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGElementInstanceList [@@js.get "prototype"]
    val set_prototype: t -> _SVGElementInstanceList -> unit [@@js.set "prototype"]
    val create: t -> _SVGElementInstanceList [@@js.apply_newable]
  end
  module AnonymousInterface410 : sig
    type t = anonymous_interface_410
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGEllipseElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGEllipseElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGEllipseElement [@@js.apply_newable]
  end
  module AnonymousInterface411 : sig
    type t = anonymous_interface_411
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGFEBlendElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGFEBlendElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGFEBlendElement [@@js.apply_newable]
    val get_SVG_FEBLEND_MODE_COLOR: t -> float [@@js.get "SVG_FEBLEND_MODE_COLOR"]
    val get_SVG_FEBLEND_MODE_COLOR_BURN: t -> float [@@js.get "SVG_FEBLEND_MODE_COLOR_BURN"]
    val get_SVG_FEBLEND_MODE_COLOR_DODGE: t -> float [@@js.get "SVG_FEBLEND_MODE_COLOR_DODGE"]
    val get_SVG_FEBLEND_MODE_DARKEN: t -> float [@@js.get "SVG_FEBLEND_MODE_DARKEN"]
    val get_SVG_FEBLEND_MODE_DIFFERENCE: t -> float [@@js.get "SVG_FEBLEND_MODE_DIFFERENCE"]
    val get_SVG_FEBLEND_MODE_EXCLUSION: t -> float [@@js.get "SVG_FEBLEND_MODE_EXCLUSION"]
    val get_SVG_FEBLEND_MODE_HARD_LIGHT: t -> float [@@js.get "SVG_FEBLEND_MODE_HARD_LIGHT"]
    val get_SVG_FEBLEND_MODE_HUE: t -> float [@@js.get "SVG_FEBLEND_MODE_HUE"]
    val get_SVG_FEBLEND_MODE_LIGHTEN: t -> float [@@js.get "SVG_FEBLEND_MODE_LIGHTEN"]
    val get_SVG_FEBLEND_MODE_LUMINOSITY: t -> float [@@js.get "SVG_FEBLEND_MODE_LUMINOSITY"]
    val get_SVG_FEBLEND_MODE_MULTIPLY: t -> float [@@js.get "SVG_FEBLEND_MODE_MULTIPLY"]
    val get_SVG_FEBLEND_MODE_NORMAL: t -> float [@@js.get "SVG_FEBLEND_MODE_NORMAL"]
    val get_SVG_FEBLEND_MODE_OVERLAY: t -> float [@@js.get "SVG_FEBLEND_MODE_OVERLAY"]
    val get_SVG_FEBLEND_MODE_SATURATION: t -> float [@@js.get "SVG_FEBLEND_MODE_SATURATION"]
    val get_SVG_FEBLEND_MODE_SCREEN: t -> float [@@js.get "SVG_FEBLEND_MODE_SCREEN"]
    val get_SVG_FEBLEND_MODE_SOFT_LIGHT: t -> float [@@js.get "SVG_FEBLEND_MODE_SOFT_LIGHT"]
    val get_SVG_FEBLEND_MODE_UNKNOWN: t -> float [@@js.get "SVG_FEBLEND_MODE_UNKNOWN"]
  end
  module AnonymousInterface412 : sig
    type t = anonymous_interface_412
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGFEColorMatrixElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGFEColorMatrixElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGFEColorMatrixElement [@@js.apply_newable]
    val get_SVG_FECOLORMATRIX_TYPE_HUEROTATE: t -> float [@@js.get "SVG_FECOLORMATRIX_TYPE_HUEROTATE"]
    val get_SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA: t -> float [@@js.get "SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA"]
    val get_SVG_FECOLORMATRIX_TYPE_MATRIX: t -> float [@@js.get "SVG_FECOLORMATRIX_TYPE_MATRIX"]
    val get_SVG_FECOLORMATRIX_TYPE_SATURATE: t -> float [@@js.get "SVG_FECOLORMATRIX_TYPE_SATURATE"]
    val get_SVG_FECOLORMATRIX_TYPE_UNKNOWN: t -> float [@@js.get "SVG_FECOLORMATRIX_TYPE_UNKNOWN"]
  end
  module AnonymousInterface413 : sig
    type t = anonymous_interface_413
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGFEComponentTransferElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGFEComponentTransferElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGFEComponentTransferElement [@@js.apply_newable]
  end
  module AnonymousInterface414 : sig
    type t = anonymous_interface_414
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGFECompositeElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGFECompositeElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGFECompositeElement [@@js.apply_newable]
    val get_SVG_FECOMPOSITE_OPERATOR_ARITHMETIC: t -> float [@@js.get "SVG_FECOMPOSITE_OPERATOR_ARITHMETIC"]
    val get_SVG_FECOMPOSITE_OPERATOR_ATOP: t -> float [@@js.get "SVG_FECOMPOSITE_OPERATOR_ATOP"]
    val get_SVG_FECOMPOSITE_OPERATOR_IN: t -> float [@@js.get "SVG_FECOMPOSITE_OPERATOR_IN"]
    val get_SVG_FECOMPOSITE_OPERATOR_OUT: t -> float [@@js.get "SVG_FECOMPOSITE_OPERATOR_OUT"]
    val get_SVG_FECOMPOSITE_OPERATOR_OVER: t -> float [@@js.get "SVG_FECOMPOSITE_OPERATOR_OVER"]
    val get_SVG_FECOMPOSITE_OPERATOR_UNKNOWN: t -> float [@@js.get "SVG_FECOMPOSITE_OPERATOR_UNKNOWN"]
    val get_SVG_FECOMPOSITE_OPERATOR_XOR: t -> float [@@js.get "SVG_FECOMPOSITE_OPERATOR_XOR"]
  end
  module AnonymousInterface415 : sig
    type t = anonymous_interface_415
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGFEConvolveMatrixElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGFEConvolveMatrixElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGFEConvolveMatrixElement [@@js.apply_newable]
    val get_SVG_EDGEMODE_DUPLICATE: t -> float [@@js.get "SVG_EDGEMODE_DUPLICATE"]
    val get_SVG_EDGEMODE_NONE: t -> float [@@js.get "SVG_EDGEMODE_NONE"]
    val get_SVG_EDGEMODE_UNKNOWN: t -> float [@@js.get "SVG_EDGEMODE_UNKNOWN"]
    val get_SVG_EDGEMODE_WRAP: t -> float [@@js.get "SVG_EDGEMODE_WRAP"]
  end
  module AnonymousInterface416 : sig
    type t = anonymous_interface_416
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGFEDiffuseLightingElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGFEDiffuseLightingElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGFEDiffuseLightingElement [@@js.apply_newable]
  end
  module AnonymousInterface417 : sig
    type t = anonymous_interface_417
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGFEDisplacementMapElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGFEDisplacementMapElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGFEDisplacementMapElement [@@js.apply_newable]
    val get_SVG_CHANNEL_A: t -> float [@@js.get "SVG_CHANNEL_A"]
    val get_SVG_CHANNEL_B: t -> float [@@js.get "SVG_CHANNEL_B"]
    val get_SVG_CHANNEL_G: t -> float [@@js.get "SVG_CHANNEL_G"]
    val get_SVG_CHANNEL_R: t -> float [@@js.get "SVG_CHANNEL_R"]
    val get_SVG_CHANNEL_UNKNOWN: t -> float [@@js.get "SVG_CHANNEL_UNKNOWN"]
  end
  module AnonymousInterface418 : sig
    type t = anonymous_interface_418
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGFEDistantLightElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGFEDistantLightElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGFEDistantLightElement [@@js.apply_newable]
  end
  module AnonymousInterface419 : sig
    type t = anonymous_interface_419
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGFEDropShadowElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGFEDropShadowElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGFEDropShadowElement [@@js.apply_newable]
  end
  module AnonymousInterface420 : sig
    type t = anonymous_interface_420
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGFEFloodElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGFEFloodElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGFEFloodElement [@@js.apply_newable]
  end
  module AnonymousInterface421 : sig
    type t = anonymous_interface_421
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGFEFuncAElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGFEFuncAElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGFEFuncAElement [@@js.apply_newable]
  end
  module AnonymousInterface422 : sig
    type t = anonymous_interface_422
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGFEFuncBElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGFEFuncBElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGFEFuncBElement [@@js.apply_newable]
  end
  module AnonymousInterface423 : sig
    type t = anonymous_interface_423
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGFEFuncGElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGFEFuncGElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGFEFuncGElement [@@js.apply_newable]
  end
  module AnonymousInterface424 : sig
    type t = anonymous_interface_424
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGFEFuncRElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGFEFuncRElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGFEFuncRElement [@@js.apply_newable]
  end
  module AnonymousInterface425 : sig
    type t = anonymous_interface_425
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGFEGaussianBlurElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGFEGaussianBlurElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGFEGaussianBlurElement [@@js.apply_newable]
  end
  module AnonymousInterface426 : sig
    type t = anonymous_interface_426
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGFEImageElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGFEImageElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGFEImageElement [@@js.apply_newable]
  end
  module AnonymousInterface427 : sig
    type t = anonymous_interface_427
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGFEMergeElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGFEMergeElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGFEMergeElement [@@js.apply_newable]
  end
  module AnonymousInterface428 : sig
    type t = anonymous_interface_428
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGFEMergeNodeElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGFEMergeNodeElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGFEMergeNodeElement [@@js.apply_newable]
  end
  module AnonymousInterface429 : sig
    type t = anonymous_interface_429
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGFEMorphologyElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGFEMorphologyElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGFEMorphologyElement [@@js.apply_newable]
    val get_SVG_MORPHOLOGY_OPERATOR_DILATE: t -> float [@@js.get "SVG_MORPHOLOGY_OPERATOR_DILATE"]
    val get_SVG_MORPHOLOGY_OPERATOR_ERODE: t -> float [@@js.get "SVG_MORPHOLOGY_OPERATOR_ERODE"]
    val get_SVG_MORPHOLOGY_OPERATOR_UNKNOWN: t -> float [@@js.get "SVG_MORPHOLOGY_OPERATOR_UNKNOWN"]
  end
  module AnonymousInterface430 : sig
    type t = anonymous_interface_430
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGFEOffsetElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGFEOffsetElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGFEOffsetElement [@@js.apply_newable]
  end
  module AnonymousInterface431 : sig
    type t = anonymous_interface_431
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGFEPointLightElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGFEPointLightElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGFEPointLightElement [@@js.apply_newable]
  end
  module AnonymousInterface432 : sig
    type t = anonymous_interface_432
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGFESpecularLightingElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGFESpecularLightingElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGFESpecularLightingElement [@@js.apply_newable]
  end
  module AnonymousInterface433 : sig
    type t = anonymous_interface_433
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGFESpotLightElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGFESpotLightElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGFESpotLightElement [@@js.apply_newable]
  end
  module AnonymousInterface434 : sig
    type t = anonymous_interface_434
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGFETileElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGFETileElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGFETileElement [@@js.apply_newable]
  end
  module AnonymousInterface435 : sig
    type t = anonymous_interface_435
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGFETurbulenceElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGFETurbulenceElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGFETurbulenceElement [@@js.apply_newable]
    val get_SVG_STITCHTYPE_NOSTITCH: t -> float [@@js.get "SVG_STITCHTYPE_NOSTITCH"]
    val get_SVG_STITCHTYPE_STITCH: t -> float [@@js.get "SVG_STITCHTYPE_STITCH"]
    val get_SVG_STITCHTYPE_UNKNOWN: t -> float [@@js.get "SVG_STITCHTYPE_UNKNOWN"]
    val get_SVG_TURBULENCE_TYPE_FRACTALNOISE: t -> float [@@js.get "SVG_TURBULENCE_TYPE_FRACTALNOISE"]
    val get_SVG_TURBULENCE_TYPE_TURBULENCE: t -> float [@@js.get "SVG_TURBULENCE_TYPE_TURBULENCE"]
    val get_SVG_TURBULENCE_TYPE_UNKNOWN: t -> float [@@js.get "SVG_TURBULENCE_TYPE_UNKNOWN"]
  end
  module AnonymousInterface436 : sig
    type t = anonymous_interface_436
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGFilterElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGFilterElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGFilterElement [@@js.apply_newable]
  end
  module AnonymousInterface437 : sig
    type t = anonymous_interface_437
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGForeignObjectElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGForeignObjectElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGForeignObjectElement [@@js.apply_newable]
  end
  module AnonymousInterface438 : sig
    type t = anonymous_interface_438
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGGElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGGElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGGElement [@@js.apply_newable]
  end
  module AnonymousInterface439 : sig
    type t = anonymous_interface_439
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGGeometryElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGGeometryElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGGeometryElement [@@js.apply_newable]
  end
  module AnonymousInterface440 : sig
    type t = anonymous_interface_440
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGGradientElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGGradientElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGGradientElement [@@js.apply_newable]
    val get_SVG_SPREADMETHOD_PAD: t -> float [@@js.get "SVG_SPREADMETHOD_PAD"]
    val get_SVG_SPREADMETHOD_REFLECT: t -> float [@@js.get "SVG_SPREADMETHOD_REFLECT"]
    val get_SVG_SPREADMETHOD_REPEAT: t -> float [@@js.get "SVG_SPREADMETHOD_REPEAT"]
    val get_SVG_SPREADMETHOD_UNKNOWN: t -> float [@@js.get "SVG_SPREADMETHOD_UNKNOWN"]
  end
  module AnonymousInterface441 : sig
    type t = anonymous_interface_441
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGGraphicsElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGGraphicsElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGGraphicsElement [@@js.apply_newable]
  end
  module AnonymousInterface442 : sig
    type t = anonymous_interface_442
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGImageElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGImageElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGImageElement [@@js.apply_newable]
  end
  module AnonymousInterface443 : sig
    type t = anonymous_interface_443
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGLength [@@js.get "prototype"]
    val set_prototype: t -> _SVGLength -> unit [@@js.set "prototype"]
    val create: t -> _SVGLength [@@js.apply_newable]
    val get_SVG_LENGTHTYPE_CM: t -> float [@@js.get "SVG_LENGTHTYPE_CM"]
    val get_SVG_LENGTHTYPE_EMS: t -> float [@@js.get "SVG_LENGTHTYPE_EMS"]
    val get_SVG_LENGTHTYPE_EXS: t -> float [@@js.get "SVG_LENGTHTYPE_EXS"]
    val get_SVG_LENGTHTYPE_IN: t -> float [@@js.get "SVG_LENGTHTYPE_IN"]
    val get_SVG_LENGTHTYPE_MM: t -> float [@@js.get "SVG_LENGTHTYPE_MM"]
    val get_SVG_LENGTHTYPE_NUMBER: t -> float [@@js.get "SVG_LENGTHTYPE_NUMBER"]
    val get_SVG_LENGTHTYPE_PC: t -> float [@@js.get "SVG_LENGTHTYPE_PC"]
    val get_SVG_LENGTHTYPE_PERCENTAGE: t -> float [@@js.get "SVG_LENGTHTYPE_PERCENTAGE"]
    val get_SVG_LENGTHTYPE_PT: t -> float [@@js.get "SVG_LENGTHTYPE_PT"]
    val get_SVG_LENGTHTYPE_PX: t -> float [@@js.get "SVG_LENGTHTYPE_PX"]
    val get_SVG_LENGTHTYPE_UNKNOWN: t -> float [@@js.get "SVG_LENGTHTYPE_UNKNOWN"]
  end
  module AnonymousInterface444 : sig
    type t = anonymous_interface_444
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGLengthList [@@js.get "prototype"]
    val set_prototype: t -> _SVGLengthList -> unit [@@js.set "prototype"]
    val create: t -> _SVGLengthList [@@js.apply_newable]
  end
  module AnonymousInterface445 : sig
    type t = anonymous_interface_445
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGLineElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGLineElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGLineElement [@@js.apply_newable]
  end
  module AnonymousInterface446 : sig
    type t = anonymous_interface_446
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGLinearGradientElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGLinearGradientElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGLinearGradientElement [@@js.apply_newable]
  end
  module AnonymousInterface447 : sig
    type t = anonymous_interface_447
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGMarkerElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGMarkerElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGMarkerElement [@@js.apply_newable]
    val get_SVG_MARKERUNITS_STROKEWIDTH: t -> float [@@js.get "SVG_MARKERUNITS_STROKEWIDTH"]
    val get_SVG_MARKERUNITS_UNKNOWN: t -> float [@@js.get "SVG_MARKERUNITS_UNKNOWN"]
    val get_SVG_MARKERUNITS_USERSPACEONUSE: t -> float [@@js.get "SVG_MARKERUNITS_USERSPACEONUSE"]
    val get_SVG_MARKER_ORIENT_ANGLE: t -> float [@@js.get "SVG_MARKER_ORIENT_ANGLE"]
    val get_SVG_MARKER_ORIENT_AUTO: t -> float [@@js.get "SVG_MARKER_ORIENT_AUTO"]
    val get_SVG_MARKER_ORIENT_UNKNOWN: t -> float [@@js.get "SVG_MARKER_ORIENT_UNKNOWN"]
  end
  module AnonymousInterface448 : sig
    type t = anonymous_interface_448
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGMaskElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGMaskElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGMaskElement [@@js.apply_newable]
  end
  module AnonymousInterface449 : sig
    type t = anonymous_interface_449
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGMetadataElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGMetadataElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGMetadataElement [@@js.apply_newable]
  end
  module AnonymousInterface450 : sig
    type t = anonymous_interface_450
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGNumber [@@js.get "prototype"]
    val set_prototype: t -> _SVGNumber -> unit [@@js.set "prototype"]
    val create: t -> _SVGNumber [@@js.apply_newable]
  end
  module AnonymousInterface451 : sig
    type t = anonymous_interface_451
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGNumberList [@@js.get "prototype"]
    val set_prototype: t -> _SVGNumberList -> unit [@@js.set "prototype"]
    val create: t -> _SVGNumberList [@@js.apply_newable]
  end
  module AnonymousInterface452 : sig
    type t = anonymous_interface_452
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGPathElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGPathElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGPathElement [@@js.apply_newable]
  end
  module AnonymousInterface453 : sig
    type t = anonymous_interface_453
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGPathSeg [@@js.get "prototype"]
    val set_prototype: t -> _SVGPathSeg -> unit [@@js.set "prototype"]
    val create: t -> _SVGPathSeg [@@js.apply_newable]
    val get_PATHSEG_ARC_ABS: t -> float [@@js.get "PATHSEG_ARC_ABS"]
    val get_PATHSEG_ARC_REL: t -> float [@@js.get "PATHSEG_ARC_REL"]
    val get_PATHSEG_CLOSEPATH: t -> float [@@js.get "PATHSEG_CLOSEPATH"]
    val get_PATHSEG_CURVETO_CUBIC_ABS: t -> float [@@js.get "PATHSEG_CURVETO_CUBIC_ABS"]
    val get_PATHSEG_CURVETO_CUBIC_REL: t -> float [@@js.get "PATHSEG_CURVETO_CUBIC_REL"]
    val get_PATHSEG_CURVETO_CUBIC_SMOOTH_ABS: t -> float [@@js.get "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS"]
    val get_PATHSEG_CURVETO_CUBIC_SMOOTH_REL: t -> float [@@js.get "PATHSEG_CURVETO_CUBIC_SMOOTH_REL"]
    val get_PATHSEG_CURVETO_QUADRATIC_ABS: t -> float [@@js.get "PATHSEG_CURVETO_QUADRATIC_ABS"]
    val get_PATHSEG_CURVETO_QUADRATIC_REL: t -> float [@@js.get "PATHSEG_CURVETO_QUADRATIC_REL"]
    val get_PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS: t -> float [@@js.get "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS"]
    val get_PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL: t -> float [@@js.get "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL"]
    val get_PATHSEG_LINETO_ABS: t -> float [@@js.get "PATHSEG_LINETO_ABS"]
    val get_PATHSEG_LINETO_HORIZONTAL_ABS: t -> float [@@js.get "PATHSEG_LINETO_HORIZONTAL_ABS"]
    val get_PATHSEG_LINETO_HORIZONTAL_REL: t -> float [@@js.get "PATHSEG_LINETO_HORIZONTAL_REL"]
    val get_PATHSEG_LINETO_REL: t -> float [@@js.get "PATHSEG_LINETO_REL"]
    val get_PATHSEG_LINETO_VERTICAL_ABS: t -> float [@@js.get "PATHSEG_LINETO_VERTICAL_ABS"]
    val get_PATHSEG_LINETO_VERTICAL_REL: t -> float [@@js.get "PATHSEG_LINETO_VERTICAL_REL"]
    val get_PATHSEG_MOVETO_ABS: t -> float [@@js.get "PATHSEG_MOVETO_ABS"]
    val get_PATHSEG_MOVETO_REL: t -> float [@@js.get "PATHSEG_MOVETO_REL"]
    val get_PATHSEG_UNKNOWN: t -> float [@@js.get "PATHSEG_UNKNOWN"]
  end
  module AnonymousInterface454 : sig
    type t = anonymous_interface_454
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGPathSegArcAbs [@@js.get "prototype"]
    val set_prototype: t -> _SVGPathSegArcAbs -> unit [@@js.set "prototype"]
    val create: t -> _SVGPathSegArcAbs [@@js.apply_newable]
  end
  module AnonymousInterface455 : sig
    type t = anonymous_interface_455
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGPathSegArcRel [@@js.get "prototype"]
    val set_prototype: t -> _SVGPathSegArcRel -> unit [@@js.set "prototype"]
    val create: t -> _SVGPathSegArcRel [@@js.apply_newable]
  end
  module AnonymousInterface456 : sig
    type t = anonymous_interface_456
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGPathSegClosePath [@@js.get "prototype"]
    val set_prototype: t -> _SVGPathSegClosePath -> unit [@@js.set "prototype"]
    val create: t -> _SVGPathSegClosePath [@@js.apply_newable]
  end
  module AnonymousInterface457 : sig
    type t = anonymous_interface_457
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGPathSegCurvetoCubicAbs [@@js.get "prototype"]
    val set_prototype: t -> _SVGPathSegCurvetoCubicAbs -> unit [@@js.set "prototype"]
    val create: t -> _SVGPathSegCurvetoCubicAbs [@@js.apply_newable]
  end
  module AnonymousInterface458 : sig
    type t = anonymous_interface_458
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGPathSegCurvetoCubicRel [@@js.get "prototype"]
    val set_prototype: t -> _SVGPathSegCurvetoCubicRel -> unit [@@js.set "prototype"]
    val create: t -> _SVGPathSegCurvetoCubicRel [@@js.apply_newable]
  end
  module AnonymousInterface459 : sig
    type t = anonymous_interface_459
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGPathSegCurvetoCubicSmoothAbs [@@js.get "prototype"]
    val set_prototype: t -> _SVGPathSegCurvetoCubicSmoothAbs -> unit [@@js.set "prototype"]
    val create: t -> _SVGPathSegCurvetoCubicSmoothAbs [@@js.apply_newable]
  end
  module AnonymousInterface460 : sig
    type t = anonymous_interface_460
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGPathSegCurvetoCubicSmoothRel [@@js.get "prototype"]
    val set_prototype: t -> _SVGPathSegCurvetoCubicSmoothRel -> unit [@@js.set "prototype"]
    val create: t -> _SVGPathSegCurvetoCubicSmoothRel [@@js.apply_newable]
  end
  module AnonymousInterface461 : sig
    type t = anonymous_interface_461
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGPathSegCurvetoQuadraticAbs [@@js.get "prototype"]
    val set_prototype: t -> _SVGPathSegCurvetoQuadraticAbs -> unit [@@js.set "prototype"]
    val create: t -> _SVGPathSegCurvetoQuadraticAbs [@@js.apply_newable]
  end
  module AnonymousInterface462 : sig
    type t = anonymous_interface_462
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGPathSegCurvetoQuadraticRel [@@js.get "prototype"]
    val set_prototype: t -> _SVGPathSegCurvetoQuadraticRel -> unit [@@js.set "prototype"]
    val create: t -> _SVGPathSegCurvetoQuadraticRel [@@js.apply_newable]
  end
  module AnonymousInterface463 : sig
    type t = anonymous_interface_463
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGPathSegCurvetoQuadraticSmoothAbs [@@js.get "prototype"]
    val set_prototype: t -> _SVGPathSegCurvetoQuadraticSmoothAbs -> unit [@@js.set "prototype"]
    val create: t -> _SVGPathSegCurvetoQuadraticSmoothAbs [@@js.apply_newable]
  end
  module AnonymousInterface464 : sig
    type t = anonymous_interface_464
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGPathSegCurvetoQuadraticSmoothRel [@@js.get "prototype"]
    val set_prototype: t -> _SVGPathSegCurvetoQuadraticSmoothRel -> unit [@@js.set "prototype"]
    val create: t -> _SVGPathSegCurvetoQuadraticSmoothRel [@@js.apply_newable]
  end
  module AnonymousInterface465 : sig
    type t = anonymous_interface_465
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGPathSegLinetoAbs [@@js.get "prototype"]
    val set_prototype: t -> _SVGPathSegLinetoAbs -> unit [@@js.set "prototype"]
    val create: t -> _SVGPathSegLinetoAbs [@@js.apply_newable]
  end
  module AnonymousInterface466 : sig
    type t = anonymous_interface_466
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGPathSegLinetoHorizontalAbs [@@js.get "prototype"]
    val set_prototype: t -> _SVGPathSegLinetoHorizontalAbs -> unit [@@js.set "prototype"]
    val create: t -> _SVGPathSegLinetoHorizontalAbs [@@js.apply_newable]
  end
  module AnonymousInterface467 : sig
    type t = anonymous_interface_467
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGPathSegLinetoHorizontalRel [@@js.get "prototype"]
    val set_prototype: t -> _SVGPathSegLinetoHorizontalRel -> unit [@@js.set "prototype"]
    val create: t -> _SVGPathSegLinetoHorizontalRel [@@js.apply_newable]
  end
  module AnonymousInterface468 : sig
    type t = anonymous_interface_468
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGPathSegLinetoRel [@@js.get "prototype"]
    val set_prototype: t -> _SVGPathSegLinetoRel -> unit [@@js.set "prototype"]
    val create: t -> _SVGPathSegLinetoRel [@@js.apply_newable]
  end
  module AnonymousInterface469 : sig
    type t = anonymous_interface_469
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGPathSegLinetoVerticalAbs [@@js.get "prototype"]
    val set_prototype: t -> _SVGPathSegLinetoVerticalAbs -> unit [@@js.set "prototype"]
    val create: t -> _SVGPathSegLinetoVerticalAbs [@@js.apply_newable]
  end
  module AnonymousInterface470 : sig
    type t = anonymous_interface_470
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGPathSegLinetoVerticalRel [@@js.get "prototype"]
    val set_prototype: t -> _SVGPathSegLinetoVerticalRel -> unit [@@js.set "prototype"]
    val create: t -> _SVGPathSegLinetoVerticalRel [@@js.apply_newable]
  end
  module AnonymousInterface471 : sig
    type t = anonymous_interface_471
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGPathSegList [@@js.get "prototype"]
    val set_prototype: t -> _SVGPathSegList -> unit [@@js.set "prototype"]
    val create: t -> _SVGPathSegList [@@js.apply_newable]
  end
  module AnonymousInterface472 : sig
    type t = anonymous_interface_472
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGPathSegMovetoAbs [@@js.get "prototype"]
    val set_prototype: t -> _SVGPathSegMovetoAbs -> unit [@@js.set "prototype"]
    val create: t -> _SVGPathSegMovetoAbs [@@js.apply_newable]
  end
  module AnonymousInterface473 : sig
    type t = anonymous_interface_473
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGPathSegMovetoRel [@@js.get "prototype"]
    val set_prototype: t -> _SVGPathSegMovetoRel -> unit [@@js.set "prototype"]
    val create: t -> _SVGPathSegMovetoRel [@@js.apply_newable]
  end
  module AnonymousInterface474 : sig
    type t = anonymous_interface_474
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGPatternElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGPatternElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGPatternElement [@@js.apply_newable]
  end
  module AnonymousInterface475 : sig
    type t = anonymous_interface_475
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGPointList [@@js.get "prototype"]
    val set_prototype: t -> _SVGPointList -> unit [@@js.set "prototype"]
    val create: t -> _SVGPointList [@@js.apply_newable]
  end
  module AnonymousInterface476 : sig
    type t = anonymous_interface_476
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGPolygonElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGPolygonElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGPolygonElement [@@js.apply_newable]
  end
  module AnonymousInterface477 : sig
    type t = anonymous_interface_477
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGPolylineElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGPolylineElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGPolylineElement [@@js.apply_newable]
  end
  module AnonymousInterface478 : sig
    type t = anonymous_interface_478
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGPreserveAspectRatio [@@js.get "prototype"]
    val set_prototype: t -> _SVGPreserveAspectRatio -> unit [@@js.set "prototype"]
    val create: t -> _SVGPreserveAspectRatio [@@js.apply_newable]
    val get_SVG_MEETORSLICE_MEET: t -> float [@@js.get "SVG_MEETORSLICE_MEET"]
    val get_SVG_MEETORSLICE_SLICE: t -> float [@@js.get "SVG_MEETORSLICE_SLICE"]
    val get_SVG_MEETORSLICE_UNKNOWN: t -> float [@@js.get "SVG_MEETORSLICE_UNKNOWN"]
    val get_SVG_PRESERVEASPECTRATIO_NONE: t -> float [@@js.get "SVG_PRESERVEASPECTRATIO_NONE"]
    val get_SVG_PRESERVEASPECTRATIO_UNKNOWN: t -> float [@@js.get "SVG_PRESERVEASPECTRATIO_UNKNOWN"]
    val get_SVG_PRESERVEASPECTRATIO_XMAXYMAX: t -> float [@@js.get "SVG_PRESERVEASPECTRATIO_XMAXYMAX"]
    val get_SVG_PRESERVEASPECTRATIO_XMAXYMID: t -> float [@@js.get "SVG_PRESERVEASPECTRATIO_XMAXYMID"]
    val get_SVG_PRESERVEASPECTRATIO_XMAXYMIN: t -> float [@@js.get "SVG_PRESERVEASPECTRATIO_XMAXYMIN"]
    val get_SVG_PRESERVEASPECTRATIO_XMIDYMAX: t -> float [@@js.get "SVG_PRESERVEASPECTRATIO_XMIDYMAX"]
    val get_SVG_PRESERVEASPECTRATIO_XMIDYMID: t -> float [@@js.get "SVG_PRESERVEASPECTRATIO_XMIDYMID"]
    val get_SVG_PRESERVEASPECTRATIO_XMIDYMIN: t -> float [@@js.get "SVG_PRESERVEASPECTRATIO_XMIDYMIN"]
    val get_SVG_PRESERVEASPECTRATIO_XMINYMAX: t -> float [@@js.get "SVG_PRESERVEASPECTRATIO_XMINYMAX"]
    val get_SVG_PRESERVEASPECTRATIO_XMINYMID: t -> float [@@js.get "SVG_PRESERVEASPECTRATIO_XMINYMID"]
    val get_SVG_PRESERVEASPECTRATIO_XMINYMIN: t -> float [@@js.get "SVG_PRESERVEASPECTRATIO_XMINYMIN"]
  end
  module AnonymousInterface479 : sig
    type t = anonymous_interface_479
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGRadialGradientElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGRadialGradientElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGRadialGradientElement [@@js.apply_newable]
  end
  module AnonymousInterface480 : sig
    type t = anonymous_interface_480
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGRectElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGRectElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGRectElement [@@js.apply_newable]
  end
  module AnonymousInterface481 : sig
    type t = anonymous_interface_481
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGSVGElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGSVGElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGSVGElement [@@js.apply_newable]
    val get_SVG_ZOOMANDPAN_DISABLE: t -> float [@@js.get "SVG_ZOOMANDPAN_DISABLE"]
    val get_SVG_ZOOMANDPAN_MAGNIFY: t -> float [@@js.get "SVG_ZOOMANDPAN_MAGNIFY"]
    val get_SVG_ZOOMANDPAN_UNKNOWN: t -> float [@@js.get "SVG_ZOOMANDPAN_UNKNOWN"]
  end
  module AnonymousInterface482 : sig
    type t = anonymous_interface_482
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGScriptElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGScriptElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGScriptElement [@@js.apply_newable]
  end
  module AnonymousInterface483 : sig
    type t = anonymous_interface_483
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGStopElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGStopElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGStopElement [@@js.apply_newable]
  end
  module AnonymousInterface484 : sig
    type t = anonymous_interface_484
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGStringList [@@js.get "prototype"]
    val set_prototype: t -> _SVGStringList -> unit [@@js.set "prototype"]
    val create: t -> _SVGStringList [@@js.apply_newable]
  end
  module AnonymousInterface485 : sig
    type t = anonymous_interface_485
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGStyleElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGStyleElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGStyleElement [@@js.apply_newable]
  end
  module AnonymousInterface486 : sig
    type t = anonymous_interface_486
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGSwitchElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGSwitchElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGSwitchElement [@@js.apply_newable]
  end
  module AnonymousInterface487 : sig
    type t = anonymous_interface_487
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGSymbolElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGSymbolElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGSymbolElement [@@js.apply_newable]
  end
  module AnonymousInterface488 : sig
    type t = anonymous_interface_488
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGTSpanElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGTSpanElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGTSpanElement [@@js.apply_newable]
  end
  module AnonymousInterface489 : sig
    type t = anonymous_interface_489
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGTextContentElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGTextContentElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGTextContentElement [@@js.apply_newable]
    val get_LENGTHADJUST_SPACING: t -> float [@@js.get "LENGTHADJUST_SPACING"]
    val get_LENGTHADJUST_SPACINGANDGLYPHS: t -> float [@@js.get "LENGTHADJUST_SPACINGANDGLYPHS"]
    val get_LENGTHADJUST_UNKNOWN: t -> float [@@js.get "LENGTHADJUST_UNKNOWN"]
  end
  module AnonymousInterface490 : sig
    type t = anonymous_interface_490
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGTextElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGTextElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGTextElement [@@js.apply_newable]
  end
  module AnonymousInterface491 : sig
    type t = anonymous_interface_491
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGTextPathElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGTextPathElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGTextPathElement [@@js.apply_newable]
    val get_TEXTPATH_METHODTYPE_ALIGN: t -> float [@@js.get "TEXTPATH_METHODTYPE_ALIGN"]
    val get_TEXTPATH_METHODTYPE_STRETCH: t -> float [@@js.get "TEXTPATH_METHODTYPE_STRETCH"]
    val get_TEXTPATH_METHODTYPE_UNKNOWN: t -> float [@@js.get "TEXTPATH_METHODTYPE_UNKNOWN"]
    val get_TEXTPATH_SPACINGTYPE_AUTO: t -> float [@@js.get "TEXTPATH_SPACINGTYPE_AUTO"]
    val get_TEXTPATH_SPACINGTYPE_EXACT: t -> float [@@js.get "TEXTPATH_SPACINGTYPE_EXACT"]
    val get_TEXTPATH_SPACINGTYPE_UNKNOWN: t -> float [@@js.get "TEXTPATH_SPACINGTYPE_UNKNOWN"]
  end
  module AnonymousInterface492 : sig
    type t = anonymous_interface_492
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGTextPositioningElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGTextPositioningElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGTextPositioningElement [@@js.apply_newable]
  end
  module AnonymousInterface493 : sig
    type t = anonymous_interface_493
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGTitleElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGTitleElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGTitleElement [@@js.apply_newable]
  end
  module AnonymousInterface494 : sig
    type t = anonymous_interface_494
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGTransform [@@js.get "prototype"]
    val set_prototype: t -> _SVGTransform -> unit [@@js.set "prototype"]
    val create: t -> _SVGTransform [@@js.apply_newable]
    val get_SVG_TRANSFORM_MATRIX: t -> float [@@js.get "SVG_TRANSFORM_MATRIX"]
    val get_SVG_TRANSFORM_ROTATE: t -> float [@@js.get "SVG_TRANSFORM_ROTATE"]
    val get_SVG_TRANSFORM_SCALE: t -> float [@@js.get "SVG_TRANSFORM_SCALE"]
    val get_SVG_TRANSFORM_SKEWX: t -> float [@@js.get "SVG_TRANSFORM_SKEWX"]
    val get_SVG_TRANSFORM_SKEWY: t -> float [@@js.get "SVG_TRANSFORM_SKEWY"]
    val get_SVG_TRANSFORM_TRANSLATE: t -> float [@@js.get "SVG_TRANSFORM_TRANSLATE"]
    val get_SVG_TRANSFORM_UNKNOWN: t -> float [@@js.get "SVG_TRANSFORM_UNKNOWN"]
  end
  module AnonymousInterface495 : sig
    type t = anonymous_interface_495
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGTransformList [@@js.get "prototype"]
    val set_prototype: t -> _SVGTransformList -> unit [@@js.set "prototype"]
    val create: t -> _SVGTransformList [@@js.apply_newable]
  end
  module AnonymousInterface496 : sig
    type t = anonymous_interface_496
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGUnitTypes [@@js.get "prototype"]
    val set_prototype: t -> _SVGUnitTypes -> unit [@@js.set "prototype"]
    val create: t -> _SVGUnitTypes [@@js.apply_newable]
    val get_SVG_UNIT_TYPE_OBJECTBOUNDINGBOX: t -> float [@@js.get "SVG_UNIT_TYPE_OBJECTBOUNDINGBOX"]
    val get_SVG_UNIT_TYPE_UNKNOWN: t -> float [@@js.get "SVG_UNIT_TYPE_UNKNOWN"]
    val get_SVG_UNIT_TYPE_USERSPACEONUSE: t -> float [@@js.get "SVG_UNIT_TYPE_USERSPACEONUSE"]
  end
  module AnonymousInterface497 : sig
    type t = anonymous_interface_497
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGUseElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGUseElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGUseElement [@@js.apply_newable]
  end
  module AnonymousInterface498 : sig
    type t = anonymous_interface_498
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGViewElement [@@js.get "prototype"]
    val set_prototype: t -> _SVGViewElement -> unit [@@js.set "prototype"]
    val create: t -> _SVGViewElement [@@js.apply_newable]
    val get_SVG_ZOOMANDPAN_DISABLE: t -> float [@@js.get "SVG_ZOOMANDPAN_DISABLE"]
    val get_SVG_ZOOMANDPAN_MAGNIFY: t -> float [@@js.get "SVG_ZOOMANDPAN_MAGNIFY"]
    val get_SVG_ZOOMANDPAN_UNKNOWN: t -> float [@@js.get "SVG_ZOOMANDPAN_UNKNOWN"]
  end
  module AnonymousInterface499 : sig
    type t = anonymous_interface_499
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SVGZoomEvent [@@js.get "prototype"]
    val set_prototype: t -> _SVGZoomEvent -> unit [@@js.set "prototype"]
    val create: t -> _SVGZoomEvent [@@js.apply_newable]
  end
  module AnonymousInterface500 : sig
    type t = anonymous_interface_500
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _ScopedCredential [@@js.get "prototype"]
    val set_prototype: t -> _ScopedCredential -> unit [@@js.set "prototype"]
    val create: t -> _ScopedCredential [@@js.apply_newable]
  end
  module AnonymousInterface501 : sig
    type t = anonymous_interface_501
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _ScopedCredentialInfo [@@js.get "prototype"]
    val set_prototype: t -> _ScopedCredentialInfo -> unit [@@js.set "prototype"]
    val create: t -> _ScopedCredentialInfo [@@js.apply_newable]
  end
  module AnonymousInterface502 : sig
    type t = anonymous_interface_502
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _Screen [@@js.get "prototype"]
    val set_prototype: t -> _Screen -> unit [@@js.set "prototype"]
    val create: t -> _Screen [@@js.apply_newable]
  end
  module AnonymousInterface503 : sig
    type t = anonymous_interface_503
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _ScreenOrientation [@@js.get "prototype"]
    val set_prototype: t -> _ScreenOrientation -> unit [@@js.set "prototype"]
    val create: t -> _ScreenOrientation [@@js.apply_newable]
  end
  module AnonymousInterface504 : sig
    type t = anonymous_interface_504
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _ScriptProcessorNode [@@js.get "prototype"]
    val set_prototype: t -> _ScriptProcessorNode -> unit [@@js.set "prototype"]
    val create: t -> _ScriptProcessorNode [@@js.apply_newable]
  end
  module AnonymousInterface505 : sig
    type t = anonymous_interface_505
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SecurityPolicyViolationEvent [@@js.get "prototype"]
    val set_prototype: t -> _SecurityPolicyViolationEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> ?eventInitDict:_SecurityPolicyViolationEventInit -> unit -> _SecurityPolicyViolationEvent [@@js.apply_newable]
  end
  module AnonymousInterface506 : sig
    type t = anonymous_interface_506
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _Selection [@@js.get "prototype"]
    val set_prototype: t -> _Selection -> unit [@@js.set "prototype"]
    val create: t -> _Selection [@@js.apply_newable]
    val toString: t -> string [@@js.call "toString"]
  end
  module AnonymousInterface507 : sig
    type t = anonymous_interface_507
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _ServiceWorker [@@js.get "prototype"]
    val set_prototype: t -> _ServiceWorker -> unit [@@js.set "prototype"]
    val create: t -> _ServiceWorker [@@js.apply_newable]
  end
  module AnonymousInterface508 : sig
    type t = anonymous_interface_508
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _ServiceWorkerContainer [@@js.get "prototype"]
    val set_prototype: t -> _ServiceWorkerContainer -> unit [@@js.set "prototype"]
    val create: t -> _ServiceWorkerContainer [@@js.apply_newable]
  end
  module AnonymousInterface509 : sig
    type t = anonymous_interface_509
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _ServiceWorkerMessageEvent [@@js.get "prototype"]
    val set_prototype: t -> _ServiceWorkerMessageEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> ?eventInitDict:_ServiceWorkerMessageEventInit -> unit -> _ServiceWorkerMessageEvent [@@js.apply_newable]
  end
  module AnonymousInterface510 : sig
    type t = anonymous_interface_510
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _ServiceWorkerRegistration [@@js.get "prototype"]
    val set_prototype: t -> _ServiceWorkerRegistration -> unit [@@js.set "prototype"]
    val create: t -> _ServiceWorkerRegistration [@@js.apply_newable]
  end
  module AnonymousInterface511 : sig
    type t = anonymous_interface_511
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _ShadowRoot [@@js.get "prototype"]
    val set_prototype: t -> _ShadowRoot -> unit [@@js.set "prototype"]
    val create: t -> _ShadowRoot [@@js.apply_newable]
  end
  module AnonymousInterface512 : sig
    type t = anonymous_interface_512
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SourceBuffer [@@js.get "prototype"]
    val set_prototype: t -> _SourceBuffer -> unit [@@js.set "prototype"]
    val create: t -> _SourceBuffer [@@js.apply_newable]
  end
  module AnonymousInterface513 : sig
    type t = anonymous_interface_513
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SourceBufferList [@@js.get "prototype"]
    val set_prototype: t -> _SourceBufferList -> unit [@@js.set "prototype"]
    val create: t -> _SourceBufferList [@@js.apply_newable]
  end
  module AnonymousInterface514 : sig
    type t = anonymous_interface_514
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SpeechGrammar [@@js.get "prototype"]
    val set_prototype: t -> _SpeechGrammar -> unit [@@js.set "prototype"]
    val create: t -> _SpeechGrammar [@@js.apply_newable]
  end
  module AnonymousInterface515 : sig
    type t = anonymous_interface_515
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SpeechGrammarList [@@js.get "prototype"]
    val set_prototype: t -> _SpeechGrammarList -> unit [@@js.set "prototype"]
    val create: t -> _SpeechGrammarList [@@js.apply_newable]
  end
  module AnonymousInterface516 : sig
    type t = anonymous_interface_516
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SpeechRecognition [@@js.get "prototype"]
    val set_prototype: t -> _SpeechRecognition -> unit [@@js.set "prototype"]
    val create: t -> _SpeechRecognition [@@js.apply_newable]
  end
  module AnonymousInterface517 : sig
    type t = anonymous_interface_517
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SpeechRecognitionAlternative [@@js.get "prototype"]
    val set_prototype: t -> _SpeechRecognitionAlternative -> unit [@@js.set "prototype"]
    val create: t -> _SpeechRecognitionAlternative [@@js.apply_newable]
  end
  module AnonymousInterface518 : sig
    type t = anonymous_interface_518
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SpeechRecognitionEvent [@@js.get "prototype"]
    val set_prototype: t -> _SpeechRecognitionEvent -> unit [@@js.set "prototype"]
    val create: t -> _SpeechRecognitionEvent [@@js.apply_newable]
  end
  module AnonymousInterface519 : sig
    type t = anonymous_interface_519
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SpeechRecognitionResult [@@js.get "prototype"]
    val set_prototype: t -> _SpeechRecognitionResult -> unit [@@js.set "prototype"]
    val create: t -> _SpeechRecognitionResult [@@js.apply_newable]
  end
  module AnonymousInterface520 : sig
    type t = anonymous_interface_520
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SpeechRecognitionResultList [@@js.get "prototype"]
    val set_prototype: t -> _SpeechRecognitionResultList -> unit [@@js.set "prototype"]
    val create: t -> _SpeechRecognitionResultList [@@js.apply_newable]
  end
  module AnonymousInterface521 : sig
    type t = anonymous_interface_521
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SpeechSynthesis [@@js.get "prototype"]
    val set_prototype: t -> _SpeechSynthesis -> unit [@@js.set "prototype"]
    val create: t -> _SpeechSynthesis [@@js.apply_newable]
  end
  module AnonymousInterface522 : sig
    type t = anonymous_interface_522
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SpeechSynthesisErrorEvent [@@js.get "prototype"]
    val set_prototype: t -> _SpeechSynthesisErrorEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> eventInitDict:_SpeechSynthesisErrorEventInit -> _SpeechSynthesisErrorEvent [@@js.apply_newable]
  end
  module AnonymousInterface523 : sig
    type t = anonymous_interface_523
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SpeechSynthesisEvent [@@js.get "prototype"]
    val set_prototype: t -> _SpeechSynthesisEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> eventInitDict:_SpeechSynthesisEventInit -> _SpeechSynthesisEvent [@@js.apply_newable]
  end
  module AnonymousInterface524 : sig
    type t = anonymous_interface_524
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SpeechSynthesisUtterance [@@js.get "prototype"]
    val set_prototype: t -> _SpeechSynthesisUtterance -> unit [@@js.set "prototype"]
    val create: t -> ?text:string -> unit -> _SpeechSynthesisUtterance [@@js.apply_newable]
  end
  module AnonymousInterface525 : sig
    type t = anonymous_interface_525
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SpeechSynthesisVoice [@@js.get "prototype"]
    val set_prototype: t -> _SpeechSynthesisVoice -> unit [@@js.set "prototype"]
    val create: t -> _SpeechSynthesisVoice [@@js.apply_newable]
  end
  module AnonymousInterface526 : sig
    type t = anonymous_interface_526
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _StaticRange [@@js.get "prototype"]
    val set_prototype: t -> _StaticRange -> unit [@@js.set "prototype"]
    val create: t -> init:_StaticRangeInit -> _StaticRange [@@js.apply_newable]
  end
  module AnonymousInterface527 : sig
    type t = anonymous_interface_527
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _StereoPannerNode [@@js.get "prototype"]
    val set_prototype: t -> _StereoPannerNode -> unit [@@js.set "prototype"]
    val create: t -> context:_BaseAudioContext -> ?options:_StereoPannerOptions -> unit -> _StereoPannerNode [@@js.apply_newable]
  end
  module AnonymousInterface528 : sig
    type t = anonymous_interface_528
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _Storage [@@js.get "prototype"]
    val set_prototype: t -> _Storage -> unit [@@js.set "prototype"]
    val create: t -> _Storage [@@js.apply_newable]
  end
  module AnonymousInterface529 : sig
    type t = anonymous_interface_529
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _StorageEvent [@@js.get "prototype"]
    val set_prototype: t -> _StorageEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> ?eventInitDict:_StorageEventInit -> unit -> _StorageEvent [@@js.apply_newable]
  end
  module AnonymousInterface530 : sig
    type t = anonymous_interface_530
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _StorageManager [@@js.get "prototype"]
    val set_prototype: t -> _StorageManager -> unit [@@js.set "prototype"]
    val create: t -> _StorageManager [@@js.apply_newable]
  end
  module AnonymousInterface531 : sig
    type t = anonymous_interface_531
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _StyleMedia [@@js.get "prototype"]
    val set_prototype: t -> _StyleMedia -> unit [@@js.set "prototype"]
    val create: t -> _StyleMedia [@@js.apply_newable]
  end
  module AnonymousInterface532 : sig
    type t = anonymous_interface_532
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _StyleSheet [@@js.get "prototype"]
    val set_prototype: t -> _StyleSheet -> unit [@@js.set "prototype"]
    val create: t -> _StyleSheet [@@js.apply_newable]
  end
  module AnonymousInterface533 : sig
    type t = anonymous_interface_533
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _StyleSheetList [@@js.get "prototype"]
    val set_prototype: t -> _StyleSheetList -> unit [@@js.set "prototype"]
    val create: t -> _StyleSheetList [@@js.apply_newable]
  end
  module AnonymousInterface534 : sig
    type t = anonymous_interface_534
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SubtleCrypto [@@js.get "prototype"]
    val set_prototype: t -> _SubtleCrypto -> unit [@@js.set "prototype"]
    val create: t -> _SubtleCrypto [@@js.apply_newable]
  end
  module AnonymousInterface535 : sig
    type t = anonymous_interface_535
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _SyncManager [@@js.get "prototype"]
    val set_prototype: t -> _SyncManager -> unit [@@js.set "prototype"]
    val create: t -> _SyncManager [@@js.apply_newable]
  end
  module AnonymousInterface536 : sig
    type t = anonymous_interface_536
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _WebAssembly_Table [@@js.get "prototype"]
    val set_prototype: t -> _WebAssembly_Table -> unit [@@js.set "prototype"]
    val create: t -> descriptor:_WebAssembly_TableDescriptor -> _WebAssembly_Table [@@js.apply_newable]
  end
  module AnonymousInterface537 : sig
    type t = anonymous_interface_537
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _Text [@@js.get "prototype"]
    val set_prototype: t -> _Text -> unit [@@js.set "prototype"]
    val create: t -> ?data:string -> unit -> _Text [@@js.apply_newable]
  end
  module AnonymousInterface538 : sig
    type t = anonymous_interface_538
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _TextDecoder [@@js.get "prototype"]
    val set_prototype: t -> _TextDecoder -> unit [@@js.set "prototype"]
    val create: t -> ?label:string -> ?options:_TextDecoderOptions -> unit -> _TextDecoder [@@js.apply_newable]
  end
  module AnonymousInterface539 : sig
    type t = anonymous_interface_539
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _TextDecoderStream [@@js.get "prototype"]
    val set_prototype: t -> _TextDecoderStream -> unit [@@js.set "prototype"]
    val create: t -> ?label:string -> ?options:_TextDecoderOptions -> unit -> _TextDecoderStream [@@js.apply_newable]
  end
  module AnonymousInterface540 : sig
    type t = anonymous_interface_540
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _TextEncoder [@@js.get "prototype"]
    val set_prototype: t -> _TextEncoder -> unit [@@js.set "prototype"]
    val create: t -> _TextEncoder [@@js.apply_newable]
  end
  module AnonymousInterface541 : sig
    type t = anonymous_interface_541
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _TextEncoderStream [@@js.get "prototype"]
    val set_prototype: t -> _TextEncoderStream -> unit [@@js.set "prototype"]
    val create: t -> _TextEncoderStream [@@js.apply_newable]
  end
  module AnonymousInterface542 : sig
    type t = anonymous_interface_542
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _TextEvent [@@js.get "prototype"]
    val set_prototype: t -> _TextEvent -> unit [@@js.set "prototype"]
    val create: t -> _TextEvent [@@js.apply_newable]
    val get_DOM_INPUT_METHOD_DROP: t -> float [@@js.get "DOM_INPUT_METHOD_DROP"]
    val get_DOM_INPUT_METHOD_HANDWRITING: t -> float [@@js.get "DOM_INPUT_METHOD_HANDWRITING"]
    val get_DOM_INPUT_METHOD_IME: t -> float [@@js.get "DOM_INPUT_METHOD_IME"]
    val get_DOM_INPUT_METHOD_KEYBOARD: t -> float [@@js.get "DOM_INPUT_METHOD_KEYBOARD"]
    val get_DOM_INPUT_METHOD_MULTIMODAL: t -> float [@@js.get "DOM_INPUT_METHOD_MULTIMODAL"]
    val get_DOM_INPUT_METHOD_OPTION: t -> float [@@js.get "DOM_INPUT_METHOD_OPTION"]
    val get_DOM_INPUT_METHOD_PASTE: t -> float [@@js.get "DOM_INPUT_METHOD_PASTE"]
    val get_DOM_INPUT_METHOD_SCRIPT: t -> float [@@js.get "DOM_INPUT_METHOD_SCRIPT"]
    val get_DOM_INPUT_METHOD_UNKNOWN: t -> float [@@js.get "DOM_INPUT_METHOD_UNKNOWN"]
    val get_DOM_INPUT_METHOD_VOICE: t -> float [@@js.get "DOM_INPUT_METHOD_VOICE"]
  end
  module AnonymousInterface543 : sig
    type t = anonymous_interface_543
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _TextMetrics [@@js.get "prototype"]
    val set_prototype: t -> _TextMetrics -> unit [@@js.set "prototype"]
    val create: t -> _TextMetrics [@@js.apply_newable]
  end
  module AnonymousInterface544 : sig
    type t = anonymous_interface_544
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _TextTrack [@@js.get "prototype"]
    val set_prototype: t -> _TextTrack -> unit [@@js.set "prototype"]
    val create: t -> _TextTrack [@@js.apply_newable]
    val get_DISABLED: t -> float [@@js.get "DISABLED"]
    val get_ERROR: t -> float [@@js.get "ERROR"]
    val get_HIDDEN: t -> float [@@js.get "HIDDEN"]
    val get_LOADED: t -> float [@@js.get "LOADED"]
    val get_LOADING: t -> float [@@js.get "LOADING"]
    val get_NONE: t -> float [@@js.get "NONE"]
    val get_SHOWING: t -> float [@@js.get "SHOWING"]
  end
  module AnonymousInterface545 : sig
    type t = anonymous_interface_545
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _TextTrackCue [@@js.get "prototype"]
    val set_prototype: t -> _TextTrackCue -> unit [@@js.set "prototype"]
    val create: t -> startTime:float -> endTime:float -> text:string -> _TextTrackCue [@@js.apply_newable]
  end
  module AnonymousInterface546 : sig
    type t = anonymous_interface_546
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _TextTrackCueList [@@js.get "prototype"]
    val set_prototype: t -> _TextTrackCueList -> unit [@@js.set "prototype"]
    val create: t -> _TextTrackCueList [@@js.apply_newable]
  end
  module AnonymousInterface547 : sig
    type t = anonymous_interface_547
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _TextTrackList [@@js.get "prototype"]
    val set_prototype: t -> _TextTrackList -> unit [@@js.set "prototype"]
    val create: t -> _TextTrackList [@@js.apply_newable]
  end
  module AnonymousInterface548 : sig
    type t = anonymous_interface_548
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _TimeRanges [@@js.get "prototype"]
    val set_prototype: t -> _TimeRanges -> unit [@@js.set "prototype"]
    val create: t -> _TimeRanges [@@js.apply_newable]
  end
  module AnonymousInterface549 : sig
    type t = anonymous_interface_549
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _Touch [@@js.get "prototype"]
    val set_prototype: t -> _Touch -> unit [@@js.set "prototype"]
    val create: t -> touchInitDict:_TouchInit -> _Touch [@@js.apply_newable]
  end
  module AnonymousInterface550 : sig
    type t = anonymous_interface_550
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _TouchEvent [@@js.get "prototype"]
    val set_prototype: t -> _TouchEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> ?eventInitDict:_TouchEventInit -> unit -> _TouchEvent [@@js.apply_newable]
  end
  module AnonymousInterface551 : sig
    type t = anonymous_interface_551
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _TouchList [@@js.get "prototype"]
    val set_prototype: t -> _TouchList -> unit [@@js.set "prototype"]
    val create: t -> _TouchList [@@js.apply_newable]
  end
  module AnonymousInterface552 : sig
    type t = anonymous_interface_552
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _TrackEvent [@@js.get "prototype"]
    val set_prototype: t -> _TrackEvent -> unit [@@js.set "prototype"]
    val create: t -> typeArg:string -> ?eventInitDict:_TrackEventInit -> unit -> _TrackEvent [@@js.apply_newable]
  end
  module AnonymousInterface553 : sig
    type t = anonymous_interface_553
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> (any, any) _TransformStream [@@js.get "prototype"]
    val set_prototype: t -> (any, any) _TransformStream -> unit [@@js.set "prototype"]
    val create: t -> ?transformer:('I, 'O) _Transformer -> ?writableStrategy:'I _QueuingStrategy -> ?readableStrategy:'O _QueuingStrategy -> unit -> ('I, 'O) _TransformStream [@@js.apply_newable]
  end
  module AnonymousInterface554 : sig
    type t = anonymous_interface_554
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _TransitionEvent [@@js.get "prototype"]
    val set_prototype: t -> _TransitionEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> ?transitionEventInitDict:_TransitionEventInit -> unit -> _TransitionEvent [@@js.apply_newable]
  end
  module AnonymousInterface555 : sig
    type t = anonymous_interface_555
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _TreeWalker [@@js.get "prototype"]
    val set_prototype: t -> _TreeWalker -> unit [@@js.set "prototype"]
    val create: t -> _TreeWalker [@@js.apply_newable]
  end
  module AnonymousInterface556 : sig
    type t = anonymous_interface_556
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _UIEvent [@@js.get "prototype"]
    val set_prototype: t -> _UIEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> ?eventInitDict:_UIEventInit -> unit -> _UIEvent [@@js.apply_newable]
  end
  module AnonymousInterface557 : sig
    type t = anonymous_interface_557
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _URL [@@js.get "prototype"]
    val set_prototype: t -> _URL -> unit [@@js.set "prototype"]
    val create: t -> url:string -> ?base:_URL or_string -> unit -> _URL [@@js.apply_newable]
    val createObjectURL: t -> object_:any -> string [@@js.call "createObjectURL"]
    val revokeObjectURL: t -> url:string -> unit [@@js.call "revokeObjectURL"]
  end
  module AnonymousInterface558 : sig
    type t = anonymous_interface_558
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _URLSearchParams [@@js.get "prototype"]
    val set_prototype: t -> _URLSearchParams -> unit [@@js.set "prototype"]
    val create: t -> ?init:((_URLSearchParams, (string, string) Record.t_2) union2, string list) or_array or_string -> unit -> _URLSearchParams [@@js.apply_newable]
    val toString: t -> string [@@js.call "toString"]
  end
  module AnonymousInterface559 : sig
    type t = anonymous_interface_559
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _VRDisplay [@@js.get "prototype"]
    val set_prototype: t -> _VRDisplay -> unit [@@js.set "prototype"]
    val create: t -> _VRDisplay [@@js.apply_newable]
  end
  module AnonymousInterface560 : sig
    type t = anonymous_interface_560
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _VRDisplayCapabilities [@@js.get "prototype"]
    val set_prototype: t -> _VRDisplayCapabilities -> unit [@@js.set "prototype"]
    val create: t -> _VRDisplayCapabilities [@@js.apply_newable]
  end
  module AnonymousInterface561 : sig
    type t = anonymous_interface_561
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _VRDisplayEvent [@@js.get "prototype"]
    val set_prototype: t -> _VRDisplayEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> eventInitDict:_VRDisplayEventInit -> _VRDisplayEvent [@@js.apply_newable]
  end
  module AnonymousInterface562 : sig
    type t = anonymous_interface_562
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _VREyeParameters [@@js.get "prototype"]
    val set_prototype: t -> _VREyeParameters -> unit [@@js.set "prototype"]
    val create: t -> _VREyeParameters [@@js.apply_newable]
  end
  module AnonymousInterface563 : sig
    type t = anonymous_interface_563
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _VRFieldOfView [@@js.get "prototype"]
    val set_prototype: t -> _VRFieldOfView -> unit [@@js.set "prototype"]
    val create: t -> _VRFieldOfView [@@js.apply_newable]
  end
  module AnonymousInterface564 : sig
    type t = anonymous_interface_564
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _VRFrameData [@@js.get "prototype"]
    val set_prototype: t -> _VRFrameData -> unit [@@js.set "prototype"]
    val create: t -> _VRFrameData [@@js.apply_newable]
  end
  module AnonymousInterface565 : sig
    type t = anonymous_interface_565
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _VRPose [@@js.get "prototype"]
    val set_prototype: t -> _VRPose -> unit [@@js.set "prototype"]
    val create: t -> _VRPose [@@js.apply_newable]
  end
  module AnonymousInterface566 : sig
    type t = anonymous_interface_566
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _VTTCue [@@js.get "prototype"]
    val set_prototype: t -> _VTTCue -> unit [@@js.set "prototype"]
    val create: t -> startTime:float -> endTime:float -> text:string -> _VTTCue [@@js.apply_newable]
  end
  module AnonymousInterface567 : sig
    type t = anonymous_interface_567
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _VTTRegion [@@js.get "prototype"]
    val set_prototype: t -> _VTTRegion -> unit [@@js.set "prototype"]
    val create: t -> _VTTRegion [@@js.apply_newable]
  end
  module AnonymousInterface568 : sig
    type t = anonymous_interface_568
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _ValidityState [@@js.get "prototype"]
    val set_prototype: t -> _ValidityState -> unit [@@js.set "prototype"]
    val create: t -> _ValidityState [@@js.apply_newable]
  end
  module AnonymousInterface569 : sig
    type t = anonymous_interface_569
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _VideoPlaybackQuality [@@js.get "prototype"]
    val set_prototype: t -> _VideoPlaybackQuality -> unit [@@js.set "prototype"]
    val create: t -> _VideoPlaybackQuality [@@js.apply_newable]
  end
  module AnonymousInterface570 : sig
    type t = anonymous_interface_570
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _VideoTrack [@@js.get "prototype"]
    val set_prototype: t -> _VideoTrack -> unit [@@js.set "prototype"]
    val create: t -> _VideoTrack [@@js.apply_newable]
  end
  module AnonymousInterface571 : sig
    type t = anonymous_interface_571
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _VideoTrackList [@@js.get "prototype"]
    val set_prototype: t -> _VideoTrackList -> unit [@@js.set "prototype"]
    val create: t -> _VideoTrackList [@@js.apply_newable]
  end
  module AnonymousInterface572 : sig
    type t = anonymous_interface_572
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _WaveShaperNode [@@js.get "prototype"]
    val set_prototype: t -> _WaveShaperNode -> unit [@@js.set "prototype"]
    val create: t -> context:_BaseAudioContext -> ?options:_WaveShaperOptions -> unit -> _WaveShaperNode [@@js.apply_newable]
  end
  module AnonymousInterface573 : sig
    type t = anonymous_interface_573
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _WebAuthentication [@@js.get "prototype"]
    val set_prototype: t -> _WebAuthentication -> unit [@@js.set "prototype"]
    val create: t -> _WebAuthentication [@@js.apply_newable]
  end
  module AnonymousInterface574 : sig
    type t = anonymous_interface_574
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _WebAuthnAssertion [@@js.get "prototype"]
    val set_prototype: t -> _WebAuthnAssertion -> unit [@@js.set "prototype"]
    val create: t -> _WebAuthnAssertion [@@js.apply_newable]
  end
  module AnonymousInterface575 : sig
    type t = anonymous_interface_575
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _WebGL2RenderingContext [@@js.get "prototype"]
    val set_prototype: t -> _WebGL2RenderingContext -> unit [@@js.set "prototype"]
    val create: t -> _WebGL2RenderingContext [@@js.apply_newable]
    val get_ACTIVE_ATTRIBUTES: t -> _GLenum [@@js.get "ACTIVE_ATTRIBUTES"]
    val get_ACTIVE_TEXTURE: t -> _GLenum [@@js.get "ACTIVE_TEXTURE"]
    val get_ACTIVE_UNIFORMS: t -> _GLenum [@@js.get "ACTIVE_UNIFORMS"]
    val get_ALIASED_LINE_WIDTH_RANGE: t -> _GLenum [@@js.get "ALIASED_LINE_WIDTH_RANGE"]
    val get_ALIASED_POINT_SIZE_RANGE: t -> _GLenum [@@js.get "ALIASED_POINT_SIZE_RANGE"]
    val get_ALPHA: t -> _GLenum [@@js.get "ALPHA"]
    val get_ALPHA_BITS: t -> _GLenum [@@js.get "ALPHA_BITS"]
    val get_ALWAYS: t -> _GLenum [@@js.get "ALWAYS"]
    val get_ARRAY_BUFFER: t -> _GLenum [@@js.get "ARRAY_BUFFER"]
    val get_ARRAY_BUFFER_BINDING: t -> _GLenum [@@js.get "ARRAY_BUFFER_BINDING"]
    val get_ATTACHED_SHADERS: t -> _GLenum [@@js.get "ATTACHED_SHADERS"]
    val get_BACK: t -> _GLenum [@@js.get "BACK"]
    val get_BLEND: t -> _GLenum [@@js.get "BLEND"]
    val get_BLEND_COLOR: t -> _GLenum [@@js.get "BLEND_COLOR"]
    val get_BLEND_DST_ALPHA: t -> _GLenum [@@js.get "BLEND_DST_ALPHA"]
    val get_BLEND_DST_RGB: t -> _GLenum [@@js.get "BLEND_DST_RGB"]
    val get_BLEND_EQUATION: t -> _GLenum [@@js.get "BLEND_EQUATION"]
    val get_BLEND_EQUATION_ALPHA: t -> _GLenum [@@js.get "BLEND_EQUATION_ALPHA"]
    val get_BLEND_EQUATION_RGB: t -> _GLenum [@@js.get "BLEND_EQUATION_RGB"]
    val get_BLEND_SRC_ALPHA: t -> _GLenum [@@js.get "BLEND_SRC_ALPHA"]
    val get_BLEND_SRC_RGB: t -> _GLenum [@@js.get "BLEND_SRC_RGB"]
    val get_BLUE_BITS: t -> _GLenum [@@js.get "BLUE_BITS"]
    val get_BOOL: t -> _GLenum [@@js.get "BOOL"]
    val get_BOOL_VEC2: t -> _GLenum [@@js.get "BOOL_VEC2"]
    val get_BOOL_VEC3: t -> _GLenum [@@js.get "BOOL_VEC3"]
    val get_BOOL_VEC4: t -> _GLenum [@@js.get "BOOL_VEC4"]
    val get_BROWSER_DEFAULT_WEBGL: t -> _GLenum [@@js.get "BROWSER_DEFAULT_WEBGL"]
    val get_BUFFER_SIZE: t -> _GLenum [@@js.get "BUFFER_SIZE"]
    val get_BUFFER_USAGE: t -> _GLenum [@@js.get "BUFFER_USAGE"]
    val get_BYTE: t -> _GLenum [@@js.get "BYTE"]
    val get_CCW: t -> _GLenum [@@js.get "CCW"]
    val get_CLAMP_TO_EDGE: t -> _GLenum [@@js.get "CLAMP_TO_EDGE"]
    val get_COLOR_ATTACHMENT0: t -> _GLenum [@@js.get "COLOR_ATTACHMENT0"]
    val get_COLOR_BUFFER_BIT: t -> _GLenum [@@js.get "COLOR_BUFFER_BIT"]
    val get_COLOR_CLEAR_VALUE: t -> _GLenum [@@js.get "COLOR_CLEAR_VALUE"]
    val get_COLOR_WRITEMASK: t -> _GLenum [@@js.get "COLOR_WRITEMASK"]
    val get_COMPILE_STATUS: t -> _GLenum [@@js.get "COMPILE_STATUS"]
    val get_COMPRESSED_TEXTURE_FORMATS: t -> _GLenum [@@js.get "COMPRESSED_TEXTURE_FORMATS"]
    val get_CONSTANT_ALPHA: t -> _GLenum [@@js.get "CONSTANT_ALPHA"]
    val get_CONSTANT_COLOR: t -> _GLenum [@@js.get "CONSTANT_COLOR"]
    val get_CONTEXT_LOST_WEBGL: t -> _GLenum [@@js.get "CONTEXT_LOST_WEBGL"]
    val get_CULL_FACE: t -> _GLenum [@@js.get "CULL_FACE"]
    val get_CULL_FACE_MODE: t -> _GLenum [@@js.get "CULL_FACE_MODE"]
    val get_CURRENT_PROGRAM: t -> _GLenum [@@js.get "CURRENT_PROGRAM"]
    val get_CURRENT_VERTEX_ATTRIB: t -> _GLenum [@@js.get "CURRENT_VERTEX_ATTRIB"]
    val get_CW: t -> _GLenum [@@js.get "CW"]
    val get_DECR: t -> _GLenum [@@js.get "DECR"]
    val get_DECR_WRAP: t -> _GLenum [@@js.get "DECR_WRAP"]
    val get_DELETE_STATUS: t -> _GLenum [@@js.get "DELETE_STATUS"]
    val get_DEPTH_ATTACHMENT: t -> _GLenum [@@js.get "DEPTH_ATTACHMENT"]
    val get_DEPTH_BITS: t -> _GLenum [@@js.get "DEPTH_BITS"]
    val get_DEPTH_BUFFER_BIT: t -> _GLenum [@@js.get "DEPTH_BUFFER_BIT"]
    val get_DEPTH_CLEAR_VALUE: t -> _GLenum [@@js.get "DEPTH_CLEAR_VALUE"]
    val get_DEPTH_COMPONENT: t -> _GLenum [@@js.get "DEPTH_COMPONENT"]
    val get_DEPTH_COMPONENT16: t -> _GLenum [@@js.get "DEPTH_COMPONENT16"]
    val get_DEPTH_FUNC: t -> _GLenum [@@js.get "DEPTH_FUNC"]
    val get_DEPTH_RANGE: t -> _GLenum [@@js.get "DEPTH_RANGE"]
    val get_DEPTH_STENCIL: t -> _GLenum [@@js.get "DEPTH_STENCIL"]
    val get_DEPTH_STENCIL_ATTACHMENT: t -> _GLenum [@@js.get "DEPTH_STENCIL_ATTACHMENT"]
    val get_DEPTH_TEST: t -> _GLenum [@@js.get "DEPTH_TEST"]
    val get_DEPTH_WRITEMASK: t -> _GLenum [@@js.get "DEPTH_WRITEMASK"]
    val get_DITHER: t -> _GLenum [@@js.get "DITHER"]
    val get_DONT_CARE: t -> _GLenum [@@js.get "DONT_CARE"]
    val get_DST_ALPHA: t -> _GLenum [@@js.get "DST_ALPHA"]
    val get_DST_COLOR: t -> _GLenum [@@js.get "DST_COLOR"]
    val get_DYNAMIC_DRAW: t -> _GLenum [@@js.get "DYNAMIC_DRAW"]
    val get_ELEMENT_ARRAY_BUFFER: t -> _GLenum [@@js.get "ELEMENT_ARRAY_BUFFER"]
    val get_ELEMENT_ARRAY_BUFFER_BINDING: t -> _GLenum [@@js.get "ELEMENT_ARRAY_BUFFER_BINDING"]
    val get_EQUAL: t -> _GLenum [@@js.get "EQUAL"]
    val get_FASTEST: t -> _GLenum [@@js.get "FASTEST"]
    val get_FLOAT: t -> _GLenum [@@js.get "FLOAT"]
    val get_FLOAT_MAT2: t -> _GLenum [@@js.get "FLOAT_MAT2"]
    val get_FLOAT_MAT3: t -> _GLenum [@@js.get "FLOAT_MAT3"]
    val get_FLOAT_MAT4: t -> _GLenum [@@js.get "FLOAT_MAT4"]
    val get_FLOAT_VEC2: t -> _GLenum [@@js.get "FLOAT_VEC2"]
    val get_FLOAT_VEC3: t -> _GLenum [@@js.get "FLOAT_VEC3"]
    val get_FLOAT_VEC4: t -> _GLenum [@@js.get "FLOAT_VEC4"]
    val get_FRAGMENT_SHADER: t -> _GLenum [@@js.get "FRAGMENT_SHADER"]
    val get_FRAMEBUFFER: t -> _GLenum [@@js.get "FRAMEBUFFER"]
    val get_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: t -> _GLenum [@@js.get "FRAMEBUFFER_ATTACHMENT_OBJECT_NAME"]
    val get_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: t -> _GLenum [@@js.get "FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE"]
    val get_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: t -> _GLenum [@@js.get "FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE"]
    val get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: t -> _GLenum [@@js.get "FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL"]
    val get_FRAMEBUFFER_BINDING: t -> _GLenum [@@js.get "FRAMEBUFFER_BINDING"]
    val get_FRAMEBUFFER_COMPLETE: t -> _GLenum [@@js.get "FRAMEBUFFER_COMPLETE"]
    val get_FRAMEBUFFER_INCOMPLETE_ATTACHMENT: t -> _GLenum [@@js.get "FRAMEBUFFER_INCOMPLETE_ATTACHMENT"]
    val get_FRAMEBUFFER_INCOMPLETE_DIMENSIONS: t -> _GLenum [@@js.get "FRAMEBUFFER_INCOMPLETE_DIMENSIONS"]
    val get_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: t -> _GLenum [@@js.get "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"]
    val get_FRAMEBUFFER_UNSUPPORTED: t -> _GLenum [@@js.get "FRAMEBUFFER_UNSUPPORTED"]
    val get_FRONT: t -> _GLenum [@@js.get "FRONT"]
    val get_FRONT_AND_BACK: t -> _GLenum [@@js.get "FRONT_AND_BACK"]
    val get_FRONT_FACE: t -> _GLenum [@@js.get "FRONT_FACE"]
    val get_FUNC_ADD: t -> _GLenum [@@js.get "FUNC_ADD"]
    val get_FUNC_REVERSE_SUBTRACT: t -> _GLenum [@@js.get "FUNC_REVERSE_SUBTRACT"]
    val get_FUNC_SUBTRACT: t -> _GLenum [@@js.get "FUNC_SUBTRACT"]
    val get_GENERATE_MIPMAP_HINT: t -> _GLenum [@@js.get "GENERATE_MIPMAP_HINT"]
    val get_GEQUAL: t -> _GLenum [@@js.get "GEQUAL"]
    val get_GREATER: t -> _GLenum [@@js.get "GREATER"]
    val get_GREEN_BITS: t -> _GLenum [@@js.get "GREEN_BITS"]
    val get_HIGH_FLOAT: t -> _GLenum [@@js.get "HIGH_FLOAT"]
    val get_HIGH_INT: t -> _GLenum [@@js.get "HIGH_INT"]
    val get_IMPLEMENTATION_COLOR_READ_FORMAT: t -> _GLenum [@@js.get "IMPLEMENTATION_COLOR_READ_FORMAT"]
    val get_IMPLEMENTATION_COLOR_READ_TYPE: t -> _GLenum [@@js.get "IMPLEMENTATION_COLOR_READ_TYPE"]
    val get_INCR: t -> _GLenum [@@js.get "INCR"]
    val get_INCR_WRAP: t -> _GLenum [@@js.get "INCR_WRAP"]
    val get_INT: t -> _GLenum [@@js.get "INT"]
    val get_INT_VEC2: t -> _GLenum [@@js.get "INT_VEC2"]
    val get_INT_VEC3: t -> _GLenum [@@js.get "INT_VEC3"]
    val get_INT_VEC4: t -> _GLenum [@@js.get "INT_VEC4"]
    val get_INVALID_ENUM: t -> _GLenum [@@js.get "INVALID_ENUM"]
    val get_INVALID_FRAMEBUFFER_OPERATION: t -> _GLenum [@@js.get "INVALID_FRAMEBUFFER_OPERATION"]
    val get_INVALID_OPERATION: t -> _GLenum [@@js.get "INVALID_OPERATION"]
    val get_INVALID_VALUE: t -> _GLenum [@@js.get "INVALID_VALUE"]
    val get_INVERT: t -> _GLenum [@@js.get "INVERT"]
    val get_KEEP: t -> _GLenum [@@js.get "KEEP"]
    val get_LEQUAL: t -> _GLenum [@@js.get "LEQUAL"]
    val get_LESS: t -> _GLenum [@@js.get "LESS"]
    val get_LINEAR: t -> _GLenum [@@js.get "LINEAR"]
    val get_LINEAR_MIPMAP_LINEAR: t -> _GLenum [@@js.get "LINEAR_MIPMAP_LINEAR"]
    val get_LINEAR_MIPMAP_NEAREST: t -> _GLenum [@@js.get "LINEAR_MIPMAP_NEAREST"]
    val get_LINES: t -> _GLenum [@@js.get "LINES"]
    val get_LINE_LOOP: t -> _GLenum [@@js.get "LINE_LOOP"]
    val get_LINE_STRIP: t -> _GLenum [@@js.get "LINE_STRIP"]
    val get_LINE_WIDTH: t -> _GLenum [@@js.get "LINE_WIDTH"]
    val get_LINK_STATUS: t -> _GLenum [@@js.get "LINK_STATUS"]
    val get_LOW_FLOAT: t -> _GLenum [@@js.get "LOW_FLOAT"]
    val get_LOW_INT: t -> _GLenum [@@js.get "LOW_INT"]
    val get_LUMINANCE: t -> _GLenum [@@js.get "LUMINANCE"]
    val get_LUMINANCE_ALPHA: t -> _GLenum [@@js.get "LUMINANCE_ALPHA"]
    val get_MAX_COMBINED_TEXTURE_IMAGE_UNITS: t -> _GLenum [@@js.get "MAX_COMBINED_TEXTURE_IMAGE_UNITS"]
    val get_MAX_CUBE_MAP_TEXTURE_SIZE: t -> _GLenum [@@js.get "MAX_CUBE_MAP_TEXTURE_SIZE"]
    val get_MAX_FRAGMENT_UNIFORM_VECTORS: t -> _GLenum [@@js.get "MAX_FRAGMENT_UNIFORM_VECTORS"]
    val get_MAX_RENDERBUFFER_SIZE: t -> _GLenum [@@js.get "MAX_RENDERBUFFER_SIZE"]
    val get_MAX_TEXTURE_IMAGE_UNITS: t -> _GLenum [@@js.get "MAX_TEXTURE_IMAGE_UNITS"]
    val get_MAX_TEXTURE_SIZE: t -> _GLenum [@@js.get "MAX_TEXTURE_SIZE"]
    val get_MAX_VARYING_VECTORS: t -> _GLenum [@@js.get "MAX_VARYING_VECTORS"]
    val get_MAX_VERTEX_ATTRIBS: t -> _GLenum [@@js.get "MAX_VERTEX_ATTRIBS"]
    val get_MAX_VERTEX_TEXTURE_IMAGE_UNITS: t -> _GLenum [@@js.get "MAX_VERTEX_TEXTURE_IMAGE_UNITS"]
    val get_MAX_VERTEX_UNIFORM_VECTORS: t -> _GLenum [@@js.get "MAX_VERTEX_UNIFORM_VECTORS"]
    val get_MAX_VIEWPORT_DIMS: t -> _GLenum [@@js.get "MAX_VIEWPORT_DIMS"]
    val get_MEDIUM_FLOAT: t -> _GLenum [@@js.get "MEDIUM_FLOAT"]
    val get_MEDIUM_INT: t -> _GLenum [@@js.get "MEDIUM_INT"]
    val get_MIRRORED_REPEAT: t -> _GLenum [@@js.get "MIRRORED_REPEAT"]
    val get_NEAREST: t -> _GLenum [@@js.get "NEAREST"]
    val get_NEAREST_MIPMAP_LINEAR: t -> _GLenum [@@js.get "NEAREST_MIPMAP_LINEAR"]
    val get_NEAREST_MIPMAP_NEAREST: t -> _GLenum [@@js.get "NEAREST_MIPMAP_NEAREST"]
    val get_NEVER: t -> _GLenum [@@js.get "NEVER"]
    val get_NICEST: t -> _GLenum [@@js.get "NICEST"]
    val get_NONE: t -> _GLenum [@@js.get "NONE"]
    val get_NOTEQUAL: t -> _GLenum [@@js.get "NOTEQUAL"]
    val get_NO_ERROR: t -> _GLenum [@@js.get "NO_ERROR"]
    val get_ONE: t -> _GLenum [@@js.get "ONE"]
    val get_ONE_MINUS_CONSTANT_ALPHA: t -> _GLenum [@@js.get "ONE_MINUS_CONSTANT_ALPHA"]
    val get_ONE_MINUS_CONSTANT_COLOR: t -> _GLenum [@@js.get "ONE_MINUS_CONSTANT_COLOR"]
    val get_ONE_MINUS_DST_ALPHA: t -> _GLenum [@@js.get "ONE_MINUS_DST_ALPHA"]
    val get_ONE_MINUS_DST_COLOR: t -> _GLenum [@@js.get "ONE_MINUS_DST_COLOR"]
    val get_ONE_MINUS_SRC_ALPHA: t -> _GLenum [@@js.get "ONE_MINUS_SRC_ALPHA"]
    val get_ONE_MINUS_SRC_COLOR: t -> _GLenum [@@js.get "ONE_MINUS_SRC_COLOR"]
    val get_OUT_OF_MEMORY: t -> _GLenum [@@js.get "OUT_OF_MEMORY"]
    val get_PACK_ALIGNMENT: t -> _GLenum [@@js.get "PACK_ALIGNMENT"]
    val get_POINTS: t -> _GLenum [@@js.get "POINTS"]
    val get_POLYGON_OFFSET_FACTOR: t -> _GLenum [@@js.get "POLYGON_OFFSET_FACTOR"]
    val get_POLYGON_OFFSET_FILL: t -> _GLenum [@@js.get "POLYGON_OFFSET_FILL"]
    val get_POLYGON_OFFSET_UNITS: t -> _GLenum [@@js.get "POLYGON_OFFSET_UNITS"]
    val get_RED_BITS: t -> _GLenum [@@js.get "RED_BITS"]
    val get_RENDERBUFFER: t -> _GLenum [@@js.get "RENDERBUFFER"]
    val get_RENDERBUFFER_ALPHA_SIZE: t -> _GLenum [@@js.get "RENDERBUFFER_ALPHA_SIZE"]
    val get_RENDERBUFFER_BINDING: t -> _GLenum [@@js.get "RENDERBUFFER_BINDING"]
    val get_RENDERBUFFER_BLUE_SIZE: t -> _GLenum [@@js.get "RENDERBUFFER_BLUE_SIZE"]
    val get_RENDERBUFFER_DEPTH_SIZE: t -> _GLenum [@@js.get "RENDERBUFFER_DEPTH_SIZE"]
    val get_RENDERBUFFER_GREEN_SIZE: t -> _GLenum [@@js.get "RENDERBUFFER_GREEN_SIZE"]
    val get_RENDERBUFFER_HEIGHT: t -> _GLenum [@@js.get "RENDERBUFFER_HEIGHT"]
    val get_RENDERBUFFER_INTERNAL_FORMAT: t -> _GLenum [@@js.get "RENDERBUFFER_INTERNAL_FORMAT"]
    val get_RENDERBUFFER_RED_SIZE: t -> _GLenum [@@js.get "RENDERBUFFER_RED_SIZE"]
    val get_RENDERBUFFER_STENCIL_SIZE: t -> _GLenum [@@js.get "RENDERBUFFER_STENCIL_SIZE"]
    val get_RENDERBUFFER_WIDTH: t -> _GLenum [@@js.get "RENDERBUFFER_WIDTH"]
    val get_RENDERER: t -> _GLenum [@@js.get "RENDERER"]
    val get_REPEAT: t -> _GLenum [@@js.get "REPEAT"]
    val get_REPLACE: t -> _GLenum [@@js.get "REPLACE"]
    val get_RGB: t -> _GLenum [@@js.get "RGB"]
    val get_RGB565: t -> _GLenum [@@js.get "RGB565"]
    val get_RGB5_A1: t -> _GLenum [@@js.get "RGB5_A1"]
    val get_RGBA: t -> _GLenum [@@js.get "RGBA"]
    val get_RGBA4: t -> _GLenum [@@js.get "RGBA4"]
    val get_SAMPLER_2D: t -> _GLenum [@@js.get "SAMPLER_2D"]
    val get_SAMPLER_CUBE: t -> _GLenum [@@js.get "SAMPLER_CUBE"]
    val get_SAMPLES: t -> _GLenum [@@js.get "SAMPLES"]
    val get_SAMPLE_ALPHA_TO_COVERAGE: t -> _GLenum [@@js.get "SAMPLE_ALPHA_TO_COVERAGE"]
    val get_SAMPLE_BUFFERS: t -> _GLenum [@@js.get "SAMPLE_BUFFERS"]
    val get_SAMPLE_COVERAGE: t -> _GLenum [@@js.get "SAMPLE_COVERAGE"]
    val get_SAMPLE_COVERAGE_INVERT: t -> _GLenum [@@js.get "SAMPLE_COVERAGE_INVERT"]
    val get_SAMPLE_COVERAGE_VALUE: t -> _GLenum [@@js.get "SAMPLE_COVERAGE_VALUE"]
    val get_SCISSOR_BOX: t -> _GLenum [@@js.get "SCISSOR_BOX"]
    val get_SCISSOR_TEST: t -> _GLenum [@@js.get "SCISSOR_TEST"]
    val get_SHADER_TYPE: t -> _GLenum [@@js.get "SHADER_TYPE"]
    val get_SHADING_LANGUAGE_VERSION: t -> _GLenum [@@js.get "SHADING_LANGUAGE_VERSION"]
    val get_SHORT: t -> _GLenum [@@js.get "SHORT"]
    val get_SRC_ALPHA: t -> _GLenum [@@js.get "SRC_ALPHA"]
    val get_SRC_ALPHA_SATURATE: t -> _GLenum [@@js.get "SRC_ALPHA_SATURATE"]
    val get_SRC_COLOR: t -> _GLenum [@@js.get "SRC_COLOR"]
    val get_STATIC_DRAW: t -> _GLenum [@@js.get "STATIC_DRAW"]
    val get_STENCIL_ATTACHMENT: t -> _GLenum [@@js.get "STENCIL_ATTACHMENT"]
    val get_STENCIL_BACK_FAIL: t -> _GLenum [@@js.get "STENCIL_BACK_FAIL"]
    val get_STENCIL_BACK_FUNC: t -> _GLenum [@@js.get "STENCIL_BACK_FUNC"]
    val get_STENCIL_BACK_PASS_DEPTH_FAIL: t -> _GLenum [@@js.get "STENCIL_BACK_PASS_DEPTH_FAIL"]
    val get_STENCIL_BACK_PASS_DEPTH_PASS: t -> _GLenum [@@js.get "STENCIL_BACK_PASS_DEPTH_PASS"]
    val get_STENCIL_BACK_REF: t -> _GLenum [@@js.get "STENCIL_BACK_REF"]
    val get_STENCIL_BACK_VALUE_MASK: t -> _GLenum [@@js.get "STENCIL_BACK_VALUE_MASK"]
    val get_STENCIL_BACK_WRITEMASK: t -> _GLenum [@@js.get "STENCIL_BACK_WRITEMASK"]
    val get_STENCIL_BITS: t -> _GLenum [@@js.get "STENCIL_BITS"]
    val get_STENCIL_BUFFER_BIT: t -> _GLenum [@@js.get "STENCIL_BUFFER_BIT"]
    val get_STENCIL_CLEAR_VALUE: t -> _GLenum [@@js.get "STENCIL_CLEAR_VALUE"]
    val get_STENCIL_FAIL: t -> _GLenum [@@js.get "STENCIL_FAIL"]
    val get_STENCIL_FUNC: t -> _GLenum [@@js.get "STENCIL_FUNC"]
    val get_STENCIL_INDEX8: t -> _GLenum [@@js.get "STENCIL_INDEX8"]
    val get_STENCIL_PASS_DEPTH_FAIL: t -> _GLenum [@@js.get "STENCIL_PASS_DEPTH_FAIL"]
    val get_STENCIL_PASS_DEPTH_PASS: t -> _GLenum [@@js.get "STENCIL_PASS_DEPTH_PASS"]
    val get_STENCIL_REF: t -> _GLenum [@@js.get "STENCIL_REF"]
    val get_STENCIL_TEST: t -> _GLenum [@@js.get "STENCIL_TEST"]
    val get_STENCIL_VALUE_MASK: t -> _GLenum [@@js.get "STENCIL_VALUE_MASK"]
    val get_STENCIL_WRITEMASK: t -> _GLenum [@@js.get "STENCIL_WRITEMASK"]
    val get_STREAM_DRAW: t -> _GLenum [@@js.get "STREAM_DRAW"]
    val get_SUBPIXEL_BITS: t -> _GLenum [@@js.get "SUBPIXEL_BITS"]
    val get_TEXTURE: t -> _GLenum [@@js.get "TEXTURE"]
    val get_TEXTURE0: t -> _GLenum [@@js.get "TEXTURE0"]
    val get_TEXTURE1: t -> _GLenum [@@js.get "TEXTURE1"]
    val get_TEXTURE10: t -> _GLenum [@@js.get "TEXTURE10"]
    val get_TEXTURE11: t -> _GLenum [@@js.get "TEXTURE11"]
    val get_TEXTURE12: t -> _GLenum [@@js.get "TEXTURE12"]
    val get_TEXTURE13: t -> _GLenum [@@js.get "TEXTURE13"]
    val get_TEXTURE14: t -> _GLenum [@@js.get "TEXTURE14"]
    val get_TEXTURE15: t -> _GLenum [@@js.get "TEXTURE15"]
    val get_TEXTURE16: t -> _GLenum [@@js.get "TEXTURE16"]
    val get_TEXTURE17: t -> _GLenum [@@js.get "TEXTURE17"]
    val get_TEXTURE18: t -> _GLenum [@@js.get "TEXTURE18"]
    val get_TEXTURE19: t -> _GLenum [@@js.get "TEXTURE19"]
    val get_TEXTURE2: t -> _GLenum [@@js.get "TEXTURE2"]
    val get_TEXTURE20: t -> _GLenum [@@js.get "TEXTURE20"]
    val get_TEXTURE21: t -> _GLenum [@@js.get "TEXTURE21"]
    val get_TEXTURE22: t -> _GLenum [@@js.get "TEXTURE22"]
    val get_TEXTURE23: t -> _GLenum [@@js.get "TEXTURE23"]
    val get_TEXTURE24: t -> _GLenum [@@js.get "TEXTURE24"]
    val get_TEXTURE25: t -> _GLenum [@@js.get "TEXTURE25"]
    val get_TEXTURE26: t -> _GLenum [@@js.get "TEXTURE26"]
    val get_TEXTURE27: t -> _GLenum [@@js.get "TEXTURE27"]
    val get_TEXTURE28: t -> _GLenum [@@js.get "TEXTURE28"]
    val get_TEXTURE29: t -> _GLenum [@@js.get "TEXTURE29"]
    val get_TEXTURE3: t -> _GLenum [@@js.get "TEXTURE3"]
    val get_TEXTURE30: t -> _GLenum [@@js.get "TEXTURE30"]
    val get_TEXTURE31: t -> _GLenum [@@js.get "TEXTURE31"]
    val get_TEXTURE4: t -> _GLenum [@@js.get "TEXTURE4"]
    val get_TEXTURE5: t -> _GLenum [@@js.get "TEXTURE5"]
    val get_TEXTURE6: t -> _GLenum [@@js.get "TEXTURE6"]
    val get_TEXTURE7: t -> _GLenum [@@js.get "TEXTURE7"]
    val get_TEXTURE8: t -> _GLenum [@@js.get "TEXTURE8"]
    val get_TEXTURE9: t -> _GLenum [@@js.get "TEXTURE9"]
    val get_TEXTURE_2D: t -> _GLenum [@@js.get "TEXTURE_2D"]
    val get_TEXTURE_BINDING_2D: t -> _GLenum [@@js.get "TEXTURE_BINDING_2D"]
    val get_TEXTURE_BINDING_CUBE_MAP: t -> _GLenum [@@js.get "TEXTURE_BINDING_CUBE_MAP"]
    val get_TEXTURE_CUBE_MAP: t -> _GLenum [@@js.get "TEXTURE_CUBE_MAP"]
    val get_TEXTURE_CUBE_MAP_NEGATIVE_X: t -> _GLenum [@@js.get "TEXTURE_CUBE_MAP_NEGATIVE_X"]
    val get_TEXTURE_CUBE_MAP_NEGATIVE_Y: t -> _GLenum [@@js.get "TEXTURE_CUBE_MAP_NEGATIVE_Y"]
    val get_TEXTURE_CUBE_MAP_NEGATIVE_Z: t -> _GLenum [@@js.get "TEXTURE_CUBE_MAP_NEGATIVE_Z"]
    val get_TEXTURE_CUBE_MAP_POSITIVE_X: t -> _GLenum [@@js.get "TEXTURE_CUBE_MAP_POSITIVE_X"]
    val get_TEXTURE_CUBE_MAP_POSITIVE_Y: t -> _GLenum [@@js.get "TEXTURE_CUBE_MAP_POSITIVE_Y"]
    val get_TEXTURE_CUBE_MAP_POSITIVE_Z: t -> _GLenum [@@js.get "TEXTURE_CUBE_MAP_POSITIVE_Z"]
    val get_TEXTURE_MAG_FILTER: t -> _GLenum [@@js.get "TEXTURE_MAG_FILTER"]
    val get_TEXTURE_MIN_FILTER: t -> _GLenum [@@js.get "TEXTURE_MIN_FILTER"]
    val get_TEXTURE_WRAP_S: t -> _GLenum [@@js.get "TEXTURE_WRAP_S"]
    val get_TEXTURE_WRAP_T: t -> _GLenum [@@js.get "TEXTURE_WRAP_T"]
    val get_TRIANGLES: t -> _GLenum [@@js.get "TRIANGLES"]
    val get_TRIANGLE_FAN: t -> _GLenum [@@js.get "TRIANGLE_FAN"]
    val get_TRIANGLE_STRIP: t -> _GLenum [@@js.get "TRIANGLE_STRIP"]
    val get_UNPACK_ALIGNMENT: t -> _GLenum [@@js.get "UNPACK_ALIGNMENT"]
    val get_UNPACK_COLORSPACE_CONVERSION_WEBGL: t -> _GLenum [@@js.get "UNPACK_COLORSPACE_CONVERSION_WEBGL"]
    val get_UNPACK_FLIP_Y_WEBGL: t -> _GLenum [@@js.get "UNPACK_FLIP_Y_WEBGL"]
    val get_UNPACK_PREMULTIPLY_ALPHA_WEBGL: t -> _GLenum [@@js.get "UNPACK_PREMULTIPLY_ALPHA_WEBGL"]
    val get_UNSIGNED_BYTE: t -> _GLenum [@@js.get "UNSIGNED_BYTE"]
    val get_UNSIGNED_INT: t -> _GLenum [@@js.get "UNSIGNED_INT"]
    val get_UNSIGNED_SHORT: t -> _GLenum [@@js.get "UNSIGNED_SHORT"]
    val get_UNSIGNED_SHORT_4_4_4_4: t -> _GLenum [@@js.get "UNSIGNED_SHORT_4_4_4_4"]
    val get_UNSIGNED_SHORT_5_5_5_1: t -> _GLenum [@@js.get "UNSIGNED_SHORT_5_5_5_1"]
    val get_UNSIGNED_SHORT_5_6_5: t -> _GLenum [@@js.get "UNSIGNED_SHORT_5_6_5"]
    val get_VALIDATE_STATUS: t -> _GLenum [@@js.get "VALIDATE_STATUS"]
    val get_VENDOR: t -> _GLenum [@@js.get "VENDOR"]
    val get_VERSION: t -> _GLenum [@@js.get "VERSION"]
    val get_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: t -> _GLenum [@@js.get "VERTEX_ATTRIB_ARRAY_BUFFER_BINDING"]
    val get_VERTEX_ATTRIB_ARRAY_ENABLED: t -> _GLenum [@@js.get "VERTEX_ATTRIB_ARRAY_ENABLED"]
    val get_VERTEX_ATTRIB_ARRAY_NORMALIZED: t -> _GLenum [@@js.get "VERTEX_ATTRIB_ARRAY_NORMALIZED"]
    val get_VERTEX_ATTRIB_ARRAY_POINTER: t -> _GLenum [@@js.get "VERTEX_ATTRIB_ARRAY_POINTER"]
    val get_VERTEX_ATTRIB_ARRAY_SIZE: t -> _GLenum [@@js.get "VERTEX_ATTRIB_ARRAY_SIZE"]
    val get_VERTEX_ATTRIB_ARRAY_STRIDE: t -> _GLenum [@@js.get "VERTEX_ATTRIB_ARRAY_STRIDE"]
    val get_VERTEX_ATTRIB_ARRAY_TYPE: t -> _GLenum [@@js.get "VERTEX_ATTRIB_ARRAY_TYPE"]
    val get_VERTEX_SHADER: t -> _GLenum [@@js.get "VERTEX_SHADER"]
    val get_VIEWPORT: t -> _GLenum [@@js.get "VIEWPORT"]
    val get_ZERO: t -> _GLenum [@@js.get "ZERO"]
    val get_ACTIVE_UNIFORM_BLOCKS: t -> _GLenum [@@js.get "ACTIVE_UNIFORM_BLOCKS"]
    val get_ALREADY_SIGNALED: t -> _GLenum [@@js.get "ALREADY_SIGNALED"]
    val get_ANY_SAMPLES_PASSED: t -> _GLenum [@@js.get "ANY_SAMPLES_PASSED"]
    val get_ANY_SAMPLES_PASSED_CONSERVATIVE: t -> _GLenum [@@js.get "ANY_SAMPLES_PASSED_CONSERVATIVE"]
    val get_COLOR: t -> _GLenum [@@js.get "COLOR"]
    val get_COLOR_ATTACHMENT1: t -> _GLenum [@@js.get "COLOR_ATTACHMENT1"]
    val get_COLOR_ATTACHMENT10: t -> _GLenum [@@js.get "COLOR_ATTACHMENT10"]
    val get_COLOR_ATTACHMENT11: t -> _GLenum [@@js.get "COLOR_ATTACHMENT11"]
    val get_COLOR_ATTACHMENT12: t -> _GLenum [@@js.get "COLOR_ATTACHMENT12"]
    val get_COLOR_ATTACHMENT13: t -> _GLenum [@@js.get "COLOR_ATTACHMENT13"]
    val get_COLOR_ATTACHMENT14: t -> _GLenum [@@js.get "COLOR_ATTACHMENT14"]
    val get_COLOR_ATTACHMENT15: t -> _GLenum [@@js.get "COLOR_ATTACHMENT15"]
    val get_COLOR_ATTACHMENT2: t -> _GLenum [@@js.get "COLOR_ATTACHMENT2"]
    val get_COLOR_ATTACHMENT3: t -> _GLenum [@@js.get "COLOR_ATTACHMENT3"]
    val get_COLOR_ATTACHMENT4: t -> _GLenum [@@js.get "COLOR_ATTACHMENT4"]
    val get_COLOR_ATTACHMENT5: t -> _GLenum [@@js.get "COLOR_ATTACHMENT5"]
    val get_COLOR_ATTACHMENT6: t -> _GLenum [@@js.get "COLOR_ATTACHMENT6"]
    val get_COLOR_ATTACHMENT7: t -> _GLenum [@@js.get "COLOR_ATTACHMENT7"]
    val get_COLOR_ATTACHMENT8: t -> _GLenum [@@js.get "COLOR_ATTACHMENT8"]
    val get_COLOR_ATTACHMENT9: t -> _GLenum [@@js.get "COLOR_ATTACHMENT9"]
    val get_COMPARE_REF_TO_TEXTURE: t -> _GLenum [@@js.get "COMPARE_REF_TO_TEXTURE"]
    val get_CONDITION_SATISFIED: t -> _GLenum [@@js.get "CONDITION_SATISFIED"]
    val get_COPY_READ_BUFFER: t -> _GLenum [@@js.get "COPY_READ_BUFFER"]
    val get_COPY_READ_BUFFER_BINDING: t -> _GLenum [@@js.get "COPY_READ_BUFFER_BINDING"]
    val get_COPY_WRITE_BUFFER: t -> _GLenum [@@js.get "COPY_WRITE_BUFFER"]
    val get_COPY_WRITE_BUFFER_BINDING: t -> _GLenum [@@js.get "COPY_WRITE_BUFFER_BINDING"]
    val get_CURRENT_QUERY: t -> _GLenum [@@js.get "CURRENT_QUERY"]
    val get_DEPTH: t -> _GLenum [@@js.get "DEPTH"]
    val get_DEPTH24_STENCIL8: t -> _GLenum [@@js.get "DEPTH24_STENCIL8"]
    val get_DEPTH32F_STENCIL8: t -> _GLenum [@@js.get "DEPTH32F_STENCIL8"]
    val get_DEPTH_COMPONENT24: t -> _GLenum [@@js.get "DEPTH_COMPONENT24"]
    val get_DEPTH_COMPONENT32F: t -> _GLenum [@@js.get "DEPTH_COMPONENT32F"]
    val get_DRAW_BUFFER0: t -> _GLenum [@@js.get "DRAW_BUFFER0"]
    val get_DRAW_BUFFER1: t -> _GLenum [@@js.get "DRAW_BUFFER1"]
    val get_DRAW_BUFFER10: t -> _GLenum [@@js.get "DRAW_BUFFER10"]
    val get_DRAW_BUFFER11: t -> _GLenum [@@js.get "DRAW_BUFFER11"]
    val get_DRAW_BUFFER12: t -> _GLenum [@@js.get "DRAW_BUFFER12"]
    val get_DRAW_BUFFER13: t -> _GLenum [@@js.get "DRAW_BUFFER13"]
    val get_DRAW_BUFFER14: t -> _GLenum [@@js.get "DRAW_BUFFER14"]
    val get_DRAW_BUFFER15: t -> _GLenum [@@js.get "DRAW_BUFFER15"]
    val get_DRAW_BUFFER2: t -> _GLenum [@@js.get "DRAW_BUFFER2"]
    val get_DRAW_BUFFER3: t -> _GLenum [@@js.get "DRAW_BUFFER3"]
    val get_DRAW_BUFFER4: t -> _GLenum [@@js.get "DRAW_BUFFER4"]
    val get_DRAW_BUFFER5: t -> _GLenum [@@js.get "DRAW_BUFFER5"]
    val get_DRAW_BUFFER6: t -> _GLenum [@@js.get "DRAW_BUFFER6"]
    val get_DRAW_BUFFER7: t -> _GLenum [@@js.get "DRAW_BUFFER7"]
    val get_DRAW_BUFFER8: t -> _GLenum [@@js.get "DRAW_BUFFER8"]
    val get_DRAW_BUFFER9: t -> _GLenum [@@js.get "DRAW_BUFFER9"]
    val get_DRAW_FRAMEBUFFER: t -> _GLenum [@@js.get "DRAW_FRAMEBUFFER"]
    val get_DRAW_FRAMEBUFFER_BINDING: t -> _GLenum [@@js.get "DRAW_FRAMEBUFFER_BINDING"]
    val get_DYNAMIC_COPY: t -> _GLenum [@@js.get "DYNAMIC_COPY"]
    val get_DYNAMIC_READ: t -> _GLenum [@@js.get "DYNAMIC_READ"]
    val get_FLOAT_32_UNSIGNED_INT_24_8_REV: t -> _GLenum [@@js.get "FLOAT_32_UNSIGNED_INT_24_8_REV"]
    val get_FLOAT_MAT2x3: t -> _GLenum [@@js.get "FLOAT_MAT2x3"]
    val get_FLOAT_MAT2x4: t -> _GLenum [@@js.get "FLOAT_MAT2x4"]
    val get_FLOAT_MAT3x2: t -> _GLenum [@@js.get "FLOAT_MAT3x2"]
    val get_FLOAT_MAT3x4: t -> _GLenum [@@js.get "FLOAT_MAT3x4"]
    val get_FLOAT_MAT4x2: t -> _GLenum [@@js.get "FLOAT_MAT4x2"]
    val get_FLOAT_MAT4x3: t -> _GLenum [@@js.get "FLOAT_MAT4x3"]
    val get_FRAGMENT_SHADER_DERIVATIVE_HINT: t -> _GLenum [@@js.get "FRAGMENT_SHADER_DERIVATIVE_HINT"]
    val get_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE: t -> _GLenum [@@js.get "FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE"]
    val get_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE: t -> _GLenum [@@js.get "FRAMEBUFFER_ATTACHMENT_BLUE_SIZE"]
    val get_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: t -> _GLenum [@@js.get "FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING"]
    val get_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE: t -> _GLenum [@@js.get "FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE"]
    val get_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE: t -> _GLenum [@@js.get "FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE"]
    val get_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE: t -> _GLenum [@@js.get "FRAMEBUFFER_ATTACHMENT_GREEN_SIZE"]
    val get_FRAMEBUFFER_ATTACHMENT_RED_SIZE: t -> _GLenum [@@js.get "FRAMEBUFFER_ATTACHMENT_RED_SIZE"]
    val get_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE: t -> _GLenum [@@js.get "FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE"]
    val get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER: t -> _GLenum [@@js.get "FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER"]
    val get_FRAMEBUFFER_DEFAULT: t -> _GLenum [@@js.get "FRAMEBUFFER_DEFAULT"]
    val get_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE: t -> _GLenum [@@js.get "FRAMEBUFFER_INCOMPLETE_MULTISAMPLE"]
    val get_HALF_FLOAT: t -> _GLenum [@@js.get "HALF_FLOAT"]
    val get_INTERLEAVED_ATTRIBS: t -> _GLenum [@@js.get "INTERLEAVED_ATTRIBS"]
    val get_INT_2_10_10_10_REV: t -> _GLenum [@@js.get "INT_2_10_10_10_REV"]
    val get_INT_SAMPLER_2D: t -> _GLenum [@@js.get "INT_SAMPLER_2D"]
    val get_INT_SAMPLER_2D_ARRAY: t -> _GLenum [@@js.get "INT_SAMPLER_2D_ARRAY"]
    val get_INT_SAMPLER_3D: t -> _GLenum [@@js.get "INT_SAMPLER_3D"]
    val get_INT_SAMPLER_CUBE: t -> _GLenum [@@js.get "INT_SAMPLER_CUBE"]
    val get_INVALID_INDEX: t -> _GLenum [@@js.get "INVALID_INDEX"]
    val get_MAX: t -> _GLenum [@@js.get "MAX"]
    val get_MAX_3D_TEXTURE_SIZE: t -> _GLenum [@@js.get "MAX_3D_TEXTURE_SIZE"]
    val get_MAX_ARRAY_TEXTURE_LAYERS: t -> _GLenum [@@js.get "MAX_ARRAY_TEXTURE_LAYERS"]
    val get_MAX_CLIENT_WAIT_TIMEOUT_WEBGL: t -> _GLenum [@@js.get "MAX_CLIENT_WAIT_TIMEOUT_WEBGL"]
    val get_MAX_COLOR_ATTACHMENTS: t -> _GLenum [@@js.get "MAX_COLOR_ATTACHMENTS"]
    val get_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS: t -> _GLenum [@@js.get "MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS"]
    val get_MAX_COMBINED_UNIFORM_BLOCKS: t -> _GLenum [@@js.get "MAX_COMBINED_UNIFORM_BLOCKS"]
    val get_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS: t -> _GLenum [@@js.get "MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS"]
    val get_MAX_DRAW_BUFFERS: t -> _GLenum [@@js.get "MAX_DRAW_BUFFERS"]
    val get_MAX_ELEMENTS_INDICES: t -> _GLenum [@@js.get "MAX_ELEMENTS_INDICES"]
    val get_MAX_ELEMENTS_VERTICES: t -> _GLenum [@@js.get "MAX_ELEMENTS_VERTICES"]
    val get_MAX_ELEMENT_INDEX: t -> _GLenum [@@js.get "MAX_ELEMENT_INDEX"]
    val get_MAX_FRAGMENT_INPUT_COMPONENTS: t -> _GLenum [@@js.get "MAX_FRAGMENT_INPUT_COMPONENTS"]
    val get_MAX_FRAGMENT_UNIFORM_BLOCKS: t -> _GLenum [@@js.get "MAX_FRAGMENT_UNIFORM_BLOCKS"]
    val get_MAX_FRAGMENT_UNIFORM_COMPONENTS: t -> _GLenum [@@js.get "MAX_FRAGMENT_UNIFORM_COMPONENTS"]
    val get_MAX_PROGRAM_TEXEL_OFFSET: t -> _GLenum [@@js.get "MAX_PROGRAM_TEXEL_OFFSET"]
    val get_MAX_SAMPLES: t -> _GLenum [@@js.get "MAX_SAMPLES"]
    val get_MAX_SERVER_WAIT_TIMEOUT: t -> _GLenum [@@js.get "MAX_SERVER_WAIT_TIMEOUT"]
    val get_MAX_TEXTURE_LOD_BIAS: t -> _GLenum [@@js.get "MAX_TEXTURE_LOD_BIAS"]
    val get_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS: t -> _GLenum [@@js.get "MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS"]
    val get_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS: t -> _GLenum [@@js.get "MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS"]
    val get_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS: t -> _GLenum [@@js.get "MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS"]
    val get_MAX_UNIFORM_BLOCK_SIZE: t -> _GLenum [@@js.get "MAX_UNIFORM_BLOCK_SIZE"]
    val get_MAX_UNIFORM_BUFFER_BINDINGS: t -> _GLenum [@@js.get "MAX_UNIFORM_BUFFER_BINDINGS"]
    val get_MAX_VARYING_COMPONENTS: t -> _GLenum [@@js.get "MAX_VARYING_COMPONENTS"]
    val get_MAX_VERTEX_OUTPUT_COMPONENTS: t -> _GLenum [@@js.get "MAX_VERTEX_OUTPUT_COMPONENTS"]
    val get_MAX_VERTEX_UNIFORM_BLOCKS: t -> _GLenum [@@js.get "MAX_VERTEX_UNIFORM_BLOCKS"]
    val get_MAX_VERTEX_UNIFORM_COMPONENTS: t -> _GLenum [@@js.get "MAX_VERTEX_UNIFORM_COMPONENTS"]
    val get_MIN: t -> _GLenum [@@js.get "MIN"]
    val get_MIN_PROGRAM_TEXEL_OFFSET: t -> _GLenum [@@js.get "MIN_PROGRAM_TEXEL_OFFSET"]
    val get_OBJECT_TYPE: t -> _GLenum [@@js.get "OBJECT_TYPE"]
    val get_PACK_ROW_LENGTH: t -> _GLenum [@@js.get "PACK_ROW_LENGTH"]
    val get_PACK_SKIP_PIXELS: t -> _GLenum [@@js.get "PACK_SKIP_PIXELS"]
    val get_PACK_SKIP_ROWS: t -> _GLenum [@@js.get "PACK_SKIP_ROWS"]
    val get_PIXEL_PACK_BUFFER: t -> _GLenum [@@js.get "PIXEL_PACK_BUFFER"]
    val get_PIXEL_PACK_BUFFER_BINDING: t -> _GLenum [@@js.get "PIXEL_PACK_BUFFER_BINDING"]
    val get_PIXEL_UNPACK_BUFFER: t -> _GLenum [@@js.get "PIXEL_UNPACK_BUFFER"]
    val get_PIXEL_UNPACK_BUFFER_BINDING: t -> _GLenum [@@js.get "PIXEL_UNPACK_BUFFER_BINDING"]
    val get_QUERY_RESULT: t -> _GLenum [@@js.get "QUERY_RESULT"]
    val get_QUERY_RESULT_AVAILABLE: t -> _GLenum [@@js.get "QUERY_RESULT_AVAILABLE"]
    val get_R11F_G11F_B10F: t -> _GLenum [@@js.get "R11F_G11F_B10F"]
    val get_R16F: t -> _GLenum [@@js.get "R16F"]
    val get_R16I: t -> _GLenum [@@js.get "R16I"]
    val get_R16UI: t -> _GLenum [@@js.get "R16UI"]
    val get_R32F: t -> _GLenum [@@js.get "R32F"]
    val get_R32I: t -> _GLenum [@@js.get "R32I"]
    val get_R32UI: t -> _GLenum [@@js.get "R32UI"]
    val get_R8: t -> _GLenum [@@js.get "R8"]
    val get_R8I: t -> _GLenum [@@js.get "R8I"]
    val get_R8UI: t -> _GLenum [@@js.get "R8UI"]
    val get_R8_SNORM: t -> _GLenum [@@js.get "R8_SNORM"]
    val get_RASTERIZER_DISCARD: t -> _GLenum [@@js.get "RASTERIZER_DISCARD"]
    val get_READ_BUFFER: t -> _GLenum [@@js.get "READ_BUFFER"]
    val get_READ_FRAMEBUFFER: t -> _GLenum [@@js.get "READ_FRAMEBUFFER"]
    val get_READ_FRAMEBUFFER_BINDING: t -> _GLenum [@@js.get "READ_FRAMEBUFFER_BINDING"]
    val get_RED: t -> _GLenum [@@js.get "RED"]
    val get_RED_INTEGER: t -> _GLenum [@@js.get "RED_INTEGER"]
    val get_RENDERBUFFER_SAMPLES: t -> _GLenum [@@js.get "RENDERBUFFER_SAMPLES"]
    val get_RG: t -> _GLenum [@@js.get "RG"]
    val get_RG16F: t -> _GLenum [@@js.get "RG16F"]
    val get_RG16I: t -> _GLenum [@@js.get "RG16I"]
    val get_RG16UI: t -> _GLenum [@@js.get "RG16UI"]
    val get_RG32F: t -> _GLenum [@@js.get "RG32F"]
    val get_RG32I: t -> _GLenum [@@js.get "RG32I"]
    val get_RG32UI: t -> _GLenum [@@js.get "RG32UI"]
    val get_RG8: t -> _GLenum [@@js.get "RG8"]
    val get_RG8I: t -> _GLenum [@@js.get "RG8I"]
    val get_RG8UI: t -> _GLenum [@@js.get "RG8UI"]
    val get_RG8_SNORM: t -> _GLenum [@@js.get "RG8_SNORM"]
    val get_RGB10_A2: t -> _GLenum [@@js.get "RGB10_A2"]
    val get_RGB10_A2UI: t -> _GLenum [@@js.get "RGB10_A2UI"]
    val get_RGB16F: t -> _GLenum [@@js.get "RGB16F"]
    val get_RGB16I: t -> _GLenum [@@js.get "RGB16I"]
    val get_RGB16UI: t -> _GLenum [@@js.get "RGB16UI"]
    val get_RGB32F: t -> _GLenum [@@js.get "RGB32F"]
    val get_RGB32I: t -> _GLenum [@@js.get "RGB32I"]
    val get_RGB32UI: t -> _GLenum [@@js.get "RGB32UI"]
    val get_RGB8: t -> _GLenum [@@js.get "RGB8"]
    val get_RGB8I: t -> _GLenum [@@js.get "RGB8I"]
    val get_RGB8UI: t -> _GLenum [@@js.get "RGB8UI"]
    val get_RGB8_SNORM: t -> _GLenum [@@js.get "RGB8_SNORM"]
    val get_RGB9_E5: t -> _GLenum [@@js.get "RGB9_E5"]
    val get_RGBA16F: t -> _GLenum [@@js.get "RGBA16F"]
    val get_RGBA16I: t -> _GLenum [@@js.get "RGBA16I"]
    val get_RGBA16UI: t -> _GLenum [@@js.get "RGBA16UI"]
    val get_RGBA32F: t -> _GLenum [@@js.get "RGBA32F"]
    val get_RGBA32I: t -> _GLenum [@@js.get "RGBA32I"]
    val get_RGBA32UI: t -> _GLenum [@@js.get "RGBA32UI"]
    val get_RGBA8: t -> _GLenum [@@js.get "RGBA8"]
    val get_RGBA8I: t -> _GLenum [@@js.get "RGBA8I"]
    val get_RGBA8UI: t -> _GLenum [@@js.get "RGBA8UI"]
    val get_RGBA8_SNORM: t -> _GLenum [@@js.get "RGBA8_SNORM"]
    val get_RGBA_INTEGER: t -> _GLenum [@@js.get "RGBA_INTEGER"]
    val get_RGB_INTEGER: t -> _GLenum [@@js.get "RGB_INTEGER"]
    val get_RG_INTEGER: t -> _GLenum [@@js.get "RG_INTEGER"]
    val get_SAMPLER_2D_ARRAY: t -> _GLenum [@@js.get "SAMPLER_2D_ARRAY"]
    val get_SAMPLER_2D_ARRAY_SHADOW: t -> _GLenum [@@js.get "SAMPLER_2D_ARRAY_SHADOW"]
    val get_SAMPLER_2D_SHADOW: t -> _GLenum [@@js.get "SAMPLER_2D_SHADOW"]
    val get_SAMPLER_3D: t -> _GLenum [@@js.get "SAMPLER_3D"]
    val get_SAMPLER_BINDING: t -> _GLenum [@@js.get "SAMPLER_BINDING"]
    val get_SAMPLER_CUBE_SHADOW: t -> _GLenum [@@js.get "SAMPLER_CUBE_SHADOW"]
    val get_SEPARATE_ATTRIBS: t -> _GLenum [@@js.get "SEPARATE_ATTRIBS"]
    val get_SIGNALED: t -> _GLenum [@@js.get "SIGNALED"]
    val get_SIGNED_NORMALIZED: t -> _GLenum [@@js.get "SIGNED_NORMALIZED"]
    val get_SRGB: t -> _GLenum [@@js.get "SRGB"]
    val get_SRGB8: t -> _GLenum [@@js.get "SRGB8"]
    val get_SRGB8_ALPHA8: t -> _GLenum [@@js.get "SRGB8_ALPHA8"]
    val get_STATIC_COPY: t -> _GLenum [@@js.get "STATIC_COPY"]
    val get_STATIC_READ: t -> _GLenum [@@js.get "STATIC_READ"]
    val get_STENCIL: t -> _GLenum [@@js.get "STENCIL"]
    val get_STREAM_COPY: t -> _GLenum [@@js.get "STREAM_COPY"]
    val get_STREAM_READ: t -> _GLenum [@@js.get "STREAM_READ"]
    val get_SYNC_CONDITION: t -> _GLenum [@@js.get "SYNC_CONDITION"]
    val get_SYNC_FENCE: t -> _GLenum [@@js.get "SYNC_FENCE"]
    val get_SYNC_FLAGS: t -> _GLenum [@@js.get "SYNC_FLAGS"]
    val get_SYNC_FLUSH_COMMANDS_BIT: t -> _GLenum [@@js.get "SYNC_FLUSH_COMMANDS_BIT"]
    val get_SYNC_GPU_COMMANDS_COMPLETE: t -> _GLenum [@@js.get "SYNC_GPU_COMMANDS_COMPLETE"]
    val get_SYNC_STATUS: t -> _GLenum [@@js.get "SYNC_STATUS"]
    val get_TEXTURE_2D_ARRAY: t -> _GLenum [@@js.get "TEXTURE_2D_ARRAY"]
    val get_TEXTURE_3D: t -> _GLenum [@@js.get "TEXTURE_3D"]
    val get_TEXTURE_BASE_LEVEL: t -> _GLenum [@@js.get "TEXTURE_BASE_LEVEL"]
    val get_TEXTURE_BINDING_2D_ARRAY: t -> _GLenum [@@js.get "TEXTURE_BINDING_2D_ARRAY"]
    val get_TEXTURE_BINDING_3D: t -> _GLenum [@@js.get "TEXTURE_BINDING_3D"]
    val get_TEXTURE_COMPARE_FUNC: t -> _GLenum [@@js.get "TEXTURE_COMPARE_FUNC"]
    val get_TEXTURE_COMPARE_MODE: t -> _GLenum [@@js.get "TEXTURE_COMPARE_MODE"]
    val get_TEXTURE_IMMUTABLE_FORMAT: t -> _GLenum [@@js.get "TEXTURE_IMMUTABLE_FORMAT"]
    val get_TEXTURE_IMMUTABLE_LEVELS: t -> _GLenum [@@js.get "TEXTURE_IMMUTABLE_LEVELS"]
    val get_TEXTURE_MAX_LEVEL: t -> _GLenum [@@js.get "TEXTURE_MAX_LEVEL"]
    val get_TEXTURE_MAX_LOD: t -> _GLenum [@@js.get "TEXTURE_MAX_LOD"]
    val get_TEXTURE_MIN_LOD: t -> _GLenum [@@js.get "TEXTURE_MIN_LOD"]
    val get_TEXTURE_WRAP_R: t -> _GLenum [@@js.get "TEXTURE_WRAP_R"]
    val get_TIMEOUT_EXPIRED: t -> _GLenum [@@js.get "TIMEOUT_EXPIRED"]
    val get_TIMEOUT_IGNORED: t -> _GLint64 [@@js.get "TIMEOUT_IGNORED"]
    val get_TRANSFORM_FEEDBACK: t -> _GLenum [@@js.get "TRANSFORM_FEEDBACK"]
    val get_TRANSFORM_FEEDBACK_ACTIVE: t -> _GLenum [@@js.get "TRANSFORM_FEEDBACK_ACTIVE"]
    val get_TRANSFORM_FEEDBACK_BINDING: t -> _GLenum [@@js.get "TRANSFORM_FEEDBACK_BINDING"]
    val get_TRANSFORM_FEEDBACK_BUFFER: t -> _GLenum [@@js.get "TRANSFORM_FEEDBACK_BUFFER"]
    val get_TRANSFORM_FEEDBACK_BUFFER_BINDING: t -> _GLenum [@@js.get "TRANSFORM_FEEDBACK_BUFFER_BINDING"]
    val get_TRANSFORM_FEEDBACK_BUFFER_MODE: t -> _GLenum [@@js.get "TRANSFORM_FEEDBACK_BUFFER_MODE"]
    val get_TRANSFORM_FEEDBACK_BUFFER_SIZE: t -> _GLenum [@@js.get "TRANSFORM_FEEDBACK_BUFFER_SIZE"]
    val get_TRANSFORM_FEEDBACK_BUFFER_START: t -> _GLenum [@@js.get "TRANSFORM_FEEDBACK_BUFFER_START"]
    val get_TRANSFORM_FEEDBACK_PAUSED: t -> _GLenum [@@js.get "TRANSFORM_FEEDBACK_PAUSED"]
    val get_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN: t -> _GLenum [@@js.get "TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN"]
    val get_TRANSFORM_FEEDBACK_VARYINGS: t -> _GLenum [@@js.get "TRANSFORM_FEEDBACK_VARYINGS"]
    val get_UNIFORM_ARRAY_STRIDE: t -> _GLenum [@@js.get "UNIFORM_ARRAY_STRIDE"]
    val get_UNIFORM_BLOCK_ACTIVE_UNIFORMS: t -> _GLenum [@@js.get "UNIFORM_BLOCK_ACTIVE_UNIFORMS"]
    val get_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES: t -> _GLenum [@@js.get "UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES"]
    val get_UNIFORM_BLOCK_BINDING: t -> _GLenum [@@js.get "UNIFORM_BLOCK_BINDING"]
    val get_UNIFORM_BLOCK_DATA_SIZE: t -> _GLenum [@@js.get "UNIFORM_BLOCK_DATA_SIZE"]
    val get_UNIFORM_BLOCK_INDEX: t -> _GLenum [@@js.get "UNIFORM_BLOCK_INDEX"]
    val get_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER: t -> _GLenum [@@js.get "UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER"]
    val get_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER: t -> _GLenum [@@js.get "UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER"]
    val get_UNIFORM_BUFFER: t -> _GLenum [@@js.get "UNIFORM_BUFFER"]
    val get_UNIFORM_BUFFER_BINDING: t -> _GLenum [@@js.get "UNIFORM_BUFFER_BINDING"]
    val get_UNIFORM_BUFFER_OFFSET_ALIGNMENT: t -> _GLenum [@@js.get "UNIFORM_BUFFER_OFFSET_ALIGNMENT"]
    val get_UNIFORM_BUFFER_SIZE: t -> _GLenum [@@js.get "UNIFORM_BUFFER_SIZE"]
    val get_UNIFORM_BUFFER_START: t -> _GLenum [@@js.get "UNIFORM_BUFFER_START"]
    val get_UNIFORM_IS_ROW_MAJOR: t -> _GLenum [@@js.get "UNIFORM_IS_ROW_MAJOR"]
    val get_UNIFORM_MATRIX_STRIDE: t -> _GLenum [@@js.get "UNIFORM_MATRIX_STRIDE"]
    val get_UNIFORM_OFFSET: t -> _GLenum [@@js.get "UNIFORM_OFFSET"]
    val get_UNIFORM_SIZE: t -> _GLenum [@@js.get "UNIFORM_SIZE"]
    val get_UNIFORM_TYPE: t -> _GLenum [@@js.get "UNIFORM_TYPE"]
    val get_UNPACK_IMAGE_HEIGHT: t -> _GLenum [@@js.get "UNPACK_IMAGE_HEIGHT"]
    val get_UNPACK_ROW_LENGTH: t -> _GLenum [@@js.get "UNPACK_ROW_LENGTH"]
    val get_UNPACK_SKIP_IMAGES: t -> _GLenum [@@js.get "UNPACK_SKIP_IMAGES"]
    val get_UNPACK_SKIP_PIXELS: t -> _GLenum [@@js.get "UNPACK_SKIP_PIXELS"]
    val get_UNPACK_SKIP_ROWS: t -> _GLenum [@@js.get "UNPACK_SKIP_ROWS"]
    val get_UNSIGNALED: t -> _GLenum [@@js.get "UNSIGNALED"]
    val get_UNSIGNED_INT_10F_11F_11F_REV: t -> _GLenum [@@js.get "UNSIGNED_INT_10F_11F_11F_REV"]
    val get_UNSIGNED_INT_24_8: t -> _GLenum [@@js.get "UNSIGNED_INT_24_8"]
    val get_UNSIGNED_INT_2_10_10_10_REV: t -> _GLenum [@@js.get "UNSIGNED_INT_2_10_10_10_REV"]
    val get_UNSIGNED_INT_5_9_9_9_REV: t -> _GLenum [@@js.get "UNSIGNED_INT_5_9_9_9_REV"]
    val get_UNSIGNED_INT_SAMPLER_2D: t -> _GLenum [@@js.get "UNSIGNED_INT_SAMPLER_2D"]
    val get_UNSIGNED_INT_SAMPLER_2D_ARRAY: t -> _GLenum [@@js.get "UNSIGNED_INT_SAMPLER_2D_ARRAY"]
    val get_UNSIGNED_INT_SAMPLER_3D: t -> _GLenum [@@js.get "UNSIGNED_INT_SAMPLER_3D"]
    val get_UNSIGNED_INT_SAMPLER_CUBE: t -> _GLenum [@@js.get "UNSIGNED_INT_SAMPLER_CUBE"]
    val get_UNSIGNED_INT_VEC2: t -> _GLenum [@@js.get "UNSIGNED_INT_VEC2"]
    val get_UNSIGNED_INT_VEC3: t -> _GLenum [@@js.get "UNSIGNED_INT_VEC3"]
    val get_UNSIGNED_INT_VEC4: t -> _GLenum [@@js.get "UNSIGNED_INT_VEC4"]
    val get_UNSIGNED_NORMALIZED: t -> _GLenum [@@js.get "UNSIGNED_NORMALIZED"]
    val get_VERTEX_ARRAY_BINDING: t -> _GLenum [@@js.get "VERTEX_ARRAY_BINDING"]
    val get_VERTEX_ATTRIB_ARRAY_DIVISOR: t -> _GLenum [@@js.get "VERTEX_ATTRIB_ARRAY_DIVISOR"]
    val get_VERTEX_ATTRIB_ARRAY_INTEGER: t -> _GLenum [@@js.get "VERTEX_ATTRIB_ARRAY_INTEGER"]
    val get_WAIT_FAILED: t -> _GLenum [@@js.get "WAIT_FAILED"]
  end
  module AnonymousInterface576 : sig
    type t = anonymous_interface_576
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _WebGLActiveInfo [@@js.get "prototype"]
    val set_prototype: t -> _WebGLActiveInfo -> unit [@@js.set "prototype"]
    val create: t -> _WebGLActiveInfo [@@js.apply_newable]
  end
  module AnonymousInterface577 : sig
    type t = anonymous_interface_577
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _WebGLBuffer [@@js.get "prototype"]
    val set_prototype: t -> _WebGLBuffer -> unit [@@js.set "prototype"]
    val create: t -> _WebGLBuffer [@@js.apply_newable]
  end
  module AnonymousInterface578 : sig
    type t = anonymous_interface_578
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _WebGLContextEvent [@@js.get "prototype"]
    val set_prototype: t -> _WebGLContextEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> ?eventInit:_WebGLContextEventInit -> unit -> _WebGLContextEvent [@@js.apply_newable]
  end
  module AnonymousInterface579 : sig
    type t = anonymous_interface_579
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _WebGLFramebuffer [@@js.get "prototype"]
    val set_prototype: t -> _WebGLFramebuffer -> unit [@@js.set "prototype"]
    val create: t -> _WebGLFramebuffer [@@js.apply_newable]
  end
  module AnonymousInterface580 : sig
    type t = anonymous_interface_580
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _WebGLObject [@@js.get "prototype"]
    val set_prototype: t -> _WebGLObject -> unit [@@js.set "prototype"]
    val create: t -> _WebGLObject [@@js.apply_newable]
  end
  module AnonymousInterface581 : sig
    type t = anonymous_interface_581
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _WebGLProgram [@@js.get "prototype"]
    val set_prototype: t -> _WebGLProgram -> unit [@@js.set "prototype"]
    val create: t -> _WebGLProgram [@@js.apply_newable]
  end
  module AnonymousInterface582 : sig
    type t = anonymous_interface_582
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _WebGLQuery [@@js.get "prototype"]
    val set_prototype: t -> _WebGLQuery -> unit [@@js.set "prototype"]
    val create: t -> _WebGLQuery [@@js.apply_newable]
  end
  module AnonymousInterface583 : sig
    type t = anonymous_interface_583
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _WebGLRenderbuffer [@@js.get "prototype"]
    val set_prototype: t -> _WebGLRenderbuffer -> unit [@@js.set "prototype"]
    val create: t -> _WebGLRenderbuffer [@@js.apply_newable]
  end
  module AnonymousInterface584 : sig
    type t = anonymous_interface_584
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _WebGLRenderingContext [@@js.get "prototype"]
    val set_prototype: t -> _WebGLRenderingContext -> unit [@@js.set "prototype"]
    val create: t -> _WebGLRenderingContext [@@js.apply_newable]
    val get_ACTIVE_ATTRIBUTES: t -> _GLenum [@@js.get "ACTIVE_ATTRIBUTES"]
    val get_ACTIVE_TEXTURE: t -> _GLenum [@@js.get "ACTIVE_TEXTURE"]
    val get_ACTIVE_UNIFORMS: t -> _GLenum [@@js.get "ACTIVE_UNIFORMS"]
    val get_ALIASED_LINE_WIDTH_RANGE: t -> _GLenum [@@js.get "ALIASED_LINE_WIDTH_RANGE"]
    val get_ALIASED_POINT_SIZE_RANGE: t -> _GLenum [@@js.get "ALIASED_POINT_SIZE_RANGE"]
    val get_ALPHA: t -> _GLenum [@@js.get "ALPHA"]
    val get_ALPHA_BITS: t -> _GLenum [@@js.get "ALPHA_BITS"]
    val get_ALWAYS: t -> _GLenum [@@js.get "ALWAYS"]
    val get_ARRAY_BUFFER: t -> _GLenum [@@js.get "ARRAY_BUFFER"]
    val get_ARRAY_BUFFER_BINDING: t -> _GLenum [@@js.get "ARRAY_BUFFER_BINDING"]
    val get_ATTACHED_SHADERS: t -> _GLenum [@@js.get "ATTACHED_SHADERS"]
    val get_BACK: t -> _GLenum [@@js.get "BACK"]
    val get_BLEND: t -> _GLenum [@@js.get "BLEND"]
    val get_BLEND_COLOR: t -> _GLenum [@@js.get "BLEND_COLOR"]
    val get_BLEND_DST_ALPHA: t -> _GLenum [@@js.get "BLEND_DST_ALPHA"]
    val get_BLEND_DST_RGB: t -> _GLenum [@@js.get "BLEND_DST_RGB"]
    val get_BLEND_EQUATION: t -> _GLenum [@@js.get "BLEND_EQUATION"]
    val get_BLEND_EQUATION_ALPHA: t -> _GLenum [@@js.get "BLEND_EQUATION_ALPHA"]
    val get_BLEND_EQUATION_RGB: t -> _GLenum [@@js.get "BLEND_EQUATION_RGB"]
    val get_BLEND_SRC_ALPHA: t -> _GLenum [@@js.get "BLEND_SRC_ALPHA"]
    val get_BLEND_SRC_RGB: t -> _GLenum [@@js.get "BLEND_SRC_RGB"]
    val get_BLUE_BITS: t -> _GLenum [@@js.get "BLUE_BITS"]
    val get_BOOL: t -> _GLenum [@@js.get "BOOL"]
    val get_BOOL_VEC2: t -> _GLenum [@@js.get "BOOL_VEC2"]
    val get_BOOL_VEC3: t -> _GLenum [@@js.get "BOOL_VEC3"]
    val get_BOOL_VEC4: t -> _GLenum [@@js.get "BOOL_VEC4"]
    val get_BROWSER_DEFAULT_WEBGL: t -> _GLenum [@@js.get "BROWSER_DEFAULT_WEBGL"]
    val get_BUFFER_SIZE: t -> _GLenum [@@js.get "BUFFER_SIZE"]
    val get_BUFFER_USAGE: t -> _GLenum [@@js.get "BUFFER_USAGE"]
    val get_BYTE: t -> _GLenum [@@js.get "BYTE"]
    val get_CCW: t -> _GLenum [@@js.get "CCW"]
    val get_CLAMP_TO_EDGE: t -> _GLenum [@@js.get "CLAMP_TO_EDGE"]
    val get_COLOR_ATTACHMENT0: t -> _GLenum [@@js.get "COLOR_ATTACHMENT0"]
    val get_COLOR_BUFFER_BIT: t -> _GLenum [@@js.get "COLOR_BUFFER_BIT"]
    val get_COLOR_CLEAR_VALUE: t -> _GLenum [@@js.get "COLOR_CLEAR_VALUE"]
    val get_COLOR_WRITEMASK: t -> _GLenum [@@js.get "COLOR_WRITEMASK"]
    val get_COMPILE_STATUS: t -> _GLenum [@@js.get "COMPILE_STATUS"]
    val get_COMPRESSED_TEXTURE_FORMATS: t -> _GLenum [@@js.get "COMPRESSED_TEXTURE_FORMATS"]
    val get_CONSTANT_ALPHA: t -> _GLenum [@@js.get "CONSTANT_ALPHA"]
    val get_CONSTANT_COLOR: t -> _GLenum [@@js.get "CONSTANT_COLOR"]
    val get_CONTEXT_LOST_WEBGL: t -> _GLenum [@@js.get "CONTEXT_LOST_WEBGL"]
    val get_CULL_FACE: t -> _GLenum [@@js.get "CULL_FACE"]
    val get_CULL_FACE_MODE: t -> _GLenum [@@js.get "CULL_FACE_MODE"]
    val get_CURRENT_PROGRAM: t -> _GLenum [@@js.get "CURRENT_PROGRAM"]
    val get_CURRENT_VERTEX_ATTRIB: t -> _GLenum [@@js.get "CURRENT_VERTEX_ATTRIB"]
    val get_CW: t -> _GLenum [@@js.get "CW"]
    val get_DECR: t -> _GLenum [@@js.get "DECR"]
    val get_DECR_WRAP: t -> _GLenum [@@js.get "DECR_WRAP"]
    val get_DELETE_STATUS: t -> _GLenum [@@js.get "DELETE_STATUS"]
    val get_DEPTH_ATTACHMENT: t -> _GLenum [@@js.get "DEPTH_ATTACHMENT"]
    val get_DEPTH_BITS: t -> _GLenum [@@js.get "DEPTH_BITS"]
    val get_DEPTH_BUFFER_BIT: t -> _GLenum [@@js.get "DEPTH_BUFFER_BIT"]
    val get_DEPTH_CLEAR_VALUE: t -> _GLenum [@@js.get "DEPTH_CLEAR_VALUE"]
    val get_DEPTH_COMPONENT: t -> _GLenum [@@js.get "DEPTH_COMPONENT"]
    val get_DEPTH_COMPONENT16: t -> _GLenum [@@js.get "DEPTH_COMPONENT16"]
    val get_DEPTH_FUNC: t -> _GLenum [@@js.get "DEPTH_FUNC"]
    val get_DEPTH_RANGE: t -> _GLenum [@@js.get "DEPTH_RANGE"]
    val get_DEPTH_STENCIL: t -> _GLenum [@@js.get "DEPTH_STENCIL"]
    val get_DEPTH_STENCIL_ATTACHMENT: t -> _GLenum [@@js.get "DEPTH_STENCIL_ATTACHMENT"]
    val get_DEPTH_TEST: t -> _GLenum [@@js.get "DEPTH_TEST"]
    val get_DEPTH_WRITEMASK: t -> _GLenum [@@js.get "DEPTH_WRITEMASK"]
    val get_DITHER: t -> _GLenum [@@js.get "DITHER"]
    val get_DONT_CARE: t -> _GLenum [@@js.get "DONT_CARE"]
    val get_DST_ALPHA: t -> _GLenum [@@js.get "DST_ALPHA"]
    val get_DST_COLOR: t -> _GLenum [@@js.get "DST_COLOR"]
    val get_DYNAMIC_DRAW: t -> _GLenum [@@js.get "DYNAMIC_DRAW"]
    val get_ELEMENT_ARRAY_BUFFER: t -> _GLenum [@@js.get "ELEMENT_ARRAY_BUFFER"]
    val get_ELEMENT_ARRAY_BUFFER_BINDING: t -> _GLenum [@@js.get "ELEMENT_ARRAY_BUFFER_BINDING"]
    val get_EQUAL: t -> _GLenum [@@js.get "EQUAL"]
    val get_FASTEST: t -> _GLenum [@@js.get "FASTEST"]
    val get_FLOAT: t -> _GLenum [@@js.get "FLOAT"]
    val get_FLOAT_MAT2: t -> _GLenum [@@js.get "FLOAT_MAT2"]
    val get_FLOAT_MAT3: t -> _GLenum [@@js.get "FLOAT_MAT3"]
    val get_FLOAT_MAT4: t -> _GLenum [@@js.get "FLOAT_MAT4"]
    val get_FLOAT_VEC2: t -> _GLenum [@@js.get "FLOAT_VEC2"]
    val get_FLOAT_VEC3: t -> _GLenum [@@js.get "FLOAT_VEC3"]
    val get_FLOAT_VEC4: t -> _GLenum [@@js.get "FLOAT_VEC4"]
    val get_FRAGMENT_SHADER: t -> _GLenum [@@js.get "FRAGMENT_SHADER"]
    val get_FRAMEBUFFER: t -> _GLenum [@@js.get "FRAMEBUFFER"]
    val get_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: t -> _GLenum [@@js.get "FRAMEBUFFER_ATTACHMENT_OBJECT_NAME"]
    val get_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: t -> _GLenum [@@js.get "FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE"]
    val get_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: t -> _GLenum [@@js.get "FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE"]
    val get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: t -> _GLenum [@@js.get "FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL"]
    val get_FRAMEBUFFER_BINDING: t -> _GLenum [@@js.get "FRAMEBUFFER_BINDING"]
    val get_FRAMEBUFFER_COMPLETE: t -> _GLenum [@@js.get "FRAMEBUFFER_COMPLETE"]
    val get_FRAMEBUFFER_INCOMPLETE_ATTACHMENT: t -> _GLenum [@@js.get "FRAMEBUFFER_INCOMPLETE_ATTACHMENT"]
    val get_FRAMEBUFFER_INCOMPLETE_DIMENSIONS: t -> _GLenum [@@js.get "FRAMEBUFFER_INCOMPLETE_DIMENSIONS"]
    val get_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: t -> _GLenum [@@js.get "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"]
    val get_FRAMEBUFFER_UNSUPPORTED: t -> _GLenum [@@js.get "FRAMEBUFFER_UNSUPPORTED"]
    val get_FRONT: t -> _GLenum [@@js.get "FRONT"]
    val get_FRONT_AND_BACK: t -> _GLenum [@@js.get "FRONT_AND_BACK"]
    val get_FRONT_FACE: t -> _GLenum [@@js.get "FRONT_FACE"]
    val get_FUNC_ADD: t -> _GLenum [@@js.get "FUNC_ADD"]
    val get_FUNC_REVERSE_SUBTRACT: t -> _GLenum [@@js.get "FUNC_REVERSE_SUBTRACT"]
    val get_FUNC_SUBTRACT: t -> _GLenum [@@js.get "FUNC_SUBTRACT"]
    val get_GENERATE_MIPMAP_HINT: t -> _GLenum [@@js.get "GENERATE_MIPMAP_HINT"]
    val get_GEQUAL: t -> _GLenum [@@js.get "GEQUAL"]
    val get_GREATER: t -> _GLenum [@@js.get "GREATER"]
    val get_GREEN_BITS: t -> _GLenum [@@js.get "GREEN_BITS"]
    val get_HIGH_FLOAT: t -> _GLenum [@@js.get "HIGH_FLOAT"]
    val get_HIGH_INT: t -> _GLenum [@@js.get "HIGH_INT"]
    val get_IMPLEMENTATION_COLOR_READ_FORMAT: t -> _GLenum [@@js.get "IMPLEMENTATION_COLOR_READ_FORMAT"]
    val get_IMPLEMENTATION_COLOR_READ_TYPE: t -> _GLenum [@@js.get "IMPLEMENTATION_COLOR_READ_TYPE"]
    val get_INCR: t -> _GLenum [@@js.get "INCR"]
    val get_INCR_WRAP: t -> _GLenum [@@js.get "INCR_WRAP"]
    val get_INT: t -> _GLenum [@@js.get "INT"]
    val get_INT_VEC2: t -> _GLenum [@@js.get "INT_VEC2"]
    val get_INT_VEC3: t -> _GLenum [@@js.get "INT_VEC3"]
    val get_INT_VEC4: t -> _GLenum [@@js.get "INT_VEC4"]
    val get_INVALID_ENUM: t -> _GLenum [@@js.get "INVALID_ENUM"]
    val get_INVALID_FRAMEBUFFER_OPERATION: t -> _GLenum [@@js.get "INVALID_FRAMEBUFFER_OPERATION"]
    val get_INVALID_OPERATION: t -> _GLenum [@@js.get "INVALID_OPERATION"]
    val get_INVALID_VALUE: t -> _GLenum [@@js.get "INVALID_VALUE"]
    val get_INVERT: t -> _GLenum [@@js.get "INVERT"]
    val get_KEEP: t -> _GLenum [@@js.get "KEEP"]
    val get_LEQUAL: t -> _GLenum [@@js.get "LEQUAL"]
    val get_LESS: t -> _GLenum [@@js.get "LESS"]
    val get_LINEAR: t -> _GLenum [@@js.get "LINEAR"]
    val get_LINEAR_MIPMAP_LINEAR: t -> _GLenum [@@js.get "LINEAR_MIPMAP_LINEAR"]
    val get_LINEAR_MIPMAP_NEAREST: t -> _GLenum [@@js.get "LINEAR_MIPMAP_NEAREST"]
    val get_LINES: t -> _GLenum [@@js.get "LINES"]
    val get_LINE_LOOP: t -> _GLenum [@@js.get "LINE_LOOP"]
    val get_LINE_STRIP: t -> _GLenum [@@js.get "LINE_STRIP"]
    val get_LINE_WIDTH: t -> _GLenum [@@js.get "LINE_WIDTH"]
    val get_LINK_STATUS: t -> _GLenum [@@js.get "LINK_STATUS"]
    val get_LOW_FLOAT: t -> _GLenum [@@js.get "LOW_FLOAT"]
    val get_LOW_INT: t -> _GLenum [@@js.get "LOW_INT"]
    val get_LUMINANCE: t -> _GLenum [@@js.get "LUMINANCE"]
    val get_LUMINANCE_ALPHA: t -> _GLenum [@@js.get "LUMINANCE_ALPHA"]
    val get_MAX_COMBINED_TEXTURE_IMAGE_UNITS: t -> _GLenum [@@js.get "MAX_COMBINED_TEXTURE_IMAGE_UNITS"]
    val get_MAX_CUBE_MAP_TEXTURE_SIZE: t -> _GLenum [@@js.get "MAX_CUBE_MAP_TEXTURE_SIZE"]
    val get_MAX_FRAGMENT_UNIFORM_VECTORS: t -> _GLenum [@@js.get "MAX_FRAGMENT_UNIFORM_VECTORS"]
    val get_MAX_RENDERBUFFER_SIZE: t -> _GLenum [@@js.get "MAX_RENDERBUFFER_SIZE"]
    val get_MAX_TEXTURE_IMAGE_UNITS: t -> _GLenum [@@js.get "MAX_TEXTURE_IMAGE_UNITS"]
    val get_MAX_TEXTURE_SIZE: t -> _GLenum [@@js.get "MAX_TEXTURE_SIZE"]
    val get_MAX_VARYING_VECTORS: t -> _GLenum [@@js.get "MAX_VARYING_VECTORS"]
    val get_MAX_VERTEX_ATTRIBS: t -> _GLenum [@@js.get "MAX_VERTEX_ATTRIBS"]
    val get_MAX_VERTEX_TEXTURE_IMAGE_UNITS: t -> _GLenum [@@js.get "MAX_VERTEX_TEXTURE_IMAGE_UNITS"]
    val get_MAX_VERTEX_UNIFORM_VECTORS: t -> _GLenum [@@js.get "MAX_VERTEX_UNIFORM_VECTORS"]
    val get_MAX_VIEWPORT_DIMS: t -> _GLenum [@@js.get "MAX_VIEWPORT_DIMS"]
    val get_MEDIUM_FLOAT: t -> _GLenum [@@js.get "MEDIUM_FLOAT"]
    val get_MEDIUM_INT: t -> _GLenum [@@js.get "MEDIUM_INT"]
    val get_MIRRORED_REPEAT: t -> _GLenum [@@js.get "MIRRORED_REPEAT"]
    val get_NEAREST: t -> _GLenum [@@js.get "NEAREST"]
    val get_NEAREST_MIPMAP_LINEAR: t -> _GLenum [@@js.get "NEAREST_MIPMAP_LINEAR"]
    val get_NEAREST_MIPMAP_NEAREST: t -> _GLenum [@@js.get "NEAREST_MIPMAP_NEAREST"]
    val get_NEVER: t -> _GLenum [@@js.get "NEVER"]
    val get_NICEST: t -> _GLenum [@@js.get "NICEST"]
    val get_NONE: t -> _GLenum [@@js.get "NONE"]
    val get_NOTEQUAL: t -> _GLenum [@@js.get "NOTEQUAL"]
    val get_NO_ERROR: t -> _GLenum [@@js.get "NO_ERROR"]
    val get_ONE: t -> _GLenum [@@js.get "ONE"]
    val get_ONE_MINUS_CONSTANT_ALPHA: t -> _GLenum [@@js.get "ONE_MINUS_CONSTANT_ALPHA"]
    val get_ONE_MINUS_CONSTANT_COLOR: t -> _GLenum [@@js.get "ONE_MINUS_CONSTANT_COLOR"]
    val get_ONE_MINUS_DST_ALPHA: t -> _GLenum [@@js.get "ONE_MINUS_DST_ALPHA"]
    val get_ONE_MINUS_DST_COLOR: t -> _GLenum [@@js.get "ONE_MINUS_DST_COLOR"]
    val get_ONE_MINUS_SRC_ALPHA: t -> _GLenum [@@js.get "ONE_MINUS_SRC_ALPHA"]
    val get_ONE_MINUS_SRC_COLOR: t -> _GLenum [@@js.get "ONE_MINUS_SRC_COLOR"]
    val get_OUT_OF_MEMORY: t -> _GLenum [@@js.get "OUT_OF_MEMORY"]
    val get_PACK_ALIGNMENT: t -> _GLenum [@@js.get "PACK_ALIGNMENT"]
    val get_POINTS: t -> _GLenum [@@js.get "POINTS"]
    val get_POLYGON_OFFSET_FACTOR: t -> _GLenum [@@js.get "POLYGON_OFFSET_FACTOR"]
    val get_POLYGON_OFFSET_FILL: t -> _GLenum [@@js.get "POLYGON_OFFSET_FILL"]
    val get_POLYGON_OFFSET_UNITS: t -> _GLenum [@@js.get "POLYGON_OFFSET_UNITS"]
    val get_RED_BITS: t -> _GLenum [@@js.get "RED_BITS"]
    val get_RENDERBUFFER: t -> _GLenum [@@js.get "RENDERBUFFER"]
    val get_RENDERBUFFER_ALPHA_SIZE: t -> _GLenum [@@js.get "RENDERBUFFER_ALPHA_SIZE"]
    val get_RENDERBUFFER_BINDING: t -> _GLenum [@@js.get "RENDERBUFFER_BINDING"]
    val get_RENDERBUFFER_BLUE_SIZE: t -> _GLenum [@@js.get "RENDERBUFFER_BLUE_SIZE"]
    val get_RENDERBUFFER_DEPTH_SIZE: t -> _GLenum [@@js.get "RENDERBUFFER_DEPTH_SIZE"]
    val get_RENDERBUFFER_GREEN_SIZE: t -> _GLenum [@@js.get "RENDERBUFFER_GREEN_SIZE"]
    val get_RENDERBUFFER_HEIGHT: t -> _GLenum [@@js.get "RENDERBUFFER_HEIGHT"]
    val get_RENDERBUFFER_INTERNAL_FORMAT: t -> _GLenum [@@js.get "RENDERBUFFER_INTERNAL_FORMAT"]
    val get_RENDERBUFFER_RED_SIZE: t -> _GLenum [@@js.get "RENDERBUFFER_RED_SIZE"]
    val get_RENDERBUFFER_STENCIL_SIZE: t -> _GLenum [@@js.get "RENDERBUFFER_STENCIL_SIZE"]
    val get_RENDERBUFFER_WIDTH: t -> _GLenum [@@js.get "RENDERBUFFER_WIDTH"]
    val get_RENDERER: t -> _GLenum [@@js.get "RENDERER"]
    val get_REPEAT: t -> _GLenum [@@js.get "REPEAT"]
    val get_REPLACE: t -> _GLenum [@@js.get "REPLACE"]
    val get_RGB: t -> _GLenum [@@js.get "RGB"]
    val get_RGB565: t -> _GLenum [@@js.get "RGB565"]
    val get_RGB5_A1: t -> _GLenum [@@js.get "RGB5_A1"]
    val get_RGBA: t -> _GLenum [@@js.get "RGBA"]
    val get_RGBA4: t -> _GLenum [@@js.get "RGBA4"]
    val get_SAMPLER_2D: t -> _GLenum [@@js.get "SAMPLER_2D"]
    val get_SAMPLER_CUBE: t -> _GLenum [@@js.get "SAMPLER_CUBE"]
    val get_SAMPLES: t -> _GLenum [@@js.get "SAMPLES"]
    val get_SAMPLE_ALPHA_TO_COVERAGE: t -> _GLenum [@@js.get "SAMPLE_ALPHA_TO_COVERAGE"]
    val get_SAMPLE_BUFFERS: t -> _GLenum [@@js.get "SAMPLE_BUFFERS"]
    val get_SAMPLE_COVERAGE: t -> _GLenum [@@js.get "SAMPLE_COVERAGE"]
    val get_SAMPLE_COVERAGE_INVERT: t -> _GLenum [@@js.get "SAMPLE_COVERAGE_INVERT"]
    val get_SAMPLE_COVERAGE_VALUE: t -> _GLenum [@@js.get "SAMPLE_COVERAGE_VALUE"]
    val get_SCISSOR_BOX: t -> _GLenum [@@js.get "SCISSOR_BOX"]
    val get_SCISSOR_TEST: t -> _GLenum [@@js.get "SCISSOR_TEST"]
    val get_SHADER_TYPE: t -> _GLenum [@@js.get "SHADER_TYPE"]
    val get_SHADING_LANGUAGE_VERSION: t -> _GLenum [@@js.get "SHADING_LANGUAGE_VERSION"]
    val get_SHORT: t -> _GLenum [@@js.get "SHORT"]
    val get_SRC_ALPHA: t -> _GLenum [@@js.get "SRC_ALPHA"]
    val get_SRC_ALPHA_SATURATE: t -> _GLenum [@@js.get "SRC_ALPHA_SATURATE"]
    val get_SRC_COLOR: t -> _GLenum [@@js.get "SRC_COLOR"]
    val get_STATIC_DRAW: t -> _GLenum [@@js.get "STATIC_DRAW"]
    val get_STENCIL_ATTACHMENT: t -> _GLenum [@@js.get "STENCIL_ATTACHMENT"]
    val get_STENCIL_BACK_FAIL: t -> _GLenum [@@js.get "STENCIL_BACK_FAIL"]
    val get_STENCIL_BACK_FUNC: t -> _GLenum [@@js.get "STENCIL_BACK_FUNC"]
    val get_STENCIL_BACK_PASS_DEPTH_FAIL: t -> _GLenum [@@js.get "STENCIL_BACK_PASS_DEPTH_FAIL"]
    val get_STENCIL_BACK_PASS_DEPTH_PASS: t -> _GLenum [@@js.get "STENCIL_BACK_PASS_DEPTH_PASS"]
    val get_STENCIL_BACK_REF: t -> _GLenum [@@js.get "STENCIL_BACK_REF"]
    val get_STENCIL_BACK_VALUE_MASK: t -> _GLenum [@@js.get "STENCIL_BACK_VALUE_MASK"]
    val get_STENCIL_BACK_WRITEMASK: t -> _GLenum [@@js.get "STENCIL_BACK_WRITEMASK"]
    val get_STENCIL_BITS: t -> _GLenum [@@js.get "STENCIL_BITS"]
    val get_STENCIL_BUFFER_BIT: t -> _GLenum [@@js.get "STENCIL_BUFFER_BIT"]
    val get_STENCIL_CLEAR_VALUE: t -> _GLenum [@@js.get "STENCIL_CLEAR_VALUE"]
    val get_STENCIL_FAIL: t -> _GLenum [@@js.get "STENCIL_FAIL"]
    val get_STENCIL_FUNC: t -> _GLenum [@@js.get "STENCIL_FUNC"]
    val get_STENCIL_INDEX8: t -> _GLenum [@@js.get "STENCIL_INDEX8"]
    val get_STENCIL_PASS_DEPTH_FAIL: t -> _GLenum [@@js.get "STENCIL_PASS_DEPTH_FAIL"]
    val get_STENCIL_PASS_DEPTH_PASS: t -> _GLenum [@@js.get "STENCIL_PASS_DEPTH_PASS"]
    val get_STENCIL_REF: t -> _GLenum [@@js.get "STENCIL_REF"]
    val get_STENCIL_TEST: t -> _GLenum [@@js.get "STENCIL_TEST"]
    val get_STENCIL_VALUE_MASK: t -> _GLenum [@@js.get "STENCIL_VALUE_MASK"]
    val get_STENCIL_WRITEMASK: t -> _GLenum [@@js.get "STENCIL_WRITEMASK"]
    val get_STREAM_DRAW: t -> _GLenum [@@js.get "STREAM_DRAW"]
    val get_SUBPIXEL_BITS: t -> _GLenum [@@js.get "SUBPIXEL_BITS"]
    val get_TEXTURE: t -> _GLenum [@@js.get "TEXTURE"]
    val get_TEXTURE0: t -> _GLenum [@@js.get "TEXTURE0"]
    val get_TEXTURE1: t -> _GLenum [@@js.get "TEXTURE1"]
    val get_TEXTURE10: t -> _GLenum [@@js.get "TEXTURE10"]
    val get_TEXTURE11: t -> _GLenum [@@js.get "TEXTURE11"]
    val get_TEXTURE12: t -> _GLenum [@@js.get "TEXTURE12"]
    val get_TEXTURE13: t -> _GLenum [@@js.get "TEXTURE13"]
    val get_TEXTURE14: t -> _GLenum [@@js.get "TEXTURE14"]
    val get_TEXTURE15: t -> _GLenum [@@js.get "TEXTURE15"]
    val get_TEXTURE16: t -> _GLenum [@@js.get "TEXTURE16"]
    val get_TEXTURE17: t -> _GLenum [@@js.get "TEXTURE17"]
    val get_TEXTURE18: t -> _GLenum [@@js.get "TEXTURE18"]
    val get_TEXTURE19: t -> _GLenum [@@js.get "TEXTURE19"]
    val get_TEXTURE2: t -> _GLenum [@@js.get "TEXTURE2"]
    val get_TEXTURE20: t -> _GLenum [@@js.get "TEXTURE20"]
    val get_TEXTURE21: t -> _GLenum [@@js.get "TEXTURE21"]
    val get_TEXTURE22: t -> _GLenum [@@js.get "TEXTURE22"]
    val get_TEXTURE23: t -> _GLenum [@@js.get "TEXTURE23"]
    val get_TEXTURE24: t -> _GLenum [@@js.get "TEXTURE24"]
    val get_TEXTURE25: t -> _GLenum [@@js.get "TEXTURE25"]
    val get_TEXTURE26: t -> _GLenum [@@js.get "TEXTURE26"]
    val get_TEXTURE27: t -> _GLenum [@@js.get "TEXTURE27"]
    val get_TEXTURE28: t -> _GLenum [@@js.get "TEXTURE28"]
    val get_TEXTURE29: t -> _GLenum [@@js.get "TEXTURE29"]
    val get_TEXTURE3: t -> _GLenum [@@js.get "TEXTURE3"]
    val get_TEXTURE30: t -> _GLenum [@@js.get "TEXTURE30"]
    val get_TEXTURE31: t -> _GLenum [@@js.get "TEXTURE31"]
    val get_TEXTURE4: t -> _GLenum [@@js.get "TEXTURE4"]
    val get_TEXTURE5: t -> _GLenum [@@js.get "TEXTURE5"]
    val get_TEXTURE6: t -> _GLenum [@@js.get "TEXTURE6"]
    val get_TEXTURE7: t -> _GLenum [@@js.get "TEXTURE7"]
    val get_TEXTURE8: t -> _GLenum [@@js.get "TEXTURE8"]
    val get_TEXTURE9: t -> _GLenum [@@js.get "TEXTURE9"]
    val get_TEXTURE_2D: t -> _GLenum [@@js.get "TEXTURE_2D"]
    val get_TEXTURE_BINDING_2D: t -> _GLenum [@@js.get "TEXTURE_BINDING_2D"]
    val get_TEXTURE_BINDING_CUBE_MAP: t -> _GLenum [@@js.get "TEXTURE_BINDING_CUBE_MAP"]
    val get_TEXTURE_CUBE_MAP: t -> _GLenum [@@js.get "TEXTURE_CUBE_MAP"]
    val get_TEXTURE_CUBE_MAP_NEGATIVE_X: t -> _GLenum [@@js.get "TEXTURE_CUBE_MAP_NEGATIVE_X"]
    val get_TEXTURE_CUBE_MAP_NEGATIVE_Y: t -> _GLenum [@@js.get "TEXTURE_CUBE_MAP_NEGATIVE_Y"]
    val get_TEXTURE_CUBE_MAP_NEGATIVE_Z: t -> _GLenum [@@js.get "TEXTURE_CUBE_MAP_NEGATIVE_Z"]
    val get_TEXTURE_CUBE_MAP_POSITIVE_X: t -> _GLenum [@@js.get "TEXTURE_CUBE_MAP_POSITIVE_X"]
    val get_TEXTURE_CUBE_MAP_POSITIVE_Y: t -> _GLenum [@@js.get "TEXTURE_CUBE_MAP_POSITIVE_Y"]
    val get_TEXTURE_CUBE_MAP_POSITIVE_Z: t -> _GLenum [@@js.get "TEXTURE_CUBE_MAP_POSITIVE_Z"]
    val get_TEXTURE_MAG_FILTER: t -> _GLenum [@@js.get "TEXTURE_MAG_FILTER"]
    val get_TEXTURE_MIN_FILTER: t -> _GLenum [@@js.get "TEXTURE_MIN_FILTER"]
    val get_TEXTURE_WRAP_S: t -> _GLenum [@@js.get "TEXTURE_WRAP_S"]
    val get_TEXTURE_WRAP_T: t -> _GLenum [@@js.get "TEXTURE_WRAP_T"]
    val get_TRIANGLES: t -> _GLenum [@@js.get "TRIANGLES"]
    val get_TRIANGLE_FAN: t -> _GLenum [@@js.get "TRIANGLE_FAN"]
    val get_TRIANGLE_STRIP: t -> _GLenum [@@js.get "TRIANGLE_STRIP"]
    val get_UNPACK_ALIGNMENT: t -> _GLenum [@@js.get "UNPACK_ALIGNMENT"]
    val get_UNPACK_COLORSPACE_CONVERSION_WEBGL: t -> _GLenum [@@js.get "UNPACK_COLORSPACE_CONVERSION_WEBGL"]
    val get_UNPACK_FLIP_Y_WEBGL: t -> _GLenum [@@js.get "UNPACK_FLIP_Y_WEBGL"]
    val get_UNPACK_PREMULTIPLY_ALPHA_WEBGL: t -> _GLenum [@@js.get "UNPACK_PREMULTIPLY_ALPHA_WEBGL"]
    val get_UNSIGNED_BYTE: t -> _GLenum [@@js.get "UNSIGNED_BYTE"]
    val get_UNSIGNED_INT: t -> _GLenum [@@js.get "UNSIGNED_INT"]
    val get_UNSIGNED_SHORT: t -> _GLenum [@@js.get "UNSIGNED_SHORT"]
    val get_UNSIGNED_SHORT_4_4_4_4: t -> _GLenum [@@js.get "UNSIGNED_SHORT_4_4_4_4"]
    val get_UNSIGNED_SHORT_5_5_5_1: t -> _GLenum [@@js.get "UNSIGNED_SHORT_5_5_5_1"]
    val get_UNSIGNED_SHORT_5_6_5: t -> _GLenum [@@js.get "UNSIGNED_SHORT_5_6_5"]
    val get_VALIDATE_STATUS: t -> _GLenum [@@js.get "VALIDATE_STATUS"]
    val get_VENDOR: t -> _GLenum [@@js.get "VENDOR"]
    val get_VERSION: t -> _GLenum [@@js.get "VERSION"]
    val get_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: t -> _GLenum [@@js.get "VERTEX_ATTRIB_ARRAY_BUFFER_BINDING"]
    val get_VERTEX_ATTRIB_ARRAY_ENABLED: t -> _GLenum [@@js.get "VERTEX_ATTRIB_ARRAY_ENABLED"]
    val get_VERTEX_ATTRIB_ARRAY_NORMALIZED: t -> _GLenum [@@js.get "VERTEX_ATTRIB_ARRAY_NORMALIZED"]
    val get_VERTEX_ATTRIB_ARRAY_POINTER: t -> _GLenum [@@js.get "VERTEX_ATTRIB_ARRAY_POINTER"]
    val get_VERTEX_ATTRIB_ARRAY_SIZE: t -> _GLenum [@@js.get "VERTEX_ATTRIB_ARRAY_SIZE"]
    val get_VERTEX_ATTRIB_ARRAY_STRIDE: t -> _GLenum [@@js.get "VERTEX_ATTRIB_ARRAY_STRIDE"]
    val get_VERTEX_ATTRIB_ARRAY_TYPE: t -> _GLenum [@@js.get "VERTEX_ATTRIB_ARRAY_TYPE"]
    val get_VERTEX_SHADER: t -> _GLenum [@@js.get "VERTEX_SHADER"]
    val get_VIEWPORT: t -> _GLenum [@@js.get "VIEWPORT"]
    val get_ZERO: t -> _GLenum [@@js.get "ZERO"]
  end
  module AnonymousInterface585 : sig
    type t = anonymous_interface_585
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _WebGLSampler [@@js.get "prototype"]
    val set_prototype: t -> _WebGLSampler -> unit [@@js.set "prototype"]
    val create: t -> _WebGLSampler [@@js.apply_newable]
  end
  module AnonymousInterface586 : sig
    type t = anonymous_interface_586
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _WebGLShader [@@js.get "prototype"]
    val set_prototype: t -> _WebGLShader -> unit [@@js.set "prototype"]
    val create: t -> _WebGLShader [@@js.apply_newable]
  end
  module AnonymousInterface587 : sig
    type t = anonymous_interface_587
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _WebGLShaderPrecisionFormat [@@js.get "prototype"]
    val set_prototype: t -> _WebGLShaderPrecisionFormat -> unit [@@js.set "prototype"]
    val create: t -> _WebGLShaderPrecisionFormat [@@js.apply_newable]
  end
  module AnonymousInterface588 : sig
    type t = anonymous_interface_588
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _WebGLSync [@@js.get "prototype"]
    val set_prototype: t -> _WebGLSync -> unit [@@js.set "prototype"]
    val create: t -> _WebGLSync [@@js.apply_newable]
  end
  module AnonymousInterface589 : sig
    type t = anonymous_interface_589
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _WebGLTexture [@@js.get "prototype"]
    val set_prototype: t -> _WebGLTexture -> unit [@@js.set "prototype"]
    val create: t -> _WebGLTexture [@@js.apply_newable]
  end
  module AnonymousInterface590 : sig
    type t = anonymous_interface_590
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _WebGLTransformFeedback [@@js.get "prototype"]
    val set_prototype: t -> _WebGLTransformFeedback -> unit [@@js.set "prototype"]
    val create: t -> _WebGLTransformFeedback [@@js.apply_newable]
  end
  module AnonymousInterface591 : sig
    type t = anonymous_interface_591
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _WebGLUniformLocation [@@js.get "prototype"]
    val set_prototype: t -> _WebGLUniformLocation -> unit [@@js.set "prototype"]
    val create: t -> _WebGLUniformLocation [@@js.apply_newable]
  end
  module AnonymousInterface592 : sig
    type t = anonymous_interface_592
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _WebGLVertexArrayObject [@@js.get "prototype"]
    val set_prototype: t -> _WebGLVertexArrayObject -> unit [@@js.set "prototype"]
    val create: t -> _WebGLVertexArrayObject [@@js.apply_newable]
  end
  module AnonymousInterface593 : sig
    type t = anonymous_interface_593
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _WebKitPoint [@@js.get "prototype"]
    val set_prototype: t -> _WebKitPoint -> unit [@@js.set "prototype"]
    val create: t -> ?x:float -> ?y:float -> unit -> _WebKitPoint [@@js.apply_newable]
  end
  module AnonymousInterface594 : sig
    type t = anonymous_interface_594
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _WebSocket [@@js.get "prototype"]
    val set_prototype: t -> _WebSocket -> unit [@@js.set "prototype"]
    val create: t -> url:string -> ?protocols:string list or_string -> unit -> _WebSocket [@@js.apply_newable]
    val get_CLOSED: t -> float [@@js.get "CLOSED"]
    val get_CLOSING: t -> float [@@js.get "CLOSING"]
    val get_CONNECTING: t -> float [@@js.get "CONNECTING"]
    val get_OPEN: t -> float [@@js.get "OPEN"]
  end
  module AnonymousInterface595 : sig
    type t = anonymous_interface_595
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _WheelEvent [@@js.get "prototype"]
    val set_prototype: t -> _WheelEvent -> unit [@@js.set "prototype"]
    val create: t -> type_:string -> ?eventInitDict:_WheelEventInit -> unit -> _WheelEvent [@@js.apply_newable]
    val get_DOM_DELTA_LINE: t -> float [@@js.get "DOM_DELTA_LINE"]
    val get_DOM_DELTA_PAGE: t -> float [@@js.get "DOM_DELTA_PAGE"]
    val get_DOM_DELTA_PIXEL: t -> float [@@js.get "DOM_DELTA_PIXEL"]
  end
  module AnonymousInterface596 : sig
    type t = anonymous_interface_596
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _Window [@@js.get "prototype"]
    val set_prototype: t -> _Window -> unit [@@js.set "prototype"]
    val create: t -> _Window [@@js.apply_newable]
  end
  module AnonymousInterface597 : sig
    type t = anonymous_interface_597
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _Worker [@@js.get "prototype"]
    val set_prototype: t -> _Worker -> unit [@@js.set "prototype"]
    val create: t -> stringUrl:_URL or_string -> ?options:_WorkerOptions -> unit -> _Worker [@@js.apply_newable]
  end
  module AnonymousInterface598 : sig
    type t = anonymous_interface_598
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _Worklet [@@js.get "prototype"]
    val set_prototype: t -> _Worklet -> unit [@@js.set "prototype"]
    val create: t -> _Worklet [@@js.apply_newable]
  end
  module AnonymousInterface599 : sig
    type t = anonymous_interface_599
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> any _WritableStream [@@js.get "prototype"]
    val set_prototype: t -> any _WritableStream -> unit [@@js.set "prototype"]
    val create: t -> ?underlyingSink:'W _UnderlyingSink -> ?strategy:'W _QueuingStrategy -> unit -> 'W _WritableStream [@@js.apply_newable]
  end
  module AnonymousInterface600 : sig
    type t = anonymous_interface_600
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _XMLDocument [@@js.get "prototype"]
    val set_prototype: t -> _XMLDocument -> unit [@@js.set "prototype"]
    val create: t -> _XMLDocument [@@js.apply_newable]
  end
  module AnonymousInterface601 : sig
    type t = anonymous_interface_601
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _XMLHttpRequest [@@js.get "prototype"]
    val set_prototype: t -> _XMLHttpRequest -> unit [@@js.set "prototype"]
    val create: t -> _XMLHttpRequest [@@js.apply_newable]
    val get_DONE: t -> float [@@js.get "DONE"]
    val get_HEADERS_RECEIVED: t -> float [@@js.get "HEADERS_RECEIVED"]
    val get_LOADING: t -> float [@@js.get "LOADING"]
    val get_OPENED: t -> float [@@js.get "OPENED"]
    val get_UNSENT: t -> float [@@js.get "UNSENT"]
  end
  module AnonymousInterface602 : sig
    type t = anonymous_interface_602
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _XMLHttpRequestEventTarget [@@js.get "prototype"]
    val set_prototype: t -> _XMLHttpRequestEventTarget -> unit [@@js.set "prototype"]
    val create: t -> _XMLHttpRequestEventTarget [@@js.apply_newable]
  end
  module AnonymousInterface603 : sig
    type t = anonymous_interface_603
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _XMLHttpRequestUpload [@@js.get "prototype"]
    val set_prototype: t -> _XMLHttpRequestUpload -> unit [@@js.set "prototype"]
    val create: t -> _XMLHttpRequestUpload [@@js.apply_newable]
  end
  module AnonymousInterface604 : sig
    type t = anonymous_interface_604
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _XMLSerializer [@@js.get "prototype"]
    val set_prototype: t -> _XMLSerializer -> unit [@@js.set "prototype"]
    val create: t -> _XMLSerializer [@@js.apply_newable]
  end
  module AnonymousInterface605 : sig
    type t = anonymous_interface_605
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _XPathEvaluator [@@js.get "prototype"]
    val set_prototype: t -> _XPathEvaluator -> unit [@@js.set "prototype"]
    val create: t -> _XPathEvaluator [@@js.apply_newable]
  end
  module AnonymousInterface606 : sig
    type t = anonymous_interface_606
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _XPathExpression [@@js.get "prototype"]
    val set_prototype: t -> _XPathExpression -> unit [@@js.set "prototype"]
    val create: t -> _XPathExpression [@@js.apply_newable]
  end
  module AnonymousInterface607 : sig
    type t = anonymous_interface_607
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _XPathResult [@@js.get "prototype"]
    val set_prototype: t -> _XPathResult -> unit [@@js.set "prototype"]
    val create: t -> _XPathResult [@@js.apply_newable]
    val get_ANY_TYPE: t -> float [@@js.get "ANY_TYPE"]
    val get_ANY_UNORDERED_NODE_TYPE: t -> float [@@js.get "ANY_UNORDERED_NODE_TYPE"]
    val get_BOOLEAN_TYPE: t -> float [@@js.get "BOOLEAN_TYPE"]
    val get_FIRST_ORDERED_NODE_TYPE: t -> float [@@js.get "FIRST_ORDERED_NODE_TYPE"]
    val get_NUMBER_TYPE: t -> float [@@js.get "NUMBER_TYPE"]
    val get_ORDERED_NODE_ITERATOR_TYPE: t -> float [@@js.get "ORDERED_NODE_ITERATOR_TYPE"]
    val get_ORDERED_NODE_SNAPSHOT_TYPE: t -> float [@@js.get "ORDERED_NODE_SNAPSHOT_TYPE"]
    val get_STRING_TYPE: t -> float [@@js.get "STRING_TYPE"]
    val get_UNORDERED_NODE_ITERATOR_TYPE: t -> float [@@js.get "UNORDERED_NODE_ITERATOR_TYPE"]
    val get_UNORDERED_NODE_SNAPSHOT_TYPE: t -> float [@@js.get "UNORDERED_NODE_SNAPSHOT_TYPE"]
  end
  module AnonymousInterface608 : sig
    type t = anonymous_interface_608
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> _XSLTProcessor [@@js.get "prototype"]
    val set_prototype: t -> _XSLTProcessor -> unit [@@js.set "prototype"]
    val create: t -> _XSLTProcessor [@@js.apply_newable]
  end
  module AnonymousInterface609 : sig
    type t = anonymous_interface_609
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_prototype: t -> webkitRTCPeerConnection [@@js.get "prototype"]
    val set_prototype: t -> webkitRTCPeerConnection -> unit [@@js.set "prototype"]
    val create: t -> configuration:_RTCConfiguration -> webkitRTCPeerConnection [@@js.apply_newable]
  end
  module AnonymousInterface610 : sig
    type t = anonymous_interface_610
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_writable: t -> 'R _WritableStream [@@js.get "writable"]
    val set_writable: t -> 'R _WritableStream -> unit [@@js.set "writable"]
    val get_readable: t -> 'T _ReadableStream [@@js.get "readable"]
    val set_readable: t -> 'T _ReadableStream -> unit [@@js.set "readable"]
  end
  module AnonymousInterface611 : sig
    type t = anonymous_interface_611
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val lookupNamespaceURI: t -> prefix:string or_null -> string or_null [@@js.call "lookupNamespaceURI"]
  end
  module AnonymousInterface612 : sig
    type t = anonymous_interface_612
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val create: t -> ?src:string -> unit -> _HTMLAudioElement [@@js.apply_newable]
  end
  module AnonymousInterface613 : sig
    type t = anonymous_interface_613
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val create: t -> ?text:string -> ?value:string -> ?defaultSelected:bool -> ?selected:bool -> unit -> _HTMLOptionElement [@@js.apply_newable]
  end
  module AnonymousInterface614 : sig
    type t = anonymous_interface_614
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val create: t -> ?width:float -> ?height:float -> unit -> _HTMLImageElement [@@js.apply_newable]
  end
  module[@js.scope "Account"] Account : sig
    type t = _Account
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_displayName: t -> string [@@js.get "displayName"]
    val set_displayName: t -> string -> unit [@@js.set "displayName"]
    val get_id: t -> string [@@js.get "id"]
    val set_id: t -> string -> unit [@@js.set "id"]
    val get_imageURL: t -> string [@@js.get "imageURL"]
    val set_imageURL: t -> string -> unit [@@js.set "imageURL"]
    val get_name: t -> string [@@js.get "name"]
    val set_name: t -> string -> unit [@@js.set "name"]
    val get_rpDisplayName: t -> string [@@js.get "rpDisplayName"]
    val set_rpDisplayName: t -> string -> unit [@@js.set "rpDisplayName"]
  end
  module[@js.scope "AddEventListenerOptions"] AddEventListenerOptions : sig
    type t = _AddEventListenerOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_once: t -> bool [@@js.get "once"]
    val set_once: t -> bool -> unit [@@js.set "once"]
    val get_passive: t -> bool [@@js.get "passive"]
    val set_passive: t -> bool -> unit [@@js.set "passive"]
    val cast: t -> _EventListenerOptions [@@js.cast]
  end
  module[@js.scope "AesCbcParams"] AesCbcParams : sig
    type t = _AesCbcParams
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_iv: t -> ((((Float64Array.t_0, Int16Array.t_0, Int32Array.t_0, Int8Array.t_0, Uint16Array.t_0, Uint32Array.t_0, Uint8Array.t_0, Uint8ClampedArray.t_0) union8, Float32Array.t_0) or_, DataView.t_0) or_, ArrayBuffer.t_0) or_ [@@js.get "iv"]
    val set_iv: t -> ((((Float64Array.t_0, Int16Array.t_0, Int32Array.t_0, Int8Array.t_0, Uint16Array.t_0, Uint32Array.t_0, Uint8Array.t_0, Uint8ClampedArray.t_0) union8, Float32Array.t_0) or_, DataView.t_0) or_, ArrayBuffer.t_0) or_ -> unit [@@js.set "iv"]
    val cast: t -> _Algorithm [@@js.cast]
  end
  module[@js.scope "AesCtrParams"] AesCtrParams : sig
    type t = _AesCtrParams
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_counter: t -> ((((Float64Array.t_0, Int16Array.t_0, Int32Array.t_0, Int8Array.t_0, Uint16Array.t_0, Uint32Array.t_0, Uint8Array.t_0, Uint8ClampedArray.t_0) union8, Float32Array.t_0) or_, DataView.t_0) or_, ArrayBuffer.t_0) or_ [@@js.get "counter"]
    val set_counter: t -> ((((Float64Array.t_0, Int16Array.t_0, Int32Array.t_0, Int8Array.t_0, Uint16Array.t_0, Uint32Array.t_0, Uint8Array.t_0, Uint8ClampedArray.t_0) union8, Float32Array.t_0) or_, DataView.t_0) or_, ArrayBuffer.t_0) or_ -> unit [@@js.set "counter"]
    val get_length: t -> float [@@js.get "length"]
    val set_length: t -> float -> unit [@@js.set "length"]
    val cast: t -> _Algorithm [@@js.cast]
  end
  module[@js.scope "AesDerivedKeyParams"] AesDerivedKeyParams : sig
    type t = _AesDerivedKeyParams
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_length: t -> float [@@js.get "length"]
    val set_length: t -> float -> unit [@@js.set "length"]
    val cast: t -> _Algorithm [@@js.cast]
  end
  module[@js.scope "AesGcmParams"] AesGcmParams : sig
    type t = _AesGcmParams
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_additionalData: t -> ((((Float64Array.t_0, Int16Array.t_0, Int32Array.t_0, Int8Array.t_0, Uint16Array.t_0, Uint32Array.t_0, Uint8Array.t_0, Uint8ClampedArray.t_0) union8, Float32Array.t_0) or_, DataView.t_0) or_, ArrayBuffer.t_0) or_ [@@js.get "additionalData"]
    val set_additionalData: t -> ((((Float64Array.t_0, Int16Array.t_0, Int32Array.t_0, Int8Array.t_0, Uint16Array.t_0, Uint32Array.t_0, Uint8Array.t_0, Uint8ClampedArray.t_0) union8, Float32Array.t_0) or_, DataView.t_0) or_, ArrayBuffer.t_0) or_ -> unit [@@js.set "additionalData"]
    val get_iv: t -> ((((Float64Array.t_0, Int16Array.t_0, Int32Array.t_0, Int8Array.t_0, Uint16Array.t_0, Uint32Array.t_0, Uint8Array.t_0, Uint8ClampedArray.t_0) union8, Float32Array.t_0) or_, DataView.t_0) or_, ArrayBuffer.t_0) or_ [@@js.get "iv"]
    val set_iv: t -> ((((Float64Array.t_0, Int16Array.t_0, Int32Array.t_0, Int8Array.t_0, Uint16Array.t_0, Uint32Array.t_0, Uint8Array.t_0, Uint8ClampedArray.t_0) union8, Float32Array.t_0) or_, DataView.t_0) or_, ArrayBuffer.t_0) or_ -> unit [@@js.set "iv"]
    val get_tagLength: t -> float [@@js.get "tagLength"]
    val set_tagLength: t -> float -> unit [@@js.set "tagLength"]
    val cast: t -> _Algorithm [@@js.cast]
  end
  module[@js.scope "AesKeyAlgorithm"] AesKeyAlgorithm : sig
    type t = _AesKeyAlgorithm
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_length: t -> float [@@js.get "length"]
    val set_length: t -> float -> unit [@@js.set "length"]
    val cast: t -> _KeyAlgorithm [@@js.cast]
  end
  module[@js.scope "AesKeyGenParams"] AesKeyGenParams : sig
    type t = _AesKeyGenParams
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_length: t -> float [@@js.get "length"]
    val set_length: t -> float -> unit [@@js.set "length"]
    val cast: t -> _Algorithm [@@js.cast]
  end
  module[@js.scope "Algorithm"] Algorithm : sig
    type t = _Algorithm
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_name: t -> string [@@js.get "name"]
    val set_name: t -> string -> unit [@@js.set "name"]
  end
  module[@js.scope "AnalyserOptions"] AnalyserOptions : sig
    type t = _AnalyserOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_fftSize: t -> float [@@js.get "fftSize"]
    val set_fftSize: t -> float -> unit [@@js.set "fftSize"]
    val get_maxDecibels: t -> float [@@js.get "maxDecibels"]
    val set_maxDecibels: t -> float -> unit [@@js.set "maxDecibels"]
    val get_minDecibels: t -> float [@@js.get "minDecibels"]
    val set_minDecibels: t -> float -> unit [@@js.set "minDecibels"]
    val get_smoothingTimeConstant: t -> float [@@js.get "smoothingTimeConstant"]
    val set_smoothingTimeConstant: t -> float -> unit [@@js.set "smoothingTimeConstant"]
    val cast: t -> _AudioNodeOptions [@@js.cast]
  end
  module[@js.scope "AnimationEventInit"] AnimationEventInit : sig
    type t = _AnimationEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_animationName: t -> string [@@js.get "animationName"]
    val set_animationName: t -> string -> unit [@@js.set "animationName"]
    val get_elapsedTime: t -> float [@@js.get "elapsedTime"]
    val set_elapsedTime: t -> float -> unit [@@js.set "elapsedTime"]
    val get_pseudoElement: t -> string [@@js.get "pseudoElement"]
    val set_pseudoElement: t -> string -> unit [@@js.set "pseudoElement"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "AnimationPlaybackEventInit"] AnimationPlaybackEventInit : sig
    type t = _AnimationPlaybackEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_currentTime: t -> float or_null [@@js.get "currentTime"]
    val set_currentTime: t -> float or_null -> unit [@@js.set "currentTime"]
    val get_timelineTime: t -> float or_null [@@js.get "timelineTime"]
    val set_timelineTime: t -> float or_null -> unit [@@js.set "timelineTime"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "AssertionOptions"] AssertionOptions : sig
    type t = _AssertionOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_allowList: t -> _ScopedCredentialDescriptor list [@@js.get "allowList"]
    val set_allowList: t -> _ScopedCredentialDescriptor list -> unit [@@js.set "allowList"]
    val get_extensions: t -> _WebAuthnExtensions [@@js.get "extensions"]
    val set_extensions: t -> _WebAuthnExtensions -> unit [@@js.set "extensions"]
    val get_rpId: t -> string [@@js.get "rpId"]
    val set_rpId: t -> string -> unit [@@js.set "rpId"]
    val get_timeoutSeconds: t -> float [@@js.get "timeoutSeconds"]
    val set_timeoutSeconds: t -> float -> unit [@@js.set "timeoutSeconds"]
  end
  module[@js.scope "AssignedNodesOptions"] AssignedNodesOptions : sig
    type t = _AssignedNodesOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_flatten: t -> bool [@@js.get "flatten"]
    val set_flatten: t -> bool -> unit [@@js.set "flatten"]
  end
  module[@js.scope "AudioBufferOptions"] AudioBufferOptions : sig
    type t = _AudioBufferOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_length: t -> float [@@js.get "length"]
    val set_length: t -> float -> unit [@@js.set "length"]
    val get_numberOfChannels: t -> float [@@js.get "numberOfChannels"]
    val set_numberOfChannels: t -> float -> unit [@@js.set "numberOfChannels"]
    val get_sampleRate: t -> float [@@js.get "sampleRate"]
    val set_sampleRate: t -> float -> unit [@@js.set "sampleRate"]
  end
  module[@js.scope "AudioBufferSourceOptions"] AudioBufferSourceOptions : sig
    type t = _AudioBufferSourceOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_buffer: t -> _AudioBuffer or_null [@@js.get "buffer"]
    val set_buffer: t -> _AudioBuffer or_null -> unit [@@js.set "buffer"]
    val get_detune: t -> float [@@js.get "detune"]
    val set_detune: t -> float -> unit [@@js.set "detune"]
    val get_loop: t -> bool [@@js.get "loop"]
    val set_loop: t -> bool -> unit [@@js.set "loop"]
    val get_loopEnd: t -> float [@@js.get "loopEnd"]
    val set_loopEnd: t -> float -> unit [@@js.set "loopEnd"]
    val get_loopStart: t -> float [@@js.get "loopStart"]
    val set_loopStart: t -> float -> unit [@@js.set "loopStart"]
    val get_playbackRate: t -> float [@@js.get "playbackRate"]
    val set_playbackRate: t -> float -> unit [@@js.set "playbackRate"]
  end
  module[@js.scope "AudioContextInfo"] AudioContextInfo : sig
    type t = _AudioContextInfo
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_currentTime: t -> float [@@js.get "currentTime"]
    val set_currentTime: t -> float -> unit [@@js.set "currentTime"]
    val get_sampleRate: t -> float [@@js.get "sampleRate"]
    val set_sampleRate: t -> float -> unit [@@js.set "sampleRate"]
  end
  module[@js.scope "AudioContextOptions"] AudioContextOptions : sig
    type t = _AudioContextOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_latencyHint: t -> _AudioContextLatencyCategory or_number [@@js.get "latencyHint"]
    val set_latencyHint: t -> _AudioContextLatencyCategory or_number -> unit [@@js.set "latencyHint"]
    val get_sampleRate: t -> float [@@js.get "sampleRate"]
    val set_sampleRate: t -> float -> unit [@@js.set "sampleRate"]
  end
  module[@js.scope "AudioNodeOptions"] AudioNodeOptions : sig
    type t = _AudioNodeOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_channelCount: t -> float [@@js.get "channelCount"]
    val set_channelCount: t -> float -> unit [@@js.set "channelCount"]
    val get_channelCountMode: t -> _ChannelCountMode [@@js.get "channelCountMode"]
    val set_channelCountMode: t -> _ChannelCountMode -> unit [@@js.set "channelCountMode"]
    val get_channelInterpretation: t -> _ChannelInterpretation [@@js.get "channelInterpretation"]
    val set_channelInterpretation: t -> _ChannelInterpretation -> unit [@@js.set "channelInterpretation"]
  end
  module[@js.scope "AudioParamDescriptor"] AudioParamDescriptor : sig
    type t = _AudioParamDescriptor
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_automationRate: t -> _AutomationRate [@@js.get "automationRate"]
    val set_automationRate: t -> _AutomationRate -> unit [@@js.set "automationRate"]
    val get_defaultValue: t -> float [@@js.get "defaultValue"]
    val set_defaultValue: t -> float -> unit [@@js.set "defaultValue"]
    val get_maxValue: t -> float [@@js.get "maxValue"]
    val set_maxValue: t -> float -> unit [@@js.set "maxValue"]
    val get_minValue: t -> float [@@js.get "minValue"]
    val set_minValue: t -> float -> unit [@@js.set "minValue"]
    val get_name: t -> string [@@js.get "name"]
    val set_name: t -> string -> unit [@@js.set "name"]
  end
  module[@js.scope "AudioProcessingEventInit"] AudioProcessingEventInit : sig
    type t = _AudioProcessingEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_inputBuffer: t -> _AudioBuffer [@@js.get "inputBuffer"]
    val set_inputBuffer: t -> _AudioBuffer -> unit [@@js.set "inputBuffer"]
    val get_outputBuffer: t -> _AudioBuffer [@@js.get "outputBuffer"]
    val set_outputBuffer: t -> _AudioBuffer -> unit [@@js.set "outputBuffer"]
    val get_playbackTime: t -> float [@@js.get "playbackTime"]
    val set_playbackTime: t -> float -> unit [@@js.set "playbackTime"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "AudioTimestamp"] AudioTimestamp : sig
    type t = _AudioTimestamp
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_contextTime: t -> float [@@js.get "contextTime"]
    val set_contextTime: t -> float -> unit [@@js.set "contextTime"]
    val get_performanceTime: t -> float [@@js.get "performanceTime"]
    val set_performanceTime: t -> float -> unit [@@js.set "performanceTime"]
  end
  module[@js.scope "AudioWorkletNodeOptions"] AudioWorkletNodeOptions : sig
    type t = _AudioWorkletNodeOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_numberOfInputs: t -> float [@@js.get "numberOfInputs"]
    val set_numberOfInputs: t -> float -> unit [@@js.set "numberOfInputs"]
    val get_numberOfOutputs: t -> float [@@js.get "numberOfOutputs"]
    val set_numberOfOutputs: t -> float -> unit [@@js.set "numberOfOutputs"]
    val get_outputChannelCount: t -> float list [@@js.get "outputChannelCount"]
    val set_outputChannelCount: t -> float list -> unit [@@js.set "outputChannelCount"]
    val get_parameterData: t -> (string, float) Record.t_2 [@@js.get "parameterData"]
    val set_parameterData: t -> (string, float) Record.t_2 -> unit [@@js.set "parameterData"]
    val get_processorOptions: t -> any [@@js.get "processorOptions"]
    val set_processorOptions: t -> any -> unit [@@js.set "processorOptions"]
    val cast: t -> _AudioNodeOptions [@@js.cast]
  end
  module[@js.scope "AuthenticationExtensionsClientInputs"] AuthenticationExtensionsClientInputs : sig
    type t = _AuthenticationExtensionsClientInputs
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_appid: t -> string [@@js.get "appid"]
    val set_appid: t -> string -> unit [@@js.set "appid"]
    val get_authnSel: t -> _AuthenticatorSelectionList [@@js.get "authnSel"]
    val set_authnSel: t -> _AuthenticatorSelectionList -> unit [@@js.set "authnSel"]
    val get_exts: t -> bool [@@js.get "exts"]
    val set_exts: t -> bool -> unit [@@js.set "exts"]
    val get_loc: t -> bool [@@js.get "loc"]
    val set_loc: t -> bool -> unit [@@js.set "loc"]
    val get_txAuthGeneric: t -> txAuthGenericArg [@@js.get "txAuthGeneric"]
    val set_txAuthGeneric: t -> txAuthGenericArg -> unit [@@js.set "txAuthGeneric"]
    val get_txAuthSimple: t -> string [@@js.get "txAuthSimple"]
    val set_txAuthSimple: t -> string -> unit [@@js.set "txAuthSimple"]
    val get_uvi: t -> bool [@@js.get "uvi"]
    val set_uvi: t -> bool -> unit [@@js.set "uvi"]
    val get_uvm: t -> bool [@@js.get "uvm"]
    val set_uvm: t -> bool -> unit [@@js.set "uvm"]
  end
  module[@js.scope "AuthenticationExtensionsClientOutputs"] AuthenticationExtensionsClientOutputs : sig
    type t = _AuthenticationExtensionsClientOutputs
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_appid: t -> bool [@@js.get "appid"]
    val set_appid: t -> bool -> unit [@@js.set "appid"]
    val get_authnSel: t -> bool [@@js.get "authnSel"]
    val set_authnSel: t -> bool -> unit [@@js.set "authnSel"]
    val get_exts: t -> _AuthenticationExtensionsSupported [@@js.get "exts"]
    val set_exts: t -> _AuthenticationExtensionsSupported -> unit [@@js.set "exts"]
    val get_loc: t -> _Coordinates [@@js.get "loc"]
    val set_loc: t -> _Coordinates -> unit [@@js.set "loc"]
    val get_txAuthGeneric: t -> ArrayBuffer.t_0 [@@js.get "txAuthGeneric"]
    val set_txAuthGeneric: t -> ArrayBuffer.t_0 -> unit [@@js.set "txAuthGeneric"]
    val get_txAuthSimple: t -> string [@@js.get "txAuthSimple"]
    val set_txAuthSimple: t -> string -> unit [@@js.set "txAuthSimple"]
    val get_uvi: t -> ArrayBuffer.t_0 [@@js.get "uvi"]
    val set_uvi: t -> ArrayBuffer.t_0 -> unit [@@js.set "uvi"]
    val get_uvm: t -> _UvmEntries [@@js.get "uvm"]
    val set_uvm: t -> _UvmEntries -> unit [@@js.set "uvm"]
  end
  module[@js.scope "AuthenticatorSelectionCriteria"] AuthenticatorSelectionCriteria : sig
    type t = _AuthenticatorSelectionCriteria
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_authenticatorAttachment: t -> _AuthenticatorAttachment [@@js.get "authenticatorAttachment"]
    val set_authenticatorAttachment: t -> _AuthenticatorAttachment -> unit [@@js.set "authenticatorAttachment"]
    val get_requireResidentKey: t -> bool [@@js.get "requireResidentKey"]
    val set_requireResidentKey: t -> bool -> unit [@@js.set "requireResidentKey"]
    val get_userVerification: t -> _UserVerificationRequirement [@@js.get "userVerification"]
    val set_userVerification: t -> _UserVerificationRequirement -> unit [@@js.set "userVerification"]
  end
  module[@js.scope "BiquadFilterOptions"] BiquadFilterOptions : sig
    type t = _BiquadFilterOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_Q: t -> float [@@js.get "Q"]
    val set_Q: t -> float -> unit [@@js.set "Q"]
    val get_detune: t -> float [@@js.get "detune"]
    val set_detune: t -> float -> unit [@@js.set "detune"]
    val get_frequency: t -> float [@@js.get "frequency"]
    val set_frequency: t -> float -> unit [@@js.set "frequency"]
    val get_gain: t -> float [@@js.get "gain"]
    val set_gain: t -> float -> unit [@@js.set "gain"]
    val get_type: t -> _BiquadFilterType [@@js.get "type"]
    val set_type: t -> _BiquadFilterType -> unit [@@js.set "type"]
    val cast: t -> _AudioNodeOptions [@@js.cast]
  end
  module[@js.scope "BlobPropertyBag"] BlobPropertyBag : sig
    type t = _BlobPropertyBag
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_endings: t -> _EndingType [@@js.get "endings"]
    val set_endings: t -> _EndingType -> unit [@@js.set "endings"]
    val get_type: t -> string [@@js.get "type"]
    val set_type: t -> string -> unit [@@js.set "type"]
  end
  module[@js.scope "ByteLengthChunk"] ByteLengthChunk : sig
    type t = _ByteLengthChunk
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_byteLength: t -> float [@@js.get "byteLength"]
    val set_byteLength: t -> float -> unit [@@js.set "byteLength"]
  end
  module[@js.scope "CacheQueryOptions"] CacheQueryOptions : sig
    type t = _CacheQueryOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_ignoreMethod: t -> bool [@@js.get "ignoreMethod"]
    val set_ignoreMethod: t -> bool -> unit [@@js.set "ignoreMethod"]
    val get_ignoreSearch: t -> bool [@@js.get "ignoreSearch"]
    val set_ignoreSearch: t -> bool -> unit [@@js.set "ignoreSearch"]
    val get_ignoreVary: t -> bool [@@js.get "ignoreVary"]
    val set_ignoreVary: t -> bool -> unit [@@js.set "ignoreVary"]
  end
  module[@js.scope "CanvasRenderingContext2DSettings"] CanvasRenderingContext2DSettings : sig
    type t = _CanvasRenderingContext2DSettings
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_alpha: t -> bool [@@js.get "alpha"]
    val set_alpha: t -> bool -> unit [@@js.set "alpha"]
    val get_desynchronized: t -> bool [@@js.get "desynchronized"]
    val set_desynchronized: t -> bool -> unit [@@js.set "desynchronized"]
  end
  module[@js.scope "ChannelMergerOptions"] ChannelMergerOptions : sig
    type t = _ChannelMergerOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_numberOfInputs: t -> float [@@js.get "numberOfInputs"]
    val set_numberOfInputs: t -> float -> unit [@@js.set "numberOfInputs"]
    val cast: t -> _AudioNodeOptions [@@js.cast]
  end
  module[@js.scope "ChannelSplitterOptions"] ChannelSplitterOptions : sig
    type t = _ChannelSplitterOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_numberOfOutputs: t -> float [@@js.get "numberOfOutputs"]
    val set_numberOfOutputs: t -> float -> unit [@@js.set "numberOfOutputs"]
    val cast: t -> _AudioNodeOptions [@@js.cast]
  end
  module[@js.scope "ClientData"] ClientData : sig
    type t = _ClientData
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_challenge: t -> string [@@js.get "challenge"]
    val set_challenge: t -> string -> unit [@@js.set "challenge"]
    val get_extensions: t -> _WebAuthnExtensions [@@js.get "extensions"]
    val set_extensions: t -> _WebAuthnExtensions -> unit [@@js.set "extensions"]
    val get_hashAlg: t -> _Algorithm or_string [@@js.get "hashAlg"]
    val set_hashAlg: t -> _Algorithm or_string -> unit [@@js.set "hashAlg"]
    val get_origin: t -> string [@@js.get "origin"]
    val set_origin: t -> string -> unit [@@js.set "origin"]
    val get_rpId: t -> string [@@js.get "rpId"]
    val set_rpId: t -> string -> unit [@@js.set "rpId"]
    val get_tokenBinding: t -> string [@@js.get "tokenBinding"]
    val set_tokenBinding: t -> string -> unit [@@js.set "tokenBinding"]
  end
  module[@js.scope "ClientQueryOptions"] ClientQueryOptions : sig
    type t = _ClientQueryOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_includeUncontrolled: t -> bool [@@js.get "includeUncontrolled"]
    val set_includeUncontrolled: t -> bool -> unit [@@js.set "includeUncontrolled"]
    val get_type: t -> _ClientTypes [@@js.get "type"]
    val set_type: t -> _ClientTypes -> unit [@@js.set "type"]
  end
  module[@js.scope "ClipboardEventInit"] ClipboardEventInit : sig
    type t = _ClipboardEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_clipboardData: t -> _DataTransfer or_null [@@js.get "clipboardData"]
    val set_clipboardData: t -> _DataTransfer or_null -> unit [@@js.set "clipboardData"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "CloseEventInit"] CloseEventInit : sig
    type t = _CloseEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_code: t -> float [@@js.get "code"]
    val set_code: t -> float -> unit [@@js.set "code"]
    val get_reason: t -> string [@@js.get "reason"]
    val set_reason: t -> string -> unit [@@js.set "reason"]
    val get_wasClean: t -> bool [@@js.get "wasClean"]
    val set_wasClean: t -> bool -> unit [@@js.set "wasClean"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "CompositionEventInit"] CompositionEventInit : sig
    type t = _CompositionEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_data: t -> string [@@js.get "data"]
    val set_data: t -> string -> unit [@@js.set "data"]
    val cast: t -> _UIEventInit [@@js.cast]
  end
  module[@js.scope "ComputedEffectTiming"] ComputedEffectTiming : sig
    type t = _ComputedEffectTiming
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_activeDuration: t -> float [@@js.get "activeDuration"]
    val set_activeDuration: t -> float -> unit [@@js.set "activeDuration"]
    val get_currentIteration: t -> float or_null [@@js.get "currentIteration"]
    val set_currentIteration: t -> float or_null -> unit [@@js.set "currentIteration"]
    val get_endTime: t -> float [@@js.get "endTime"]
    val set_endTime: t -> float -> unit [@@js.set "endTime"]
    val get_localTime: t -> float or_null [@@js.get "localTime"]
    val set_localTime: t -> float or_null -> unit [@@js.set "localTime"]
    val get_progress: t -> float or_null [@@js.get "progress"]
    val set_progress: t -> float or_null -> unit [@@js.set "progress"]
    val cast: t -> _EffectTiming [@@js.cast]
  end
  module[@js.scope "ComputedKeyframe"] ComputedKeyframe : sig
    type t = _ComputedKeyframe
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_composite: t -> _CompositeOperationOrAuto [@@js.get "composite"]
    val set_composite: t -> _CompositeOperationOrAuto -> unit [@@js.set "composite"]
    val get_computedOffset: t -> float [@@js.get "computedOffset"]
    val set_computedOffset: t -> float -> unit [@@js.set "computedOffset"]
    val get_easing: t -> string [@@js.get "easing"]
    val set_easing: t -> string -> unit [@@js.set "easing"]
    val get_offset: t -> float or_null [@@js.get "offset"]
    val set_offset: t -> float or_null -> unit [@@js.set "offset"]
    val get: t -> string -> string or_number or_null_or_undefined [@@js.index_get]
    val set: t -> string -> string or_number or_null_or_undefined -> unit [@@js.index_set]
  end
  module[@js.scope "ConfirmSiteSpecificExceptionsInformation"] ConfirmSiteSpecificExceptionsInformation : sig
    type t = _ConfirmSiteSpecificExceptionsInformation
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_arrayOfDomainStrings: t -> string list [@@js.get "arrayOfDomainStrings"]
    val set_arrayOfDomainStrings: t -> string list -> unit [@@js.set "arrayOfDomainStrings"]
    val cast: t -> _ExceptionInformation [@@js.cast]
  end
  module[@js.scope "ConstantSourceOptions"] ConstantSourceOptions : sig
    type t = _ConstantSourceOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_offset: t -> float [@@js.get "offset"]
    val set_offset: t -> float -> unit [@@js.set "offset"]
  end
  module[@js.scope "ConstrainBooleanParameters"] ConstrainBooleanParameters : sig
    type t = _ConstrainBooleanParameters
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_exact: t -> bool [@@js.get "exact"]
    val set_exact: t -> bool -> unit [@@js.set "exact"]
    val get_ideal: t -> bool [@@js.get "ideal"]
    val set_ideal: t -> bool -> unit [@@js.set "ideal"]
  end
  module[@js.scope "ConstrainDOMStringParameters"] ConstrainDOMStringParameters : sig
    type t = _ConstrainDOMStringParameters
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_exact: t -> string list or_string [@@js.get "exact"]
    val set_exact: t -> string list or_string -> unit [@@js.set "exact"]
    val get_ideal: t -> string list or_string [@@js.get "ideal"]
    val set_ideal: t -> string list or_string -> unit [@@js.set "ideal"]
  end
  module[@js.scope "ConstrainDoubleRange"] ConstrainDoubleRange : sig
    type t = _ConstrainDoubleRange
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_exact: t -> float [@@js.get "exact"]
    val set_exact: t -> float -> unit [@@js.set "exact"]
    val get_ideal: t -> float [@@js.get "ideal"]
    val set_ideal: t -> float -> unit [@@js.set "ideal"]
    val cast: t -> _DoubleRange [@@js.cast]
  end
  module[@js.scope "ConstrainULongRange"] ConstrainULongRange : sig
    type t = _ConstrainULongRange
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_exact: t -> float [@@js.get "exact"]
    val set_exact: t -> float -> unit [@@js.set "exact"]
    val get_ideal: t -> float [@@js.get "ideal"]
    val set_ideal: t -> float -> unit [@@js.set "ideal"]
    val cast: t -> _ULongRange [@@js.cast]
  end
  module[@js.scope "ConstrainVideoFacingModeParameters"] ConstrainVideoFacingModeParameters : sig
    type t = _ConstrainVideoFacingModeParameters
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_exact: t -> (_VideoFacingModeEnum, _VideoFacingModeEnum) or_array [@@js.get "exact"]
    val set_exact: t -> (_VideoFacingModeEnum, _VideoFacingModeEnum) or_array -> unit [@@js.set "exact"]
    val get_ideal: t -> (_VideoFacingModeEnum, _VideoFacingModeEnum) or_array [@@js.get "ideal"]
    val set_ideal: t -> (_VideoFacingModeEnum, _VideoFacingModeEnum) or_array -> unit [@@js.set "ideal"]
  end
  module[@js.scope "ConvolverOptions"] ConvolverOptions : sig
    type t = _ConvolverOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_buffer: t -> _AudioBuffer or_null [@@js.get "buffer"]
    val set_buffer: t -> _AudioBuffer or_null -> unit [@@js.set "buffer"]
    val get_disableNormalization: t -> bool [@@js.get "disableNormalization"]
    val set_disableNormalization: t -> bool -> unit [@@js.set "disableNormalization"]
    val cast: t -> _AudioNodeOptions [@@js.cast]
  end
  module[@js.scope "CredentialCreationOptions"] CredentialCreationOptions : sig
    type t = _CredentialCreationOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_publicKey: t -> _PublicKeyCredentialCreationOptions [@@js.get "publicKey"]
    val set_publicKey: t -> _PublicKeyCredentialCreationOptions -> unit [@@js.set "publicKey"]
    val get_signal: t -> _AbortSignal [@@js.get "signal"]
    val set_signal: t -> _AbortSignal -> unit [@@js.set "signal"]
  end
  module[@js.scope "CredentialRequestOptions"] CredentialRequestOptions : sig
    type t = _CredentialRequestOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_mediation: t -> _CredentialMediationRequirement [@@js.get "mediation"]
    val set_mediation: t -> _CredentialMediationRequirement -> unit [@@js.set "mediation"]
    val get_publicKey: t -> _PublicKeyCredentialRequestOptions [@@js.get "publicKey"]
    val set_publicKey: t -> _PublicKeyCredentialRequestOptions -> unit [@@js.set "publicKey"]
    val get_signal: t -> _AbortSignal [@@js.get "signal"]
    val set_signal: t -> _AbortSignal -> unit [@@js.set "signal"]
  end
  module[@js.scope "CustomEventInit"] CustomEventInit : sig
    type 'T t = 'T _CustomEventInit
    val t_to_js: ('T -> Ojs.t) -> 'T t -> Ojs.t
    val t_of_js: (Ojs.t -> 'T) -> Ojs.t -> 'T t
    type 'T t_1 = 'T t
    val t_1_to_js: ('T -> Ojs.t) -> 'T t_1 -> Ojs.t
    val t_1_of_js: (Ojs.t -> 'T) -> Ojs.t -> 'T t_1
    type t_0 = any t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_detail: 'T t -> 'T [@@js.get "detail"]
    val set_detail: 'T t -> 'T -> unit [@@js.set "detail"]
    val cast: 'T t -> _EventInit [@@js.cast]
  end
  module[@js.scope "DOMMatrix2DInit"] DOMMatrix2DInit : sig
    type t = _DOMMatrix2DInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_a: t -> float [@@js.get "a"]
    val set_a: t -> float -> unit [@@js.set "a"]
    val get_b: t -> float [@@js.get "b"]
    val set_b: t -> float -> unit [@@js.set "b"]
    val get_c: t -> float [@@js.get "c"]
    val set_c: t -> float -> unit [@@js.set "c"]
    val get_d: t -> float [@@js.get "d"]
    val set_d: t -> float -> unit [@@js.set "d"]
    val get_e: t -> float [@@js.get "e"]
    val set_e: t -> float -> unit [@@js.set "e"]
    val get_f: t -> float [@@js.get "f"]
    val set_f: t -> float -> unit [@@js.set "f"]
    val get_m11: t -> float [@@js.get "m11"]
    val set_m11: t -> float -> unit [@@js.set "m11"]
    val get_m12: t -> float [@@js.get "m12"]
    val set_m12: t -> float -> unit [@@js.set "m12"]
    val get_m21: t -> float [@@js.get "m21"]
    val set_m21: t -> float -> unit [@@js.set "m21"]
    val get_m22: t -> float [@@js.get "m22"]
    val set_m22: t -> float -> unit [@@js.set "m22"]
    val get_m41: t -> float [@@js.get "m41"]
    val set_m41: t -> float -> unit [@@js.set "m41"]
    val get_m42: t -> float [@@js.get "m42"]
    val set_m42: t -> float -> unit [@@js.set "m42"]
  end
  module[@js.scope "DOMMatrixInit"] DOMMatrixInit : sig
    type t = _DOMMatrixInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_is2D: t -> bool [@@js.get "is2D"]
    val set_is2D: t -> bool -> unit [@@js.set "is2D"]
    val get_m13: t -> float [@@js.get "m13"]
    val set_m13: t -> float -> unit [@@js.set "m13"]
    val get_m14: t -> float [@@js.get "m14"]
    val set_m14: t -> float -> unit [@@js.set "m14"]
    val get_m23: t -> float [@@js.get "m23"]
    val set_m23: t -> float -> unit [@@js.set "m23"]
    val get_m24: t -> float [@@js.get "m24"]
    val set_m24: t -> float -> unit [@@js.set "m24"]
    val get_m31: t -> float [@@js.get "m31"]
    val set_m31: t -> float -> unit [@@js.set "m31"]
    val get_m32: t -> float [@@js.get "m32"]
    val set_m32: t -> float -> unit [@@js.set "m32"]
    val get_m33: t -> float [@@js.get "m33"]
    val set_m33: t -> float -> unit [@@js.set "m33"]
    val get_m34: t -> float [@@js.get "m34"]
    val set_m34: t -> float -> unit [@@js.set "m34"]
    val get_m43: t -> float [@@js.get "m43"]
    val set_m43: t -> float -> unit [@@js.set "m43"]
    val get_m44: t -> float [@@js.get "m44"]
    val set_m44: t -> float -> unit [@@js.set "m44"]
    val cast: t -> _DOMMatrix2DInit [@@js.cast]
  end
  module[@js.scope "DOMPointInit"] DOMPointInit : sig
    type t = _DOMPointInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_w: t -> float [@@js.get "w"]
    val set_w: t -> float -> unit [@@js.set "w"]
    val get_x: t -> float [@@js.get "x"]
    val set_x: t -> float -> unit [@@js.set "x"]
    val get_y: t -> float [@@js.get "y"]
    val set_y: t -> float -> unit [@@js.set "y"]
    val get_z: t -> float [@@js.get "z"]
    val set_z: t -> float -> unit [@@js.set "z"]
  end
  module[@js.scope "DOMQuadInit"] DOMQuadInit : sig
    type t = _DOMQuadInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_p1: t -> _DOMPointInit [@@js.get "p1"]
    val set_p1: t -> _DOMPointInit -> unit [@@js.set "p1"]
    val get_p2: t -> _DOMPointInit [@@js.get "p2"]
    val set_p2: t -> _DOMPointInit -> unit [@@js.set "p2"]
    val get_p3: t -> _DOMPointInit [@@js.get "p3"]
    val set_p3: t -> _DOMPointInit -> unit [@@js.set "p3"]
    val get_p4: t -> _DOMPointInit [@@js.get "p4"]
    val set_p4: t -> _DOMPointInit -> unit [@@js.set "p4"]
  end
  module[@js.scope "DOMRectInit"] DOMRectInit : sig
    type t = _DOMRectInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_height: t -> float [@@js.get "height"]
    val set_height: t -> float -> unit [@@js.set "height"]
    val get_width: t -> float [@@js.get "width"]
    val set_width: t -> float -> unit [@@js.set "width"]
    val get_x: t -> float [@@js.get "x"]
    val set_x: t -> float -> unit [@@js.set "x"]
    val get_y: t -> float [@@js.get "y"]
    val set_y: t -> float -> unit [@@js.set "y"]
  end
  module[@js.scope "DelayOptions"] DelayOptions : sig
    type t = _DelayOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_delayTime: t -> float [@@js.get "delayTime"]
    val set_delayTime: t -> float -> unit [@@js.set "delayTime"]
    val get_maxDelayTime: t -> float [@@js.get "maxDelayTime"]
    val set_maxDelayTime: t -> float -> unit [@@js.set "maxDelayTime"]
    val cast: t -> _AudioNodeOptions [@@js.cast]
  end
  module[@js.scope "DeviceLightEventInit"] DeviceLightEventInit : sig
    type t = _DeviceLightEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_value: t -> float [@@js.get "value"]
    val set_value: t -> float -> unit [@@js.set "value"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "DeviceMotionEventAccelerationInit"] DeviceMotionEventAccelerationInit : sig
    type t = _DeviceMotionEventAccelerationInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_x: t -> float or_null [@@js.get "x"]
    val set_x: t -> float or_null -> unit [@@js.set "x"]
    val get_y: t -> float or_null [@@js.get "y"]
    val set_y: t -> float or_null -> unit [@@js.set "y"]
    val get_z: t -> float or_null [@@js.get "z"]
    val set_z: t -> float or_null -> unit [@@js.set "z"]
  end
  module[@js.scope "DeviceMotionEventInit"] DeviceMotionEventInit : sig
    type t = _DeviceMotionEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_acceleration: t -> _DeviceMotionEventAccelerationInit [@@js.get "acceleration"]
    val set_acceleration: t -> _DeviceMotionEventAccelerationInit -> unit [@@js.set "acceleration"]
    val get_accelerationIncludingGravity: t -> _DeviceMotionEventAccelerationInit [@@js.get "accelerationIncludingGravity"]
    val set_accelerationIncludingGravity: t -> _DeviceMotionEventAccelerationInit -> unit [@@js.set "accelerationIncludingGravity"]
    val get_interval: t -> float [@@js.get "interval"]
    val set_interval: t -> float -> unit [@@js.set "interval"]
    val get_rotationRate: t -> _DeviceMotionEventRotationRateInit [@@js.get "rotationRate"]
    val set_rotationRate: t -> _DeviceMotionEventRotationRateInit -> unit [@@js.set "rotationRate"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "DeviceMotionEventRotationRateInit"] DeviceMotionEventRotationRateInit : sig
    type t = _DeviceMotionEventRotationRateInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_alpha: t -> float or_null [@@js.get "alpha"]
    val set_alpha: t -> float or_null -> unit [@@js.set "alpha"]
    val get_beta: t -> float or_null [@@js.get "beta"]
    val set_beta: t -> float or_null -> unit [@@js.set "beta"]
    val get_gamma: t -> float or_null [@@js.get "gamma"]
    val set_gamma: t -> float or_null -> unit [@@js.set "gamma"]
  end
  module[@js.scope "DeviceOrientationEventInit"] DeviceOrientationEventInit : sig
    type t = _DeviceOrientationEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_absolute: t -> bool [@@js.get "absolute"]
    val set_absolute: t -> bool -> unit [@@js.set "absolute"]
    val get_alpha: t -> float or_null [@@js.get "alpha"]
    val set_alpha: t -> float or_null -> unit [@@js.set "alpha"]
    val get_beta: t -> float or_null [@@js.get "beta"]
    val set_beta: t -> float or_null -> unit [@@js.set "beta"]
    val get_gamma: t -> float or_null [@@js.get "gamma"]
    val set_gamma: t -> float or_null -> unit [@@js.set "gamma"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "DevicePermissionDescriptor"] DevicePermissionDescriptor : sig
    type t = _DevicePermissionDescriptor
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_deviceId: t -> string [@@js.get "deviceId"]
    val set_deviceId: t -> string -> unit [@@js.set "deviceId"]
    val get_name: t -> ([`L_s222_camera[@js "camera"] | `L_s534_microphone[@js "microphone"] | `L_s747_speaker[@js "speaker"]] [@js.enum]) [@@js.get "name"]
    val set_name: t -> ([`L_s222_camera | `L_s534_microphone | `L_s747_speaker] [@js.enum]) -> unit [@@js.set "name"]
    val cast: t -> _PermissionDescriptor [@@js.cast]
  end
  module[@js.scope "DocumentTimelineOptions"] DocumentTimelineOptions : sig
    type t = _DocumentTimelineOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_originTime: t -> float [@@js.get "originTime"]
    val set_originTime: t -> float -> unit [@@js.set "originTime"]
  end
  module[@js.scope "DoubleRange"] DoubleRange : sig
    type t = _DoubleRange
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_max: t -> float [@@js.get "max"]
    val set_max: t -> float -> unit [@@js.set "max"]
    val get_min: t -> float [@@js.get "min"]
    val set_min: t -> float -> unit [@@js.set "min"]
  end
  module[@js.scope "DragEventInit"] DragEventInit : sig
    type t = _DragEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_dataTransfer: t -> _DataTransfer or_null [@@js.get "dataTransfer"]
    val set_dataTransfer: t -> _DataTransfer or_null -> unit [@@js.set "dataTransfer"]
    val cast: t -> _MouseEventInit [@@js.cast]
  end
  module[@js.scope "DynamicsCompressorOptions"] DynamicsCompressorOptions : sig
    type t = _DynamicsCompressorOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_attack: t -> float [@@js.get "attack"]
    val set_attack: t -> float -> unit [@@js.set "attack"]
    val get_knee: t -> float [@@js.get "knee"]
    val set_knee: t -> float -> unit [@@js.set "knee"]
    val get_ratio: t -> float [@@js.get "ratio"]
    val set_ratio: t -> float -> unit [@@js.set "ratio"]
    val get_release: t -> float [@@js.get "release"]
    val set_release: t -> float -> unit [@@js.set "release"]
    val get_threshold: t -> float [@@js.get "threshold"]
    val set_threshold: t -> float -> unit [@@js.set "threshold"]
    val cast: t -> _AudioNodeOptions [@@js.cast]
  end
  module[@js.scope "EcKeyAlgorithm"] EcKeyAlgorithm : sig
    type t = _EcKeyAlgorithm
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_namedCurve: t -> _NamedCurve [@@js.get "namedCurve"]
    val set_namedCurve: t -> _NamedCurve -> unit [@@js.set "namedCurve"]
    val cast: t -> _KeyAlgorithm [@@js.cast]
  end
  module[@js.scope "EcKeyGenParams"] EcKeyGenParams : sig
    type t = _EcKeyGenParams
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_namedCurve: t -> _NamedCurve [@@js.get "namedCurve"]
    val set_namedCurve: t -> _NamedCurve -> unit [@@js.set "namedCurve"]
    val cast: t -> _Algorithm [@@js.cast]
  end
  module[@js.scope "EcKeyImportParams"] EcKeyImportParams : sig
    type t = _EcKeyImportParams
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_namedCurve: t -> _NamedCurve [@@js.get "namedCurve"]
    val set_namedCurve: t -> _NamedCurve -> unit [@@js.set "namedCurve"]
    val cast: t -> _Algorithm [@@js.cast]
  end
  module[@js.scope "EcdhKeyDeriveParams"] EcdhKeyDeriveParams : sig
    type t = _EcdhKeyDeriveParams
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_public: t -> _CryptoKey [@@js.get "public"]
    val set_public: t -> _CryptoKey -> unit [@@js.set "public"]
    val cast: t -> _Algorithm [@@js.cast]
  end
  module[@js.scope "EcdsaParams"] EcdsaParams : sig
    type t = _EcdsaParams
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_hash: t -> _HashAlgorithmIdentifier [@@js.get "hash"]
    val set_hash: t -> _HashAlgorithmIdentifier -> unit [@@js.set "hash"]
    val cast: t -> _Algorithm [@@js.cast]
  end
  module[@js.scope "EffectTiming"] EffectTiming : sig
    type t = _EffectTiming
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_delay: t -> float [@@js.get "delay"]
    val set_delay: t -> float -> unit [@@js.set "delay"]
    val get_direction: t -> _PlaybackDirection [@@js.get "direction"]
    val set_direction: t -> _PlaybackDirection -> unit [@@js.set "direction"]
    val get_duration: t -> string or_number [@@js.get "duration"]
    val set_duration: t -> string or_number -> unit [@@js.set "duration"]
    val get_easing: t -> string [@@js.get "easing"]
    val set_easing: t -> string -> unit [@@js.set "easing"]
    val get_endDelay: t -> float [@@js.get "endDelay"]
    val set_endDelay: t -> float -> unit [@@js.set "endDelay"]
    val get_fill: t -> _FillMode [@@js.get "fill"]
    val set_fill: t -> _FillMode -> unit [@@js.set "fill"]
    val get_iterationStart: t -> float [@@js.get "iterationStart"]
    val set_iterationStart: t -> float -> unit [@@js.set "iterationStart"]
    val get_iterations: t -> float [@@js.get "iterations"]
    val set_iterations: t -> float -> unit [@@js.set "iterations"]
  end
  module[@js.scope "ElementCreationOptions"] ElementCreationOptions : sig
    type t = _ElementCreationOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_is: t -> string [@@js.get "is"]
    val set_is: t -> string -> unit [@@js.set "is"]
  end
  module[@js.scope "ElementDefinitionOptions"] ElementDefinitionOptions : sig
    type t = _ElementDefinitionOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_extends: t -> string [@@js.get "extends"]
    val set_extends: t -> string -> unit [@@js.set "extends"]
  end
  module[@js.scope "ErrorEventInit"] ErrorEventInit : sig
    type t = _ErrorEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_colno: t -> float [@@js.get "colno"]
    val set_colno: t -> float -> unit [@@js.set "colno"]
    val get_error: t -> any [@@js.get "error"]
    val set_error: t -> any -> unit [@@js.set "error"]
    val get_filename: t -> string [@@js.get "filename"]
    val set_filename: t -> string -> unit [@@js.set "filename"]
    val get_lineno: t -> float [@@js.get "lineno"]
    val set_lineno: t -> float -> unit [@@js.set "lineno"]
    val get_message: t -> string [@@js.get "message"]
    val set_message: t -> string -> unit [@@js.set "message"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "EventInit"] EventInit : sig
    type t = _EventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_bubbles: t -> bool [@@js.get "bubbles"]
    val set_bubbles: t -> bool -> unit [@@js.set "bubbles"]
    val get_cancelable: t -> bool [@@js.get "cancelable"]
    val set_cancelable: t -> bool -> unit [@@js.set "cancelable"]
    val get_composed: t -> bool [@@js.get "composed"]
    val set_composed: t -> bool -> unit [@@js.set "composed"]
  end
  module[@js.scope "EventListenerOptions"] EventListenerOptions : sig
    type t = _EventListenerOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_capture: t -> bool [@@js.get "capture"]
    val set_capture: t -> bool -> unit [@@js.set "capture"]
  end
  module[@js.scope "EventModifierInit"] EventModifierInit : sig
    type t = _EventModifierInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_altKey: t -> bool [@@js.get "altKey"]
    val set_altKey: t -> bool -> unit [@@js.set "altKey"]
    val get_ctrlKey: t -> bool [@@js.get "ctrlKey"]
    val set_ctrlKey: t -> bool -> unit [@@js.set "ctrlKey"]
    val get_metaKey: t -> bool [@@js.get "metaKey"]
    val set_metaKey: t -> bool -> unit [@@js.set "metaKey"]
    val get_modifierAltGraph: t -> bool [@@js.get "modifierAltGraph"]
    val set_modifierAltGraph: t -> bool -> unit [@@js.set "modifierAltGraph"]
    val get_modifierCapsLock: t -> bool [@@js.get "modifierCapsLock"]
    val set_modifierCapsLock: t -> bool -> unit [@@js.set "modifierCapsLock"]
    val get_modifierFn: t -> bool [@@js.get "modifierFn"]
    val set_modifierFn: t -> bool -> unit [@@js.set "modifierFn"]
    val get_modifierFnLock: t -> bool [@@js.get "modifierFnLock"]
    val set_modifierFnLock: t -> bool -> unit [@@js.set "modifierFnLock"]
    val get_modifierHyper: t -> bool [@@js.get "modifierHyper"]
    val set_modifierHyper: t -> bool -> unit [@@js.set "modifierHyper"]
    val get_modifierNumLock: t -> bool [@@js.get "modifierNumLock"]
    val set_modifierNumLock: t -> bool -> unit [@@js.set "modifierNumLock"]
    val get_modifierScrollLock: t -> bool [@@js.get "modifierScrollLock"]
    val set_modifierScrollLock: t -> bool -> unit [@@js.set "modifierScrollLock"]
    val get_modifierSuper: t -> bool [@@js.get "modifierSuper"]
    val set_modifierSuper: t -> bool -> unit [@@js.set "modifierSuper"]
    val get_modifierSymbol: t -> bool [@@js.get "modifierSymbol"]
    val set_modifierSymbol: t -> bool -> unit [@@js.set "modifierSymbol"]
    val get_modifierSymbolLock: t -> bool [@@js.get "modifierSymbolLock"]
    val set_modifierSymbolLock: t -> bool -> unit [@@js.set "modifierSymbolLock"]
    val get_shiftKey: t -> bool [@@js.get "shiftKey"]
    val set_shiftKey: t -> bool -> unit [@@js.set "shiftKey"]
    val cast: t -> _UIEventInit [@@js.cast]
  end
  module[@js.scope "EventSourceInit"] EventSourceInit : sig
    type t = _EventSourceInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_withCredentials: t -> bool [@@js.get "withCredentials"]
    val set_withCredentials: t -> bool -> unit [@@js.set "withCredentials"]
  end
  module[@js.scope "ExceptionInformation"] ExceptionInformation : sig
    type t = _ExceptionInformation
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_domain: t -> string or_null [@@js.get "domain"]
    val set_domain: t -> string or_null -> unit [@@js.set "domain"]
  end
  module[@js.scope "FilePropertyBag"] FilePropertyBag : sig
    type t = _FilePropertyBag
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_lastModified: t -> float [@@js.get "lastModified"]
    val set_lastModified: t -> float -> unit [@@js.set "lastModified"]
    val cast: t -> _BlobPropertyBag [@@js.cast]
  end
  module[@js.scope "FocusEventInit"] FocusEventInit : sig
    type t = _FocusEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_relatedTarget: t -> _EventTarget or_null [@@js.get "relatedTarget"]
    val set_relatedTarget: t -> _EventTarget or_null -> unit [@@js.set "relatedTarget"]
    val cast: t -> _UIEventInit [@@js.cast]
  end
  module[@js.scope "FocusNavigationEventInit"] FocusNavigationEventInit : sig
    type t = _FocusNavigationEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_navigationReason: t -> string or_null [@@js.get "navigationReason"]
    val set_navigationReason: t -> string or_null -> unit [@@js.set "navigationReason"]
    val get_originHeight: t -> float [@@js.get "originHeight"]
    val set_originHeight: t -> float -> unit [@@js.set "originHeight"]
    val get_originLeft: t -> float [@@js.get "originLeft"]
    val set_originLeft: t -> float -> unit [@@js.set "originLeft"]
    val get_originTop: t -> float [@@js.get "originTop"]
    val set_originTop: t -> float -> unit [@@js.set "originTop"]
    val get_originWidth: t -> float [@@js.get "originWidth"]
    val set_originWidth: t -> float -> unit [@@js.set "originWidth"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "FocusNavigationOrigin"] FocusNavigationOrigin : sig
    type t = _FocusNavigationOrigin
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_originHeight: t -> float [@@js.get "originHeight"]
    val set_originHeight: t -> float -> unit [@@js.set "originHeight"]
    val get_originLeft: t -> float [@@js.get "originLeft"]
    val set_originLeft: t -> float -> unit [@@js.set "originLeft"]
    val get_originTop: t -> float [@@js.get "originTop"]
    val set_originTop: t -> float -> unit [@@js.set "originTop"]
    val get_originWidth: t -> float [@@js.get "originWidth"]
    val set_originWidth: t -> float -> unit [@@js.set "originWidth"]
  end
  module[@js.scope "FocusOptions"] FocusOptions : sig
    type t = _FocusOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_preventScroll: t -> bool [@@js.get "preventScroll"]
    val set_preventScroll: t -> bool -> unit [@@js.set "preventScroll"]
  end
  module[@js.scope "FullscreenOptions"] FullscreenOptions : sig
    type t = _FullscreenOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_navigationUI: t -> _FullscreenNavigationUI [@@js.get "navigationUI"]
    val set_navigationUI: t -> _FullscreenNavigationUI -> unit [@@js.set "navigationUI"]
  end
  module[@js.scope "GainOptions"] GainOptions : sig
    type t = _GainOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_gain: t -> float [@@js.get "gain"]
    val set_gain: t -> float -> unit [@@js.set "gain"]
    val cast: t -> _AudioNodeOptions [@@js.cast]
  end
  module[@js.scope "GamepadEventInit"] GamepadEventInit : sig
    type t = _GamepadEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_gamepad: t -> _Gamepad [@@js.get "gamepad"]
    val set_gamepad: t -> _Gamepad -> unit [@@js.set "gamepad"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "GetNotificationOptions"] GetNotificationOptions : sig
    type t = _GetNotificationOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_tag: t -> string [@@js.get "tag"]
    val set_tag: t -> string -> unit [@@js.set "tag"]
  end
  module[@js.scope "GetRootNodeOptions"] GetRootNodeOptions : sig
    type t = _GetRootNodeOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_composed: t -> bool [@@js.get "composed"]
    val set_composed: t -> bool -> unit [@@js.set "composed"]
  end
  module[@js.scope "HashChangeEventInit"] HashChangeEventInit : sig
    type t = _HashChangeEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_newURL: t -> string [@@js.get "newURL"]
    val set_newURL: t -> string -> unit [@@js.set "newURL"]
    val get_oldURL: t -> string [@@js.get "oldURL"]
    val set_oldURL: t -> string -> unit [@@js.set "oldURL"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "HkdfParams"] HkdfParams : sig
    type t = _HkdfParams
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_hash: t -> _HashAlgorithmIdentifier [@@js.get "hash"]
    val set_hash: t -> _HashAlgorithmIdentifier -> unit [@@js.set "hash"]
    val get_info: t -> ((((Float64Array.t_0, Int16Array.t_0, Int32Array.t_0, Int8Array.t_0, Uint16Array.t_0, Uint32Array.t_0, Uint8Array.t_0, Uint8ClampedArray.t_0) union8, Float32Array.t_0) or_, DataView.t_0) or_, ArrayBuffer.t_0) or_ [@@js.get "info"]
    val set_info: t -> ((((Float64Array.t_0, Int16Array.t_0, Int32Array.t_0, Int8Array.t_0, Uint16Array.t_0, Uint32Array.t_0, Uint8Array.t_0, Uint8ClampedArray.t_0) union8, Float32Array.t_0) or_, DataView.t_0) or_, ArrayBuffer.t_0) or_ -> unit [@@js.set "info"]
    val get_salt: t -> ((((Float64Array.t_0, Int16Array.t_0, Int32Array.t_0, Int8Array.t_0, Uint16Array.t_0, Uint32Array.t_0, Uint8Array.t_0, Uint8ClampedArray.t_0) union8, Float32Array.t_0) or_, DataView.t_0) or_, ArrayBuffer.t_0) or_ [@@js.get "salt"]
    val set_salt: t -> ((((Float64Array.t_0, Int16Array.t_0, Int32Array.t_0, Int8Array.t_0, Uint16Array.t_0, Uint32Array.t_0, Uint8Array.t_0, Uint8ClampedArray.t_0) union8, Float32Array.t_0) or_, DataView.t_0) or_, ArrayBuffer.t_0) or_ -> unit [@@js.set "salt"]
    val cast: t -> _Algorithm [@@js.cast]
  end
  module[@js.scope "HmacImportParams"] HmacImportParams : sig
    type t = _HmacImportParams
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_hash: t -> _HashAlgorithmIdentifier [@@js.get "hash"]
    val set_hash: t -> _HashAlgorithmIdentifier -> unit [@@js.set "hash"]
    val get_length: t -> float [@@js.get "length"]
    val set_length: t -> float -> unit [@@js.set "length"]
    val cast: t -> _Algorithm [@@js.cast]
  end
  module[@js.scope "HmacKeyAlgorithm"] HmacKeyAlgorithm : sig
    type t = _HmacKeyAlgorithm
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_hash: t -> _KeyAlgorithm [@@js.get "hash"]
    val set_hash: t -> _KeyAlgorithm -> unit [@@js.set "hash"]
    val get_length: t -> float [@@js.get "length"]
    val set_length: t -> float -> unit [@@js.set "length"]
    val cast: t -> _KeyAlgorithm [@@js.cast]
  end
  module[@js.scope "HmacKeyGenParams"] HmacKeyGenParams : sig
    type t = _HmacKeyGenParams
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_hash: t -> _HashAlgorithmIdentifier [@@js.get "hash"]
    val set_hash: t -> _HashAlgorithmIdentifier -> unit [@@js.set "hash"]
    val get_length: t -> float [@@js.get "length"]
    val set_length: t -> float -> unit [@@js.set "length"]
    val cast: t -> _Algorithm [@@js.cast]
  end
  module[@js.scope "IDBIndexParameters"] IDBIndexParameters : sig
    type t = _IDBIndexParameters
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_multiEntry: t -> bool [@@js.get "multiEntry"]
    val set_multiEntry: t -> bool -> unit [@@js.set "multiEntry"]
    val get_unique: t -> bool [@@js.get "unique"]
    val set_unique: t -> bool -> unit [@@js.set "unique"]
  end
  module[@js.scope "IDBObjectStoreParameters"] IDBObjectStoreParameters : sig
    type t = _IDBObjectStoreParameters
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_autoIncrement: t -> bool [@@js.get "autoIncrement"]
    val set_autoIncrement: t -> bool -> unit [@@js.set "autoIncrement"]
    val get_keyPath: t -> string list or_string or_null [@@js.get "keyPath"]
    val set_keyPath: t -> string list or_string or_null -> unit [@@js.set "keyPath"]
  end
  module[@js.scope "IDBVersionChangeEventInit"] IDBVersionChangeEventInit : sig
    type t = _IDBVersionChangeEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_newVersion: t -> float or_null [@@js.get "newVersion"]
    val set_newVersion: t -> float or_null -> unit [@@js.set "newVersion"]
    val get_oldVersion: t -> float [@@js.get "oldVersion"]
    val set_oldVersion: t -> float -> unit [@@js.set "oldVersion"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "IIRFilterOptions"] IIRFilterOptions : sig
    type t = _IIRFilterOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_feedback: t -> float list [@@js.get "feedback"]
    val set_feedback: t -> float list -> unit [@@js.set "feedback"]
    val get_feedforward: t -> float list [@@js.get "feedforward"]
    val set_feedforward: t -> float list -> unit [@@js.set "feedforward"]
    val cast: t -> _AudioNodeOptions [@@js.cast]
  end
  module[@js.scope "ImageBitmapRenderingContextSettings"] ImageBitmapRenderingContextSettings : sig
    type t = _ImageBitmapRenderingContextSettings
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_alpha: t -> bool [@@js.get "alpha"]
    val set_alpha: t -> bool -> unit [@@js.set "alpha"]
  end
  module[@js.scope "ImageEncodeOptions"] ImageEncodeOptions : sig
    type t = _ImageEncodeOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_quality: t -> float [@@js.get "quality"]
    val set_quality: t -> float -> unit [@@js.set "quality"]
    val get_type: t -> string [@@js.get "type"]
    val set_type: t -> string -> unit [@@js.set "type"]
  end
  module[@js.scope "InputEventInit"] InputEventInit : sig
    type t = _InputEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_data: t -> string or_null [@@js.get "data"]
    val set_data: t -> string or_null -> unit [@@js.set "data"]
    val get_inputType: t -> string [@@js.get "inputType"]
    val set_inputType: t -> string -> unit [@@js.set "inputType"]
    val get_isComposing: t -> bool [@@js.get "isComposing"]
    val set_isComposing: t -> bool -> unit [@@js.set "isComposing"]
    val cast: t -> _UIEventInit [@@js.cast]
  end
  module[@js.scope "IntersectionObserverEntryInit"] IntersectionObserverEntryInit : sig
    type t = _IntersectionObserverEntryInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_boundingClientRect: t -> _DOMRectInit [@@js.get "boundingClientRect"]
    val set_boundingClientRect: t -> _DOMRectInit -> unit [@@js.set "boundingClientRect"]
    val get_intersectionRatio: t -> float [@@js.get "intersectionRatio"]
    val set_intersectionRatio: t -> float -> unit [@@js.set "intersectionRatio"]
    val get_intersectionRect: t -> _DOMRectInit [@@js.get "intersectionRect"]
    val set_intersectionRect: t -> _DOMRectInit -> unit [@@js.set "intersectionRect"]
    val get_isIntersecting: t -> bool [@@js.get "isIntersecting"]
    val set_isIntersecting: t -> bool -> unit [@@js.set "isIntersecting"]
    val get_rootBounds: t -> _DOMRectInit or_null [@@js.get "rootBounds"]
    val set_rootBounds: t -> _DOMRectInit or_null -> unit [@@js.set "rootBounds"]
    val get_target: t -> _Element [@@js.get "target"]
    val set_target: t -> _Element -> unit [@@js.set "target"]
    val get_time: t -> float [@@js.get "time"]
    val set_time: t -> float -> unit [@@js.set "time"]
  end
  module[@js.scope "IntersectionObserverInit"] IntersectionObserverInit : sig
    type t = _IntersectionObserverInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_root: t -> _Element or_null [@@js.get "root"]
    val set_root: t -> _Element or_null -> unit [@@js.set "root"]
    val get_rootMargin: t -> string [@@js.get "rootMargin"]
    val set_rootMargin: t -> string -> unit [@@js.set "rootMargin"]
    val get_threshold: t -> float list or_number [@@js.get "threshold"]
    val set_threshold: t -> float list or_number -> unit [@@js.set "threshold"]
  end
  module[@js.scope "JsonWebKey"] JsonWebKey : sig
    type t = _JsonWebKey
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_alg: t -> string [@@js.get "alg"]
    val set_alg: t -> string -> unit [@@js.set "alg"]
    val get_crv: t -> string [@@js.get "crv"]
    val set_crv: t -> string -> unit [@@js.set "crv"]
    val get_d: t -> string [@@js.get "d"]
    val set_d: t -> string -> unit [@@js.set "d"]
    val get_dp: t -> string [@@js.get "dp"]
    val set_dp: t -> string -> unit [@@js.set "dp"]
    val get_dq: t -> string [@@js.get "dq"]
    val set_dq: t -> string -> unit [@@js.set "dq"]
    val get_e: t -> string [@@js.get "e"]
    val set_e: t -> string -> unit [@@js.set "e"]
    val get_ext: t -> bool [@@js.get "ext"]
    val set_ext: t -> bool -> unit [@@js.set "ext"]
    val get_k: t -> string [@@js.get "k"]
    val set_k: t -> string -> unit [@@js.set "k"]
    val get_key_ops: t -> string list [@@js.get "key_ops"]
    val set_key_ops: t -> string list -> unit [@@js.set "key_ops"]
    val get_kty: t -> string [@@js.get "kty"]
    val set_kty: t -> string -> unit [@@js.set "kty"]
    val get_n: t -> string [@@js.get "n"]
    val set_n: t -> string -> unit [@@js.set "n"]
    val get_oth: t -> _RsaOtherPrimesInfo list [@@js.get "oth"]
    val set_oth: t -> _RsaOtherPrimesInfo list -> unit [@@js.set "oth"]
    val get_p: t -> string [@@js.get "p"]
    val set_p: t -> string -> unit [@@js.set "p"]
    val get_q: t -> string [@@js.get "q"]
    val set_q: t -> string -> unit [@@js.set "q"]
    val get_qi: t -> string [@@js.get "qi"]
    val set_qi: t -> string -> unit [@@js.set "qi"]
    val get_use: t -> string [@@js.get "use"]
    val set_use: t -> string -> unit [@@js.set "use"]
    val get_x: t -> string [@@js.get "x"]
    val set_x: t -> string -> unit [@@js.set "x"]
    val get_y: t -> string [@@js.get "y"]
    val set_y: t -> string -> unit [@@js.set "y"]
  end
  module[@js.scope "KeyAlgorithm"] KeyAlgorithm : sig
    type t = _KeyAlgorithm
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_name: t -> string [@@js.get "name"]
    val set_name: t -> string -> unit [@@js.set "name"]
  end
  module[@js.scope "KeyboardEventInit"] KeyboardEventInit : sig
    type t = _KeyboardEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_code: t -> string [@@js.get "code"]
    val set_code: t -> string -> unit [@@js.set "code"]
    val get_isComposing: t -> bool [@@js.get "isComposing"]
    val set_isComposing: t -> bool -> unit [@@js.set "isComposing"]
    val get_key: t -> string [@@js.get "key"]
    val set_key: t -> string -> unit [@@js.set "key"]
    val get_location: t -> float [@@js.get "location"]
    val set_location: t -> float -> unit [@@js.set "location"]
    val get_repeat: t -> bool [@@js.get "repeat"]
    val set_repeat: t -> bool -> unit [@@js.set "repeat"]
    val cast: t -> _EventModifierInit [@@js.cast]
  end
  module[@js.scope "Keyframe"] Keyframe : sig
    type t = _Keyframe
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_composite: t -> _CompositeOperationOrAuto [@@js.get "composite"]
    val set_composite: t -> _CompositeOperationOrAuto -> unit [@@js.set "composite"]
    val get_easing: t -> string [@@js.get "easing"]
    val set_easing: t -> string -> unit [@@js.set "easing"]
    val get_offset: t -> float or_null [@@js.get "offset"]
    val set_offset: t -> float or_null -> unit [@@js.set "offset"]
    val get: t -> string -> string or_number or_null_or_undefined [@@js.index_get]
    val set: t -> string -> string or_number or_null_or_undefined -> unit [@@js.index_set]
  end
  module[@js.scope "KeyframeAnimationOptions"] KeyframeAnimationOptions : sig
    type t = _KeyframeAnimationOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_id: t -> string [@@js.get "id"]
    val set_id: t -> string -> unit [@@js.set "id"]
    val cast: t -> _KeyframeEffectOptions [@@js.cast]
  end
  module[@js.scope "KeyframeEffectOptions"] KeyframeEffectOptions : sig
    type t = _KeyframeEffectOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_composite: t -> _CompositeOperation [@@js.get "composite"]
    val set_composite: t -> _CompositeOperation -> unit [@@js.set "composite"]
    val get_iterationComposite: t -> _IterationCompositeOperation [@@js.get "iterationComposite"]
    val set_iterationComposite: t -> _IterationCompositeOperation -> unit [@@js.set "iterationComposite"]
    val cast: t -> _EffectTiming [@@js.cast]
  end
  module[@js.scope "MediaElementAudioSourceOptions"] MediaElementAudioSourceOptions : sig
    type t = _MediaElementAudioSourceOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_mediaElement: t -> _HTMLMediaElement [@@js.get "mediaElement"]
    val set_mediaElement: t -> _HTMLMediaElement -> unit [@@js.set "mediaElement"]
  end
  module[@js.scope "MediaEncryptedEventInit"] MediaEncryptedEventInit : sig
    type t = _MediaEncryptedEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_initData: t -> ArrayBuffer.t_0 or_null [@@js.get "initData"]
    val set_initData: t -> ArrayBuffer.t_0 or_null -> unit [@@js.set "initData"]
    val get_initDataType: t -> string [@@js.get "initDataType"]
    val set_initDataType: t -> string -> unit [@@js.set "initDataType"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "MediaKeyMessageEventInit"] MediaKeyMessageEventInit : sig
    type t = _MediaKeyMessageEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_message: t -> ArrayBuffer.t_0 [@@js.get "message"]
    val set_message: t -> ArrayBuffer.t_0 -> unit [@@js.set "message"]
    val get_messageType: t -> _MediaKeyMessageType [@@js.get "messageType"]
    val set_messageType: t -> _MediaKeyMessageType -> unit [@@js.set "messageType"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "MediaKeySystemConfiguration"] MediaKeySystemConfiguration : sig
    type t = _MediaKeySystemConfiguration
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_audioCapabilities: t -> _MediaKeySystemMediaCapability list [@@js.get "audioCapabilities"]
    val set_audioCapabilities: t -> _MediaKeySystemMediaCapability list -> unit [@@js.set "audioCapabilities"]
    val get_distinctiveIdentifier: t -> _MediaKeysRequirement [@@js.get "distinctiveIdentifier"]
    val set_distinctiveIdentifier: t -> _MediaKeysRequirement -> unit [@@js.set "distinctiveIdentifier"]
    val get_initDataTypes: t -> string list [@@js.get "initDataTypes"]
    val set_initDataTypes: t -> string list -> unit [@@js.set "initDataTypes"]
    val get_label: t -> string [@@js.get "label"]
    val set_label: t -> string -> unit [@@js.set "label"]
    val get_persistentState: t -> _MediaKeysRequirement [@@js.get "persistentState"]
    val set_persistentState: t -> _MediaKeysRequirement -> unit [@@js.set "persistentState"]
    val get_sessionTypes: t -> string list [@@js.get "sessionTypes"]
    val set_sessionTypes: t -> string list -> unit [@@js.set "sessionTypes"]
    val get_videoCapabilities: t -> _MediaKeySystemMediaCapability list [@@js.get "videoCapabilities"]
    val set_videoCapabilities: t -> _MediaKeySystemMediaCapability list -> unit [@@js.set "videoCapabilities"]
  end
  module[@js.scope "MediaKeySystemMediaCapability"] MediaKeySystemMediaCapability : sig
    type t = _MediaKeySystemMediaCapability
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_contentType: t -> string [@@js.get "contentType"]
    val set_contentType: t -> string -> unit [@@js.set "contentType"]
    val get_robustness: t -> string [@@js.get "robustness"]
    val set_robustness: t -> string -> unit [@@js.set "robustness"]
  end
  module[@js.scope "MediaQueryListEventInit"] MediaQueryListEventInit : sig
    type t = _MediaQueryListEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_matches: t -> bool [@@js.get "matches"]
    val set_matches: t -> bool -> unit [@@js.set "matches"]
    val get_media: t -> string [@@js.get "media"]
    val set_media: t -> string -> unit [@@js.set "media"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "MediaStreamAudioSourceOptions"] MediaStreamAudioSourceOptions : sig
    type t = _MediaStreamAudioSourceOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_mediaStream: t -> _MediaStream [@@js.get "mediaStream"]
    val set_mediaStream: t -> _MediaStream -> unit [@@js.set "mediaStream"]
  end
  module[@js.scope "MediaStreamConstraints"] MediaStreamConstraints : sig
    type t = _MediaStreamConstraints
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_audio: t -> _MediaTrackConstraints or_boolean [@@js.get "audio"]
    val set_audio: t -> _MediaTrackConstraints or_boolean -> unit [@@js.set "audio"]
    val get_peerIdentity: t -> string [@@js.get "peerIdentity"]
    val set_peerIdentity: t -> string -> unit [@@js.set "peerIdentity"]
    val get_video: t -> _MediaTrackConstraints or_boolean [@@js.get "video"]
    val set_video: t -> _MediaTrackConstraints or_boolean -> unit [@@js.set "video"]
  end
  module[@js.scope "MediaStreamErrorEventInit"] MediaStreamErrorEventInit : sig
    type t = _MediaStreamErrorEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_error: t -> _MediaStreamError or_null [@@js.get "error"]
    val set_error: t -> _MediaStreamError or_null -> unit [@@js.set "error"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "MediaStreamEventInit"] MediaStreamEventInit : sig
    type t = _MediaStreamEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_stream: t -> _MediaStream [@@js.get "stream"]
    val set_stream: t -> _MediaStream -> unit [@@js.set "stream"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "MediaStreamTrackAudioSourceOptions"] MediaStreamTrackAudioSourceOptions : sig
    type t = _MediaStreamTrackAudioSourceOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_mediaStreamTrack: t -> _MediaStreamTrack [@@js.get "mediaStreamTrack"]
    val set_mediaStreamTrack: t -> _MediaStreamTrack -> unit [@@js.set "mediaStreamTrack"]
  end
  module[@js.scope "MediaStreamTrackEventInit"] MediaStreamTrackEventInit : sig
    type t = _MediaStreamTrackEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_track: t -> _MediaStreamTrack [@@js.get "track"]
    val set_track: t -> _MediaStreamTrack -> unit [@@js.set "track"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "MediaTrackCapabilities"] MediaTrackCapabilities : sig
    type t = _MediaTrackCapabilities
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_aspectRatio: t -> _DoubleRange [@@js.get "aspectRatio"]
    val set_aspectRatio: t -> _DoubleRange -> unit [@@js.set "aspectRatio"]
    val get_autoGainControl: t -> bool list [@@js.get "autoGainControl"]
    val set_autoGainControl: t -> bool list -> unit [@@js.set "autoGainControl"]
    val get_channelCount: t -> _ULongRange [@@js.get "channelCount"]
    val set_channelCount: t -> _ULongRange -> unit [@@js.set "channelCount"]
    val get_deviceId: t -> string [@@js.get "deviceId"]
    val set_deviceId: t -> string -> unit [@@js.set "deviceId"]
    val get_echoCancellation: t -> bool list [@@js.get "echoCancellation"]
    val set_echoCancellation: t -> bool list -> unit [@@js.set "echoCancellation"]
    val get_facingMode: t -> string list [@@js.get "facingMode"]
    val set_facingMode: t -> string list -> unit [@@js.set "facingMode"]
    val get_frameRate: t -> _DoubleRange [@@js.get "frameRate"]
    val set_frameRate: t -> _DoubleRange -> unit [@@js.set "frameRate"]
    val get_groupId: t -> string [@@js.get "groupId"]
    val set_groupId: t -> string -> unit [@@js.set "groupId"]
    val get_height: t -> _ULongRange [@@js.get "height"]
    val set_height: t -> _ULongRange -> unit [@@js.set "height"]
    val get_latency: t -> _DoubleRange [@@js.get "latency"]
    val set_latency: t -> _DoubleRange -> unit [@@js.set "latency"]
    val get_noiseSuppression: t -> bool list [@@js.get "noiseSuppression"]
    val set_noiseSuppression: t -> bool list -> unit [@@js.set "noiseSuppression"]
    val get_resizeMode: t -> string list [@@js.get "resizeMode"]
    val set_resizeMode: t -> string list -> unit [@@js.set "resizeMode"]
    val get_sampleRate: t -> _ULongRange [@@js.get "sampleRate"]
    val set_sampleRate: t -> _ULongRange -> unit [@@js.set "sampleRate"]
    val get_sampleSize: t -> _ULongRange [@@js.get "sampleSize"]
    val set_sampleSize: t -> _ULongRange -> unit [@@js.set "sampleSize"]
    val get_width: t -> _ULongRange [@@js.get "width"]
    val set_width: t -> _ULongRange -> unit [@@js.set "width"]
  end
  module[@js.scope "MediaTrackConstraintSet"] MediaTrackConstraintSet : sig
    type t = _MediaTrackConstraintSet
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_aspectRatio: t -> _ConstrainDouble [@@js.get "aspectRatio"]
    val set_aspectRatio: t -> _ConstrainDouble -> unit [@@js.set "aspectRatio"]
    val get_autoGainControl: t -> _ConstrainBoolean [@@js.get "autoGainControl"]
    val set_autoGainControl: t -> _ConstrainBoolean -> unit [@@js.set "autoGainControl"]
    val get_channelCount: t -> _ConstrainULong [@@js.get "channelCount"]
    val set_channelCount: t -> _ConstrainULong -> unit [@@js.set "channelCount"]
    val get_deviceId: t -> _ConstrainDOMString [@@js.get "deviceId"]
    val set_deviceId: t -> _ConstrainDOMString -> unit [@@js.set "deviceId"]
    val get_echoCancellation: t -> _ConstrainBoolean [@@js.get "echoCancellation"]
    val set_echoCancellation: t -> _ConstrainBoolean -> unit [@@js.set "echoCancellation"]
    val get_facingMode: t -> _ConstrainDOMString [@@js.get "facingMode"]
    val set_facingMode: t -> _ConstrainDOMString -> unit [@@js.set "facingMode"]
    val get_frameRate: t -> _ConstrainDouble [@@js.get "frameRate"]
    val set_frameRate: t -> _ConstrainDouble -> unit [@@js.set "frameRate"]
    val get_groupId: t -> _ConstrainDOMString [@@js.get "groupId"]
    val set_groupId: t -> _ConstrainDOMString -> unit [@@js.set "groupId"]
    val get_height: t -> _ConstrainULong [@@js.get "height"]
    val set_height: t -> _ConstrainULong -> unit [@@js.set "height"]
    val get_latency: t -> _ConstrainDouble [@@js.get "latency"]
    val set_latency: t -> _ConstrainDouble -> unit [@@js.set "latency"]
    val get_noiseSuppression: t -> _ConstrainBoolean [@@js.get "noiseSuppression"]
    val set_noiseSuppression: t -> _ConstrainBoolean -> unit [@@js.set "noiseSuppression"]
    val get_resizeMode: t -> _ConstrainDOMString [@@js.get "resizeMode"]
    val set_resizeMode: t -> _ConstrainDOMString -> unit [@@js.set "resizeMode"]
    val get_sampleRate: t -> _ConstrainULong [@@js.get "sampleRate"]
    val set_sampleRate: t -> _ConstrainULong -> unit [@@js.set "sampleRate"]
    val get_sampleSize: t -> _ConstrainULong [@@js.get "sampleSize"]
    val set_sampleSize: t -> _ConstrainULong -> unit [@@js.set "sampleSize"]
    val get_width: t -> _ConstrainULong [@@js.get "width"]
    val set_width: t -> _ConstrainULong -> unit [@@js.set "width"]
  end
  module[@js.scope "MediaTrackConstraints"] MediaTrackConstraints : sig
    type t = _MediaTrackConstraints
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_advanced: t -> _MediaTrackConstraintSet list [@@js.get "advanced"]
    val set_advanced: t -> _MediaTrackConstraintSet list -> unit [@@js.set "advanced"]
    val cast: t -> _MediaTrackConstraintSet [@@js.cast]
  end
  module[@js.scope "MediaTrackSettings"] MediaTrackSettings : sig
    type t = _MediaTrackSettings
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_aspectRatio: t -> float [@@js.get "aspectRatio"]
    val set_aspectRatio: t -> float -> unit [@@js.set "aspectRatio"]
    val get_autoGainControl: t -> bool [@@js.get "autoGainControl"]
    val set_autoGainControl: t -> bool -> unit [@@js.set "autoGainControl"]
    val get_channelCount: t -> float [@@js.get "channelCount"]
    val set_channelCount: t -> float -> unit [@@js.set "channelCount"]
    val get_deviceId: t -> string [@@js.get "deviceId"]
    val set_deviceId: t -> string -> unit [@@js.set "deviceId"]
    val get_echoCancellation: t -> bool [@@js.get "echoCancellation"]
    val set_echoCancellation: t -> bool -> unit [@@js.set "echoCancellation"]
    val get_facingMode: t -> string [@@js.get "facingMode"]
    val set_facingMode: t -> string -> unit [@@js.set "facingMode"]
    val get_frameRate: t -> float [@@js.get "frameRate"]
    val set_frameRate: t -> float -> unit [@@js.set "frameRate"]
    val get_groupId: t -> string [@@js.get "groupId"]
    val set_groupId: t -> string -> unit [@@js.set "groupId"]
    val get_height: t -> float [@@js.get "height"]
    val set_height: t -> float -> unit [@@js.set "height"]
    val get_latency: t -> float [@@js.get "latency"]
    val set_latency: t -> float -> unit [@@js.set "latency"]
    val get_noiseSuppression: t -> bool [@@js.get "noiseSuppression"]
    val set_noiseSuppression: t -> bool -> unit [@@js.set "noiseSuppression"]
    val get_resizeMode: t -> string [@@js.get "resizeMode"]
    val set_resizeMode: t -> string -> unit [@@js.set "resizeMode"]
    val get_sampleRate: t -> float [@@js.get "sampleRate"]
    val set_sampleRate: t -> float -> unit [@@js.set "sampleRate"]
    val get_sampleSize: t -> float [@@js.get "sampleSize"]
    val set_sampleSize: t -> float -> unit [@@js.set "sampleSize"]
    val get_width: t -> float [@@js.get "width"]
    val set_width: t -> float -> unit [@@js.set "width"]
  end
  module[@js.scope "MediaTrackSupportedConstraints"] MediaTrackSupportedConstraints : sig
    type t = _MediaTrackSupportedConstraints
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_aspectRatio: t -> bool [@@js.get "aspectRatio"]
    val set_aspectRatio: t -> bool -> unit [@@js.set "aspectRatio"]
    val get_autoGainControl: t -> bool [@@js.get "autoGainControl"]
    val set_autoGainControl: t -> bool -> unit [@@js.set "autoGainControl"]
    val get_channelCount: t -> bool [@@js.get "channelCount"]
    val set_channelCount: t -> bool -> unit [@@js.set "channelCount"]
    val get_deviceId: t -> bool [@@js.get "deviceId"]
    val set_deviceId: t -> bool -> unit [@@js.set "deviceId"]
    val get_echoCancellation: t -> bool [@@js.get "echoCancellation"]
    val set_echoCancellation: t -> bool -> unit [@@js.set "echoCancellation"]
    val get_facingMode: t -> bool [@@js.get "facingMode"]
    val set_facingMode: t -> bool -> unit [@@js.set "facingMode"]
    val get_frameRate: t -> bool [@@js.get "frameRate"]
    val set_frameRate: t -> bool -> unit [@@js.set "frameRate"]
    val get_groupId: t -> bool [@@js.get "groupId"]
    val set_groupId: t -> bool -> unit [@@js.set "groupId"]
    val get_height: t -> bool [@@js.get "height"]
    val set_height: t -> bool -> unit [@@js.set "height"]
    val get_latency: t -> bool [@@js.get "latency"]
    val set_latency: t -> bool -> unit [@@js.set "latency"]
    val get_noiseSuppression: t -> bool [@@js.get "noiseSuppression"]
    val set_noiseSuppression: t -> bool -> unit [@@js.set "noiseSuppression"]
    val get_resizeMode: t -> bool [@@js.get "resizeMode"]
    val set_resizeMode: t -> bool -> unit [@@js.set "resizeMode"]
    val get_sampleRate: t -> bool [@@js.get "sampleRate"]
    val set_sampleRate: t -> bool -> unit [@@js.set "sampleRate"]
    val get_sampleSize: t -> bool [@@js.get "sampleSize"]
    val set_sampleSize: t -> bool -> unit [@@js.set "sampleSize"]
    val get_width: t -> bool [@@js.get "width"]
    val set_width: t -> bool -> unit [@@js.set "width"]
  end
  module[@js.scope "MessageEventInit"] MessageEventInit : sig
    type t = _MessageEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_data: t -> any [@@js.get "data"]
    val set_data: t -> any -> unit [@@js.set "data"]
    val get_lastEventId: t -> string [@@js.get "lastEventId"]
    val set_lastEventId: t -> string -> unit [@@js.set "lastEventId"]
    val get_origin: t -> string [@@js.get "origin"]
    val set_origin: t -> string -> unit [@@js.set "origin"]
    val get_ports: t -> _MessagePort list [@@js.get "ports"]
    val set_ports: t -> _MessagePort list -> unit [@@js.set "ports"]
    val get_source: t -> _MessageEventSource or_null [@@js.get "source"]
    val set_source: t -> _MessageEventSource or_null -> unit [@@js.set "source"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "MidiPermissionDescriptor"] MidiPermissionDescriptor : sig
    type t = _MidiPermissionDescriptor
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_name: t -> ([`L_s536_midi[@js "midi"]] [@js.enum]) [@@js.get "name"]
    val set_name: t -> ([`L_s536_midi] [@js.enum]) -> unit [@@js.set "name"]
    val get_sysex: t -> bool [@@js.get "sysex"]
    val set_sysex: t -> bool -> unit [@@js.set "sysex"]
    val cast: t -> _PermissionDescriptor [@@js.cast]
  end
  module[@js.scope "MouseEventInit"] MouseEventInit : sig
    type t = _MouseEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_button: t -> float [@@js.get "button"]
    val set_button: t -> float -> unit [@@js.set "button"]
    val get_buttons: t -> float [@@js.get "buttons"]
    val set_buttons: t -> float -> unit [@@js.set "buttons"]
    val get_clientX: t -> float [@@js.get "clientX"]
    val set_clientX: t -> float -> unit [@@js.set "clientX"]
    val get_clientY: t -> float [@@js.get "clientY"]
    val set_clientY: t -> float -> unit [@@js.set "clientY"]
    val get_movementX: t -> float [@@js.get "movementX"]
    val set_movementX: t -> float -> unit [@@js.set "movementX"]
    val get_movementY: t -> float [@@js.get "movementY"]
    val set_movementY: t -> float -> unit [@@js.set "movementY"]
    val get_relatedTarget: t -> _EventTarget or_null [@@js.get "relatedTarget"]
    val set_relatedTarget: t -> _EventTarget or_null -> unit [@@js.set "relatedTarget"]
    val get_screenX: t -> float [@@js.get "screenX"]
    val set_screenX: t -> float -> unit [@@js.set "screenX"]
    val get_screenY: t -> float [@@js.get "screenY"]
    val set_screenY: t -> float -> unit [@@js.set "screenY"]
    val cast: t -> _EventModifierInit [@@js.cast]
  end
  module[@js.scope "MultiCacheQueryOptions"] MultiCacheQueryOptions : sig
    type t = _MultiCacheQueryOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_cacheName: t -> string [@@js.get "cacheName"]
    val set_cacheName: t -> string -> unit [@@js.set "cacheName"]
    val cast: t -> _CacheQueryOptions [@@js.cast]
  end
  module[@js.scope "MutationObserverInit"] MutationObserverInit : sig
    type t = _MutationObserverInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_attributeFilter: t -> string list [@@js.get "attributeFilter"]
    val set_attributeFilter: t -> string list -> unit [@@js.set "attributeFilter"]
    val get_attributeOldValue: t -> bool [@@js.get "attributeOldValue"]
    val set_attributeOldValue: t -> bool -> unit [@@js.set "attributeOldValue"]
    val get_attributes: t -> bool [@@js.get "attributes"]
    val set_attributes: t -> bool -> unit [@@js.set "attributes"]
    val get_characterData: t -> bool [@@js.get "characterData"]
    val set_characterData: t -> bool -> unit [@@js.set "characterData"]
    val get_characterDataOldValue: t -> bool [@@js.get "characterDataOldValue"]
    val set_characterDataOldValue: t -> bool -> unit [@@js.set "characterDataOldValue"]
    val get_childList: t -> bool [@@js.get "childList"]
    val set_childList: t -> bool -> unit [@@js.set "childList"]
    val get_subtree: t -> bool [@@js.get "subtree"]
    val set_subtree: t -> bool -> unit [@@js.set "subtree"]
  end
  module[@js.scope "NavigationPreloadState"] NavigationPreloadState : sig
    type t = _NavigationPreloadState
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_enabled: t -> bool [@@js.get "enabled"]
    val set_enabled: t -> bool -> unit [@@js.set "enabled"]
    val get_headerValue: t -> string [@@js.get "headerValue"]
    val set_headerValue: t -> string -> unit [@@js.set "headerValue"]
  end
  module[@js.scope "NotificationAction"] NotificationAction : sig
    type t = _NotificationAction
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_action: t -> string [@@js.get "action"]
    val set_action: t -> string -> unit [@@js.set "action"]
    val get_icon: t -> string [@@js.get "icon"]
    val set_icon: t -> string -> unit [@@js.set "icon"]
    val get_title: t -> string [@@js.get "title"]
    val set_title: t -> string -> unit [@@js.set "title"]
  end
  module[@js.scope "NotificationOptions"] NotificationOptions : sig
    type t = _NotificationOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_actions: t -> _NotificationAction list [@@js.get "actions"]
    val set_actions: t -> _NotificationAction list -> unit [@@js.set "actions"]
    val get_badge: t -> string [@@js.get "badge"]
    val set_badge: t -> string -> unit [@@js.set "badge"]
    val get_body: t -> string [@@js.get "body"]
    val set_body: t -> string -> unit [@@js.set "body"]
    val get_data: t -> any [@@js.get "data"]
    val set_data: t -> any -> unit [@@js.set "data"]
    val get_dir: t -> _NotificationDirection [@@js.get "dir"]
    val set_dir: t -> _NotificationDirection -> unit [@@js.set "dir"]
    val get_icon: t -> string [@@js.get "icon"]
    val set_icon: t -> string -> unit [@@js.set "icon"]
    val get_image: t -> string [@@js.get "image"]
    val set_image: t -> string -> unit [@@js.set "image"]
    val get_lang: t -> string [@@js.get "lang"]
    val set_lang: t -> string -> unit [@@js.set "lang"]
    val get_renotify: t -> bool [@@js.get "renotify"]
    val set_renotify: t -> bool -> unit [@@js.set "renotify"]
    val get_requireInteraction: t -> bool [@@js.get "requireInteraction"]
    val set_requireInteraction: t -> bool -> unit [@@js.set "requireInteraction"]
    val get_silent: t -> bool [@@js.get "silent"]
    val set_silent: t -> bool -> unit [@@js.set "silent"]
    val get_tag: t -> string [@@js.get "tag"]
    val set_tag: t -> string -> unit [@@js.set "tag"]
    val get_timestamp: t -> float [@@js.get "timestamp"]
    val set_timestamp: t -> float -> unit [@@js.set "timestamp"]
    val get_vibrate: t -> _VibratePattern [@@js.get "vibrate"]
    val set_vibrate: t -> _VibratePattern -> unit [@@js.set "vibrate"]
  end
  module[@js.scope "OfflineAudioCompletionEventInit"] OfflineAudioCompletionEventInit : sig
    type t = _OfflineAudioCompletionEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_renderedBuffer: t -> _AudioBuffer [@@js.get "renderedBuffer"]
    val set_renderedBuffer: t -> _AudioBuffer -> unit [@@js.set "renderedBuffer"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "OfflineAudioContextOptions"] OfflineAudioContextOptions : sig
    type t = _OfflineAudioContextOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_length: t -> float [@@js.get "length"]
    val set_length: t -> float -> unit [@@js.set "length"]
    val get_numberOfChannels: t -> float [@@js.get "numberOfChannels"]
    val set_numberOfChannels: t -> float -> unit [@@js.set "numberOfChannels"]
    val get_sampleRate: t -> float [@@js.get "sampleRate"]
    val set_sampleRate: t -> float -> unit [@@js.set "sampleRate"]
  end
  module[@js.scope "OptionalEffectTiming"] OptionalEffectTiming : sig
    type t = _OptionalEffectTiming
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_delay: t -> float [@@js.get "delay"]
    val set_delay: t -> float -> unit [@@js.set "delay"]
    val get_direction: t -> _PlaybackDirection [@@js.get "direction"]
    val set_direction: t -> _PlaybackDirection -> unit [@@js.set "direction"]
    val get_duration: t -> string or_number [@@js.get "duration"]
    val set_duration: t -> string or_number -> unit [@@js.set "duration"]
    val get_easing: t -> string [@@js.get "easing"]
    val set_easing: t -> string -> unit [@@js.set "easing"]
    val get_endDelay: t -> float [@@js.get "endDelay"]
    val set_endDelay: t -> float -> unit [@@js.set "endDelay"]
    val get_fill: t -> _FillMode [@@js.get "fill"]
    val set_fill: t -> _FillMode -> unit [@@js.set "fill"]
    val get_iterationStart: t -> float [@@js.get "iterationStart"]
    val set_iterationStart: t -> float -> unit [@@js.set "iterationStart"]
    val get_iterations: t -> float [@@js.get "iterations"]
    val set_iterations: t -> float -> unit [@@js.set "iterations"]
  end
  module[@js.scope "OscillatorOptions"] OscillatorOptions : sig
    type t = _OscillatorOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_detune: t -> float [@@js.get "detune"]
    val set_detune: t -> float -> unit [@@js.set "detune"]
    val get_frequency: t -> float [@@js.get "frequency"]
    val set_frequency: t -> float -> unit [@@js.set "frequency"]
    val get_periodicWave: t -> _PeriodicWave [@@js.get "periodicWave"]
    val set_periodicWave: t -> _PeriodicWave -> unit [@@js.set "periodicWave"]
    val get_type: t -> _OscillatorType [@@js.get "type"]
    val set_type: t -> _OscillatorType -> unit [@@js.set "type"]
    val cast: t -> _AudioNodeOptions [@@js.cast]
  end
  module[@js.scope "PageTransitionEventInit"] PageTransitionEventInit : sig
    type t = _PageTransitionEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_persisted: t -> bool [@@js.get "persisted"]
    val set_persisted: t -> bool -> unit [@@js.set "persisted"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "PannerOptions"] PannerOptions : sig
    type t = _PannerOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_coneInnerAngle: t -> float [@@js.get "coneInnerAngle"]
    val set_coneInnerAngle: t -> float -> unit [@@js.set "coneInnerAngle"]
    val get_coneOuterAngle: t -> float [@@js.get "coneOuterAngle"]
    val set_coneOuterAngle: t -> float -> unit [@@js.set "coneOuterAngle"]
    val get_coneOuterGain: t -> float [@@js.get "coneOuterGain"]
    val set_coneOuterGain: t -> float -> unit [@@js.set "coneOuterGain"]
    val get_distanceModel: t -> _DistanceModelType [@@js.get "distanceModel"]
    val set_distanceModel: t -> _DistanceModelType -> unit [@@js.set "distanceModel"]
    val get_maxDistance: t -> float [@@js.get "maxDistance"]
    val set_maxDistance: t -> float -> unit [@@js.set "maxDistance"]
    val get_orientationX: t -> float [@@js.get "orientationX"]
    val set_orientationX: t -> float -> unit [@@js.set "orientationX"]
    val get_orientationY: t -> float [@@js.get "orientationY"]
    val set_orientationY: t -> float -> unit [@@js.set "orientationY"]
    val get_orientationZ: t -> float [@@js.get "orientationZ"]
    val set_orientationZ: t -> float -> unit [@@js.set "orientationZ"]
    val get_panningModel: t -> _PanningModelType [@@js.get "panningModel"]
    val set_panningModel: t -> _PanningModelType -> unit [@@js.set "panningModel"]
    val get_positionX: t -> float [@@js.get "positionX"]
    val set_positionX: t -> float -> unit [@@js.set "positionX"]
    val get_positionY: t -> float [@@js.get "positionY"]
    val set_positionY: t -> float -> unit [@@js.set "positionY"]
    val get_positionZ: t -> float [@@js.get "positionZ"]
    val set_positionZ: t -> float -> unit [@@js.set "positionZ"]
    val get_refDistance: t -> float [@@js.get "refDistance"]
    val set_refDistance: t -> float -> unit [@@js.set "refDistance"]
    val get_rolloffFactor: t -> float [@@js.get "rolloffFactor"]
    val set_rolloffFactor: t -> float -> unit [@@js.set "rolloffFactor"]
    val cast: t -> _AudioNodeOptions [@@js.cast]
  end
  module[@js.scope "PaymentCurrencyAmount"] PaymentCurrencyAmount : sig
    type t = _PaymentCurrencyAmount
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_currency: t -> string [@@js.get "currency"]
    val set_currency: t -> string -> unit [@@js.set "currency"]
    val get_currencySystem: t -> string [@@js.get "currencySystem"]
    val set_currencySystem: t -> string -> unit [@@js.set "currencySystem"]
    val get_value: t -> string [@@js.get "value"]
    val set_value: t -> string -> unit [@@js.set "value"]
  end
  module[@js.scope "PaymentDetailsBase"] PaymentDetailsBase : sig
    type t = _PaymentDetailsBase
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_displayItems: t -> _PaymentItem list [@@js.get "displayItems"]
    val set_displayItems: t -> _PaymentItem list -> unit [@@js.set "displayItems"]
    val get_modifiers: t -> _PaymentDetailsModifier list [@@js.get "modifiers"]
    val set_modifiers: t -> _PaymentDetailsModifier list -> unit [@@js.set "modifiers"]
    val get_shippingOptions: t -> _PaymentShippingOption list [@@js.get "shippingOptions"]
    val set_shippingOptions: t -> _PaymentShippingOption list -> unit [@@js.set "shippingOptions"]
  end
  module[@js.scope "PaymentDetailsInit"] PaymentDetailsInit : sig
    type t = _PaymentDetailsInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_id: t -> string [@@js.get "id"]
    val set_id: t -> string -> unit [@@js.set "id"]
    val get_total: t -> _PaymentItem [@@js.get "total"]
    val set_total: t -> _PaymentItem -> unit [@@js.set "total"]
    val cast: t -> _PaymentDetailsBase [@@js.cast]
  end
  module[@js.scope "PaymentDetailsModifier"] PaymentDetailsModifier : sig
    type t = _PaymentDetailsModifier
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_additionalDisplayItems: t -> _PaymentItem list [@@js.get "additionalDisplayItems"]
    val set_additionalDisplayItems: t -> _PaymentItem list -> unit [@@js.set "additionalDisplayItems"]
    val get_data: t -> any [@@js.get "data"]
    val set_data: t -> any -> unit [@@js.set "data"]
    val get_supportedMethods: t -> string list or_string [@@js.get "supportedMethods"]
    val set_supportedMethods: t -> string list or_string -> unit [@@js.set "supportedMethods"]
    val get_total: t -> _PaymentItem [@@js.get "total"]
    val set_total: t -> _PaymentItem -> unit [@@js.set "total"]
  end
  module[@js.scope "PaymentDetailsUpdate"] PaymentDetailsUpdate : sig
    type t = _PaymentDetailsUpdate
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_error: t -> string [@@js.get "error"]
    val set_error: t -> string -> unit [@@js.set "error"]
    val get_total: t -> _PaymentItem [@@js.get "total"]
    val set_total: t -> _PaymentItem -> unit [@@js.set "total"]
    val cast: t -> _PaymentDetailsBase [@@js.cast]
  end
  module[@js.scope "PaymentItem"] PaymentItem : sig
    type t = _PaymentItem
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_amount: t -> _PaymentCurrencyAmount [@@js.get "amount"]
    val set_amount: t -> _PaymentCurrencyAmount -> unit [@@js.set "amount"]
    val get_label: t -> string [@@js.get "label"]
    val set_label: t -> string -> unit [@@js.set "label"]
    val get_pending: t -> bool [@@js.get "pending"]
    val set_pending: t -> bool -> unit [@@js.set "pending"]
  end
  module[@js.scope "PaymentMethodData"] PaymentMethodData : sig
    type t = _PaymentMethodData
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_data: t -> any [@@js.get "data"]
    val set_data: t -> any -> unit [@@js.set "data"]
    val get_supportedMethods: t -> string list or_string [@@js.get "supportedMethods"]
    val set_supportedMethods: t -> string list or_string -> unit [@@js.set "supportedMethods"]
  end
  module[@js.scope "PaymentOptions"] PaymentOptions : sig
    type t = _PaymentOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_requestPayerEmail: t -> bool [@@js.get "requestPayerEmail"]
    val set_requestPayerEmail: t -> bool -> unit [@@js.set "requestPayerEmail"]
    val get_requestPayerName: t -> bool [@@js.get "requestPayerName"]
    val set_requestPayerName: t -> bool -> unit [@@js.set "requestPayerName"]
    val get_requestPayerPhone: t -> bool [@@js.get "requestPayerPhone"]
    val set_requestPayerPhone: t -> bool -> unit [@@js.set "requestPayerPhone"]
    val get_requestShipping: t -> bool [@@js.get "requestShipping"]
    val set_requestShipping: t -> bool -> unit [@@js.set "requestShipping"]
    val get_shippingType: t -> string [@@js.get "shippingType"]
    val set_shippingType: t -> string -> unit [@@js.set "shippingType"]
  end
  module[@js.scope "PaymentRequestUpdateEventInit"] PaymentRequestUpdateEventInit : sig
    type t = _PaymentRequestUpdateEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "PaymentShippingOption"] PaymentShippingOption : sig
    type t = _PaymentShippingOption
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_amount: t -> _PaymentCurrencyAmount [@@js.get "amount"]
    val set_amount: t -> _PaymentCurrencyAmount -> unit [@@js.set "amount"]
    val get_id: t -> string [@@js.get "id"]
    val set_id: t -> string -> unit [@@js.set "id"]
    val get_label: t -> string [@@js.get "label"]
    val set_label: t -> string -> unit [@@js.set "label"]
    val get_selected: t -> bool [@@js.get "selected"]
    val set_selected: t -> bool -> unit [@@js.set "selected"]
  end
  module[@js.scope "Pbkdf2Params"] Pbkdf2Params : sig
    type t = _Pbkdf2Params
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_hash: t -> _HashAlgorithmIdentifier [@@js.get "hash"]
    val set_hash: t -> _HashAlgorithmIdentifier -> unit [@@js.set "hash"]
    val get_iterations: t -> float [@@js.get "iterations"]
    val set_iterations: t -> float -> unit [@@js.set "iterations"]
    val get_salt: t -> ((((Float64Array.t_0, Int16Array.t_0, Int32Array.t_0, Int8Array.t_0, Uint16Array.t_0, Uint32Array.t_0, Uint8Array.t_0, Uint8ClampedArray.t_0) union8, Float32Array.t_0) or_, DataView.t_0) or_, ArrayBuffer.t_0) or_ [@@js.get "salt"]
    val set_salt: t -> ((((Float64Array.t_0, Int16Array.t_0, Int32Array.t_0, Int8Array.t_0, Uint16Array.t_0, Uint32Array.t_0, Uint8Array.t_0, Uint8ClampedArray.t_0) union8, Float32Array.t_0) or_, DataView.t_0) or_, ArrayBuffer.t_0) or_ -> unit [@@js.set "salt"]
    val cast: t -> _Algorithm [@@js.cast]
  end
  module[@js.scope "PerformanceObserverInit"] PerformanceObserverInit : sig
    type t = _PerformanceObserverInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_buffered: t -> bool [@@js.get "buffered"]
    val set_buffered: t -> bool -> unit [@@js.set "buffered"]
    val get_entryTypes: t -> string list [@@js.get "entryTypes"]
    val set_entryTypes: t -> string list -> unit [@@js.set "entryTypes"]
    val get_type: t -> string [@@js.get "type"]
    val set_type: t -> string -> unit [@@js.set "type"]
  end
  module[@js.scope "PeriodicWaveConstraints"] PeriodicWaveConstraints : sig
    type t = _PeriodicWaveConstraints
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_disableNormalization: t -> bool [@@js.get "disableNormalization"]
    val set_disableNormalization: t -> bool -> unit [@@js.set "disableNormalization"]
  end
  module[@js.scope "PeriodicWaveOptions"] PeriodicWaveOptions : sig
    type t = _PeriodicWaveOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_imag: t -> (Float32Array.t_0, float) or_array [@@js.get "imag"]
    val set_imag: t -> (Float32Array.t_0, float) or_array -> unit [@@js.set "imag"]
    val get_real: t -> (Float32Array.t_0, float) or_array [@@js.get "real"]
    val set_real: t -> (Float32Array.t_0, float) or_array -> unit [@@js.set "real"]
    val cast: t -> _PeriodicWaveConstraints [@@js.cast]
  end
  module[@js.scope "PermissionDescriptor"] PermissionDescriptor : sig
    type t = _PermissionDescriptor
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_name: t -> _PermissionName [@@js.get "name"]
    val set_name: t -> _PermissionName -> unit [@@js.set "name"]
  end
  module[@js.scope "PipeOptions"] PipeOptions : sig
    type t = _PipeOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_preventAbort: t -> bool [@@js.get "preventAbort"]
    val set_preventAbort: t -> bool -> unit [@@js.set "preventAbort"]
    val get_preventCancel: t -> bool [@@js.get "preventCancel"]
    val set_preventCancel: t -> bool -> unit [@@js.set "preventCancel"]
    val get_preventClose: t -> bool [@@js.get "preventClose"]
    val set_preventClose: t -> bool -> unit [@@js.set "preventClose"]
    val get_signal: t -> _AbortSignal [@@js.get "signal"]
    val set_signal: t -> _AbortSignal -> unit [@@js.set "signal"]
  end
  module[@js.scope "PointerEventInit"] PointerEventInit : sig
    type t = _PointerEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_height: t -> float [@@js.get "height"]
    val set_height: t -> float -> unit [@@js.set "height"]
    val get_isPrimary: t -> bool [@@js.get "isPrimary"]
    val set_isPrimary: t -> bool -> unit [@@js.set "isPrimary"]
    val get_pointerId: t -> float [@@js.get "pointerId"]
    val set_pointerId: t -> float -> unit [@@js.set "pointerId"]
    val get_pointerType: t -> string [@@js.get "pointerType"]
    val set_pointerType: t -> string -> unit [@@js.set "pointerType"]
    val get_pressure: t -> float [@@js.get "pressure"]
    val set_pressure: t -> float -> unit [@@js.set "pressure"]
    val get_tangentialPressure: t -> float [@@js.get "tangentialPressure"]
    val set_tangentialPressure: t -> float -> unit [@@js.set "tangentialPressure"]
    val get_tiltX: t -> float [@@js.get "tiltX"]
    val set_tiltX: t -> float -> unit [@@js.set "tiltX"]
    val get_tiltY: t -> float [@@js.get "tiltY"]
    val set_tiltY: t -> float -> unit [@@js.set "tiltY"]
    val get_twist: t -> float [@@js.get "twist"]
    val set_twist: t -> float -> unit [@@js.set "twist"]
    val get_width: t -> float [@@js.get "width"]
    val set_width: t -> float -> unit [@@js.set "width"]
    val cast: t -> _MouseEventInit [@@js.cast]
  end
  module[@js.scope "PopStateEventInit"] PopStateEventInit : sig
    type t = _PopStateEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_state: t -> any [@@js.get "state"]
    val set_state: t -> any -> unit [@@js.set "state"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "PositionOptions"] PositionOptions : sig
    type t = _PositionOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_enableHighAccuracy: t -> bool [@@js.get "enableHighAccuracy"]
    val set_enableHighAccuracy: t -> bool -> unit [@@js.set "enableHighAccuracy"]
    val get_maximumAge: t -> float [@@js.get "maximumAge"]
    val set_maximumAge: t -> float -> unit [@@js.set "maximumAge"]
    val get_timeout: t -> float [@@js.get "timeout"]
    val set_timeout: t -> float -> unit [@@js.set "timeout"]
  end
  module[@js.scope "PostMessageOptions"] PostMessageOptions : sig
    type t = _PostMessageOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_transfer: t -> any list [@@js.get "transfer"]
    val set_transfer: t -> any list -> unit [@@js.set "transfer"]
  end
  module[@js.scope "ProgressEventInit"] ProgressEventInit : sig
    type t = _ProgressEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_lengthComputable: t -> bool [@@js.get "lengthComputable"]
    val set_lengthComputable: t -> bool -> unit [@@js.set "lengthComputable"]
    val get_loaded: t -> float [@@js.get "loaded"]
    val set_loaded: t -> float -> unit [@@js.set "loaded"]
    val get_total: t -> float [@@js.get "total"]
    val set_total: t -> float -> unit [@@js.set "total"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "PromiseRejectionEventInit"] PromiseRejectionEventInit : sig
    type t = _PromiseRejectionEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_promise: t -> any Promise.t_1 [@@js.get "promise"]
    val set_promise: t -> any Promise.t_1 -> unit [@@js.set "promise"]
    val get_reason: t -> any [@@js.get "reason"]
    val set_reason: t -> any -> unit [@@js.set "reason"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "PropertyIndexedKeyframes"] PropertyIndexedKeyframes : sig
    type t = _PropertyIndexedKeyframes
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_composite: t -> (_CompositeOperationOrAuto, _CompositeOperationOrAuto) or_array [@@js.get "composite"]
    val set_composite: t -> (_CompositeOperationOrAuto, _CompositeOperationOrAuto) or_array -> unit [@@js.set "composite"]
    val get_easing: t -> string list or_string [@@js.get "easing"]
    val set_easing: t -> string list or_string -> unit [@@js.set "easing"]
    val get_offset: t -> float or_null list or_number [@@js.get "offset"]
    val set_offset: t -> float or_null list or_number -> unit [@@js.set "offset"]
    val get: t -> string -> float or_null or_string list or_string or_number or_null_or_undefined [@@js.index_get]
    val set: t -> string -> float or_null or_string list or_string or_number or_null_or_undefined -> unit [@@js.index_set]
  end
  module[@js.scope "PublicKeyCredentialCreationOptions"] PublicKeyCredentialCreationOptions : sig
    type t = _PublicKeyCredentialCreationOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_attestation: t -> _AttestationConveyancePreference [@@js.get "attestation"]
    val set_attestation: t -> _AttestationConveyancePreference -> unit [@@js.set "attestation"]
    val get_authenticatorSelection: t -> _AuthenticatorSelectionCriteria [@@js.get "authenticatorSelection"]
    val set_authenticatorSelection: t -> _AuthenticatorSelectionCriteria -> unit [@@js.set "authenticatorSelection"]
    val get_challenge: t -> _BufferSource [@@js.get "challenge"]
    val set_challenge: t -> _BufferSource -> unit [@@js.set "challenge"]
    val get_excludeCredentials: t -> _PublicKeyCredentialDescriptor list [@@js.get "excludeCredentials"]
    val set_excludeCredentials: t -> _PublicKeyCredentialDescriptor list -> unit [@@js.set "excludeCredentials"]
    val get_extensions: t -> _AuthenticationExtensionsClientInputs [@@js.get "extensions"]
    val set_extensions: t -> _AuthenticationExtensionsClientInputs -> unit [@@js.set "extensions"]
    val get_pubKeyCredParams: t -> _PublicKeyCredentialParameters list [@@js.get "pubKeyCredParams"]
    val set_pubKeyCredParams: t -> _PublicKeyCredentialParameters list -> unit [@@js.set "pubKeyCredParams"]
    val get_rp: t -> _PublicKeyCredentialRpEntity [@@js.get "rp"]
    val set_rp: t -> _PublicKeyCredentialRpEntity -> unit [@@js.set "rp"]
    val get_timeout: t -> float [@@js.get "timeout"]
    val set_timeout: t -> float -> unit [@@js.set "timeout"]
    val get_user: t -> _PublicKeyCredentialUserEntity [@@js.get "user"]
    val set_user: t -> _PublicKeyCredentialUserEntity -> unit [@@js.set "user"]
  end
  module[@js.scope "PublicKeyCredentialDescriptor"] PublicKeyCredentialDescriptor : sig
    type t = _PublicKeyCredentialDescriptor
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_id: t -> _BufferSource [@@js.get "id"]
    val set_id: t -> _BufferSource -> unit [@@js.set "id"]
    val get_transports: t -> _AuthenticatorTransport list [@@js.get "transports"]
    val set_transports: t -> _AuthenticatorTransport list -> unit [@@js.set "transports"]
    val get_type: t -> _PublicKeyCredentialType [@@js.get "type"]
    val set_type: t -> _PublicKeyCredentialType -> unit [@@js.set "type"]
  end
  module[@js.scope "PublicKeyCredentialEntity"] PublicKeyCredentialEntity : sig
    type t = _PublicKeyCredentialEntity
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_icon: t -> string [@@js.get "icon"]
    val set_icon: t -> string -> unit [@@js.set "icon"]
    val get_name: t -> string [@@js.get "name"]
    val set_name: t -> string -> unit [@@js.set "name"]
  end
  module[@js.scope "PublicKeyCredentialParameters"] PublicKeyCredentialParameters : sig
    type t = _PublicKeyCredentialParameters
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_alg: t -> _COSEAlgorithmIdentifier [@@js.get "alg"]
    val set_alg: t -> _COSEAlgorithmIdentifier -> unit [@@js.set "alg"]
    val get_type: t -> _PublicKeyCredentialType [@@js.get "type"]
    val set_type: t -> _PublicKeyCredentialType -> unit [@@js.set "type"]
  end
  module[@js.scope "PublicKeyCredentialRequestOptions"] PublicKeyCredentialRequestOptions : sig
    type t = _PublicKeyCredentialRequestOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_allowCredentials: t -> _PublicKeyCredentialDescriptor list [@@js.get "allowCredentials"]
    val set_allowCredentials: t -> _PublicKeyCredentialDescriptor list -> unit [@@js.set "allowCredentials"]
    val get_challenge: t -> _BufferSource [@@js.get "challenge"]
    val set_challenge: t -> _BufferSource -> unit [@@js.set "challenge"]
    val get_extensions: t -> _AuthenticationExtensionsClientInputs [@@js.get "extensions"]
    val set_extensions: t -> _AuthenticationExtensionsClientInputs -> unit [@@js.set "extensions"]
    val get_rpId: t -> string [@@js.get "rpId"]
    val set_rpId: t -> string -> unit [@@js.set "rpId"]
    val get_timeout: t -> float [@@js.get "timeout"]
    val set_timeout: t -> float -> unit [@@js.set "timeout"]
    val get_userVerification: t -> _UserVerificationRequirement [@@js.get "userVerification"]
    val set_userVerification: t -> _UserVerificationRequirement -> unit [@@js.set "userVerification"]
  end
  module[@js.scope "PublicKeyCredentialRpEntity"] PublicKeyCredentialRpEntity : sig
    type t = _PublicKeyCredentialRpEntity
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_id: t -> string [@@js.get "id"]
    val set_id: t -> string -> unit [@@js.set "id"]
    val cast: t -> _PublicKeyCredentialEntity [@@js.cast]
  end
  module[@js.scope "PublicKeyCredentialUserEntity"] PublicKeyCredentialUserEntity : sig
    type t = _PublicKeyCredentialUserEntity
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_displayName: t -> string [@@js.get "displayName"]
    val set_displayName: t -> string -> unit [@@js.set "displayName"]
    val get_id: t -> _BufferSource [@@js.get "id"]
    val set_id: t -> _BufferSource -> unit [@@js.set "id"]
    val cast: t -> _PublicKeyCredentialEntity [@@js.cast]
  end
  module[@js.scope "PushPermissionDescriptor"] PushPermissionDescriptor : sig
    type t = _PushPermissionDescriptor
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_name: t -> ([`L_s661_push[@js "push"]] [@js.enum]) [@@js.get "name"]
    val set_name: t -> ([`L_s661_push] [@js.enum]) -> unit [@@js.set "name"]
    val get_userVisibleOnly: t -> bool [@@js.get "userVisibleOnly"]
    val set_userVisibleOnly: t -> bool -> unit [@@js.set "userVisibleOnly"]
    val cast: t -> _PermissionDescriptor [@@js.cast]
  end
  module[@js.scope "PushSubscriptionJSON"] PushSubscriptionJSON : sig
    type t = _PushSubscriptionJSON
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_endpoint: t -> string [@@js.get "endpoint"]
    val set_endpoint: t -> string -> unit [@@js.set "endpoint"]
    val get_expirationTime: t -> float or_null [@@js.get "expirationTime"]
    val set_expirationTime: t -> float or_null -> unit [@@js.set "expirationTime"]
    val get_keys: t -> (string, string) Record.t_2 [@@js.get "keys"]
    val set_keys: t -> (string, string) Record.t_2 -> unit [@@js.set "keys"]
  end
  module[@js.scope "PushSubscriptionOptionsInit"] PushSubscriptionOptionsInit : sig
    type t = _PushSubscriptionOptionsInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_applicationServerKey: t -> _BufferSource or_string or_null [@@js.get "applicationServerKey"]
    val set_applicationServerKey: t -> _BufferSource or_string or_null -> unit [@@js.set "applicationServerKey"]
    val get_userVisibleOnly: t -> bool [@@js.get "userVisibleOnly"]
    val set_userVisibleOnly: t -> bool -> unit [@@js.set "userVisibleOnly"]
  end
  module[@js.scope "QueuingStrategy"] QueuingStrategy : sig
    type 'T t = 'T _QueuingStrategy
    val t_to_js: ('T -> Ojs.t) -> 'T t -> Ojs.t
    val t_of_js: (Ojs.t -> 'T) -> Ojs.t -> 'T t
    type 'T t_1 = 'T t
    val t_1_to_js: ('T -> Ojs.t) -> 'T t_1 -> Ojs.t
    val t_1_of_js: (Ojs.t -> 'T) -> Ojs.t -> 'T t_1
    type t_0 = any t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_highWaterMark: 'T t -> float [@@js.get "highWaterMark"]
    val set_highWaterMark: 'T t -> float -> unit [@@js.set "highWaterMark"]
    val get_size: 'T t -> 'T _QueuingStrategySizeCallback [@@js.get "size"]
    val set_size: 'T t -> 'T _QueuingStrategySizeCallback -> unit [@@js.set "size"]
  end
  module[@js.scope "RTCAnswerOptions"] RTCAnswerOptions : sig
    type t = _RTCAnswerOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val cast: t -> _RTCOfferAnswerOptions [@@js.cast]
  end
  module[@js.scope "RTCCertificateExpiration"] RTCCertificateExpiration : sig
    type t = _RTCCertificateExpiration
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_expires: t -> float [@@js.get "expires"]
    val set_expires: t -> float -> unit [@@js.set "expires"]
  end
  module[@js.scope "RTCConfiguration"] RTCConfiguration : sig
    type t = _RTCConfiguration
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_bundlePolicy: t -> _RTCBundlePolicy [@@js.get "bundlePolicy"]
    val set_bundlePolicy: t -> _RTCBundlePolicy -> unit [@@js.set "bundlePolicy"]
    val get_certificates: t -> _RTCCertificate list [@@js.get "certificates"]
    val set_certificates: t -> _RTCCertificate list -> unit [@@js.set "certificates"]
    val get_iceCandidatePoolSize: t -> float [@@js.get "iceCandidatePoolSize"]
    val set_iceCandidatePoolSize: t -> float -> unit [@@js.set "iceCandidatePoolSize"]
    val get_iceServers: t -> _RTCIceServer list [@@js.get "iceServers"]
    val set_iceServers: t -> _RTCIceServer list -> unit [@@js.set "iceServers"]
    val get_iceTransportPolicy: t -> _RTCIceTransportPolicy [@@js.get "iceTransportPolicy"]
    val set_iceTransportPolicy: t -> _RTCIceTransportPolicy -> unit [@@js.set "iceTransportPolicy"]
    val get_peerIdentity: t -> string [@@js.get "peerIdentity"]
    val set_peerIdentity: t -> string -> unit [@@js.set "peerIdentity"]
    val get_rtcpMuxPolicy: t -> _RTCRtcpMuxPolicy [@@js.get "rtcpMuxPolicy"]
    val set_rtcpMuxPolicy: t -> _RTCRtcpMuxPolicy -> unit [@@js.set "rtcpMuxPolicy"]
  end
  module[@js.scope "RTCDTMFToneChangeEventInit"] RTCDTMFToneChangeEventInit : sig
    type t = _RTCDTMFToneChangeEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_tone: t -> string [@@js.get "tone"]
    val set_tone: t -> string -> unit [@@js.set "tone"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "RTCDataChannelEventInit"] RTCDataChannelEventInit : sig
    type t = _RTCDataChannelEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_channel: t -> _RTCDataChannel [@@js.get "channel"]
    val set_channel: t -> _RTCDataChannel -> unit [@@js.set "channel"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "RTCDataChannelInit"] RTCDataChannelInit : sig
    type t = _RTCDataChannelInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_id: t -> float [@@js.get "id"]
    val set_id: t -> float -> unit [@@js.set "id"]
    val get_maxPacketLifeTime: t -> float [@@js.get "maxPacketLifeTime"]
    val set_maxPacketLifeTime: t -> float -> unit [@@js.set "maxPacketLifeTime"]
    val get_maxRetransmits: t -> float [@@js.get "maxRetransmits"]
    val set_maxRetransmits: t -> float -> unit [@@js.set "maxRetransmits"]
    val get_negotiated: t -> bool [@@js.get "negotiated"]
    val set_negotiated: t -> bool -> unit [@@js.set "negotiated"]
    val get_ordered: t -> bool [@@js.get "ordered"]
    val set_ordered: t -> bool -> unit [@@js.set "ordered"]
    val get_priority: t -> _RTCPriorityType [@@js.get "priority"]
    val set_priority: t -> _RTCPriorityType -> unit [@@js.set "priority"]
    val get_protocol: t -> string [@@js.get "protocol"]
    val set_protocol: t -> string -> unit [@@js.set "protocol"]
  end
  module[@js.scope "RTCDtlsFingerprint"] RTCDtlsFingerprint : sig
    type t = _RTCDtlsFingerprint
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_algorithm: t -> string [@@js.get "algorithm"]
    val set_algorithm: t -> string -> unit [@@js.set "algorithm"]
    val get_value: t -> string [@@js.get "value"]
    val set_value: t -> string -> unit [@@js.set "value"]
  end
  module[@js.scope "RTCDtlsParameters"] RTCDtlsParameters : sig
    type t = _RTCDtlsParameters
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_fingerprints: t -> _RTCDtlsFingerprint list [@@js.get "fingerprints"]
    val set_fingerprints: t -> _RTCDtlsFingerprint list -> unit [@@js.set "fingerprints"]
    val get_role: t -> _RTCDtlsRole [@@js.get "role"]
    val set_role: t -> _RTCDtlsRole -> unit [@@js.set "role"]
  end
  module[@js.scope "RTCErrorEventInit"] RTCErrorEventInit : sig
    type t = _RTCErrorEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_error: t -> _RTCError [@@js.get "error"]
    val set_error: t -> _RTCError -> unit [@@js.set "error"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "RTCErrorInit"] RTCErrorInit : sig
    type t = _RTCErrorInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_errorDetail: t -> _RTCErrorDetailType [@@js.get "errorDetail"]
    val set_errorDetail: t -> _RTCErrorDetailType -> unit [@@js.set "errorDetail"]
    val get_httpRequestStatusCode: t -> float [@@js.get "httpRequestStatusCode"]
    val set_httpRequestStatusCode: t -> float -> unit [@@js.set "httpRequestStatusCode"]
    val get_receivedAlert: t -> float [@@js.get "receivedAlert"]
    val set_receivedAlert: t -> float -> unit [@@js.set "receivedAlert"]
    val get_sctpCauseCode: t -> float [@@js.get "sctpCauseCode"]
    val set_sctpCauseCode: t -> float -> unit [@@js.set "sctpCauseCode"]
    val get_sdpLineNumber: t -> float [@@js.get "sdpLineNumber"]
    val set_sdpLineNumber: t -> float -> unit [@@js.set "sdpLineNumber"]
    val get_sentAlert: t -> float [@@js.get "sentAlert"]
    val set_sentAlert: t -> float -> unit [@@js.set "sentAlert"]
  end
  module[@js.scope "RTCIceCandidateAttributes"] RTCIceCandidateAttributes : sig
    type t = _RTCIceCandidateAttributes
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_addressSourceUrl: t -> string [@@js.get "addressSourceUrl"]
    val set_addressSourceUrl: t -> string -> unit [@@js.set "addressSourceUrl"]
    val get_candidateType: t -> _RTCStatsIceCandidateType [@@js.get "candidateType"]
    val set_candidateType: t -> _RTCStatsIceCandidateType -> unit [@@js.set "candidateType"]
    val get_ipAddress: t -> string [@@js.get "ipAddress"]
    val set_ipAddress: t -> string -> unit [@@js.set "ipAddress"]
    val get_portNumber: t -> float [@@js.get "portNumber"]
    val set_portNumber: t -> float -> unit [@@js.set "portNumber"]
    val get_priority: t -> float [@@js.get "priority"]
    val set_priority: t -> float -> unit [@@js.set "priority"]
    val get_transport: t -> string [@@js.get "transport"]
    val set_transport: t -> string -> unit [@@js.set "transport"]
    val cast: t -> _RTCStats [@@js.cast]
  end
  module RTCIceCandidateComplete : sig
    type t = _RTCIceCandidateComplete
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module[@js.scope "RTCIceCandidateDictionary"] RTCIceCandidateDictionary : sig
    type t = _RTCIceCandidateDictionary
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_foundation: t -> string [@@js.get "foundation"]
    val set_foundation: t -> string -> unit [@@js.set "foundation"]
    val get_ip: t -> string [@@js.get "ip"]
    val set_ip: t -> string -> unit [@@js.set "ip"]
    val get_msMTurnSessionId: t -> string [@@js.get "msMTurnSessionId"]
    val set_msMTurnSessionId: t -> string -> unit [@@js.set "msMTurnSessionId"]
    val get_port: t -> float [@@js.get "port"]
    val set_port: t -> float -> unit [@@js.set "port"]
    val get_priority: t -> float [@@js.get "priority"]
    val set_priority: t -> float -> unit [@@js.set "priority"]
    val get_protocol: t -> _RTCIceProtocol [@@js.get "protocol"]
    val set_protocol: t -> _RTCIceProtocol -> unit [@@js.set "protocol"]
    val get_relatedAddress: t -> string [@@js.get "relatedAddress"]
    val set_relatedAddress: t -> string -> unit [@@js.set "relatedAddress"]
    val get_relatedPort: t -> float [@@js.get "relatedPort"]
    val set_relatedPort: t -> float -> unit [@@js.set "relatedPort"]
    val get_tcpType: t -> _RTCIceTcpCandidateType [@@js.get "tcpType"]
    val set_tcpType: t -> _RTCIceTcpCandidateType -> unit [@@js.set "tcpType"]
    val get_type: t -> _RTCIceCandidateType [@@js.get "type"]
    val set_type: t -> _RTCIceCandidateType -> unit [@@js.set "type"]
  end
  module[@js.scope "RTCIceCandidateInit"] RTCIceCandidateInit : sig
    type t = _RTCIceCandidateInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_candidate: t -> string [@@js.get "candidate"]
    val set_candidate: t -> string -> unit [@@js.set "candidate"]
    val get_sdpMLineIndex: t -> float or_null [@@js.get "sdpMLineIndex"]
    val set_sdpMLineIndex: t -> float or_null -> unit [@@js.set "sdpMLineIndex"]
    val get_sdpMid: t -> string or_null [@@js.get "sdpMid"]
    val set_sdpMid: t -> string or_null -> unit [@@js.set "sdpMid"]
    val get_usernameFragment: t -> string or_null [@@js.get "usernameFragment"]
    val set_usernameFragment: t -> string or_null -> unit [@@js.set "usernameFragment"]
  end
  module[@js.scope "RTCIceCandidatePair"] RTCIceCandidatePair : sig
    type t = _RTCIceCandidatePair
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_local: t -> _RTCIceCandidate [@@js.get "local"]
    val set_local: t -> _RTCIceCandidate -> unit [@@js.set "local"]
    val get_remote: t -> _RTCIceCandidate [@@js.get "remote"]
    val set_remote: t -> _RTCIceCandidate -> unit [@@js.set "remote"]
  end
  module[@js.scope "RTCIceCandidatePairStats"] RTCIceCandidatePairStats : sig
    type t = _RTCIceCandidatePairStats
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_availableIncomingBitrate: t -> float [@@js.get "availableIncomingBitrate"]
    val set_availableIncomingBitrate: t -> float -> unit [@@js.set "availableIncomingBitrate"]
    val get_availableOutgoingBitrate: t -> float [@@js.get "availableOutgoingBitrate"]
    val set_availableOutgoingBitrate: t -> float -> unit [@@js.set "availableOutgoingBitrate"]
    val get_bytesReceived: t -> float [@@js.get "bytesReceived"]
    val set_bytesReceived: t -> float -> unit [@@js.set "bytesReceived"]
    val get_bytesSent: t -> float [@@js.get "bytesSent"]
    val set_bytesSent: t -> float -> unit [@@js.set "bytesSent"]
    val get_localCandidateId: t -> string [@@js.get "localCandidateId"]
    val set_localCandidateId: t -> string -> unit [@@js.set "localCandidateId"]
    val get_nominated: t -> bool [@@js.get "nominated"]
    val set_nominated: t -> bool -> unit [@@js.set "nominated"]
    val get_priority: t -> float [@@js.get "priority"]
    val set_priority: t -> float -> unit [@@js.set "priority"]
    val get_readable: t -> bool [@@js.get "readable"]
    val set_readable: t -> bool -> unit [@@js.set "readable"]
    val get_remoteCandidateId: t -> string [@@js.get "remoteCandidateId"]
    val set_remoteCandidateId: t -> string -> unit [@@js.set "remoteCandidateId"]
    val get_roundTripTime: t -> float [@@js.get "roundTripTime"]
    val set_roundTripTime: t -> float -> unit [@@js.set "roundTripTime"]
    val get_state: t -> _RTCStatsIceCandidatePairState [@@js.get "state"]
    val set_state: t -> _RTCStatsIceCandidatePairState -> unit [@@js.set "state"]
    val get_transportId: t -> string [@@js.get "transportId"]
    val set_transportId: t -> string -> unit [@@js.set "transportId"]
    val get_writable: t -> bool [@@js.get "writable"]
    val set_writable: t -> bool -> unit [@@js.set "writable"]
    val cast: t -> _RTCStats [@@js.cast]
  end
  module[@js.scope "RTCIceGatherOptions"] RTCIceGatherOptions : sig
    type t = _RTCIceGatherOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_gatherPolicy: t -> _RTCIceGatherPolicy [@@js.get "gatherPolicy"]
    val set_gatherPolicy: t -> _RTCIceGatherPolicy -> unit [@@js.set "gatherPolicy"]
    val get_iceservers: t -> _RTCIceServer list [@@js.get "iceservers"]
    val set_iceservers: t -> _RTCIceServer list -> unit [@@js.set "iceservers"]
  end
  module[@js.scope "RTCIceParameters"] RTCIceParameters : sig
    type t = _RTCIceParameters
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_password: t -> string [@@js.get "password"]
    val set_password: t -> string -> unit [@@js.set "password"]
    val get_usernameFragment: t -> string [@@js.get "usernameFragment"]
    val set_usernameFragment: t -> string -> unit [@@js.set "usernameFragment"]
  end
  module[@js.scope "RTCIceServer"] RTCIceServer : sig
    type t = _RTCIceServer
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_credential: t -> _RTCOAuthCredential or_string [@@js.get "credential"]
    val set_credential: t -> _RTCOAuthCredential or_string -> unit [@@js.set "credential"]
    val get_credentialType: t -> _RTCIceCredentialType [@@js.get "credentialType"]
    val set_credentialType: t -> _RTCIceCredentialType -> unit [@@js.set "credentialType"]
    val get_urls: t -> string list or_string [@@js.get "urls"]
    val set_urls: t -> string list or_string -> unit [@@js.set "urls"]
    val get_username: t -> string [@@js.get "username"]
    val set_username: t -> string -> unit [@@js.set "username"]
  end
  module[@js.scope "RTCIdentityProviderOptions"] RTCIdentityProviderOptions : sig
    type t = _RTCIdentityProviderOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_peerIdentity: t -> string [@@js.get "peerIdentity"]
    val set_peerIdentity: t -> string -> unit [@@js.set "peerIdentity"]
    val get_protocol: t -> string [@@js.get "protocol"]
    val set_protocol: t -> string -> unit [@@js.set "protocol"]
    val get_usernameHint: t -> string [@@js.get "usernameHint"]
    val set_usernameHint: t -> string -> unit [@@js.set "usernameHint"]
  end
  module[@js.scope "RTCInboundRTPStreamStats"] RTCInboundRTPStreamStats : sig
    type t = _RTCInboundRTPStreamStats
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_bytesReceived: t -> float [@@js.get "bytesReceived"]
    val set_bytesReceived: t -> float -> unit [@@js.set "bytesReceived"]
    val get_fractionLost: t -> float [@@js.get "fractionLost"]
    val set_fractionLost: t -> float -> unit [@@js.set "fractionLost"]
    val get_jitter: t -> float [@@js.get "jitter"]
    val set_jitter: t -> float -> unit [@@js.set "jitter"]
    val get_packetsLost: t -> float [@@js.get "packetsLost"]
    val set_packetsLost: t -> float -> unit [@@js.set "packetsLost"]
    val get_packetsReceived: t -> float [@@js.get "packetsReceived"]
    val set_packetsReceived: t -> float -> unit [@@js.set "packetsReceived"]
    val cast: t -> _RTCRTPStreamStats [@@js.cast]
  end
  module[@js.scope "RTCMediaStreamTrackStats"] RTCMediaStreamTrackStats : sig
    type t = _RTCMediaStreamTrackStats
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_audioLevel: t -> float [@@js.get "audioLevel"]
    val set_audioLevel: t -> float -> unit [@@js.set "audioLevel"]
    val get_echoReturnLoss: t -> float [@@js.get "echoReturnLoss"]
    val set_echoReturnLoss: t -> float -> unit [@@js.set "echoReturnLoss"]
    val get_echoReturnLossEnhancement: t -> float [@@js.get "echoReturnLossEnhancement"]
    val set_echoReturnLossEnhancement: t -> float -> unit [@@js.set "echoReturnLossEnhancement"]
    val get_frameHeight: t -> float [@@js.get "frameHeight"]
    val set_frameHeight: t -> float -> unit [@@js.set "frameHeight"]
    val get_frameWidth: t -> float [@@js.get "frameWidth"]
    val set_frameWidth: t -> float -> unit [@@js.set "frameWidth"]
    val get_framesCorrupted: t -> float [@@js.get "framesCorrupted"]
    val set_framesCorrupted: t -> float -> unit [@@js.set "framesCorrupted"]
    val get_framesDecoded: t -> float [@@js.get "framesDecoded"]
    val set_framesDecoded: t -> float -> unit [@@js.set "framesDecoded"]
    val get_framesDropped: t -> float [@@js.get "framesDropped"]
    val set_framesDropped: t -> float -> unit [@@js.set "framesDropped"]
    val get_framesPerSecond: t -> float [@@js.get "framesPerSecond"]
    val set_framesPerSecond: t -> float -> unit [@@js.set "framesPerSecond"]
    val get_framesReceived: t -> float [@@js.get "framesReceived"]
    val set_framesReceived: t -> float -> unit [@@js.set "framesReceived"]
    val get_framesSent: t -> float [@@js.get "framesSent"]
    val set_framesSent: t -> float -> unit [@@js.set "framesSent"]
    val get_remoteSource: t -> bool [@@js.get "remoteSource"]
    val set_remoteSource: t -> bool -> unit [@@js.set "remoteSource"]
    val get_ssrcIds: t -> string list [@@js.get "ssrcIds"]
    val set_ssrcIds: t -> string list -> unit [@@js.set "ssrcIds"]
    val get_trackIdentifier: t -> string [@@js.get "trackIdentifier"]
    val set_trackIdentifier: t -> string -> unit [@@js.set "trackIdentifier"]
    val cast: t -> _RTCStats [@@js.cast]
  end
  module[@js.scope "RTCOAuthCredential"] RTCOAuthCredential : sig
    type t = _RTCOAuthCredential
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_accessToken: t -> string [@@js.get "accessToken"]
    val set_accessToken: t -> string -> unit [@@js.set "accessToken"]
    val get_macKey: t -> string [@@js.get "macKey"]
    val set_macKey: t -> string -> unit [@@js.set "macKey"]
  end
  module[@js.scope "RTCOfferAnswerOptions"] RTCOfferAnswerOptions : sig
    type t = _RTCOfferAnswerOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_voiceActivityDetection: t -> bool [@@js.get "voiceActivityDetection"]
    val set_voiceActivityDetection: t -> bool -> unit [@@js.set "voiceActivityDetection"]
  end
  module[@js.scope "RTCOfferOptions"] RTCOfferOptions : sig
    type t = _RTCOfferOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_iceRestart: t -> bool [@@js.get "iceRestart"]
    val set_iceRestart: t -> bool -> unit [@@js.set "iceRestart"]
    val get_offerToReceiveAudio: t -> bool [@@js.get "offerToReceiveAudio"]
    val set_offerToReceiveAudio: t -> bool -> unit [@@js.set "offerToReceiveAudio"]
    val get_offerToReceiveVideo: t -> bool [@@js.get "offerToReceiveVideo"]
    val set_offerToReceiveVideo: t -> bool -> unit [@@js.set "offerToReceiveVideo"]
    val cast: t -> _RTCOfferAnswerOptions [@@js.cast]
  end
  module[@js.scope "RTCOutboundRTPStreamStats"] RTCOutboundRTPStreamStats : sig
    type t = _RTCOutboundRTPStreamStats
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_bytesSent: t -> float [@@js.get "bytesSent"]
    val set_bytesSent: t -> float -> unit [@@js.set "bytesSent"]
    val get_packetsSent: t -> float [@@js.get "packetsSent"]
    val set_packetsSent: t -> float -> unit [@@js.set "packetsSent"]
    val get_roundTripTime: t -> float [@@js.get "roundTripTime"]
    val set_roundTripTime: t -> float -> unit [@@js.set "roundTripTime"]
    val get_targetBitrate: t -> float [@@js.get "targetBitrate"]
    val set_targetBitrate: t -> float -> unit [@@js.set "targetBitrate"]
    val cast: t -> _RTCRTPStreamStats [@@js.cast]
  end
  module[@js.scope "RTCPeerConnectionIceErrorEventInit"] RTCPeerConnectionIceErrorEventInit : sig
    type t = _RTCPeerConnectionIceErrorEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_errorCode: t -> float [@@js.get "errorCode"]
    val set_errorCode: t -> float -> unit [@@js.set "errorCode"]
    val get_hostCandidate: t -> string [@@js.get "hostCandidate"]
    val set_hostCandidate: t -> string -> unit [@@js.set "hostCandidate"]
    val get_statusText: t -> string [@@js.get "statusText"]
    val set_statusText: t -> string -> unit [@@js.set "statusText"]
    val get_url: t -> string [@@js.get "url"]
    val set_url: t -> string -> unit [@@js.set "url"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "RTCPeerConnectionIceEventInit"] RTCPeerConnectionIceEventInit : sig
    type t = _RTCPeerConnectionIceEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_candidate: t -> _RTCIceCandidate or_null [@@js.get "candidate"]
    val set_candidate: t -> _RTCIceCandidate or_null -> unit [@@js.set "candidate"]
    val get_url: t -> string or_null [@@js.get "url"]
    val set_url: t -> string or_null -> unit [@@js.set "url"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "RTCRTPStreamStats"] RTCRTPStreamStats : sig
    type t = _RTCRTPStreamStats
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_associateStatsId: t -> string [@@js.get "associateStatsId"]
    val set_associateStatsId: t -> string -> unit [@@js.set "associateStatsId"]
    val get_codecId: t -> string [@@js.get "codecId"]
    val set_codecId: t -> string -> unit [@@js.set "codecId"]
    val get_firCount: t -> float [@@js.get "firCount"]
    val set_firCount: t -> float -> unit [@@js.set "firCount"]
    val get_isRemote: t -> bool [@@js.get "isRemote"]
    val set_isRemote: t -> bool -> unit [@@js.set "isRemote"]
    val get_mediaTrackId: t -> string [@@js.get "mediaTrackId"]
    val set_mediaTrackId: t -> string -> unit [@@js.set "mediaTrackId"]
    val get_mediaType: t -> string [@@js.get "mediaType"]
    val set_mediaType: t -> string -> unit [@@js.set "mediaType"]
    val get_nackCount: t -> float [@@js.get "nackCount"]
    val set_nackCount: t -> float -> unit [@@js.set "nackCount"]
    val get_pliCount: t -> float [@@js.get "pliCount"]
    val set_pliCount: t -> float -> unit [@@js.set "pliCount"]
    val get_sliCount: t -> float [@@js.get "sliCount"]
    val set_sliCount: t -> float -> unit [@@js.set "sliCount"]
    val get_ssrc: t -> string [@@js.get "ssrc"]
    val set_ssrc: t -> string -> unit [@@js.set "ssrc"]
    val get_transportId: t -> string [@@js.get "transportId"]
    val set_transportId: t -> string -> unit [@@js.set "transportId"]
    val cast: t -> _RTCStats [@@js.cast]
  end
  module[@js.scope "RTCRtcpFeedback"] RTCRtcpFeedback : sig
    type t = _RTCRtcpFeedback
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_parameter: t -> string [@@js.get "parameter"]
    val set_parameter: t -> string -> unit [@@js.set "parameter"]
    val get_type: t -> string [@@js.get "type"]
    val set_type: t -> string -> unit [@@js.set "type"]
  end
  module[@js.scope "RTCRtcpParameters"] RTCRtcpParameters : sig
    type t = _RTCRtcpParameters
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_cname: t -> string [@@js.get "cname"]
    val set_cname: t -> string -> unit [@@js.set "cname"]
    val get_reducedSize: t -> bool [@@js.get "reducedSize"]
    val set_reducedSize: t -> bool -> unit [@@js.set "reducedSize"]
  end
  module[@js.scope "RTCRtpCapabilities"] RTCRtpCapabilities : sig
    type t = _RTCRtpCapabilities
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_codecs: t -> _RTCRtpCodecCapability list [@@js.get "codecs"]
    val set_codecs: t -> _RTCRtpCodecCapability list -> unit [@@js.set "codecs"]
    val get_headerExtensions: t -> _RTCRtpHeaderExtensionCapability list [@@js.get "headerExtensions"]
    val set_headerExtensions: t -> _RTCRtpHeaderExtensionCapability list -> unit [@@js.set "headerExtensions"]
  end
  module[@js.scope "RTCRtpCodecCapability"] RTCRtpCodecCapability : sig
    type t = _RTCRtpCodecCapability
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_channels: t -> float [@@js.get "channels"]
    val set_channels: t -> float -> unit [@@js.set "channels"]
    val get_clockRate: t -> float [@@js.get "clockRate"]
    val set_clockRate: t -> float -> unit [@@js.set "clockRate"]
    val get_mimeType: t -> string [@@js.get "mimeType"]
    val set_mimeType: t -> string -> unit [@@js.set "mimeType"]
    val get_sdpFmtpLine: t -> string [@@js.get "sdpFmtpLine"]
    val set_sdpFmtpLine: t -> string -> unit [@@js.set "sdpFmtpLine"]
  end
  module[@js.scope "RTCRtpCodecParameters"] RTCRtpCodecParameters : sig
    type t = _RTCRtpCodecParameters
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_channels: t -> float [@@js.get "channels"]
    val set_channels: t -> float -> unit [@@js.set "channels"]
    val get_clockRate: t -> float [@@js.get "clockRate"]
    val set_clockRate: t -> float -> unit [@@js.set "clockRate"]
    val get_mimeType: t -> string [@@js.get "mimeType"]
    val set_mimeType: t -> string -> unit [@@js.set "mimeType"]
    val get_payloadType: t -> float [@@js.get "payloadType"]
    val set_payloadType: t -> float -> unit [@@js.set "payloadType"]
    val get_sdpFmtpLine: t -> string [@@js.get "sdpFmtpLine"]
    val set_sdpFmtpLine: t -> string -> unit [@@js.set "sdpFmtpLine"]
  end
  module[@js.scope "RTCRtpCodingParameters"] RTCRtpCodingParameters : sig
    type t = _RTCRtpCodingParameters
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_rid: t -> string [@@js.get "rid"]
    val set_rid: t -> string -> unit [@@js.set "rid"]
  end
  module[@js.scope "RTCRtpContributingSource"] RTCRtpContributingSource : sig
    type t = _RTCRtpContributingSource
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_audioLevel: t -> float [@@js.get "audioLevel"]
    val set_audioLevel: t -> float -> unit [@@js.set "audioLevel"]
    val get_rtpTimestamp: t -> float [@@js.get "rtpTimestamp"]
    val set_rtpTimestamp: t -> float -> unit [@@js.set "rtpTimestamp"]
    val get_source: t -> float [@@js.get "source"]
    val set_source: t -> float -> unit [@@js.set "source"]
    val get_timestamp: t -> float [@@js.get "timestamp"]
    val set_timestamp: t -> float -> unit [@@js.set "timestamp"]
  end
  module[@js.scope "RTCRtpDecodingParameters"] RTCRtpDecodingParameters : sig
    type t = _RTCRtpDecodingParameters
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val cast: t -> _RTCRtpCodingParameters [@@js.cast]
  end
  module[@js.scope "RTCRtpEncodingParameters"] RTCRtpEncodingParameters : sig
    type t = _RTCRtpEncodingParameters
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_active: t -> bool [@@js.get "active"]
    val set_active: t -> bool -> unit [@@js.set "active"]
    val get_codecPayloadType: t -> float [@@js.get "codecPayloadType"]
    val set_codecPayloadType: t -> float -> unit [@@js.set "codecPayloadType"]
    val get_dtx: t -> _RTCDtxStatus [@@js.get "dtx"]
    val set_dtx: t -> _RTCDtxStatus -> unit [@@js.set "dtx"]
    val get_maxBitrate: t -> float [@@js.get "maxBitrate"]
    val set_maxBitrate: t -> float -> unit [@@js.set "maxBitrate"]
    val get_maxFramerate: t -> float [@@js.get "maxFramerate"]
    val set_maxFramerate: t -> float -> unit [@@js.set "maxFramerate"]
    val get_ptime: t -> float [@@js.get "ptime"]
    val set_ptime: t -> float -> unit [@@js.set "ptime"]
    val get_scaleResolutionDownBy: t -> float [@@js.get "scaleResolutionDownBy"]
    val set_scaleResolutionDownBy: t -> float -> unit [@@js.set "scaleResolutionDownBy"]
    val cast: t -> _RTCRtpCodingParameters [@@js.cast]
  end
  module[@js.scope "RTCRtpFecParameters"] RTCRtpFecParameters : sig
    type t = _RTCRtpFecParameters
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_mechanism: t -> string [@@js.get "mechanism"]
    val set_mechanism: t -> string -> unit [@@js.set "mechanism"]
    val get_ssrc: t -> float [@@js.get "ssrc"]
    val set_ssrc: t -> float -> unit [@@js.set "ssrc"]
  end
  module[@js.scope "RTCRtpHeaderExtension"] RTCRtpHeaderExtension : sig
    type t = _RTCRtpHeaderExtension
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_kind: t -> string [@@js.get "kind"]
    val set_kind: t -> string -> unit [@@js.set "kind"]
    val get_preferredEncrypt: t -> bool [@@js.get "preferredEncrypt"]
    val set_preferredEncrypt: t -> bool -> unit [@@js.set "preferredEncrypt"]
    val get_preferredId: t -> float [@@js.get "preferredId"]
    val set_preferredId: t -> float -> unit [@@js.set "preferredId"]
    val get_uri: t -> string [@@js.get "uri"]
    val set_uri: t -> string -> unit [@@js.set "uri"]
  end
  module[@js.scope "RTCRtpHeaderExtensionCapability"] RTCRtpHeaderExtensionCapability : sig
    type t = _RTCRtpHeaderExtensionCapability
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_uri: t -> string [@@js.get "uri"]
    val set_uri: t -> string -> unit [@@js.set "uri"]
  end
  module[@js.scope "RTCRtpHeaderExtensionParameters"] RTCRtpHeaderExtensionParameters : sig
    type t = _RTCRtpHeaderExtensionParameters
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_encrypted: t -> bool [@@js.get "encrypted"]
    val set_encrypted: t -> bool -> unit [@@js.set "encrypted"]
    val get_id: t -> float [@@js.get "id"]
    val set_id: t -> float -> unit [@@js.set "id"]
    val get_uri: t -> string [@@js.get "uri"]
    val set_uri: t -> string -> unit [@@js.set "uri"]
  end
  module[@js.scope "RTCRtpParameters"] RTCRtpParameters : sig
    type t = _RTCRtpParameters
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_codecs: t -> _RTCRtpCodecParameters list [@@js.get "codecs"]
    val set_codecs: t -> _RTCRtpCodecParameters list -> unit [@@js.set "codecs"]
    val get_headerExtensions: t -> _RTCRtpHeaderExtensionParameters list [@@js.get "headerExtensions"]
    val set_headerExtensions: t -> _RTCRtpHeaderExtensionParameters list -> unit [@@js.set "headerExtensions"]
    val get_rtcp: t -> _RTCRtcpParameters [@@js.get "rtcp"]
    val set_rtcp: t -> _RTCRtcpParameters -> unit [@@js.set "rtcp"]
  end
  module[@js.scope "RTCRtpReceiveParameters"] RTCRtpReceiveParameters : sig
    type t = _RTCRtpReceiveParameters
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_encodings: t -> _RTCRtpDecodingParameters list [@@js.get "encodings"]
    val set_encodings: t -> _RTCRtpDecodingParameters list -> unit [@@js.set "encodings"]
    val cast: t -> _RTCRtpParameters [@@js.cast]
  end
  module[@js.scope "RTCRtpRtxParameters"] RTCRtpRtxParameters : sig
    type t = _RTCRtpRtxParameters
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_ssrc: t -> float [@@js.get "ssrc"]
    val set_ssrc: t -> float -> unit [@@js.set "ssrc"]
  end
  module[@js.scope "RTCRtpSendParameters"] RTCRtpSendParameters : sig
    type t = _RTCRtpSendParameters
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_degradationPreference: t -> _RTCDegradationPreference [@@js.get "degradationPreference"]
    val set_degradationPreference: t -> _RTCDegradationPreference -> unit [@@js.set "degradationPreference"]
    val get_encodings: t -> _RTCRtpEncodingParameters list [@@js.get "encodings"]
    val set_encodings: t -> _RTCRtpEncodingParameters list -> unit [@@js.set "encodings"]
    val get_priority: t -> _RTCPriorityType [@@js.get "priority"]
    val set_priority: t -> _RTCPriorityType -> unit [@@js.set "priority"]
    val get_transactionId: t -> string [@@js.get "transactionId"]
    val set_transactionId: t -> string -> unit [@@js.set "transactionId"]
    val cast: t -> _RTCRtpParameters [@@js.cast]
  end
  module[@js.scope "RTCRtpSynchronizationSource"] RTCRtpSynchronizationSource : sig
    type t = _RTCRtpSynchronizationSource
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_voiceActivityFlag: t -> bool [@@js.get "voiceActivityFlag"]
    val set_voiceActivityFlag: t -> bool -> unit [@@js.set "voiceActivityFlag"]
    val cast: t -> _RTCRtpContributingSource [@@js.cast]
  end
  module[@js.scope "RTCRtpTransceiverInit"] RTCRtpTransceiverInit : sig
    type t = _RTCRtpTransceiverInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_direction: t -> _RTCRtpTransceiverDirection [@@js.get "direction"]
    val set_direction: t -> _RTCRtpTransceiverDirection -> unit [@@js.set "direction"]
    val get_sendEncodings: t -> _RTCRtpEncodingParameters list [@@js.get "sendEncodings"]
    val set_sendEncodings: t -> _RTCRtpEncodingParameters list -> unit [@@js.set "sendEncodings"]
    val get_streams: t -> _MediaStream list [@@js.get "streams"]
    val set_streams: t -> _MediaStream list -> unit [@@js.set "streams"]
  end
  module[@js.scope "RTCRtpUnhandled"] RTCRtpUnhandled : sig
    type t = _RTCRtpUnhandled
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_muxId: t -> string [@@js.get "muxId"]
    val set_muxId: t -> string -> unit [@@js.set "muxId"]
    val get_payloadType: t -> float [@@js.get "payloadType"]
    val set_payloadType: t -> float -> unit [@@js.set "payloadType"]
    val get_ssrc: t -> float [@@js.get "ssrc"]
    val set_ssrc: t -> float -> unit [@@js.set "ssrc"]
  end
  module[@js.scope "RTCSessionDescriptionInit"] RTCSessionDescriptionInit : sig
    type t = _RTCSessionDescriptionInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_sdp: t -> string [@@js.get "sdp"]
    val set_sdp: t -> string -> unit [@@js.set "sdp"]
    val get_type: t -> _RTCSdpType [@@js.get "type"]
    val set_type: t -> _RTCSdpType -> unit [@@js.set "type"]
  end
  module[@js.scope "RTCSrtpKeyParam"] RTCSrtpKeyParam : sig
    type t = _RTCSrtpKeyParam
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_keyMethod: t -> string [@@js.get "keyMethod"]
    val set_keyMethod: t -> string -> unit [@@js.set "keyMethod"]
    val get_keySalt: t -> string [@@js.get "keySalt"]
    val set_keySalt: t -> string -> unit [@@js.set "keySalt"]
    val get_lifetime: t -> string [@@js.get "lifetime"]
    val set_lifetime: t -> string -> unit [@@js.set "lifetime"]
    val get_mkiLength: t -> float [@@js.get "mkiLength"]
    val set_mkiLength: t -> float -> unit [@@js.set "mkiLength"]
    val get_mkiValue: t -> float [@@js.get "mkiValue"]
    val set_mkiValue: t -> float -> unit [@@js.set "mkiValue"]
  end
  module[@js.scope "RTCSrtpSdesParameters"] RTCSrtpSdesParameters : sig
    type t = _RTCSrtpSdesParameters
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_cryptoSuite: t -> string [@@js.get "cryptoSuite"]
    val set_cryptoSuite: t -> string -> unit [@@js.set "cryptoSuite"]
    val get_keyParams: t -> _RTCSrtpKeyParam list [@@js.get "keyParams"]
    val set_keyParams: t -> _RTCSrtpKeyParam list -> unit [@@js.set "keyParams"]
    val get_sessionParams: t -> string list [@@js.get "sessionParams"]
    val set_sessionParams: t -> string list -> unit [@@js.set "sessionParams"]
    val get_tag: t -> float [@@js.get "tag"]
    val set_tag: t -> float -> unit [@@js.set "tag"]
  end
  module[@js.scope "RTCSsrcRange"] RTCSsrcRange : sig
    type t = _RTCSsrcRange
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_max: t -> float [@@js.get "max"]
    val set_max: t -> float -> unit [@@js.set "max"]
    val get_min: t -> float [@@js.get "min"]
    val set_min: t -> float -> unit [@@js.set "min"]
  end
  module[@js.scope "RTCStats"] RTCStats : sig
    type t = _RTCStats
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_id: t -> string [@@js.get "id"]
    val set_id: t -> string -> unit [@@js.set "id"]
    val get_timestamp: t -> float [@@js.get "timestamp"]
    val set_timestamp: t -> float -> unit [@@js.set "timestamp"]
    val get_type: t -> _RTCStatsType [@@js.get "type"]
    val set_type: t -> _RTCStatsType -> unit [@@js.set "type"]
  end
  module[@js.scope "RTCStatsEventInit"] RTCStatsEventInit : sig
    type t = _RTCStatsEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_report: t -> _RTCStatsReport [@@js.get "report"]
    val set_report: t -> _RTCStatsReport -> unit [@@js.set "report"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "RTCStatsReport"] RTCStatsReport : sig
    type t = _RTCStatsReport
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val forEach: t -> callbackfn:(value:any -> key:string -> parent:t -> unit) -> ?thisArg:any -> unit -> unit [@@js.call "forEach"]
  end
  module[@js.scope "RTCTrackEventInit"] RTCTrackEventInit : sig
    type t = _RTCTrackEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_receiver: t -> _RTCRtpReceiver [@@js.get "receiver"]
    val set_receiver: t -> _RTCRtpReceiver -> unit [@@js.set "receiver"]
    val get_streams: t -> _MediaStream list [@@js.get "streams"]
    val set_streams: t -> _MediaStream list -> unit [@@js.set "streams"]
    val get_track: t -> _MediaStreamTrack [@@js.get "track"]
    val set_track: t -> _MediaStreamTrack -> unit [@@js.set "track"]
    val get_transceiver: t -> _RTCRtpTransceiver [@@js.get "transceiver"]
    val set_transceiver: t -> _RTCRtpTransceiver -> unit [@@js.set "transceiver"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "RTCTransportStats"] RTCTransportStats : sig
    type t = _RTCTransportStats
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_activeConnection: t -> bool [@@js.get "activeConnection"]
    val set_activeConnection: t -> bool -> unit [@@js.set "activeConnection"]
    val get_bytesReceived: t -> float [@@js.get "bytesReceived"]
    val set_bytesReceived: t -> float -> unit [@@js.set "bytesReceived"]
    val get_bytesSent: t -> float [@@js.get "bytesSent"]
    val set_bytesSent: t -> float -> unit [@@js.set "bytesSent"]
    val get_localCertificateId: t -> string [@@js.get "localCertificateId"]
    val set_localCertificateId: t -> string -> unit [@@js.set "localCertificateId"]
    val get_remoteCertificateId: t -> string [@@js.get "remoteCertificateId"]
    val set_remoteCertificateId: t -> string -> unit [@@js.set "remoteCertificateId"]
    val get_rtcpTransportStatsId: t -> string [@@js.get "rtcpTransportStatsId"]
    val set_rtcpTransportStatsId: t -> string -> unit [@@js.set "rtcpTransportStatsId"]
    val get_selectedCandidatePairId: t -> string [@@js.get "selectedCandidatePairId"]
    val set_selectedCandidatePairId: t -> string -> unit [@@js.set "selectedCandidatePairId"]
    val cast: t -> _RTCStats [@@js.cast]
  end
  module[@js.scope "ReadableStreamReadDoneResult"] ReadableStreamReadDoneResult : sig
    type 'T t = 'T _ReadableStreamReadDoneResult
    val t_to_js: ('T -> Ojs.t) -> 'T t -> Ojs.t
    val t_of_js: (Ojs.t -> 'T) -> Ojs.t -> 'T t
    type 'T t_1 = 'T t
    val t_1_to_js: ('T -> Ojs.t) -> 'T t_1 -> Ojs.t
    val t_1_of_js: (Ojs.t -> 'T) -> Ojs.t -> 'T t_1
    val get_done: 'T t -> ([`L_b_true[@js true]] [@js.enum]) [@@js.get "done"]
    val set_done: 'T t -> ([`L_b_true] [@js.enum]) -> unit [@@js.set "done"]
    val get_value: 'T t -> 'T [@@js.get "value"]
    val set_value: 'T t -> 'T -> unit [@@js.set "value"]
  end
  module[@js.scope "ReadableStreamReadValueResult"] ReadableStreamReadValueResult : sig
    type 'T t = 'T _ReadableStreamReadValueResult
    val t_to_js: ('T -> Ojs.t) -> 'T t -> Ojs.t
    val t_of_js: (Ojs.t -> 'T) -> Ojs.t -> 'T t
    type 'T t_1 = 'T t
    val t_1_to_js: ('T -> Ojs.t) -> 'T t_1 -> Ojs.t
    val t_1_of_js: (Ojs.t -> 'T) -> Ojs.t -> 'T t_1
    val get_done: 'T t -> ([`L_b_false[@js false]] [@js.enum]) [@@js.get "done"]
    val set_done: 'T t -> ([`L_b_false] [@js.enum]) -> unit [@@js.set "done"]
    val get_value: 'T t -> 'T [@@js.get "value"]
    val set_value: 'T t -> 'T -> unit [@@js.set "value"]
  end
  module[@js.scope "RegistrationOptions"] RegistrationOptions : sig
    type t = _RegistrationOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_scope: t -> string [@@js.get "scope"]
    val set_scope: t -> string -> unit [@@js.set "scope"]
    val get_type: t -> _WorkerType [@@js.get "type"]
    val set_type: t -> _WorkerType -> unit [@@js.set "type"]
    val get_updateViaCache: t -> _ServiceWorkerUpdateViaCache [@@js.get "updateViaCache"]
    val set_updateViaCache: t -> _ServiceWorkerUpdateViaCache -> unit [@@js.set "updateViaCache"]
  end
  module[@js.scope "RequestInit"] RequestInit : sig
    type t = _RequestInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_body: t -> _BodyInit or_null [@@js.get "body"]
    val set_body: t -> _BodyInit or_null -> unit [@@js.set "body"]
    val get_cache: t -> _RequestCache [@@js.get "cache"]
    val set_cache: t -> _RequestCache -> unit [@@js.set "cache"]
    val get_credentials: t -> _RequestCredentials [@@js.get "credentials"]
    val set_credentials: t -> _RequestCredentials -> unit [@@js.set "credentials"]
    val get_headers: t -> _HeadersInit [@@js.get "headers"]
    val set_headers: t -> _HeadersInit -> unit [@@js.set "headers"]
    val get_integrity: t -> string [@@js.get "integrity"]
    val set_integrity: t -> string -> unit [@@js.set "integrity"]
    val get_keepalive: t -> bool [@@js.get "keepalive"]
    val set_keepalive: t -> bool -> unit [@@js.set "keepalive"]
    val get_method: t -> string [@@js.get "method"]
    val set_method: t -> string -> unit [@@js.set "method"]
    val get_mode: t -> _RequestMode [@@js.get "mode"]
    val set_mode: t -> _RequestMode -> unit [@@js.set "mode"]
    val get_redirect: t -> _RequestRedirect [@@js.get "redirect"]
    val set_redirect: t -> _RequestRedirect -> unit [@@js.set "redirect"]
    val get_referrer: t -> string [@@js.get "referrer"]
    val set_referrer: t -> string -> unit [@@js.set "referrer"]
    val get_referrerPolicy: t -> _ReferrerPolicy [@@js.get "referrerPolicy"]
    val set_referrerPolicy: t -> _ReferrerPolicy -> unit [@@js.set "referrerPolicy"]
    val get_signal: t -> _AbortSignal or_null [@@js.get "signal"]
    val set_signal: t -> _AbortSignal or_null -> unit [@@js.set "signal"]
    val get_window: t -> any [@@js.get "window"]
    val set_window: t -> any -> unit [@@js.set "window"]
  end
  module[@js.scope "ResponseInit"] ResponseInit : sig
    type t = _ResponseInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_headers: t -> _HeadersInit [@@js.get "headers"]
    val set_headers: t -> _HeadersInit -> unit [@@js.set "headers"]
    val get_status: t -> float [@@js.get "status"]
    val set_status: t -> float -> unit [@@js.set "status"]
    val get_statusText: t -> string [@@js.get "statusText"]
    val set_statusText: t -> string -> unit [@@js.set "statusText"]
  end
  module[@js.scope "RsaHashedImportParams"] RsaHashedImportParams : sig
    type t = _RsaHashedImportParams
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_hash: t -> _HashAlgorithmIdentifier [@@js.get "hash"]
    val set_hash: t -> _HashAlgorithmIdentifier -> unit [@@js.set "hash"]
    val cast: t -> _Algorithm [@@js.cast]
  end
  module[@js.scope "RsaHashedKeyAlgorithm"] RsaHashedKeyAlgorithm : sig
    type t = _RsaHashedKeyAlgorithm
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_hash: t -> _KeyAlgorithm [@@js.get "hash"]
    val set_hash: t -> _KeyAlgorithm -> unit [@@js.set "hash"]
    val cast: t -> _RsaKeyAlgorithm [@@js.cast]
  end
  module[@js.scope "RsaHashedKeyGenParams"] RsaHashedKeyGenParams : sig
    type t = _RsaHashedKeyGenParams
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_hash: t -> _HashAlgorithmIdentifier [@@js.get "hash"]
    val set_hash: t -> _HashAlgorithmIdentifier -> unit [@@js.set "hash"]
    val cast: t -> _RsaKeyGenParams [@@js.cast]
  end
  module[@js.scope "RsaKeyAlgorithm"] RsaKeyAlgorithm : sig
    type t = _RsaKeyAlgorithm
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_modulusLength: t -> float [@@js.get "modulusLength"]
    val set_modulusLength: t -> float -> unit [@@js.set "modulusLength"]
    val get_publicExponent: t -> _BigInteger [@@js.get "publicExponent"]
    val set_publicExponent: t -> _BigInteger -> unit [@@js.set "publicExponent"]
    val cast: t -> _KeyAlgorithm [@@js.cast]
  end
  module[@js.scope "RsaKeyGenParams"] RsaKeyGenParams : sig
    type t = _RsaKeyGenParams
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_modulusLength: t -> float [@@js.get "modulusLength"]
    val set_modulusLength: t -> float -> unit [@@js.set "modulusLength"]
    val get_publicExponent: t -> _BigInteger [@@js.get "publicExponent"]
    val set_publicExponent: t -> _BigInteger -> unit [@@js.set "publicExponent"]
    val cast: t -> _Algorithm [@@js.cast]
  end
  module[@js.scope "RsaOaepParams"] RsaOaepParams : sig
    type t = _RsaOaepParams
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_label: t -> ((((Float64Array.t_0, Int16Array.t_0, Int32Array.t_0, Int8Array.t_0, Uint16Array.t_0, Uint32Array.t_0, Uint8Array.t_0, Uint8ClampedArray.t_0) union8, Float32Array.t_0) or_, DataView.t_0) or_, ArrayBuffer.t_0) or_ [@@js.get "label"]
    val set_label: t -> ((((Float64Array.t_0, Int16Array.t_0, Int32Array.t_0, Int8Array.t_0, Uint16Array.t_0, Uint32Array.t_0, Uint8Array.t_0, Uint8ClampedArray.t_0) union8, Float32Array.t_0) or_, DataView.t_0) or_, ArrayBuffer.t_0) or_ -> unit [@@js.set "label"]
    val cast: t -> _Algorithm [@@js.cast]
  end
  module[@js.scope "RsaOtherPrimesInfo"] RsaOtherPrimesInfo : sig
    type t = _RsaOtherPrimesInfo
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_d: t -> string [@@js.get "d"]
    val set_d: t -> string -> unit [@@js.set "d"]
    val get_r: t -> string [@@js.get "r"]
    val set_r: t -> string -> unit [@@js.set "r"]
    val get_t: t -> string [@@js.get "t"]
    val set_t: t -> string -> unit [@@js.set "t"]
  end
  module[@js.scope "RsaPssParams"] RsaPssParams : sig
    type t = _RsaPssParams
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_saltLength: t -> float [@@js.get "saltLength"]
    val set_saltLength: t -> float -> unit [@@js.set "saltLength"]
    val cast: t -> _Algorithm [@@js.cast]
  end
  module[@js.scope "SVGBoundingBoxOptions"] SVGBoundingBoxOptions : sig
    type t = _SVGBoundingBoxOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_clipped: t -> bool [@@js.get "clipped"]
    val set_clipped: t -> bool -> unit [@@js.set "clipped"]
    val get_fill: t -> bool [@@js.get "fill"]
    val set_fill: t -> bool -> unit [@@js.set "fill"]
    val get_markers: t -> bool [@@js.get "markers"]
    val set_markers: t -> bool -> unit [@@js.set "markers"]
    val get_stroke: t -> bool [@@js.get "stroke"]
    val set_stroke: t -> bool -> unit [@@js.set "stroke"]
  end
  module[@js.scope "ScopedCredentialDescriptor"] ScopedCredentialDescriptor : sig
    type t = _ScopedCredentialDescriptor
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_id: t -> ((((Float64Array.t_0, Int16Array.t_0, Int32Array.t_0, Int8Array.t_0, Uint16Array.t_0, Uint32Array.t_0, Uint8Array.t_0, Uint8ClampedArray.t_0) union8, Float32Array.t_0) or_, DataView.t_0) or_, ArrayBuffer.t_0) or_ or_null [@@js.get "id"]
    val set_id: t -> ((((Float64Array.t_0, Int16Array.t_0, Int32Array.t_0, Int8Array.t_0, Uint16Array.t_0, Uint32Array.t_0, Uint8Array.t_0, Uint8ClampedArray.t_0) union8, Float32Array.t_0) or_, DataView.t_0) or_, ArrayBuffer.t_0) or_ or_null -> unit [@@js.set "id"]
    val get_transports: t -> _Transport list [@@js.get "transports"]
    val set_transports: t -> _Transport list -> unit [@@js.set "transports"]
    val get_type: t -> _ScopedCredentialType [@@js.get "type"]
    val set_type: t -> _ScopedCredentialType -> unit [@@js.set "type"]
  end
  module[@js.scope "ScopedCredentialOptions"] ScopedCredentialOptions : sig
    type t = _ScopedCredentialOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_excludeList: t -> _ScopedCredentialDescriptor list [@@js.get "excludeList"]
    val set_excludeList: t -> _ScopedCredentialDescriptor list -> unit [@@js.set "excludeList"]
    val get_extensions: t -> _WebAuthnExtensions [@@js.get "extensions"]
    val set_extensions: t -> _WebAuthnExtensions -> unit [@@js.set "extensions"]
    val get_rpId: t -> string [@@js.get "rpId"]
    val set_rpId: t -> string -> unit [@@js.set "rpId"]
    val get_timeoutSeconds: t -> float [@@js.get "timeoutSeconds"]
    val set_timeoutSeconds: t -> float -> unit [@@js.set "timeoutSeconds"]
  end
  module[@js.scope "ScopedCredentialParameters"] ScopedCredentialParameters : sig
    type t = _ScopedCredentialParameters
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_algorithm: t -> _Algorithm or_string [@@js.get "algorithm"]
    val set_algorithm: t -> _Algorithm or_string -> unit [@@js.set "algorithm"]
    val get_type: t -> _ScopedCredentialType [@@js.get "type"]
    val set_type: t -> _ScopedCredentialType -> unit [@@js.set "type"]
  end
  module[@js.scope "ScrollIntoViewOptions"] ScrollIntoViewOptions : sig
    type t = _ScrollIntoViewOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_block: t -> _ScrollLogicalPosition [@@js.get "block"]
    val set_block: t -> _ScrollLogicalPosition -> unit [@@js.set "block"]
    val get_inline: t -> _ScrollLogicalPosition [@@js.get "inline"]
    val set_inline: t -> _ScrollLogicalPosition -> unit [@@js.set "inline"]
    val cast: t -> _ScrollOptions [@@js.cast]
  end
  module[@js.scope "ScrollOptions"] ScrollOptions : sig
    type t = _ScrollOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_behavior: t -> _ScrollBehavior [@@js.get "behavior"]
    val set_behavior: t -> _ScrollBehavior -> unit [@@js.set "behavior"]
  end
  module[@js.scope "ScrollToOptions"] ScrollToOptions : sig
    type t = _ScrollToOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_left: t -> float [@@js.get "left"]
    val set_left: t -> float -> unit [@@js.set "left"]
    val get_top: t -> float [@@js.get "top"]
    val set_top: t -> float -> unit [@@js.set "top"]
    val cast: t -> _ScrollOptions [@@js.cast]
  end
  module[@js.scope "SecurityPolicyViolationEventInit"] SecurityPolicyViolationEventInit : sig
    type t = _SecurityPolicyViolationEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_blockedURI: t -> string [@@js.get "blockedURI"]
    val set_blockedURI: t -> string -> unit [@@js.set "blockedURI"]
    val get_columnNumber: t -> float [@@js.get "columnNumber"]
    val set_columnNumber: t -> float -> unit [@@js.set "columnNumber"]
    val get_documentURI: t -> string [@@js.get "documentURI"]
    val set_documentURI: t -> string -> unit [@@js.set "documentURI"]
    val get_effectiveDirective: t -> string [@@js.get "effectiveDirective"]
    val set_effectiveDirective: t -> string -> unit [@@js.set "effectiveDirective"]
    val get_lineNumber: t -> float [@@js.get "lineNumber"]
    val set_lineNumber: t -> float -> unit [@@js.set "lineNumber"]
    val get_originalPolicy: t -> string [@@js.get "originalPolicy"]
    val set_originalPolicy: t -> string -> unit [@@js.set "originalPolicy"]
    val get_referrer: t -> string [@@js.get "referrer"]
    val set_referrer: t -> string -> unit [@@js.set "referrer"]
    val get_sourceFile: t -> string [@@js.get "sourceFile"]
    val set_sourceFile: t -> string -> unit [@@js.set "sourceFile"]
    val get_statusCode: t -> float [@@js.get "statusCode"]
    val set_statusCode: t -> float -> unit [@@js.set "statusCode"]
    val get_violatedDirective: t -> string [@@js.get "violatedDirective"]
    val set_violatedDirective: t -> string -> unit [@@js.set "violatedDirective"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "ServiceWorkerMessageEventInit"] ServiceWorkerMessageEventInit : sig
    type t = _ServiceWorkerMessageEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_data: t -> any [@@js.get "data"]
    val set_data: t -> any -> unit [@@js.set "data"]
    val get_lastEventId: t -> string [@@js.get "lastEventId"]
    val set_lastEventId: t -> string -> unit [@@js.set "lastEventId"]
    val get_origin: t -> string [@@js.get "origin"]
    val set_origin: t -> string -> unit [@@js.set "origin"]
    val get_ports: t -> _MessagePort list or_null [@@js.get "ports"]
    val set_ports: t -> _MessagePort list or_null -> unit [@@js.set "ports"]
    val get_source: t -> (_MessagePort, _ServiceWorker) union2 or_null [@@js.get "source"]
    val set_source: t -> (_MessagePort, _ServiceWorker) union2 or_null -> unit [@@js.set "source"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "ShadowRootInit"] ShadowRootInit : sig
    type t = _ShadowRootInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_delegatesFocus: t -> bool [@@js.get "delegatesFocus"]
    val set_delegatesFocus: t -> bool -> unit [@@js.set "delegatesFocus"]
    val get_mode: t -> _ShadowRootMode [@@js.get "mode"]
    val set_mode: t -> _ShadowRootMode -> unit [@@js.set "mode"]
  end
  module[@js.scope "SpeechSynthesisErrorEventInit"] SpeechSynthesisErrorEventInit : sig
    type t = _SpeechSynthesisErrorEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_error: t -> _SpeechSynthesisErrorCode [@@js.get "error"]
    val set_error: t -> _SpeechSynthesisErrorCode -> unit [@@js.set "error"]
    val cast: t -> _SpeechSynthesisEventInit [@@js.cast]
  end
  module[@js.scope "SpeechSynthesisEventInit"] SpeechSynthesisEventInit : sig
    type t = _SpeechSynthesisEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_charIndex: t -> float [@@js.get "charIndex"]
    val set_charIndex: t -> float -> unit [@@js.set "charIndex"]
    val get_charLength: t -> float [@@js.get "charLength"]
    val set_charLength: t -> float -> unit [@@js.set "charLength"]
    val get_elapsedTime: t -> float [@@js.get "elapsedTime"]
    val set_elapsedTime: t -> float -> unit [@@js.set "elapsedTime"]
    val get_name: t -> string [@@js.get "name"]
    val set_name: t -> string -> unit [@@js.set "name"]
    val get_utterance: t -> _SpeechSynthesisUtterance [@@js.get "utterance"]
    val set_utterance: t -> _SpeechSynthesisUtterance -> unit [@@js.set "utterance"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "StaticRangeInit"] StaticRangeInit : sig
    type t = _StaticRangeInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_endContainer: t -> _Node [@@js.get "endContainer"]
    val set_endContainer: t -> _Node -> unit [@@js.set "endContainer"]
    val get_endOffset: t -> float [@@js.get "endOffset"]
    val set_endOffset: t -> float -> unit [@@js.set "endOffset"]
    val get_startContainer: t -> _Node [@@js.get "startContainer"]
    val set_startContainer: t -> _Node -> unit [@@js.set "startContainer"]
    val get_startOffset: t -> float [@@js.get "startOffset"]
    val set_startOffset: t -> float -> unit [@@js.set "startOffset"]
  end
  module[@js.scope "StereoPannerOptions"] StereoPannerOptions : sig
    type t = _StereoPannerOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_pan: t -> float [@@js.get "pan"]
    val set_pan: t -> float -> unit [@@js.set "pan"]
    val cast: t -> _AudioNodeOptions [@@js.cast]
  end
  module[@js.scope "StorageEstimate"] StorageEstimate : sig
    type t = _StorageEstimate
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_quota: t -> float [@@js.get "quota"]
    val set_quota: t -> float -> unit [@@js.set "quota"]
    val get_usage: t -> float [@@js.get "usage"]
    val set_usage: t -> float -> unit [@@js.set "usage"]
  end
  module[@js.scope "StorageEventInit"] StorageEventInit : sig
    type t = _StorageEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_key: t -> string or_null [@@js.get "key"]
    val set_key: t -> string or_null -> unit [@@js.set "key"]
    val get_newValue: t -> string or_null [@@js.get "newValue"]
    val set_newValue: t -> string or_null -> unit [@@js.set "newValue"]
    val get_oldValue: t -> string or_null [@@js.get "oldValue"]
    val set_oldValue: t -> string or_null -> unit [@@js.set "oldValue"]
    val get_storageArea: t -> _Storage or_null [@@js.get "storageArea"]
    val set_storageArea: t -> _Storage or_null -> unit [@@js.set "storageArea"]
    val get_url: t -> string [@@js.get "url"]
    val set_url: t -> string -> unit [@@js.set "url"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "StoreExceptionsInformation"] StoreExceptionsInformation : sig
    type t = _StoreExceptionsInformation
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_detailURI: t -> string or_null [@@js.get "detailURI"]
    val set_detailURI: t -> string or_null -> unit [@@js.set "detailURI"]
    val get_explanationString: t -> string or_null [@@js.get "explanationString"]
    val set_explanationString: t -> string or_null -> unit [@@js.set "explanationString"]
    val get_siteName: t -> string or_null [@@js.get "siteName"]
    val set_siteName: t -> string or_null -> unit [@@js.set "siteName"]
    val cast: t -> _ExceptionInformation [@@js.cast]
  end
  module[@js.scope "StoreSiteSpecificExceptionsInformation"] StoreSiteSpecificExceptionsInformation : sig
    type t = _StoreSiteSpecificExceptionsInformation
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_arrayOfDomainStrings: t -> string list [@@js.get "arrayOfDomainStrings"]
    val set_arrayOfDomainStrings: t -> string list -> unit [@@js.set "arrayOfDomainStrings"]
    val cast: t -> _StoreExceptionsInformation [@@js.cast]
  end
  module[@js.scope "TextDecodeOptions"] TextDecodeOptions : sig
    type t = _TextDecodeOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_stream: t -> bool [@@js.get "stream"]
    val set_stream: t -> bool -> unit [@@js.set "stream"]
  end
  module[@js.scope "TextDecoderOptions"] TextDecoderOptions : sig
    type t = _TextDecoderOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_fatal: t -> bool [@@js.get "fatal"]
    val set_fatal: t -> bool -> unit [@@js.set "fatal"]
    val get_ignoreBOM: t -> bool [@@js.get "ignoreBOM"]
    val set_ignoreBOM: t -> bool -> unit [@@js.set "ignoreBOM"]
  end
  module[@js.scope "TextEncoderEncodeIntoResult"] TextEncoderEncodeIntoResult : sig
    type t = _TextEncoderEncodeIntoResult
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_read: t -> float [@@js.get "read"]
    val set_read: t -> float -> unit [@@js.set "read"]
    val get_written: t -> float [@@js.get "written"]
    val set_written: t -> float -> unit [@@js.set "written"]
  end
  module[@js.scope "TouchEventInit"] TouchEventInit : sig
    type t = _TouchEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_changedTouches: t -> _Touch list [@@js.get "changedTouches"]
    val set_changedTouches: t -> _Touch list -> unit [@@js.set "changedTouches"]
    val get_targetTouches: t -> _Touch list [@@js.get "targetTouches"]
    val set_targetTouches: t -> _Touch list -> unit [@@js.set "targetTouches"]
    val get_touches: t -> _Touch list [@@js.get "touches"]
    val set_touches: t -> _Touch list -> unit [@@js.set "touches"]
    val cast: t -> _EventModifierInit [@@js.cast]
  end
  module[@js.scope "TouchInit"] TouchInit : sig
    type t = _TouchInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_altitudeAngle: t -> float [@@js.get "altitudeAngle"]
    val set_altitudeAngle: t -> float -> unit [@@js.set "altitudeAngle"]
    val get_azimuthAngle: t -> float [@@js.get "azimuthAngle"]
    val set_azimuthAngle: t -> float -> unit [@@js.set "azimuthAngle"]
    val get_clientX: t -> float [@@js.get "clientX"]
    val set_clientX: t -> float -> unit [@@js.set "clientX"]
    val get_clientY: t -> float [@@js.get "clientY"]
    val set_clientY: t -> float -> unit [@@js.set "clientY"]
    val get_force: t -> float [@@js.get "force"]
    val set_force: t -> float -> unit [@@js.set "force"]
    val get_identifier: t -> float [@@js.get "identifier"]
    val set_identifier: t -> float -> unit [@@js.set "identifier"]
    val get_pageX: t -> float [@@js.get "pageX"]
    val set_pageX: t -> float -> unit [@@js.set "pageX"]
    val get_pageY: t -> float [@@js.get "pageY"]
    val set_pageY: t -> float -> unit [@@js.set "pageY"]
    val get_radiusX: t -> float [@@js.get "radiusX"]
    val set_radiusX: t -> float -> unit [@@js.set "radiusX"]
    val get_radiusY: t -> float [@@js.get "radiusY"]
    val set_radiusY: t -> float -> unit [@@js.set "radiusY"]
    val get_rotationAngle: t -> float [@@js.get "rotationAngle"]
    val set_rotationAngle: t -> float -> unit [@@js.set "rotationAngle"]
    val get_screenX: t -> float [@@js.get "screenX"]
    val set_screenX: t -> float -> unit [@@js.set "screenX"]
    val get_screenY: t -> float [@@js.get "screenY"]
    val set_screenY: t -> float -> unit [@@js.set "screenY"]
    val get_target: t -> _EventTarget [@@js.get "target"]
    val set_target: t -> _EventTarget -> unit [@@js.set "target"]
    val get_touchType: t -> _TouchType [@@js.get "touchType"]
    val set_touchType: t -> _TouchType -> unit [@@js.set "touchType"]
  end
  module[@js.scope "TrackEventInit"] TrackEventInit : sig
    type t = _TrackEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_track: t -> (_AudioTrack, _TextTrack, _VideoTrack) union3 or_null [@@js.get "track"]
    val set_track: t -> (_AudioTrack, _TextTrack, _VideoTrack) union3 or_null -> unit [@@js.set "track"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "Transformer"] Transformer : sig
    type ('I, 'O) t = ('I, 'O) _Transformer
    val t_to_js: ('I -> Ojs.t) -> ('O -> Ojs.t) -> ('I, 'O) t -> Ojs.t
    val t_of_js: (Ojs.t -> 'I) -> (Ojs.t -> 'O) -> Ojs.t -> ('I, 'O) t
    type ('I, 'O) t_2 = ('I, 'O) t
    val t_2_to_js: ('I -> Ojs.t) -> ('O -> Ojs.t) -> ('I, 'O) t_2 -> Ojs.t
    val t_2_of_js: (Ojs.t -> 'I) -> (Ojs.t -> 'O) -> Ojs.t -> ('I, 'O) t_2
    type 'I t_1 = ('I, any) t
    val t_1_to_js: ('I -> Ojs.t) -> 'I t_1 -> Ojs.t
    val t_1_of_js: (Ojs.t -> 'I) -> Ojs.t -> 'I t_1
    type t_0 = (any, any) t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_flush: ('I, 'O) t -> 'O _TransformStreamDefaultControllerCallback [@@js.get "flush"]
    val set_flush: ('I, 'O) t -> 'O _TransformStreamDefaultControllerCallback -> unit [@@js.set "flush"]
    val get_readableType: ('I, 'O) t -> never or_undefined [@@js.get "readableType"]
    val set_readableType: ('I, 'O) t -> never or_undefined -> unit [@@js.set "readableType"]
    val get_start: ('I, 'O) t -> 'O _TransformStreamDefaultControllerCallback [@@js.get "start"]
    val set_start: ('I, 'O) t -> 'O _TransformStreamDefaultControllerCallback -> unit [@@js.set "start"]
    val get_transform: ('I, 'O) t -> ('I, 'O) _TransformStreamDefaultControllerTransformCallback [@@js.get "transform"]
    val set_transform: ('I, 'O) t -> ('I, 'O) _TransformStreamDefaultControllerTransformCallback -> unit [@@js.set "transform"]
    val get_writableType: ('I, 'O) t -> never or_undefined [@@js.get "writableType"]
    val set_writableType: ('I, 'O) t -> never or_undefined -> unit [@@js.set "writableType"]
  end
  module[@js.scope "TransitionEventInit"] TransitionEventInit : sig
    type t = _TransitionEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_elapsedTime: t -> float [@@js.get "elapsedTime"]
    val set_elapsedTime: t -> float -> unit [@@js.set "elapsedTime"]
    val get_propertyName: t -> string [@@js.get "propertyName"]
    val set_propertyName: t -> string -> unit [@@js.set "propertyName"]
    val get_pseudoElement: t -> string [@@js.get "pseudoElement"]
    val set_pseudoElement: t -> string -> unit [@@js.set "pseudoElement"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "UIEventInit"] UIEventInit : sig
    type t = _UIEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_detail: t -> float [@@js.get "detail"]
    val set_detail: t -> float -> unit [@@js.set "detail"]
    val get_view: t -> _Window or_null [@@js.get "view"]
    val set_view: t -> _Window or_null -> unit [@@js.set "view"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "ULongRange"] ULongRange : sig
    type t = _ULongRange
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_max: t -> float [@@js.get "max"]
    val set_max: t -> float -> unit [@@js.set "max"]
    val get_min: t -> float [@@js.get "min"]
    val set_min: t -> float -> unit [@@js.set "min"]
  end
  module[@js.scope "UnderlyingByteSource"] UnderlyingByteSource : sig
    type t = _UnderlyingByteSource
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_autoAllocateChunkSize: t -> float [@@js.get "autoAllocateChunkSize"]
    val set_autoAllocateChunkSize: t -> float -> unit [@@js.set "autoAllocateChunkSize"]
    val get_cancel: t -> _ReadableStreamErrorCallback [@@js.get "cancel"]
    val set_cancel: t -> _ReadableStreamErrorCallback -> unit [@@js.set "cancel"]
    val get_pull: t -> _ReadableByteStreamControllerCallback [@@js.get "pull"]
    val set_pull: t -> _ReadableByteStreamControllerCallback -> unit [@@js.set "pull"]
    val get_start: t -> _ReadableByteStreamControllerCallback [@@js.get "start"]
    val set_start: t -> _ReadableByteStreamControllerCallback -> unit [@@js.set "start"]
    val get_type: t -> ([`L_s220_bytes[@js "bytes"]] [@js.enum]) [@@js.get "type"]
    val set_type: t -> ([`L_s220_bytes] [@js.enum]) -> unit [@@js.set "type"]
  end
  module[@js.scope "UnderlyingSink"] UnderlyingSink : sig
    type 'W t = 'W _UnderlyingSink
    val t_to_js: ('W -> Ojs.t) -> 'W t -> Ojs.t
    val t_of_js: (Ojs.t -> 'W) -> Ojs.t -> 'W t
    type 'W t_1 = 'W t
    val t_1_to_js: ('W -> Ojs.t) -> 'W t_1 -> Ojs.t
    val t_1_of_js: (Ojs.t -> 'W) -> Ojs.t -> 'W t_1
    type t_0 = any t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_abort: 'W t -> _WritableStreamErrorCallback [@@js.get "abort"]
    val set_abort: 'W t -> _WritableStreamErrorCallback -> unit [@@js.set "abort"]
    val get_close: 'W t -> _WritableStreamDefaultControllerCloseCallback [@@js.get "close"]
    val set_close: 'W t -> _WritableStreamDefaultControllerCloseCallback -> unit [@@js.set "close"]
    val get_start: 'W t -> _WritableStreamDefaultControllerStartCallback [@@js.get "start"]
    val set_start: 'W t -> _WritableStreamDefaultControllerStartCallback -> unit [@@js.set "start"]
    val get_type: 'W t -> never or_undefined [@@js.get "type"]
    val set_type: 'W t -> never or_undefined -> unit [@@js.set "type"]
    val get_write: 'W t -> 'W _WritableStreamDefaultControllerWriteCallback [@@js.get "write"]
    val set_write: 'W t -> 'W _WritableStreamDefaultControllerWriteCallback -> unit [@@js.set "write"]
  end
  module[@js.scope "UnderlyingSource"] UnderlyingSource : sig
    type 'R t = 'R _UnderlyingSource
    val t_to_js: ('R -> Ojs.t) -> 'R t -> Ojs.t
    val t_of_js: (Ojs.t -> 'R) -> Ojs.t -> 'R t
    type 'R t_1 = 'R t
    val t_1_to_js: ('R -> Ojs.t) -> 'R t_1 -> Ojs.t
    val t_1_of_js: (Ojs.t -> 'R) -> Ojs.t -> 'R t_1
    type t_0 = any t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_cancel: 'R t -> _ReadableStreamErrorCallback [@@js.get "cancel"]
    val set_cancel: 'R t -> _ReadableStreamErrorCallback -> unit [@@js.set "cancel"]
    val get_pull: 'R t -> 'R _ReadableStreamDefaultControllerCallback [@@js.get "pull"]
    val set_pull: 'R t -> 'R _ReadableStreamDefaultControllerCallback -> unit [@@js.set "pull"]
    val get_start: 'R t -> 'R _ReadableStreamDefaultControllerCallback [@@js.get "start"]
    val set_start: 'R t -> 'R _ReadableStreamDefaultControllerCallback -> unit [@@js.set "start"]
    val get_type: 'R t -> never or_undefined [@@js.get "type"]
    val set_type: 'R t -> never or_undefined -> unit [@@js.set "type"]
  end
  module[@js.scope "VRDisplayEventInit"] VRDisplayEventInit : sig
    type t = _VRDisplayEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_display: t -> _VRDisplay [@@js.get "display"]
    val set_display: t -> _VRDisplay -> unit [@@js.set "display"]
    val get_reason: t -> _VRDisplayEventReason [@@js.get "reason"]
    val set_reason: t -> _VRDisplayEventReason -> unit [@@js.set "reason"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "VRLayer"] VRLayer : sig
    type t = _VRLayer
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_leftBounds: t -> (Float32Array.t_0, float) or_array or_null [@@js.get "leftBounds"]
    val set_leftBounds: t -> (Float32Array.t_0, float) or_array or_null -> unit [@@js.set "leftBounds"]
    val get_rightBounds: t -> (Float32Array.t_0, float) or_array or_null [@@js.get "rightBounds"]
    val set_rightBounds: t -> (Float32Array.t_0, float) or_array or_null -> unit [@@js.set "rightBounds"]
    val get_source: t -> _HTMLCanvasElement or_null [@@js.get "source"]
    val set_source: t -> _HTMLCanvasElement or_null -> unit [@@js.set "source"]
  end
  module[@js.scope "VRStageParameters"] VRStageParameters : sig
    type t = _VRStageParameters
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_sittingToStandingTransform: t -> Float32Array.t_0 [@@js.get "sittingToStandingTransform"]
    val set_sittingToStandingTransform: t -> Float32Array.t_0 -> unit [@@js.set "sittingToStandingTransform"]
    val get_sizeX: t -> float [@@js.get "sizeX"]
    val set_sizeX: t -> float -> unit [@@js.set "sizeX"]
    val get_sizeY: t -> float [@@js.get "sizeY"]
    val set_sizeY: t -> float -> unit [@@js.set "sizeY"]
  end
  module[@js.scope "WaveShaperOptions"] WaveShaperOptions : sig
    type t = _WaveShaperOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_curve: t -> (Float32Array.t_0, float) or_array [@@js.get "curve"]
    val set_curve: t -> (Float32Array.t_0, float) or_array -> unit [@@js.set "curve"]
    val get_oversample: t -> _OverSampleType [@@js.get "oversample"]
    val set_oversample: t -> _OverSampleType -> unit [@@js.set "oversample"]
    val cast: t -> _AudioNodeOptions [@@js.cast]
  end
  module WebAuthnExtensions : sig
    type t = _WebAuthnExtensions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module[@js.scope "WebGLContextAttributes"] WebGLContextAttributes : sig
    type t = _WebGLContextAttributes
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_alpha: t -> bool [@@js.get "alpha"]
    val set_alpha: t -> bool -> unit [@@js.set "alpha"]
    val get_antialias: t -> bool [@@js.get "antialias"]
    val set_antialias: t -> bool -> unit [@@js.set "antialias"]
    val get_depth: t -> bool [@@js.get "depth"]
    val set_depth: t -> bool -> unit [@@js.set "depth"]
    val get_desynchronized: t -> bool [@@js.get "desynchronized"]
    val set_desynchronized: t -> bool -> unit [@@js.set "desynchronized"]
    val get_failIfMajorPerformanceCaveat: t -> bool [@@js.get "failIfMajorPerformanceCaveat"]
    val set_failIfMajorPerformanceCaveat: t -> bool -> unit [@@js.set "failIfMajorPerformanceCaveat"]
    val get_powerPreference: t -> _WebGLPowerPreference [@@js.get "powerPreference"]
    val set_powerPreference: t -> _WebGLPowerPreference -> unit [@@js.set "powerPreference"]
    val get_premultipliedAlpha: t -> bool [@@js.get "premultipliedAlpha"]
    val set_premultipliedAlpha: t -> bool -> unit [@@js.set "premultipliedAlpha"]
    val get_preserveDrawingBuffer: t -> bool [@@js.get "preserveDrawingBuffer"]
    val set_preserveDrawingBuffer: t -> bool -> unit [@@js.set "preserveDrawingBuffer"]
    val get_stencil: t -> bool [@@js.get "stencil"]
    val set_stencil: t -> bool -> unit [@@js.set "stencil"]
  end
  module[@js.scope "WebGLContextEventInit"] WebGLContextEventInit : sig
    type t = _WebGLContextEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_statusMessage: t -> string [@@js.get "statusMessage"]
    val set_statusMessage: t -> string -> unit [@@js.set "statusMessage"]
    val cast: t -> _EventInit [@@js.cast]
  end
  module[@js.scope "WheelEventInit"] WheelEventInit : sig
    type t = _WheelEventInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_deltaMode: t -> float [@@js.get "deltaMode"]
    val set_deltaMode: t -> float -> unit [@@js.set "deltaMode"]
    val get_deltaX: t -> float [@@js.get "deltaX"]
    val set_deltaX: t -> float -> unit [@@js.set "deltaX"]
    val get_deltaY: t -> float [@@js.get "deltaY"]
    val set_deltaY: t -> float -> unit [@@js.set "deltaY"]
    val get_deltaZ: t -> float [@@js.get "deltaZ"]
    val set_deltaZ: t -> float -> unit [@@js.set "deltaZ"]
    val cast: t -> _MouseEventInit [@@js.cast]
  end
  module[@js.scope "WorkerOptions"] WorkerOptions : sig
    type t = _WorkerOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_credentials: t -> _RequestCredentials [@@js.get "credentials"]
    val set_credentials: t -> _RequestCredentials -> unit [@@js.set "credentials"]
    val get_name: t -> string [@@js.get "name"]
    val set_name: t -> string -> unit [@@js.set "name"]
    val get_type: t -> _WorkerType [@@js.get "type"]
    val set_type: t -> _WorkerType -> unit [@@js.set "type"]
  end
  module[@js.scope "WorkletOptions"] WorkletOptions : sig
    type t = _WorkletOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_credentials: t -> _RequestCredentials [@@js.get "credentials"]
    val set_credentials: t -> _RequestCredentials -> unit [@@js.set "credentials"]
  end
  module[@js.scope "txAuthGenericArg"] TxAuthGenericArg : sig
    type t = txAuthGenericArg
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_content: t -> ArrayBuffer.t_0 [@@js.get "content"]
    val set_content: t -> ArrayBuffer.t_0 -> unit [@@js.set "content"]
    val get_contentType: t -> string [@@js.get "contentType"]
    val set_contentType: t -> string -> unit [@@js.set "contentType"]
  end
  module[@js.scope "EventListener"] EventListener : sig
    type t = _EventListener
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val apply: t -> evt:_Event -> unit [@@js.apply]
  end
  module XPathNSResolver : sig
    type t = _XPathNSResolver
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module[@js.scope "ANGLE_instanced_arrays"] ANGLE_instanced_arrays : sig
    type t = _ANGLE_instanced_arrays
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val drawArraysInstancedANGLE: t -> mode:_GLenum -> first:_GLint -> count:_GLsizei -> primcount:_GLsizei -> unit [@@js.call "drawArraysInstancedANGLE"]
    val drawElementsInstancedANGLE: t -> mode:_GLenum -> count:_GLsizei -> type_:_GLenum -> offset:_GLintptr -> primcount:_GLsizei -> unit [@@js.call "drawElementsInstancedANGLE"]
    val vertexAttribDivisorANGLE: t -> index:_GLuint -> divisor:_GLuint -> unit [@@js.call "vertexAttribDivisorANGLE"]
    val get_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE: t -> _GLenum [@@js.get "VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE"]
  end
  module[@js.scope "AbortController"] AbortController : sig
    type t = _AbortController
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_signal: t -> _AbortSignal [@@js.get "signal"]
    val abort: t -> unit [@@js.call "abort"]
  end
  val abortController: anonymous_interface_5 [@@js.global "AbortController"]
  module[@js.scope "AbortSignalEventMap"] AbortSignalEventMap : sig
    type t = _AbortSignalEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_abort: t -> _Event [@@js.get "abort"]
    val set_abort: t -> _Event -> unit [@@js.set "abort"]
  end
  module[@js.scope "AbortSignal"] AbortSignal : sig
    type t = _AbortSignal
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_aborted: t -> bool [@@js.get "aborted"]
    val get_onabort: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onabort"]
    val set_onabort: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onabort"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val abortSignal: anonymous_interface_6 [@@js.global "AbortSignal"]
  module[@js.scope "AbstractRange"] AbstractRange : sig
    type t = _AbstractRange
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_collapsed: t -> bool [@@js.get "collapsed"]
    val get_endContainer: t -> _Node [@@js.get "endContainer"]
    val get_endOffset: t -> float [@@js.get "endOffset"]
    val get_startContainer: t -> _Node [@@js.get "startContainer"]
    val get_startOffset: t -> float [@@js.get "startOffset"]
  end
  val abstractRange: anonymous_interface_7 [@@js.global "AbstractRange"]
  module[@js.scope "AbstractWorkerEventMap"] AbstractWorkerEventMap : sig
    type t = _AbstractWorkerEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_error: t -> _ErrorEvent [@@js.get "error"]
    val set_error: t -> _ErrorEvent -> unit [@@js.set "error"]
  end
  module[@js.scope "AbstractWorker"] AbstractWorker : sig
    type t = _AbstractWorker
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_onerror: t -> (this:t -> ev:_ErrorEvent -> any) or_null [@@js.get "onerror"]
    val set_onerror: t -> (this:t -> ev:_ErrorEvent -> any) or_null -> unit [@@js.set "onerror"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
  end
  module[@js.scope "AesCfbParams"] AesCfbParams : sig
    type t = _AesCfbParams
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_iv: t -> ((((Float64Array.t_0, Int16Array.t_0, Int32Array.t_0, Int8Array.t_0, Uint16Array.t_0, Uint32Array.t_0, Uint8Array.t_0, Uint8ClampedArray.t_0) union8, Float32Array.t_0) or_, DataView.t_0) or_, ArrayBuffer.t_0) or_ [@@js.get "iv"]
    val set_iv: t -> ((((Float64Array.t_0, Int16Array.t_0, Int32Array.t_0, Int8Array.t_0, Uint16Array.t_0, Uint32Array.t_0, Uint8Array.t_0, Uint8ClampedArray.t_0) union8, Float32Array.t_0) or_, DataView.t_0) or_, ArrayBuffer.t_0) or_ -> unit [@@js.set "iv"]
    val cast: t -> _Algorithm [@@js.cast]
  end
  module[@js.scope "AesCmacParams"] AesCmacParams : sig
    type t = _AesCmacParams
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_length: t -> float [@@js.get "length"]
    val set_length: t -> float -> unit [@@js.set "length"]
    val cast: t -> _Algorithm [@@js.cast]
  end
  module[@js.scope "AnalyserNode"] AnalyserNode : sig
    type t = _AnalyserNode
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_fftSize: t -> float [@@js.get "fftSize"]
    val set_fftSize: t -> float -> unit [@@js.set "fftSize"]
    val get_frequencyBinCount: t -> float [@@js.get "frequencyBinCount"]
    val get_maxDecibels: t -> float [@@js.get "maxDecibels"]
    val set_maxDecibels: t -> float -> unit [@@js.set "maxDecibels"]
    val get_minDecibels: t -> float [@@js.get "minDecibels"]
    val set_minDecibels: t -> float -> unit [@@js.set "minDecibels"]
    val get_smoothingTimeConstant: t -> float [@@js.get "smoothingTimeConstant"]
    val set_smoothingTimeConstant: t -> float -> unit [@@js.set "smoothingTimeConstant"]
    val getByteFrequencyData: t -> array:Uint8Array.t_0 -> unit [@@js.call "getByteFrequencyData"]
    val getByteTimeDomainData: t -> array:Uint8Array.t_0 -> unit [@@js.call "getByteTimeDomainData"]
    val getFloatFrequencyData: t -> array:Float32Array.t_0 -> unit [@@js.call "getFloatFrequencyData"]
    val getFloatTimeDomainData: t -> array:Float32Array.t_0 -> unit [@@js.call "getFloatTimeDomainData"]
    val cast: t -> _AudioNode [@@js.cast]
  end
  val analyserNode: anonymous_interface_8 [@@js.global "AnalyserNode"]
  module[@js.scope "Animatable"] Animatable : sig
    type t = _Animatable
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val animate: t -> keyframes:(_PropertyIndexedKeyframes, _Keyframe) or_array or_null -> ?options:_KeyframeAnimationOptions or_number -> unit -> _Animation [@@js.call "animate"]
    val getAnimations: t -> _Animation list [@@js.call "getAnimations"]
  end
  module[@js.scope "AnimationEventMap"] AnimationEventMap : sig
    type t = _AnimationEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_cancel: t -> _AnimationPlaybackEvent [@@js.get "cancel"]
    val set_cancel: t -> _AnimationPlaybackEvent -> unit [@@js.set "cancel"]
    val get_finish: t -> _AnimationPlaybackEvent [@@js.get "finish"]
    val set_finish: t -> _AnimationPlaybackEvent -> unit [@@js.set "finish"]
  end
  module[@js.scope "Animation"] Animation : sig
    type t = _Animation
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_currentTime: t -> float or_null [@@js.get "currentTime"]
    val set_currentTime: t -> float or_null -> unit [@@js.set "currentTime"]
    val get_effect: t -> _AnimationEffect or_null [@@js.get "effect"]
    val set_effect: t -> _AnimationEffect or_null -> unit [@@js.set "effect"]
    val get_finished: t -> t Promise.t_1 [@@js.get "finished"]
    val get_id: t -> string [@@js.get "id"]
    val set_id: t -> string -> unit [@@js.set "id"]
    val get_oncancel: t -> (this:t -> ev:_AnimationPlaybackEvent -> any) or_null [@@js.get "oncancel"]
    val set_oncancel: t -> (this:t -> ev:_AnimationPlaybackEvent -> any) or_null -> unit [@@js.set "oncancel"]
    val get_onfinish: t -> (this:t -> ev:_AnimationPlaybackEvent -> any) or_null [@@js.get "onfinish"]
    val set_onfinish: t -> (this:t -> ev:_AnimationPlaybackEvent -> any) or_null -> unit [@@js.set "onfinish"]
    val get_pending: t -> bool [@@js.get "pending"]
    val get_playState: t -> _AnimationPlayState [@@js.get "playState"]
    val get_playbackRate: t -> float [@@js.get "playbackRate"]
    val set_playbackRate: t -> float -> unit [@@js.set "playbackRate"]
    val get_ready: t -> t Promise.t_1 [@@js.get "ready"]
    val get_startTime: t -> float or_null [@@js.get "startTime"]
    val set_startTime: t -> float or_null -> unit [@@js.set "startTime"]
    val get_timeline: t -> _AnimationTimeline or_null [@@js.get "timeline"]
    val set_timeline: t -> _AnimationTimeline or_null -> unit [@@js.set "timeline"]
    val cancel: t -> unit [@@js.call "cancel"]
    val finish: t -> unit [@@js.call "finish"]
    val pause: t -> unit [@@js.call "pause"]
    val play: t -> unit [@@js.call "play"]
    val reverse: t -> unit [@@js.call "reverse"]
    val updatePlaybackRate: t -> playbackRate:float -> unit [@@js.call "updatePlaybackRate"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val animation: anonymous_interface_9 [@@js.global "Animation"]
  module[@js.scope "AnimationEffect"] AnimationEffect : sig
    type t = _AnimationEffect
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val getComputedTiming: t -> _ComputedEffectTiming [@@js.call "getComputedTiming"]
    val getTiming: t -> _EffectTiming [@@js.call "getTiming"]
    val updateTiming: t -> ?timing:_OptionalEffectTiming -> unit -> unit [@@js.call "updateTiming"]
  end
  val animationEffect: anonymous_interface_10 [@@js.global "AnimationEffect"]
  module[@js.scope "AnimationEvent"] AnimationEvent : sig
    type t = _AnimationEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_animationName: t -> string [@@js.get "animationName"]
    val get_elapsedTime: t -> float [@@js.get "elapsedTime"]
    val get_pseudoElement: t -> string [@@js.get "pseudoElement"]
    val cast: t -> _Event [@@js.cast]
  end
  val animationEvent: anonymous_interface_11 [@@js.global "AnimationEvent"]
  module[@js.scope "AnimationFrameProvider"] AnimationFrameProvider : sig
    type t = _AnimationFrameProvider
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val cancelAnimationFrame: t -> handle:float -> unit [@@js.call "cancelAnimationFrame"]
    val requestAnimationFrame: t -> callback:_FrameRequestCallback -> float [@@js.call "requestAnimationFrame"]
  end
  module[@js.scope "AnimationPlaybackEvent"] AnimationPlaybackEvent : sig
    type t = _AnimationPlaybackEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_currentTime: t -> float or_null [@@js.get "currentTime"]
    val get_timelineTime: t -> float or_null [@@js.get "timelineTime"]
    val cast: t -> _Event [@@js.cast]
  end
  val animationPlaybackEvent: anonymous_interface_12 [@@js.global "AnimationPlaybackEvent"]
  module[@js.scope "AnimationTimeline"] AnimationTimeline : sig
    type t = _AnimationTimeline
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_currentTime: t -> float or_null [@@js.get "currentTime"]
  end
  val animationTimeline: anonymous_interface_13 [@@js.global "AnimationTimeline"]
  module[@js.scope "ApplicationCacheEventMap"] ApplicationCacheEventMap : sig
    type t = _ApplicationCacheEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_cached: t -> _Event [@@js.get "cached"]
    val set_cached: t -> _Event -> unit [@@js.set "cached"]
    val get_checking: t -> _Event [@@js.get "checking"]
    val set_checking: t -> _Event -> unit [@@js.set "checking"]
    val get_downloading: t -> _Event [@@js.get "downloading"]
    val set_downloading: t -> _Event -> unit [@@js.set "downloading"]
    val get_error: t -> _Event [@@js.get "error"]
    val set_error: t -> _Event -> unit [@@js.set "error"]
    val get_noupdate: t -> _Event [@@js.get "noupdate"]
    val set_noupdate: t -> _Event -> unit [@@js.set "noupdate"]
    val get_obsolete: t -> _Event [@@js.get "obsolete"]
    val set_obsolete: t -> _Event -> unit [@@js.set "obsolete"]
    val get_progress: t -> _ApplicationCache _ProgressEvent [@@js.get "progress"]
    val set_progress: t -> _ApplicationCache _ProgressEvent -> unit [@@js.set "progress"]
    val get_updateready: t -> _Event [@@js.get "updateready"]
    val set_updateready: t -> _Event -> unit [@@js.set "updateready"]
  end
  module[@js.scope "ApplicationCache"] ApplicationCache : sig
    type t = _ApplicationCache
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_oncached: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "oncached"]
    val set_oncached: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "oncached"]
    val get_onchecking: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onchecking"]
    val set_onchecking: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onchecking"]
    val get_ondownloading: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "ondownloading"]
    val set_ondownloading: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "ondownloading"]
    val get_onerror: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onerror"]
    val set_onerror: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onerror"]
    val get_onnoupdate: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onnoupdate"]
    val set_onnoupdate: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onnoupdate"]
    val get_onobsolete: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onobsolete"]
    val set_onobsolete: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onobsolete"]
    val get_onprogress: t -> (this:t -> ev:t _ProgressEvent -> any) or_null [@@js.get "onprogress"]
    val set_onprogress: t -> (this:t -> ev:t _ProgressEvent -> any) or_null -> unit [@@js.set "onprogress"]
    val get_onupdateready: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onupdateready"]
    val set_onupdateready: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onupdateready"]
    val get_status: t -> float [@@js.get "status"]
    val abort: t -> unit [@@js.call "abort"]
    val swapCache: t -> unit [@@js.call "swapCache"]
    val update: t -> unit [@@js.call "update"]
    val get_CHECKING: t -> float [@@js.get "CHECKING"]
    val get_DOWNLOADING: t -> float [@@js.get "DOWNLOADING"]
    val get_IDLE: t -> float [@@js.get "IDLE"]
    val get_OBSOLETE: t -> float [@@js.get "OBSOLETE"]
    val get_UNCACHED: t -> float [@@js.get "UNCACHED"]
    val get_UPDATEREADY: t -> float [@@js.get "UPDATEREADY"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val applicationCache: anonymous_interface_14 [@@js.global "ApplicationCache"]
  module[@js.scope "Attr"] Attr : sig
    type t = _Attr
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_localName: t -> string [@@js.get "localName"]
    val get_name: t -> string [@@js.get "name"]
    val get_namespaceURI: t -> string or_null [@@js.get "namespaceURI"]
    val get_ownerElement: t -> _Element or_null [@@js.get "ownerElement"]
    val get_prefix: t -> string or_null [@@js.get "prefix"]
    val get_specified: t -> bool [@@js.get "specified"]
    val get_value: t -> string [@@js.get "value"]
    val set_value: t -> string -> unit [@@js.set "value"]
    val cast: t -> _Node [@@js.cast]
  end
  val attr: anonymous_interface_15 [@@js.global "Attr"]
  module[@js.scope "AudioBuffer"] AudioBuffer : sig
    type t = _AudioBuffer
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_duration: t -> float [@@js.get "duration"]
    val get_length: t -> float [@@js.get "length"]
    val get_numberOfChannels: t -> float [@@js.get "numberOfChannels"]
    val get_sampleRate: t -> float [@@js.get "sampleRate"]
    val copyFromChannel: t -> destination:Float32Array.t_0 -> channelNumber:float -> ?bufferOffset:float -> unit -> unit [@@js.call "copyFromChannel"]
    val copyToChannel: t -> source:Float32Array.t_0 -> channelNumber:float -> ?bufferOffset:float -> unit -> unit [@@js.call "copyToChannel"]
    val getChannelData: t -> channel:float -> Float32Array.t_0 [@@js.call "getChannelData"]
  end
  val audioBuffer: anonymous_interface_16 [@@js.global "AudioBuffer"]
  module[@js.scope "AudioBufferSourceNode"] AudioBufferSourceNode : sig
    type t = _AudioBufferSourceNode
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_buffer: t -> _AudioBuffer or_null [@@js.get "buffer"]
    val set_buffer: t -> _AudioBuffer or_null -> unit [@@js.set "buffer"]
    val get_detune: t -> _AudioParam [@@js.get "detune"]
    val get_loop: t -> bool [@@js.get "loop"]
    val set_loop: t -> bool -> unit [@@js.set "loop"]
    val get_loopEnd: t -> float [@@js.get "loopEnd"]
    val set_loopEnd: t -> float -> unit [@@js.set "loopEnd"]
    val get_loopStart: t -> float [@@js.get "loopStart"]
    val set_loopStart: t -> float -> unit [@@js.set "loopStart"]
    val get_playbackRate: t -> _AudioParam [@@js.get "playbackRate"]
    val start: t -> ?when_:float -> ?offset:float -> ?duration:float -> unit -> unit [@@js.call "start"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _AudioScheduledSourceNode [@@js.cast]
  end
  val audioBufferSourceNode: anonymous_interface_17 [@@js.global "AudioBufferSourceNode"]
  module[@js.scope "AudioContext"] AudioContext : sig
    type t = _AudioContext
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_baseLatency: t -> float [@@js.get "baseLatency"]
    val get_outputLatency: t -> float [@@js.get "outputLatency"]
    val close: t -> unit Promise.t_1 [@@js.call "close"]
    val createMediaElementSource: t -> mediaElement:_HTMLMediaElement -> _MediaElementAudioSourceNode [@@js.call "createMediaElementSource"]
    val createMediaStreamDestination: t -> _MediaStreamAudioDestinationNode [@@js.call "createMediaStreamDestination"]
    val createMediaStreamSource: t -> mediaStream:_MediaStream -> _MediaStreamAudioSourceNode [@@js.call "createMediaStreamSource"]
    val createMediaStreamTrackSource: t -> mediaStreamTrack:_MediaStreamTrack -> _MediaStreamTrackAudioSourceNode [@@js.call "createMediaStreamTrackSource"]
    val getOutputTimestamp: t -> _AudioTimestamp [@@js.call "getOutputTimestamp"]
    val resume: t -> unit Promise.t_1 [@@js.call "resume"]
    val suspend: t -> unit Promise.t_1 [@@js.call "suspend"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _BaseAudioContext [@@js.cast]
  end
  val audioContext: anonymous_interface_18 [@@js.global "AudioContext"]
  module[@js.scope "AudioDestinationNode"] AudioDestinationNode : sig
    type t = _AudioDestinationNode
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_maxChannelCount: t -> float [@@js.get "maxChannelCount"]
    val cast: t -> _AudioNode [@@js.cast]
  end
  val audioDestinationNode: anonymous_interface_19 [@@js.global "AudioDestinationNode"]
  module[@js.scope "AudioListener"] AudioListener : sig
    type t = _AudioListener
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_forwardX: t -> _AudioParam [@@js.get "forwardX"]
    val get_forwardY: t -> _AudioParam [@@js.get "forwardY"]
    val get_forwardZ: t -> _AudioParam [@@js.get "forwardZ"]
    val get_positionX: t -> _AudioParam [@@js.get "positionX"]
    val get_positionY: t -> _AudioParam [@@js.get "positionY"]
    val get_positionZ: t -> _AudioParam [@@js.get "positionZ"]
    val get_upX: t -> _AudioParam [@@js.get "upX"]
    val get_upY: t -> _AudioParam [@@js.get "upY"]
    val get_upZ: t -> _AudioParam [@@js.get "upZ"]
    val setOrientation: t -> x:float -> y:float -> z:float -> xUp:float -> yUp:float -> zUp:float -> unit [@@js.call "setOrientation"]
    val setPosition: t -> x:float -> y:float -> z:float -> unit [@@js.call "setPosition"]
  end
  val audioListener: anonymous_interface_20 [@@js.global "AudioListener"]
  module[@js.scope "AudioNode"] AudioNode : sig
    type t = _AudioNode
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_channelCount: t -> float [@@js.get "channelCount"]
    val set_channelCount: t -> float -> unit [@@js.set "channelCount"]
    val get_channelCountMode: t -> _ChannelCountMode [@@js.get "channelCountMode"]
    val set_channelCountMode: t -> _ChannelCountMode -> unit [@@js.set "channelCountMode"]
    val get_channelInterpretation: t -> _ChannelInterpretation [@@js.get "channelInterpretation"]
    val set_channelInterpretation: t -> _ChannelInterpretation -> unit [@@js.set "channelInterpretation"]
    val get_context: t -> _BaseAudioContext [@@js.get "context"]
    val get_numberOfInputs: t -> float [@@js.get "numberOfInputs"]
    val get_numberOfOutputs: t -> float [@@js.get "numberOfOutputs"]
    val connect: t -> destinationNode:t -> ?output:float -> ?input:float -> unit -> t [@@js.call "connect"]
    val connect': t -> destinationParam:_AudioParam -> ?output:float -> unit -> unit [@@js.call "connect"]
    val disconnect: t -> unit [@@js.call "disconnect"]
    val disconnect': t -> output:float -> unit [@@js.call "disconnect"]
    val disconnect'': t -> destinationNode:t -> unit [@@js.call "disconnect"]
    val disconnect''': t -> destinationNode:t -> output:float -> unit [@@js.call "disconnect"]
    val disconnect'''': t -> destinationNode:t -> output:float -> input:float -> unit [@@js.call "disconnect"]
    val disconnect''''': t -> destinationParam:_AudioParam -> unit [@@js.call "disconnect"]
    val disconnect'''''': t -> destinationParam:_AudioParam -> output:float -> unit [@@js.call "disconnect"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val audioNode: anonymous_interface_21 [@@js.global "AudioNode"]
  module[@js.scope "AudioParam"] AudioParam : sig
    type t = _AudioParam
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_automationRate: t -> _AutomationRate [@@js.get "automationRate"]
    val set_automationRate: t -> _AutomationRate -> unit [@@js.set "automationRate"]
    val get_defaultValue: t -> float [@@js.get "defaultValue"]
    val get_maxValue: t -> float [@@js.get "maxValue"]
    val get_minValue: t -> float [@@js.get "minValue"]
    val get_value: t -> float [@@js.get "value"]
    val set_value: t -> float -> unit [@@js.set "value"]
    val cancelAndHoldAtTime: t -> cancelTime:float -> t [@@js.call "cancelAndHoldAtTime"]
    val cancelScheduledValues: t -> cancelTime:float -> t [@@js.call "cancelScheduledValues"]
    val exponentialRampToValueAtTime: t -> value:float -> endTime:float -> t [@@js.call "exponentialRampToValueAtTime"]
    val linearRampToValueAtTime: t -> value:float -> endTime:float -> t [@@js.call "linearRampToValueAtTime"]
    val setTargetAtTime: t -> target:float -> startTime:float -> timeConstant:float -> t [@@js.call "setTargetAtTime"]
    val setValueAtTime: t -> value:float -> startTime:float -> t [@@js.call "setValueAtTime"]
    val setValueCurveAtTime: t -> values:(Float32Array.t_0, float) or_array -> startTime:float -> duration:float -> t [@@js.call "setValueCurveAtTime"]
  end
  val audioParam: anonymous_interface_22 [@@js.global "AudioParam"]
  module[@js.scope "AudioParamMap"] AudioParamMap : sig
    type t = _AudioParamMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val forEach: t -> callbackfn:(value:_AudioParam -> key:string -> parent:t -> unit) -> ?thisArg:any -> unit -> unit [@@js.call "forEach"]
  end
  val audioParamMap: anonymous_interface_23 [@@js.global "AudioParamMap"]
  module[@js.scope "AudioProcessingEvent"] AudioProcessingEvent : sig
    type t = _AudioProcessingEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_inputBuffer: t -> _AudioBuffer [@@js.get "inputBuffer"]
    val get_outputBuffer: t -> _AudioBuffer [@@js.get "outputBuffer"]
    val get_playbackTime: t -> float [@@js.get "playbackTime"]
    val cast: t -> _Event [@@js.cast]
  end
  val audioProcessingEvent: anonymous_interface_24 [@@js.global "AudioProcessingEvent"]
  module[@js.scope "AudioScheduledSourceNodeEventMap"] AudioScheduledSourceNodeEventMap : sig
    type t = _AudioScheduledSourceNodeEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_ended: t -> _Event [@@js.get "ended"]
    val set_ended: t -> _Event -> unit [@@js.set "ended"]
  end
  module[@js.scope "AudioScheduledSourceNode"] AudioScheduledSourceNode : sig
    type t = _AudioScheduledSourceNode
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_onended: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onended"]
    val set_onended: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onended"]
    val start: t -> ?when_:float -> unit -> unit [@@js.call "start"]
    val stop: t -> ?when_:float -> unit -> unit [@@js.call "stop"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _AudioNode [@@js.cast]
  end
  val audioScheduledSourceNode: anonymous_interface_25 [@@js.global "AudioScheduledSourceNode"]
  module[@js.scope "AudioTrack"] AudioTrack : sig
    type t = _AudioTrack
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_enabled: t -> bool [@@js.get "enabled"]
    val set_enabled: t -> bool -> unit [@@js.set "enabled"]
    val get_id: t -> string [@@js.get "id"]
    val get_kind: t -> string [@@js.get "kind"]
    val set_kind: t -> string -> unit [@@js.set "kind"]
    val get_label: t -> string [@@js.get "label"]
    val get_language: t -> string [@@js.get "language"]
    val set_language: t -> string -> unit [@@js.set "language"]
    val get_sourceBuffer: t -> _SourceBuffer or_null [@@js.get "sourceBuffer"]
  end
  val audioTrack: anonymous_interface_26 [@@js.global "AudioTrack"]
  module[@js.scope "AudioTrackListEventMap"] AudioTrackListEventMap : sig
    type t = _AudioTrackListEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_addtrack: t -> _TrackEvent [@@js.get "addtrack"]
    val set_addtrack: t -> _TrackEvent -> unit [@@js.set "addtrack"]
    val get_change: t -> _Event [@@js.get "change"]
    val set_change: t -> _Event -> unit [@@js.set "change"]
    val get_removetrack: t -> _TrackEvent [@@js.get "removetrack"]
    val set_removetrack: t -> _TrackEvent -> unit [@@js.set "removetrack"]
  end
  module[@js.scope "AudioTrackList"] AudioTrackList : sig
    type t = _AudioTrackList
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_length: t -> float [@@js.get "length"]
    val get_onaddtrack: t -> (this:t -> ev:_TrackEvent -> any) or_null [@@js.get "onaddtrack"]
    val set_onaddtrack: t -> (this:t -> ev:_TrackEvent -> any) or_null -> unit [@@js.set "onaddtrack"]
    val get_onchange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onchange"]
    val set_onchange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onchange"]
    val get_onremovetrack: t -> (this:t -> ev:_TrackEvent -> any) or_null [@@js.get "onremovetrack"]
    val set_onremovetrack: t -> (this:t -> ev:_TrackEvent -> any) or_null -> unit [@@js.set "onremovetrack"]
    val getTrackById: t -> id:string -> _AudioTrack or_null [@@js.call "getTrackById"]
    val item: t -> index:float -> _AudioTrack [@@js.call "item"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val get: t -> float -> _AudioTrack [@@js.index_get]
    val set: t -> float -> _AudioTrack -> unit [@@js.index_set]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val audioTrackList: anonymous_interface_27 [@@js.global "AudioTrackList"]
  module[@js.scope "AudioWorklet"] AudioWorklet : sig
    type t = _AudioWorklet
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val cast: t -> _Worklet [@@js.cast]
  end
  val audioWorklet: anonymous_interface_28 [@@js.global "AudioWorklet"]
  module[@js.scope "AudioWorkletNodeEventMap"] AudioWorkletNodeEventMap : sig
    type t = _AudioWorkletNodeEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_processorerror: t -> _Event [@@js.get "processorerror"]
    val set_processorerror: t -> _Event -> unit [@@js.set "processorerror"]
  end
  module[@js.scope "AudioWorkletNode"] AudioWorkletNode : sig
    type t = _AudioWorkletNode
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_onprocessorerror: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onprocessorerror"]
    val set_onprocessorerror: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onprocessorerror"]
    val get_parameters: t -> _AudioParamMap [@@js.get "parameters"]
    val get_port: t -> _MessagePort [@@js.get "port"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _AudioNode [@@js.cast]
  end
  val audioWorkletNode: anonymous_interface_29 [@@js.global "AudioWorkletNode"]
  module[@js.scope "AuthenticatorAssertionResponse"] AuthenticatorAssertionResponse : sig
    type t = _AuthenticatorAssertionResponse
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_authenticatorData: t -> ArrayBuffer.t_0 [@@js.get "authenticatorData"]
    val get_signature: t -> ArrayBuffer.t_0 [@@js.get "signature"]
    val get_userHandle: t -> ArrayBuffer.t_0 or_null [@@js.get "userHandle"]
    val cast: t -> _AuthenticatorResponse [@@js.cast]
  end
  val authenticatorAssertionResponse: anonymous_interface_30 [@@js.global "AuthenticatorAssertionResponse"]
  module[@js.scope "AuthenticatorAttestationResponse"] AuthenticatorAttestationResponse : sig
    type t = _AuthenticatorAttestationResponse
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_attestationObject: t -> ArrayBuffer.t_0 [@@js.get "attestationObject"]
    val cast: t -> _AuthenticatorResponse [@@js.cast]
  end
  val authenticatorAttestationResponse: anonymous_interface_31 [@@js.global "AuthenticatorAttestationResponse"]
  module[@js.scope "AuthenticatorResponse"] AuthenticatorResponse : sig
    type t = _AuthenticatorResponse
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_clientDataJSON: t -> ArrayBuffer.t_0 [@@js.get "clientDataJSON"]
  end
  val authenticatorResponse: anonymous_interface_32 [@@js.global "AuthenticatorResponse"]
  module[@js.scope "BarProp"] BarProp : sig
    type t = _BarProp
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_visible: t -> bool [@@js.get "visible"]
  end
  val barProp: anonymous_interface_33 [@@js.global "BarProp"]
  module[@js.scope "BaseAudioContextEventMap"] BaseAudioContextEventMap : sig
    type t = _BaseAudioContextEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_statechange: t -> _Event [@@js.get "statechange"]
    val set_statechange: t -> _Event -> unit [@@js.set "statechange"]
  end
  module[@js.scope "BaseAudioContext"] BaseAudioContext : sig
    type t = _BaseAudioContext
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_audioWorklet: t -> _AudioWorklet [@@js.get "audioWorklet"]
    val get_currentTime: t -> float [@@js.get "currentTime"]
    val get_destination: t -> _AudioDestinationNode [@@js.get "destination"]
    val get_listener: t -> _AudioListener [@@js.get "listener"]
    val get_onstatechange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onstatechange"]
    val set_onstatechange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onstatechange"]
    val get_sampleRate: t -> float [@@js.get "sampleRate"]
    val get_state: t -> _AudioContextState [@@js.get "state"]
    val createAnalyser: t -> _AnalyserNode [@@js.call "createAnalyser"]
    val createBiquadFilter: t -> _BiquadFilterNode [@@js.call "createBiquadFilter"]
    val createBuffer: t -> numberOfChannels:float -> length:float -> sampleRate:float -> _AudioBuffer [@@js.call "createBuffer"]
    val createBufferSource: t -> _AudioBufferSourceNode [@@js.call "createBufferSource"]
    val createChannelMerger: t -> ?numberOfInputs:float -> unit -> _ChannelMergerNode [@@js.call "createChannelMerger"]
    val createChannelSplitter: t -> ?numberOfOutputs:float -> unit -> _ChannelSplitterNode [@@js.call "createChannelSplitter"]
    val createConstantSource: t -> _ConstantSourceNode [@@js.call "createConstantSource"]
    val createConvolver: t -> _ConvolverNode [@@js.call "createConvolver"]
    val createDelay: t -> ?maxDelayTime:float -> unit -> _DelayNode [@@js.call "createDelay"]
    val createDynamicsCompressor: t -> _DynamicsCompressorNode [@@js.call "createDynamicsCompressor"]
    val createGain: t -> _GainNode [@@js.call "createGain"]
    val createIIRFilter: t -> feedforward:float list -> feedback:float list -> _IIRFilterNode [@@js.call "createIIRFilter"]
    val createOscillator: t -> _OscillatorNode [@@js.call "createOscillator"]
    val createPanner: t -> _PannerNode [@@js.call "createPanner"]
    val createPeriodicWave: t -> real:(Float32Array.t_0, float) or_array -> imag:(Float32Array.t_0, float) or_array -> ?constraints:_PeriodicWaveConstraints -> unit -> _PeriodicWave [@@js.call "createPeriodicWave"]
    val createScriptProcessor: t -> ?bufferSize:float -> ?numberOfInputChannels:float -> ?numberOfOutputChannels:float -> unit -> _ScriptProcessorNode [@@js.call "createScriptProcessor"]
    val createStereoPanner: t -> _StereoPannerNode [@@js.call "createStereoPanner"]
    val createWaveShaper: t -> _WaveShaperNode [@@js.call "createWaveShaper"]
    val decodeAudioData: t -> audioData:ArrayBuffer.t_0 -> ?successCallback:_DecodeSuccessCallback or_null -> ?errorCallback:_DecodeErrorCallback or_null -> unit -> _AudioBuffer Promise.t_1 [@@js.call "decodeAudioData"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val baseAudioContext: anonymous_interface_34 [@@js.global "BaseAudioContext"]
  module[@js.scope "BeforeUnloadEvent"] BeforeUnloadEvent : sig
    type t = _BeforeUnloadEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_returnValue: t -> any [@@js.get "returnValue"]
    val set_returnValue: t -> any -> unit [@@js.set "returnValue"]
    val cast: t -> _Event [@@js.cast]
  end
  val beforeUnloadEvent: anonymous_interface_35 [@@js.global "BeforeUnloadEvent"]
  module[@js.scope "BhxBrowser"] BhxBrowser : sig
    type t = _BhxBrowser
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_lastError: t -> _DOMException [@@js.get "lastError"]
    val checkMatchesGlobExpression: t -> pattern:string -> value:string -> bool [@@js.call "checkMatchesGlobExpression"]
    val checkMatchesUriExpression: t -> pattern:string -> value:string -> bool [@@js.call "checkMatchesUriExpression"]
    val clearLastError: t -> unit [@@js.call "clearLastError"]
    val currentWindowId: t -> float [@@js.call "currentWindowId"]
    val fireExtensionApiTelemetry: t -> functionName:string -> isSucceeded:bool -> isSupported:bool -> errorString:string -> unit [@@js.call "fireExtensionApiTelemetry"]
    val genericFunction: t -> functionId:float -> destination:any -> ?parameters:string -> ?callbackId:float -> unit -> unit [@@js.call "genericFunction"]
    val genericSynchronousFunction: t -> functionId:float -> ?parameters:string -> unit -> string [@@js.call "genericSynchronousFunction"]
    val getExtensionId: t -> string [@@js.call "getExtensionId"]
    val getThisAddress: t -> any [@@js.call "getThisAddress"]
    val registerGenericFunctionCallbackHandler: t -> callbackHandler:untyped_function -> unit [@@js.call "registerGenericFunctionCallbackHandler"]
    val registerGenericListenerHandler: t -> eventHandler:untyped_function -> unit [@@js.call "registerGenericListenerHandler"]
    val setLastError: t -> parameters:string -> unit [@@js.call "setLastError"]
    val webPlatformGenericFunction: t -> destination:any -> ?parameters:string -> ?callbackId:float -> unit -> unit [@@js.call "webPlatformGenericFunction"]
  end
  val bhxBrowser: anonymous_interface_36 [@@js.global "BhxBrowser"]
  module[@js.scope "BiquadFilterNode"] BiquadFilterNode : sig
    type t = _BiquadFilterNode
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_Q: t -> _AudioParam [@@js.get "Q"]
    val get_detune: t -> _AudioParam [@@js.get "detune"]
    val get_frequency: t -> _AudioParam [@@js.get "frequency"]
    val get_gain: t -> _AudioParam [@@js.get "gain"]
    val get_type: t -> _BiquadFilterType [@@js.get "type"]
    val set_type: t -> _BiquadFilterType -> unit [@@js.set "type"]
    val getFrequencyResponse: t -> frequencyHz:Float32Array.t_0 -> magResponse:Float32Array.t_0 -> phaseResponse:Float32Array.t_0 -> unit [@@js.call "getFrequencyResponse"]
    val cast: t -> _AudioNode [@@js.cast]
  end
  val biquadFilterNode: anonymous_interface_37 [@@js.global "BiquadFilterNode"]
  module[@js.scope "Blob"] Blob : sig
    type t = _Blob
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_size: t -> float [@@js.get "size"]
    val get_type: t -> string [@@js.get "type"]
    val arrayBuffer: t -> ArrayBuffer.t_0 Promise.t_1 [@@js.call "arrayBuffer"]
    val slice: t -> ?start:float -> ?end_:float -> ?contentType:string -> unit -> t [@@js.call "slice"]
    val stream: t -> any _ReadableStream [@@js.call "stream"]
    val text: t -> string Promise.t_1 [@@js.call "text"]
  end
  val blob: anonymous_interface_38 [@@js.global "Blob"]
  module[@js.scope "Body"] Body : sig
    type t = _Body
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_body: t -> Uint8Array.t_0 _ReadableStream or_null [@@js.get "body"]
    val get_bodyUsed: t -> bool [@@js.get "bodyUsed"]
    val arrayBuffer: t -> ArrayBuffer.t_0 Promise.t_1 [@@js.call "arrayBuffer"]
    val blob: t -> _Blob Promise.t_1 [@@js.call "blob"]
    val formData: t -> _FormData Promise.t_1 [@@js.call "formData"]
    val json: t -> any Promise.t_1 [@@js.call "json"]
    val text: t -> string Promise.t_1 [@@js.call "text"]
  end
  module[@js.scope "BroadcastChannelEventMap"] BroadcastChannelEventMap : sig
    type t = _BroadcastChannelEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_message: t -> _MessageEvent [@@js.get "message"]
    val set_message: t -> _MessageEvent -> unit [@@js.set "message"]
    val get_messageerror: t -> _MessageEvent [@@js.get "messageerror"]
    val set_messageerror: t -> _MessageEvent -> unit [@@js.set "messageerror"]
  end
  module[@js.scope "BroadcastChannel"] BroadcastChannel : sig
    type t = _BroadcastChannel
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_name: t -> string [@@js.get "name"]
    val get_onmessage: t -> (this:t -> ev:_MessageEvent -> any) or_null [@@js.get "onmessage"]
    val set_onmessage: t -> (this:t -> ev:_MessageEvent -> any) or_null -> unit [@@js.set "onmessage"]
    val get_onmessageerror: t -> (this:t -> ev:_MessageEvent -> any) or_null [@@js.get "onmessageerror"]
    val set_onmessageerror: t -> (this:t -> ev:_MessageEvent -> any) or_null -> unit [@@js.set "onmessageerror"]
    val close: t -> unit [@@js.call "close"]
    val postMessage: t -> message:any -> unit [@@js.call "postMessage"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val broadcastChannel: anonymous_interface_39 [@@js.global "BroadcastChannel"]
  module[@js.scope "ByteLengthQueuingStrategy"] ByteLengthQueuingStrategy : sig
    type t = _ByteLengthQueuingStrategy
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_highWaterMark: t -> float [@@js.get "highWaterMark"]
    val set_highWaterMark: t -> float -> unit [@@js.set "highWaterMark"]
    val size: t -> chunk:ArrayBufferView.t_0 -> float [@@js.call "size"]
    val cast: t -> ArrayBufferView.t_0 _QueuingStrategy [@@js.cast]
  end
  val byteLengthQueuingStrategy: anonymous_interface_40 [@@js.global "ByteLengthQueuingStrategy"]
  module[@js.scope "CDATASection"] CDATASection : sig
    type t = _CDATASection
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val cast: t -> _Text [@@js.cast]
  end
  val cDATASection: anonymous_interface_41 [@@js.global "CDATASection"]
  module[@js.scope "CSS"] CSS : sig
    type t = _CSS
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val escape: t -> value:string -> string [@@js.call "escape"]
    val supports: t -> property:string -> ?value:string -> unit -> bool [@@js.call "supports"]
  end
  val cSS: _CSS [@@js.global "CSS"]
  module[@js.scope "CSSConditionRule"] CSSConditionRule : sig
    type t = _CSSConditionRule
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_conditionText: t -> string [@@js.get "conditionText"]
    val set_conditionText: t -> string -> unit [@@js.set "conditionText"]
    val cast: t -> _CSSGroupingRule [@@js.cast]
  end
  val cSSConditionRule: anonymous_interface_42 [@@js.global "CSSConditionRule"]
  module[@js.scope "CSSFontFaceRule"] CSSFontFaceRule : sig
    type t = _CSSFontFaceRule
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_style: t -> _CSSStyleDeclaration [@@js.get "style"]
    val cast: t -> _CSSRule [@@js.cast]
  end
  val cSSFontFaceRule: anonymous_interface_43 [@@js.global "CSSFontFaceRule"]
  module[@js.scope "CSSGroupingRule"] CSSGroupingRule : sig
    type t = _CSSGroupingRule
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_cssRules: t -> _CSSRuleList [@@js.get "cssRules"]
    val deleteRule: t -> index:float -> unit [@@js.call "deleteRule"]
    val insertRule: t -> rule:string -> index:float -> float [@@js.call "insertRule"]
    val cast: t -> _CSSRule [@@js.cast]
  end
  val cSSGroupingRule: anonymous_interface_44 [@@js.global "CSSGroupingRule"]
  module[@js.scope "CSSImportRule"] CSSImportRule : sig
    type t = _CSSImportRule
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_href: t -> string [@@js.get "href"]
    val get_media: t -> _MediaList [@@js.get "media"]
    val get_styleSheet: t -> _CSSStyleSheet [@@js.get "styleSheet"]
    val cast: t -> _CSSRule [@@js.cast]
  end
  val cSSImportRule: anonymous_interface_45 [@@js.global "CSSImportRule"]
  module[@js.scope "CSSKeyframeRule"] CSSKeyframeRule : sig
    type t = _CSSKeyframeRule
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_keyText: t -> string [@@js.get "keyText"]
    val set_keyText: t -> string -> unit [@@js.set "keyText"]
    val get_style: t -> _CSSStyleDeclaration [@@js.get "style"]
    val cast: t -> _CSSRule [@@js.cast]
  end
  val cSSKeyframeRule: anonymous_interface_46 [@@js.global "CSSKeyframeRule"]
  module[@js.scope "CSSKeyframesRule"] CSSKeyframesRule : sig
    type t = _CSSKeyframesRule
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_cssRules: t -> _CSSRuleList [@@js.get "cssRules"]
    val get_name: t -> string [@@js.get "name"]
    val set_name: t -> string -> unit [@@js.set "name"]
    val appendRule: t -> rule:string -> unit [@@js.call "appendRule"]
    val deleteRule: t -> select:string -> unit [@@js.call "deleteRule"]
    val findRule: t -> select:string -> _CSSKeyframeRule or_null [@@js.call "findRule"]
    val cast: t -> _CSSRule [@@js.cast]
  end
  val cSSKeyframesRule: anonymous_interface_47 [@@js.global "CSSKeyframesRule"]
  module[@js.scope "CSSMediaRule"] CSSMediaRule : sig
    type t = _CSSMediaRule
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_media: t -> _MediaList [@@js.get "media"]
    val cast: t -> _CSSConditionRule [@@js.cast]
  end
  val cSSMediaRule: anonymous_interface_48 [@@js.global "CSSMediaRule"]
  module[@js.scope "CSSNamespaceRule"] CSSNamespaceRule : sig
    type t = _CSSNamespaceRule
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_namespaceURI: t -> string [@@js.get "namespaceURI"]
    val get_prefix: t -> string [@@js.get "prefix"]
    val cast: t -> _CSSRule [@@js.cast]
  end
  val cSSNamespaceRule: anonymous_interface_49 [@@js.global "CSSNamespaceRule"]
  module[@js.scope "CSSPageRule"] CSSPageRule : sig
    type t = _CSSPageRule
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_pseudoClass: t -> string [@@js.get "pseudoClass"]
    val get_selector: t -> string [@@js.get "selector"]
    val get_selectorText: t -> string [@@js.get "selectorText"]
    val set_selectorText: t -> string -> unit [@@js.set "selectorText"]
    val get_style: t -> _CSSStyleDeclaration [@@js.get "style"]
    val cast: t -> _CSSRule [@@js.cast]
  end
  val cSSPageRule: anonymous_interface_50 [@@js.global "CSSPageRule"]
  module[@js.scope "CSSRule"] CSSRule : sig
    type t = _CSSRule
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_cssText: t -> string [@@js.get "cssText"]
    val set_cssText: t -> string -> unit [@@js.set "cssText"]
    val get_parentRule: t -> t or_null [@@js.get "parentRule"]
    val get_parentStyleSheet: t -> _CSSStyleSheet or_null [@@js.get "parentStyleSheet"]
    val get_type: t -> float [@@js.get "type"]
    val get_CHARSET_RULE: t -> float [@@js.get "CHARSET_RULE"]
    val get_FONT_FACE_RULE: t -> float [@@js.get "FONT_FACE_RULE"]
    val get_IMPORT_RULE: t -> float [@@js.get "IMPORT_RULE"]
    val get_KEYFRAMES_RULE: t -> float [@@js.get "KEYFRAMES_RULE"]
    val get_KEYFRAME_RULE: t -> float [@@js.get "KEYFRAME_RULE"]
    val get_MEDIA_RULE: t -> float [@@js.get "MEDIA_RULE"]
    val get_NAMESPACE_RULE: t -> float [@@js.get "NAMESPACE_RULE"]
    val get_PAGE_RULE: t -> float [@@js.get "PAGE_RULE"]
    val get_STYLE_RULE: t -> float [@@js.get "STYLE_RULE"]
    val get_SUPPORTS_RULE: t -> float [@@js.get "SUPPORTS_RULE"]
    val get_UNKNOWN_RULE: t -> float [@@js.get "UNKNOWN_RULE"]
    val get_VIEWPORT_RULE: t -> float [@@js.get "VIEWPORT_RULE"]
  end
  val cSSRule: anonymous_interface_51 [@@js.global "CSSRule"]
  module[@js.scope "CSSRuleList"] CSSRuleList : sig
    type t = _CSSRuleList
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_length: t -> float [@@js.get "length"]
    val item: t -> index:float -> _CSSRule or_null [@@js.call "item"]
    val get: t -> float -> _CSSRule [@@js.index_get]
    val set: t -> float -> _CSSRule -> unit [@@js.index_set]
  end
  val cSSRuleList: anonymous_interface_52 [@@js.global "CSSRuleList"]
  module[@js.scope "CSSStyleDeclaration"] CSSStyleDeclaration : sig
    type t = _CSSStyleDeclaration
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_alignContent: t -> string [@@js.get "alignContent"]
    val set_alignContent: t -> string -> unit [@@js.set "alignContent"]
    val get_alignItems: t -> string [@@js.get "alignItems"]
    val set_alignItems: t -> string -> unit [@@js.set "alignItems"]
    val get_alignSelf: t -> string [@@js.get "alignSelf"]
    val set_alignSelf: t -> string -> unit [@@js.set "alignSelf"]
    val get_alignmentBaseline: t -> string [@@js.get "alignmentBaseline"]
    val set_alignmentBaseline: t -> string -> unit [@@js.set "alignmentBaseline"]
    val get_animation: t -> string [@@js.get "animation"]
    val set_animation: t -> string -> unit [@@js.set "animation"]
    val get_animationDelay: t -> string [@@js.get "animationDelay"]
    val set_animationDelay: t -> string -> unit [@@js.set "animationDelay"]
    val get_animationDirection: t -> string [@@js.get "animationDirection"]
    val set_animationDirection: t -> string -> unit [@@js.set "animationDirection"]
    val get_animationDuration: t -> string [@@js.get "animationDuration"]
    val set_animationDuration: t -> string -> unit [@@js.set "animationDuration"]
    val get_animationFillMode: t -> string [@@js.get "animationFillMode"]
    val set_animationFillMode: t -> string -> unit [@@js.set "animationFillMode"]
    val get_animationIterationCount: t -> string [@@js.get "animationIterationCount"]
    val set_animationIterationCount: t -> string -> unit [@@js.set "animationIterationCount"]
    val get_animationName: t -> string [@@js.get "animationName"]
    val set_animationName: t -> string -> unit [@@js.set "animationName"]
    val get_animationPlayState: t -> string [@@js.get "animationPlayState"]
    val set_animationPlayState: t -> string -> unit [@@js.set "animationPlayState"]
    val get_animationTimingFunction: t -> string [@@js.get "animationTimingFunction"]
    val set_animationTimingFunction: t -> string -> unit [@@js.set "animationTimingFunction"]
    val get_backfaceVisibility: t -> string [@@js.get "backfaceVisibility"]
    val set_backfaceVisibility: t -> string -> unit [@@js.set "backfaceVisibility"]
    val get_background: t -> string [@@js.get "background"]
    val set_background: t -> string -> unit [@@js.set "background"]
    val get_backgroundAttachment: t -> string [@@js.get "backgroundAttachment"]
    val set_backgroundAttachment: t -> string -> unit [@@js.set "backgroundAttachment"]
    val get_backgroundClip: t -> string [@@js.get "backgroundClip"]
    val set_backgroundClip: t -> string -> unit [@@js.set "backgroundClip"]
    val get_backgroundColor: t -> string [@@js.get "backgroundColor"]
    val set_backgroundColor: t -> string -> unit [@@js.set "backgroundColor"]
    val get_backgroundImage: t -> string [@@js.get "backgroundImage"]
    val set_backgroundImage: t -> string -> unit [@@js.set "backgroundImage"]
    val get_backgroundOrigin: t -> string [@@js.get "backgroundOrigin"]
    val set_backgroundOrigin: t -> string -> unit [@@js.set "backgroundOrigin"]
    val get_backgroundPosition: t -> string [@@js.get "backgroundPosition"]
    val set_backgroundPosition: t -> string -> unit [@@js.set "backgroundPosition"]
    val get_backgroundPositionX: t -> string [@@js.get "backgroundPositionX"]
    val set_backgroundPositionX: t -> string -> unit [@@js.set "backgroundPositionX"]
    val get_backgroundPositionY: t -> string [@@js.get "backgroundPositionY"]
    val set_backgroundPositionY: t -> string -> unit [@@js.set "backgroundPositionY"]
    val get_backgroundRepeat: t -> string [@@js.get "backgroundRepeat"]
    val set_backgroundRepeat: t -> string -> unit [@@js.set "backgroundRepeat"]
    val get_backgroundSize: t -> string [@@js.get "backgroundSize"]
    val set_backgroundSize: t -> string -> unit [@@js.set "backgroundSize"]
    val get_baselineShift: t -> string [@@js.get "baselineShift"]
    val set_baselineShift: t -> string -> unit [@@js.set "baselineShift"]
    val get_blockSize: t -> string [@@js.get "blockSize"]
    val set_blockSize: t -> string -> unit [@@js.set "blockSize"]
    val get_border: t -> string [@@js.get "border"]
    val set_border: t -> string -> unit [@@js.set "border"]
    val get_borderBlockEnd: t -> string [@@js.get "borderBlockEnd"]
    val set_borderBlockEnd: t -> string -> unit [@@js.set "borderBlockEnd"]
    val get_borderBlockEndColor: t -> string [@@js.get "borderBlockEndColor"]
    val set_borderBlockEndColor: t -> string -> unit [@@js.set "borderBlockEndColor"]
    val get_borderBlockEndStyle: t -> string [@@js.get "borderBlockEndStyle"]
    val set_borderBlockEndStyle: t -> string -> unit [@@js.set "borderBlockEndStyle"]
    val get_borderBlockEndWidth: t -> string [@@js.get "borderBlockEndWidth"]
    val set_borderBlockEndWidth: t -> string -> unit [@@js.set "borderBlockEndWidth"]
    val get_borderBlockStart: t -> string [@@js.get "borderBlockStart"]
    val set_borderBlockStart: t -> string -> unit [@@js.set "borderBlockStart"]
    val get_borderBlockStartColor: t -> string [@@js.get "borderBlockStartColor"]
    val set_borderBlockStartColor: t -> string -> unit [@@js.set "borderBlockStartColor"]
    val get_borderBlockStartStyle: t -> string [@@js.get "borderBlockStartStyle"]
    val set_borderBlockStartStyle: t -> string -> unit [@@js.set "borderBlockStartStyle"]
    val get_borderBlockStartWidth: t -> string [@@js.get "borderBlockStartWidth"]
    val set_borderBlockStartWidth: t -> string -> unit [@@js.set "borderBlockStartWidth"]
    val get_borderBottom: t -> string [@@js.get "borderBottom"]
    val set_borderBottom: t -> string -> unit [@@js.set "borderBottom"]
    val get_borderBottomColor: t -> string [@@js.get "borderBottomColor"]
    val set_borderBottomColor: t -> string -> unit [@@js.set "borderBottomColor"]
    val get_borderBottomLeftRadius: t -> string [@@js.get "borderBottomLeftRadius"]
    val set_borderBottomLeftRadius: t -> string -> unit [@@js.set "borderBottomLeftRadius"]
    val get_borderBottomRightRadius: t -> string [@@js.get "borderBottomRightRadius"]
    val set_borderBottomRightRadius: t -> string -> unit [@@js.set "borderBottomRightRadius"]
    val get_borderBottomStyle: t -> string [@@js.get "borderBottomStyle"]
    val set_borderBottomStyle: t -> string -> unit [@@js.set "borderBottomStyle"]
    val get_borderBottomWidth: t -> string [@@js.get "borderBottomWidth"]
    val set_borderBottomWidth: t -> string -> unit [@@js.set "borderBottomWidth"]
    val get_borderCollapse: t -> string [@@js.get "borderCollapse"]
    val set_borderCollapse: t -> string -> unit [@@js.set "borderCollapse"]
    val get_borderColor: t -> string [@@js.get "borderColor"]
    val set_borderColor: t -> string -> unit [@@js.set "borderColor"]
    val get_borderImage: t -> string [@@js.get "borderImage"]
    val set_borderImage: t -> string -> unit [@@js.set "borderImage"]
    val get_borderImageOutset: t -> string [@@js.get "borderImageOutset"]
    val set_borderImageOutset: t -> string -> unit [@@js.set "borderImageOutset"]
    val get_borderImageRepeat: t -> string [@@js.get "borderImageRepeat"]
    val set_borderImageRepeat: t -> string -> unit [@@js.set "borderImageRepeat"]
    val get_borderImageSlice: t -> string [@@js.get "borderImageSlice"]
    val set_borderImageSlice: t -> string -> unit [@@js.set "borderImageSlice"]
    val get_borderImageSource: t -> string [@@js.get "borderImageSource"]
    val set_borderImageSource: t -> string -> unit [@@js.set "borderImageSource"]
    val get_borderImageWidth: t -> string [@@js.get "borderImageWidth"]
    val set_borderImageWidth: t -> string -> unit [@@js.set "borderImageWidth"]
    val get_borderInlineEnd: t -> string [@@js.get "borderInlineEnd"]
    val set_borderInlineEnd: t -> string -> unit [@@js.set "borderInlineEnd"]
    val get_borderInlineEndColor: t -> string [@@js.get "borderInlineEndColor"]
    val set_borderInlineEndColor: t -> string -> unit [@@js.set "borderInlineEndColor"]
    val get_borderInlineEndStyle: t -> string [@@js.get "borderInlineEndStyle"]
    val set_borderInlineEndStyle: t -> string -> unit [@@js.set "borderInlineEndStyle"]
    val get_borderInlineEndWidth: t -> string [@@js.get "borderInlineEndWidth"]
    val set_borderInlineEndWidth: t -> string -> unit [@@js.set "borderInlineEndWidth"]
    val get_borderInlineStart: t -> string [@@js.get "borderInlineStart"]
    val set_borderInlineStart: t -> string -> unit [@@js.set "borderInlineStart"]
    val get_borderInlineStartColor: t -> string [@@js.get "borderInlineStartColor"]
    val set_borderInlineStartColor: t -> string -> unit [@@js.set "borderInlineStartColor"]
    val get_borderInlineStartStyle: t -> string [@@js.get "borderInlineStartStyle"]
    val set_borderInlineStartStyle: t -> string -> unit [@@js.set "borderInlineStartStyle"]
    val get_borderInlineStartWidth: t -> string [@@js.get "borderInlineStartWidth"]
    val set_borderInlineStartWidth: t -> string -> unit [@@js.set "borderInlineStartWidth"]
    val get_borderLeft: t -> string [@@js.get "borderLeft"]
    val set_borderLeft: t -> string -> unit [@@js.set "borderLeft"]
    val get_borderLeftColor: t -> string [@@js.get "borderLeftColor"]
    val set_borderLeftColor: t -> string -> unit [@@js.set "borderLeftColor"]
    val get_borderLeftStyle: t -> string [@@js.get "borderLeftStyle"]
    val set_borderLeftStyle: t -> string -> unit [@@js.set "borderLeftStyle"]
    val get_borderLeftWidth: t -> string [@@js.get "borderLeftWidth"]
    val set_borderLeftWidth: t -> string -> unit [@@js.set "borderLeftWidth"]
    val get_borderRadius: t -> string [@@js.get "borderRadius"]
    val set_borderRadius: t -> string -> unit [@@js.set "borderRadius"]
    val get_borderRight: t -> string [@@js.get "borderRight"]
    val set_borderRight: t -> string -> unit [@@js.set "borderRight"]
    val get_borderRightColor: t -> string [@@js.get "borderRightColor"]
    val set_borderRightColor: t -> string -> unit [@@js.set "borderRightColor"]
    val get_borderRightStyle: t -> string [@@js.get "borderRightStyle"]
    val set_borderRightStyle: t -> string -> unit [@@js.set "borderRightStyle"]
    val get_borderRightWidth: t -> string [@@js.get "borderRightWidth"]
    val set_borderRightWidth: t -> string -> unit [@@js.set "borderRightWidth"]
    val get_borderSpacing: t -> string [@@js.get "borderSpacing"]
    val set_borderSpacing: t -> string -> unit [@@js.set "borderSpacing"]
    val get_borderStyle: t -> string [@@js.get "borderStyle"]
    val set_borderStyle: t -> string -> unit [@@js.set "borderStyle"]
    val get_borderTop: t -> string [@@js.get "borderTop"]
    val set_borderTop: t -> string -> unit [@@js.set "borderTop"]
    val get_borderTopColor: t -> string [@@js.get "borderTopColor"]
    val set_borderTopColor: t -> string -> unit [@@js.set "borderTopColor"]
    val get_borderTopLeftRadius: t -> string [@@js.get "borderTopLeftRadius"]
    val set_borderTopLeftRadius: t -> string -> unit [@@js.set "borderTopLeftRadius"]
    val get_borderTopRightRadius: t -> string [@@js.get "borderTopRightRadius"]
    val set_borderTopRightRadius: t -> string -> unit [@@js.set "borderTopRightRadius"]
    val get_borderTopStyle: t -> string [@@js.get "borderTopStyle"]
    val set_borderTopStyle: t -> string -> unit [@@js.set "borderTopStyle"]
    val get_borderTopWidth: t -> string [@@js.get "borderTopWidth"]
    val set_borderTopWidth: t -> string -> unit [@@js.set "borderTopWidth"]
    val get_borderWidth: t -> string [@@js.get "borderWidth"]
    val set_borderWidth: t -> string -> unit [@@js.set "borderWidth"]
    val get_bottom: t -> string [@@js.get "bottom"]
    val set_bottom: t -> string -> unit [@@js.set "bottom"]
    val get_boxShadow: t -> string [@@js.get "boxShadow"]
    val set_boxShadow: t -> string -> unit [@@js.set "boxShadow"]
    val get_boxSizing: t -> string [@@js.get "boxSizing"]
    val set_boxSizing: t -> string -> unit [@@js.set "boxSizing"]
    val get_breakAfter: t -> string [@@js.get "breakAfter"]
    val set_breakAfter: t -> string -> unit [@@js.set "breakAfter"]
    val get_breakBefore: t -> string [@@js.get "breakBefore"]
    val set_breakBefore: t -> string -> unit [@@js.set "breakBefore"]
    val get_breakInside: t -> string [@@js.get "breakInside"]
    val set_breakInside: t -> string -> unit [@@js.set "breakInside"]
    val get_captionSide: t -> string [@@js.get "captionSide"]
    val set_captionSide: t -> string -> unit [@@js.set "captionSide"]
    val get_caretColor: t -> string [@@js.get "caretColor"]
    val set_caretColor: t -> string -> unit [@@js.set "caretColor"]
    val get_clear: t -> string [@@js.get "clear"]
    val set_clear: t -> string -> unit [@@js.set "clear"]
    val get_clip: t -> string [@@js.get "clip"]
    val set_clip: t -> string -> unit [@@js.set "clip"]
    val get_clipPath: t -> string [@@js.get "clipPath"]
    val set_clipPath: t -> string -> unit [@@js.set "clipPath"]
    val get_clipRule: t -> string [@@js.get "clipRule"]
    val set_clipRule: t -> string -> unit [@@js.set "clipRule"]
    val get_color: t -> string [@@js.get "color"]
    val set_color: t -> string -> unit [@@js.set "color"]
    val get_colorInterpolation: t -> string [@@js.get "colorInterpolation"]
    val set_colorInterpolation: t -> string -> unit [@@js.set "colorInterpolation"]
    val get_colorInterpolationFilters: t -> string [@@js.get "colorInterpolationFilters"]
    val set_colorInterpolationFilters: t -> string -> unit [@@js.set "colorInterpolationFilters"]
    val get_columnCount: t -> string [@@js.get "columnCount"]
    val set_columnCount: t -> string -> unit [@@js.set "columnCount"]
    val get_columnFill: t -> string [@@js.get "columnFill"]
    val set_columnFill: t -> string -> unit [@@js.set "columnFill"]
    val get_columnGap: t -> string [@@js.get "columnGap"]
    val set_columnGap: t -> string -> unit [@@js.set "columnGap"]
    val get_columnRule: t -> string [@@js.get "columnRule"]
    val set_columnRule: t -> string -> unit [@@js.set "columnRule"]
    val get_columnRuleColor: t -> string [@@js.get "columnRuleColor"]
    val set_columnRuleColor: t -> string -> unit [@@js.set "columnRuleColor"]
    val get_columnRuleStyle: t -> string [@@js.get "columnRuleStyle"]
    val set_columnRuleStyle: t -> string -> unit [@@js.set "columnRuleStyle"]
    val get_columnRuleWidth: t -> string [@@js.get "columnRuleWidth"]
    val set_columnRuleWidth: t -> string -> unit [@@js.set "columnRuleWidth"]
    val get_columnSpan: t -> string [@@js.get "columnSpan"]
    val set_columnSpan: t -> string -> unit [@@js.set "columnSpan"]
    val get_columnWidth: t -> string [@@js.get "columnWidth"]
    val set_columnWidth: t -> string -> unit [@@js.set "columnWidth"]
    val get_columns: t -> string [@@js.get "columns"]
    val set_columns: t -> string -> unit [@@js.set "columns"]
    val get_content: t -> string [@@js.get "content"]
    val set_content: t -> string -> unit [@@js.set "content"]
    val get_counterIncrement: t -> string [@@js.get "counterIncrement"]
    val set_counterIncrement: t -> string -> unit [@@js.set "counterIncrement"]
    val get_counterReset: t -> string [@@js.get "counterReset"]
    val set_counterReset: t -> string -> unit [@@js.set "counterReset"]
    val get_cssFloat: t -> string or_null [@@js.get "cssFloat"]
    val set_cssFloat: t -> string or_null -> unit [@@js.set "cssFloat"]
    val get_cssText: t -> string [@@js.get "cssText"]
    val set_cssText: t -> string -> unit [@@js.set "cssText"]
    val get_cursor: t -> string [@@js.get "cursor"]
    val set_cursor: t -> string -> unit [@@js.set "cursor"]
    val get_direction: t -> string [@@js.get "direction"]
    val set_direction: t -> string -> unit [@@js.set "direction"]
    val get_display: t -> string [@@js.get "display"]
    val set_display: t -> string -> unit [@@js.set "display"]
    val get_dominantBaseline: t -> string [@@js.get "dominantBaseline"]
    val set_dominantBaseline: t -> string -> unit [@@js.set "dominantBaseline"]
    val get_emptyCells: t -> string [@@js.get "emptyCells"]
    val set_emptyCells: t -> string -> unit [@@js.set "emptyCells"]
    val get_enableBackground: t -> string or_null [@@js.get "enableBackground"]
    val set_enableBackground: t -> string or_null -> unit [@@js.set "enableBackground"]
    val get_fill: t -> string [@@js.get "fill"]
    val set_fill: t -> string -> unit [@@js.set "fill"]
    val get_fillOpacity: t -> string [@@js.get "fillOpacity"]
    val set_fillOpacity: t -> string -> unit [@@js.set "fillOpacity"]
    val get_fillRule: t -> string [@@js.get "fillRule"]
    val set_fillRule: t -> string -> unit [@@js.set "fillRule"]
    val get_filter: t -> string [@@js.get "filter"]
    val set_filter: t -> string -> unit [@@js.set "filter"]
    val get_flex: t -> string [@@js.get "flex"]
    val set_flex: t -> string -> unit [@@js.set "flex"]
    val get_flexBasis: t -> string [@@js.get "flexBasis"]
    val set_flexBasis: t -> string -> unit [@@js.set "flexBasis"]
    val get_flexDirection: t -> string [@@js.get "flexDirection"]
    val set_flexDirection: t -> string -> unit [@@js.set "flexDirection"]
    val get_flexFlow: t -> string [@@js.get "flexFlow"]
    val set_flexFlow: t -> string -> unit [@@js.set "flexFlow"]
    val get_flexGrow: t -> string [@@js.get "flexGrow"]
    val set_flexGrow: t -> string -> unit [@@js.set "flexGrow"]
    val get_flexShrink: t -> string [@@js.get "flexShrink"]
    val set_flexShrink: t -> string -> unit [@@js.set "flexShrink"]
    val get_flexWrap: t -> string [@@js.get "flexWrap"]
    val set_flexWrap: t -> string -> unit [@@js.set "flexWrap"]
    val get_float: t -> string [@@js.get "float"]
    val set_float: t -> string -> unit [@@js.set "float"]
    val get_floodColor: t -> string [@@js.get "floodColor"]
    val set_floodColor: t -> string -> unit [@@js.set "floodColor"]
    val get_floodOpacity: t -> string [@@js.get "floodOpacity"]
    val set_floodOpacity: t -> string -> unit [@@js.set "floodOpacity"]
    val get_font: t -> string [@@js.get "font"]
    val set_font: t -> string -> unit [@@js.set "font"]
    val get_fontFamily: t -> string [@@js.get "fontFamily"]
    val set_fontFamily: t -> string -> unit [@@js.set "fontFamily"]
    val get_fontFeatureSettings: t -> string [@@js.get "fontFeatureSettings"]
    val set_fontFeatureSettings: t -> string -> unit [@@js.set "fontFeatureSettings"]
    val get_fontKerning: t -> string [@@js.get "fontKerning"]
    val set_fontKerning: t -> string -> unit [@@js.set "fontKerning"]
    val get_fontSize: t -> string [@@js.get "fontSize"]
    val set_fontSize: t -> string -> unit [@@js.set "fontSize"]
    val get_fontSizeAdjust: t -> string [@@js.get "fontSizeAdjust"]
    val set_fontSizeAdjust: t -> string -> unit [@@js.set "fontSizeAdjust"]
    val get_fontStretch: t -> string [@@js.get "fontStretch"]
    val set_fontStretch: t -> string -> unit [@@js.set "fontStretch"]
    val get_fontStyle: t -> string [@@js.get "fontStyle"]
    val set_fontStyle: t -> string -> unit [@@js.set "fontStyle"]
    val get_fontSynthesis: t -> string [@@js.get "fontSynthesis"]
    val set_fontSynthesis: t -> string -> unit [@@js.set "fontSynthesis"]
    val get_fontVariant: t -> string [@@js.get "fontVariant"]
    val set_fontVariant: t -> string -> unit [@@js.set "fontVariant"]
    val get_fontVariantCaps: t -> string [@@js.get "fontVariantCaps"]
    val set_fontVariantCaps: t -> string -> unit [@@js.set "fontVariantCaps"]
    val get_fontVariantEastAsian: t -> string [@@js.get "fontVariantEastAsian"]
    val set_fontVariantEastAsian: t -> string -> unit [@@js.set "fontVariantEastAsian"]
    val get_fontVariantLigatures: t -> string [@@js.get "fontVariantLigatures"]
    val set_fontVariantLigatures: t -> string -> unit [@@js.set "fontVariantLigatures"]
    val get_fontVariantNumeric: t -> string [@@js.get "fontVariantNumeric"]
    val set_fontVariantNumeric: t -> string -> unit [@@js.set "fontVariantNumeric"]
    val get_fontVariantPosition: t -> string [@@js.get "fontVariantPosition"]
    val set_fontVariantPosition: t -> string -> unit [@@js.set "fontVariantPosition"]
    val get_fontWeight: t -> string [@@js.get "fontWeight"]
    val set_fontWeight: t -> string -> unit [@@js.set "fontWeight"]
    val get_gap: t -> string [@@js.get "gap"]
    val set_gap: t -> string -> unit [@@js.set "gap"]
    val get_glyphOrientationHorizontal: t -> string or_null [@@js.get "glyphOrientationHorizontal"]
    val set_glyphOrientationHorizontal: t -> string or_null -> unit [@@js.set "glyphOrientationHorizontal"]
    val get_glyphOrientationVertical: t -> string [@@js.get "glyphOrientationVertical"]
    val set_glyphOrientationVertical: t -> string -> unit [@@js.set "glyphOrientationVertical"]
    val get_grid: t -> string [@@js.get "grid"]
    val set_grid: t -> string -> unit [@@js.set "grid"]
    val get_gridArea: t -> string [@@js.get "gridArea"]
    val set_gridArea: t -> string -> unit [@@js.set "gridArea"]
    val get_gridAutoColumns: t -> string [@@js.get "gridAutoColumns"]
    val set_gridAutoColumns: t -> string -> unit [@@js.set "gridAutoColumns"]
    val get_gridAutoFlow: t -> string [@@js.get "gridAutoFlow"]
    val set_gridAutoFlow: t -> string -> unit [@@js.set "gridAutoFlow"]
    val get_gridAutoRows: t -> string [@@js.get "gridAutoRows"]
    val set_gridAutoRows: t -> string -> unit [@@js.set "gridAutoRows"]
    val get_gridColumn: t -> string [@@js.get "gridColumn"]
    val set_gridColumn: t -> string -> unit [@@js.set "gridColumn"]
    val get_gridColumnEnd: t -> string [@@js.get "gridColumnEnd"]
    val set_gridColumnEnd: t -> string -> unit [@@js.set "gridColumnEnd"]
    val get_gridColumnGap: t -> string [@@js.get "gridColumnGap"]
    val set_gridColumnGap: t -> string -> unit [@@js.set "gridColumnGap"]
    val get_gridColumnStart: t -> string [@@js.get "gridColumnStart"]
    val set_gridColumnStart: t -> string -> unit [@@js.set "gridColumnStart"]
    val get_gridGap: t -> string [@@js.get "gridGap"]
    val set_gridGap: t -> string -> unit [@@js.set "gridGap"]
    val get_gridRow: t -> string [@@js.get "gridRow"]
    val set_gridRow: t -> string -> unit [@@js.set "gridRow"]
    val get_gridRowEnd: t -> string [@@js.get "gridRowEnd"]
    val set_gridRowEnd: t -> string -> unit [@@js.set "gridRowEnd"]
    val get_gridRowGap: t -> string [@@js.get "gridRowGap"]
    val set_gridRowGap: t -> string -> unit [@@js.set "gridRowGap"]
    val get_gridRowStart: t -> string [@@js.get "gridRowStart"]
    val set_gridRowStart: t -> string -> unit [@@js.set "gridRowStart"]
    val get_gridTemplate: t -> string [@@js.get "gridTemplate"]
    val set_gridTemplate: t -> string -> unit [@@js.set "gridTemplate"]
    val get_gridTemplateAreas: t -> string [@@js.get "gridTemplateAreas"]
    val set_gridTemplateAreas: t -> string -> unit [@@js.set "gridTemplateAreas"]
    val get_gridTemplateColumns: t -> string [@@js.get "gridTemplateColumns"]
    val set_gridTemplateColumns: t -> string -> unit [@@js.set "gridTemplateColumns"]
    val get_gridTemplateRows: t -> string [@@js.get "gridTemplateRows"]
    val set_gridTemplateRows: t -> string -> unit [@@js.set "gridTemplateRows"]
    val get_height: t -> string [@@js.get "height"]
    val set_height: t -> string -> unit [@@js.set "height"]
    val get_hyphens: t -> string [@@js.get "hyphens"]
    val set_hyphens: t -> string -> unit [@@js.set "hyphens"]
    val get_imageOrientation: t -> string [@@js.get "imageOrientation"]
    val set_imageOrientation: t -> string -> unit [@@js.set "imageOrientation"]
    val get_imageRendering: t -> string [@@js.get "imageRendering"]
    val set_imageRendering: t -> string -> unit [@@js.set "imageRendering"]
    val get_imeMode: t -> string or_null [@@js.get "imeMode"]
    val set_imeMode: t -> string or_null -> unit [@@js.set "imeMode"]
    val get_inlineSize: t -> string [@@js.get "inlineSize"]
    val set_inlineSize: t -> string -> unit [@@js.set "inlineSize"]
    val get_justifyContent: t -> string [@@js.get "justifyContent"]
    val set_justifyContent: t -> string -> unit [@@js.set "justifyContent"]
    val get_justifyItems: t -> string [@@js.get "justifyItems"]
    val set_justifyItems: t -> string -> unit [@@js.set "justifyItems"]
    val get_justifySelf: t -> string [@@js.get "justifySelf"]
    val set_justifySelf: t -> string -> unit [@@js.set "justifySelf"]
    val get_kerning: t -> string or_null [@@js.get "kerning"]
    val set_kerning: t -> string or_null -> unit [@@js.set "kerning"]
    val get_layoutGrid: t -> string or_null [@@js.get "layoutGrid"]
    val set_layoutGrid: t -> string or_null -> unit [@@js.set "layoutGrid"]
    val get_layoutGridChar: t -> string or_null [@@js.get "layoutGridChar"]
    val set_layoutGridChar: t -> string or_null -> unit [@@js.set "layoutGridChar"]
    val get_layoutGridLine: t -> string or_null [@@js.get "layoutGridLine"]
    val set_layoutGridLine: t -> string or_null -> unit [@@js.set "layoutGridLine"]
    val get_layoutGridMode: t -> string or_null [@@js.get "layoutGridMode"]
    val set_layoutGridMode: t -> string or_null -> unit [@@js.set "layoutGridMode"]
    val get_layoutGridType: t -> string or_null [@@js.get "layoutGridType"]
    val set_layoutGridType: t -> string or_null -> unit [@@js.set "layoutGridType"]
    val get_left: t -> string [@@js.get "left"]
    val set_left: t -> string -> unit [@@js.set "left"]
    val get_length: t -> float [@@js.get "length"]
    val get_letterSpacing: t -> string [@@js.get "letterSpacing"]
    val set_letterSpacing: t -> string -> unit [@@js.set "letterSpacing"]
    val get_lightingColor: t -> string [@@js.get "lightingColor"]
    val set_lightingColor: t -> string -> unit [@@js.set "lightingColor"]
    val get_lineBreak: t -> string [@@js.get "lineBreak"]
    val set_lineBreak: t -> string -> unit [@@js.set "lineBreak"]
    val get_lineHeight: t -> string [@@js.get "lineHeight"]
    val set_lineHeight: t -> string -> unit [@@js.set "lineHeight"]
    val get_listStyle: t -> string [@@js.get "listStyle"]
    val set_listStyle: t -> string -> unit [@@js.set "listStyle"]
    val get_listStyleImage: t -> string [@@js.get "listStyleImage"]
    val set_listStyleImage: t -> string -> unit [@@js.set "listStyleImage"]
    val get_listStylePosition: t -> string [@@js.get "listStylePosition"]
    val set_listStylePosition: t -> string -> unit [@@js.set "listStylePosition"]
    val get_listStyleType: t -> string [@@js.get "listStyleType"]
    val set_listStyleType: t -> string -> unit [@@js.set "listStyleType"]
    val get_margin: t -> string [@@js.get "margin"]
    val set_margin: t -> string -> unit [@@js.set "margin"]
    val get_marginBlockEnd: t -> string [@@js.get "marginBlockEnd"]
    val set_marginBlockEnd: t -> string -> unit [@@js.set "marginBlockEnd"]
    val get_marginBlockStart: t -> string [@@js.get "marginBlockStart"]
    val set_marginBlockStart: t -> string -> unit [@@js.set "marginBlockStart"]
    val get_marginBottom: t -> string [@@js.get "marginBottom"]
    val set_marginBottom: t -> string -> unit [@@js.set "marginBottom"]
    val get_marginInlineEnd: t -> string [@@js.get "marginInlineEnd"]
    val set_marginInlineEnd: t -> string -> unit [@@js.set "marginInlineEnd"]
    val get_marginInlineStart: t -> string [@@js.get "marginInlineStart"]
    val set_marginInlineStart: t -> string -> unit [@@js.set "marginInlineStart"]
    val get_marginLeft: t -> string [@@js.get "marginLeft"]
    val set_marginLeft: t -> string -> unit [@@js.set "marginLeft"]
    val get_marginRight: t -> string [@@js.get "marginRight"]
    val set_marginRight: t -> string -> unit [@@js.set "marginRight"]
    val get_marginTop: t -> string [@@js.get "marginTop"]
    val set_marginTop: t -> string -> unit [@@js.set "marginTop"]
    val get_marker: t -> string [@@js.get "marker"]
    val set_marker: t -> string -> unit [@@js.set "marker"]
    val get_markerEnd: t -> string [@@js.get "markerEnd"]
    val set_markerEnd: t -> string -> unit [@@js.set "markerEnd"]
    val get_markerMid: t -> string [@@js.get "markerMid"]
    val set_markerMid: t -> string -> unit [@@js.set "markerMid"]
    val get_markerStart: t -> string [@@js.get "markerStart"]
    val set_markerStart: t -> string -> unit [@@js.set "markerStart"]
    val get_mask: t -> string [@@js.get "mask"]
    val set_mask: t -> string -> unit [@@js.set "mask"]
    val get_maskComposite: t -> string [@@js.get "maskComposite"]
    val set_maskComposite: t -> string -> unit [@@js.set "maskComposite"]
    val get_maskImage: t -> string [@@js.get "maskImage"]
    val set_maskImage: t -> string -> unit [@@js.set "maskImage"]
    val get_maskPosition: t -> string [@@js.get "maskPosition"]
    val set_maskPosition: t -> string -> unit [@@js.set "maskPosition"]
    val get_maskRepeat: t -> string [@@js.get "maskRepeat"]
    val set_maskRepeat: t -> string -> unit [@@js.set "maskRepeat"]
    val get_maskSize: t -> string [@@js.get "maskSize"]
    val set_maskSize: t -> string -> unit [@@js.set "maskSize"]
    val get_maskType: t -> string [@@js.get "maskType"]
    val set_maskType: t -> string -> unit [@@js.set "maskType"]
    val get_maxBlockSize: t -> string [@@js.get "maxBlockSize"]
    val set_maxBlockSize: t -> string -> unit [@@js.set "maxBlockSize"]
    val get_maxHeight: t -> string [@@js.get "maxHeight"]
    val set_maxHeight: t -> string -> unit [@@js.set "maxHeight"]
    val get_maxInlineSize: t -> string [@@js.get "maxInlineSize"]
    val set_maxInlineSize: t -> string -> unit [@@js.set "maxInlineSize"]
    val get_maxWidth: t -> string [@@js.get "maxWidth"]
    val set_maxWidth: t -> string -> unit [@@js.set "maxWidth"]
    val get_minBlockSize: t -> string [@@js.get "minBlockSize"]
    val set_minBlockSize: t -> string -> unit [@@js.set "minBlockSize"]
    val get_minHeight: t -> string [@@js.get "minHeight"]
    val set_minHeight: t -> string -> unit [@@js.set "minHeight"]
    val get_minInlineSize: t -> string [@@js.get "minInlineSize"]
    val set_minInlineSize: t -> string -> unit [@@js.set "minInlineSize"]
    val get_minWidth: t -> string [@@js.get "minWidth"]
    val set_minWidth: t -> string -> unit [@@js.set "minWidth"]
    val get_msContentZoomChaining: t -> string or_null [@@js.get "msContentZoomChaining"]
    val set_msContentZoomChaining: t -> string or_null -> unit [@@js.set "msContentZoomChaining"]
    val get_msContentZoomLimit: t -> string or_null [@@js.get "msContentZoomLimit"]
    val set_msContentZoomLimit: t -> string or_null -> unit [@@js.set "msContentZoomLimit"]
    val get_msContentZoomLimitMax: t -> any [@@js.get "msContentZoomLimitMax"]
    val set_msContentZoomLimitMax: t -> any -> unit [@@js.set "msContentZoomLimitMax"]
    val get_msContentZoomLimitMin: t -> any [@@js.get "msContentZoomLimitMin"]
    val set_msContentZoomLimitMin: t -> any -> unit [@@js.set "msContentZoomLimitMin"]
    val get_msContentZoomSnap: t -> string or_null [@@js.get "msContentZoomSnap"]
    val set_msContentZoomSnap: t -> string or_null -> unit [@@js.set "msContentZoomSnap"]
    val get_msContentZoomSnapPoints: t -> string or_null [@@js.get "msContentZoomSnapPoints"]
    val set_msContentZoomSnapPoints: t -> string or_null -> unit [@@js.set "msContentZoomSnapPoints"]
    val get_msContentZoomSnapType: t -> string or_null [@@js.get "msContentZoomSnapType"]
    val set_msContentZoomSnapType: t -> string or_null -> unit [@@js.set "msContentZoomSnapType"]
    val get_msContentZooming: t -> string or_null [@@js.get "msContentZooming"]
    val set_msContentZooming: t -> string or_null -> unit [@@js.set "msContentZooming"]
    val get_msFlowFrom: t -> string or_null [@@js.get "msFlowFrom"]
    val set_msFlowFrom: t -> string or_null -> unit [@@js.set "msFlowFrom"]
    val get_msFlowInto: t -> string or_null [@@js.get "msFlowInto"]
    val set_msFlowInto: t -> string or_null -> unit [@@js.set "msFlowInto"]
    val get_msFontFeatureSettings: t -> string or_null [@@js.get "msFontFeatureSettings"]
    val set_msFontFeatureSettings: t -> string or_null -> unit [@@js.set "msFontFeatureSettings"]
    val get_msGridColumn: t -> any [@@js.get "msGridColumn"]
    val set_msGridColumn: t -> any -> unit [@@js.set "msGridColumn"]
    val get_msGridColumnAlign: t -> string or_null [@@js.get "msGridColumnAlign"]
    val set_msGridColumnAlign: t -> string or_null -> unit [@@js.set "msGridColumnAlign"]
    val get_msGridColumnSpan: t -> any [@@js.get "msGridColumnSpan"]
    val set_msGridColumnSpan: t -> any -> unit [@@js.set "msGridColumnSpan"]
    val get_msGridColumns: t -> string or_null [@@js.get "msGridColumns"]
    val set_msGridColumns: t -> string or_null -> unit [@@js.set "msGridColumns"]
    val get_msGridRow: t -> any [@@js.get "msGridRow"]
    val set_msGridRow: t -> any -> unit [@@js.set "msGridRow"]
    val get_msGridRowAlign: t -> string or_null [@@js.get "msGridRowAlign"]
    val set_msGridRowAlign: t -> string or_null -> unit [@@js.set "msGridRowAlign"]
    val get_msGridRowSpan: t -> any [@@js.get "msGridRowSpan"]
    val set_msGridRowSpan: t -> any -> unit [@@js.set "msGridRowSpan"]
    val get_msGridRows: t -> string or_null [@@js.get "msGridRows"]
    val set_msGridRows: t -> string or_null -> unit [@@js.set "msGridRows"]
    val get_msHighContrastAdjust: t -> string or_null [@@js.get "msHighContrastAdjust"]
    val set_msHighContrastAdjust: t -> string or_null -> unit [@@js.set "msHighContrastAdjust"]
    val get_msHyphenateLimitChars: t -> string or_null [@@js.get "msHyphenateLimitChars"]
    val set_msHyphenateLimitChars: t -> string or_null -> unit [@@js.set "msHyphenateLimitChars"]
    val get_msHyphenateLimitLines: t -> any [@@js.get "msHyphenateLimitLines"]
    val set_msHyphenateLimitLines: t -> any -> unit [@@js.set "msHyphenateLimitLines"]
    val get_msHyphenateLimitZone: t -> any [@@js.get "msHyphenateLimitZone"]
    val set_msHyphenateLimitZone: t -> any -> unit [@@js.set "msHyphenateLimitZone"]
    val get_msHyphens: t -> string or_null [@@js.get "msHyphens"]
    val set_msHyphens: t -> string or_null -> unit [@@js.set "msHyphens"]
    val get_msImeAlign: t -> string or_null [@@js.get "msImeAlign"]
    val set_msImeAlign: t -> string or_null -> unit [@@js.set "msImeAlign"]
    val get_msOverflowStyle: t -> string or_null [@@js.get "msOverflowStyle"]
    val set_msOverflowStyle: t -> string or_null -> unit [@@js.set "msOverflowStyle"]
    val get_msScrollChaining: t -> string or_null [@@js.get "msScrollChaining"]
    val set_msScrollChaining: t -> string or_null -> unit [@@js.set "msScrollChaining"]
    val get_msScrollLimit: t -> string or_null [@@js.get "msScrollLimit"]
    val set_msScrollLimit: t -> string or_null -> unit [@@js.set "msScrollLimit"]
    val get_msScrollLimitXMax: t -> any [@@js.get "msScrollLimitXMax"]
    val set_msScrollLimitXMax: t -> any -> unit [@@js.set "msScrollLimitXMax"]
    val get_msScrollLimitXMin: t -> any [@@js.get "msScrollLimitXMin"]
    val set_msScrollLimitXMin: t -> any -> unit [@@js.set "msScrollLimitXMin"]
    val get_msScrollLimitYMax: t -> any [@@js.get "msScrollLimitYMax"]
    val set_msScrollLimitYMax: t -> any -> unit [@@js.set "msScrollLimitYMax"]
    val get_msScrollLimitYMin: t -> any [@@js.get "msScrollLimitYMin"]
    val set_msScrollLimitYMin: t -> any -> unit [@@js.set "msScrollLimitYMin"]
    val get_msScrollRails: t -> string or_null [@@js.get "msScrollRails"]
    val set_msScrollRails: t -> string or_null -> unit [@@js.set "msScrollRails"]
    val get_msScrollSnapPointsX: t -> string or_null [@@js.get "msScrollSnapPointsX"]
    val set_msScrollSnapPointsX: t -> string or_null -> unit [@@js.set "msScrollSnapPointsX"]
    val get_msScrollSnapPointsY: t -> string or_null [@@js.get "msScrollSnapPointsY"]
    val set_msScrollSnapPointsY: t -> string or_null -> unit [@@js.set "msScrollSnapPointsY"]
    val get_msScrollSnapType: t -> string or_null [@@js.get "msScrollSnapType"]
    val set_msScrollSnapType: t -> string or_null -> unit [@@js.set "msScrollSnapType"]
    val get_msScrollSnapX: t -> string or_null [@@js.get "msScrollSnapX"]
    val set_msScrollSnapX: t -> string or_null -> unit [@@js.set "msScrollSnapX"]
    val get_msScrollSnapY: t -> string or_null [@@js.get "msScrollSnapY"]
    val set_msScrollSnapY: t -> string or_null -> unit [@@js.set "msScrollSnapY"]
    val get_msScrollTranslation: t -> string or_null [@@js.get "msScrollTranslation"]
    val set_msScrollTranslation: t -> string or_null -> unit [@@js.set "msScrollTranslation"]
    val get_msTextCombineHorizontal: t -> string or_null [@@js.get "msTextCombineHorizontal"]
    val set_msTextCombineHorizontal: t -> string or_null -> unit [@@js.set "msTextCombineHorizontal"]
    val get_msTextSizeAdjust: t -> any [@@js.get "msTextSizeAdjust"]
    val set_msTextSizeAdjust: t -> any -> unit [@@js.set "msTextSizeAdjust"]
    val get_msTouchAction: t -> string or_null [@@js.get "msTouchAction"]
    val set_msTouchAction: t -> string or_null -> unit [@@js.set "msTouchAction"]
    val get_msTouchSelect: t -> string or_null [@@js.get "msTouchSelect"]
    val set_msTouchSelect: t -> string or_null -> unit [@@js.set "msTouchSelect"]
    val get_msUserSelect: t -> string or_null [@@js.get "msUserSelect"]
    val set_msUserSelect: t -> string or_null -> unit [@@js.set "msUserSelect"]
    val get_msWrapFlow: t -> string [@@js.get "msWrapFlow"]
    val set_msWrapFlow: t -> string -> unit [@@js.set "msWrapFlow"]
    val get_msWrapMargin: t -> any [@@js.get "msWrapMargin"]
    val set_msWrapMargin: t -> any -> unit [@@js.set "msWrapMargin"]
    val get_msWrapThrough: t -> string [@@js.get "msWrapThrough"]
    val set_msWrapThrough: t -> string -> unit [@@js.set "msWrapThrough"]
    val get_objectFit: t -> string [@@js.get "objectFit"]
    val set_objectFit: t -> string -> unit [@@js.set "objectFit"]
    val get_objectPosition: t -> string [@@js.get "objectPosition"]
    val set_objectPosition: t -> string -> unit [@@js.set "objectPosition"]
    val get_opacity: t -> string [@@js.get "opacity"]
    val set_opacity: t -> string -> unit [@@js.set "opacity"]
    val get_order: t -> string [@@js.get "order"]
    val set_order: t -> string -> unit [@@js.set "order"]
    val get_orphans: t -> string [@@js.get "orphans"]
    val set_orphans: t -> string -> unit [@@js.set "orphans"]
    val get_outline: t -> string [@@js.get "outline"]
    val set_outline: t -> string -> unit [@@js.set "outline"]
    val get_outlineColor: t -> string [@@js.get "outlineColor"]
    val set_outlineColor: t -> string -> unit [@@js.set "outlineColor"]
    val get_outlineOffset: t -> string [@@js.get "outlineOffset"]
    val set_outlineOffset: t -> string -> unit [@@js.set "outlineOffset"]
    val get_outlineStyle: t -> string [@@js.get "outlineStyle"]
    val set_outlineStyle: t -> string -> unit [@@js.set "outlineStyle"]
    val get_outlineWidth: t -> string [@@js.get "outlineWidth"]
    val set_outlineWidth: t -> string -> unit [@@js.set "outlineWidth"]
    val get_overflow: t -> string [@@js.get "overflow"]
    val set_overflow: t -> string -> unit [@@js.set "overflow"]
    val get_overflowAnchor: t -> string [@@js.get "overflowAnchor"]
    val set_overflowAnchor: t -> string -> unit [@@js.set "overflowAnchor"]
    val get_overflowWrap: t -> string [@@js.get "overflowWrap"]
    val set_overflowWrap: t -> string -> unit [@@js.set "overflowWrap"]
    val get_overflowX: t -> string [@@js.get "overflowX"]
    val set_overflowX: t -> string -> unit [@@js.set "overflowX"]
    val get_overflowY: t -> string [@@js.get "overflowY"]
    val set_overflowY: t -> string -> unit [@@js.set "overflowY"]
    val get_padding: t -> string [@@js.get "padding"]
    val set_padding: t -> string -> unit [@@js.set "padding"]
    val get_paddingBlockEnd: t -> string [@@js.get "paddingBlockEnd"]
    val set_paddingBlockEnd: t -> string -> unit [@@js.set "paddingBlockEnd"]
    val get_paddingBlockStart: t -> string [@@js.get "paddingBlockStart"]
    val set_paddingBlockStart: t -> string -> unit [@@js.set "paddingBlockStart"]
    val get_paddingBottom: t -> string [@@js.get "paddingBottom"]
    val set_paddingBottom: t -> string -> unit [@@js.set "paddingBottom"]
    val get_paddingInlineEnd: t -> string [@@js.get "paddingInlineEnd"]
    val set_paddingInlineEnd: t -> string -> unit [@@js.set "paddingInlineEnd"]
    val get_paddingInlineStart: t -> string [@@js.get "paddingInlineStart"]
    val set_paddingInlineStart: t -> string -> unit [@@js.set "paddingInlineStart"]
    val get_paddingLeft: t -> string [@@js.get "paddingLeft"]
    val set_paddingLeft: t -> string -> unit [@@js.set "paddingLeft"]
    val get_paddingRight: t -> string [@@js.get "paddingRight"]
    val set_paddingRight: t -> string -> unit [@@js.set "paddingRight"]
    val get_paddingTop: t -> string [@@js.get "paddingTop"]
    val set_paddingTop: t -> string -> unit [@@js.set "paddingTop"]
    val get_pageBreakAfter: t -> string [@@js.get "pageBreakAfter"]
    val set_pageBreakAfter: t -> string -> unit [@@js.set "pageBreakAfter"]
    val get_pageBreakBefore: t -> string [@@js.get "pageBreakBefore"]
    val set_pageBreakBefore: t -> string -> unit [@@js.set "pageBreakBefore"]
    val get_pageBreakInside: t -> string [@@js.get "pageBreakInside"]
    val set_pageBreakInside: t -> string -> unit [@@js.set "pageBreakInside"]
    val get_paintOrder: t -> string [@@js.get "paintOrder"]
    val set_paintOrder: t -> string -> unit [@@js.set "paintOrder"]
    val get_parentRule: t -> _CSSRule [@@js.get "parentRule"]
    val get_penAction: t -> string or_null [@@js.get "penAction"]
    val set_penAction: t -> string or_null -> unit [@@js.set "penAction"]
    val get_perspective: t -> string [@@js.get "perspective"]
    val set_perspective: t -> string -> unit [@@js.set "perspective"]
    val get_perspectiveOrigin: t -> string [@@js.get "perspectiveOrigin"]
    val set_perspectiveOrigin: t -> string -> unit [@@js.set "perspectiveOrigin"]
    val get_placeContent: t -> string [@@js.get "placeContent"]
    val set_placeContent: t -> string -> unit [@@js.set "placeContent"]
    val get_placeItems: t -> string [@@js.get "placeItems"]
    val set_placeItems: t -> string -> unit [@@js.set "placeItems"]
    val get_placeSelf: t -> string [@@js.get "placeSelf"]
    val set_placeSelf: t -> string -> unit [@@js.set "placeSelf"]
    val get_pointerEvents: t -> string or_null [@@js.get "pointerEvents"]
    val set_pointerEvents: t -> string or_null -> unit [@@js.set "pointerEvents"]
    val get_position: t -> string [@@js.get "position"]
    val set_position: t -> string -> unit [@@js.set "position"]
    val get_quotes: t -> string [@@js.get "quotes"]
    val set_quotes: t -> string -> unit [@@js.set "quotes"]
    val get_resize: t -> string [@@js.get "resize"]
    val set_resize: t -> string -> unit [@@js.set "resize"]
    val get_right: t -> string [@@js.get "right"]
    val set_right: t -> string -> unit [@@js.set "right"]
    val get_rotate: t -> string [@@js.get "rotate"]
    val set_rotate: t -> string -> unit [@@js.set "rotate"]
    val get_rowGap: t -> string [@@js.get "rowGap"]
    val set_rowGap: t -> string -> unit [@@js.set "rowGap"]
    val get_rubyAlign: t -> string [@@js.get "rubyAlign"]
    val set_rubyAlign: t -> string -> unit [@@js.set "rubyAlign"]
    val get_rubyOverhang: t -> string or_null [@@js.get "rubyOverhang"]
    val set_rubyOverhang: t -> string or_null -> unit [@@js.set "rubyOverhang"]
    val get_rubyPosition: t -> string [@@js.get "rubyPosition"]
    val set_rubyPosition: t -> string -> unit [@@js.set "rubyPosition"]
    val get_scale: t -> string [@@js.get "scale"]
    val set_scale: t -> string -> unit [@@js.set "scale"]
    val get_scrollBehavior: t -> string [@@js.get "scrollBehavior"]
    val set_scrollBehavior: t -> string -> unit [@@js.set "scrollBehavior"]
    val get_shapeRendering: t -> string [@@js.get "shapeRendering"]
    val set_shapeRendering: t -> string -> unit [@@js.set "shapeRendering"]
    val get_stopColor: t -> string [@@js.get "stopColor"]
    val set_stopColor: t -> string -> unit [@@js.set "stopColor"]
    val get_stopOpacity: t -> string [@@js.get "stopOpacity"]
    val set_stopOpacity: t -> string -> unit [@@js.set "stopOpacity"]
    val get_stroke: t -> string [@@js.get "stroke"]
    val set_stroke: t -> string -> unit [@@js.set "stroke"]
    val get_strokeDasharray: t -> string [@@js.get "strokeDasharray"]
    val set_strokeDasharray: t -> string -> unit [@@js.set "strokeDasharray"]
    val get_strokeDashoffset: t -> string [@@js.get "strokeDashoffset"]
    val set_strokeDashoffset: t -> string -> unit [@@js.set "strokeDashoffset"]
    val get_strokeLinecap: t -> string [@@js.get "strokeLinecap"]
    val set_strokeLinecap: t -> string -> unit [@@js.set "strokeLinecap"]
    val get_strokeLinejoin: t -> string [@@js.get "strokeLinejoin"]
    val set_strokeLinejoin: t -> string -> unit [@@js.set "strokeLinejoin"]
    val get_strokeMiterlimit: t -> string [@@js.get "strokeMiterlimit"]
    val set_strokeMiterlimit: t -> string -> unit [@@js.set "strokeMiterlimit"]
    val get_strokeOpacity: t -> string [@@js.get "strokeOpacity"]
    val set_strokeOpacity: t -> string -> unit [@@js.set "strokeOpacity"]
    val get_strokeWidth: t -> string [@@js.get "strokeWidth"]
    val set_strokeWidth: t -> string -> unit [@@js.set "strokeWidth"]
    val get_tabSize: t -> string [@@js.get "tabSize"]
    val set_tabSize: t -> string -> unit [@@js.set "tabSize"]
    val get_tableLayout: t -> string [@@js.get "tableLayout"]
    val set_tableLayout: t -> string -> unit [@@js.set "tableLayout"]
    val get_textAlign: t -> string [@@js.get "textAlign"]
    val set_textAlign: t -> string -> unit [@@js.set "textAlign"]
    val get_textAlignLast: t -> string [@@js.get "textAlignLast"]
    val set_textAlignLast: t -> string -> unit [@@js.set "textAlignLast"]
    val get_textAnchor: t -> string [@@js.get "textAnchor"]
    val set_textAnchor: t -> string -> unit [@@js.set "textAnchor"]
    val get_textCombineUpright: t -> string [@@js.get "textCombineUpright"]
    val set_textCombineUpright: t -> string -> unit [@@js.set "textCombineUpright"]
    val get_textDecoration: t -> string [@@js.get "textDecoration"]
    val set_textDecoration: t -> string -> unit [@@js.set "textDecoration"]
    val get_textDecorationColor: t -> string [@@js.get "textDecorationColor"]
    val set_textDecorationColor: t -> string -> unit [@@js.set "textDecorationColor"]
    val get_textDecorationLine: t -> string [@@js.get "textDecorationLine"]
    val set_textDecorationLine: t -> string -> unit [@@js.set "textDecorationLine"]
    val get_textDecorationStyle: t -> string [@@js.get "textDecorationStyle"]
    val set_textDecorationStyle: t -> string -> unit [@@js.set "textDecorationStyle"]
    val get_textEmphasis: t -> string [@@js.get "textEmphasis"]
    val set_textEmphasis: t -> string -> unit [@@js.set "textEmphasis"]
    val get_textEmphasisColor: t -> string [@@js.get "textEmphasisColor"]
    val set_textEmphasisColor: t -> string -> unit [@@js.set "textEmphasisColor"]
    val get_textEmphasisPosition: t -> string [@@js.get "textEmphasisPosition"]
    val set_textEmphasisPosition: t -> string -> unit [@@js.set "textEmphasisPosition"]
    val get_textEmphasisStyle: t -> string [@@js.get "textEmphasisStyle"]
    val set_textEmphasisStyle: t -> string -> unit [@@js.set "textEmphasisStyle"]
    val get_textIndent: t -> string [@@js.get "textIndent"]
    val set_textIndent: t -> string -> unit [@@js.set "textIndent"]
    val get_textJustify: t -> string [@@js.get "textJustify"]
    val set_textJustify: t -> string -> unit [@@js.set "textJustify"]
    val get_textKashida: t -> string or_null [@@js.get "textKashida"]
    val set_textKashida: t -> string or_null -> unit [@@js.set "textKashida"]
    val get_textKashidaSpace: t -> string or_null [@@js.get "textKashidaSpace"]
    val set_textKashidaSpace: t -> string or_null -> unit [@@js.set "textKashidaSpace"]
    val get_textOrientation: t -> string [@@js.get "textOrientation"]
    val set_textOrientation: t -> string -> unit [@@js.set "textOrientation"]
    val get_textOverflow: t -> string [@@js.get "textOverflow"]
    val set_textOverflow: t -> string -> unit [@@js.set "textOverflow"]
    val get_textRendering: t -> string [@@js.get "textRendering"]
    val set_textRendering: t -> string -> unit [@@js.set "textRendering"]
    val get_textShadow: t -> string [@@js.get "textShadow"]
    val set_textShadow: t -> string -> unit [@@js.set "textShadow"]
    val get_textTransform: t -> string [@@js.get "textTransform"]
    val set_textTransform: t -> string -> unit [@@js.set "textTransform"]
    val get_textUnderlinePosition: t -> string [@@js.get "textUnderlinePosition"]
    val set_textUnderlinePosition: t -> string -> unit [@@js.set "textUnderlinePosition"]
    val get_top: t -> string [@@js.get "top"]
    val set_top: t -> string -> unit [@@js.set "top"]
    val get_touchAction: t -> string [@@js.get "touchAction"]
    val set_touchAction: t -> string -> unit [@@js.set "touchAction"]
    val get_transform: t -> string [@@js.get "transform"]
    val set_transform: t -> string -> unit [@@js.set "transform"]
    val get_transformBox: t -> string [@@js.get "transformBox"]
    val set_transformBox: t -> string -> unit [@@js.set "transformBox"]
    val get_transformOrigin: t -> string [@@js.get "transformOrigin"]
    val set_transformOrigin: t -> string -> unit [@@js.set "transformOrigin"]
    val get_transformStyle: t -> string [@@js.get "transformStyle"]
    val set_transformStyle: t -> string -> unit [@@js.set "transformStyle"]
    val get_transition: t -> string [@@js.get "transition"]
    val set_transition: t -> string -> unit [@@js.set "transition"]
    val get_transitionDelay: t -> string [@@js.get "transitionDelay"]
    val set_transitionDelay: t -> string -> unit [@@js.set "transitionDelay"]
    val get_transitionDuration: t -> string [@@js.get "transitionDuration"]
    val set_transitionDuration: t -> string -> unit [@@js.set "transitionDuration"]
    val get_transitionProperty: t -> string [@@js.get "transitionProperty"]
    val set_transitionProperty: t -> string -> unit [@@js.set "transitionProperty"]
    val get_transitionTimingFunction: t -> string [@@js.get "transitionTimingFunction"]
    val set_transitionTimingFunction: t -> string -> unit [@@js.set "transitionTimingFunction"]
    val get_translate: t -> string [@@js.get "translate"]
    val set_translate: t -> string -> unit [@@js.set "translate"]
    val get_unicodeBidi: t -> string [@@js.get "unicodeBidi"]
    val set_unicodeBidi: t -> string -> unit [@@js.set "unicodeBidi"]
    val get_userSelect: t -> string [@@js.get "userSelect"]
    val set_userSelect: t -> string -> unit [@@js.set "userSelect"]
    val get_verticalAlign: t -> string [@@js.get "verticalAlign"]
    val set_verticalAlign: t -> string -> unit [@@js.set "verticalAlign"]
    val get_visibility: t -> string [@@js.get "visibility"]
    val set_visibility: t -> string -> unit [@@js.set "visibility"]
    val get_webkitAlignContent: t -> string [@@js.get "webkitAlignContent"]
    val set_webkitAlignContent: t -> string -> unit [@@js.set "webkitAlignContent"]
    val get_webkitAlignItems: t -> string [@@js.get "webkitAlignItems"]
    val set_webkitAlignItems: t -> string -> unit [@@js.set "webkitAlignItems"]
    val get_webkitAlignSelf: t -> string [@@js.get "webkitAlignSelf"]
    val set_webkitAlignSelf: t -> string -> unit [@@js.set "webkitAlignSelf"]
    val get_webkitAnimation: t -> string [@@js.get "webkitAnimation"]
    val set_webkitAnimation: t -> string -> unit [@@js.set "webkitAnimation"]
    val get_webkitAnimationDelay: t -> string [@@js.get "webkitAnimationDelay"]
    val set_webkitAnimationDelay: t -> string -> unit [@@js.set "webkitAnimationDelay"]
    val get_webkitAnimationDirection: t -> string [@@js.get "webkitAnimationDirection"]
    val set_webkitAnimationDirection: t -> string -> unit [@@js.set "webkitAnimationDirection"]
    val get_webkitAnimationDuration: t -> string [@@js.get "webkitAnimationDuration"]
    val set_webkitAnimationDuration: t -> string -> unit [@@js.set "webkitAnimationDuration"]
    val get_webkitAnimationFillMode: t -> string [@@js.get "webkitAnimationFillMode"]
    val set_webkitAnimationFillMode: t -> string -> unit [@@js.set "webkitAnimationFillMode"]
    val get_webkitAnimationIterationCount: t -> string [@@js.get "webkitAnimationIterationCount"]
    val set_webkitAnimationIterationCount: t -> string -> unit [@@js.set "webkitAnimationIterationCount"]
    val get_webkitAnimationName: t -> string [@@js.get "webkitAnimationName"]
    val set_webkitAnimationName: t -> string -> unit [@@js.set "webkitAnimationName"]
    val get_webkitAnimationPlayState: t -> string [@@js.get "webkitAnimationPlayState"]
    val set_webkitAnimationPlayState: t -> string -> unit [@@js.set "webkitAnimationPlayState"]
    val get_webkitAnimationTimingFunction: t -> string [@@js.get "webkitAnimationTimingFunction"]
    val set_webkitAnimationTimingFunction: t -> string -> unit [@@js.set "webkitAnimationTimingFunction"]
    val get_webkitAppearance: t -> string [@@js.get "webkitAppearance"]
    val set_webkitAppearance: t -> string -> unit [@@js.set "webkitAppearance"]
    val get_webkitBackfaceVisibility: t -> string [@@js.get "webkitBackfaceVisibility"]
    val set_webkitBackfaceVisibility: t -> string -> unit [@@js.set "webkitBackfaceVisibility"]
    val get_webkitBackgroundClip: t -> string [@@js.get "webkitBackgroundClip"]
    val set_webkitBackgroundClip: t -> string -> unit [@@js.set "webkitBackgroundClip"]
    val get_webkitBackgroundOrigin: t -> string [@@js.get "webkitBackgroundOrigin"]
    val set_webkitBackgroundOrigin: t -> string -> unit [@@js.set "webkitBackgroundOrigin"]
    val get_webkitBackgroundSize: t -> string [@@js.get "webkitBackgroundSize"]
    val set_webkitBackgroundSize: t -> string -> unit [@@js.set "webkitBackgroundSize"]
    val get_webkitBorderBottomLeftRadius: t -> string [@@js.get "webkitBorderBottomLeftRadius"]
    val set_webkitBorderBottomLeftRadius: t -> string -> unit [@@js.set "webkitBorderBottomLeftRadius"]
    val get_webkitBorderBottomRightRadius: t -> string [@@js.get "webkitBorderBottomRightRadius"]
    val set_webkitBorderBottomRightRadius: t -> string -> unit [@@js.set "webkitBorderBottomRightRadius"]
    val get_webkitBorderImage: t -> string or_null [@@js.get "webkitBorderImage"]
    val set_webkitBorderImage: t -> string or_null -> unit [@@js.set "webkitBorderImage"]
    val get_webkitBorderRadius: t -> string [@@js.get "webkitBorderRadius"]
    val set_webkitBorderRadius: t -> string -> unit [@@js.set "webkitBorderRadius"]
    val get_webkitBorderTopLeftRadius: t -> string [@@js.get "webkitBorderTopLeftRadius"]
    val set_webkitBorderTopLeftRadius: t -> string -> unit [@@js.set "webkitBorderTopLeftRadius"]
    val get_webkitBorderTopRightRadius: t -> string [@@js.get "webkitBorderTopRightRadius"]
    val set_webkitBorderTopRightRadius: t -> string -> unit [@@js.set "webkitBorderTopRightRadius"]
    val get_webkitBoxAlign: t -> string [@@js.get "webkitBoxAlign"]
    val set_webkitBoxAlign: t -> string -> unit [@@js.set "webkitBoxAlign"]
    val get_webkitBoxDirection: t -> string or_null [@@js.get "webkitBoxDirection"]
    val set_webkitBoxDirection: t -> string or_null -> unit [@@js.set "webkitBoxDirection"]
    val get_webkitBoxFlex: t -> string [@@js.get "webkitBoxFlex"]
    val set_webkitBoxFlex: t -> string -> unit [@@js.set "webkitBoxFlex"]
    val get_webkitBoxOrdinalGroup: t -> string [@@js.get "webkitBoxOrdinalGroup"]
    val set_webkitBoxOrdinalGroup: t -> string -> unit [@@js.set "webkitBoxOrdinalGroup"]
    val get_webkitBoxOrient: t -> string [@@js.get "webkitBoxOrient"]
    val set_webkitBoxOrient: t -> string -> unit [@@js.set "webkitBoxOrient"]
    val get_webkitBoxPack: t -> string [@@js.get "webkitBoxPack"]
    val set_webkitBoxPack: t -> string -> unit [@@js.set "webkitBoxPack"]
    val get_webkitBoxShadow: t -> string [@@js.get "webkitBoxShadow"]
    val set_webkitBoxShadow: t -> string -> unit [@@js.set "webkitBoxShadow"]
    val get_webkitBoxSizing: t -> string [@@js.get "webkitBoxSizing"]
    val set_webkitBoxSizing: t -> string -> unit [@@js.set "webkitBoxSizing"]
    val get_webkitColumnBreakAfter: t -> string or_null [@@js.get "webkitColumnBreakAfter"]
    val set_webkitColumnBreakAfter: t -> string or_null -> unit [@@js.set "webkitColumnBreakAfter"]
    val get_webkitColumnBreakBefore: t -> string or_null [@@js.get "webkitColumnBreakBefore"]
    val set_webkitColumnBreakBefore: t -> string or_null -> unit [@@js.set "webkitColumnBreakBefore"]
    val get_webkitColumnBreakInside: t -> string or_null [@@js.get "webkitColumnBreakInside"]
    val set_webkitColumnBreakInside: t -> string or_null -> unit [@@js.set "webkitColumnBreakInside"]
    val get_webkitColumnCount: t -> any [@@js.get "webkitColumnCount"]
    val set_webkitColumnCount: t -> any -> unit [@@js.set "webkitColumnCount"]
    val get_webkitColumnGap: t -> any [@@js.get "webkitColumnGap"]
    val set_webkitColumnGap: t -> any -> unit [@@js.set "webkitColumnGap"]
    val get_webkitColumnRule: t -> string or_null [@@js.get "webkitColumnRule"]
    val set_webkitColumnRule: t -> string or_null -> unit [@@js.set "webkitColumnRule"]
    val get_webkitColumnRuleColor: t -> any [@@js.get "webkitColumnRuleColor"]
    val set_webkitColumnRuleColor: t -> any -> unit [@@js.set "webkitColumnRuleColor"]
    val get_webkitColumnRuleStyle: t -> string or_null [@@js.get "webkitColumnRuleStyle"]
    val set_webkitColumnRuleStyle: t -> string or_null -> unit [@@js.set "webkitColumnRuleStyle"]
    val get_webkitColumnRuleWidth: t -> any [@@js.get "webkitColumnRuleWidth"]
    val set_webkitColumnRuleWidth: t -> any -> unit [@@js.set "webkitColumnRuleWidth"]
    val get_webkitColumnSpan: t -> string or_null [@@js.get "webkitColumnSpan"]
    val set_webkitColumnSpan: t -> string or_null -> unit [@@js.set "webkitColumnSpan"]
    val get_webkitColumnWidth: t -> any [@@js.get "webkitColumnWidth"]
    val set_webkitColumnWidth: t -> any -> unit [@@js.set "webkitColumnWidth"]
    val get_webkitColumns: t -> string or_null [@@js.get "webkitColumns"]
    val set_webkitColumns: t -> string or_null -> unit [@@js.set "webkitColumns"]
    val get_webkitFilter: t -> string [@@js.get "webkitFilter"]
    val set_webkitFilter: t -> string -> unit [@@js.set "webkitFilter"]
    val get_webkitFlex: t -> string [@@js.get "webkitFlex"]
    val set_webkitFlex: t -> string -> unit [@@js.set "webkitFlex"]
    val get_webkitFlexBasis: t -> string [@@js.get "webkitFlexBasis"]
    val set_webkitFlexBasis: t -> string -> unit [@@js.set "webkitFlexBasis"]
    val get_webkitFlexDirection: t -> string [@@js.get "webkitFlexDirection"]
    val set_webkitFlexDirection: t -> string -> unit [@@js.set "webkitFlexDirection"]
    val get_webkitFlexFlow: t -> string [@@js.get "webkitFlexFlow"]
    val set_webkitFlexFlow: t -> string -> unit [@@js.set "webkitFlexFlow"]
    val get_webkitFlexGrow: t -> string [@@js.get "webkitFlexGrow"]
    val set_webkitFlexGrow: t -> string -> unit [@@js.set "webkitFlexGrow"]
    val get_webkitFlexShrink: t -> string [@@js.get "webkitFlexShrink"]
    val set_webkitFlexShrink: t -> string -> unit [@@js.set "webkitFlexShrink"]
    val get_webkitFlexWrap: t -> string [@@js.get "webkitFlexWrap"]
    val set_webkitFlexWrap: t -> string -> unit [@@js.set "webkitFlexWrap"]
    val get_webkitJustifyContent: t -> string [@@js.get "webkitJustifyContent"]
    val set_webkitJustifyContent: t -> string -> unit [@@js.set "webkitJustifyContent"]
    val get_webkitLineClamp: t -> string [@@js.get "webkitLineClamp"]
    val set_webkitLineClamp: t -> string -> unit [@@js.set "webkitLineClamp"]
    val get_webkitMask: t -> string [@@js.get "webkitMask"]
    val set_webkitMask: t -> string -> unit [@@js.set "webkitMask"]
    val get_webkitMaskBoxImage: t -> string [@@js.get "webkitMaskBoxImage"]
    val set_webkitMaskBoxImage: t -> string -> unit [@@js.set "webkitMaskBoxImage"]
    val get_webkitMaskBoxImageOutset: t -> string [@@js.get "webkitMaskBoxImageOutset"]
    val set_webkitMaskBoxImageOutset: t -> string -> unit [@@js.set "webkitMaskBoxImageOutset"]
    val get_webkitMaskBoxImageRepeat: t -> string [@@js.get "webkitMaskBoxImageRepeat"]
    val set_webkitMaskBoxImageRepeat: t -> string -> unit [@@js.set "webkitMaskBoxImageRepeat"]
    val get_webkitMaskBoxImageSlice: t -> string [@@js.get "webkitMaskBoxImageSlice"]
    val set_webkitMaskBoxImageSlice: t -> string -> unit [@@js.set "webkitMaskBoxImageSlice"]
    val get_webkitMaskBoxImageSource: t -> string [@@js.get "webkitMaskBoxImageSource"]
    val set_webkitMaskBoxImageSource: t -> string -> unit [@@js.set "webkitMaskBoxImageSource"]
    val get_webkitMaskBoxImageWidth: t -> string [@@js.get "webkitMaskBoxImageWidth"]
    val set_webkitMaskBoxImageWidth: t -> string -> unit [@@js.set "webkitMaskBoxImageWidth"]
    val get_webkitMaskClip: t -> string [@@js.get "webkitMaskClip"]
    val set_webkitMaskClip: t -> string -> unit [@@js.set "webkitMaskClip"]
    val get_webkitMaskComposite: t -> string [@@js.get "webkitMaskComposite"]
    val set_webkitMaskComposite: t -> string -> unit [@@js.set "webkitMaskComposite"]
    val get_webkitMaskImage: t -> string [@@js.get "webkitMaskImage"]
    val set_webkitMaskImage: t -> string -> unit [@@js.set "webkitMaskImage"]
    val get_webkitMaskOrigin: t -> string [@@js.get "webkitMaskOrigin"]
    val set_webkitMaskOrigin: t -> string -> unit [@@js.set "webkitMaskOrigin"]
    val get_webkitMaskPosition: t -> string [@@js.get "webkitMaskPosition"]
    val set_webkitMaskPosition: t -> string -> unit [@@js.set "webkitMaskPosition"]
    val get_webkitMaskRepeat: t -> string [@@js.get "webkitMaskRepeat"]
    val set_webkitMaskRepeat: t -> string -> unit [@@js.set "webkitMaskRepeat"]
    val get_webkitMaskSize: t -> string [@@js.get "webkitMaskSize"]
    val set_webkitMaskSize: t -> string -> unit [@@js.set "webkitMaskSize"]
    val get_webkitOrder: t -> string [@@js.get "webkitOrder"]
    val set_webkitOrder: t -> string -> unit [@@js.set "webkitOrder"]
    val get_webkitPerspective: t -> string [@@js.get "webkitPerspective"]
    val set_webkitPerspective: t -> string -> unit [@@js.set "webkitPerspective"]
    val get_webkitPerspectiveOrigin: t -> string [@@js.get "webkitPerspectiveOrigin"]
    val set_webkitPerspectiveOrigin: t -> string -> unit [@@js.set "webkitPerspectiveOrigin"]
    val get_webkitTapHighlightColor: t -> string or_null [@@js.get "webkitTapHighlightColor"]
    val set_webkitTapHighlightColor: t -> string or_null -> unit [@@js.set "webkitTapHighlightColor"]
    val get_webkitTextFillColor: t -> string [@@js.get "webkitTextFillColor"]
    val set_webkitTextFillColor: t -> string -> unit [@@js.set "webkitTextFillColor"]
    val get_webkitTextSizeAdjust: t -> string [@@js.get "webkitTextSizeAdjust"]
    val set_webkitTextSizeAdjust: t -> string -> unit [@@js.set "webkitTextSizeAdjust"]
    val get_webkitTextStroke: t -> string [@@js.get "webkitTextStroke"]
    val set_webkitTextStroke: t -> string -> unit [@@js.set "webkitTextStroke"]
    val get_webkitTextStrokeColor: t -> string [@@js.get "webkitTextStrokeColor"]
    val set_webkitTextStrokeColor: t -> string -> unit [@@js.set "webkitTextStrokeColor"]
    val get_webkitTextStrokeWidth: t -> string [@@js.get "webkitTextStrokeWidth"]
    val set_webkitTextStrokeWidth: t -> string -> unit [@@js.set "webkitTextStrokeWidth"]
    val get_webkitTransform: t -> string [@@js.get "webkitTransform"]
    val set_webkitTransform: t -> string -> unit [@@js.set "webkitTransform"]
    val get_webkitTransformOrigin: t -> string [@@js.get "webkitTransformOrigin"]
    val set_webkitTransformOrigin: t -> string -> unit [@@js.set "webkitTransformOrigin"]
    val get_webkitTransformStyle: t -> string [@@js.get "webkitTransformStyle"]
    val set_webkitTransformStyle: t -> string -> unit [@@js.set "webkitTransformStyle"]
    val get_webkitTransition: t -> string [@@js.get "webkitTransition"]
    val set_webkitTransition: t -> string -> unit [@@js.set "webkitTransition"]
    val get_webkitTransitionDelay: t -> string [@@js.get "webkitTransitionDelay"]
    val set_webkitTransitionDelay: t -> string -> unit [@@js.set "webkitTransitionDelay"]
    val get_webkitTransitionDuration: t -> string [@@js.get "webkitTransitionDuration"]
    val set_webkitTransitionDuration: t -> string -> unit [@@js.set "webkitTransitionDuration"]
    val get_webkitTransitionProperty: t -> string [@@js.get "webkitTransitionProperty"]
    val set_webkitTransitionProperty: t -> string -> unit [@@js.set "webkitTransitionProperty"]
    val get_webkitTransitionTimingFunction: t -> string [@@js.get "webkitTransitionTimingFunction"]
    val set_webkitTransitionTimingFunction: t -> string -> unit [@@js.set "webkitTransitionTimingFunction"]
    val get_webkitUserModify: t -> string or_null [@@js.get "webkitUserModify"]
    val set_webkitUserModify: t -> string or_null -> unit [@@js.set "webkitUserModify"]
    val get_webkitUserSelect: t -> string or_null [@@js.get "webkitUserSelect"]
    val set_webkitUserSelect: t -> string or_null -> unit [@@js.set "webkitUserSelect"]
    val get_webkitWritingMode: t -> string or_null [@@js.get "webkitWritingMode"]
    val set_webkitWritingMode: t -> string or_null -> unit [@@js.set "webkitWritingMode"]
    val get_whiteSpace: t -> string [@@js.get "whiteSpace"]
    val set_whiteSpace: t -> string -> unit [@@js.set "whiteSpace"]
    val get_widows: t -> string [@@js.get "widows"]
    val set_widows: t -> string -> unit [@@js.set "widows"]
    val get_width: t -> string [@@js.get "width"]
    val set_width: t -> string -> unit [@@js.set "width"]
    val get_willChange: t -> string [@@js.get "willChange"]
    val set_willChange: t -> string -> unit [@@js.set "willChange"]
    val get_wordBreak: t -> string [@@js.get "wordBreak"]
    val set_wordBreak: t -> string -> unit [@@js.set "wordBreak"]
    val get_wordSpacing: t -> string [@@js.get "wordSpacing"]
    val set_wordSpacing: t -> string -> unit [@@js.set "wordSpacing"]
    val get_wordWrap: t -> string [@@js.get "wordWrap"]
    val set_wordWrap: t -> string -> unit [@@js.set "wordWrap"]
    val get_writingMode: t -> string [@@js.get "writingMode"]
    val set_writingMode: t -> string -> unit [@@js.set "writingMode"]
    val get_zIndex: t -> string [@@js.get "zIndex"]
    val set_zIndex: t -> string -> unit [@@js.set "zIndex"]
    val get_zoom: t -> string or_null [@@js.get "zoom"]
    val set_zoom: t -> string or_null -> unit [@@js.set "zoom"]
    val getPropertyPriority: t -> propertyName:string -> string [@@js.call "getPropertyPriority"]
    val getPropertyValue: t -> propertyName:string -> string [@@js.call "getPropertyValue"]
    val item: t -> index:float -> string [@@js.call "item"]
    val removeProperty: t -> propertyName:string -> string [@@js.call "removeProperty"]
    val setProperty: t -> propertyName:string -> value:string or_null -> ?priority:string or_null -> unit -> unit [@@js.call "setProperty"]
    val get: t -> float -> string [@@js.index_get]
    val set: t -> float -> string -> unit [@@js.index_set]
  end
  val cSSStyleDeclaration: anonymous_interface_53 [@@js.global "CSSStyleDeclaration"]
  module[@js.scope "CSSStyleRule"] CSSStyleRule : sig
    type t = _CSSStyleRule
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_selectorText: t -> string [@@js.get "selectorText"]
    val set_selectorText: t -> string -> unit [@@js.set "selectorText"]
    val get_style: t -> _CSSStyleDeclaration [@@js.get "style"]
    val cast: t -> _CSSRule [@@js.cast]
  end
  val cSSStyleRule: anonymous_interface_54 [@@js.global "CSSStyleRule"]
  module[@js.scope "CSSStyleSheet"] CSSStyleSheet : sig
    type t = _CSSStyleSheet
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_cssRules: t -> _CSSRuleList [@@js.get "cssRules"]
    val get_cssText: t -> string [@@js.get "cssText"]
    val set_cssText: t -> string -> unit [@@js.set "cssText"]
    val get_id: t -> string [@@js.get "id"]
    val get_imports: t -> _StyleSheetList [@@js.get "imports"]
    val get_isAlternate: t -> bool [@@js.get "isAlternate"]
    val get_isPrefAlternate: t -> bool [@@js.get "isPrefAlternate"]
    val get_ownerRule: t -> _CSSRule or_null [@@js.get "ownerRule"]
    val get_owningElement: t -> _Element [@@js.get "owningElement"]
    val get_pages: t -> any [@@js.get "pages"]
    val get_readOnly: t -> bool [@@js.get "readOnly"]
    val get_rules: t -> _CSSRuleList [@@js.get "rules"]
    val addImport: t -> bstrURL:string -> ?lIndex:float -> unit -> float [@@js.call "addImport"]
    val addPageRule: t -> bstrSelector:string -> bstrStyle:string -> ?lIndex:float -> unit -> float [@@js.call "addPageRule"]
    val addRule: t -> bstrSelector:string -> ?bstrStyle:string -> ?lIndex:float -> unit -> float [@@js.call "addRule"]
    val deleteRule: t -> ?index:float -> unit -> unit [@@js.call "deleteRule"]
    val insertRule: t -> rule:string -> ?index:float -> unit -> float [@@js.call "insertRule"]
    val removeImport: t -> lIndex:float -> unit [@@js.call "removeImport"]
    val removeRule: t -> lIndex:float -> unit [@@js.call "removeRule"]
    val cast: t -> _StyleSheet [@@js.cast]
  end
  val cSSStyleSheet: anonymous_interface_55 [@@js.global "CSSStyleSheet"]
  module[@js.scope "CSSSupportsRule"] CSSSupportsRule : sig
    type t = _CSSSupportsRule
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val cast: t -> _CSSConditionRule [@@js.cast]
  end
  val cSSSupportsRule: anonymous_interface_56 [@@js.global "CSSSupportsRule"]
  module[@js.scope "Cache"] Cache : sig
    type t = _Cache
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val add: t -> request:_RequestInfo -> unit Promise.t_1 [@@js.call "add"]
    val addAll: t -> requests:_RequestInfo list -> unit Promise.t_1 [@@js.call "addAll"]
    val delete: t -> request:_RequestInfo -> ?options:_CacheQueryOptions -> unit -> bool Promise.t_1 [@@js.call "delete"]
    val keys: t -> ?request:_RequestInfo -> ?options:_CacheQueryOptions -> unit -> _Request list Promise.t_1 [@@js.call "keys"]
    val match_: t -> request:_RequestInfo -> ?options:_CacheQueryOptions -> unit -> _Response or_undefined Promise.t_1 [@@js.call "match"]
    val matchAll: t -> ?request:_RequestInfo -> ?options:_CacheQueryOptions -> unit -> _Response list Promise.t_1 [@@js.call "matchAll"]
    val put: t -> request:_RequestInfo -> response:_Response -> unit Promise.t_1 [@@js.call "put"]
  end
  val cache: anonymous_interface_57 [@@js.global "Cache"]
  module[@js.scope "CacheStorage"] CacheStorage : sig
    type t = _CacheStorage
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val delete: t -> cacheName:string -> bool Promise.t_1 [@@js.call "delete"]
    val has: t -> cacheName:string -> bool Promise.t_1 [@@js.call "has"]
    val keys: t -> string list Promise.t_1 [@@js.call "keys"]
    val match_: t -> request:_RequestInfo -> ?options:_MultiCacheQueryOptions -> unit -> _Response or_undefined Promise.t_1 [@@js.call "match"]
    val open_: t -> cacheName:string -> _Cache Promise.t_1 [@@js.call "open"]
  end
  val cacheStorage: anonymous_interface_58 [@@js.global "CacheStorage"]
  module[@js.scope "CanvasCompositing"] CanvasCompositing : sig
    type t = _CanvasCompositing
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_globalAlpha: t -> float [@@js.get "globalAlpha"]
    val set_globalAlpha: t -> float -> unit [@@js.set "globalAlpha"]
    val get_globalCompositeOperation: t -> string [@@js.get "globalCompositeOperation"]
    val set_globalCompositeOperation: t -> string -> unit [@@js.set "globalCompositeOperation"]
  end
  module[@js.scope "CanvasDrawImage"] CanvasDrawImage : sig
    type t = _CanvasDrawImage
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val drawImage: t -> image:_CanvasImageSource -> dx:float -> dy:float -> unit [@@js.call "drawImage"]
    val drawImage': t -> image:_CanvasImageSource -> dx:float -> dy:float -> dw:float -> dh:float -> unit [@@js.call "drawImage"]
    val drawImage'': t -> image:_CanvasImageSource -> sx:float -> sy:float -> sw:float -> sh:float -> dx:float -> dy:float -> dw:float -> dh:float -> unit [@@js.call "drawImage"]
  end
  module[@js.scope "CanvasDrawPath"] CanvasDrawPath : sig
    type t = _CanvasDrawPath
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val beginPath: t -> unit [@@js.call "beginPath"]
    val clip: t -> ?fillRule:_CanvasFillRule -> unit -> unit [@@js.call "clip"]
    val clip': t -> path:_Path2D -> ?fillRule:_CanvasFillRule -> unit -> unit [@@js.call "clip"]
    val fill: t -> ?fillRule:_CanvasFillRule -> unit -> unit [@@js.call "fill"]
    val fill': t -> path:_Path2D -> ?fillRule:_CanvasFillRule -> unit -> unit [@@js.call "fill"]
    val isPointInPath: t -> x:float -> y:float -> ?fillRule:_CanvasFillRule -> unit -> bool [@@js.call "isPointInPath"]
    val isPointInPath': t -> path:_Path2D -> x:float -> y:float -> ?fillRule:_CanvasFillRule -> unit -> bool [@@js.call "isPointInPath"]
    val isPointInStroke: t -> x:float -> y:float -> bool [@@js.call "isPointInStroke"]
    val isPointInStroke': t -> path:_Path2D -> x:float -> y:float -> bool [@@js.call "isPointInStroke"]
    val stroke: t -> unit [@@js.call "stroke"]
    val stroke': t -> path:_Path2D -> unit [@@js.call "stroke"]
  end
  module[@js.scope "CanvasFillStrokeStyles"] CanvasFillStrokeStyles : sig
    type t = _CanvasFillStrokeStyles
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_fillStyle: t -> (_CanvasGradient, _CanvasPattern) union2 or_string [@@js.get "fillStyle"]
    val set_fillStyle: t -> (_CanvasGradient, _CanvasPattern) union2 or_string -> unit [@@js.set "fillStyle"]
    val get_strokeStyle: t -> (_CanvasGradient, _CanvasPattern) union2 or_string [@@js.get "strokeStyle"]
    val set_strokeStyle: t -> (_CanvasGradient, _CanvasPattern) union2 or_string -> unit [@@js.set "strokeStyle"]
    val createLinearGradient: t -> x0:float -> y0:float -> x1:float -> y1:float -> _CanvasGradient [@@js.call "createLinearGradient"]
    val createPattern: t -> image:_CanvasImageSource -> repetition:string -> _CanvasPattern or_null [@@js.call "createPattern"]
    val createRadialGradient: t -> x0:float -> y0:float -> r0:float -> x1:float -> y1:float -> r1:float -> _CanvasGradient [@@js.call "createRadialGradient"]
  end
  module[@js.scope "CanvasFilters"] CanvasFilters : sig
    type t = _CanvasFilters
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_filter: t -> string [@@js.get "filter"]
    val set_filter: t -> string -> unit [@@js.set "filter"]
  end
  module[@js.scope "CanvasGradient"] CanvasGradient : sig
    type t = _CanvasGradient
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val addColorStop: t -> offset:float -> color:string -> unit [@@js.call "addColorStop"]
  end
  val canvasGradient: anonymous_interface_59 [@@js.global "CanvasGradient"]
  module[@js.scope "CanvasImageData"] CanvasImageData : sig
    type t = _CanvasImageData
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val createImageData: t -> sw:float -> sh:float -> _ImageData [@@js.call "createImageData"]
    val createImageData': t -> imagedata:_ImageData -> _ImageData [@@js.call "createImageData"]
    val getImageData: t -> sx:float -> sy:float -> sw:float -> sh:float -> _ImageData [@@js.call "getImageData"]
    val putImageData: t -> imagedata:_ImageData -> dx:float -> dy:float -> unit [@@js.call "putImageData"]
    val putImageData': t -> imagedata:_ImageData -> dx:float -> dy:float -> dirtyX:float -> dirtyY:float -> dirtyWidth:float -> dirtyHeight:float -> unit [@@js.call "putImageData"]
  end
  module[@js.scope "CanvasImageSmoothing"] CanvasImageSmoothing : sig
    type t = _CanvasImageSmoothing
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_imageSmoothingEnabled: t -> bool [@@js.get "imageSmoothingEnabled"]
    val set_imageSmoothingEnabled: t -> bool -> unit [@@js.set "imageSmoothingEnabled"]
    val get_imageSmoothingQuality: t -> _ImageSmoothingQuality [@@js.get "imageSmoothingQuality"]
    val set_imageSmoothingQuality: t -> _ImageSmoothingQuality -> unit [@@js.set "imageSmoothingQuality"]
  end
  module[@js.scope "CanvasPath"] CanvasPath : sig
    type t = _CanvasPath
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val arc: t -> x:float -> y:float -> radius:float -> startAngle:float -> endAngle:float -> ?anticlockwise:bool -> unit -> unit [@@js.call "arc"]
    val arcTo: t -> x1:float -> y1:float -> x2:float -> y2:float -> radius:float -> unit [@@js.call "arcTo"]
    val bezierCurveTo: t -> cp1x:float -> cp1y:float -> cp2x:float -> cp2y:float -> x:float -> y:float -> unit [@@js.call "bezierCurveTo"]
    val closePath: t -> unit [@@js.call "closePath"]
    val ellipse: t -> x:float -> y:float -> radiusX:float -> radiusY:float -> rotation:float -> startAngle:float -> endAngle:float -> ?anticlockwise:bool -> unit -> unit [@@js.call "ellipse"]
    val lineTo: t -> x:float -> y:float -> unit [@@js.call "lineTo"]
    val moveTo: t -> x:float -> y:float -> unit [@@js.call "moveTo"]
    val quadraticCurveTo: t -> cpx:float -> cpy:float -> x:float -> y:float -> unit [@@js.call "quadraticCurveTo"]
    val rect: t -> x:float -> y:float -> w:float -> h:float -> unit [@@js.call "rect"]
  end
  module[@js.scope "CanvasPathDrawingStyles"] CanvasPathDrawingStyles : sig
    type t = _CanvasPathDrawingStyles
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_lineCap: t -> _CanvasLineCap [@@js.get "lineCap"]
    val set_lineCap: t -> _CanvasLineCap -> unit [@@js.set "lineCap"]
    val get_lineDashOffset: t -> float [@@js.get "lineDashOffset"]
    val set_lineDashOffset: t -> float -> unit [@@js.set "lineDashOffset"]
    val get_lineJoin: t -> _CanvasLineJoin [@@js.get "lineJoin"]
    val set_lineJoin: t -> _CanvasLineJoin -> unit [@@js.set "lineJoin"]
    val get_lineWidth: t -> float [@@js.get "lineWidth"]
    val set_lineWidth: t -> float -> unit [@@js.set "lineWidth"]
    val get_miterLimit: t -> float [@@js.get "miterLimit"]
    val set_miterLimit: t -> float -> unit [@@js.set "miterLimit"]
    val getLineDash: t -> float list [@@js.call "getLineDash"]
    val setLineDash: t -> segments:float list -> unit [@@js.call "setLineDash"]
  end
  module[@js.scope "CanvasPattern"] CanvasPattern : sig
    type t = _CanvasPattern
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val setTransform: t -> ?transform:_DOMMatrix2DInit -> unit -> unit [@@js.call "setTransform"]
  end
  val canvasPattern: anonymous_interface_60 [@@js.global "CanvasPattern"]
  module[@js.scope "CanvasRect"] CanvasRect : sig
    type t = _CanvasRect
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val clearRect: t -> x:float -> y:float -> w:float -> h:float -> unit [@@js.call "clearRect"]
    val fillRect: t -> x:float -> y:float -> w:float -> h:float -> unit [@@js.call "fillRect"]
    val strokeRect: t -> x:float -> y:float -> w:float -> h:float -> unit [@@js.call "strokeRect"]
  end
  module[@js.scope "CanvasRenderingContext2D"] CanvasRenderingContext2D : sig
    type t = _CanvasRenderingContext2D
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_canvas: t -> _HTMLCanvasElement [@@js.get "canvas"]
    val cast: t -> _CanvasCompositing [@@js.cast]
    val cast': t -> _CanvasDrawImage [@@js.cast]
    val cast'': t -> _CanvasDrawPath [@@js.cast]
    val cast''': t -> _CanvasFillStrokeStyles [@@js.cast]
    val cast'''': t -> _CanvasFilters [@@js.cast]
    val cast''''': t -> _CanvasImageData [@@js.cast]
    val cast'''''': t -> _CanvasImageSmoothing [@@js.cast]
    val cast''''''': t -> _CanvasPath [@@js.cast]
    val cast'''''''': t -> _CanvasPathDrawingStyles [@@js.cast]
    val cast''''''''': t -> _CanvasRect [@@js.cast]
    val cast'''''''''': t -> _CanvasShadowStyles [@@js.cast]
    val cast''''''''''': t -> _CanvasState [@@js.cast]
    val cast'''''''''''': t -> _CanvasText [@@js.cast]
    val cast''''''''''''': t -> _CanvasTextDrawingStyles [@@js.cast]
    val cast'''''''''''''': t -> _CanvasTransform [@@js.cast]
    val cast''''''''''''''': t -> _CanvasUserInterface [@@js.cast]
  end
  val canvasRenderingContext2D: anonymous_interface_61 [@@js.global "CanvasRenderingContext2D"]
  module[@js.scope "CanvasShadowStyles"] CanvasShadowStyles : sig
    type t = _CanvasShadowStyles
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_shadowBlur: t -> float [@@js.get "shadowBlur"]
    val set_shadowBlur: t -> float -> unit [@@js.set "shadowBlur"]
    val get_shadowColor: t -> string [@@js.get "shadowColor"]
    val set_shadowColor: t -> string -> unit [@@js.set "shadowColor"]
    val get_shadowOffsetX: t -> float [@@js.get "shadowOffsetX"]
    val set_shadowOffsetX: t -> float -> unit [@@js.set "shadowOffsetX"]
    val get_shadowOffsetY: t -> float [@@js.get "shadowOffsetY"]
    val set_shadowOffsetY: t -> float -> unit [@@js.set "shadowOffsetY"]
  end
  module[@js.scope "CanvasState"] CanvasState : sig
    type t = _CanvasState
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val restore: t -> unit [@@js.call "restore"]
    val save: t -> unit [@@js.call "save"]
  end
  module[@js.scope "CanvasText"] CanvasText : sig
    type t = _CanvasText
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val fillText: t -> text:string -> x:float -> y:float -> ?maxWidth:float -> unit -> unit [@@js.call "fillText"]
    val measureText: t -> text:string -> _TextMetrics [@@js.call "measureText"]
    val strokeText: t -> text:string -> x:float -> y:float -> ?maxWidth:float -> unit -> unit [@@js.call "strokeText"]
  end
  module[@js.scope "CanvasTextDrawingStyles"] CanvasTextDrawingStyles : sig
    type t = _CanvasTextDrawingStyles
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_direction: t -> _CanvasDirection [@@js.get "direction"]
    val set_direction: t -> _CanvasDirection -> unit [@@js.set "direction"]
    val get_font: t -> string [@@js.get "font"]
    val set_font: t -> string -> unit [@@js.set "font"]
    val get_textAlign: t -> _CanvasTextAlign [@@js.get "textAlign"]
    val set_textAlign: t -> _CanvasTextAlign -> unit [@@js.set "textAlign"]
    val get_textBaseline: t -> _CanvasTextBaseline [@@js.get "textBaseline"]
    val set_textBaseline: t -> _CanvasTextBaseline -> unit [@@js.set "textBaseline"]
  end
  module[@js.scope "CanvasTransform"] CanvasTransform : sig
    type t = _CanvasTransform
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val getTransform: t -> _DOMMatrix [@@js.call "getTransform"]
    val resetTransform: t -> unit [@@js.call "resetTransform"]
    val rotate: t -> angle:float -> unit [@@js.call "rotate"]
    val scale: t -> x:float -> y:float -> unit [@@js.call "scale"]
    val setTransform: t -> a:float -> b:float -> c:float -> d:float -> e:float -> f:float -> unit [@@js.call "setTransform"]
    val setTransform': t -> ?transform:_DOMMatrix2DInit -> unit -> unit [@@js.call "setTransform"]
    val transform: t -> a:float -> b:float -> c:float -> d:float -> e:float -> f:float -> unit [@@js.call "transform"]
    val translate: t -> x:float -> y:float -> unit [@@js.call "translate"]
  end
  module[@js.scope "CanvasUserInterface"] CanvasUserInterface : sig
    type t = _CanvasUserInterface
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val drawFocusIfNeeded: t -> element:_Element -> unit [@@js.call "drawFocusIfNeeded"]
    val drawFocusIfNeeded': t -> path:_Path2D -> element:_Element -> unit [@@js.call "drawFocusIfNeeded"]
    val scrollPathIntoView: t -> unit [@@js.call "scrollPathIntoView"]
    val scrollPathIntoView': t -> path:_Path2D -> unit [@@js.call "scrollPathIntoView"]
  end
  module[@js.scope "CaretPosition"] CaretPosition : sig
    type t = _CaretPosition
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_offset: t -> float [@@js.get "offset"]
    val get_offsetNode: t -> _Node [@@js.get "offsetNode"]
    val getClientRect: t -> _DOMRect or_null [@@js.call "getClientRect"]
  end
  val caretPosition: anonymous_interface_62 [@@js.global "CaretPosition"]
  module[@js.scope "ChannelMergerNode"] ChannelMergerNode : sig
    type t = _ChannelMergerNode
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val cast: t -> _AudioNode [@@js.cast]
  end
  val channelMergerNode: anonymous_interface_63 [@@js.global "ChannelMergerNode"]
  module[@js.scope "ChannelSplitterNode"] ChannelSplitterNode : sig
    type t = _ChannelSplitterNode
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val cast: t -> _AudioNode [@@js.cast]
  end
  val channelSplitterNode: anonymous_interface_64 [@@js.global "ChannelSplitterNode"]
  module[@js.scope "CharacterData"] CharacterData : sig
    type t = _CharacterData
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_data: t -> string [@@js.get "data"]
    val set_data: t -> string -> unit [@@js.set "data"]
    val get_length: t -> float [@@js.get "length"]
    val appendData: t -> data:string -> unit [@@js.call "appendData"]
    val deleteData: t -> offset:float -> count:float -> unit [@@js.call "deleteData"]
    val insertData: t -> offset:float -> data:string -> unit [@@js.call "insertData"]
    val replaceData: t -> offset:float -> count:float -> data:string -> unit [@@js.call "replaceData"]
    val substringData: t -> offset:float -> count:float -> string [@@js.call "substringData"]
    val cast: t -> _Node [@@js.cast]
    val cast': t -> _ChildNode [@@js.cast]
    val cast'': t -> _NonDocumentTypeChildNode [@@js.cast]
  end
  val characterData: anonymous_interface_65 [@@js.global "CharacterData"]
  module[@js.scope "ChildNode"] ChildNode : sig
    type t = _ChildNode
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val after: t -> nodes:(_Node or_string list [@js.variadic]) -> unit [@@js.call "after"]
    val before: t -> nodes:(_Node or_string list [@js.variadic]) -> unit [@@js.call "before"]
    val remove: t -> unit [@@js.call "remove"]
    val replaceWith: t -> nodes:(_Node or_string list [@js.variadic]) -> unit [@@js.call "replaceWith"]
    val cast: t -> _Node [@@js.cast]
  end
  module[@js.scope "ClientRect"] ClientRect : sig
    type t = _ClientRect
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_bottom: t -> float [@@js.get "bottom"]
    val set_bottom: t -> float -> unit [@@js.set "bottom"]
    val get_height: t -> float [@@js.get "height"]
    val get_left: t -> float [@@js.get "left"]
    val set_left: t -> float -> unit [@@js.set "left"]
    val get_right: t -> float [@@js.get "right"]
    val set_right: t -> float -> unit [@@js.set "right"]
    val get_top: t -> float [@@js.get "top"]
    val set_top: t -> float -> unit [@@js.set "top"]
    val get_width: t -> float [@@js.get "width"]
  end
  val clientRect: anonymous_interface_66 [@@js.global "ClientRect"]
  module[@js.scope "ClientRectList"] ClientRectList : sig
    type t = _ClientRectList
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_length: t -> float [@@js.get "length"]
    val item: t -> index:float -> _ClientRect [@@js.call "item"]
    val get: t -> float -> _ClientRect [@@js.index_get]
    val set: t -> float -> _ClientRect -> unit [@@js.index_set]
  end
  val clientRectList: anonymous_interface_67 [@@js.global "ClientRectList"]
  module[@js.scope "Clipboard"] Clipboard : sig
    type t = _Clipboard
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val readText: t -> string Promise.t_1 [@@js.call "readText"]
    val writeText: t -> data:string -> unit Promise.t_1 [@@js.call "writeText"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val clipboard: anonymous_interface_68 [@@js.global "Clipboard"]
  module[@js.scope "ClipboardEvent"] ClipboardEvent : sig
    type t = _ClipboardEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_clipboardData: t -> _DataTransfer or_null [@@js.get "clipboardData"]
    val cast: t -> _Event [@@js.cast]
  end
  val clipboardEvent: anonymous_interface_69 [@@js.global "ClipboardEvent"]
  module[@js.scope "CloseEvent"] CloseEvent : sig
    type t = _CloseEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_code: t -> float [@@js.get "code"]
    val get_reason: t -> string [@@js.get "reason"]
    val get_wasClean: t -> bool [@@js.get "wasClean"]
    val cast: t -> _Event [@@js.cast]
  end
  val closeEvent: anonymous_interface_70 [@@js.global "CloseEvent"]
  module[@js.scope "Comment"] Comment : sig
    type t = _Comment
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val cast: t -> _CharacterData [@@js.cast]
  end
  val comment: anonymous_interface_71 [@@js.global "Comment"]
  module[@js.scope "CompositionEvent"] CompositionEvent : sig
    type t = _CompositionEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_data: t -> string [@@js.get "data"]
    val cast: t -> _UIEvent [@@js.cast]
  end
  val compositionEvent: anonymous_interface_73 [@@js.global "CompositionEvent"]
  module[@js.scope "ConcatParams"] ConcatParams : sig
    type t = _ConcatParams
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_algorithmId: t -> Uint8Array.t_0 [@@js.get "algorithmId"]
    val set_algorithmId: t -> Uint8Array.t_0 -> unit [@@js.set "algorithmId"]
    val get_hash: t -> _Algorithm or_string [@@js.get "hash"]
    val set_hash: t -> _Algorithm or_string -> unit [@@js.set "hash"]
    val get_partyUInfo: t -> Uint8Array.t_0 [@@js.get "partyUInfo"]
    val set_partyUInfo: t -> Uint8Array.t_0 -> unit [@@js.set "partyUInfo"]
    val get_partyVInfo: t -> Uint8Array.t_0 [@@js.get "partyVInfo"]
    val set_partyVInfo: t -> Uint8Array.t_0 -> unit [@@js.set "partyVInfo"]
    val get_privateInfo: t -> Uint8Array.t_0 [@@js.get "privateInfo"]
    val set_privateInfo: t -> Uint8Array.t_0 -> unit [@@js.set "privateInfo"]
    val get_publicInfo: t -> Uint8Array.t_0 [@@js.get "publicInfo"]
    val set_publicInfo: t -> Uint8Array.t_0 -> unit [@@js.set "publicInfo"]
    val cast: t -> _Algorithm [@@js.cast]
  end
  module[@js.scope "Console"] Console : sig
    type t = _Console
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_memory: t -> any [@@js.get "memory"]
    val set_memory: t -> any -> unit [@@js.set "memory"]
    val assert_: t -> ?condition:bool -> ?message:string -> data:(any list [@js.variadic]) -> unit [@@js.call "assert"]
    val clear: t -> unit [@@js.call "clear"]
    val count: t -> ?label:string -> unit -> unit [@@js.call "count"]
    val debug: t -> ?message:any -> optionalParams:(any list [@js.variadic]) -> unit [@@js.call "debug"]
    val dir: t -> ?value:any -> optionalParams:(any list [@js.variadic]) -> unit [@@js.call "dir"]
    val dirxml: t -> value:any -> unit [@@js.call "dirxml"]
    val error: t -> ?message:any -> optionalParams:(any list [@js.variadic]) -> unit [@@js.call "error"]
    val exception_: t -> ?message:string -> optionalParams:(any list [@js.variadic]) -> unit [@@js.call "exception"]
    val group: t -> ?groupTitle:string -> optionalParams:(any list [@js.variadic]) -> unit [@@js.call "group"]
    val groupCollapsed: t -> ?groupTitle:string -> optionalParams:(any list [@js.variadic]) -> unit [@@js.call "groupCollapsed"]
    val groupEnd: t -> unit [@@js.call "groupEnd"]
    val info: t -> ?message:any -> optionalParams:(any list [@js.variadic]) -> unit [@@js.call "info"]
    val log: t -> ?message:any -> optionalParams:(any list [@js.variadic]) -> unit [@@js.call "log"]
    val markTimeline: t -> ?label:string -> unit -> unit [@@js.call "markTimeline"]
    val profile: t -> ?reportName:string -> unit -> unit [@@js.call "profile"]
    val profileEnd: t -> ?reportName:string -> unit -> unit [@@js.call "profileEnd"]
    val table: t -> tabularData:(any list [@js.variadic]) -> unit [@@js.call "table"]
    val time: t -> ?label:string -> unit -> unit [@@js.call "time"]
    val timeEnd: t -> ?label:string -> unit -> unit [@@js.call "timeEnd"]
    val timeStamp: t -> ?label:string -> unit -> unit [@@js.call "timeStamp"]
    val timeline: t -> ?label:string -> unit -> unit [@@js.call "timeline"]
    val timelineEnd: t -> ?label:string -> unit -> unit [@@js.call "timelineEnd"]
    val trace: t -> ?message:any -> optionalParams:(any list [@js.variadic]) -> unit [@@js.call "trace"]
    val warn: t -> ?message:any -> optionalParams:(any list [@js.variadic]) -> unit [@@js.call "warn"]
  end
  val console: anonymous_interface_74 [@@js.global "Console"]
  module[@js.scope "ConstantSourceNode"] ConstantSourceNode : sig
    type t = _ConstantSourceNode
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_offset: t -> _AudioParam [@@js.get "offset"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _AudioScheduledSourceNode [@@js.cast]
  end
  val constantSourceNode: anonymous_interface_75 [@@js.global "ConstantSourceNode"]
  module[@js.scope "ConvolverNode"] ConvolverNode : sig
    type t = _ConvolverNode
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_buffer: t -> _AudioBuffer or_null [@@js.get "buffer"]
    val set_buffer: t -> _AudioBuffer or_null -> unit [@@js.set "buffer"]
    val get_normalize: t -> bool [@@js.get "normalize"]
    val set_normalize: t -> bool -> unit [@@js.set "normalize"]
    val cast: t -> _AudioNode [@@js.cast]
  end
  val convolverNode: anonymous_interface_76 [@@js.global "ConvolverNode"]
  module[@js.scope "Coordinates"] Coordinates : sig
    type t = _Coordinates
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_accuracy: t -> float [@@js.get "accuracy"]
    val get_altitude: t -> float or_null [@@js.get "altitude"]
    val get_altitudeAccuracy: t -> float or_null [@@js.get "altitudeAccuracy"]
    val get_heading: t -> float or_null [@@js.get "heading"]
    val get_latitude: t -> float [@@js.get "latitude"]
    val get_longitude: t -> float [@@js.get "longitude"]
    val get_speed: t -> float or_null [@@js.get "speed"]
  end
  module[@js.scope "CountQueuingStrategy"] CountQueuingStrategy : sig
    type t = _CountQueuingStrategy
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_highWaterMark: t -> float [@@js.get "highWaterMark"]
    val set_highWaterMark: t -> float -> unit [@@js.set "highWaterMark"]
    val size: t -> chunk:any -> ([`L_n_1[@js 1]] [@js.enum]) [@@js.call "size"]
    val cast: t -> any _QueuingStrategy [@@js.cast]
  end
  val countQueuingStrategy: anonymous_interface_77 [@@js.global "CountQueuingStrategy"]
  module[@js.scope "Credential"] Credential : sig
    type t = _Credential
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_id: t -> string [@@js.get "id"]
    val get_type: t -> string [@@js.get "type"]
  end
  val credential: anonymous_interface_78 [@@js.global "Credential"]
  module[@js.scope "CredentialsContainer"] CredentialsContainer : sig
    type t = _CredentialsContainer
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val create_: t -> ?options:_CredentialCreationOptions -> unit -> _Credential or_null Promise.t_1 [@@js.call "create"]
    val get_: t -> ?options:_CredentialRequestOptions -> unit -> _Credential or_null Promise.t_1 [@@js.call "get"]
    val preventSilentAccess: t -> unit Promise.t_1 [@@js.call "preventSilentAccess"]
    val store: t -> credential:_Credential -> _Credential Promise.t_1 [@@js.call "store"]
  end
  val credentialsContainer: anonymous_interface_79 [@@js.global "CredentialsContainer"]
  module[@js.scope "Crypto"] Crypto : sig
    type t = _Crypto
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_subtle: t -> _SubtleCrypto [@@js.get "subtle"]
    val getRandomValues: t -> array:'T -> 'T [@@js.call "getRandomValues"]
  end
  val crypto: anonymous_interface_80 [@@js.global "Crypto"]
  module[@js.scope "CryptoKey"] CryptoKey : sig
    type t = _CryptoKey
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_algorithm: t -> _KeyAlgorithm [@@js.get "algorithm"]
    val get_extractable: t -> bool [@@js.get "extractable"]
    val get_type: t -> _KeyType [@@js.get "type"]
    val get_usages: t -> _KeyUsage list [@@js.get "usages"]
  end
  val cryptoKey: anonymous_interface_81 [@@js.global "CryptoKey"]
  module[@js.scope "CryptoKeyPair"] CryptoKeyPair : sig
    type t = _CryptoKeyPair
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_privateKey: t -> _CryptoKey [@@js.get "privateKey"]
    val set_privateKey: t -> _CryptoKey -> unit [@@js.set "privateKey"]
    val get_publicKey: t -> _CryptoKey [@@js.get "publicKey"]
    val set_publicKey: t -> _CryptoKey -> unit [@@js.set "publicKey"]
  end
  val cryptoKeyPair: anonymous_interface_82 [@@js.global "CryptoKeyPair"]
  module[@js.scope "CustomElementRegistry"] CustomElementRegistry : sig
    type t = _CustomElementRegistry
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val define: t -> name:string -> constructor:_CustomElementConstructor -> ?options:_ElementDefinitionOptions -> unit -> unit [@@js.call "define"]
    val get_: t -> name:string -> any [@@js.call "get"]
    val upgrade: t -> root:_Node -> unit [@@js.call "upgrade"]
    val whenDefined: t -> name:string -> unit Promise.t_1 [@@js.call "whenDefined"]
  end
  val customElementRegistry: anonymous_interface_83 [@@js.global "CustomElementRegistry"]
  module[@js.scope "CustomEvent"] CustomEvent : sig
    type 'T t = 'T _CustomEvent
    val t_to_js: ('T -> Ojs.t) -> 'T t -> Ojs.t
    val t_of_js: (Ojs.t -> 'T) -> Ojs.t -> 'T t
    type 'T t_1 = 'T t
    val t_1_to_js: ('T -> Ojs.t) -> 'T t_1 -> Ojs.t
    val t_1_of_js: (Ojs.t -> 'T) -> Ojs.t -> 'T t_1
    type t_0 = any t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_detail: 'T t -> 'T [@@js.get "detail"]
    val initCustomEvent: 'T t -> typeArg:string -> canBubbleArg:bool -> cancelableArg:bool -> detailArg:'T -> unit [@@js.call "initCustomEvent"]
    val cast: 'T t -> _Event [@@js.cast]
  end
  val customEvent: anonymous_interface_84 [@@js.global "CustomEvent"]
  module[@js.scope "DOMError"] DOMError : sig
    type t = _DOMError
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_name: t -> string [@@js.get "name"]
    val toString: t -> string [@@js.call "toString"]
  end
  val dOMError: anonymous_interface_85 [@@js.global "DOMError"]
  module[@js.scope "DOMException"] DOMException : sig
    type t = _DOMException
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_code: t -> float [@@js.get "code"]
    val get_message: t -> string [@@js.get "message"]
    val get_name: t -> string [@@js.get "name"]
    val get_ABORT_ERR: t -> float [@@js.get "ABORT_ERR"]
    val get_DATA_CLONE_ERR: t -> float [@@js.get "DATA_CLONE_ERR"]
    val get_DOMSTRING_SIZE_ERR: t -> float [@@js.get "DOMSTRING_SIZE_ERR"]
    val get_HIERARCHY_REQUEST_ERR: t -> float [@@js.get "HIERARCHY_REQUEST_ERR"]
    val get_INDEX_SIZE_ERR: t -> float [@@js.get "INDEX_SIZE_ERR"]
    val get_INUSE_ATTRIBUTE_ERR: t -> float [@@js.get "INUSE_ATTRIBUTE_ERR"]
    val get_INVALID_ACCESS_ERR: t -> float [@@js.get "INVALID_ACCESS_ERR"]
    val get_INVALID_CHARACTER_ERR: t -> float [@@js.get "INVALID_CHARACTER_ERR"]
    val get_INVALID_MODIFICATION_ERR: t -> float [@@js.get "INVALID_MODIFICATION_ERR"]
    val get_INVALID_NODE_TYPE_ERR: t -> float [@@js.get "INVALID_NODE_TYPE_ERR"]
    val get_INVALID_STATE_ERR: t -> float [@@js.get "INVALID_STATE_ERR"]
    val get_NAMESPACE_ERR: t -> float [@@js.get "NAMESPACE_ERR"]
    val get_NETWORK_ERR: t -> float [@@js.get "NETWORK_ERR"]
    val get_NOT_FOUND_ERR: t -> float [@@js.get "NOT_FOUND_ERR"]
    val get_NOT_SUPPORTED_ERR: t -> float [@@js.get "NOT_SUPPORTED_ERR"]
    val get_NO_DATA_ALLOWED_ERR: t -> float [@@js.get "NO_DATA_ALLOWED_ERR"]
    val get_NO_MODIFICATION_ALLOWED_ERR: t -> float [@@js.get "NO_MODIFICATION_ALLOWED_ERR"]
    val get_QUOTA_EXCEEDED_ERR: t -> float [@@js.get "QUOTA_EXCEEDED_ERR"]
    val get_SECURITY_ERR: t -> float [@@js.get "SECURITY_ERR"]
    val get_SYNTAX_ERR: t -> float [@@js.get "SYNTAX_ERR"]
    val get_TIMEOUT_ERR: t -> float [@@js.get "TIMEOUT_ERR"]
    val get_TYPE_MISMATCH_ERR: t -> float [@@js.get "TYPE_MISMATCH_ERR"]
    val get_URL_MISMATCH_ERR: t -> float [@@js.get "URL_MISMATCH_ERR"]
    val get_VALIDATION_ERR: t -> float [@@js.get "VALIDATION_ERR"]
    val get_WRONG_DOCUMENT_ERR: t -> float [@@js.get "WRONG_DOCUMENT_ERR"]
  end
  val dOMException: anonymous_interface_86 [@@js.global "DOMException"]
  module[@js.scope "DOMImplementation"] DOMImplementation : sig
    type t = _DOMImplementation
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val createDocument: t -> namespaceURI:string or_null -> qualifiedName:string or_null -> doctype:_DocumentType or_null -> _Document [@@js.call "createDocument"]
    val createDocumentType: t -> qualifiedName:string -> publicId:string -> systemId:string -> _DocumentType [@@js.call "createDocumentType"]
    val createHTMLDocument: t -> ?title:string -> unit -> _Document [@@js.call "createHTMLDocument"]
    val hasFeature: t -> args:(any list [@js.variadic]) -> ([`L_b_true[@js true]] [@js.enum]) [@@js.call "hasFeature"]
  end
  val dOMImplementation: anonymous_interface_87 [@@js.global "DOMImplementation"]
  module[@js.scope "DOML2DeprecatedColorProperty"] DOML2DeprecatedColorProperty : sig
    type t = _DOML2DeprecatedColorProperty
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_color: t -> string [@@js.get "color"]
    val set_color: t -> string -> unit [@@js.set "color"]
  end
  module[@js.scope "DOMMatrix"] DOMMatrix : sig
    type t = _DOMMatrix
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_a: t -> float [@@js.get "a"]
    val set_a: t -> float -> unit [@@js.set "a"]
    val get_b: t -> float [@@js.get "b"]
    val set_b: t -> float -> unit [@@js.set "b"]
    val get_c: t -> float [@@js.get "c"]
    val set_c: t -> float -> unit [@@js.set "c"]
    val get_d: t -> float [@@js.get "d"]
    val set_d: t -> float -> unit [@@js.set "d"]
    val get_e: t -> float [@@js.get "e"]
    val set_e: t -> float -> unit [@@js.set "e"]
    val get_f: t -> float [@@js.get "f"]
    val set_f: t -> float -> unit [@@js.set "f"]
    val get_m11: t -> float [@@js.get "m11"]
    val set_m11: t -> float -> unit [@@js.set "m11"]
    val get_m12: t -> float [@@js.get "m12"]
    val set_m12: t -> float -> unit [@@js.set "m12"]
    val get_m13: t -> float [@@js.get "m13"]
    val set_m13: t -> float -> unit [@@js.set "m13"]
    val get_m14: t -> float [@@js.get "m14"]
    val set_m14: t -> float -> unit [@@js.set "m14"]
    val get_m21: t -> float [@@js.get "m21"]
    val set_m21: t -> float -> unit [@@js.set "m21"]
    val get_m22: t -> float [@@js.get "m22"]
    val set_m22: t -> float -> unit [@@js.set "m22"]
    val get_m23: t -> float [@@js.get "m23"]
    val set_m23: t -> float -> unit [@@js.set "m23"]
    val get_m24: t -> float [@@js.get "m24"]
    val set_m24: t -> float -> unit [@@js.set "m24"]
    val get_m31: t -> float [@@js.get "m31"]
    val set_m31: t -> float -> unit [@@js.set "m31"]
    val get_m32: t -> float [@@js.get "m32"]
    val set_m32: t -> float -> unit [@@js.set "m32"]
    val get_m33: t -> float [@@js.get "m33"]
    val set_m33: t -> float -> unit [@@js.set "m33"]
    val get_m34: t -> float [@@js.get "m34"]
    val set_m34: t -> float -> unit [@@js.set "m34"]
    val get_m41: t -> float [@@js.get "m41"]
    val set_m41: t -> float -> unit [@@js.set "m41"]
    val get_m42: t -> float [@@js.get "m42"]
    val set_m42: t -> float -> unit [@@js.set "m42"]
    val get_m43: t -> float [@@js.get "m43"]
    val set_m43: t -> float -> unit [@@js.set "m43"]
    val get_m44: t -> float [@@js.get "m44"]
    val set_m44: t -> float -> unit [@@js.set "m44"]
    val invertSelf: t -> t [@@js.call "invertSelf"]
    val multiplySelf: t -> ?other:_DOMMatrixInit -> unit -> t [@@js.call "multiplySelf"]
    val preMultiplySelf: t -> ?other:_DOMMatrixInit -> unit -> t [@@js.call "preMultiplySelf"]
    val rotateAxisAngleSelf: t -> ?x:float -> ?y:float -> ?z:float -> ?angle:float -> unit -> t [@@js.call "rotateAxisAngleSelf"]
    val rotateFromVectorSelf: t -> ?x:float -> ?y:float -> unit -> t [@@js.call "rotateFromVectorSelf"]
    val rotateSelf: t -> ?rotX:float -> ?rotY:float -> ?rotZ:float -> unit -> t [@@js.call "rotateSelf"]
    val scale3dSelf: t -> ?scale:float -> ?originX:float -> ?originY:float -> ?originZ:float -> unit -> t [@@js.call "scale3dSelf"]
    val scaleSelf: t -> ?scaleX:float -> ?scaleY:float -> ?scaleZ:float -> ?originX:float -> ?originY:float -> ?originZ:float -> unit -> t [@@js.call "scaleSelf"]
    val setMatrixValue: t -> transformList:string -> t [@@js.call "setMatrixValue"]
    val skewXSelf: t -> ?sx:float -> unit -> t [@@js.call "skewXSelf"]
    val skewYSelf: t -> ?sy:float -> unit -> t [@@js.call "skewYSelf"]
    val translateSelf: t -> ?tx:float -> ?ty:float -> ?tz:float -> unit -> t [@@js.call "translateSelf"]
    val cast: t -> _DOMMatrixReadOnly [@@js.cast]
  end
  val dOMMatrix: anonymous_interface_88 [@@js.global "DOMMatrix"]
  module SVGMatrix : sig
    type t = _SVGMatrix
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  val sVGMatrix: anonymous_interface_88 [@@js.global "SVGMatrix"]
  module WebKitCSSMatrix : sig
    type t = _WebKitCSSMatrix
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  val webKitCSSMatrix: anonymous_interface_88 [@@js.global "WebKitCSSMatrix"]
  module[@js.scope "DOMMatrixReadOnly"] DOMMatrixReadOnly : sig
    type t = _DOMMatrixReadOnly
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_a: t -> float [@@js.get "a"]
    val get_b: t -> float [@@js.get "b"]
    val get_c: t -> float [@@js.get "c"]
    val get_d: t -> float [@@js.get "d"]
    val get_e: t -> float [@@js.get "e"]
    val get_f: t -> float [@@js.get "f"]
    val get_is2D: t -> bool [@@js.get "is2D"]
    val get_isIdentity: t -> bool [@@js.get "isIdentity"]
    val get_m11: t -> float [@@js.get "m11"]
    val get_m12: t -> float [@@js.get "m12"]
    val get_m13: t -> float [@@js.get "m13"]
    val get_m14: t -> float [@@js.get "m14"]
    val get_m21: t -> float [@@js.get "m21"]
    val get_m22: t -> float [@@js.get "m22"]
    val get_m23: t -> float [@@js.get "m23"]
    val get_m24: t -> float [@@js.get "m24"]
    val get_m31: t -> float [@@js.get "m31"]
    val get_m32: t -> float [@@js.get "m32"]
    val get_m33: t -> float [@@js.get "m33"]
    val get_m34: t -> float [@@js.get "m34"]
    val get_m41: t -> float [@@js.get "m41"]
    val get_m42: t -> float [@@js.get "m42"]
    val get_m43: t -> float [@@js.get "m43"]
    val get_m44: t -> float [@@js.get "m44"]
    val flipX: t -> _DOMMatrix [@@js.call "flipX"]
    val flipY: t -> _DOMMatrix [@@js.call "flipY"]
    val inverse: t -> _DOMMatrix [@@js.call "inverse"]
    val multiply: t -> ?other:_DOMMatrixInit -> unit -> _DOMMatrix [@@js.call "multiply"]
    val rotate: t -> ?rotX:float -> ?rotY:float -> ?rotZ:float -> unit -> _DOMMatrix [@@js.call "rotate"]
    val rotateAxisAngle: t -> ?x:float -> ?y:float -> ?z:float -> ?angle:float -> unit -> _DOMMatrix [@@js.call "rotateAxisAngle"]
    val rotateFromVector: t -> ?x:float -> ?y:float -> unit -> _DOMMatrix [@@js.call "rotateFromVector"]
    val scale: t -> ?scaleX:float -> ?scaleY:float -> ?scaleZ:float -> ?originX:float -> ?originY:float -> ?originZ:float -> unit -> _DOMMatrix [@@js.call "scale"]
    val scale3d: t -> ?scale:float -> ?originX:float -> ?originY:float -> ?originZ:float -> unit -> _DOMMatrix [@@js.call "scale3d"]
    val scaleNonUniform: t -> ?scaleX:float -> ?scaleY:float -> unit -> _DOMMatrix [@@js.call "scaleNonUniform"]
    val skewX: t -> ?sx:float -> unit -> _DOMMatrix [@@js.call "skewX"]
    val skewY: t -> ?sy:float -> unit -> _DOMMatrix [@@js.call "skewY"]
    val toFloat32Array: t -> Float32Array.t_0 [@@js.call "toFloat32Array"]
    val toFloat64Array: t -> Float64Array.t_0 [@@js.call "toFloat64Array"]
    val toJSON: t -> any [@@js.call "toJSON"]
    val transformPoint: t -> ?point:_DOMPointInit -> unit -> _DOMPoint [@@js.call "transformPoint"]
    val translate: t -> ?tx:float -> ?ty:float -> ?tz:float -> unit -> _DOMMatrix [@@js.call "translate"]
    val toString: t -> string [@@js.call "toString"]
  end
  val dOMMatrixReadOnly: anonymous_interface_89 [@@js.global "DOMMatrixReadOnly"]
  module[@js.scope "DOMParser"] DOMParser : sig
    type t = _DOMParser
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val parseFromString: t -> str:string -> type_:_SupportedType -> _Document [@@js.call "parseFromString"]
  end
  val dOMParser: anonymous_interface_90 [@@js.global "DOMParser"]
  module[@js.scope "DOMPoint"] DOMPoint : sig
    type t = _DOMPoint
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_w: t -> float [@@js.get "w"]
    val set_w: t -> float -> unit [@@js.set "w"]
    val get_x: t -> float [@@js.get "x"]
    val set_x: t -> float -> unit [@@js.set "x"]
    val get_y: t -> float [@@js.get "y"]
    val set_y: t -> float -> unit [@@js.set "y"]
    val get_z: t -> float [@@js.get "z"]
    val set_z: t -> float -> unit [@@js.set "z"]
    val cast: t -> _DOMPointReadOnly [@@js.cast]
  end
  val dOMPoint: anonymous_interface_91 [@@js.global "DOMPoint"]
  module SVGPoint : sig
    type t = _SVGPoint
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  val sVGPoint: anonymous_interface_91 [@@js.global "SVGPoint"]
  module[@js.scope "DOMPointReadOnly"] DOMPointReadOnly : sig
    type t = _DOMPointReadOnly
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_w: t -> float [@@js.get "w"]
    val get_x: t -> float [@@js.get "x"]
    val get_y: t -> float [@@js.get "y"]
    val get_z: t -> float [@@js.get "z"]
    val matrixTransform: t -> ?matrix:_DOMMatrixInit -> unit -> _DOMPoint [@@js.call "matrixTransform"]
    val toJSON: t -> any [@@js.call "toJSON"]
  end
  val dOMPointReadOnly: anonymous_interface_92 [@@js.global "DOMPointReadOnly"]
  module[@js.scope "DOMQuad"] DOMQuad : sig
    type t = _DOMQuad
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_p1: t -> _DOMPoint [@@js.get "p1"]
    val get_p2: t -> _DOMPoint [@@js.get "p2"]
    val get_p3: t -> _DOMPoint [@@js.get "p3"]
    val get_p4: t -> _DOMPoint [@@js.get "p4"]
    val getBounds: t -> _DOMRect [@@js.call "getBounds"]
    val toJSON: t -> any [@@js.call "toJSON"]
  end
  val dOMQuad: anonymous_interface_93 [@@js.global "DOMQuad"]
  module[@js.scope "DOMRect"] DOMRect : sig
    type t = _DOMRect
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_height: t -> float [@@js.get "height"]
    val set_height: t -> float -> unit [@@js.set "height"]
    val get_width: t -> float [@@js.get "width"]
    val set_width: t -> float -> unit [@@js.set "width"]
    val get_x: t -> float [@@js.get "x"]
    val set_x: t -> float -> unit [@@js.set "x"]
    val get_y: t -> float [@@js.get "y"]
    val set_y: t -> float -> unit [@@js.set "y"]
    val cast: t -> _DOMRectReadOnly [@@js.cast]
  end
  val dOMRect: anonymous_interface_94 [@@js.global "DOMRect"]
  module SVGRect : sig
    type t = _SVGRect
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  val sVGRect: anonymous_interface_94 [@@js.global "SVGRect"]
  module[@js.scope "DOMRectList"] DOMRectList : sig
    type t = _DOMRectList
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_length: t -> float [@@js.get "length"]
    val item: t -> index:float -> _DOMRect or_null [@@js.call "item"]
    val get: t -> float -> _DOMRect [@@js.index_get]
    val set: t -> float -> _DOMRect -> unit [@@js.index_set]
  end
  val dOMRectList: anonymous_interface_95 [@@js.global "DOMRectList"]
  module[@js.scope "DOMRectReadOnly"] DOMRectReadOnly : sig
    type t = _DOMRectReadOnly
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_bottom: t -> float [@@js.get "bottom"]
    val get_height: t -> float [@@js.get "height"]
    val get_left: t -> float [@@js.get "left"]
    val get_right: t -> float [@@js.get "right"]
    val get_top: t -> float [@@js.get "top"]
    val get_width: t -> float [@@js.get "width"]
    val get_x: t -> float [@@js.get "x"]
    val get_y: t -> float [@@js.get "y"]
    val toJSON: t -> any [@@js.call "toJSON"]
  end
  val dOMRectReadOnly: anonymous_interface_96 [@@js.global "DOMRectReadOnly"]
  module[@js.scope "DOMSettableTokenList"] DOMSettableTokenList : sig
    type t = _DOMSettableTokenList
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_value: t -> string [@@js.get "value"]
    val set_value: t -> string -> unit [@@js.set "value"]
    val cast: t -> _DOMTokenList [@@js.cast]
  end
  val dOMSettableTokenList: anonymous_interface_97 [@@js.global "DOMSettableTokenList"]
  module[@js.scope "DOMStringList"] DOMStringList : sig
    type t = _DOMStringList
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_length: t -> float [@@js.get "length"]
    val contains: t -> string:string -> bool [@@js.call "contains"]
    val item: t -> index:float -> string or_null [@@js.call "item"]
    val get: t -> float -> string [@@js.index_get]
    val set: t -> float -> string -> unit [@@js.index_set]
  end
  val dOMStringList: anonymous_interface_98 [@@js.global "DOMStringList"]
  module[@js.scope "DOMStringMap"] DOMStringMap : sig
    type t = _DOMStringMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get: t -> string -> string or_undefined [@@js.index_get]
    val set: t -> string -> string or_undefined -> unit [@@js.index_set]
  end
  val dOMStringMap: anonymous_interface_99 [@@js.global "DOMStringMap"]
  module[@js.scope "DOMTokenList"] DOMTokenList : sig
    type t = _DOMTokenList
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_length: t -> float [@@js.get "length"]
    val get_value: t -> string [@@js.get "value"]
    val set_value: t -> string -> unit [@@js.set "value"]
    val toString: t -> string [@@js.call "toString"]
    val add: t -> tokens:(string list [@js.variadic]) -> unit [@@js.call "add"]
    val contains: t -> token:string -> bool [@@js.call "contains"]
    val item: t -> index:float -> string or_null [@@js.call "item"]
    val remove: t -> tokens:(string list [@js.variadic]) -> unit [@@js.call "remove"]
    val replace: t -> oldToken:string -> newToken:string -> unit [@@js.call "replace"]
    val supports: t -> token:string -> bool [@@js.call "supports"]
    val toggle: t -> token:string -> ?force:bool -> unit -> bool [@@js.call "toggle"]
    val forEach: t -> callbackfn:(value:string -> key:float -> parent:t -> unit) -> ?thisArg:any -> unit -> unit [@@js.call "forEach"]
    val get: t -> float -> string [@@js.index_get]
    val set: t -> float -> string -> unit [@@js.index_set]
  end
  val dOMTokenList: anonymous_interface_100 [@@js.global "DOMTokenList"]
  module[@js.scope "DataCue"] DataCue : sig
    type t = _DataCue
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_data: t -> ArrayBuffer.t_0 [@@js.get "data"]
    val set_data: t -> ArrayBuffer.t_0 -> unit [@@js.set "data"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _TextTrackCue [@@js.cast]
  end
  val dataCue: anonymous_interface_101 [@@js.global "DataCue"]
  module[@js.scope "DataTransfer"] DataTransfer : sig
    type t = _DataTransfer
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_dropEffect: t -> string [@@js.get "dropEffect"]
    val set_dropEffect: t -> string -> unit [@@js.set "dropEffect"]
    val get_effectAllowed: t -> string [@@js.get "effectAllowed"]
    val set_effectAllowed: t -> string -> unit [@@js.set "effectAllowed"]
    val get_files: t -> _FileList [@@js.get "files"]
    val get_items: t -> _DataTransferItemList [@@js.get "items"]
    val get_types: t -> string list [@@js.get "types"]
    val clearData: t -> ?format:string -> unit -> unit [@@js.call "clearData"]
    val getData: t -> format:string -> string [@@js.call "getData"]
    val setData: t -> format:string -> data:string -> unit [@@js.call "setData"]
    val setDragImage: t -> image:_Element -> x:float -> y:float -> unit [@@js.call "setDragImage"]
  end
  val dataTransfer: anonymous_interface_102 [@@js.global "DataTransfer"]
  module[@js.scope "DataTransferItem"] DataTransferItem : sig
    type t = _DataTransferItem
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_kind: t -> string [@@js.get "kind"]
    val get_type: t -> string [@@js.get "type"]
    val getAsFile: t -> _File or_null [@@js.call "getAsFile"]
    val getAsString: t -> callback:_FunctionStringCallback or_null -> unit [@@js.call "getAsString"]
    val webkitGetAsEntry: t -> any [@@js.call "webkitGetAsEntry"]
  end
  val dataTransferItem: anonymous_interface_103 [@@js.global "DataTransferItem"]
  module[@js.scope "DataTransferItemList"] DataTransferItemList : sig
    type t = _DataTransferItemList
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_length: t -> float [@@js.get "length"]
    val add: t -> data:string -> type_:string -> _DataTransferItem or_null [@@js.call "add"]
    val add': t -> data:_File -> _DataTransferItem or_null [@@js.call "add"]
    val clear: t -> unit [@@js.call "clear"]
    val item: t -> index:float -> _DataTransferItem [@@js.call "item"]
    val remove: t -> index:float -> unit [@@js.call "remove"]
    val get: t -> float -> _DataTransferItem [@@js.index_get]
    val set: t -> float -> _DataTransferItem -> unit [@@js.index_set]
  end
  val dataTransferItemList: anonymous_interface_104 [@@js.global "DataTransferItemList"]
  module[@js.scope "DeferredPermissionRequest"] DeferredPermissionRequest : sig
    type t = _DeferredPermissionRequest
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_id: t -> float [@@js.get "id"]
    val get_type: t -> _MSWebViewPermissionType [@@js.get "type"]
    val get_uri: t -> string [@@js.get "uri"]
    val allow: t -> unit [@@js.call "allow"]
    val deny: t -> unit [@@js.call "deny"]
  end
  val deferredPermissionRequest: anonymous_interface_105 [@@js.global "DeferredPermissionRequest"]
  module[@js.scope "DelayNode"] DelayNode : sig
    type t = _DelayNode
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_delayTime: t -> _AudioParam [@@js.get "delayTime"]
    val cast: t -> _AudioNode [@@js.cast]
  end
  val delayNode: anonymous_interface_106 [@@js.global "DelayNode"]
  module[@js.scope "DeviceAcceleration"] DeviceAcceleration : sig
    type t = _DeviceAcceleration
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_x: t -> float or_null [@@js.get "x"]
    val get_y: t -> float or_null [@@js.get "y"]
    val get_z: t -> float or_null [@@js.get "z"]
  end
  val deviceAcceleration: anonymous_interface_107 [@@js.global "DeviceAcceleration"]
  module[@js.scope "DeviceLightEvent"] DeviceLightEvent : sig
    type t = _DeviceLightEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_value: t -> float [@@js.get "value"]
    val cast: t -> _Event [@@js.cast]
  end
  val deviceLightEvent: anonymous_interface_108 [@@js.global "DeviceLightEvent"]
  module[@js.scope "DeviceMotionEvent"] DeviceMotionEvent : sig
    type t = _DeviceMotionEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_acceleration: t -> _DeviceMotionEventAcceleration or_null [@@js.get "acceleration"]
    val get_accelerationIncludingGravity: t -> _DeviceMotionEventAcceleration or_null [@@js.get "accelerationIncludingGravity"]
    val get_interval: t -> float [@@js.get "interval"]
    val get_rotationRate: t -> _DeviceMotionEventRotationRate or_null [@@js.get "rotationRate"]
    val cast: t -> _Event [@@js.cast]
  end
  val deviceMotionEvent: anonymous_interface_109 [@@js.global "DeviceMotionEvent"]
  module[@js.scope "DeviceMotionEventAcceleration"] DeviceMotionEventAcceleration : sig
    type t = _DeviceMotionEventAcceleration
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_x: t -> float or_null [@@js.get "x"]
    val get_y: t -> float or_null [@@js.get "y"]
    val get_z: t -> float or_null [@@js.get "z"]
  end
  module[@js.scope "DeviceMotionEventRotationRate"] DeviceMotionEventRotationRate : sig
    type t = _DeviceMotionEventRotationRate
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_alpha: t -> float or_null [@@js.get "alpha"]
    val get_beta: t -> float or_null [@@js.get "beta"]
    val get_gamma: t -> float or_null [@@js.get "gamma"]
  end
  module[@js.scope "DeviceOrientationEvent"] DeviceOrientationEvent : sig
    type t = _DeviceOrientationEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_absolute: t -> bool [@@js.get "absolute"]
    val get_alpha: t -> float or_null [@@js.get "alpha"]
    val get_beta: t -> float or_null [@@js.get "beta"]
    val get_gamma: t -> float or_null [@@js.get "gamma"]
    val cast: t -> _Event [@@js.cast]
  end
  val deviceOrientationEvent: anonymous_interface_110 [@@js.global "DeviceOrientationEvent"]
  module[@js.scope "DeviceRotationRate"] DeviceRotationRate : sig
    type t = _DeviceRotationRate
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_alpha: t -> float or_null [@@js.get "alpha"]
    val get_beta: t -> float or_null [@@js.get "beta"]
    val get_gamma: t -> float or_null [@@js.get "gamma"]
  end
  val deviceRotationRate: anonymous_interface_111 [@@js.global "DeviceRotationRate"]
  module[@js.scope "DhImportKeyParams"] DhImportKeyParams : sig
    type t = _DhImportKeyParams
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_generator: t -> Uint8Array.t_0 [@@js.get "generator"]
    val set_generator: t -> Uint8Array.t_0 -> unit [@@js.set "generator"]
    val get_prime: t -> Uint8Array.t_0 [@@js.get "prime"]
    val set_prime: t -> Uint8Array.t_0 -> unit [@@js.set "prime"]
    val cast: t -> _Algorithm [@@js.cast]
  end
  module[@js.scope "DhKeyAlgorithm"] DhKeyAlgorithm : sig
    type t = _DhKeyAlgorithm
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_generator: t -> Uint8Array.t_0 [@@js.get "generator"]
    val set_generator: t -> Uint8Array.t_0 -> unit [@@js.set "generator"]
    val get_prime: t -> Uint8Array.t_0 [@@js.get "prime"]
    val set_prime: t -> Uint8Array.t_0 -> unit [@@js.set "prime"]
    val cast: t -> _KeyAlgorithm [@@js.cast]
  end
  module[@js.scope "DhKeyDeriveParams"] DhKeyDeriveParams : sig
    type t = _DhKeyDeriveParams
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_public: t -> _CryptoKey [@@js.get "public"]
    val set_public: t -> _CryptoKey -> unit [@@js.set "public"]
    val cast: t -> _Algorithm [@@js.cast]
  end
  module[@js.scope "DhKeyGenParams"] DhKeyGenParams : sig
    type t = _DhKeyGenParams
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_generator: t -> Uint8Array.t_0 [@@js.get "generator"]
    val set_generator: t -> Uint8Array.t_0 -> unit [@@js.set "generator"]
    val get_prime: t -> Uint8Array.t_0 [@@js.get "prime"]
    val set_prime: t -> Uint8Array.t_0 -> unit [@@js.set "prime"]
    val cast: t -> _Algorithm [@@js.cast]
  end
  module[@js.scope "DocumentEventMap"] DocumentEventMap : sig
    type t = _DocumentEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_fullscreenchange: t -> _Event [@@js.get "fullscreenchange"]
    val set_fullscreenchange: t -> _Event -> unit [@@js.set "fullscreenchange"]
    val get_fullscreenerror: t -> _Event [@@js.get "fullscreenerror"]
    val set_fullscreenerror: t -> _Event -> unit [@@js.set "fullscreenerror"]
    val get_pointerlockchange: t -> _Event [@@js.get "pointerlockchange"]
    val set_pointerlockchange: t -> _Event -> unit [@@js.set "pointerlockchange"]
    val get_pointerlockerror: t -> _Event [@@js.get "pointerlockerror"]
    val set_pointerlockerror: t -> _Event -> unit [@@js.set "pointerlockerror"]
    val get_readystatechange: t -> _Event [@@js.get "readystatechange"]
    val set_readystatechange: t -> _Event -> unit [@@js.set "readystatechange"]
    val get_visibilitychange: t -> _Event [@@js.get "visibilitychange"]
    val set_visibilitychange: t -> _Event -> unit [@@js.set "visibilitychange"]
    val cast: t -> _GlobalEventHandlersEventMap [@@js.cast]
    val cast': t -> _DocumentAndElementEventHandlersEventMap [@@js.cast]
  end
  module[@js.scope "Document"] Document : sig
    type t = _Document
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_URL: t -> string [@@js.get "URL"]
    val get_alinkColor: t -> string [@@js.get "alinkColor"]
    val set_alinkColor: t -> string -> unit [@@js.set "alinkColor"]
    val get_all: t -> _HTMLAllCollection [@@js.get "all"]
    val get_anchors: t -> _HTMLAnchorElement _HTMLCollectionOf [@@js.get "anchors"]
    val get_applets: t -> _HTMLAppletElement _HTMLCollectionOf [@@js.get "applets"]
    val get_bgColor: t -> string [@@js.get "bgColor"]
    val set_bgColor: t -> string -> unit [@@js.set "bgColor"]
    val get_body: t -> _HTMLElement [@@js.get "body"]
    val set_body: t -> _HTMLElement -> unit [@@js.set "body"]
    val get_characterSet: t -> string [@@js.get "characterSet"]
    val get_charset: t -> string [@@js.get "charset"]
    val get_compatMode: t -> string [@@js.get "compatMode"]
    val get_contentType: t -> string [@@js.get "contentType"]
    val get_cookie: t -> string [@@js.get "cookie"]
    val set_cookie: t -> string -> unit [@@js.set "cookie"]
    val get_currentScript: t -> _HTMLOrSVGScriptElement or_null [@@js.get "currentScript"]
    val get_defaultView: t -> _WindowProxy or_null [@@js.get "defaultView"]
    val get_designMode: t -> string [@@js.get "designMode"]
    val set_designMode: t -> string -> unit [@@js.set "designMode"]
    val get_dir: t -> string [@@js.get "dir"]
    val set_dir: t -> string -> unit [@@js.set "dir"]
    val get_doctype: t -> _DocumentType or_null [@@js.get "doctype"]
    val get_documentElement: t -> _HTMLElement [@@js.get "documentElement"]
    val get_documentURI: t -> string [@@js.get "documentURI"]
    val get_domain: t -> string [@@js.get "domain"]
    val set_domain: t -> string -> unit [@@js.set "domain"]
    val get_embeds: t -> _HTMLEmbedElement _HTMLCollectionOf [@@js.get "embeds"]
    val get_fgColor: t -> string [@@js.get "fgColor"]
    val set_fgColor: t -> string -> unit [@@js.set "fgColor"]
    val get_forms: t -> _HTMLFormElement _HTMLCollectionOf [@@js.get "forms"]
    val get_fullscreen: t -> bool [@@js.get "fullscreen"]
    val get_fullscreenEnabled: t -> bool [@@js.get "fullscreenEnabled"]
    val get_head: t -> _HTMLHeadElement [@@js.get "head"]
    val get_hidden: t -> bool [@@js.get "hidden"]
    val get_images: t -> _HTMLImageElement _HTMLCollectionOf [@@js.get "images"]
    val get_implementation: t -> _DOMImplementation [@@js.get "implementation"]
    val get_inputEncoding: t -> string [@@js.get "inputEncoding"]
    val get_lastModified: t -> string [@@js.get "lastModified"]
    val get_linkColor: t -> string [@@js.get "linkColor"]
    val set_linkColor: t -> string -> unit [@@js.set "linkColor"]
    val get_links: t -> (_HTMLAnchorElement, _HTMLAreaElement) union2 _HTMLCollectionOf [@@js.get "links"]
    val get_location: t -> _Location [@@js.get "location"]
    val set_location: t -> _Location -> unit [@@js.set "location"]
    val get_onfullscreenchange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onfullscreenchange"]
    val set_onfullscreenchange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onfullscreenchange"]
    val get_onfullscreenerror: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onfullscreenerror"]
    val set_onfullscreenerror: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onfullscreenerror"]
    val get_onpointerlockchange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onpointerlockchange"]
    val set_onpointerlockchange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onpointerlockchange"]
    val get_onpointerlockerror: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onpointerlockerror"]
    val set_onpointerlockerror: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onpointerlockerror"]
    val get_onreadystatechange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onreadystatechange"]
    val set_onreadystatechange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onreadystatechange"]
    val get_onvisibilitychange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onvisibilitychange"]
    val set_onvisibilitychange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onvisibilitychange"]
    val get_origin: t -> string [@@js.get "origin"]
    val get_plugins: t -> _HTMLEmbedElement _HTMLCollectionOf [@@js.get "plugins"]
    val get_readyState: t -> _DocumentReadyState [@@js.get "readyState"]
    val get_referrer: t -> string [@@js.get "referrer"]
    val get_scripts: t -> _HTMLScriptElement _HTMLCollectionOf [@@js.get "scripts"]
    val get_scrollingElement: t -> _Element or_null [@@js.get "scrollingElement"]
    val get_timeline: t -> _DocumentTimeline [@@js.get "timeline"]
    val get_title: t -> string [@@js.get "title"]
    val set_title: t -> string -> unit [@@js.set "title"]
    val get_visibilityState: t -> _VisibilityState [@@js.get "visibilityState"]
    val get_vlinkColor: t -> string [@@js.get "vlinkColor"]
    val set_vlinkColor: t -> string -> unit [@@js.set "vlinkColor"]
    val adoptNode: t -> source:'T -> 'T [@@js.call "adoptNode"]
    val captureEvents: t -> unit [@@js.call "captureEvents"]
    val caretPositionFromPoint: t -> x:float -> y:float -> _CaretPosition or_null [@@js.call "caretPositionFromPoint"]
    val caretRangeFromPoint: t -> x:float -> y:float -> _Range [@@js.call "caretRangeFromPoint"]
    val clear: t -> unit [@@js.call "clear"]
    val close: t -> unit [@@js.call "close"]
    val createAttribute: t -> localName:string -> _Attr [@@js.call "createAttribute"]
    val createAttributeNS: t -> namespace:string or_null -> qualifiedName:string -> _Attr [@@js.call "createAttributeNS"]
    val createCDATASection: t -> data:string -> _CDATASection [@@js.call "createCDATASection"]
    val createComment: t -> data:string -> _Comment [@@js.call "createComment"]
    val createDocumentFragment: t -> _DocumentFragment [@@js.call "createDocumentFragment"]
    val createElement: t -> tagName:'K -> ?options:_ElementCreationOptions -> unit -> (* FIXME: unknown type '{..}['K]' *)any [@@js.call "createElement"]
    val createElement': t -> tagName:'K -> ?options:_ElementCreationOptions -> unit -> (* FIXME: unknown type '{..}['K]' *)any [@@js.call "createElement"]
    val createElement'': t -> tagName:string -> ?options:_ElementCreationOptions -> unit -> _HTMLElement [@@js.call "createElement"]
    val createElementNS: t -> namespaceURI:([`L_s425_http___www_w3_org_1999_xhtml] [@js.enum]) -> qualifiedName:string -> _HTMLElement [@@js.call "createElementNS"]
    val createElementNS': t -> namespaceURI:([`L_s426_http___www_w3_org_2000_svg] [@js.enum]) -> qualifiedName:'K -> (* FIXME: unknown type '{..}['K]' *)any [@@js.call "createElementNS"]
    val createElementNS'': t -> namespaceURI:([`L_s426_http___www_w3_org_2000_svg] [@js.enum]) -> qualifiedName:string -> _SVGElement [@@js.call "createElementNS"]
    val createElementNS''': t -> namespaceURI:string or_null -> qualifiedName:string -> ?options:_ElementCreationOptions -> unit -> _Element [@@js.call "createElementNS"]
    val createElementNS'''': t -> namespace:string or_null -> qualifiedName:string -> ?options:_ElementCreationOptions or_string -> unit -> _Element [@@js.call "createElementNS"]
    val createEvent: t -> eventInterface:([`L_s5_AnimationEvent] [@js.enum]) -> _AnimationEvent [@@js.call "createEvent"]
    val createEvent': t -> eventInterface:([`L_s6_AnimationPlaybackEvent] [@js.enum]) -> _AnimationPlaybackEvent [@@js.call "createEvent"]
    val createEvent'': t -> eventInterface:([`L_s7_AudioProcessingEvent] [@js.enum]) -> _AudioProcessingEvent [@@js.call "createEvent"]
    val createEvent''': t -> eventInterface:([`L_s9_BeforeUnloadEvent] [@js.enum]) -> _BeforeUnloadEvent [@@js.call "createEvent"]
    val createEvent'''': t -> eventInterface:([`L_s10_ClipboardEvent] [@js.enum]) -> _ClipboardEvent [@@js.call "createEvent"]
    val createEvent''''': t -> eventInterface:([`L_s11_CloseEvent] [@js.enum]) -> _CloseEvent [@@js.call "createEvent"]
    val createEvent'''''': t -> eventInterface:([`L_s12_CompositionEvent] [@js.enum]) -> _CompositionEvent [@@js.call "createEvent"]
    val createEvent''''''': t -> eventInterface:([`L_s13_CustomEvent] [@js.enum]) -> any _CustomEvent [@@js.call "createEvent"]
    val createEvent'''''''': t -> eventInterface:([`L_s14_DeviceLightEvent] [@js.enum]) -> _DeviceLightEvent [@@js.call "createEvent"]
    val createEvent''''''''': t -> eventInterface:([`L_s15_DeviceMotionEvent] [@js.enum]) -> _DeviceMotionEvent [@@js.call "createEvent"]
    val createEvent'''''''''': t -> eventInterface:([`L_s16_DeviceOrientationEvent] [@js.enum]) -> _DeviceOrientationEvent [@@js.call "createEvent"]
    val createEvent''''''''''': t -> eventInterface:([`L_s17_DragEvent] [@js.enum]) -> _DragEvent [@@js.call "createEvent"]
    val createEvent'''''''''''': t -> eventInterface:([`L_s24_ErrorEvent] [@js.enum]) -> _ErrorEvent [@@js.call "createEvent"]
    val createEvent''''''''''''': t -> eventInterface:([`L_s25_Event] [@js.enum]) -> _Event [@@js.call "createEvent"]
    val createEvent'''''''''''''': t -> eventInterface:([`L_s26_Events] [@js.enum]) -> _Event [@@js.call "createEvent"]
    val createEvent''''''''''''''': t -> eventInterface:([`L_s28_FocusEvent] [@js.enum]) -> _FocusEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''': t -> eventInterface:([`L_s29_FocusNavigationEvent] [@js.enum]) -> _FocusNavigationEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''': t -> eventInterface:([`L_s30_GamepadEvent] [@js.enum]) -> _GamepadEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''': t -> eventInterface:([`L_s32_HashChangeEvent] [@js.enum]) -> _HashChangeEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''': t -> eventInterface:([`L_s33_IDBVersionChangeEvent] [@js.enum]) -> _IDBVersionChangeEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''': t -> eventInterface:([`L_s34_InputEvent] [@js.enum]) -> _InputEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''': t -> eventInterface:([`L_s35_KeyboardEvent] [@js.enum]) -> _KeyboardEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''': t -> eventInterface:([`L_s36_ListeningStateChangedEvent] [@js.enum]) -> _ListeningStateChangedEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''': t -> eventInterface:([`L_s43_MSGestureEvent] [@js.enum]) -> _MSGestureEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''': t -> eventInterface:([`L_s48_MSMediaKeyMessageEvent] [@js.enum]) -> _MSMediaKeyMessageEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''': t -> eventInterface:([`L_s49_MSMediaKeyNeededEvent] [@js.enum]) -> _MSMediaKeyNeededEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''': t -> eventInterface:([`L_s53_MSPointerEvent] [@js.enum]) -> _MSPointerEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''': t -> eventInterface:([`L_s62_MediaEncryptedEvent] [@js.enum]) -> _MediaEncryptedEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''': t -> eventInterface:([`L_s63_MediaKeyMessageEvent] [@js.enum]) -> _MediaKeyMessageEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''': t -> eventInterface:([`L_s64_MediaQueryListEvent] [@js.enum]) -> _MediaQueryListEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''': t -> eventInterface:([`L_s65_MediaStreamErrorEvent] [@js.enum]) -> _MediaStreamErrorEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s66_MediaStreamEvent] [@js.enum]) -> _MediaStreamEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s67_MediaStreamTrackEvent] [@js.enum]) -> _MediaStreamTrackEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s68_MessageEvent] [@js.enum]) -> _MessageEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s69_MouseEvent] [@js.enum]) -> _MouseEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s70_MouseEvents] [@js.enum]) -> _MouseEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s71_MutationEvent] [@js.enum]) -> _MutationEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s72_MutationEvents] [@js.enum]) -> _MutationEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s81_OfflineAudioCompletionEvent] [@js.enum]) -> _OfflineAudioCompletionEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s82_OverflowEvent] [@js.enum]) -> _OverflowEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s83_PageTransitionEvent] [@js.enum]) -> _PageTransitionEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s84_PaymentRequestUpdateEvent] [@js.enum]) -> _PaymentRequestUpdateEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s85_PermissionRequestedEvent] [@js.enum]) -> _PermissionRequestedEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s86_PointerEvent] [@js.enum]) -> _PointerEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s87_PopStateEvent] [@js.enum]) -> _PopStateEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s88_ProgressEvent] [@js.enum]) -> _EventTarget _ProgressEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s89_PromiseRejectionEvent] [@js.enum]) -> _PromiseRejectionEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s90_RTCDTMFToneChangeEvent] [@js.enum]) -> _RTCDTMFToneChangeEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s91_RTCDataChannelEvent] [@js.enum]) -> _RTCDataChannelEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s92_RTCDtlsTransportStateChangedEvent] [@js.enum]) -> _RTCDtlsTransportStateChangedEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s93_RTCErrorEvent] [@js.enum]) -> _RTCErrorEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s94_RTCIceCandidatePairChangedEvent] [@js.enum]) -> _RTCIceCandidatePairChangedEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s95_RTCIceGathererEvent] [@js.enum]) -> _RTCIceGathererEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s96_RTCIceTransportStateChangedEvent] [@js.enum]) -> _RTCIceTransportStateChangedEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s97_RTCPeerConnectionIceErrorEvent] [@js.enum]) -> _RTCPeerConnectionIceErrorEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s98_RTCPeerConnectionIceEvent] [@js.enum]) -> _RTCPeerConnectionIceEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s99_RTCSsrcConflictEvent] [@js.enum]) -> _RTCSsrcConflictEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s100_RTCStatsEvent] [@js.enum]) -> _RTCStatsEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s101_RTCTrackEvent] [@js.enum]) -> _RTCTrackEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s104_SVGZoomEvent] [@js.enum]) -> _SVGZoomEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s105_SVGZoomEvents] [@js.enum]) -> _SVGZoomEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s107_SecurityPolicyViolationEvent] [@js.enum]) -> _SecurityPolicyViolationEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s108_ServiceWorkerMessageEvent] [@js.enum]) -> _ServiceWorkerMessageEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s109_SpeechRecognitionEvent] [@js.enum]) -> _SpeechRecognitionEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s110_SpeechSynthesisErrorEvent] [@js.enum]) -> _SpeechSynthesisErrorEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s111_SpeechSynthesisEvent] [@js.enum]) -> _SpeechSynthesisEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s112_StorageEvent] [@js.enum]) -> _StorageEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s113_TextEvent] [@js.enum]) -> _TextEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s114_TouchEvent] [@js.enum]) -> _TouchEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s115_TrackEvent] [@js.enum]) -> _TrackEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s116_TransitionEvent] [@js.enum]) -> _TransitionEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s117_UIEvent] [@js.enum]) -> _UIEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s118_UIEvents] [@js.enum]) -> _UIEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s120_VRDisplayEvent] [@js.enum]) -> _VRDisplayEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s121_VRDisplayEvent_] [@js.enum]) -> _VRDisplayEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s131_WebGLContextEvent] [@js.enum]) -> _WebGLContextEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s132_WheelEvent] [@js.enum]) -> _WheelEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:string -> _Event [@@js.call "createEvent"]
    val createNodeIterator: t -> root:_Node -> ?whatToShow:float -> ?filter:_NodeFilter or_null -> unit -> _NodeIterator [@@js.call "createNodeIterator"]
    val createProcessingInstruction: t -> target:string -> data:string -> _ProcessingInstruction [@@js.call "createProcessingInstruction"]
    val createRange: t -> _Range [@@js.call "createRange"]
    val createTextNode: t -> data:string -> _Text [@@js.call "createTextNode"]
    val createTreeWalker: t -> root:_Node -> ?whatToShow:float -> ?filter:_NodeFilter or_null -> unit -> _TreeWalker [@@js.call "createTreeWalker"]
    val createTreeWalker': t -> root:_Node -> whatToShow:float -> filter:_NodeFilter or_null -> ?entityReferenceExpansion:bool -> unit -> _TreeWalker [@@js.call "createTreeWalker"]
    val elementFromPoint: t -> x:float -> y:float -> _Element or_null [@@js.call "elementFromPoint"]
    val elementsFromPoint: t -> x:float -> y:float -> _Element list [@@js.call "elementsFromPoint"]
    val execCommand: t -> commandId:string -> ?showUI:bool -> ?value:string -> unit -> bool [@@js.call "execCommand"]
    val exitFullscreen: t -> unit Promise.t_1 [@@js.call "exitFullscreen"]
    val exitPointerLock: t -> unit [@@js.call "exitPointerLock"]
    val getAnimations: t -> _Animation list [@@js.call "getAnimations"]
    val getElementById: t -> elementId:string -> _HTMLElement or_null [@@js.call "getElementById"]
    val getElementsByClassName: t -> classNames:string -> _Element _HTMLCollectionOf [@@js.call "getElementsByClassName"]
    val getElementsByName: t -> elementName:string -> _HTMLElement _NodeListOf [@@js.call "getElementsByName"]
    val getElementsByTagName: t -> qualifiedName:'K -> (* FIXME: unknown type '{..}['K]' *)any _HTMLCollectionOf [@@js.call "getElementsByTagName"]
    val getElementsByTagName': t -> qualifiedName:'K -> (* FIXME: unknown type '{..}['K]' *)any _HTMLCollectionOf [@@js.call "getElementsByTagName"]
    val getElementsByTagName'': t -> qualifiedName:string -> _Element _HTMLCollectionOf [@@js.call "getElementsByTagName"]
    val getElementsByTagNameNS: t -> namespaceURI:([`L_s425_http___www_w3_org_1999_xhtml] [@js.enum]) -> localName:string -> _HTMLElement _HTMLCollectionOf [@@js.call "getElementsByTagNameNS"]
    val getElementsByTagNameNS': t -> namespaceURI:([`L_s426_http___www_w3_org_2000_svg] [@js.enum]) -> localName:string -> _SVGElement _HTMLCollectionOf [@@js.call "getElementsByTagNameNS"]
    val getElementsByTagNameNS'': t -> namespaceURI:string -> localName:string -> _Element _HTMLCollectionOf [@@js.call "getElementsByTagNameNS"]
    val getSelection: t -> _Selection or_null [@@js.call "getSelection"]
    val hasFocus: t -> bool [@@js.call "hasFocus"]
    val importNode: t -> importedNode:'T -> deep:bool -> 'T [@@js.call "importNode"]
    val open_: t -> ?url:string -> ?name:string -> ?features:string -> ?replace:bool -> unit -> t [@@js.call "open"]
    val queryCommandEnabled: t -> commandId:string -> bool [@@js.call "queryCommandEnabled"]
    val queryCommandIndeterm: t -> commandId:string -> bool [@@js.call "queryCommandIndeterm"]
    val queryCommandState: t -> commandId:string -> bool [@@js.call "queryCommandState"]
    val queryCommandSupported: t -> commandId:string -> bool [@@js.call "queryCommandSupported"]
    val queryCommandValue: t -> commandId:string -> string [@@js.call "queryCommandValue"]
    val releaseEvents: t -> unit [@@js.call "releaseEvents"]
    val write: t -> text:(string list [@js.variadic]) -> unit [@@js.call "write"]
    val writeln: t -> text:(string list [@js.variadic]) -> unit [@@js.call "writeln"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _Node [@@js.cast]
    val cast': t -> _DocumentAndElementEventHandlers [@@js.cast]
    val cast'': t -> _DocumentOrShadowRoot [@@js.cast]
    val cast''': t -> _GlobalEventHandlers [@@js.cast]
    val cast'''': t -> _NonElementParentNode [@@js.cast]
    val cast''''': t -> _ParentNode [@@js.cast]
    val cast'''''': t -> _XPathEvaluatorBase [@@js.cast]
  end
  val document: anonymous_interface_112 [@@js.global "Document"]
  module[@js.scope "DocumentAndElementEventHandlersEventMap"] DocumentAndElementEventHandlersEventMap : sig
    type t = _DocumentAndElementEventHandlersEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_copy: t -> _ClipboardEvent [@@js.get "copy"]
    val set_copy: t -> _ClipboardEvent -> unit [@@js.set "copy"]
    val get_cut: t -> _ClipboardEvent [@@js.get "cut"]
    val set_cut: t -> _ClipboardEvent -> unit [@@js.set "cut"]
    val get_paste: t -> _ClipboardEvent [@@js.get "paste"]
    val set_paste: t -> _ClipboardEvent -> unit [@@js.set "paste"]
  end
  module[@js.scope "DocumentAndElementEventHandlers"] DocumentAndElementEventHandlers : sig
    type t = _DocumentAndElementEventHandlers
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_oncopy: t -> (this:t -> ev:_ClipboardEvent -> any) or_null [@@js.get "oncopy"]
    val set_oncopy: t -> (this:t -> ev:_ClipboardEvent -> any) or_null -> unit [@@js.set "oncopy"]
    val get_oncut: t -> (this:t -> ev:_ClipboardEvent -> any) or_null [@@js.get "oncut"]
    val set_oncut: t -> (this:t -> ev:_ClipboardEvent -> any) or_null -> unit [@@js.set "oncut"]
    val get_onpaste: t -> (this:t -> ev:_ClipboardEvent -> any) or_null [@@js.get "onpaste"]
    val set_onpaste: t -> (this:t -> ev:_ClipboardEvent -> any) or_null -> unit [@@js.set "onpaste"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
  end
  module[@js.scope "DocumentEvent"] DocumentEvent : sig
    type t = _DocumentEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val createEvent: t -> eventInterface:([`L_s5_AnimationEvent] [@js.enum]) -> _AnimationEvent [@@js.call "createEvent"]
    val createEvent': t -> eventInterface:([`L_s6_AnimationPlaybackEvent] [@js.enum]) -> _AnimationPlaybackEvent [@@js.call "createEvent"]
    val createEvent'': t -> eventInterface:([`L_s7_AudioProcessingEvent] [@js.enum]) -> _AudioProcessingEvent [@@js.call "createEvent"]
    val createEvent''': t -> eventInterface:([`L_s9_BeforeUnloadEvent] [@js.enum]) -> _BeforeUnloadEvent [@@js.call "createEvent"]
    val createEvent'''': t -> eventInterface:([`L_s10_ClipboardEvent] [@js.enum]) -> _ClipboardEvent [@@js.call "createEvent"]
    val createEvent''''': t -> eventInterface:([`L_s11_CloseEvent] [@js.enum]) -> _CloseEvent [@@js.call "createEvent"]
    val createEvent'''''': t -> eventInterface:([`L_s12_CompositionEvent] [@js.enum]) -> _CompositionEvent [@@js.call "createEvent"]
    val createEvent''''''': t -> eventInterface:([`L_s13_CustomEvent] [@js.enum]) -> any _CustomEvent [@@js.call "createEvent"]
    val createEvent'''''''': t -> eventInterface:([`L_s14_DeviceLightEvent] [@js.enum]) -> _DeviceLightEvent [@@js.call "createEvent"]
    val createEvent''''''''': t -> eventInterface:([`L_s15_DeviceMotionEvent] [@js.enum]) -> _DeviceMotionEvent [@@js.call "createEvent"]
    val createEvent'''''''''': t -> eventInterface:([`L_s16_DeviceOrientationEvent] [@js.enum]) -> _DeviceOrientationEvent [@@js.call "createEvent"]
    val createEvent''''''''''': t -> eventInterface:([`L_s17_DragEvent] [@js.enum]) -> _DragEvent [@@js.call "createEvent"]
    val createEvent'''''''''''': t -> eventInterface:([`L_s24_ErrorEvent] [@js.enum]) -> _ErrorEvent [@@js.call "createEvent"]
    val createEvent''''''''''''': t -> eventInterface:([`L_s25_Event] [@js.enum]) -> _Event [@@js.call "createEvent"]
    val createEvent'''''''''''''': t -> eventInterface:([`L_s26_Events] [@js.enum]) -> _Event [@@js.call "createEvent"]
    val createEvent''''''''''''''': t -> eventInterface:([`L_s28_FocusEvent] [@js.enum]) -> _FocusEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''': t -> eventInterface:([`L_s29_FocusNavigationEvent] [@js.enum]) -> _FocusNavigationEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''': t -> eventInterface:([`L_s30_GamepadEvent] [@js.enum]) -> _GamepadEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''': t -> eventInterface:([`L_s32_HashChangeEvent] [@js.enum]) -> _HashChangeEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''': t -> eventInterface:([`L_s33_IDBVersionChangeEvent] [@js.enum]) -> _IDBVersionChangeEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''': t -> eventInterface:([`L_s34_InputEvent] [@js.enum]) -> _InputEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''': t -> eventInterface:([`L_s35_KeyboardEvent] [@js.enum]) -> _KeyboardEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''': t -> eventInterface:([`L_s36_ListeningStateChangedEvent] [@js.enum]) -> _ListeningStateChangedEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''': t -> eventInterface:([`L_s43_MSGestureEvent] [@js.enum]) -> _MSGestureEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''': t -> eventInterface:([`L_s48_MSMediaKeyMessageEvent] [@js.enum]) -> _MSMediaKeyMessageEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''': t -> eventInterface:([`L_s49_MSMediaKeyNeededEvent] [@js.enum]) -> _MSMediaKeyNeededEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''': t -> eventInterface:([`L_s53_MSPointerEvent] [@js.enum]) -> _MSPointerEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''': t -> eventInterface:([`L_s62_MediaEncryptedEvent] [@js.enum]) -> _MediaEncryptedEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''': t -> eventInterface:([`L_s63_MediaKeyMessageEvent] [@js.enum]) -> _MediaKeyMessageEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''': t -> eventInterface:([`L_s64_MediaQueryListEvent] [@js.enum]) -> _MediaQueryListEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''': t -> eventInterface:([`L_s65_MediaStreamErrorEvent] [@js.enum]) -> _MediaStreamErrorEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s66_MediaStreamEvent] [@js.enum]) -> _MediaStreamEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s67_MediaStreamTrackEvent] [@js.enum]) -> _MediaStreamTrackEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s68_MessageEvent] [@js.enum]) -> _MessageEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s69_MouseEvent] [@js.enum]) -> _MouseEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s70_MouseEvents] [@js.enum]) -> _MouseEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s71_MutationEvent] [@js.enum]) -> _MutationEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s72_MutationEvents] [@js.enum]) -> _MutationEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s81_OfflineAudioCompletionEvent] [@js.enum]) -> _OfflineAudioCompletionEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s82_OverflowEvent] [@js.enum]) -> _OverflowEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s83_PageTransitionEvent] [@js.enum]) -> _PageTransitionEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s84_PaymentRequestUpdateEvent] [@js.enum]) -> _PaymentRequestUpdateEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s85_PermissionRequestedEvent] [@js.enum]) -> _PermissionRequestedEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s86_PointerEvent] [@js.enum]) -> _PointerEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s87_PopStateEvent] [@js.enum]) -> _PopStateEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s88_ProgressEvent] [@js.enum]) -> _EventTarget _ProgressEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s89_PromiseRejectionEvent] [@js.enum]) -> _PromiseRejectionEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s90_RTCDTMFToneChangeEvent] [@js.enum]) -> _RTCDTMFToneChangeEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s91_RTCDataChannelEvent] [@js.enum]) -> _RTCDataChannelEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s92_RTCDtlsTransportStateChangedEvent] [@js.enum]) -> _RTCDtlsTransportStateChangedEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s93_RTCErrorEvent] [@js.enum]) -> _RTCErrorEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s94_RTCIceCandidatePairChangedEvent] [@js.enum]) -> _RTCIceCandidatePairChangedEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s95_RTCIceGathererEvent] [@js.enum]) -> _RTCIceGathererEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s96_RTCIceTransportStateChangedEvent] [@js.enum]) -> _RTCIceTransportStateChangedEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s97_RTCPeerConnectionIceErrorEvent] [@js.enum]) -> _RTCPeerConnectionIceErrorEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s98_RTCPeerConnectionIceEvent] [@js.enum]) -> _RTCPeerConnectionIceEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s99_RTCSsrcConflictEvent] [@js.enum]) -> _RTCSsrcConflictEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s100_RTCStatsEvent] [@js.enum]) -> _RTCStatsEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s101_RTCTrackEvent] [@js.enum]) -> _RTCTrackEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s104_SVGZoomEvent] [@js.enum]) -> _SVGZoomEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s105_SVGZoomEvents] [@js.enum]) -> _SVGZoomEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s107_SecurityPolicyViolationEvent] [@js.enum]) -> _SecurityPolicyViolationEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s108_ServiceWorkerMessageEvent] [@js.enum]) -> _ServiceWorkerMessageEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s109_SpeechRecognitionEvent] [@js.enum]) -> _SpeechRecognitionEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s110_SpeechSynthesisErrorEvent] [@js.enum]) -> _SpeechSynthesisErrorEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s111_SpeechSynthesisEvent] [@js.enum]) -> _SpeechSynthesisEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s112_StorageEvent] [@js.enum]) -> _StorageEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s113_TextEvent] [@js.enum]) -> _TextEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s114_TouchEvent] [@js.enum]) -> _TouchEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s115_TrackEvent] [@js.enum]) -> _TrackEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s116_TransitionEvent] [@js.enum]) -> _TransitionEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s117_UIEvent] [@js.enum]) -> _UIEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s118_UIEvents] [@js.enum]) -> _UIEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s120_VRDisplayEvent] [@js.enum]) -> _VRDisplayEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s121_VRDisplayEvent_] [@js.enum]) -> _VRDisplayEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s131_WebGLContextEvent] [@js.enum]) -> _WebGLContextEvent [@@js.call "createEvent"]
    val createEvent'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:([`L_s132_WheelEvent] [@js.enum]) -> _WheelEvent [@@js.call "createEvent"]
    val createEvent''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''': t -> eventInterface:string -> _Event [@@js.call "createEvent"]
  end
  module[@js.scope "DocumentFragment"] DocumentFragment : sig
    type t = _DocumentFragment
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val getElementById: t -> elementId:string -> _HTMLElement or_null [@@js.call "getElementById"]
    val cast: t -> _Node [@@js.cast]
    val cast': t -> _NonElementParentNode [@@js.cast]
    val cast'': t -> _ParentNode [@@js.cast]
  end
  val documentFragment: anonymous_interface_113 [@@js.global "DocumentFragment"]
  module[@js.scope "DocumentOrShadowRoot"] DocumentOrShadowRoot : sig
    type t = _DocumentOrShadowRoot
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_activeElement: t -> _Element or_null [@@js.get "activeElement"]
    val get_fullscreenElement: t -> _Element or_null [@@js.get "fullscreenElement"]
    val get_pointerLockElement: t -> _Element or_null [@@js.get "pointerLockElement"]
    val get_styleSheets: t -> _StyleSheetList [@@js.get "styleSheets"]
    val caretPositionFromPoint: t -> x:float -> y:float -> _CaretPosition or_null [@@js.call "caretPositionFromPoint"]
    val caretRangeFromPoint: t -> x:float -> y:float -> _Range [@@js.call "caretRangeFromPoint"]
    val elementFromPoint: t -> x:float -> y:float -> _Element or_null [@@js.call "elementFromPoint"]
    val elementsFromPoint: t -> x:float -> y:float -> _Element list [@@js.call "elementsFromPoint"]
    val getSelection: t -> _Selection or_null [@@js.call "getSelection"]
  end
  module[@js.scope "DocumentTimeline"] DocumentTimeline : sig
    type t = _DocumentTimeline
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val cast: t -> _AnimationTimeline [@@js.cast]
  end
  val documentTimeline: anonymous_interface_114 [@@js.global "DocumentTimeline"]
  module[@js.scope "DocumentType"] DocumentType : sig
    type t = _DocumentType
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_name: t -> string [@@js.get "name"]
    val get_publicId: t -> string [@@js.get "publicId"]
    val get_systemId: t -> string [@@js.get "systemId"]
    val cast: t -> _Node [@@js.cast]
    val cast': t -> _ChildNode [@@js.cast]
  end
  val documentType: anonymous_interface_115 [@@js.global "DocumentType"]
  module[@js.scope "DragEvent"] DragEvent : sig
    type t = _DragEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_dataTransfer: t -> _DataTransfer or_null [@@js.get "dataTransfer"]
    val cast: t -> _MouseEvent [@@js.cast]
  end
  val dragEvent: anonymous_interface_116 [@@js.global "DragEvent"]
  module[@js.scope "DynamicsCompressorNode"] DynamicsCompressorNode : sig
    type t = _DynamicsCompressorNode
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_attack: t -> _AudioParam [@@js.get "attack"]
    val get_knee: t -> _AudioParam [@@js.get "knee"]
    val get_ratio: t -> _AudioParam [@@js.get "ratio"]
    val get_reduction: t -> float [@@js.get "reduction"]
    val get_release: t -> _AudioParam [@@js.get "release"]
    val get_threshold: t -> _AudioParam [@@js.get "threshold"]
    val cast: t -> _AudioNode [@@js.cast]
  end
  val dynamicsCompressorNode: anonymous_interface_117 [@@js.global "DynamicsCompressorNode"]
  module[@js.scope "EXT_blend_minmax"] EXT_blend_minmax : sig
    type t = _EXT_blend_minmax
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_MAX_EXT: t -> _GLenum [@@js.get "MAX_EXT"]
    val get_MIN_EXT: t -> _GLenum [@@js.get "MIN_EXT"]
  end
  module EXT_frag_depth : sig
    type t = _EXT_frag_depth
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module[@js.scope "EXT_sRGB"] EXT_sRGB : sig
    type t = _EXT_sRGB
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT: t -> _GLenum [@@js.get "FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT"]
    val get_SRGB8_ALPHA8_EXT: t -> _GLenum [@@js.get "SRGB8_ALPHA8_EXT"]
    val get_SRGB_ALPHA_EXT: t -> _GLenum [@@js.get "SRGB_ALPHA_EXT"]
    val get_SRGB_EXT: t -> _GLenum [@@js.get "SRGB_EXT"]
  end
  module EXT_shader_texture_lod : sig
    type t = _EXT_shader_texture_lod
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module[@js.scope "EXT_texture_filter_anisotropic"] EXT_texture_filter_anisotropic : sig
    type t = _EXT_texture_filter_anisotropic
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_MAX_TEXTURE_MAX_ANISOTROPY_EXT: t -> _GLenum [@@js.get "MAX_TEXTURE_MAX_ANISOTROPY_EXT"]
    val get_TEXTURE_MAX_ANISOTROPY_EXT: t -> _GLenum [@@js.get "TEXTURE_MAX_ANISOTROPY_EXT"]
  end
  module[@js.scope "ElementEventMap"] ElementEventMap : sig
    type t = _ElementEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_fullscreenchange: t -> _Event [@@js.get "fullscreenchange"]
    val set_fullscreenchange: t -> _Event -> unit [@@js.set "fullscreenchange"]
    val get_fullscreenerror: t -> _Event [@@js.get "fullscreenerror"]
    val set_fullscreenerror: t -> _Event -> unit [@@js.set "fullscreenerror"]
  end
  module[@js.scope "Element"] Element : sig
    type t = _Element
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_assignedSlot: t -> _HTMLSlotElement or_null [@@js.get "assignedSlot"]
    val get_attributes: t -> _NamedNodeMap [@@js.get "attributes"]
    val get_classList: t -> _DOMTokenList [@@js.get "classList"]
    val get_className: t -> string [@@js.get "className"]
    val set_className: t -> string -> unit [@@js.set "className"]
    val get_clientHeight: t -> float [@@js.get "clientHeight"]
    val get_clientLeft: t -> float [@@js.get "clientLeft"]
    val get_clientTop: t -> float [@@js.get "clientTop"]
    val get_clientWidth: t -> float [@@js.get "clientWidth"]
    val get_id: t -> string [@@js.get "id"]
    val set_id: t -> string -> unit [@@js.set "id"]
    val get_localName: t -> string [@@js.get "localName"]
    val get_namespaceURI: t -> string or_null [@@js.get "namespaceURI"]
    val get_onfullscreenchange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onfullscreenchange"]
    val set_onfullscreenchange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onfullscreenchange"]
    val get_onfullscreenerror: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onfullscreenerror"]
    val set_onfullscreenerror: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onfullscreenerror"]
    val get_outerHTML: t -> string [@@js.get "outerHTML"]
    val set_outerHTML: t -> string -> unit [@@js.set "outerHTML"]
    val get_prefix: t -> string or_null [@@js.get "prefix"]
    val get_scrollHeight: t -> float [@@js.get "scrollHeight"]
    val get_scrollLeft: t -> float [@@js.get "scrollLeft"]
    val set_scrollLeft: t -> float -> unit [@@js.set "scrollLeft"]
    val get_scrollTop: t -> float [@@js.get "scrollTop"]
    val set_scrollTop: t -> float -> unit [@@js.set "scrollTop"]
    val get_scrollWidth: t -> float [@@js.get "scrollWidth"]
    val get_shadowRoot: t -> _ShadowRoot or_null [@@js.get "shadowRoot"]
    val get_slot: t -> string [@@js.get "slot"]
    val set_slot: t -> string -> unit [@@js.set "slot"]
    val get_tagName: t -> string [@@js.get "tagName"]
    val attachShadow: t -> init:_ShadowRootInit -> _ShadowRoot [@@js.call "attachShadow"]
    val closest: t -> selector:'K -> (* FIXME: unknown type '{..}['K]' *)any or_null [@@js.call "closest"]
    val closest': t -> selector:'K -> (* FIXME: unknown type '{..}['K]' *)any or_null [@@js.call "closest"]
    val closest'': t -> selector:string -> 'E or_null [@@js.call "closest"]
    val getAttribute: t -> qualifiedName:string -> string or_null [@@js.call "getAttribute"]
    val getAttributeNS: t -> namespace:string or_null -> localName:string -> string or_null [@@js.call "getAttributeNS"]
    val getAttributeNames: t -> string list [@@js.call "getAttributeNames"]
    val getAttributeNode: t -> name:string -> _Attr or_null [@@js.call "getAttributeNode"]
    val getAttributeNodeNS: t -> namespaceURI:string -> localName:string -> _Attr or_null [@@js.call "getAttributeNodeNS"]
    val getBoundingClientRect: t -> _DOMRect [@@js.call "getBoundingClientRect"]
    val getClientRects: t -> _DOMRectList [@@js.call "getClientRects"]
    val getElementsByClassName: t -> classNames:string -> t _HTMLCollectionOf [@@js.call "getElementsByClassName"]
    val getElementsByTagName: t -> qualifiedName:'K -> (* FIXME: unknown type '{..}['K]' *)any _HTMLCollectionOf [@@js.call "getElementsByTagName"]
    val getElementsByTagName': t -> qualifiedName:'K -> (* FIXME: unknown type '{..}['K]' *)any _HTMLCollectionOf [@@js.call "getElementsByTagName"]
    val getElementsByTagName'': t -> qualifiedName:string -> t _HTMLCollectionOf [@@js.call "getElementsByTagName"]
    val getElementsByTagNameNS: t -> namespaceURI:([`L_s425_http___www_w3_org_1999_xhtml] [@js.enum]) -> localName:string -> _HTMLElement _HTMLCollectionOf [@@js.call "getElementsByTagNameNS"]
    val getElementsByTagNameNS': t -> namespaceURI:([`L_s426_http___www_w3_org_2000_svg] [@js.enum]) -> localName:string -> _SVGElement _HTMLCollectionOf [@@js.call "getElementsByTagNameNS"]
    val getElementsByTagNameNS'': t -> namespaceURI:string -> localName:string -> t _HTMLCollectionOf [@@js.call "getElementsByTagNameNS"]
    val hasAttribute: t -> qualifiedName:string -> bool [@@js.call "hasAttribute"]
    val hasAttributeNS: t -> namespace:string or_null -> localName:string -> bool [@@js.call "hasAttributeNS"]
    val hasAttributes: t -> bool [@@js.call "hasAttributes"]
    val hasPointerCapture: t -> pointerId:float -> bool [@@js.call "hasPointerCapture"]
    val insertAdjacentElement: t -> position:_InsertPosition -> insertedElement:t -> t or_null [@@js.call "insertAdjacentElement"]
    val insertAdjacentHTML: t -> where:_InsertPosition -> html:string -> unit [@@js.call "insertAdjacentHTML"]
    val insertAdjacentText: t -> where:_InsertPosition -> text:string -> unit [@@js.call "insertAdjacentText"]
    val matches: t -> selectors:string -> bool [@@js.call "matches"]
    val msGetRegionContent: t -> any [@@js.call "msGetRegionContent"]
    val releasePointerCapture: t -> pointerId:float -> unit [@@js.call "releasePointerCapture"]
    val removeAttribute: t -> qualifiedName:string -> unit [@@js.call "removeAttribute"]
    val removeAttributeNS: t -> namespace:string or_null -> localName:string -> unit [@@js.call "removeAttributeNS"]
    val removeAttributeNode: t -> attr:_Attr -> _Attr [@@js.call "removeAttributeNode"]
    val requestFullscreen: t -> ?options:_FullscreenOptions -> unit -> unit Promise.t_1 [@@js.call "requestFullscreen"]
    val requestPointerLock: t -> unit [@@js.call "requestPointerLock"]
    val scroll: t -> ?options:_ScrollToOptions -> unit -> unit [@@js.call "scroll"]
    val scroll': t -> x:float -> y:float -> unit [@@js.call "scroll"]
    val scrollBy: t -> ?options:_ScrollToOptions -> unit -> unit [@@js.call "scrollBy"]
    val scrollBy': t -> x:float -> y:float -> unit [@@js.call "scrollBy"]
    val scrollIntoView: t -> ?arg:_ScrollIntoViewOptions or_boolean -> unit -> unit [@@js.call "scrollIntoView"]
    val scrollTo: t -> ?options:_ScrollToOptions -> unit -> unit [@@js.call "scrollTo"]
    val scrollTo': t -> x:float -> y:float -> unit [@@js.call "scrollTo"]
    val setAttribute: t -> qualifiedName:string -> value:string -> unit [@@js.call "setAttribute"]
    val setAttributeNS: t -> namespace:string or_null -> qualifiedName:string -> value:string -> unit [@@js.call "setAttributeNS"]
    val setAttributeNode: t -> attr:_Attr -> _Attr or_null [@@js.call "setAttributeNode"]
    val setAttributeNodeNS: t -> attr:_Attr -> _Attr or_null [@@js.call "setAttributeNodeNS"]
    val setPointerCapture: t -> pointerId:float -> unit [@@js.call "setPointerCapture"]
    val toggleAttribute: t -> qualifiedName:string -> ?force:bool -> unit -> bool [@@js.call "toggleAttribute"]
    val webkitMatchesSelector: t -> selectors:string -> bool [@@js.call "webkitMatchesSelector"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _Node [@@js.cast]
    val cast': t -> _Animatable [@@js.cast]
    val cast'': t -> _ChildNode [@@js.cast]
    val cast''': t -> _InnerHTML [@@js.cast]
    val cast'''': t -> _NonDocumentTypeChildNode [@@js.cast]
    val cast''''': t -> _ParentNode [@@js.cast]
    val cast'''''': t -> _Slotable [@@js.cast]
  end
  val element: anonymous_interface_118 [@@js.global "Element"]
  module[@js.scope "ElementCSSInlineStyle"] ElementCSSInlineStyle : sig
    type t = _ElementCSSInlineStyle
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_style: t -> _CSSStyleDeclaration [@@js.get "style"]
  end
  module[@js.scope "ElementContentEditable"] ElementContentEditable : sig
    type t = _ElementContentEditable
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_contentEditable: t -> string [@@js.get "contentEditable"]
    val set_contentEditable: t -> string -> unit [@@js.set "contentEditable"]
    val get_inputMode: t -> string [@@js.get "inputMode"]
    val set_inputMode: t -> string -> unit [@@js.set "inputMode"]
    val get_isContentEditable: t -> bool [@@js.get "isContentEditable"]
  end
  module[@js.scope "ErrorEvent"] ErrorEvent : sig
    type t = _ErrorEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_colno: t -> float [@@js.get "colno"]
    val get_error: t -> any [@@js.get "error"]
    val get_filename: t -> string [@@js.get "filename"]
    val get_lineno: t -> float [@@js.get "lineno"]
    val get_message: t -> string [@@js.get "message"]
    val cast: t -> _Event [@@js.cast]
  end
  val errorEvent: anonymous_interface_119 [@@js.global "ErrorEvent"]
  module[@js.scope "Event"] Event : sig
    type t = _Event
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_bubbles: t -> bool [@@js.get "bubbles"]
    val get_cancelBubble: t -> bool [@@js.get "cancelBubble"]
    val set_cancelBubble: t -> bool -> unit [@@js.set "cancelBubble"]
    val get_cancelable: t -> bool [@@js.get "cancelable"]
    val get_composed: t -> bool [@@js.get "composed"]
    val get_currentTarget: t -> _EventTarget or_null [@@js.get "currentTarget"]
    val get_defaultPrevented: t -> bool [@@js.get "defaultPrevented"]
    val get_eventPhase: t -> float [@@js.get "eventPhase"]
    val get_isTrusted: t -> bool [@@js.get "isTrusted"]
    val get_returnValue: t -> bool [@@js.get "returnValue"]
    val set_returnValue: t -> bool -> unit [@@js.set "returnValue"]
    val get_srcElement: t -> _EventTarget or_null [@@js.get "srcElement"]
    val get_target: t -> _EventTarget or_null [@@js.get "target"]
    val get_timeStamp: t -> float [@@js.get "timeStamp"]
    val get_type: t -> string [@@js.get "type"]
    val composedPath: t -> _EventTarget list [@@js.call "composedPath"]
    val initEvent: t -> type_:string -> ?bubbles:bool -> ?cancelable:bool -> unit -> unit [@@js.call "initEvent"]
    val preventDefault: t -> unit [@@js.call "preventDefault"]
    val stopImmediatePropagation: t -> unit [@@js.call "stopImmediatePropagation"]
    val stopPropagation: t -> unit [@@js.call "stopPropagation"]
    val get_AT_TARGET: t -> float [@@js.get "AT_TARGET"]
    val get_BUBBLING_PHASE: t -> float [@@js.get "BUBBLING_PHASE"]
    val get_CAPTURING_PHASE: t -> float [@@js.get "CAPTURING_PHASE"]
    val get_NONE: t -> float [@@js.get "NONE"]
  end
  val event: anonymous_interface_120 [@@js.global "Event"]
  module[@js.scope "EventListenerObject"] EventListenerObject : sig
    type t = _EventListenerObject
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val handleEvent: t -> evt:_Event -> unit [@@js.call "handleEvent"]
  end
  module[@js.scope "EventSourceEventMap"] EventSourceEventMap : sig
    type t = _EventSourceEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_error: t -> _Event [@@js.get "error"]
    val set_error: t -> _Event -> unit [@@js.set "error"]
    val get_message: t -> _MessageEvent [@@js.get "message"]
    val set_message: t -> _MessageEvent -> unit [@@js.set "message"]
    val get_open: t -> _Event [@@js.get "open"]
    val set_open: t -> _Event -> unit [@@js.set "open"]
  end
  module[@js.scope "EventSource"] EventSource : sig
    type t = _EventSource
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_onerror: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onerror"]
    val set_onerror: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onerror"]
    val get_onmessage: t -> (this:t -> ev:_MessageEvent -> any) or_null [@@js.get "onmessage"]
    val set_onmessage: t -> (this:t -> ev:_MessageEvent -> any) or_null -> unit [@@js.set "onmessage"]
    val get_onopen: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onopen"]
    val set_onopen: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onopen"]
    val get_readyState: t -> float [@@js.get "readyState"]
    val get_url: t -> string [@@js.get "url"]
    val get_withCredentials: t -> bool [@@js.get "withCredentials"]
    val close: t -> unit [@@js.call "close"]
    val get_CLOSED: t -> float [@@js.get "CLOSED"]
    val get_CONNECTING: t -> float [@@js.get "CONNECTING"]
    val get_OPEN: t -> float [@@js.get "OPEN"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val eventSource: anonymous_interface_121 [@@js.global "EventSource"]
  module[@js.scope "EventTarget"] EventTarget : sig
    type t = _EventTarget
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val addEventListener: t -> type_:string -> listener:_EventListenerOrEventListenerObject or_null -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val dispatchEvent: t -> event:_Event -> bool [@@js.call "dispatchEvent"]
    val removeEventListener: t -> type_:string -> callback:_EventListenerOrEventListenerObject or_null -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
  end
  val eventTarget: anonymous_interface_122 [@@js.global "EventTarget"]
  module[@js.scope "ExtensionScriptApis"] ExtensionScriptApis : sig
    type t = _ExtensionScriptApis
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val extensionIdToShortId: t -> extensionId:string -> float [@@js.call "extensionIdToShortId"]
    val fireExtensionApiTelemetry: t -> functionName:string -> isSucceeded:bool -> isSupported:bool -> errorString:string -> unit [@@js.call "fireExtensionApiTelemetry"]
    val genericFunction: t -> routerAddress:any -> ?parameters:string -> ?callbackId:float -> unit -> unit [@@js.call "genericFunction"]
    val genericSynchronousFunction: t -> functionId:float -> ?parameters:string -> unit -> string [@@js.call "genericSynchronousFunction"]
    val genericWebRuntimeCallout: t -> to_:any -> from:any -> payload:string -> unit [@@js.call "genericWebRuntimeCallout"]
    val getExtensionId: t -> string [@@js.call "getExtensionId"]
    val registerGenericFunctionCallbackHandler: t -> callbackHandler:untyped_function -> unit [@@js.call "registerGenericFunctionCallbackHandler"]
    val registerGenericPersistentCallbackHandler: t -> callbackHandler:untyped_function -> unit [@@js.call "registerGenericPersistentCallbackHandler"]
    val registerWebRuntimeCallbackHandler: t -> handler:untyped_function -> any [@@js.call "registerWebRuntimeCallbackHandler"]
  end
  val extensionScriptApis: anonymous_interface_123 [@@js.global "ExtensionScriptApis"]
  module[@js.scope "External"] External : sig
    type t = _External
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val addSearchProvider: t -> unit [@@js.call "AddSearchProvider"]
    val isSearchProviderInstalled: t -> unit [@@js.call "IsSearchProviderInstalled"]
  end
  val external_: anonymous_interface_124 [@@js.global "External"]
  module[@js.scope "File"] File : sig
    type t = _File
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_lastModified: t -> float [@@js.get "lastModified"]
    val get_name: t -> string [@@js.get "name"]
    val cast: t -> _Blob [@@js.cast]
  end
  val file: anonymous_interface_125 [@@js.global "File"]
  module[@js.scope "FileList"] FileList : sig
    type t = _FileList
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_length: t -> float [@@js.get "length"]
    val item: t -> index:float -> _File or_null [@@js.call "item"]
    val get: t -> float -> _File [@@js.index_get]
    val set: t -> float -> _File -> unit [@@js.index_set]
  end
  val fileList: anonymous_interface_126 [@@js.global "FileList"]
  module[@js.scope "FileReaderEventMap"] FileReaderEventMap : sig
    type t = _FileReaderEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_abort: t -> _FileReader _ProgressEvent [@@js.get "abort"]
    val set_abort: t -> _FileReader _ProgressEvent -> unit [@@js.set "abort"]
    val get_error: t -> _FileReader _ProgressEvent [@@js.get "error"]
    val set_error: t -> _FileReader _ProgressEvent -> unit [@@js.set "error"]
    val get_load: t -> _FileReader _ProgressEvent [@@js.get "load"]
    val set_load: t -> _FileReader _ProgressEvent -> unit [@@js.set "load"]
    val get_loadend: t -> _FileReader _ProgressEvent [@@js.get "loadend"]
    val set_loadend: t -> _FileReader _ProgressEvent -> unit [@@js.set "loadend"]
    val get_loadstart: t -> _FileReader _ProgressEvent [@@js.get "loadstart"]
    val set_loadstart: t -> _FileReader _ProgressEvent -> unit [@@js.set "loadstart"]
    val get_progress: t -> _FileReader _ProgressEvent [@@js.get "progress"]
    val set_progress: t -> _FileReader _ProgressEvent -> unit [@@js.set "progress"]
  end
  module[@js.scope "FileReader"] FileReader : sig
    type t = _FileReader
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_error: t -> _DOMException or_null [@@js.get "error"]
    val get_onabort: t -> (this:t -> ev:t _ProgressEvent -> any) or_null [@@js.get "onabort"]
    val set_onabort: t -> (this:t -> ev:t _ProgressEvent -> any) or_null -> unit [@@js.set "onabort"]
    val get_onerror: t -> (this:t -> ev:t _ProgressEvent -> any) or_null [@@js.get "onerror"]
    val set_onerror: t -> (this:t -> ev:t _ProgressEvent -> any) or_null -> unit [@@js.set "onerror"]
    val get_onload: t -> (this:t -> ev:t _ProgressEvent -> any) or_null [@@js.get "onload"]
    val set_onload: t -> (this:t -> ev:t _ProgressEvent -> any) or_null -> unit [@@js.set "onload"]
    val get_onloadend: t -> (this:t -> ev:t _ProgressEvent -> any) or_null [@@js.get "onloadend"]
    val set_onloadend: t -> (this:t -> ev:t _ProgressEvent -> any) or_null -> unit [@@js.set "onloadend"]
    val get_onloadstart: t -> (this:t -> ev:t _ProgressEvent -> any) or_null [@@js.get "onloadstart"]
    val set_onloadstart: t -> (this:t -> ev:t _ProgressEvent -> any) or_null -> unit [@@js.set "onloadstart"]
    val get_onprogress: t -> (this:t -> ev:t _ProgressEvent -> any) or_null [@@js.get "onprogress"]
    val set_onprogress: t -> (this:t -> ev:t _ProgressEvent -> any) or_null -> unit [@@js.set "onprogress"]
    val get_readyState: t -> float [@@js.get "readyState"]
    val get_result: t -> ArrayBuffer.t_0 or_string or_null [@@js.get "result"]
    val abort: t -> unit [@@js.call "abort"]
    val readAsArrayBuffer: t -> blob:_Blob -> unit [@@js.call "readAsArrayBuffer"]
    val readAsBinaryString: t -> blob:_Blob -> unit [@@js.call "readAsBinaryString"]
    val readAsDataURL: t -> blob:_Blob -> unit [@@js.call "readAsDataURL"]
    val readAsText: t -> blob:_Blob -> ?encoding:string -> unit -> unit [@@js.call "readAsText"]
    val get_DONE: t -> float [@@js.get "DONE"]
    val get_EMPTY: t -> float [@@js.get "EMPTY"]
    val get_LOADING: t -> float [@@js.get "LOADING"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val fileReader: anonymous_interface_127 [@@js.global "FileReader"]
  module[@js.scope "FocusEvent"] FocusEvent : sig
    type t = _FocusEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_relatedTarget: t -> _EventTarget or_null [@@js.get "relatedTarget"]
    val cast: t -> _UIEvent [@@js.cast]
  end
  val focusEvent: anonymous_interface_128 [@@js.global "FocusEvent"]
  module[@js.scope "FocusNavigationEvent"] FocusNavigationEvent : sig
    type t = _FocusNavigationEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_navigationReason: t -> _NavigationReason [@@js.get "navigationReason"]
    val get_originHeight: t -> float [@@js.get "originHeight"]
    val get_originLeft: t -> float [@@js.get "originLeft"]
    val get_originTop: t -> float [@@js.get "originTop"]
    val get_originWidth: t -> float [@@js.get "originWidth"]
    val requestFocus: t -> unit [@@js.call "requestFocus"]
    val cast: t -> _Event [@@js.cast]
  end
  val focusNavigationEvent: anonymous_interface_129 [@@js.global "FocusNavigationEvent"]
  module[@js.scope "FormData"] FormData : sig
    type t = _FormData
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val append: t -> name:string -> value:_Blob or_string -> ?fileName:string -> unit -> unit [@@js.call "append"]
    val delete: t -> name:string -> unit [@@js.call "delete"]
    val get_: t -> name:string -> _FormDataEntryValue or_null [@@js.call "get"]
    val getAll: t -> name:string -> _FormDataEntryValue list [@@js.call "getAll"]
    val has: t -> name:string -> bool [@@js.call "has"]
    val set_: t -> name:string -> value:_Blob or_string -> ?fileName:string -> unit -> unit [@@js.call "set"]
    val forEach: t -> callbackfn:(value:_FormDataEntryValue -> key:string -> parent:t -> unit) -> ?thisArg:any -> unit -> unit [@@js.call "forEach"]
  end
  val formData: anonymous_interface_130 [@@js.global "FormData"]
  module[@js.scope "GainNode"] GainNode : sig
    type t = _GainNode
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_gain: t -> _AudioParam [@@js.get "gain"]
    val cast: t -> _AudioNode [@@js.cast]
  end
  val gainNode: anonymous_interface_131 [@@js.global "GainNode"]
  module[@js.scope "Gamepad"] Gamepad : sig
    type t = _Gamepad
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_axes: t -> float list [@@js.get "axes"]
    val get_buttons: t -> _GamepadButton list [@@js.get "buttons"]
    val get_connected: t -> bool [@@js.get "connected"]
    val get_hand: t -> _GamepadHand [@@js.get "hand"]
    val get_hapticActuators: t -> _GamepadHapticActuator list [@@js.get "hapticActuators"]
    val get_id: t -> string [@@js.get "id"]
    val get_index: t -> float [@@js.get "index"]
    val get_mapping: t -> _GamepadMappingType [@@js.get "mapping"]
    val get_pose: t -> _GamepadPose or_null [@@js.get "pose"]
    val get_timestamp: t -> float [@@js.get "timestamp"]
  end
  val gamepad: anonymous_interface_132 [@@js.global "Gamepad"]
  module[@js.scope "GamepadButton"] GamepadButton : sig
    type t = _GamepadButton
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_pressed: t -> bool [@@js.get "pressed"]
    val get_touched: t -> bool [@@js.get "touched"]
    val get_value: t -> float [@@js.get "value"]
  end
  val gamepadButton: anonymous_interface_133 [@@js.global "GamepadButton"]
  module[@js.scope "GamepadEvent"] GamepadEvent : sig
    type t = _GamepadEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_gamepad: t -> _Gamepad [@@js.get "gamepad"]
    val cast: t -> _Event [@@js.cast]
  end
  val gamepadEvent: anonymous_interface_134 [@@js.global "GamepadEvent"]
  module[@js.scope "GamepadHapticActuator"] GamepadHapticActuator : sig
    type t = _GamepadHapticActuator
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_type: t -> _GamepadHapticActuatorType [@@js.get "type"]
    val pulse: t -> value:float -> duration:float -> bool Promise.t_1 [@@js.call "pulse"]
  end
  val gamepadHapticActuator: anonymous_interface_135 [@@js.global "GamepadHapticActuator"]
  module[@js.scope "GamepadPose"] GamepadPose : sig
    type t = _GamepadPose
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_angularAcceleration: t -> Float32Array.t_0 or_null [@@js.get "angularAcceleration"]
    val get_angularVelocity: t -> Float32Array.t_0 or_null [@@js.get "angularVelocity"]
    val get_hasOrientation: t -> bool [@@js.get "hasOrientation"]
    val get_hasPosition: t -> bool [@@js.get "hasPosition"]
    val get_linearAcceleration: t -> Float32Array.t_0 or_null [@@js.get "linearAcceleration"]
    val get_linearVelocity: t -> Float32Array.t_0 or_null [@@js.get "linearVelocity"]
    val get_orientation: t -> Float32Array.t_0 or_null [@@js.get "orientation"]
    val get_position: t -> Float32Array.t_0 or_null [@@js.get "position"]
  end
  val gamepadPose: anonymous_interface_136 [@@js.global "GamepadPose"]
  module[@js.scope "GenericTransformStream"] GenericTransformStream : sig
    type t = _GenericTransformStream
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_readable: t -> any _ReadableStream [@@js.get "readable"]
    val get_writable: t -> any _WritableStream [@@js.get "writable"]
  end
  module[@js.scope "Geolocation"] Geolocation : sig
    type t = _Geolocation
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val clearWatch: t -> watchId:float -> unit [@@js.call "clearWatch"]
    val getCurrentPosition: t -> successCallback:_PositionCallback -> ?errorCallback:_PositionErrorCallback -> ?options:_PositionOptions -> unit -> unit [@@js.call "getCurrentPosition"]
    val watchPosition: t -> successCallback:_PositionCallback -> ?errorCallback:_PositionErrorCallback -> ?options:_PositionOptions -> unit -> float [@@js.call "watchPosition"]
  end
  module[@js.scope "GlobalEventHandlersEventMap"] GlobalEventHandlersEventMap : sig
    type t = _GlobalEventHandlersEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_abort: t -> _UIEvent [@@js.get "abort"]
    val set_abort: t -> _UIEvent -> unit [@@js.set "abort"]
    val get_animationcancel: t -> _AnimationEvent [@@js.get "animationcancel"]
    val set_animationcancel: t -> _AnimationEvent -> unit [@@js.set "animationcancel"]
    val get_animationend: t -> _AnimationEvent [@@js.get "animationend"]
    val set_animationend: t -> _AnimationEvent -> unit [@@js.set "animationend"]
    val get_animationiteration: t -> _AnimationEvent [@@js.get "animationiteration"]
    val set_animationiteration: t -> _AnimationEvent -> unit [@@js.set "animationiteration"]
    val get_animationstart: t -> _AnimationEvent [@@js.get "animationstart"]
    val set_animationstart: t -> _AnimationEvent -> unit [@@js.set "animationstart"]
    val get_auxclick: t -> _MouseEvent [@@js.get "auxclick"]
    val set_auxclick: t -> _MouseEvent -> unit [@@js.set "auxclick"]
    val get_blur: t -> _FocusEvent [@@js.get "blur"]
    val set_blur: t -> _FocusEvent -> unit [@@js.set "blur"]
    val get_cancel: t -> _Event [@@js.get "cancel"]
    val set_cancel: t -> _Event -> unit [@@js.set "cancel"]
    val get_canplay: t -> _Event [@@js.get "canplay"]
    val set_canplay: t -> _Event -> unit [@@js.set "canplay"]
    val get_canplaythrough: t -> _Event [@@js.get "canplaythrough"]
    val set_canplaythrough: t -> _Event -> unit [@@js.set "canplaythrough"]
    val get_change: t -> _Event [@@js.get "change"]
    val set_change: t -> _Event -> unit [@@js.set "change"]
    val get_click: t -> _MouseEvent [@@js.get "click"]
    val set_click: t -> _MouseEvent -> unit [@@js.set "click"]
    val get_close: t -> _Event [@@js.get "close"]
    val set_close: t -> _Event -> unit [@@js.set "close"]
    val get_contextmenu: t -> _MouseEvent [@@js.get "contextmenu"]
    val set_contextmenu: t -> _MouseEvent -> unit [@@js.set "contextmenu"]
    val get_cuechange: t -> _Event [@@js.get "cuechange"]
    val set_cuechange: t -> _Event -> unit [@@js.set "cuechange"]
    val get_dblclick: t -> _MouseEvent [@@js.get "dblclick"]
    val set_dblclick: t -> _MouseEvent -> unit [@@js.set "dblclick"]
    val get_drag: t -> _DragEvent [@@js.get "drag"]
    val set_drag: t -> _DragEvent -> unit [@@js.set "drag"]
    val get_dragend: t -> _DragEvent [@@js.get "dragend"]
    val set_dragend: t -> _DragEvent -> unit [@@js.set "dragend"]
    val get_dragenter: t -> _DragEvent [@@js.get "dragenter"]
    val set_dragenter: t -> _DragEvent -> unit [@@js.set "dragenter"]
    val get_dragexit: t -> _Event [@@js.get "dragexit"]
    val set_dragexit: t -> _Event -> unit [@@js.set "dragexit"]
    val get_dragleave: t -> _DragEvent [@@js.get "dragleave"]
    val set_dragleave: t -> _DragEvent -> unit [@@js.set "dragleave"]
    val get_dragover: t -> _DragEvent [@@js.get "dragover"]
    val set_dragover: t -> _DragEvent -> unit [@@js.set "dragover"]
    val get_dragstart: t -> _DragEvent [@@js.get "dragstart"]
    val set_dragstart: t -> _DragEvent -> unit [@@js.set "dragstart"]
    val get_drop: t -> _DragEvent [@@js.get "drop"]
    val set_drop: t -> _DragEvent -> unit [@@js.set "drop"]
    val get_durationchange: t -> _Event [@@js.get "durationchange"]
    val set_durationchange: t -> _Event -> unit [@@js.set "durationchange"]
    val get_emptied: t -> _Event [@@js.get "emptied"]
    val set_emptied: t -> _Event -> unit [@@js.set "emptied"]
    val get_ended: t -> _Event [@@js.get "ended"]
    val set_ended: t -> _Event -> unit [@@js.set "ended"]
    val get_error: t -> _ErrorEvent [@@js.get "error"]
    val set_error: t -> _ErrorEvent -> unit [@@js.set "error"]
    val get_focus: t -> _FocusEvent [@@js.get "focus"]
    val set_focus: t -> _FocusEvent -> unit [@@js.set "focus"]
    val get_focusin: t -> _FocusEvent [@@js.get "focusin"]
    val set_focusin: t -> _FocusEvent -> unit [@@js.set "focusin"]
    val get_focusout: t -> _FocusEvent [@@js.get "focusout"]
    val set_focusout: t -> _FocusEvent -> unit [@@js.set "focusout"]
    val get_gotpointercapture: t -> _PointerEvent [@@js.get "gotpointercapture"]
    val set_gotpointercapture: t -> _PointerEvent -> unit [@@js.set "gotpointercapture"]
    val get_input: t -> _Event [@@js.get "input"]
    val set_input: t -> _Event -> unit [@@js.set "input"]
    val get_invalid: t -> _Event [@@js.get "invalid"]
    val set_invalid: t -> _Event -> unit [@@js.set "invalid"]
    val get_keydown: t -> _KeyboardEvent [@@js.get "keydown"]
    val set_keydown: t -> _KeyboardEvent -> unit [@@js.set "keydown"]
    val get_keypress: t -> _KeyboardEvent [@@js.get "keypress"]
    val set_keypress: t -> _KeyboardEvent -> unit [@@js.set "keypress"]
    val get_keyup: t -> _KeyboardEvent [@@js.get "keyup"]
    val set_keyup: t -> _KeyboardEvent -> unit [@@js.set "keyup"]
    val get_load: t -> _Event [@@js.get "load"]
    val set_load: t -> _Event -> unit [@@js.set "load"]
    val get_loadeddata: t -> _Event [@@js.get "loadeddata"]
    val set_loadeddata: t -> _Event -> unit [@@js.set "loadeddata"]
    val get_loadedmetadata: t -> _Event [@@js.get "loadedmetadata"]
    val set_loadedmetadata: t -> _Event -> unit [@@js.set "loadedmetadata"]
    val get_loadstart: t -> _Event [@@js.get "loadstart"]
    val set_loadstart: t -> _Event -> unit [@@js.set "loadstart"]
    val get_lostpointercapture: t -> _PointerEvent [@@js.get "lostpointercapture"]
    val set_lostpointercapture: t -> _PointerEvent -> unit [@@js.set "lostpointercapture"]
    val get_mousedown: t -> _MouseEvent [@@js.get "mousedown"]
    val set_mousedown: t -> _MouseEvent -> unit [@@js.set "mousedown"]
    val get_mouseenter: t -> _MouseEvent [@@js.get "mouseenter"]
    val set_mouseenter: t -> _MouseEvent -> unit [@@js.set "mouseenter"]
    val get_mouseleave: t -> _MouseEvent [@@js.get "mouseleave"]
    val set_mouseleave: t -> _MouseEvent -> unit [@@js.set "mouseleave"]
    val get_mousemove: t -> _MouseEvent [@@js.get "mousemove"]
    val set_mousemove: t -> _MouseEvent -> unit [@@js.set "mousemove"]
    val get_mouseout: t -> _MouseEvent [@@js.get "mouseout"]
    val set_mouseout: t -> _MouseEvent -> unit [@@js.set "mouseout"]
    val get_mouseover: t -> _MouseEvent [@@js.get "mouseover"]
    val set_mouseover: t -> _MouseEvent -> unit [@@js.set "mouseover"]
    val get_mouseup: t -> _MouseEvent [@@js.get "mouseup"]
    val set_mouseup: t -> _MouseEvent -> unit [@@js.set "mouseup"]
    val get_pause: t -> _Event [@@js.get "pause"]
    val set_pause: t -> _Event -> unit [@@js.set "pause"]
    val get_play: t -> _Event [@@js.get "play"]
    val set_play: t -> _Event -> unit [@@js.set "play"]
    val get_playing: t -> _Event [@@js.get "playing"]
    val set_playing: t -> _Event -> unit [@@js.set "playing"]
    val get_pointercancel: t -> _PointerEvent [@@js.get "pointercancel"]
    val set_pointercancel: t -> _PointerEvent -> unit [@@js.set "pointercancel"]
    val get_pointerdown: t -> _PointerEvent [@@js.get "pointerdown"]
    val set_pointerdown: t -> _PointerEvent -> unit [@@js.set "pointerdown"]
    val get_pointerenter: t -> _PointerEvent [@@js.get "pointerenter"]
    val set_pointerenter: t -> _PointerEvent -> unit [@@js.set "pointerenter"]
    val get_pointerleave: t -> _PointerEvent [@@js.get "pointerleave"]
    val set_pointerleave: t -> _PointerEvent -> unit [@@js.set "pointerleave"]
    val get_pointermove: t -> _PointerEvent [@@js.get "pointermove"]
    val set_pointermove: t -> _PointerEvent -> unit [@@js.set "pointermove"]
    val get_pointerout: t -> _PointerEvent [@@js.get "pointerout"]
    val set_pointerout: t -> _PointerEvent -> unit [@@js.set "pointerout"]
    val get_pointerover: t -> _PointerEvent [@@js.get "pointerover"]
    val set_pointerover: t -> _PointerEvent -> unit [@@js.set "pointerover"]
    val get_pointerup: t -> _PointerEvent [@@js.get "pointerup"]
    val set_pointerup: t -> _PointerEvent -> unit [@@js.set "pointerup"]
    val get_progress: t -> _EventTarget _ProgressEvent [@@js.get "progress"]
    val set_progress: t -> _EventTarget _ProgressEvent -> unit [@@js.set "progress"]
    val get_ratechange: t -> _Event [@@js.get "ratechange"]
    val set_ratechange: t -> _Event -> unit [@@js.set "ratechange"]
    val get_reset: t -> _Event [@@js.get "reset"]
    val set_reset: t -> _Event -> unit [@@js.set "reset"]
    val get_resize: t -> _UIEvent [@@js.get "resize"]
    val set_resize: t -> _UIEvent -> unit [@@js.set "resize"]
    val get_scroll: t -> _Event [@@js.get "scroll"]
    val set_scroll: t -> _Event -> unit [@@js.set "scroll"]
    val get_securitypolicyviolation: t -> _SecurityPolicyViolationEvent [@@js.get "securitypolicyviolation"]
    val set_securitypolicyviolation: t -> _SecurityPolicyViolationEvent -> unit [@@js.set "securitypolicyviolation"]
    val get_seeked: t -> _Event [@@js.get "seeked"]
    val set_seeked: t -> _Event -> unit [@@js.set "seeked"]
    val get_seeking: t -> _Event [@@js.get "seeking"]
    val set_seeking: t -> _Event -> unit [@@js.set "seeking"]
    val get_select: t -> _Event [@@js.get "select"]
    val set_select: t -> _Event -> unit [@@js.set "select"]
    val get_selectionchange: t -> _Event [@@js.get "selectionchange"]
    val set_selectionchange: t -> _Event -> unit [@@js.set "selectionchange"]
    val get_selectstart: t -> _Event [@@js.get "selectstart"]
    val set_selectstart: t -> _Event -> unit [@@js.set "selectstart"]
    val get_stalled: t -> _Event [@@js.get "stalled"]
    val set_stalled: t -> _Event -> unit [@@js.set "stalled"]
    val get_submit: t -> _Event [@@js.get "submit"]
    val set_submit: t -> _Event -> unit [@@js.set "submit"]
    val get_suspend: t -> _Event [@@js.get "suspend"]
    val set_suspend: t -> _Event -> unit [@@js.set "suspend"]
    val get_timeupdate: t -> _Event [@@js.get "timeupdate"]
    val set_timeupdate: t -> _Event -> unit [@@js.set "timeupdate"]
    val get_toggle: t -> _Event [@@js.get "toggle"]
    val set_toggle: t -> _Event -> unit [@@js.set "toggle"]
    val get_touchcancel: t -> _TouchEvent [@@js.get "touchcancel"]
    val set_touchcancel: t -> _TouchEvent -> unit [@@js.set "touchcancel"]
    val get_touchend: t -> _TouchEvent [@@js.get "touchend"]
    val set_touchend: t -> _TouchEvent -> unit [@@js.set "touchend"]
    val get_touchmove: t -> _TouchEvent [@@js.get "touchmove"]
    val set_touchmove: t -> _TouchEvent -> unit [@@js.set "touchmove"]
    val get_touchstart: t -> _TouchEvent [@@js.get "touchstart"]
    val set_touchstart: t -> _TouchEvent -> unit [@@js.set "touchstart"]
    val get_transitioncancel: t -> _TransitionEvent [@@js.get "transitioncancel"]
    val set_transitioncancel: t -> _TransitionEvent -> unit [@@js.set "transitioncancel"]
    val get_transitionend: t -> _TransitionEvent [@@js.get "transitionend"]
    val set_transitionend: t -> _TransitionEvent -> unit [@@js.set "transitionend"]
    val get_transitionrun: t -> _TransitionEvent [@@js.get "transitionrun"]
    val set_transitionrun: t -> _TransitionEvent -> unit [@@js.set "transitionrun"]
    val get_transitionstart: t -> _TransitionEvent [@@js.get "transitionstart"]
    val set_transitionstart: t -> _TransitionEvent -> unit [@@js.set "transitionstart"]
    val get_volumechange: t -> _Event [@@js.get "volumechange"]
    val set_volumechange: t -> _Event -> unit [@@js.set "volumechange"]
    val get_waiting: t -> _Event [@@js.get "waiting"]
    val set_waiting: t -> _Event -> unit [@@js.set "waiting"]
    val get_wheel: t -> _WheelEvent [@@js.get "wheel"]
    val set_wheel: t -> _WheelEvent -> unit [@@js.set "wheel"]
  end
  module[@js.scope "GlobalEventHandlers"] GlobalEventHandlers : sig
    type t = _GlobalEventHandlers
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_onabort: t -> (this:t -> ev:_UIEvent -> any) or_null [@@js.get "onabort"]
    val set_onabort: t -> (this:t -> ev:_UIEvent -> any) or_null -> unit [@@js.set "onabort"]
    val get_onanimationcancel: t -> (this:t -> ev:_AnimationEvent -> any) or_null [@@js.get "onanimationcancel"]
    val set_onanimationcancel: t -> (this:t -> ev:_AnimationEvent -> any) or_null -> unit [@@js.set "onanimationcancel"]
    val get_onanimationend: t -> (this:t -> ev:_AnimationEvent -> any) or_null [@@js.get "onanimationend"]
    val set_onanimationend: t -> (this:t -> ev:_AnimationEvent -> any) or_null -> unit [@@js.set "onanimationend"]
    val get_onanimationiteration: t -> (this:t -> ev:_AnimationEvent -> any) or_null [@@js.get "onanimationiteration"]
    val set_onanimationiteration: t -> (this:t -> ev:_AnimationEvent -> any) or_null -> unit [@@js.set "onanimationiteration"]
    val get_onanimationstart: t -> (this:t -> ev:_AnimationEvent -> any) or_null [@@js.get "onanimationstart"]
    val set_onanimationstart: t -> (this:t -> ev:_AnimationEvent -> any) or_null -> unit [@@js.set "onanimationstart"]
    val get_onauxclick: t -> (this:t -> ev:_MouseEvent -> any) or_null [@@js.get "onauxclick"]
    val set_onauxclick: t -> (this:t -> ev:_MouseEvent -> any) or_null -> unit [@@js.set "onauxclick"]
    val get_onblur: t -> (this:t -> ev:_FocusEvent -> any) or_null [@@js.get "onblur"]
    val set_onblur: t -> (this:t -> ev:_FocusEvent -> any) or_null -> unit [@@js.set "onblur"]
    val get_oncancel: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "oncancel"]
    val set_oncancel: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "oncancel"]
    val get_oncanplay: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "oncanplay"]
    val set_oncanplay: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "oncanplay"]
    val get_oncanplaythrough: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "oncanplaythrough"]
    val set_oncanplaythrough: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "oncanplaythrough"]
    val get_onchange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onchange"]
    val set_onchange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onchange"]
    val get_onclick: t -> (this:t -> ev:_MouseEvent -> any) or_null [@@js.get "onclick"]
    val set_onclick: t -> (this:t -> ev:_MouseEvent -> any) or_null -> unit [@@js.set "onclick"]
    val get_onclose: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onclose"]
    val set_onclose: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onclose"]
    val get_oncontextmenu: t -> (this:t -> ev:_MouseEvent -> any) or_null [@@js.get "oncontextmenu"]
    val set_oncontextmenu: t -> (this:t -> ev:_MouseEvent -> any) or_null -> unit [@@js.set "oncontextmenu"]
    val get_oncuechange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "oncuechange"]
    val set_oncuechange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "oncuechange"]
    val get_ondblclick: t -> (this:t -> ev:_MouseEvent -> any) or_null [@@js.get "ondblclick"]
    val set_ondblclick: t -> (this:t -> ev:_MouseEvent -> any) or_null -> unit [@@js.set "ondblclick"]
    val get_ondrag: t -> (this:t -> ev:_DragEvent -> any) or_null [@@js.get "ondrag"]
    val set_ondrag: t -> (this:t -> ev:_DragEvent -> any) or_null -> unit [@@js.set "ondrag"]
    val get_ondragend: t -> (this:t -> ev:_DragEvent -> any) or_null [@@js.get "ondragend"]
    val set_ondragend: t -> (this:t -> ev:_DragEvent -> any) or_null -> unit [@@js.set "ondragend"]
    val get_ondragenter: t -> (this:t -> ev:_DragEvent -> any) or_null [@@js.get "ondragenter"]
    val set_ondragenter: t -> (this:t -> ev:_DragEvent -> any) or_null -> unit [@@js.set "ondragenter"]
    val get_ondragexit: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "ondragexit"]
    val set_ondragexit: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "ondragexit"]
    val get_ondragleave: t -> (this:t -> ev:_DragEvent -> any) or_null [@@js.get "ondragleave"]
    val set_ondragleave: t -> (this:t -> ev:_DragEvent -> any) or_null -> unit [@@js.set "ondragleave"]
    val get_ondragover: t -> (this:t -> ev:_DragEvent -> any) or_null [@@js.get "ondragover"]
    val set_ondragover: t -> (this:t -> ev:_DragEvent -> any) or_null -> unit [@@js.set "ondragover"]
    val get_ondragstart: t -> (this:t -> ev:_DragEvent -> any) or_null [@@js.get "ondragstart"]
    val set_ondragstart: t -> (this:t -> ev:_DragEvent -> any) or_null -> unit [@@js.set "ondragstart"]
    val get_ondrop: t -> (this:t -> ev:_DragEvent -> any) or_null [@@js.get "ondrop"]
    val set_ondrop: t -> (this:t -> ev:_DragEvent -> any) or_null -> unit [@@js.set "ondrop"]
    val get_ondurationchange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "ondurationchange"]
    val set_ondurationchange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "ondurationchange"]
    val get_onemptied: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onemptied"]
    val set_onemptied: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onemptied"]
    val get_onended: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onended"]
    val set_onended: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onended"]
    val get_onerror: t -> _OnErrorEventHandler [@@js.get "onerror"]
    val set_onerror: t -> _OnErrorEventHandler -> unit [@@js.set "onerror"]
    val get_onfocus: t -> (this:t -> ev:_FocusEvent -> any) or_null [@@js.get "onfocus"]
    val set_onfocus: t -> (this:t -> ev:_FocusEvent -> any) or_null -> unit [@@js.set "onfocus"]
    val get_ongotpointercapture: t -> (this:t -> ev:_PointerEvent -> any) or_null [@@js.get "ongotpointercapture"]
    val set_ongotpointercapture: t -> (this:t -> ev:_PointerEvent -> any) or_null -> unit [@@js.set "ongotpointercapture"]
    val get_oninput: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "oninput"]
    val set_oninput: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "oninput"]
    val get_oninvalid: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "oninvalid"]
    val set_oninvalid: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "oninvalid"]
    val get_onkeydown: t -> (this:t -> ev:_KeyboardEvent -> any) or_null [@@js.get "onkeydown"]
    val set_onkeydown: t -> (this:t -> ev:_KeyboardEvent -> any) or_null -> unit [@@js.set "onkeydown"]
    val get_onkeypress: t -> (this:t -> ev:_KeyboardEvent -> any) or_null [@@js.get "onkeypress"]
    val set_onkeypress: t -> (this:t -> ev:_KeyboardEvent -> any) or_null -> unit [@@js.set "onkeypress"]
    val get_onkeyup: t -> (this:t -> ev:_KeyboardEvent -> any) or_null [@@js.get "onkeyup"]
    val set_onkeyup: t -> (this:t -> ev:_KeyboardEvent -> any) or_null -> unit [@@js.set "onkeyup"]
    val get_onload: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onload"]
    val set_onload: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onload"]
    val get_onloadeddata: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onloadeddata"]
    val set_onloadeddata: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onloadeddata"]
    val get_onloadedmetadata: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onloadedmetadata"]
    val set_onloadedmetadata: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onloadedmetadata"]
    val get_onloadstart: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onloadstart"]
    val set_onloadstart: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onloadstart"]
    val get_onlostpointercapture: t -> (this:t -> ev:_PointerEvent -> any) or_null [@@js.get "onlostpointercapture"]
    val set_onlostpointercapture: t -> (this:t -> ev:_PointerEvent -> any) or_null -> unit [@@js.set "onlostpointercapture"]
    val get_onmousedown: t -> (this:t -> ev:_MouseEvent -> any) or_null [@@js.get "onmousedown"]
    val set_onmousedown: t -> (this:t -> ev:_MouseEvent -> any) or_null -> unit [@@js.set "onmousedown"]
    val get_onmouseenter: t -> (this:t -> ev:_MouseEvent -> any) or_null [@@js.get "onmouseenter"]
    val set_onmouseenter: t -> (this:t -> ev:_MouseEvent -> any) or_null -> unit [@@js.set "onmouseenter"]
    val get_onmouseleave: t -> (this:t -> ev:_MouseEvent -> any) or_null [@@js.get "onmouseleave"]
    val set_onmouseleave: t -> (this:t -> ev:_MouseEvent -> any) or_null -> unit [@@js.set "onmouseleave"]
    val get_onmousemove: t -> (this:t -> ev:_MouseEvent -> any) or_null [@@js.get "onmousemove"]
    val set_onmousemove: t -> (this:t -> ev:_MouseEvent -> any) or_null -> unit [@@js.set "onmousemove"]
    val get_onmouseout: t -> (this:t -> ev:_MouseEvent -> any) or_null [@@js.get "onmouseout"]
    val set_onmouseout: t -> (this:t -> ev:_MouseEvent -> any) or_null -> unit [@@js.set "onmouseout"]
    val get_onmouseover: t -> (this:t -> ev:_MouseEvent -> any) or_null [@@js.get "onmouseover"]
    val set_onmouseover: t -> (this:t -> ev:_MouseEvent -> any) or_null -> unit [@@js.set "onmouseover"]
    val get_onmouseup: t -> (this:t -> ev:_MouseEvent -> any) or_null [@@js.get "onmouseup"]
    val set_onmouseup: t -> (this:t -> ev:_MouseEvent -> any) or_null -> unit [@@js.set "onmouseup"]
    val get_onpause: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onpause"]
    val set_onpause: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onpause"]
    val get_onplay: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onplay"]
    val set_onplay: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onplay"]
    val get_onplaying: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onplaying"]
    val set_onplaying: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onplaying"]
    val get_onpointercancel: t -> (this:t -> ev:_PointerEvent -> any) or_null [@@js.get "onpointercancel"]
    val set_onpointercancel: t -> (this:t -> ev:_PointerEvent -> any) or_null -> unit [@@js.set "onpointercancel"]
    val get_onpointerdown: t -> (this:t -> ev:_PointerEvent -> any) or_null [@@js.get "onpointerdown"]
    val set_onpointerdown: t -> (this:t -> ev:_PointerEvent -> any) or_null -> unit [@@js.set "onpointerdown"]
    val get_onpointerenter: t -> (this:t -> ev:_PointerEvent -> any) or_null [@@js.get "onpointerenter"]
    val set_onpointerenter: t -> (this:t -> ev:_PointerEvent -> any) or_null -> unit [@@js.set "onpointerenter"]
    val get_onpointerleave: t -> (this:t -> ev:_PointerEvent -> any) or_null [@@js.get "onpointerleave"]
    val set_onpointerleave: t -> (this:t -> ev:_PointerEvent -> any) or_null -> unit [@@js.set "onpointerleave"]
    val get_onpointermove: t -> (this:t -> ev:_PointerEvent -> any) or_null [@@js.get "onpointermove"]
    val set_onpointermove: t -> (this:t -> ev:_PointerEvent -> any) or_null -> unit [@@js.set "onpointermove"]
    val get_onpointerout: t -> (this:t -> ev:_PointerEvent -> any) or_null [@@js.get "onpointerout"]
    val set_onpointerout: t -> (this:t -> ev:_PointerEvent -> any) or_null -> unit [@@js.set "onpointerout"]
    val get_onpointerover: t -> (this:t -> ev:_PointerEvent -> any) or_null [@@js.get "onpointerover"]
    val set_onpointerover: t -> (this:t -> ev:_PointerEvent -> any) or_null -> unit [@@js.set "onpointerover"]
    val get_onpointerup: t -> (this:t -> ev:_PointerEvent -> any) or_null [@@js.get "onpointerup"]
    val set_onpointerup: t -> (this:t -> ev:_PointerEvent -> any) or_null -> unit [@@js.set "onpointerup"]
    val get_onprogress: t -> (this:t -> ev:_EventTarget _ProgressEvent -> any) or_null [@@js.get "onprogress"]
    val set_onprogress: t -> (this:t -> ev:_EventTarget _ProgressEvent -> any) or_null -> unit [@@js.set "onprogress"]
    val get_onratechange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onratechange"]
    val set_onratechange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onratechange"]
    val get_onreset: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onreset"]
    val set_onreset: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onreset"]
    val get_onresize: t -> (this:t -> ev:_UIEvent -> any) or_null [@@js.get "onresize"]
    val set_onresize: t -> (this:t -> ev:_UIEvent -> any) or_null -> unit [@@js.set "onresize"]
    val get_onscroll: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onscroll"]
    val set_onscroll: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onscroll"]
    val get_onsecuritypolicyviolation: t -> (this:t -> ev:_SecurityPolicyViolationEvent -> any) or_null [@@js.get "onsecuritypolicyviolation"]
    val set_onsecuritypolicyviolation: t -> (this:t -> ev:_SecurityPolicyViolationEvent -> any) or_null -> unit [@@js.set "onsecuritypolicyviolation"]
    val get_onseeked: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onseeked"]
    val set_onseeked: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onseeked"]
    val get_onseeking: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onseeking"]
    val set_onseeking: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onseeking"]
    val get_onselect: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onselect"]
    val set_onselect: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onselect"]
    val get_onselectionchange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onselectionchange"]
    val set_onselectionchange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onselectionchange"]
    val get_onselectstart: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onselectstart"]
    val set_onselectstart: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onselectstart"]
    val get_onstalled: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onstalled"]
    val set_onstalled: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onstalled"]
    val get_onsubmit: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onsubmit"]
    val set_onsubmit: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onsubmit"]
    val get_onsuspend: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onsuspend"]
    val set_onsuspend: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onsuspend"]
    val get_ontimeupdate: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "ontimeupdate"]
    val set_ontimeupdate: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "ontimeupdate"]
    val get_ontoggle: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "ontoggle"]
    val set_ontoggle: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "ontoggle"]
    val get_ontouchcancel: t -> (this:t -> ev:_TouchEvent -> any) or_null [@@js.get "ontouchcancel"]
    val set_ontouchcancel: t -> (this:t -> ev:_TouchEvent -> any) or_null -> unit [@@js.set "ontouchcancel"]
    val get_ontouchend: t -> (this:t -> ev:_TouchEvent -> any) or_null [@@js.get "ontouchend"]
    val set_ontouchend: t -> (this:t -> ev:_TouchEvent -> any) or_null -> unit [@@js.set "ontouchend"]
    val get_ontouchmove: t -> (this:t -> ev:_TouchEvent -> any) or_null [@@js.get "ontouchmove"]
    val set_ontouchmove: t -> (this:t -> ev:_TouchEvent -> any) or_null -> unit [@@js.set "ontouchmove"]
    val get_ontouchstart: t -> (this:t -> ev:_TouchEvent -> any) or_null [@@js.get "ontouchstart"]
    val set_ontouchstart: t -> (this:t -> ev:_TouchEvent -> any) or_null -> unit [@@js.set "ontouchstart"]
    val get_ontransitioncancel: t -> (this:t -> ev:_TransitionEvent -> any) or_null [@@js.get "ontransitioncancel"]
    val set_ontransitioncancel: t -> (this:t -> ev:_TransitionEvent -> any) or_null -> unit [@@js.set "ontransitioncancel"]
    val get_ontransitionend: t -> (this:t -> ev:_TransitionEvent -> any) or_null [@@js.get "ontransitionend"]
    val set_ontransitionend: t -> (this:t -> ev:_TransitionEvent -> any) or_null -> unit [@@js.set "ontransitionend"]
    val get_ontransitionrun: t -> (this:t -> ev:_TransitionEvent -> any) or_null [@@js.get "ontransitionrun"]
    val set_ontransitionrun: t -> (this:t -> ev:_TransitionEvent -> any) or_null -> unit [@@js.set "ontransitionrun"]
    val get_ontransitionstart: t -> (this:t -> ev:_TransitionEvent -> any) or_null [@@js.get "ontransitionstart"]
    val set_ontransitionstart: t -> (this:t -> ev:_TransitionEvent -> any) or_null -> unit [@@js.set "ontransitionstart"]
    val get_onvolumechange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onvolumechange"]
    val set_onvolumechange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onvolumechange"]
    val get_onwaiting: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onwaiting"]
    val set_onwaiting: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onwaiting"]
    val get_onwheel: t -> (this:t -> ev:_WheelEvent -> any) or_null [@@js.get "onwheel"]
    val set_onwheel: t -> (this:t -> ev:_WheelEvent -> any) or_null -> unit [@@js.set "onwheel"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
  end
  module[@js.scope "HTMLAllCollection"] HTMLAllCollection : sig
    type t = _HTMLAllCollection
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_length: t -> float [@@js.get "length"]
    val item: t -> ?nameOrIndex:string -> unit -> (_Element, _HTMLCollection) union2 or_null [@@js.call "item"]
    val namedItem: t -> name:string -> (_Element, _HTMLCollection) union2 or_null [@@js.call "namedItem"]
    val get: t -> float -> _Element [@@js.index_get]
    val set: t -> float -> _Element -> unit [@@js.index_set]
  end
  val hTMLAllCollection: anonymous_interface_138 [@@js.global "HTMLAllCollection"]
  module[@js.scope "HTMLAnchorElement"] HTMLAnchorElement : sig
    type t = _HTMLAnchorElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_charset: t -> string [@@js.get "charset"]
    val set_charset: t -> string -> unit [@@js.set "charset"]
    val get_coords: t -> string [@@js.get "coords"]
    val set_coords: t -> string -> unit [@@js.set "coords"]
    val get_download: t -> string [@@js.get "download"]
    val set_download: t -> string -> unit [@@js.set "download"]
    val get_hreflang: t -> string [@@js.get "hreflang"]
    val set_hreflang: t -> string -> unit [@@js.set "hreflang"]
    val get_name: t -> string [@@js.get "name"]
    val set_name: t -> string -> unit [@@js.set "name"]
    val get_ping: t -> string [@@js.get "ping"]
    val set_ping: t -> string -> unit [@@js.set "ping"]
    val get_referrerPolicy: t -> string [@@js.get "referrerPolicy"]
    val set_referrerPolicy: t -> string -> unit [@@js.set "referrerPolicy"]
    val get_rel: t -> string [@@js.get "rel"]
    val set_rel: t -> string -> unit [@@js.set "rel"]
    val get_relList: t -> _DOMTokenList [@@js.get "relList"]
    val get_rev: t -> string [@@js.get "rev"]
    val set_rev: t -> string -> unit [@@js.set "rev"]
    val get_shape: t -> string [@@js.get "shape"]
    val set_shape: t -> string -> unit [@@js.set "shape"]
    val get_target: t -> string [@@js.get "target"]
    val set_target: t -> string -> unit [@@js.set "target"]
    val get_text: t -> string [@@js.get "text"]
    val set_text: t -> string -> unit [@@js.set "text"]
    val get_type: t -> string [@@js.get "type"]
    val set_type: t -> string -> unit [@@js.set "type"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
    val cast': t -> _HTMLHyperlinkElementUtils [@@js.cast]
  end
  val hTMLAnchorElement: anonymous_interface_139 [@@js.global "HTMLAnchorElement"]
  module[@js.scope "HTMLAppletElement"] HTMLAppletElement : sig
    type t = _HTMLAppletElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_align: t -> string [@@js.get "align"]
    val set_align: t -> string -> unit [@@js.set "align"]
    val get_alt: t -> string [@@js.get "alt"]
    val set_alt: t -> string -> unit [@@js.set "alt"]
    val get_archive: t -> string [@@js.get "archive"]
    val set_archive: t -> string -> unit [@@js.set "archive"]
    val get_code: t -> string [@@js.get "code"]
    val set_code: t -> string -> unit [@@js.set "code"]
    val get_codeBase: t -> string [@@js.get "codeBase"]
    val set_codeBase: t -> string -> unit [@@js.set "codeBase"]
    val get_form: t -> _HTMLFormElement or_null [@@js.get "form"]
    val get_height: t -> string [@@js.get "height"]
    val set_height: t -> string -> unit [@@js.set "height"]
    val get_hspace: t -> float [@@js.get "hspace"]
    val set_hspace: t -> float -> unit [@@js.set "hspace"]
    val get_name: t -> string [@@js.get "name"]
    val set_name: t -> string -> unit [@@js.set "name"]
    val get_object: t -> string [@@js.get "object"]
    val set_object: t -> string -> unit [@@js.set "object"]
    val get_vspace: t -> float [@@js.get "vspace"]
    val set_vspace: t -> float -> unit [@@js.set "vspace"]
    val get_width: t -> string [@@js.get "width"]
    val set_width: t -> string -> unit [@@js.set "width"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLAppletElement: anonymous_interface_140 [@@js.global "HTMLAppletElement"]
  module[@js.scope "HTMLAreaElement"] HTMLAreaElement : sig
    type t = _HTMLAreaElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_alt: t -> string [@@js.get "alt"]
    val set_alt: t -> string -> unit [@@js.set "alt"]
    val get_coords: t -> string [@@js.get "coords"]
    val set_coords: t -> string -> unit [@@js.set "coords"]
    val get_download: t -> string [@@js.get "download"]
    val set_download: t -> string -> unit [@@js.set "download"]
    val get_noHref: t -> bool [@@js.get "noHref"]
    val set_noHref: t -> bool -> unit [@@js.set "noHref"]
    val get_ping: t -> string [@@js.get "ping"]
    val set_ping: t -> string -> unit [@@js.set "ping"]
    val get_referrerPolicy: t -> string [@@js.get "referrerPolicy"]
    val set_referrerPolicy: t -> string -> unit [@@js.set "referrerPolicy"]
    val get_rel: t -> string [@@js.get "rel"]
    val set_rel: t -> string -> unit [@@js.set "rel"]
    val get_relList: t -> _DOMTokenList [@@js.get "relList"]
    val get_shape: t -> string [@@js.get "shape"]
    val set_shape: t -> string -> unit [@@js.set "shape"]
    val get_target: t -> string [@@js.get "target"]
    val set_target: t -> string -> unit [@@js.set "target"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
    val cast': t -> _HTMLHyperlinkElementUtils [@@js.cast]
  end
  val hTMLAreaElement: anonymous_interface_141 [@@js.global "HTMLAreaElement"]
  module[@js.scope "HTMLAudioElement"] HTMLAudioElement : sig
    type t = _HTMLAudioElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLMediaElement [@@js.cast]
  end
  val hTMLAudioElement: anonymous_interface_142 [@@js.global "HTMLAudioElement"]
  module[@js.scope "HTMLBRElement"] HTMLBRElement : sig
    type t = _HTMLBRElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_clear: t -> string [@@js.get "clear"]
    val set_clear: t -> string -> unit [@@js.set "clear"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLBRElement: anonymous_interface_143 [@@js.global "HTMLBRElement"]
  module[@js.scope "HTMLBaseElement"] HTMLBaseElement : sig
    type t = _HTMLBaseElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_href: t -> string [@@js.get "href"]
    val set_href: t -> string -> unit [@@js.set "href"]
    val get_target: t -> string [@@js.get "target"]
    val set_target: t -> string -> unit [@@js.set "target"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLBaseElement: anonymous_interface_144 [@@js.global "HTMLBaseElement"]
  module[@js.scope "HTMLBaseFontElement"] HTMLBaseFontElement : sig
    type t = _HTMLBaseFontElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_face: t -> string [@@js.get "face"]
    val set_face: t -> string -> unit [@@js.set "face"]
    val get_size: t -> float [@@js.get "size"]
    val set_size: t -> float -> unit [@@js.set "size"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
    val cast': t -> _DOML2DeprecatedColorProperty [@@js.cast]
  end
  val hTMLBaseFontElement: anonymous_interface_145 [@@js.global "HTMLBaseFontElement"]
  module[@js.scope "HTMLBodyElementEventMap"] HTMLBodyElementEventMap : sig
    type t = _HTMLBodyElementEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_orientationchange: t -> _Event [@@js.get "orientationchange"]
    val set_orientationchange: t -> _Event -> unit [@@js.set "orientationchange"]
    val cast: t -> _HTMLElementEventMap [@@js.cast]
    val cast': t -> _WindowEventHandlersEventMap [@@js.cast]
  end
  module[@js.scope "HTMLBodyElement"] HTMLBodyElement : sig
    type t = _HTMLBodyElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_aLink: t -> string [@@js.get "aLink"]
    val set_aLink: t -> string -> unit [@@js.set "aLink"]
    val get_background: t -> string [@@js.get "background"]
    val set_background: t -> string -> unit [@@js.set "background"]
    val get_bgColor: t -> string [@@js.get "bgColor"]
    val set_bgColor: t -> string -> unit [@@js.set "bgColor"]
    val get_link: t -> string [@@js.get "link"]
    val set_link: t -> string -> unit [@@js.set "link"]
    val get_onorientationchange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onorientationchange"]
    val set_onorientationchange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onorientationchange"]
    val get_text: t -> string [@@js.get "text"]
    val set_text: t -> string -> unit [@@js.set "text"]
    val get_vLink: t -> string [@@js.get "vLink"]
    val set_vLink: t -> string -> unit [@@js.set "vLink"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
    val cast': t -> _WindowEventHandlers [@@js.cast]
  end
  val hTMLBodyElement: anonymous_interface_146 [@@js.global "HTMLBodyElement"]
  module[@js.scope "HTMLButtonElement"] HTMLButtonElement : sig
    type t = _HTMLButtonElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_disabled: t -> bool [@@js.get "disabled"]
    val set_disabled: t -> bool -> unit [@@js.set "disabled"]
    val get_form: t -> _HTMLFormElement or_null [@@js.get "form"]
    val get_formAction: t -> string [@@js.get "formAction"]
    val set_formAction: t -> string -> unit [@@js.set "formAction"]
    val get_formEnctype: t -> string [@@js.get "formEnctype"]
    val set_formEnctype: t -> string -> unit [@@js.set "formEnctype"]
    val get_formMethod: t -> string [@@js.get "formMethod"]
    val set_formMethod: t -> string -> unit [@@js.set "formMethod"]
    val get_formNoValidate: t -> bool [@@js.get "formNoValidate"]
    val set_formNoValidate: t -> bool -> unit [@@js.set "formNoValidate"]
    val get_formTarget: t -> string [@@js.get "formTarget"]
    val set_formTarget: t -> string -> unit [@@js.set "formTarget"]
    val get_labels: t -> _HTMLLabelElement _NodeListOf [@@js.get "labels"]
    val get_name: t -> string [@@js.get "name"]
    val set_name: t -> string -> unit [@@js.set "name"]
    val get_type: t -> string [@@js.get "type"]
    val set_type: t -> string -> unit [@@js.set "type"]
    val get_validationMessage: t -> string [@@js.get "validationMessage"]
    val get_validity: t -> _ValidityState [@@js.get "validity"]
    val get_value: t -> string [@@js.get "value"]
    val set_value: t -> string -> unit [@@js.set "value"]
    val get_willValidate: t -> bool [@@js.get "willValidate"]
    val checkValidity: t -> bool [@@js.call "checkValidity"]
    val reportValidity: t -> bool [@@js.call "reportValidity"]
    val setCustomValidity: t -> error:string -> unit [@@js.call "setCustomValidity"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLButtonElement: anonymous_interface_147 [@@js.global "HTMLButtonElement"]
  module[@js.scope "HTMLCanvasElement"] HTMLCanvasElement : sig
    type t = _HTMLCanvasElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_height: t -> float [@@js.get "height"]
    val set_height: t -> float -> unit [@@js.set "height"]
    val get_width: t -> float [@@js.get "width"]
    val set_width: t -> float -> unit [@@js.set "width"]
    val getContext: t -> contextId:([`L_s1_2d] [@js.enum]) -> ?options:_CanvasRenderingContext2DSettings -> unit -> _CanvasRenderingContext2D or_null [@@js.call "getContext"]
    val getContext': t -> contextId:([`L_s202_bitmaprenderer] [@js.enum]) -> ?options:_ImageBitmapRenderingContextSettings -> unit -> _ImageBitmapRenderingContext or_null [@@js.call "getContext"]
    val getContext'': t -> contextId:([`L_s867_webgl] [@js.enum]) -> ?options:_WebGLContextAttributes -> unit -> _WebGLRenderingContext or_null [@@js.call "getContext"]
    val getContext''': t -> contextId:([`L_s868_webgl2] [@js.enum]) -> ?options:_WebGLContextAttributes -> unit -> _WebGL2RenderingContext or_null [@@js.call "getContext"]
    val getContext'''': t -> contextId:string -> ?options:any -> unit -> _RenderingContext or_null [@@js.call "getContext"]
    val toBlob: t -> callback:_BlobCallback -> ?type_:string -> ?quality:any -> unit -> unit [@@js.call "toBlob"]
    val toDataURL: t -> ?type_:string -> ?quality:any -> unit -> string [@@js.call "toDataURL"]
    val transferControlToOffscreen: t -> _OffscreenCanvas [@@js.call "transferControlToOffscreen"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLCanvasElement: anonymous_interface_148 [@@js.global "HTMLCanvasElement"]
  module[@js.scope "HTMLCollectionBase"] HTMLCollectionBase : sig
    type t = _HTMLCollectionBase
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_length: t -> float [@@js.get "length"]
    val item: t -> index:float -> _Element or_null [@@js.call "item"]
    val get: t -> float -> _Element [@@js.index_get]
    val set: t -> float -> _Element -> unit [@@js.index_set]
  end
  module[@js.scope "HTMLCollection"] HTMLCollection : sig
    type t = _HTMLCollection
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val namedItem: t -> name:string -> _Element or_null [@@js.call "namedItem"]
    val cast: t -> _HTMLCollectionBase [@@js.cast]
  end
  val hTMLCollection: anonymous_interface_149 [@@js.global "HTMLCollection"]
  module[@js.scope "HTMLCollectionOf"] HTMLCollectionOf : sig
    type 'T t = 'T _HTMLCollectionOf
    val t_to_js: ('T -> Ojs.t) -> 'T t -> Ojs.t
    val t_of_js: (Ojs.t -> 'T) -> Ojs.t -> 'T t
    type 'T t_1 = 'T t
    val t_1_to_js: ('T -> Ojs.t) -> 'T t_1 -> Ojs.t
    val t_1_of_js: (Ojs.t -> 'T) -> Ojs.t -> 'T t_1
    val item: 'T t -> index:float -> 'T or_null [@@js.call "item"]
    val namedItem: 'T t -> name:string -> 'T or_null [@@js.call "namedItem"]
    val get: 'T t -> float -> 'T [@@js.index_get]
    val set: 'T t -> float -> 'T -> unit [@@js.index_set]
    val cast: 'T t -> _HTMLCollectionBase [@@js.cast]
  end
  module[@js.scope "HTMLDListElement"] HTMLDListElement : sig
    type t = _HTMLDListElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_compact: t -> bool [@@js.get "compact"]
    val set_compact: t -> bool -> unit [@@js.set "compact"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLDListElement: anonymous_interface_150 [@@js.global "HTMLDListElement"]
  module[@js.scope "HTMLDataElement"] HTMLDataElement : sig
    type t = _HTMLDataElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_value: t -> string [@@js.get "value"]
    val set_value: t -> string -> unit [@@js.set "value"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLDataElement: anonymous_interface_151 [@@js.global "HTMLDataElement"]
  module[@js.scope "HTMLDataListElement"] HTMLDataListElement : sig
    type t = _HTMLDataListElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_options: t -> _HTMLOptionElement _HTMLCollectionOf [@@js.get "options"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLDataListElement: anonymous_interface_152 [@@js.global "HTMLDataListElement"]
  module[@js.scope "HTMLDetailsElement"] HTMLDetailsElement : sig
    type t = _HTMLDetailsElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_open: t -> bool [@@js.get "open"]
    val set_open: t -> bool -> unit [@@js.set "open"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLDetailsElement: anonymous_interface_153 [@@js.global "HTMLDetailsElement"]
  module[@js.scope "HTMLDialogElement"] HTMLDialogElement : sig
    type t = _HTMLDialogElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_open: t -> bool [@@js.get "open"]
    val set_open: t -> bool -> unit [@@js.set "open"]
    val get_returnValue: t -> string [@@js.get "returnValue"]
    val set_returnValue: t -> string -> unit [@@js.set "returnValue"]
    val close: t -> ?returnValue:string -> unit -> unit [@@js.call "close"]
    val show: t -> unit [@@js.call "show"]
    val showModal: t -> unit [@@js.call "showModal"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLDialogElement: anonymous_interface_154 [@@js.global "HTMLDialogElement"]
  module[@js.scope "HTMLDirectoryElement"] HTMLDirectoryElement : sig
    type t = _HTMLDirectoryElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_compact: t -> bool [@@js.get "compact"]
    val set_compact: t -> bool -> unit [@@js.set "compact"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLDirectoryElement: anonymous_interface_155 [@@js.global "HTMLDirectoryElement"]
  module[@js.scope "HTMLDivElement"] HTMLDivElement : sig
    type t = _HTMLDivElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_align: t -> string [@@js.get "align"]
    val set_align: t -> string -> unit [@@js.set "align"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLDivElement: anonymous_interface_156 [@@js.global "HTMLDivElement"]
  module[@js.scope "HTMLDocument"] HTMLDocument : sig
    type t = _HTMLDocument
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _Document [@@js.cast]
  end
  val hTMLDocument: anonymous_interface_157 [@@js.global "HTMLDocument"]
  module[@js.scope "HTMLElementEventMap"] HTMLElementEventMap : sig
    type t = _HTMLElementEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val cast: t -> _ElementEventMap [@@js.cast]
    val cast': t -> _GlobalEventHandlersEventMap [@@js.cast]
    val cast'': t -> _DocumentAndElementEventHandlersEventMap [@@js.cast]
  end
  module[@js.scope "HTMLElement"] HTMLElement : sig
    type t = _HTMLElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_accessKey: t -> string [@@js.get "accessKey"]
    val set_accessKey: t -> string -> unit [@@js.set "accessKey"]
    val get_accessKeyLabel: t -> string [@@js.get "accessKeyLabel"]
    val get_autocapitalize: t -> string [@@js.get "autocapitalize"]
    val set_autocapitalize: t -> string -> unit [@@js.set "autocapitalize"]
    val get_dir: t -> string [@@js.get "dir"]
    val set_dir: t -> string -> unit [@@js.set "dir"]
    val get_draggable: t -> bool [@@js.get "draggable"]
    val set_draggable: t -> bool -> unit [@@js.set "draggable"]
    val get_hidden: t -> bool [@@js.get "hidden"]
    val set_hidden: t -> bool -> unit [@@js.set "hidden"]
    val get_innerText: t -> string [@@js.get "innerText"]
    val set_innerText: t -> string -> unit [@@js.set "innerText"]
    val get_lang: t -> string [@@js.get "lang"]
    val set_lang: t -> string -> unit [@@js.set "lang"]
    val get_offsetHeight: t -> float [@@js.get "offsetHeight"]
    val get_offsetLeft: t -> float [@@js.get "offsetLeft"]
    val get_offsetParent: t -> _Element or_null [@@js.get "offsetParent"]
    val get_offsetTop: t -> float [@@js.get "offsetTop"]
    val get_offsetWidth: t -> float [@@js.get "offsetWidth"]
    val get_spellcheck: t -> bool [@@js.get "spellcheck"]
    val set_spellcheck: t -> bool -> unit [@@js.set "spellcheck"]
    val get_title: t -> string [@@js.get "title"]
    val set_title: t -> string -> unit [@@js.set "title"]
    val get_translate: t -> bool [@@js.get "translate"]
    val set_translate: t -> bool -> unit [@@js.set "translate"]
    val click: t -> unit [@@js.call "click"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _Element [@@js.cast]
    val cast': t -> _DocumentAndElementEventHandlers [@@js.cast]
    val cast'': t -> _ElementCSSInlineStyle [@@js.cast]
    val cast''': t -> _ElementContentEditable [@@js.cast]
    val cast'''': t -> _GlobalEventHandlers [@@js.cast]
    val cast''''': t -> _HTMLOrSVGElement [@@js.cast]
  end
  val hTMLElement: anonymous_interface_158 [@@js.global "HTMLElement"]
  module[@js.scope "HTMLEmbedElement"] HTMLEmbedElement : sig
    type t = _HTMLEmbedElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_align: t -> string [@@js.get "align"]
    val set_align: t -> string -> unit [@@js.set "align"]
    val get_height: t -> string [@@js.get "height"]
    val set_height: t -> string -> unit [@@js.set "height"]
    val get_name: t -> string [@@js.get "name"]
    val set_name: t -> string -> unit [@@js.set "name"]
    val get_src: t -> string [@@js.get "src"]
    val set_src: t -> string -> unit [@@js.set "src"]
    val get_type: t -> string [@@js.get "type"]
    val set_type: t -> string -> unit [@@js.set "type"]
    val get_width: t -> string [@@js.get "width"]
    val set_width: t -> string -> unit [@@js.set "width"]
    val getSVGDocument: t -> _Document or_null [@@js.call "getSVGDocument"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLEmbedElement: anonymous_interface_159 [@@js.global "HTMLEmbedElement"]
  module[@js.scope "HTMLFieldSetElement"] HTMLFieldSetElement : sig
    type t = _HTMLFieldSetElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_disabled: t -> bool [@@js.get "disabled"]
    val set_disabled: t -> bool -> unit [@@js.set "disabled"]
    val get_elements: t -> _HTMLCollection [@@js.get "elements"]
    val get_form: t -> _HTMLFormElement or_null [@@js.get "form"]
    val get_name: t -> string [@@js.get "name"]
    val set_name: t -> string -> unit [@@js.set "name"]
    val get_type: t -> string [@@js.get "type"]
    val get_validationMessage: t -> string [@@js.get "validationMessage"]
    val get_validity: t -> _ValidityState [@@js.get "validity"]
    val get_willValidate: t -> bool [@@js.get "willValidate"]
    val checkValidity: t -> bool [@@js.call "checkValidity"]
    val reportValidity: t -> bool [@@js.call "reportValidity"]
    val setCustomValidity: t -> error:string -> unit [@@js.call "setCustomValidity"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLFieldSetElement: anonymous_interface_160 [@@js.global "HTMLFieldSetElement"]
  module[@js.scope "HTMLFontElement"] HTMLFontElement : sig
    type t = _HTMLFontElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_color: t -> string [@@js.get "color"]
    val set_color: t -> string -> unit [@@js.set "color"]
    val get_face: t -> string [@@js.get "face"]
    val set_face: t -> string -> unit [@@js.set "face"]
    val get_size: t -> string [@@js.get "size"]
    val set_size: t -> string -> unit [@@js.set "size"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLFontElement: anonymous_interface_161 [@@js.global "HTMLFontElement"]
  module[@js.scope "HTMLFormControlsCollection"] HTMLFormControlsCollection : sig
    type t = _HTMLFormControlsCollection
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val namedItem: t -> name:string -> (_Element, _RadioNodeList) union2 or_null [@@js.call "namedItem"]
    val cast: t -> _HTMLCollectionBase [@@js.cast]
  end
  val hTMLFormControlsCollection: anonymous_interface_162 [@@js.global "HTMLFormControlsCollection"]
  module[@js.scope "HTMLFormElement"] HTMLFormElement : sig
    type t = _HTMLFormElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_acceptCharset: t -> string [@@js.get "acceptCharset"]
    val set_acceptCharset: t -> string -> unit [@@js.set "acceptCharset"]
    val get_action: t -> string [@@js.get "action"]
    val set_action: t -> string -> unit [@@js.set "action"]
    val get_autocomplete: t -> string [@@js.get "autocomplete"]
    val set_autocomplete: t -> string -> unit [@@js.set "autocomplete"]
    val get_elements: t -> _HTMLFormControlsCollection [@@js.get "elements"]
    val get_encoding: t -> string [@@js.get "encoding"]
    val set_encoding: t -> string -> unit [@@js.set "encoding"]
    val get_enctype: t -> string [@@js.get "enctype"]
    val set_enctype: t -> string -> unit [@@js.set "enctype"]
    val get_length: t -> float [@@js.get "length"]
    val get_method: t -> string [@@js.get "method"]
    val set_method: t -> string -> unit [@@js.set "method"]
    val get_name: t -> string [@@js.get "name"]
    val set_name: t -> string -> unit [@@js.set "name"]
    val get_noValidate: t -> bool [@@js.get "noValidate"]
    val set_noValidate: t -> bool -> unit [@@js.set "noValidate"]
    val get_target: t -> string [@@js.get "target"]
    val set_target: t -> string -> unit [@@js.set "target"]
    val checkValidity: t -> bool [@@js.call "checkValidity"]
    val reportValidity: t -> bool [@@js.call "reportValidity"]
    val reset: t -> unit [@@js.call "reset"]
    val submit: t -> unit [@@js.call "submit"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val get: t -> float -> _Element [@@js.index_get]
    val set: t -> float -> _Element -> unit [@@js.index_set]
    val get': t -> string -> any [@@js.index_get]
    val set': t -> string -> any -> unit [@@js.index_set]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLFormElement: anonymous_interface_163 [@@js.global "HTMLFormElement"]
  module[@js.scope "HTMLFrameElement"] HTMLFrameElement : sig
    type t = _HTMLFrameElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_contentDocument: t -> _Document or_null [@@js.get "contentDocument"]
    val get_contentWindow: t -> _WindowProxy or_null [@@js.get "contentWindow"]
    val get_frameBorder: t -> string [@@js.get "frameBorder"]
    val set_frameBorder: t -> string -> unit [@@js.set "frameBorder"]
    val get_longDesc: t -> string [@@js.get "longDesc"]
    val set_longDesc: t -> string -> unit [@@js.set "longDesc"]
    val get_marginHeight: t -> string [@@js.get "marginHeight"]
    val set_marginHeight: t -> string -> unit [@@js.set "marginHeight"]
    val get_marginWidth: t -> string [@@js.get "marginWidth"]
    val set_marginWidth: t -> string -> unit [@@js.set "marginWidth"]
    val get_name: t -> string [@@js.get "name"]
    val set_name: t -> string -> unit [@@js.set "name"]
    val get_noResize: t -> bool [@@js.get "noResize"]
    val set_noResize: t -> bool -> unit [@@js.set "noResize"]
    val get_scrolling: t -> string [@@js.get "scrolling"]
    val set_scrolling: t -> string -> unit [@@js.set "scrolling"]
    val get_src: t -> string [@@js.get "src"]
    val set_src: t -> string -> unit [@@js.set "src"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLFrameElement: anonymous_interface_164 [@@js.global "HTMLFrameElement"]
  module[@js.scope "HTMLFrameSetElementEventMap"] HTMLFrameSetElementEventMap : sig
    type t = _HTMLFrameSetElementEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val cast: t -> _HTMLElementEventMap [@@js.cast]
    val cast': t -> _WindowEventHandlersEventMap [@@js.cast]
  end
  module[@js.scope "HTMLFrameSetElement"] HTMLFrameSetElement : sig
    type t = _HTMLFrameSetElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_cols: t -> string [@@js.get "cols"]
    val set_cols: t -> string -> unit [@@js.set "cols"]
    val get_rows: t -> string [@@js.get "rows"]
    val set_rows: t -> string -> unit [@@js.set "rows"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
    val cast': t -> _WindowEventHandlers [@@js.cast]
  end
  val hTMLFrameSetElement: anonymous_interface_165 [@@js.global "HTMLFrameSetElement"]
  module[@js.scope "HTMLHRElement"] HTMLHRElement : sig
    type t = _HTMLHRElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_align: t -> string [@@js.get "align"]
    val set_align: t -> string -> unit [@@js.set "align"]
    val get_color: t -> string [@@js.get "color"]
    val set_color: t -> string -> unit [@@js.set "color"]
    val get_noShade: t -> bool [@@js.get "noShade"]
    val set_noShade: t -> bool -> unit [@@js.set "noShade"]
    val get_size: t -> string [@@js.get "size"]
    val set_size: t -> string -> unit [@@js.set "size"]
    val get_width: t -> string [@@js.get "width"]
    val set_width: t -> string -> unit [@@js.set "width"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLHRElement: anonymous_interface_166 [@@js.global "HTMLHRElement"]
  module[@js.scope "HTMLHeadElement"] HTMLHeadElement : sig
    type t = _HTMLHeadElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLHeadElement: anonymous_interface_167 [@@js.global "HTMLHeadElement"]
  module[@js.scope "HTMLHeadingElement"] HTMLHeadingElement : sig
    type t = _HTMLHeadingElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_align: t -> string [@@js.get "align"]
    val set_align: t -> string -> unit [@@js.set "align"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLHeadingElement: anonymous_interface_168 [@@js.global "HTMLHeadingElement"]
  module[@js.scope "HTMLHtmlElement"] HTMLHtmlElement : sig
    type t = _HTMLHtmlElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_version: t -> string [@@js.get "version"]
    val set_version: t -> string -> unit [@@js.set "version"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLHtmlElement: anonymous_interface_169 [@@js.global "HTMLHtmlElement"]
  module[@js.scope "HTMLHyperlinkElementUtils"] HTMLHyperlinkElementUtils : sig
    type t = _HTMLHyperlinkElementUtils
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_hash: t -> string [@@js.get "hash"]
    val set_hash: t -> string -> unit [@@js.set "hash"]
    val get_host: t -> string [@@js.get "host"]
    val set_host: t -> string -> unit [@@js.set "host"]
    val get_hostname: t -> string [@@js.get "hostname"]
    val set_hostname: t -> string -> unit [@@js.set "hostname"]
    val get_href: t -> string [@@js.get "href"]
    val set_href: t -> string -> unit [@@js.set "href"]
    val toString: t -> string [@@js.call "toString"]
    val get_origin: t -> string [@@js.get "origin"]
    val get_password: t -> string [@@js.get "password"]
    val set_password: t -> string -> unit [@@js.set "password"]
    val get_pathname: t -> string [@@js.get "pathname"]
    val set_pathname: t -> string -> unit [@@js.set "pathname"]
    val get_port: t -> string [@@js.get "port"]
    val set_port: t -> string -> unit [@@js.set "port"]
    val get_protocol: t -> string [@@js.get "protocol"]
    val set_protocol: t -> string -> unit [@@js.set "protocol"]
    val get_search: t -> string [@@js.get "search"]
    val set_search: t -> string -> unit [@@js.set "search"]
    val get_username: t -> string [@@js.get "username"]
    val set_username: t -> string -> unit [@@js.set "username"]
  end
  module[@js.scope "HTMLIFrameElement"] HTMLIFrameElement : sig
    type t = _HTMLIFrameElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_align: t -> string [@@js.get "align"]
    val set_align: t -> string -> unit [@@js.set "align"]
    val get_allow: t -> string [@@js.get "allow"]
    val set_allow: t -> string -> unit [@@js.set "allow"]
    val get_allowFullscreen: t -> bool [@@js.get "allowFullscreen"]
    val set_allowFullscreen: t -> bool -> unit [@@js.set "allowFullscreen"]
    val get_allowPaymentRequest: t -> bool [@@js.get "allowPaymentRequest"]
    val set_allowPaymentRequest: t -> bool -> unit [@@js.set "allowPaymentRequest"]
    val get_contentDocument: t -> _Document or_null [@@js.get "contentDocument"]
    val get_contentWindow: t -> _WindowProxy or_null [@@js.get "contentWindow"]
    val get_frameBorder: t -> string [@@js.get "frameBorder"]
    val set_frameBorder: t -> string -> unit [@@js.set "frameBorder"]
    val get_height: t -> string [@@js.get "height"]
    val set_height: t -> string -> unit [@@js.set "height"]
    val get_longDesc: t -> string [@@js.get "longDesc"]
    val set_longDesc: t -> string -> unit [@@js.set "longDesc"]
    val get_marginHeight: t -> string [@@js.get "marginHeight"]
    val set_marginHeight: t -> string -> unit [@@js.set "marginHeight"]
    val get_marginWidth: t -> string [@@js.get "marginWidth"]
    val set_marginWidth: t -> string -> unit [@@js.set "marginWidth"]
    val get_name: t -> string [@@js.get "name"]
    val set_name: t -> string -> unit [@@js.set "name"]
    val get_referrerPolicy: t -> _ReferrerPolicy [@@js.get "referrerPolicy"]
    val set_referrerPolicy: t -> _ReferrerPolicy -> unit [@@js.set "referrerPolicy"]
    val get_sandbox: t -> _DOMTokenList [@@js.get "sandbox"]
    val get_scrolling: t -> string [@@js.get "scrolling"]
    val set_scrolling: t -> string -> unit [@@js.set "scrolling"]
    val get_src: t -> string [@@js.get "src"]
    val set_src: t -> string -> unit [@@js.set "src"]
    val get_srcdoc: t -> string [@@js.get "srcdoc"]
    val set_srcdoc: t -> string -> unit [@@js.set "srcdoc"]
    val get_width: t -> string [@@js.get "width"]
    val set_width: t -> string -> unit [@@js.set "width"]
    val getSVGDocument: t -> _Document or_null [@@js.call "getSVGDocument"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLIFrameElement: anonymous_interface_170 [@@js.global "HTMLIFrameElement"]
  module[@js.scope "HTMLImageElement"] HTMLImageElement : sig
    type t = _HTMLImageElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_align: t -> string [@@js.get "align"]
    val set_align: t -> string -> unit [@@js.set "align"]
    val get_alt: t -> string [@@js.get "alt"]
    val set_alt: t -> string -> unit [@@js.set "alt"]
    val get_border: t -> string [@@js.get "border"]
    val set_border: t -> string -> unit [@@js.set "border"]
    val get_complete: t -> bool [@@js.get "complete"]
    val get_crossOrigin: t -> string or_null [@@js.get "crossOrigin"]
    val set_crossOrigin: t -> string or_null -> unit [@@js.set "crossOrigin"]
    val get_currentSrc: t -> string [@@js.get "currentSrc"]
    val get_decoding: t -> ([`L_s171_async[@js "async"] | `L_s183_auto[@js "auto"] | `L_s781_sync[@js "sync"]] [@js.enum]) [@@js.get "decoding"]
    val set_decoding: t -> ([`L_s171_async | `L_s183_auto | `L_s781_sync] [@js.enum]) -> unit [@@js.set "decoding"]
    val get_height: t -> float [@@js.get "height"]
    val set_height: t -> float -> unit [@@js.set "height"]
    val get_hspace: t -> float [@@js.get "hspace"]
    val set_hspace: t -> float -> unit [@@js.set "hspace"]
    val get_isMap: t -> bool [@@js.get "isMap"]
    val set_isMap: t -> bool -> unit [@@js.set "isMap"]
    val get_longDesc: t -> string [@@js.get "longDesc"]
    val set_longDesc: t -> string -> unit [@@js.set "longDesc"]
    val get_lowsrc: t -> string [@@js.get "lowsrc"]
    val set_lowsrc: t -> string -> unit [@@js.set "lowsrc"]
    val get_name: t -> string [@@js.get "name"]
    val set_name: t -> string -> unit [@@js.set "name"]
    val get_naturalHeight: t -> float [@@js.get "naturalHeight"]
    val get_naturalWidth: t -> float [@@js.get "naturalWidth"]
    val get_referrerPolicy: t -> string [@@js.get "referrerPolicy"]
    val set_referrerPolicy: t -> string -> unit [@@js.set "referrerPolicy"]
    val get_sizes: t -> string [@@js.get "sizes"]
    val set_sizes: t -> string -> unit [@@js.set "sizes"]
    val get_src: t -> string [@@js.get "src"]
    val set_src: t -> string -> unit [@@js.set "src"]
    val get_srcset: t -> string [@@js.get "srcset"]
    val set_srcset: t -> string -> unit [@@js.set "srcset"]
    val get_useMap: t -> string [@@js.get "useMap"]
    val set_useMap: t -> string -> unit [@@js.set "useMap"]
    val get_vspace: t -> float [@@js.get "vspace"]
    val set_vspace: t -> float -> unit [@@js.set "vspace"]
    val get_width: t -> float [@@js.get "width"]
    val set_width: t -> float -> unit [@@js.set "width"]
    val get_x: t -> float [@@js.get "x"]
    val get_y: t -> float [@@js.get "y"]
    val decode: t -> unit Promise.t_1 [@@js.call "decode"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLImageElement: anonymous_interface_171 [@@js.global "HTMLImageElement"]
  module[@js.scope "HTMLInputElement"] HTMLInputElement : sig
    type t = _HTMLInputElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_accept: t -> string [@@js.get "accept"]
    val set_accept: t -> string -> unit [@@js.set "accept"]
    val get_align: t -> string [@@js.get "align"]
    val set_align: t -> string -> unit [@@js.set "align"]
    val get_alt: t -> string [@@js.get "alt"]
    val set_alt: t -> string -> unit [@@js.set "alt"]
    val get_autocomplete: t -> string [@@js.get "autocomplete"]
    val set_autocomplete: t -> string -> unit [@@js.set "autocomplete"]
    val get_checked: t -> bool [@@js.get "checked"]
    val set_checked: t -> bool -> unit [@@js.set "checked"]
    val get_defaultChecked: t -> bool [@@js.get "defaultChecked"]
    val set_defaultChecked: t -> bool -> unit [@@js.set "defaultChecked"]
    val get_defaultValue: t -> string [@@js.get "defaultValue"]
    val set_defaultValue: t -> string -> unit [@@js.set "defaultValue"]
    val get_dirName: t -> string [@@js.get "dirName"]
    val set_dirName: t -> string -> unit [@@js.set "dirName"]
    val get_disabled: t -> bool [@@js.get "disabled"]
    val set_disabled: t -> bool -> unit [@@js.set "disabled"]
    val get_files: t -> _FileList or_null [@@js.get "files"]
    val set_files: t -> _FileList or_null -> unit [@@js.set "files"]
    val get_form: t -> _HTMLFormElement or_null [@@js.get "form"]
    val get_formAction: t -> string [@@js.get "formAction"]
    val set_formAction: t -> string -> unit [@@js.set "formAction"]
    val get_formEnctype: t -> string [@@js.get "formEnctype"]
    val set_formEnctype: t -> string -> unit [@@js.set "formEnctype"]
    val get_formMethod: t -> string [@@js.get "formMethod"]
    val set_formMethod: t -> string -> unit [@@js.set "formMethod"]
    val get_formNoValidate: t -> bool [@@js.get "formNoValidate"]
    val set_formNoValidate: t -> bool -> unit [@@js.set "formNoValidate"]
    val get_formTarget: t -> string [@@js.get "formTarget"]
    val set_formTarget: t -> string -> unit [@@js.set "formTarget"]
    val get_height: t -> float [@@js.get "height"]
    val set_height: t -> float -> unit [@@js.set "height"]
    val get_indeterminate: t -> bool [@@js.get "indeterminate"]
    val set_indeterminate: t -> bool -> unit [@@js.set "indeterminate"]
    val get_labels: t -> _HTMLLabelElement _NodeListOf or_null [@@js.get "labels"]
    val get_list: t -> _HTMLElement or_null [@@js.get "list"]
    val get_max: t -> string [@@js.get "max"]
    val set_max: t -> string -> unit [@@js.set "max"]
    val get_maxLength: t -> float [@@js.get "maxLength"]
    val set_maxLength: t -> float -> unit [@@js.set "maxLength"]
    val get_min: t -> string [@@js.get "min"]
    val set_min: t -> string -> unit [@@js.set "min"]
    val get_minLength: t -> float [@@js.get "minLength"]
    val set_minLength: t -> float -> unit [@@js.set "minLength"]
    val get_multiple: t -> bool [@@js.get "multiple"]
    val set_multiple: t -> bool -> unit [@@js.set "multiple"]
    val get_name: t -> string [@@js.get "name"]
    val set_name: t -> string -> unit [@@js.set "name"]
    val get_pattern: t -> string [@@js.get "pattern"]
    val set_pattern: t -> string -> unit [@@js.set "pattern"]
    val get_placeholder: t -> string [@@js.get "placeholder"]
    val set_placeholder: t -> string -> unit [@@js.set "placeholder"]
    val get_readOnly: t -> bool [@@js.get "readOnly"]
    val set_readOnly: t -> bool -> unit [@@js.set "readOnly"]
    val get_required: t -> bool [@@js.get "required"]
    val set_required: t -> bool -> unit [@@js.set "required"]
    val get_selectionDirection: t -> ([`L_s188_backward[@js "backward"] | `L_s383_forward[@js "forward"] | `L_s571_none[@js "none"]] [@js.enum]) or_null [@@js.get "selectionDirection"]
    val set_selectionDirection: t -> ([`L_s188_backward | `L_s383_forward | `L_s571_none] [@js.enum]) or_null -> unit [@@js.set "selectionDirection"]
    val get_selectionEnd: t -> float or_null [@@js.get "selectionEnd"]
    val set_selectionEnd: t -> float or_null -> unit [@@js.set "selectionEnd"]
    val get_selectionStart: t -> float or_null [@@js.get "selectionStart"]
    val set_selectionStart: t -> float or_null -> unit [@@js.set "selectionStart"]
    val get_size: t -> float [@@js.get "size"]
    val set_size: t -> float -> unit [@@js.set "size"]
    val get_src: t -> string [@@js.get "src"]
    val set_src: t -> string -> unit [@@js.set "src"]
    val get_step: t -> string [@@js.get "step"]
    val set_step: t -> string -> unit [@@js.set "step"]
    val get_type: t -> string [@@js.get "type"]
    val set_type: t -> string -> unit [@@js.set "type"]
    val get_useMap: t -> string [@@js.get "useMap"]
    val set_useMap: t -> string -> unit [@@js.set "useMap"]
    val get_validationMessage: t -> string [@@js.get "validationMessage"]
    val get_validity: t -> _ValidityState [@@js.get "validity"]
    val get_value: t -> string [@@js.get "value"]
    val set_value: t -> string -> unit [@@js.set "value"]
    val get_valueAsDate: t -> Date.t_0 or_null [@@js.get "valueAsDate"]
    val set_valueAsDate: t -> Date.t_0 or_null -> unit [@@js.set "valueAsDate"]
    val get_valueAsNumber: t -> float [@@js.get "valueAsNumber"]
    val set_valueAsNumber: t -> float -> unit [@@js.set "valueAsNumber"]
    val get_width: t -> float [@@js.get "width"]
    val set_width: t -> float -> unit [@@js.set "width"]
    val get_willValidate: t -> bool [@@js.get "willValidate"]
    val checkValidity: t -> bool [@@js.call "checkValidity"]
    val reportValidity: t -> bool [@@js.call "reportValidity"]
    val select: t -> unit [@@js.call "select"]
    val setCustomValidity: t -> error:string -> unit [@@js.call "setCustomValidity"]
    val setRangeText: t -> replacement:string -> unit [@@js.call "setRangeText"]
    val setRangeText': t -> replacement:string -> start:float -> end_:float -> ?selectionMode:_SelectionMode -> unit -> unit [@@js.call "setRangeText"]
    val setSelectionRange: t -> start:float -> end_:float -> ?direction:([`L_s188_backward | `L_s383_forward | `L_s571_none] [@js.enum]) -> unit -> unit [@@js.call "setSelectionRange"]
    val stepDown: t -> ?n:float -> unit -> unit [@@js.call "stepDown"]
    val stepUp: t -> ?n:float -> unit -> unit [@@js.call "stepUp"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLInputElement: anonymous_interface_172 [@@js.global "HTMLInputElement"]
  module[@js.scope "HTMLLIElement"] HTMLLIElement : sig
    type t = _HTMLLIElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_type: t -> string [@@js.get "type"]
    val set_type: t -> string -> unit [@@js.set "type"]
    val get_value: t -> float [@@js.get "value"]
    val set_value: t -> float -> unit [@@js.set "value"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLLIElement: anonymous_interface_173 [@@js.global "HTMLLIElement"]
  module[@js.scope "HTMLLabelElement"] HTMLLabelElement : sig
    type t = _HTMLLabelElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_control: t -> _HTMLElement or_null [@@js.get "control"]
    val get_form: t -> _HTMLFormElement or_null [@@js.get "form"]
    val get_htmlFor: t -> string [@@js.get "htmlFor"]
    val set_htmlFor: t -> string -> unit [@@js.set "htmlFor"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLLabelElement: anonymous_interface_174 [@@js.global "HTMLLabelElement"]
  module[@js.scope "HTMLLegendElement"] HTMLLegendElement : sig
    type t = _HTMLLegendElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_align: t -> string [@@js.get "align"]
    val set_align: t -> string -> unit [@@js.set "align"]
    val get_form: t -> _HTMLFormElement or_null [@@js.get "form"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLLegendElement: anonymous_interface_175 [@@js.global "HTMLLegendElement"]
  module[@js.scope "HTMLLinkElement"] HTMLLinkElement : sig
    type t = _HTMLLinkElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_as: t -> string [@@js.get "as"]
    val set_as: t -> string -> unit [@@js.set "as"]
    val get_charset: t -> string [@@js.get "charset"]
    val set_charset: t -> string -> unit [@@js.set "charset"]
    val get_crossOrigin: t -> string or_null [@@js.get "crossOrigin"]
    val set_crossOrigin: t -> string or_null -> unit [@@js.set "crossOrigin"]
    val get_disabled: t -> bool [@@js.get "disabled"]
    val set_disabled: t -> bool -> unit [@@js.set "disabled"]
    val get_href: t -> string [@@js.get "href"]
    val set_href: t -> string -> unit [@@js.set "href"]
    val get_hreflang: t -> string [@@js.get "hreflang"]
    val set_hreflang: t -> string -> unit [@@js.set "hreflang"]
    val get_imageSizes: t -> string [@@js.get "imageSizes"]
    val set_imageSizes: t -> string -> unit [@@js.set "imageSizes"]
    val get_imageSrcset: t -> string [@@js.get "imageSrcset"]
    val set_imageSrcset: t -> string -> unit [@@js.set "imageSrcset"]
    val get_integrity: t -> string [@@js.get "integrity"]
    val set_integrity: t -> string -> unit [@@js.set "integrity"]
    val get_media: t -> string [@@js.get "media"]
    val set_media: t -> string -> unit [@@js.set "media"]
    val get_referrerPolicy: t -> string [@@js.get "referrerPolicy"]
    val set_referrerPolicy: t -> string -> unit [@@js.set "referrerPolicy"]
    val get_rel: t -> string [@@js.get "rel"]
    val set_rel: t -> string -> unit [@@js.set "rel"]
    val get_relList: t -> _DOMTokenList [@@js.get "relList"]
    val get_rev: t -> string [@@js.get "rev"]
    val set_rev: t -> string -> unit [@@js.set "rev"]
    val get_sizes: t -> _DOMTokenList [@@js.get "sizes"]
    val get_target: t -> string [@@js.get "target"]
    val set_target: t -> string -> unit [@@js.set "target"]
    val get_type: t -> string [@@js.get "type"]
    val set_type: t -> string -> unit [@@js.set "type"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
    val cast': t -> _LinkStyle [@@js.cast]
  end
  val hTMLLinkElement: anonymous_interface_176 [@@js.global "HTMLLinkElement"]
  module[@js.scope "HTMLMapElement"] HTMLMapElement : sig
    type t = _HTMLMapElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_areas: t -> _HTMLCollection [@@js.get "areas"]
    val get_name: t -> string [@@js.get "name"]
    val set_name: t -> string -> unit [@@js.set "name"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLMapElement: anonymous_interface_177 [@@js.global "HTMLMapElement"]
  module[@js.scope "HTMLMarqueeElementEventMap"] HTMLMarqueeElementEventMap : sig
    type t = _HTMLMarqueeElementEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_bounce: t -> _Event [@@js.get "bounce"]
    val set_bounce: t -> _Event -> unit [@@js.set "bounce"]
    val get_finish: t -> _Event [@@js.get "finish"]
    val set_finish: t -> _Event -> unit [@@js.set "finish"]
    val get_start: t -> _Event [@@js.get "start"]
    val set_start: t -> _Event -> unit [@@js.set "start"]
    val cast: t -> _HTMLElementEventMap [@@js.cast]
  end
  module[@js.scope "HTMLMarqueeElement"] HTMLMarqueeElement : sig
    type t = _HTMLMarqueeElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_behavior: t -> string [@@js.get "behavior"]
    val set_behavior: t -> string -> unit [@@js.set "behavior"]
    val get_bgColor: t -> string [@@js.get "bgColor"]
    val set_bgColor: t -> string -> unit [@@js.set "bgColor"]
    val get_direction: t -> string [@@js.get "direction"]
    val set_direction: t -> string -> unit [@@js.set "direction"]
    val get_height: t -> string [@@js.get "height"]
    val set_height: t -> string -> unit [@@js.set "height"]
    val get_hspace: t -> float [@@js.get "hspace"]
    val set_hspace: t -> float -> unit [@@js.set "hspace"]
    val get_loop: t -> float [@@js.get "loop"]
    val set_loop: t -> float -> unit [@@js.set "loop"]
    val get_onbounce: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onbounce"]
    val set_onbounce: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onbounce"]
    val get_onfinish: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onfinish"]
    val set_onfinish: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onfinish"]
    val get_onstart: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onstart"]
    val set_onstart: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onstart"]
    val get_scrollAmount: t -> float [@@js.get "scrollAmount"]
    val set_scrollAmount: t -> float -> unit [@@js.set "scrollAmount"]
    val get_scrollDelay: t -> float [@@js.get "scrollDelay"]
    val set_scrollDelay: t -> float -> unit [@@js.set "scrollDelay"]
    val get_trueSpeed: t -> bool [@@js.get "trueSpeed"]
    val set_trueSpeed: t -> bool -> unit [@@js.set "trueSpeed"]
    val get_vspace: t -> float [@@js.get "vspace"]
    val set_vspace: t -> float -> unit [@@js.set "vspace"]
    val get_width: t -> string [@@js.get "width"]
    val set_width: t -> string -> unit [@@js.set "width"]
    val start: t -> unit [@@js.call "start"]
    val stop: t -> unit [@@js.call "stop"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLMarqueeElement: anonymous_interface_178 [@@js.global "HTMLMarqueeElement"]
  module[@js.scope "HTMLMediaElementEventMap"] HTMLMediaElementEventMap : sig
    type t = _HTMLMediaElementEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_encrypted: t -> _MediaEncryptedEvent [@@js.get "encrypted"]
    val set_encrypted: t -> _MediaEncryptedEvent -> unit [@@js.set "encrypted"]
    val get_msneedkey: t -> _MSMediaKeyNeededEvent [@@js.get "msneedkey"]
    val set_msneedkey: t -> _MSMediaKeyNeededEvent -> unit [@@js.set "msneedkey"]
    val get_waitingforkey: t -> _Event [@@js.get "waitingforkey"]
    val set_waitingforkey: t -> _Event -> unit [@@js.set "waitingforkey"]
    val cast: t -> _HTMLElementEventMap [@@js.cast]
  end
  module[@js.scope "HTMLMediaElement"] HTMLMediaElement : sig
    type t = _HTMLMediaElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_audioTracks: t -> _AudioTrackList [@@js.get "audioTracks"]
    val get_autoplay: t -> bool [@@js.get "autoplay"]
    val set_autoplay: t -> bool -> unit [@@js.set "autoplay"]
    val get_buffered: t -> _TimeRanges [@@js.get "buffered"]
    val get_controls: t -> bool [@@js.get "controls"]
    val set_controls: t -> bool -> unit [@@js.set "controls"]
    val get_crossOrigin: t -> string or_null [@@js.get "crossOrigin"]
    val set_crossOrigin: t -> string or_null -> unit [@@js.set "crossOrigin"]
    val get_currentSrc: t -> string [@@js.get "currentSrc"]
    val get_currentTime: t -> float [@@js.get "currentTime"]
    val set_currentTime: t -> float -> unit [@@js.set "currentTime"]
    val get_defaultMuted: t -> bool [@@js.get "defaultMuted"]
    val set_defaultMuted: t -> bool -> unit [@@js.set "defaultMuted"]
    val get_defaultPlaybackRate: t -> float [@@js.get "defaultPlaybackRate"]
    val set_defaultPlaybackRate: t -> float -> unit [@@js.set "defaultPlaybackRate"]
    val get_duration: t -> float [@@js.get "duration"]
    val get_ended: t -> bool [@@js.get "ended"]
    val get_error: t -> _MediaError or_null [@@js.get "error"]
    val get_loop: t -> bool [@@js.get "loop"]
    val set_loop: t -> bool -> unit [@@js.set "loop"]
    val get_mediaKeys: t -> _MediaKeys or_null [@@js.get "mediaKeys"]
    val get_msAudioCategory: t -> string [@@js.get "msAudioCategory"]
    val set_msAudioCategory: t -> string -> unit [@@js.set "msAudioCategory"]
    val get_msAudioDeviceType: t -> string [@@js.get "msAudioDeviceType"]
    val set_msAudioDeviceType: t -> string -> unit [@@js.set "msAudioDeviceType"]
    val get_msGraphicsTrustStatus: t -> _MSGraphicsTrust [@@js.get "msGraphicsTrustStatus"]
    val get_msKeys: t -> _MSMediaKeys [@@js.get "msKeys"]
    val get_msPlayToDisabled: t -> bool [@@js.get "msPlayToDisabled"]
    val set_msPlayToDisabled: t -> bool -> unit [@@js.set "msPlayToDisabled"]
    val get_msPlayToPreferredSourceUri: t -> string [@@js.get "msPlayToPreferredSourceUri"]
    val set_msPlayToPreferredSourceUri: t -> string -> unit [@@js.set "msPlayToPreferredSourceUri"]
    val get_msPlayToPrimary: t -> bool [@@js.get "msPlayToPrimary"]
    val set_msPlayToPrimary: t -> bool -> unit [@@js.set "msPlayToPrimary"]
    val get_msPlayToSource: t -> any [@@js.get "msPlayToSource"]
    val get_msRealTime: t -> bool [@@js.get "msRealTime"]
    val set_msRealTime: t -> bool -> unit [@@js.set "msRealTime"]
    val get_muted: t -> bool [@@js.get "muted"]
    val set_muted: t -> bool -> unit [@@js.set "muted"]
    val get_networkState: t -> float [@@js.get "networkState"]
    val get_onencrypted: t -> (this:t -> ev:_MediaEncryptedEvent -> any) or_null [@@js.get "onencrypted"]
    val set_onencrypted: t -> (this:t -> ev:_MediaEncryptedEvent -> any) or_null -> unit [@@js.set "onencrypted"]
    val get_onmsneedkey: t -> (this:t -> ev:_MSMediaKeyNeededEvent -> any) or_null [@@js.get "onmsneedkey"]
    val set_onmsneedkey: t -> (this:t -> ev:_MSMediaKeyNeededEvent -> any) or_null -> unit [@@js.set "onmsneedkey"]
    val get_onwaitingforkey: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onwaitingforkey"]
    val set_onwaitingforkey: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onwaitingforkey"]
    val get_paused: t -> bool [@@js.get "paused"]
    val get_playbackRate: t -> float [@@js.get "playbackRate"]
    val set_playbackRate: t -> float -> unit [@@js.set "playbackRate"]
    val get_played: t -> _TimeRanges [@@js.get "played"]
    val get_preload: t -> string [@@js.get "preload"]
    val set_preload: t -> string -> unit [@@js.set "preload"]
    val get_readyState: t -> float [@@js.get "readyState"]
    val get_seekable: t -> _TimeRanges [@@js.get "seekable"]
    val get_seeking: t -> bool [@@js.get "seeking"]
    val get_src: t -> string [@@js.get "src"]
    val set_src: t -> string -> unit [@@js.set "src"]
    val get_srcObject: t -> (_Blob, _MediaSource, _MediaStream) union3 or_null [@@js.get "srcObject"]
    val set_srcObject: t -> (_Blob, _MediaSource, _MediaStream) union3 or_null -> unit [@@js.set "srcObject"]
    val get_textTracks: t -> _TextTrackList [@@js.get "textTracks"]
    val get_videoTracks: t -> _VideoTrackList [@@js.get "videoTracks"]
    val get_volume: t -> float [@@js.get "volume"]
    val set_volume: t -> float -> unit [@@js.set "volume"]
    val addTextTrack: t -> kind:_TextTrackKind -> ?label:string -> ?language:string -> unit -> _TextTrack [@@js.call "addTextTrack"]
    val canPlayType: t -> type_:string -> _CanPlayTypeResult [@@js.call "canPlayType"]
    val load: t -> unit [@@js.call "load"]
    val msClearEffects: t -> unit [@@js.call "msClearEffects"]
    val msGetAsCastingSource: t -> any [@@js.call "msGetAsCastingSource"]
    val msInsertAudioEffect: t -> activatableClassId:string -> effectRequired:bool -> ?config:any -> unit -> unit [@@js.call "msInsertAudioEffect"]
    val msSetMediaKeys: t -> mediaKeys:_MSMediaKeys -> unit [@@js.call "msSetMediaKeys"]
    val msSetMediaProtectionManager: t -> ?mediaProtectionManager:any -> unit -> unit [@@js.call "msSetMediaProtectionManager"]
    val pause: t -> unit [@@js.call "pause"]
    val play: t -> unit Promise.t_1 [@@js.call "play"]
    val setMediaKeys: t -> mediaKeys:_MediaKeys or_null -> unit Promise.t_1 [@@js.call "setMediaKeys"]
    val get_HAVE_CURRENT_DATA: t -> float [@@js.get "HAVE_CURRENT_DATA"]
    val get_HAVE_ENOUGH_DATA: t -> float [@@js.get "HAVE_ENOUGH_DATA"]
    val get_HAVE_FUTURE_DATA: t -> float [@@js.get "HAVE_FUTURE_DATA"]
    val get_HAVE_METADATA: t -> float [@@js.get "HAVE_METADATA"]
    val get_HAVE_NOTHING: t -> float [@@js.get "HAVE_NOTHING"]
    val get_NETWORK_EMPTY: t -> float [@@js.get "NETWORK_EMPTY"]
    val get_NETWORK_IDLE: t -> float [@@js.get "NETWORK_IDLE"]
    val get_NETWORK_LOADING: t -> float [@@js.get "NETWORK_LOADING"]
    val get_NETWORK_NO_SOURCE: t -> float [@@js.get "NETWORK_NO_SOURCE"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLMediaElement: anonymous_interface_179 [@@js.global "HTMLMediaElement"]
  module[@js.scope "HTMLMenuElement"] HTMLMenuElement : sig
    type t = _HTMLMenuElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_compact: t -> bool [@@js.get "compact"]
    val set_compact: t -> bool -> unit [@@js.set "compact"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLMenuElement: anonymous_interface_180 [@@js.global "HTMLMenuElement"]
  module[@js.scope "HTMLMetaElement"] HTMLMetaElement : sig
    type t = _HTMLMetaElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_content: t -> string [@@js.get "content"]
    val set_content: t -> string -> unit [@@js.set "content"]
    val get_httpEquiv: t -> string [@@js.get "httpEquiv"]
    val set_httpEquiv: t -> string -> unit [@@js.set "httpEquiv"]
    val get_name: t -> string [@@js.get "name"]
    val set_name: t -> string -> unit [@@js.set "name"]
    val get_scheme: t -> string [@@js.get "scheme"]
    val set_scheme: t -> string -> unit [@@js.set "scheme"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLMetaElement: anonymous_interface_181 [@@js.global "HTMLMetaElement"]
  module[@js.scope "HTMLMeterElement"] HTMLMeterElement : sig
    type t = _HTMLMeterElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_high: t -> float [@@js.get "high"]
    val set_high: t -> float -> unit [@@js.set "high"]
    val get_labels: t -> _HTMLLabelElement _NodeListOf [@@js.get "labels"]
    val get_low: t -> float [@@js.get "low"]
    val set_low: t -> float -> unit [@@js.set "low"]
    val get_max: t -> float [@@js.get "max"]
    val set_max: t -> float -> unit [@@js.set "max"]
    val get_min: t -> float [@@js.get "min"]
    val set_min: t -> float -> unit [@@js.set "min"]
    val get_optimum: t -> float [@@js.get "optimum"]
    val set_optimum: t -> float -> unit [@@js.set "optimum"]
    val get_value: t -> float [@@js.get "value"]
    val set_value: t -> float -> unit [@@js.set "value"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLMeterElement: anonymous_interface_182 [@@js.global "HTMLMeterElement"]
  module[@js.scope "HTMLModElement"] HTMLModElement : sig
    type t = _HTMLModElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_cite: t -> string [@@js.get "cite"]
    val set_cite: t -> string -> unit [@@js.set "cite"]
    val get_dateTime: t -> string [@@js.get "dateTime"]
    val set_dateTime: t -> string -> unit [@@js.set "dateTime"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLModElement: anonymous_interface_183 [@@js.global "HTMLModElement"]
  module[@js.scope "HTMLOListElement"] HTMLOListElement : sig
    type t = _HTMLOListElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_compact: t -> bool [@@js.get "compact"]
    val set_compact: t -> bool -> unit [@@js.set "compact"]
    val get_reversed: t -> bool [@@js.get "reversed"]
    val set_reversed: t -> bool -> unit [@@js.set "reversed"]
    val get_start: t -> float [@@js.get "start"]
    val set_start: t -> float -> unit [@@js.set "start"]
    val get_type: t -> string [@@js.get "type"]
    val set_type: t -> string -> unit [@@js.set "type"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLOListElement: anonymous_interface_184 [@@js.global "HTMLOListElement"]
  module[@js.scope "HTMLObjectElement"] HTMLObjectElement : sig
    type t = _HTMLObjectElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_align: t -> string [@@js.get "align"]
    val set_align: t -> string -> unit [@@js.set "align"]
    val get_archive: t -> string [@@js.get "archive"]
    val set_archive: t -> string -> unit [@@js.set "archive"]
    val get_border: t -> string [@@js.get "border"]
    val set_border: t -> string -> unit [@@js.set "border"]
    val get_code: t -> string [@@js.get "code"]
    val set_code: t -> string -> unit [@@js.set "code"]
    val get_codeBase: t -> string [@@js.get "codeBase"]
    val set_codeBase: t -> string -> unit [@@js.set "codeBase"]
    val get_codeType: t -> string [@@js.get "codeType"]
    val set_codeType: t -> string -> unit [@@js.set "codeType"]
    val get_contentDocument: t -> _Document or_null [@@js.get "contentDocument"]
    val get_contentWindow: t -> _WindowProxy or_null [@@js.get "contentWindow"]
    val get_data: t -> string [@@js.get "data"]
    val set_data: t -> string -> unit [@@js.set "data"]
    val get_declare: t -> bool [@@js.get "declare"]
    val set_declare: t -> bool -> unit [@@js.set "declare"]
    val get_form: t -> _HTMLFormElement or_null [@@js.get "form"]
    val get_height: t -> string [@@js.get "height"]
    val set_height: t -> string -> unit [@@js.set "height"]
    val get_hspace: t -> float [@@js.get "hspace"]
    val set_hspace: t -> float -> unit [@@js.set "hspace"]
    val get_name: t -> string [@@js.get "name"]
    val set_name: t -> string -> unit [@@js.set "name"]
    val get_standby: t -> string [@@js.get "standby"]
    val set_standby: t -> string -> unit [@@js.set "standby"]
    val get_type: t -> string [@@js.get "type"]
    val set_type: t -> string -> unit [@@js.set "type"]
    val get_useMap: t -> string [@@js.get "useMap"]
    val set_useMap: t -> string -> unit [@@js.set "useMap"]
    val get_validationMessage: t -> string [@@js.get "validationMessage"]
    val get_validity: t -> _ValidityState [@@js.get "validity"]
    val get_vspace: t -> float [@@js.get "vspace"]
    val set_vspace: t -> float -> unit [@@js.set "vspace"]
    val get_width: t -> string [@@js.get "width"]
    val set_width: t -> string -> unit [@@js.set "width"]
    val get_willValidate: t -> bool [@@js.get "willValidate"]
    val checkValidity: t -> bool [@@js.call "checkValidity"]
    val getSVGDocument: t -> _Document or_null [@@js.call "getSVGDocument"]
    val reportValidity: t -> bool [@@js.call "reportValidity"]
    val setCustomValidity: t -> error:string -> unit [@@js.call "setCustomValidity"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLObjectElement: anonymous_interface_185 [@@js.global "HTMLObjectElement"]
  module[@js.scope "HTMLOptGroupElement"] HTMLOptGroupElement : sig
    type t = _HTMLOptGroupElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_disabled: t -> bool [@@js.get "disabled"]
    val set_disabled: t -> bool -> unit [@@js.set "disabled"]
    val get_form: t -> _HTMLFormElement or_null [@@js.get "form"]
    val get_label: t -> string [@@js.get "label"]
    val set_label: t -> string -> unit [@@js.set "label"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLOptGroupElement: anonymous_interface_186 [@@js.global "HTMLOptGroupElement"]
  module[@js.scope "HTMLOptionElement"] HTMLOptionElement : sig
    type t = _HTMLOptionElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_defaultSelected: t -> bool [@@js.get "defaultSelected"]
    val set_defaultSelected: t -> bool -> unit [@@js.set "defaultSelected"]
    val get_disabled: t -> bool [@@js.get "disabled"]
    val set_disabled: t -> bool -> unit [@@js.set "disabled"]
    val get_form: t -> _HTMLFormElement or_null [@@js.get "form"]
    val get_index: t -> float [@@js.get "index"]
    val get_label: t -> string [@@js.get "label"]
    val set_label: t -> string -> unit [@@js.set "label"]
    val get_selected: t -> bool [@@js.get "selected"]
    val set_selected: t -> bool -> unit [@@js.set "selected"]
    val get_text: t -> string [@@js.get "text"]
    val set_text: t -> string -> unit [@@js.set "text"]
    val get_value: t -> string [@@js.get "value"]
    val set_value: t -> string -> unit [@@js.set "value"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLOptionElement: anonymous_interface_187 [@@js.global "HTMLOptionElement"]
  module[@js.scope "HTMLOptionsCollection"] HTMLOptionsCollection : sig
    type t = _HTMLOptionsCollection
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_length: t -> float [@@js.get "length"]
    val set_length: t -> float -> unit [@@js.set "length"]
    val get_selectedIndex: t -> float [@@js.get "selectedIndex"]
    val set_selectedIndex: t -> float -> unit [@@js.set "selectedIndex"]
    val add: t -> element:(_HTMLOptGroupElement, _HTMLOptionElement) union2 -> ?before:_HTMLElement or_number or_null -> unit -> unit [@@js.call "add"]
    val remove: t -> index:float -> unit [@@js.call "remove"]
    val cast: t -> _HTMLOptionElement _HTMLCollectionOf [@@js.cast]
  end
  val hTMLOptionsCollection: anonymous_interface_188 [@@js.global "HTMLOptionsCollection"]
  module[@js.scope "HTMLOrSVGElement"] HTMLOrSVGElement : sig
    type t = _HTMLOrSVGElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_autofocus: t -> bool [@@js.get "autofocus"]
    val set_autofocus: t -> bool -> unit [@@js.set "autofocus"]
    val get_dataset: t -> _DOMStringMap [@@js.get "dataset"]
    val get_nonce: t -> string [@@js.get "nonce"]
    val set_nonce: t -> string -> unit [@@js.set "nonce"]
    val get_tabIndex: t -> float [@@js.get "tabIndex"]
    val set_tabIndex: t -> float -> unit [@@js.set "tabIndex"]
    val blur: t -> unit [@@js.call "blur"]
    val focus: t -> ?options:_FocusOptions -> unit -> unit [@@js.call "focus"]
  end
  module[@js.scope "HTMLOutputElement"] HTMLOutputElement : sig
    type t = _HTMLOutputElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_defaultValue: t -> string [@@js.get "defaultValue"]
    val set_defaultValue: t -> string -> unit [@@js.set "defaultValue"]
    val get_form: t -> _HTMLFormElement or_null [@@js.get "form"]
    val get_htmlFor: t -> _DOMTokenList [@@js.get "htmlFor"]
    val get_labels: t -> _HTMLLabelElement _NodeListOf [@@js.get "labels"]
    val get_name: t -> string [@@js.get "name"]
    val set_name: t -> string -> unit [@@js.set "name"]
    val get_type: t -> string [@@js.get "type"]
    val get_validationMessage: t -> string [@@js.get "validationMessage"]
    val get_validity: t -> _ValidityState [@@js.get "validity"]
    val get_value: t -> string [@@js.get "value"]
    val set_value: t -> string -> unit [@@js.set "value"]
    val get_willValidate: t -> bool [@@js.get "willValidate"]
    val checkValidity: t -> bool [@@js.call "checkValidity"]
    val reportValidity: t -> bool [@@js.call "reportValidity"]
    val setCustomValidity: t -> error:string -> unit [@@js.call "setCustomValidity"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLOutputElement: anonymous_interface_189 [@@js.global "HTMLOutputElement"]
  module[@js.scope "HTMLParagraphElement"] HTMLParagraphElement : sig
    type t = _HTMLParagraphElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_align: t -> string [@@js.get "align"]
    val set_align: t -> string -> unit [@@js.set "align"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLParagraphElement: anonymous_interface_190 [@@js.global "HTMLParagraphElement"]
  module[@js.scope "HTMLParamElement"] HTMLParamElement : sig
    type t = _HTMLParamElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_name: t -> string [@@js.get "name"]
    val set_name: t -> string -> unit [@@js.set "name"]
    val get_type: t -> string [@@js.get "type"]
    val set_type: t -> string -> unit [@@js.set "type"]
    val get_value: t -> string [@@js.get "value"]
    val set_value: t -> string -> unit [@@js.set "value"]
    val get_valueType: t -> string [@@js.get "valueType"]
    val set_valueType: t -> string -> unit [@@js.set "valueType"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLParamElement: anonymous_interface_191 [@@js.global "HTMLParamElement"]
  module[@js.scope "HTMLPictureElement"] HTMLPictureElement : sig
    type t = _HTMLPictureElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLPictureElement: anonymous_interface_192 [@@js.global "HTMLPictureElement"]
  module[@js.scope "HTMLPreElement"] HTMLPreElement : sig
    type t = _HTMLPreElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_width: t -> float [@@js.get "width"]
    val set_width: t -> float -> unit [@@js.set "width"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLPreElement: anonymous_interface_193 [@@js.global "HTMLPreElement"]
  module[@js.scope "HTMLProgressElement"] HTMLProgressElement : sig
    type t = _HTMLProgressElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_labels: t -> _HTMLLabelElement _NodeListOf [@@js.get "labels"]
    val get_max: t -> float [@@js.get "max"]
    val set_max: t -> float -> unit [@@js.set "max"]
    val get_position: t -> float [@@js.get "position"]
    val get_value: t -> float [@@js.get "value"]
    val set_value: t -> float -> unit [@@js.set "value"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLProgressElement: anonymous_interface_194 [@@js.global "HTMLProgressElement"]
  module[@js.scope "HTMLQuoteElement"] HTMLQuoteElement : sig
    type t = _HTMLQuoteElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_cite: t -> string [@@js.get "cite"]
    val set_cite: t -> string -> unit [@@js.set "cite"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLQuoteElement: anonymous_interface_195 [@@js.global "HTMLQuoteElement"]
  module[@js.scope "HTMLScriptElement"] HTMLScriptElement : sig
    type t = _HTMLScriptElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_async: t -> bool [@@js.get "async"]
    val set_async: t -> bool -> unit [@@js.set "async"]
    val get_charset: t -> string [@@js.get "charset"]
    val set_charset: t -> string -> unit [@@js.set "charset"]
    val get_crossOrigin: t -> string or_null [@@js.get "crossOrigin"]
    val set_crossOrigin: t -> string or_null -> unit [@@js.set "crossOrigin"]
    val get_defer: t -> bool [@@js.get "defer"]
    val set_defer: t -> bool -> unit [@@js.set "defer"]
    val get_event: t -> string [@@js.get "event"]
    val set_event: t -> string -> unit [@@js.set "event"]
    val get_htmlFor: t -> string [@@js.get "htmlFor"]
    val set_htmlFor: t -> string -> unit [@@js.set "htmlFor"]
    val get_integrity: t -> string [@@js.get "integrity"]
    val set_integrity: t -> string -> unit [@@js.set "integrity"]
    val get_noModule: t -> bool [@@js.get "noModule"]
    val set_noModule: t -> bool -> unit [@@js.set "noModule"]
    val get_referrerPolicy: t -> string [@@js.get "referrerPolicy"]
    val set_referrerPolicy: t -> string -> unit [@@js.set "referrerPolicy"]
    val get_src: t -> string [@@js.get "src"]
    val set_src: t -> string -> unit [@@js.set "src"]
    val get_text: t -> string [@@js.get "text"]
    val set_text: t -> string -> unit [@@js.set "text"]
    val get_type: t -> string [@@js.get "type"]
    val set_type: t -> string -> unit [@@js.set "type"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLScriptElement: anonymous_interface_196 [@@js.global "HTMLScriptElement"]
  module[@js.scope "HTMLSelectElement"] HTMLSelectElement : sig
    type t = _HTMLSelectElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_autocomplete: t -> string [@@js.get "autocomplete"]
    val set_autocomplete: t -> string -> unit [@@js.set "autocomplete"]
    val get_disabled: t -> bool [@@js.get "disabled"]
    val set_disabled: t -> bool -> unit [@@js.set "disabled"]
    val get_form: t -> _HTMLFormElement or_null [@@js.get "form"]
    val get_labels: t -> _HTMLLabelElement _NodeListOf [@@js.get "labels"]
    val get_length: t -> float [@@js.get "length"]
    val set_length: t -> float -> unit [@@js.set "length"]
    val get_multiple: t -> bool [@@js.get "multiple"]
    val set_multiple: t -> bool -> unit [@@js.set "multiple"]
    val get_name: t -> string [@@js.get "name"]
    val set_name: t -> string -> unit [@@js.set "name"]
    val get_options: t -> _HTMLOptionsCollection [@@js.get "options"]
    val get_required: t -> bool [@@js.get "required"]
    val set_required: t -> bool -> unit [@@js.set "required"]
    val get_selectedIndex: t -> float [@@js.get "selectedIndex"]
    val set_selectedIndex: t -> float -> unit [@@js.set "selectedIndex"]
    val get_selectedOptions: t -> _HTMLOptionElement _HTMLCollectionOf [@@js.get "selectedOptions"]
    val get_size: t -> float [@@js.get "size"]
    val set_size: t -> float -> unit [@@js.set "size"]
    val get_type: t -> string [@@js.get "type"]
    val get_validationMessage: t -> string [@@js.get "validationMessage"]
    val get_validity: t -> _ValidityState [@@js.get "validity"]
    val get_value: t -> string [@@js.get "value"]
    val set_value: t -> string -> unit [@@js.set "value"]
    val get_willValidate: t -> bool [@@js.get "willValidate"]
    val add: t -> element:(_HTMLOptGroupElement, _HTMLOptionElement) union2 -> ?before:_HTMLElement or_number or_null -> unit -> unit [@@js.call "add"]
    val checkValidity: t -> bool [@@js.call "checkValidity"]
    val item: t -> index:float -> _Element or_null [@@js.call "item"]
    val namedItem: t -> name:string -> _HTMLOptionElement or_null [@@js.call "namedItem"]
    val remove: t -> unit [@@js.call "remove"]
    val remove': t -> index:float -> unit [@@js.call "remove"]
    val reportValidity: t -> bool [@@js.call "reportValidity"]
    val setCustomValidity: t -> error:string -> unit [@@js.call "setCustomValidity"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val get: t -> float -> (_HTMLOptGroupElement, _HTMLOptionElement) union2 [@@js.index_get]
    val set: t -> float -> (_HTMLOptGroupElement, _HTMLOptionElement) union2 -> unit [@@js.index_set]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLSelectElement: anonymous_interface_197 [@@js.global "HTMLSelectElement"]
  module[@js.scope "HTMLSlotElement"] HTMLSlotElement : sig
    type t = _HTMLSlotElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_name: t -> string [@@js.get "name"]
    val set_name: t -> string -> unit [@@js.set "name"]
    val assignedElements: t -> ?options:_AssignedNodesOptions -> unit -> _Element list [@@js.call "assignedElements"]
    val assignedNodes: t -> ?options:_AssignedNodesOptions -> unit -> _Node list [@@js.call "assignedNodes"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLSlotElement: anonymous_interface_198 [@@js.global "HTMLSlotElement"]
  module[@js.scope "HTMLSourceElement"] HTMLSourceElement : sig
    type t = _HTMLSourceElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_media: t -> string [@@js.get "media"]
    val set_media: t -> string -> unit [@@js.set "media"]
    val get_sizes: t -> string [@@js.get "sizes"]
    val set_sizes: t -> string -> unit [@@js.set "sizes"]
    val get_src: t -> string [@@js.get "src"]
    val set_src: t -> string -> unit [@@js.set "src"]
    val get_srcset: t -> string [@@js.get "srcset"]
    val set_srcset: t -> string -> unit [@@js.set "srcset"]
    val get_type: t -> string [@@js.get "type"]
    val set_type: t -> string -> unit [@@js.set "type"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLSourceElement: anonymous_interface_199 [@@js.global "HTMLSourceElement"]
  module[@js.scope "HTMLSpanElement"] HTMLSpanElement : sig
    type t = _HTMLSpanElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLSpanElement: anonymous_interface_200 [@@js.global "HTMLSpanElement"]
  module[@js.scope "HTMLStyleElement"] HTMLStyleElement : sig
    type t = _HTMLStyleElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_media: t -> string [@@js.get "media"]
    val set_media: t -> string -> unit [@@js.set "media"]
    val get_type: t -> string [@@js.get "type"]
    val set_type: t -> string -> unit [@@js.set "type"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
    val cast': t -> _LinkStyle [@@js.cast]
  end
  val hTMLStyleElement: anonymous_interface_201 [@@js.global "HTMLStyleElement"]
  module[@js.scope "HTMLTableCaptionElement"] HTMLTableCaptionElement : sig
    type t = _HTMLTableCaptionElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_align: t -> string [@@js.get "align"]
    val set_align: t -> string -> unit [@@js.set "align"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLTableCaptionElement: anonymous_interface_202 [@@js.global "HTMLTableCaptionElement"]
  module[@js.scope "HTMLTableCellElement"] HTMLTableCellElement : sig
    type t = _HTMLTableCellElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_abbr: t -> string [@@js.get "abbr"]
    val set_abbr: t -> string -> unit [@@js.set "abbr"]
    val get_align: t -> string [@@js.get "align"]
    val set_align: t -> string -> unit [@@js.set "align"]
    val get_axis: t -> string [@@js.get "axis"]
    val set_axis: t -> string -> unit [@@js.set "axis"]
    val get_bgColor: t -> string [@@js.get "bgColor"]
    val set_bgColor: t -> string -> unit [@@js.set "bgColor"]
    val get_cellIndex: t -> float [@@js.get "cellIndex"]
    val get_ch: t -> string [@@js.get "ch"]
    val set_ch: t -> string -> unit [@@js.set "ch"]
    val get_chOff: t -> string [@@js.get "chOff"]
    val set_chOff: t -> string -> unit [@@js.set "chOff"]
    val get_colSpan: t -> float [@@js.get "colSpan"]
    val set_colSpan: t -> float -> unit [@@js.set "colSpan"]
    val get_headers: t -> string [@@js.get "headers"]
    val set_headers: t -> string -> unit [@@js.set "headers"]
    val get_height: t -> string [@@js.get "height"]
    val set_height: t -> string -> unit [@@js.set "height"]
    val get_noWrap: t -> bool [@@js.get "noWrap"]
    val set_noWrap: t -> bool -> unit [@@js.set "noWrap"]
    val get_rowSpan: t -> float [@@js.get "rowSpan"]
    val set_rowSpan: t -> float -> unit [@@js.set "rowSpan"]
    val get_scope: t -> string [@@js.get "scope"]
    val set_scope: t -> string -> unit [@@js.set "scope"]
    val get_vAlign: t -> string [@@js.get "vAlign"]
    val set_vAlign: t -> string -> unit [@@js.set "vAlign"]
    val get_width: t -> string [@@js.get "width"]
    val set_width: t -> string -> unit [@@js.set "width"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLTableCellElement: anonymous_interface_203 [@@js.global "HTMLTableCellElement"]
  module[@js.scope "HTMLTableColElement"] HTMLTableColElement : sig
    type t = _HTMLTableColElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_align: t -> string [@@js.get "align"]
    val set_align: t -> string -> unit [@@js.set "align"]
    val get_ch: t -> string [@@js.get "ch"]
    val set_ch: t -> string -> unit [@@js.set "ch"]
    val get_chOff: t -> string [@@js.get "chOff"]
    val set_chOff: t -> string -> unit [@@js.set "chOff"]
    val get_span: t -> float [@@js.get "span"]
    val set_span: t -> float -> unit [@@js.set "span"]
    val get_vAlign: t -> string [@@js.get "vAlign"]
    val set_vAlign: t -> string -> unit [@@js.set "vAlign"]
    val get_width: t -> string [@@js.get "width"]
    val set_width: t -> string -> unit [@@js.set "width"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLTableColElement: anonymous_interface_204 [@@js.global "HTMLTableColElement"]
  module[@js.scope "HTMLTableDataCellElement"] HTMLTableDataCellElement : sig
    type t = _HTMLTableDataCellElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLTableCellElement [@@js.cast]
  end
  val hTMLTableDataCellElement: anonymous_interface_205 [@@js.global "HTMLTableDataCellElement"]
  module[@js.scope "HTMLTableElement"] HTMLTableElement : sig
    type t = _HTMLTableElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_align: t -> string [@@js.get "align"]
    val set_align: t -> string -> unit [@@js.set "align"]
    val get_bgColor: t -> string [@@js.get "bgColor"]
    val set_bgColor: t -> string -> unit [@@js.set "bgColor"]
    val get_border: t -> string [@@js.get "border"]
    val set_border: t -> string -> unit [@@js.set "border"]
    val get_caption: t -> _HTMLTableCaptionElement or_null [@@js.get "caption"]
    val set_caption: t -> _HTMLTableCaptionElement or_null -> unit [@@js.set "caption"]
    val get_cellPadding: t -> string [@@js.get "cellPadding"]
    val set_cellPadding: t -> string -> unit [@@js.set "cellPadding"]
    val get_cellSpacing: t -> string [@@js.get "cellSpacing"]
    val set_cellSpacing: t -> string -> unit [@@js.set "cellSpacing"]
    val get_frame: t -> string [@@js.get "frame"]
    val set_frame: t -> string -> unit [@@js.set "frame"]
    val get_rows: t -> _HTMLTableRowElement _HTMLCollectionOf [@@js.get "rows"]
    val get_rules: t -> string [@@js.get "rules"]
    val set_rules: t -> string -> unit [@@js.set "rules"]
    val get_summary: t -> string [@@js.get "summary"]
    val set_summary: t -> string -> unit [@@js.set "summary"]
    val get_tBodies: t -> _HTMLTableSectionElement _HTMLCollectionOf [@@js.get "tBodies"]
    val get_tFoot: t -> _HTMLTableSectionElement or_null [@@js.get "tFoot"]
    val set_tFoot: t -> _HTMLTableSectionElement or_null -> unit [@@js.set "tFoot"]
    val get_tHead: t -> _HTMLTableSectionElement or_null [@@js.get "tHead"]
    val set_tHead: t -> _HTMLTableSectionElement or_null -> unit [@@js.set "tHead"]
    val get_width: t -> string [@@js.get "width"]
    val set_width: t -> string -> unit [@@js.set "width"]
    val createCaption: t -> _HTMLTableCaptionElement [@@js.call "createCaption"]
    val createTBody: t -> _HTMLTableSectionElement [@@js.call "createTBody"]
    val createTFoot: t -> _HTMLTableSectionElement [@@js.call "createTFoot"]
    val createTHead: t -> _HTMLTableSectionElement [@@js.call "createTHead"]
    val deleteCaption: t -> unit [@@js.call "deleteCaption"]
    val deleteRow: t -> index:float -> unit [@@js.call "deleteRow"]
    val deleteTFoot: t -> unit [@@js.call "deleteTFoot"]
    val deleteTHead: t -> unit [@@js.call "deleteTHead"]
    val insertRow: t -> ?index:float -> unit -> _HTMLTableRowElement [@@js.call "insertRow"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLTableElement: anonymous_interface_206 [@@js.global "HTMLTableElement"]
  module[@js.scope "HTMLTableHeaderCellElement"] HTMLTableHeaderCellElement : sig
    type t = _HTMLTableHeaderCellElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_scope: t -> string [@@js.get "scope"]
    val set_scope: t -> string -> unit [@@js.set "scope"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLTableCellElement [@@js.cast]
  end
  val hTMLTableHeaderCellElement: anonymous_interface_207 [@@js.global "HTMLTableHeaderCellElement"]
  module[@js.scope "HTMLTableRowElement"] HTMLTableRowElement : sig
    type t = _HTMLTableRowElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_align: t -> string [@@js.get "align"]
    val set_align: t -> string -> unit [@@js.set "align"]
    val get_bgColor: t -> string [@@js.get "bgColor"]
    val set_bgColor: t -> string -> unit [@@js.set "bgColor"]
    val get_cells: t -> (_HTMLTableDataCellElement, _HTMLTableHeaderCellElement) union2 _HTMLCollectionOf [@@js.get "cells"]
    val get_ch: t -> string [@@js.get "ch"]
    val set_ch: t -> string -> unit [@@js.set "ch"]
    val get_chOff: t -> string [@@js.get "chOff"]
    val set_chOff: t -> string -> unit [@@js.set "chOff"]
    val get_rowIndex: t -> float [@@js.get "rowIndex"]
    val get_sectionRowIndex: t -> float [@@js.get "sectionRowIndex"]
    val get_vAlign: t -> string [@@js.get "vAlign"]
    val set_vAlign: t -> string -> unit [@@js.set "vAlign"]
    val deleteCell: t -> index:float -> unit [@@js.call "deleteCell"]
    val insertCell: t -> ?index:float -> unit -> _HTMLTableDataCellElement [@@js.call "insertCell"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLTableRowElement: anonymous_interface_208 [@@js.global "HTMLTableRowElement"]
  module[@js.scope "HTMLTableSectionElement"] HTMLTableSectionElement : sig
    type t = _HTMLTableSectionElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_align: t -> string [@@js.get "align"]
    val set_align: t -> string -> unit [@@js.set "align"]
    val get_ch: t -> string [@@js.get "ch"]
    val set_ch: t -> string -> unit [@@js.set "ch"]
    val get_chOff: t -> string [@@js.get "chOff"]
    val set_chOff: t -> string -> unit [@@js.set "chOff"]
    val get_rows: t -> _HTMLTableRowElement _HTMLCollectionOf [@@js.get "rows"]
    val get_vAlign: t -> string [@@js.get "vAlign"]
    val set_vAlign: t -> string -> unit [@@js.set "vAlign"]
    val deleteRow: t -> index:float -> unit [@@js.call "deleteRow"]
    val insertRow: t -> ?index:float -> unit -> _HTMLTableRowElement [@@js.call "insertRow"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLTableSectionElement: anonymous_interface_209 [@@js.global "HTMLTableSectionElement"]
  module[@js.scope "HTMLTemplateElement"] HTMLTemplateElement : sig
    type t = _HTMLTemplateElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_content: t -> _DocumentFragment [@@js.get "content"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLTemplateElement: anonymous_interface_210 [@@js.global "HTMLTemplateElement"]
  module[@js.scope "HTMLTextAreaElement"] HTMLTextAreaElement : sig
    type t = _HTMLTextAreaElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_autocomplete: t -> string [@@js.get "autocomplete"]
    val set_autocomplete: t -> string -> unit [@@js.set "autocomplete"]
    val get_cols: t -> float [@@js.get "cols"]
    val set_cols: t -> float -> unit [@@js.set "cols"]
    val get_defaultValue: t -> string [@@js.get "defaultValue"]
    val set_defaultValue: t -> string -> unit [@@js.set "defaultValue"]
    val get_dirName: t -> string [@@js.get "dirName"]
    val set_dirName: t -> string -> unit [@@js.set "dirName"]
    val get_disabled: t -> bool [@@js.get "disabled"]
    val set_disabled: t -> bool -> unit [@@js.set "disabled"]
    val get_form: t -> _HTMLFormElement or_null [@@js.get "form"]
    val get_labels: t -> _HTMLLabelElement _NodeListOf [@@js.get "labels"]
    val get_maxLength: t -> float [@@js.get "maxLength"]
    val set_maxLength: t -> float -> unit [@@js.set "maxLength"]
    val get_minLength: t -> float [@@js.get "minLength"]
    val set_minLength: t -> float -> unit [@@js.set "minLength"]
    val get_name: t -> string [@@js.get "name"]
    val set_name: t -> string -> unit [@@js.set "name"]
    val get_placeholder: t -> string [@@js.get "placeholder"]
    val set_placeholder: t -> string -> unit [@@js.set "placeholder"]
    val get_readOnly: t -> bool [@@js.get "readOnly"]
    val set_readOnly: t -> bool -> unit [@@js.set "readOnly"]
    val get_required: t -> bool [@@js.get "required"]
    val set_required: t -> bool -> unit [@@js.set "required"]
    val get_rows: t -> float [@@js.get "rows"]
    val set_rows: t -> float -> unit [@@js.set "rows"]
    val get_selectionDirection: t -> ([`L_s188_backward[@js "backward"] | `L_s383_forward[@js "forward"] | `L_s571_none[@js "none"]] [@js.enum]) [@@js.get "selectionDirection"]
    val set_selectionDirection: t -> ([`L_s188_backward | `L_s383_forward | `L_s571_none] [@js.enum]) -> unit [@@js.set "selectionDirection"]
    val get_selectionEnd: t -> float [@@js.get "selectionEnd"]
    val set_selectionEnd: t -> float -> unit [@@js.set "selectionEnd"]
    val get_selectionStart: t -> float [@@js.get "selectionStart"]
    val set_selectionStart: t -> float -> unit [@@js.set "selectionStart"]
    val get_textLength: t -> float [@@js.get "textLength"]
    val get_type: t -> string [@@js.get "type"]
    val get_validationMessage: t -> string [@@js.get "validationMessage"]
    val get_validity: t -> _ValidityState [@@js.get "validity"]
    val get_value: t -> string [@@js.get "value"]
    val set_value: t -> string -> unit [@@js.set "value"]
    val get_willValidate: t -> bool [@@js.get "willValidate"]
    val get_wrap: t -> string [@@js.get "wrap"]
    val set_wrap: t -> string -> unit [@@js.set "wrap"]
    val checkValidity: t -> bool [@@js.call "checkValidity"]
    val reportValidity: t -> bool [@@js.call "reportValidity"]
    val select: t -> unit [@@js.call "select"]
    val setCustomValidity: t -> error:string -> unit [@@js.call "setCustomValidity"]
    val setRangeText: t -> replacement:string -> unit [@@js.call "setRangeText"]
    val setRangeText': t -> replacement:string -> start:float -> end_:float -> ?selectionMode:_SelectionMode -> unit -> unit [@@js.call "setRangeText"]
    val setSelectionRange: t -> start:float -> end_:float -> ?direction:([`L_s188_backward | `L_s383_forward | `L_s571_none] [@js.enum]) -> unit -> unit [@@js.call "setSelectionRange"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLTextAreaElement: anonymous_interface_211 [@@js.global "HTMLTextAreaElement"]
  module[@js.scope "HTMLTimeElement"] HTMLTimeElement : sig
    type t = _HTMLTimeElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_dateTime: t -> string [@@js.get "dateTime"]
    val set_dateTime: t -> string -> unit [@@js.set "dateTime"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLTimeElement: anonymous_interface_212 [@@js.global "HTMLTimeElement"]
  module[@js.scope "HTMLTitleElement"] HTMLTitleElement : sig
    type t = _HTMLTitleElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_text: t -> string [@@js.get "text"]
    val set_text: t -> string -> unit [@@js.set "text"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLTitleElement: anonymous_interface_213 [@@js.global "HTMLTitleElement"]
  module[@js.scope "HTMLTrackElement"] HTMLTrackElement : sig
    type t = _HTMLTrackElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_default: t -> bool [@@js.get "default"]
    val set_default: t -> bool -> unit [@@js.set "default"]
    val get_kind: t -> string [@@js.get "kind"]
    val set_kind: t -> string -> unit [@@js.set "kind"]
    val get_label: t -> string [@@js.get "label"]
    val set_label: t -> string -> unit [@@js.set "label"]
    val get_readyState: t -> float [@@js.get "readyState"]
    val get_src: t -> string [@@js.get "src"]
    val set_src: t -> string -> unit [@@js.set "src"]
    val get_srclang: t -> string [@@js.get "srclang"]
    val set_srclang: t -> string -> unit [@@js.set "srclang"]
    val get_track: t -> _TextTrack [@@js.get "track"]
    val get_ERROR: t -> float [@@js.get "ERROR"]
    val get_LOADED: t -> float [@@js.get "LOADED"]
    val get_LOADING: t -> float [@@js.get "LOADING"]
    val get_NONE: t -> float [@@js.get "NONE"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLTrackElement: anonymous_interface_214 [@@js.global "HTMLTrackElement"]
  module[@js.scope "HTMLUListElement"] HTMLUListElement : sig
    type t = _HTMLUListElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_compact: t -> bool [@@js.get "compact"]
    val set_compact: t -> bool -> unit [@@js.set "compact"]
    val get_type: t -> string [@@js.get "type"]
    val set_type: t -> string -> unit [@@js.set "type"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLUListElement: anonymous_interface_215 [@@js.global "HTMLUListElement"]
  module[@js.scope "HTMLUnknownElement"] HTMLUnknownElement : sig
    type t = _HTMLUnknownElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLElement [@@js.cast]
  end
  val hTMLUnknownElement: anonymous_interface_216 [@@js.global "HTMLUnknownElement"]
  module[@js.scope "HTMLVideoElementEventMap"] HTMLVideoElementEventMap : sig
    type t = _HTMLVideoElementEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_MSVideoFormatChanged: t -> _Event [@@js.get "MSVideoFormatChanged"]
    val set_MSVideoFormatChanged: t -> _Event -> unit [@@js.set "MSVideoFormatChanged"]
    val get_MSVideoFrameStepCompleted: t -> _Event [@@js.get "MSVideoFrameStepCompleted"]
    val set_MSVideoFrameStepCompleted: t -> _Event -> unit [@@js.set "MSVideoFrameStepCompleted"]
    val get_MSVideoOptimalLayoutChanged: t -> _Event [@@js.get "MSVideoOptimalLayoutChanged"]
    val set_MSVideoOptimalLayoutChanged: t -> _Event -> unit [@@js.set "MSVideoOptimalLayoutChanged"]
    val cast: t -> _HTMLMediaElementEventMap [@@js.cast]
  end
  module[@js.scope "HTMLVideoElement"] HTMLVideoElement : sig
    type t = _HTMLVideoElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_height: t -> float [@@js.get "height"]
    val set_height: t -> float -> unit [@@js.set "height"]
    val get_msHorizontalMirror: t -> bool [@@js.get "msHorizontalMirror"]
    val set_msHorizontalMirror: t -> bool -> unit [@@js.set "msHorizontalMirror"]
    val get_msIsLayoutOptimalForPlayback: t -> bool [@@js.get "msIsLayoutOptimalForPlayback"]
    val get_msIsStereo3D: t -> bool [@@js.get "msIsStereo3D"]
    val get_msStereo3DPackingMode: t -> string [@@js.get "msStereo3DPackingMode"]
    val set_msStereo3DPackingMode: t -> string -> unit [@@js.set "msStereo3DPackingMode"]
    val get_msStereo3DRenderMode: t -> string [@@js.get "msStereo3DRenderMode"]
    val set_msStereo3DRenderMode: t -> string -> unit [@@js.set "msStereo3DRenderMode"]
    val get_msZoom: t -> bool [@@js.get "msZoom"]
    val set_msZoom: t -> bool -> unit [@@js.set "msZoom"]
    val get_onMSVideoFormatChanged: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onMSVideoFormatChanged"]
    val set_onMSVideoFormatChanged: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onMSVideoFormatChanged"]
    val get_onMSVideoFrameStepCompleted: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onMSVideoFrameStepCompleted"]
    val set_onMSVideoFrameStepCompleted: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onMSVideoFrameStepCompleted"]
    val get_onMSVideoOptimalLayoutChanged: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onMSVideoOptimalLayoutChanged"]
    val set_onMSVideoOptimalLayoutChanged: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onMSVideoOptimalLayoutChanged"]
    val get_poster: t -> string [@@js.get "poster"]
    val set_poster: t -> string -> unit [@@js.set "poster"]
    val get_videoHeight: t -> float [@@js.get "videoHeight"]
    val get_videoWidth: t -> float [@@js.get "videoWidth"]
    val get_webkitDisplayingFullscreen: t -> bool [@@js.get "webkitDisplayingFullscreen"]
    val get_webkitSupportsFullscreen: t -> bool [@@js.get "webkitSupportsFullscreen"]
    val get_width: t -> float [@@js.get "width"]
    val set_width: t -> float -> unit [@@js.set "width"]
    val getVideoPlaybackQuality: t -> _VideoPlaybackQuality [@@js.call "getVideoPlaybackQuality"]
    val msFrameStep: t -> forward:bool -> unit [@@js.call "msFrameStep"]
    val msInsertVideoEffect: t -> activatableClassId:string -> effectRequired:bool -> ?config:any -> unit -> unit [@@js.call "msInsertVideoEffect"]
    val msSetVideoRectangle: t -> left:float -> top:float -> right:float -> bottom:float -> unit [@@js.call "msSetVideoRectangle"]
    val webkitEnterFullScreen: t -> unit [@@js.call "webkitEnterFullScreen"]
    val webkitEnterFullscreen: t -> unit [@@js.call "webkitEnterFullscreen"]
    val webkitExitFullScreen: t -> unit [@@js.call "webkitExitFullScreen"]
    val webkitExitFullscreen: t -> unit [@@js.call "webkitExitFullscreen"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _HTMLMediaElement [@@js.cast]
  end
  val hTMLVideoElement: anonymous_interface_217 [@@js.global "HTMLVideoElement"]
  module[@js.scope "HashChangeEvent"] HashChangeEvent : sig
    type t = _HashChangeEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_newURL: t -> string [@@js.get "newURL"]
    val get_oldURL: t -> string [@@js.get "oldURL"]
    val cast: t -> _Event [@@js.cast]
  end
  val hashChangeEvent: anonymous_interface_218 [@@js.global "HashChangeEvent"]
  module[@js.scope "Headers"] Headers : sig
    type t = _Headers
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val append: t -> name:string -> value:string -> unit [@@js.call "append"]
    val delete: t -> name:string -> unit [@@js.call "delete"]
    val get_: t -> name:string -> string or_null [@@js.call "get"]
    val has: t -> name:string -> bool [@@js.call "has"]
    val set_: t -> name:string -> value:string -> unit [@@js.call "set"]
    val forEach: t -> callbackfn:(value:string -> key:string -> parent:t -> unit) -> ?thisArg:any -> unit -> unit [@@js.call "forEach"]
  end
  val headers: anonymous_interface_219 [@@js.global "Headers"]
  module[@js.scope "History"] History : sig
    type t = _History
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_length: t -> float [@@js.get "length"]
    val get_scrollRestoration: t -> _ScrollRestoration [@@js.get "scrollRestoration"]
    val set_scrollRestoration: t -> _ScrollRestoration -> unit [@@js.set "scrollRestoration"]
    val get_state: t -> any [@@js.get "state"]
    val back: t -> unit [@@js.call "back"]
    val forward: t -> unit [@@js.call "forward"]
    val go: t -> ?delta:float -> unit -> unit [@@js.call "go"]
    val pushState: t -> data:any -> title:string -> ?url:string or_null -> unit -> unit [@@js.call "pushState"]
    val replaceState: t -> data:any -> title:string -> ?url:string or_null -> unit -> unit [@@js.call "replaceState"]
  end
  val history: anonymous_interface_220 [@@js.global "History"]
  module[@js.scope "HkdfCtrParams"] HkdfCtrParams : sig
    type t = _HkdfCtrParams
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_context: t -> ((((Float64Array.t_0, Int16Array.t_0, Int32Array.t_0, Int8Array.t_0, Uint16Array.t_0, Uint32Array.t_0, Uint8Array.t_0, Uint8ClampedArray.t_0) union8, Float32Array.t_0) or_, DataView.t_0) or_, ArrayBuffer.t_0) or_ [@@js.get "context"]
    val set_context: t -> ((((Float64Array.t_0, Int16Array.t_0, Int32Array.t_0, Int8Array.t_0, Uint16Array.t_0, Uint32Array.t_0, Uint8Array.t_0, Uint8ClampedArray.t_0) union8, Float32Array.t_0) or_, DataView.t_0) or_, ArrayBuffer.t_0) or_ -> unit [@@js.set "context"]
    val get_hash: t -> _Algorithm or_string [@@js.get "hash"]
    val set_hash: t -> _Algorithm or_string -> unit [@@js.set "hash"]
    val get_label: t -> ((((Float64Array.t_0, Int16Array.t_0, Int32Array.t_0, Int8Array.t_0, Uint16Array.t_0, Uint32Array.t_0, Uint8Array.t_0, Uint8ClampedArray.t_0) union8, Float32Array.t_0) or_, DataView.t_0) or_, ArrayBuffer.t_0) or_ [@@js.get "label"]
    val set_label: t -> ((((Float64Array.t_0, Int16Array.t_0, Int32Array.t_0, Int8Array.t_0, Uint16Array.t_0, Uint32Array.t_0, Uint8Array.t_0, Uint8ClampedArray.t_0) union8, Float32Array.t_0) or_, DataView.t_0) or_, ArrayBuffer.t_0) or_ -> unit [@@js.set "label"]
    val cast: t -> _Algorithm [@@js.cast]
  end
  module[@js.scope "IDBArrayKey"] IDBArrayKey : sig
    type t = _IDBArrayKey
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val cast: t -> _IDBValidKey list [@@js.cast]
  end
  module[@js.scope "IDBCursor"] IDBCursor : sig
    type t = _IDBCursor
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_direction: t -> _IDBCursorDirection [@@js.get "direction"]
    val get_key: t -> _IDBValidKey [@@js.get "key"]
    val get_primaryKey: t -> _IDBValidKey [@@js.get "primaryKey"]
    val get_source: t -> (_IDBIndex, _IDBObjectStore) union2 [@@js.get "source"]
    val advance: t -> count:float -> unit [@@js.call "advance"]
    val continue: t -> ?key:_IDBValidKey -> unit -> unit [@@js.call "continue"]
    val continuePrimaryKey: t -> key:_IDBValidKey -> primaryKey:_IDBValidKey -> unit [@@js.call "continuePrimaryKey"]
    val delete: t -> never or_undefined _IDBRequest [@@js.call "delete"]
    val update: t -> value:any -> _IDBValidKey _IDBRequest [@@js.call "update"]
  end
  val iDBCursor: anonymous_interface_221 [@@js.global "IDBCursor"]
  module[@js.scope "IDBCursorWithValue"] IDBCursorWithValue : sig
    type t = _IDBCursorWithValue
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_value: t -> any [@@js.get "value"]
    val cast: t -> _IDBCursor [@@js.cast]
  end
  val iDBCursorWithValue: anonymous_interface_222 [@@js.global "IDBCursorWithValue"]
  module[@js.scope "IDBDatabaseEventMap"] IDBDatabaseEventMap : sig
    type t = _IDBDatabaseEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_abort: t -> _Event [@@js.get "abort"]
    val set_abort: t -> _Event -> unit [@@js.set "abort"]
    val get_close: t -> _Event [@@js.get "close"]
    val set_close: t -> _Event -> unit [@@js.set "close"]
    val get_error: t -> _Event [@@js.get "error"]
    val set_error: t -> _Event -> unit [@@js.set "error"]
    val get_versionchange: t -> _IDBVersionChangeEvent [@@js.get "versionchange"]
    val set_versionchange: t -> _IDBVersionChangeEvent -> unit [@@js.set "versionchange"]
  end
  module[@js.scope "IDBDatabase"] IDBDatabase : sig
    type t = _IDBDatabase
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_name: t -> string [@@js.get "name"]
    val get_objectStoreNames: t -> _DOMStringList [@@js.get "objectStoreNames"]
    val get_onabort: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onabort"]
    val set_onabort: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onabort"]
    val get_onclose: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onclose"]
    val set_onclose: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onclose"]
    val get_onerror: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onerror"]
    val set_onerror: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onerror"]
    val get_onversionchange: t -> (this:t -> ev:_IDBVersionChangeEvent -> any) or_null [@@js.get "onversionchange"]
    val set_onversionchange: t -> (this:t -> ev:_IDBVersionChangeEvent -> any) or_null -> unit [@@js.set "onversionchange"]
    val get_version: t -> float [@@js.get "version"]
    val close: t -> unit [@@js.call "close"]
    val createObjectStore: t -> name:string -> ?optionalParameters:_IDBObjectStoreParameters -> unit -> _IDBObjectStore [@@js.call "createObjectStore"]
    val deleteObjectStore: t -> name:string -> unit [@@js.call "deleteObjectStore"]
    val transaction: t -> storeNames:string list or_string -> ?mode:_IDBTransactionMode -> unit -> _IDBTransaction [@@js.call "transaction"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val iDBDatabase: anonymous_interface_223 [@@js.global "IDBDatabase"]
  module[@js.scope "IDBFactory"] IDBFactory : sig
    type t = _IDBFactory
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val cmp: t -> first:any -> second:any -> float [@@js.call "cmp"]
    val deleteDatabase: t -> name:string -> _IDBOpenDBRequest [@@js.call "deleteDatabase"]
    val open_: t -> name:string -> ?version:float -> unit -> _IDBOpenDBRequest [@@js.call "open"]
  end
  val iDBFactory: anonymous_interface_224 [@@js.global "IDBFactory"]
  module[@js.scope "IDBIndex"] IDBIndex : sig
    type t = _IDBIndex
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_keyPath: t -> string list or_string [@@js.get "keyPath"]
    val get_multiEntry: t -> bool [@@js.get "multiEntry"]
    val get_name: t -> string [@@js.get "name"]
    val set_name: t -> string -> unit [@@js.set "name"]
    val get_objectStore: t -> _IDBObjectStore [@@js.get "objectStore"]
    val get_unique: t -> bool [@@js.get "unique"]
    val count: t -> ?key:(_IDBKeyRange, _IDBValidKey) union2 -> unit -> float _IDBRequest [@@js.call "count"]
    val get_: t -> key:(_IDBKeyRange, _IDBValidKey) union2 -> any or_undefined _IDBRequest [@@js.call "get"]
    val getAll: t -> ?query:(_IDBKeyRange, _IDBValidKey) union2 or_null -> ?count:float -> unit -> any list _IDBRequest [@@js.call "getAll"]
    val getAllKeys: t -> ?query:(_IDBKeyRange, _IDBValidKey) union2 or_null -> ?count:float -> unit -> _IDBValidKey list _IDBRequest [@@js.call "getAllKeys"]
    val getKey: t -> key:(_IDBKeyRange, _IDBValidKey) union2 -> _IDBValidKey or_undefined _IDBRequest [@@js.call "getKey"]
    val openCursor: t -> ?query:(_IDBKeyRange, _IDBValidKey) union2 or_null -> ?direction:_IDBCursorDirection -> unit -> _IDBCursorWithValue or_null _IDBRequest [@@js.call "openCursor"]
    val openKeyCursor: t -> ?query:(_IDBKeyRange, _IDBValidKey) union2 or_null -> ?direction:_IDBCursorDirection -> unit -> _IDBCursor or_null _IDBRequest [@@js.call "openKeyCursor"]
  end
  val iDBIndex: anonymous_interface_225 [@@js.global "IDBIndex"]
  module[@js.scope "IDBKeyRange"] IDBKeyRange : sig
    type t = _IDBKeyRange
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_lower: t -> any [@@js.get "lower"]
    val get_lowerOpen: t -> bool [@@js.get "lowerOpen"]
    val get_upper: t -> any [@@js.get "upper"]
    val get_upperOpen: t -> bool [@@js.get "upperOpen"]
    val includes: t -> key:any -> bool [@@js.call "includes"]
  end
  val iDBKeyRange: anonymous_interface_226 [@@js.global "IDBKeyRange"]
  module[@js.scope "IDBObjectStore"] IDBObjectStore : sig
    type t = _IDBObjectStore
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_autoIncrement: t -> bool [@@js.get "autoIncrement"]
    val get_indexNames: t -> _DOMStringList [@@js.get "indexNames"]
    val get_keyPath: t -> string list or_string [@@js.get "keyPath"]
    val get_name: t -> string [@@js.get "name"]
    val set_name: t -> string -> unit [@@js.set "name"]
    val get_transaction: t -> _IDBTransaction [@@js.get "transaction"]
    val add: t -> value:any -> ?key:_IDBValidKey -> unit -> _IDBValidKey _IDBRequest [@@js.call "add"]
    val clear: t -> never or_undefined _IDBRequest [@@js.call "clear"]
    val count: t -> ?key:(_IDBKeyRange, _IDBValidKey) union2 -> unit -> float _IDBRequest [@@js.call "count"]
    val createIndex: t -> name:string -> keyPath:string list or_string -> ?options:_IDBIndexParameters -> unit -> _IDBIndex [@@js.call "createIndex"]
    val delete: t -> key:(_IDBKeyRange, _IDBValidKey) union2 -> never or_undefined _IDBRequest [@@js.call "delete"]
    val deleteIndex: t -> name:string -> unit [@@js.call "deleteIndex"]
    val get_: t -> query:(_IDBKeyRange, _IDBValidKey) union2 -> any or_undefined _IDBRequest [@@js.call "get"]
    val getAll: t -> ?query:(_IDBKeyRange, _IDBValidKey) union2 or_null -> ?count:float -> unit -> any list _IDBRequest [@@js.call "getAll"]
    val getAllKeys: t -> ?query:(_IDBKeyRange, _IDBValidKey) union2 or_null -> ?count:float -> unit -> _IDBValidKey list _IDBRequest [@@js.call "getAllKeys"]
    val getKey: t -> query:(_IDBKeyRange, _IDBValidKey) union2 -> _IDBValidKey or_undefined _IDBRequest [@@js.call "getKey"]
    val index: t -> name:string -> _IDBIndex [@@js.call "index"]
    val openCursor: t -> ?query:(_IDBKeyRange, _IDBValidKey) union2 or_null -> ?direction:_IDBCursorDirection -> unit -> _IDBCursorWithValue or_null _IDBRequest [@@js.call "openCursor"]
    val openKeyCursor: t -> ?query:(_IDBKeyRange, _IDBValidKey) union2 or_null -> ?direction:_IDBCursorDirection -> unit -> _IDBCursor or_null _IDBRequest [@@js.call "openKeyCursor"]
    val put: t -> value:any -> ?key:_IDBValidKey -> unit -> _IDBValidKey _IDBRequest [@@js.call "put"]
  end
  val iDBObjectStore: anonymous_interface_227 [@@js.global "IDBObjectStore"]
  module[@js.scope "IDBOpenDBRequestEventMap"] IDBOpenDBRequestEventMap : sig
    type t = _IDBOpenDBRequestEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_blocked: t -> _Event [@@js.get "blocked"]
    val set_blocked: t -> _Event -> unit [@@js.set "blocked"]
    val get_upgradeneeded: t -> _IDBVersionChangeEvent [@@js.get "upgradeneeded"]
    val set_upgradeneeded: t -> _IDBVersionChangeEvent -> unit [@@js.set "upgradeneeded"]
    val cast: t -> _IDBRequestEventMap [@@js.cast]
  end
  module[@js.scope "IDBOpenDBRequest"] IDBOpenDBRequest : sig
    type t = _IDBOpenDBRequest
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_onblocked: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onblocked"]
    val set_onblocked: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onblocked"]
    val get_onupgradeneeded: t -> (this:t -> ev:_IDBVersionChangeEvent -> any) or_null [@@js.get "onupgradeneeded"]
    val set_onupgradeneeded: t -> (this:t -> ev:_IDBVersionChangeEvent -> any) or_null -> unit [@@js.set "onupgradeneeded"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _IDBDatabase _IDBRequest [@@js.cast]
  end
  val iDBOpenDBRequest: anonymous_interface_228 [@@js.global "IDBOpenDBRequest"]
  module[@js.scope "IDBRequestEventMap"] IDBRequestEventMap : sig
    type t = _IDBRequestEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_error: t -> _Event [@@js.get "error"]
    val set_error: t -> _Event -> unit [@@js.set "error"]
    val get_success: t -> _Event [@@js.get "success"]
    val set_success: t -> _Event -> unit [@@js.set "success"]
  end
  module[@js.scope "IDBRequest"] IDBRequest : sig
    type 'T t = 'T _IDBRequest
    val t_to_js: ('T -> Ojs.t) -> 'T t -> Ojs.t
    val t_of_js: (Ojs.t -> 'T) -> Ojs.t -> 'T t
    type 'T t_1 = 'T t
    val t_1_to_js: ('T -> Ojs.t) -> 'T t_1 -> Ojs.t
    val t_1_of_js: (Ojs.t -> 'T) -> Ojs.t -> 'T t_1
    type t_0 = any t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_error: 'T t -> _DOMException or_null [@@js.get "error"]
    val get_onerror: 'T t -> (this:'T t -> ev:_Event -> any) or_null [@@js.get "onerror"]
    val set_onerror: 'T t -> (this:'T t -> ev:_Event -> any) or_null -> unit [@@js.set "onerror"]
    val get_onsuccess: 'T t -> (this:'T t -> ev:_Event -> any) or_null [@@js.get "onsuccess"]
    val set_onsuccess: 'T t -> (this:'T t -> ev:_Event -> any) or_null -> unit [@@js.set "onsuccess"]
    val get_readyState: 'T t -> _IDBRequestReadyState [@@js.get "readyState"]
    val get_result: 'T t -> 'T [@@js.get "result"]
    val get_source: 'T t -> (_IDBCursor, _IDBIndex, _IDBObjectStore) union3 [@@js.get "source"]
    val get_transaction: 'T t -> _IDBTransaction or_null [@@js.get "transaction"]
    val addEventListener: 'T t -> type_:'K -> listener:(this:'T t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': 'T t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: 'T t -> type_:'K -> listener:(this:'T t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': 'T t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: 'T t -> _EventTarget [@@js.cast]
  end
  val iDBRequest: anonymous_interface_229 [@@js.global "IDBRequest"]
  module[@js.scope "IDBTransactionEventMap"] IDBTransactionEventMap : sig
    type t = _IDBTransactionEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_abort: t -> _Event [@@js.get "abort"]
    val set_abort: t -> _Event -> unit [@@js.set "abort"]
    val get_complete: t -> _Event [@@js.get "complete"]
    val set_complete: t -> _Event -> unit [@@js.set "complete"]
    val get_error: t -> _Event [@@js.get "error"]
    val set_error: t -> _Event -> unit [@@js.set "error"]
  end
  module[@js.scope "IDBTransaction"] IDBTransaction : sig
    type t = _IDBTransaction
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_db: t -> _IDBDatabase [@@js.get "db"]
    val get_error: t -> _DOMException [@@js.get "error"]
    val get_mode: t -> _IDBTransactionMode [@@js.get "mode"]
    val get_objectStoreNames: t -> _DOMStringList [@@js.get "objectStoreNames"]
    val get_onabort: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onabort"]
    val set_onabort: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onabort"]
    val get_oncomplete: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "oncomplete"]
    val set_oncomplete: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "oncomplete"]
    val get_onerror: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onerror"]
    val set_onerror: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onerror"]
    val abort: t -> unit [@@js.call "abort"]
    val objectStore: t -> name:string -> _IDBObjectStore [@@js.call "objectStore"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val iDBTransaction: anonymous_interface_230 [@@js.global "IDBTransaction"]
  module[@js.scope "IDBVersionChangeEvent"] IDBVersionChangeEvent : sig
    type t = _IDBVersionChangeEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_newVersion: t -> float or_null [@@js.get "newVersion"]
    val get_oldVersion: t -> float [@@js.get "oldVersion"]
    val cast: t -> _Event [@@js.cast]
  end
  val iDBVersionChangeEvent: anonymous_interface_231 [@@js.global "IDBVersionChangeEvent"]
  module[@js.scope "IIRFilterNode"] IIRFilterNode : sig
    type t = _IIRFilterNode
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val getFrequencyResponse: t -> frequencyHz:Float32Array.t_0 -> magResponse:Float32Array.t_0 -> phaseResponse:Float32Array.t_0 -> unit [@@js.call "getFrequencyResponse"]
    val cast: t -> _AudioNode [@@js.cast]
  end
  val iIRFilterNode: anonymous_interface_232 [@@js.global "IIRFilterNode"]
  module[@js.scope "ImageBitmap"] ImageBitmap : sig
    type t = _ImageBitmap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_height: t -> float [@@js.get "height"]
    val get_width: t -> float [@@js.get "width"]
    val close: t -> unit [@@js.call "close"]
  end
  val imageBitmap: anonymous_interface_233 [@@js.global "ImageBitmap"]
  module[@js.scope "ImageBitmapOptions"] ImageBitmapOptions : sig
    type t = _ImageBitmapOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_colorSpaceConversion: t -> ([`L_s276_default[@js "default"] | `L_s571_none[@js "none"]] [@js.enum]) [@@js.get "colorSpaceConversion"]
    val set_colorSpaceConversion: t -> ([`L_s276_default | `L_s571_none] [@js.enum]) -> unit [@@js.set "colorSpaceConversion"]
    val get_imageOrientation: t -> ([`L_s373_flipY[@js "flipY"] | `L_s571_none[@js "none"]] [@js.enum]) [@@js.get "imageOrientation"]
    val set_imageOrientation: t -> ([`L_s373_flipY | `L_s571_none] [@js.enum]) -> unit [@@js.set "imageOrientation"]
    val get_premultiplyAlpha: t -> ([`L_s276_default[@js "default"] | `L_s571_none[@js "none"] | `L_s648_premultiply[@js "premultiply"]] [@js.enum]) [@@js.get "premultiplyAlpha"]
    val set_premultiplyAlpha: t -> ([`L_s276_default | `L_s571_none | `L_s648_premultiply] [@js.enum]) -> unit [@@js.set "premultiplyAlpha"]
    val get_resizeHeight: t -> float [@@js.get "resizeHeight"]
    val set_resizeHeight: t -> float -> unit [@@js.set "resizeHeight"]
    val get_resizeQuality: t -> ([`L_s418_high[@js "high"] | `L_s504_low[@js "low"] | `L_s526_medium[@js "medium"] | `L_s622_pixelated[@js "pixelated"]] [@js.enum]) [@@js.get "resizeQuality"]
    val set_resizeQuality: t -> ([`L_s418_high | `L_s504_low | `L_s526_medium | `L_s622_pixelated] [@js.enum]) -> unit [@@js.set "resizeQuality"]
    val get_resizeWidth: t -> float [@@js.get "resizeWidth"]
    val set_resizeWidth: t -> float -> unit [@@js.set "resizeWidth"]
  end
  module[@js.scope "ImageBitmapRenderingContext"] ImageBitmapRenderingContext : sig
    type t = _ImageBitmapRenderingContext
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_canvas: t -> (_HTMLCanvasElement, _OffscreenCanvas) union2 [@@js.get "canvas"]
    val transferFromImageBitmap: t -> bitmap:_ImageBitmap or_null -> unit [@@js.call "transferFromImageBitmap"]
  end
  val imageBitmapRenderingContext: anonymous_interface_234 [@@js.global "ImageBitmapRenderingContext"]
  module[@js.scope "ImageData"] ImageData : sig
    type t = _ImageData
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_data: t -> Uint8ClampedArray.t_0 [@@js.get "data"]
    val get_height: t -> float [@@js.get "height"]
    val get_width: t -> float [@@js.get "width"]
  end
  val imageData: anonymous_interface_235 [@@js.global "ImageData"]
  module[@js.scope "InnerHTML"] InnerHTML : sig
    type t = _InnerHTML
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_innerHTML: t -> string [@@js.get "innerHTML"]
    val set_innerHTML: t -> string -> unit [@@js.set "innerHTML"]
  end
  module[@js.scope "InputDeviceInfo"] InputDeviceInfo : sig
    type t = _InputDeviceInfo
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val getCapabilities: t -> _MediaTrackCapabilities [@@js.call "getCapabilities"]
    val cast: t -> _MediaDeviceInfo [@@js.cast]
  end
  val inputDeviceInfo: anonymous_interface_236 [@@js.global "InputDeviceInfo"]
  module[@js.scope "InputEvent"] InputEvent : sig
    type t = _InputEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_data: t -> string or_null [@@js.get "data"]
    val get_inputType: t -> string [@@js.get "inputType"]
    val get_isComposing: t -> bool [@@js.get "isComposing"]
    val cast: t -> _UIEvent [@@js.cast]
  end
  val inputEvent: anonymous_interface_237 [@@js.global "InputEvent"]
  module[@js.scope "IntersectionObserver"] IntersectionObserver : sig
    type t = _IntersectionObserver
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_root: t -> _Element or_null [@@js.get "root"]
    val get_rootMargin: t -> string [@@js.get "rootMargin"]
    val get_thresholds: t -> float list [@@js.get "thresholds"]
    val disconnect: t -> unit [@@js.call "disconnect"]
    val observe: t -> target:_Element -> unit [@@js.call "observe"]
    val takeRecords: t -> _IntersectionObserverEntry list [@@js.call "takeRecords"]
    val unobserve: t -> target:_Element -> unit [@@js.call "unobserve"]
  end
  val intersectionObserver: anonymous_interface_239 [@@js.global "IntersectionObserver"]
  module[@js.scope "IntersectionObserverEntry"] IntersectionObserverEntry : sig
    type t = _IntersectionObserverEntry
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_boundingClientRect: t -> _DOMRectReadOnly [@@js.get "boundingClientRect"]
    val get_intersectionRatio: t -> float [@@js.get "intersectionRatio"]
    val get_intersectionRect: t -> _DOMRectReadOnly [@@js.get "intersectionRect"]
    val get_isIntersecting: t -> bool [@@js.get "isIntersecting"]
    val get_rootBounds: t -> _DOMRectReadOnly or_null [@@js.get "rootBounds"]
    val get_target: t -> _Element [@@js.get "target"]
    val get_time: t -> float [@@js.get "time"]
  end
  val intersectionObserverEntry: anonymous_interface_240 [@@js.global "IntersectionObserverEntry"]
  module[@js.scope "KeyboardEvent"] KeyboardEvent : sig
    type t = _KeyboardEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_altKey: t -> bool [@@js.get "altKey"]
    val get_char: t -> string [@@js.get "char"]
    val set_char: t -> string -> unit [@@js.set "char"]
    val get_charCode: t -> float [@@js.get "charCode"]
    val get_code: t -> string [@@js.get "code"]
    val get_ctrlKey: t -> bool [@@js.get "ctrlKey"]
    val get_isComposing: t -> bool [@@js.get "isComposing"]
    val get_key: t -> string [@@js.get "key"]
    val get_keyCode: t -> float [@@js.get "keyCode"]
    val get_location: t -> float [@@js.get "location"]
    val get_metaKey: t -> bool [@@js.get "metaKey"]
    val get_repeat: t -> bool [@@js.get "repeat"]
    val get_shiftKey: t -> bool [@@js.get "shiftKey"]
    val getModifierState: t -> keyArg:string -> bool [@@js.call "getModifierState"]
    val get_DOM_KEY_LOCATION_LEFT: t -> float [@@js.get "DOM_KEY_LOCATION_LEFT"]
    val get_DOM_KEY_LOCATION_NUMPAD: t -> float [@@js.get "DOM_KEY_LOCATION_NUMPAD"]
    val get_DOM_KEY_LOCATION_RIGHT: t -> float [@@js.get "DOM_KEY_LOCATION_RIGHT"]
    val get_DOM_KEY_LOCATION_STANDARD: t -> float [@@js.get "DOM_KEY_LOCATION_STANDARD"]
    val cast: t -> _UIEvent [@@js.cast]
  end
  val keyboardEvent: anonymous_interface_241 [@@js.global "KeyboardEvent"]
  module[@js.scope "KeyframeEffect"] KeyframeEffect : sig
    type t = _KeyframeEffect
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_composite: t -> _CompositeOperation [@@js.get "composite"]
    val set_composite: t -> _CompositeOperation -> unit [@@js.set "composite"]
    val get_iterationComposite: t -> _IterationCompositeOperation [@@js.get "iterationComposite"]
    val set_iterationComposite: t -> _IterationCompositeOperation -> unit [@@js.set "iterationComposite"]
    val get_target: t -> _Element or_null [@@js.get "target"]
    val set_target: t -> _Element or_null -> unit [@@js.set "target"]
    val getKeyframes: t -> _ComputedKeyframe list [@@js.call "getKeyframes"]
    val setKeyframes: t -> keyframes:(_PropertyIndexedKeyframes, _Keyframe) or_array or_null -> unit [@@js.call "setKeyframes"]
    val cast: t -> _AnimationEffect [@@js.cast]
  end
  val keyframeEffect: anonymous_interface_242 [@@js.global "KeyframeEffect"]
  module[@js.scope "LinkStyle"] LinkStyle : sig
    type t = _LinkStyle
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_sheet: t -> _StyleSheet or_null [@@js.get "sheet"]
  end
  module[@js.scope "ListeningStateChangedEvent"] ListeningStateChangedEvent : sig
    type t = _ListeningStateChangedEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_label: t -> string [@@js.get "label"]
    val get_state: t -> _ListeningState [@@js.get "state"]
    val cast: t -> _Event [@@js.cast]
  end
  val listeningStateChangedEvent: anonymous_interface_244 [@@js.global "ListeningStateChangedEvent"]
  module[@js.scope "Location"] Location : sig
    type t = _Location
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_ancestorOrigins: t -> _DOMStringList [@@js.get "ancestorOrigins"]
    val get_hash: t -> string [@@js.get "hash"]
    val set_hash: t -> string -> unit [@@js.set "hash"]
    val get_host: t -> string [@@js.get "host"]
    val set_host: t -> string -> unit [@@js.set "host"]
    val get_hostname: t -> string [@@js.get "hostname"]
    val set_hostname: t -> string -> unit [@@js.set "hostname"]
    val get_href: t -> string [@@js.get "href"]
    val set_href: t -> string -> unit [@@js.set "href"]
    val toString: t -> string [@@js.call "toString"]
    val get_origin: t -> string [@@js.get "origin"]
    val get_pathname: t -> string [@@js.get "pathname"]
    val set_pathname: t -> string -> unit [@@js.set "pathname"]
    val get_port: t -> string [@@js.get "port"]
    val set_port: t -> string -> unit [@@js.set "port"]
    val get_protocol: t -> string [@@js.get "protocol"]
    val set_protocol: t -> string -> unit [@@js.set "protocol"]
    val get_search: t -> string [@@js.get "search"]
    val set_search: t -> string -> unit [@@js.set "search"]
    val assign: t -> url:string -> unit [@@js.call "assign"]
    val reload: t -> unit [@@js.call "reload"]
    val reload': t -> forcedReload:bool -> unit [@@js.call "reload"]
    val replace: t -> url:string -> unit [@@js.call "replace"]
  end
  val location: anonymous_interface_245 [@@js.global "Location"]
  module[@js.scope "MSAssertion"] MSAssertion : sig
    type t = _MSAssertion
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_id: t -> string [@@js.get "id"]
    val get_type: t -> _MSCredentialType [@@js.get "type"]
  end
  val mSAssertion: anonymous_interface_246 [@@js.global "MSAssertion"]
  module[@js.scope "MSBlobBuilder"] MSBlobBuilder : sig
    type t = _MSBlobBuilder
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val append: t -> data:any -> ?endings:string -> unit -> unit [@@js.call "append"]
    val getBlob: t -> ?contentType:string -> unit -> _Blob [@@js.call "getBlob"]
  end
  val mSBlobBuilder: anonymous_interface_247 [@@js.global "MSBlobBuilder"]
  module[@js.scope "MSFIDOCredentialAssertion"] MSFIDOCredentialAssertion : sig
    type t = _MSFIDOCredentialAssertion
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_algorithm: t -> _Algorithm or_string [@@js.get "algorithm"]
    val get_attestation: t -> any [@@js.get "attestation"]
    val get_publicKey: t -> string [@@js.get "publicKey"]
    val get_transportHints: t -> _MSTransportType list [@@js.get "transportHints"]
    val cast: t -> _MSAssertion [@@js.cast]
  end
  val mSFIDOCredentialAssertion: anonymous_interface_248 [@@js.global "MSFIDOCredentialAssertion"]
  module[@js.scope "MSFIDOSignature"] MSFIDOSignature : sig
    type t = _MSFIDOSignature
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_authnrData: t -> string [@@js.get "authnrData"]
    val get_clientData: t -> string [@@js.get "clientData"]
    val get_signature: t -> string [@@js.get "signature"]
  end
  val mSFIDOSignature: anonymous_interface_249 [@@js.global "MSFIDOSignature"]
  module[@js.scope "MSFIDOSignatureAssertion"] MSFIDOSignatureAssertion : sig
    type t = _MSFIDOSignatureAssertion
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_signature: t -> _MSFIDOSignature [@@js.get "signature"]
    val cast: t -> _MSAssertion [@@js.cast]
  end
  val mSFIDOSignatureAssertion: anonymous_interface_250 [@@js.global "MSFIDOSignatureAssertion"]
  module[@js.scope "MSFileSaver"] MSFileSaver : sig
    type t = _MSFileSaver
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val msSaveBlob: t -> blob:any -> ?defaultName:string -> unit -> bool [@@js.call "msSaveBlob"]
    val msSaveOrOpenBlob: t -> blob:any -> ?defaultName:string -> unit -> bool [@@js.call "msSaveOrOpenBlob"]
  end
  module[@js.scope "MSGesture"] MSGesture : sig
    type t = _MSGesture
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_target: t -> _Element [@@js.get "target"]
    val set_target: t -> _Element -> unit [@@js.set "target"]
    val addPointer: t -> pointerId:float -> unit [@@js.call "addPointer"]
    val stop: t -> unit [@@js.call "stop"]
  end
  val mSGesture: anonymous_interface_251 [@@js.global "MSGesture"]
  module[@js.scope "MSGestureEvent"] MSGestureEvent : sig
    type t = _MSGestureEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_clientX: t -> float [@@js.get "clientX"]
    val get_clientY: t -> float [@@js.get "clientY"]
    val get_expansion: t -> float [@@js.get "expansion"]
    val get_gestureObject: t -> any [@@js.get "gestureObject"]
    val get_hwTimestamp: t -> float [@@js.get "hwTimestamp"]
    val get_offsetX: t -> float [@@js.get "offsetX"]
    val get_offsetY: t -> float [@@js.get "offsetY"]
    val get_rotation: t -> float [@@js.get "rotation"]
    val get_scale: t -> float [@@js.get "scale"]
    val get_screenX: t -> float [@@js.get "screenX"]
    val get_screenY: t -> float [@@js.get "screenY"]
    val get_translationX: t -> float [@@js.get "translationX"]
    val get_translationY: t -> float [@@js.get "translationY"]
    val get_velocityAngular: t -> float [@@js.get "velocityAngular"]
    val get_velocityExpansion: t -> float [@@js.get "velocityExpansion"]
    val get_velocityX: t -> float [@@js.get "velocityX"]
    val get_velocityY: t -> float [@@js.get "velocityY"]
    val initGestureEvent: t -> typeArg:string -> canBubbleArg:bool -> cancelableArg:bool -> viewArg:_Window -> detailArg:float -> screenXArg:float -> screenYArg:float -> clientXArg:float -> clientYArg:float -> offsetXArg:float -> offsetYArg:float -> translationXArg:float -> translationYArg:float -> scaleArg:float -> expansionArg:float -> rotationArg:float -> velocityXArg:float -> velocityYArg:float -> velocityExpansionArg:float -> velocityAngularArg:float -> hwTimestampArg:float -> unit [@@js.call "initGestureEvent"]
    val get_MSGESTURE_FLAG_BEGIN: t -> float [@@js.get "MSGESTURE_FLAG_BEGIN"]
    val get_MSGESTURE_FLAG_CANCEL: t -> float [@@js.get "MSGESTURE_FLAG_CANCEL"]
    val get_MSGESTURE_FLAG_END: t -> float [@@js.get "MSGESTURE_FLAG_END"]
    val get_MSGESTURE_FLAG_INERTIA: t -> float [@@js.get "MSGESTURE_FLAG_INERTIA"]
    val get_MSGESTURE_FLAG_NONE: t -> float [@@js.get "MSGESTURE_FLAG_NONE"]
    val cast: t -> _UIEvent [@@js.cast]
  end
  val mSGestureEvent: anonymous_interface_252 [@@js.global "MSGestureEvent"]
  module[@js.scope "MSGraphicsTrust"] MSGraphicsTrust : sig
    type t = _MSGraphicsTrust
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_constrictionActive: t -> bool [@@js.get "constrictionActive"]
    val get_status: t -> string [@@js.get "status"]
  end
  val mSGraphicsTrust: anonymous_interface_253 [@@js.global "MSGraphicsTrust"]
  module[@js.scope "MSInputMethodContextEventMap"] MSInputMethodContextEventMap : sig
    type t = _MSInputMethodContextEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_MSCandidateWindowHide: t -> _Event [@@js.get "MSCandidateWindowHide"]
    val set_MSCandidateWindowHide: t -> _Event -> unit [@@js.set "MSCandidateWindowHide"]
    val get_MSCandidateWindowShow: t -> _Event [@@js.get "MSCandidateWindowShow"]
    val set_MSCandidateWindowShow: t -> _Event -> unit [@@js.set "MSCandidateWindowShow"]
    val get_MSCandidateWindowUpdate: t -> _Event [@@js.get "MSCandidateWindowUpdate"]
    val set_MSCandidateWindowUpdate: t -> _Event -> unit [@@js.set "MSCandidateWindowUpdate"]
  end
  module[@js.scope "MSInputMethodContext"] MSInputMethodContext : sig
    type t = _MSInputMethodContext
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_compositionEndOffset: t -> float [@@js.get "compositionEndOffset"]
    val get_compositionStartOffset: t -> float [@@js.get "compositionStartOffset"]
    val get_oncandidatewindowhide: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "oncandidatewindowhide"]
    val set_oncandidatewindowhide: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "oncandidatewindowhide"]
    val get_oncandidatewindowshow: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "oncandidatewindowshow"]
    val set_oncandidatewindowshow: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "oncandidatewindowshow"]
    val get_oncandidatewindowupdate: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "oncandidatewindowupdate"]
    val set_oncandidatewindowupdate: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "oncandidatewindowupdate"]
    val get_target: t -> _HTMLElement [@@js.get "target"]
    val getCandidateWindowClientRect: t -> _ClientRect [@@js.call "getCandidateWindowClientRect"]
    val getCompositionAlternatives: t -> string list [@@js.call "getCompositionAlternatives"]
    val hasComposition: t -> bool [@@js.call "hasComposition"]
    val isCandidateWindowVisible: t -> bool [@@js.call "isCandidateWindowVisible"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val mSInputMethodContext: anonymous_interface_254 [@@js.global "MSInputMethodContext"]
  module[@js.scope "MSMediaKeyError"] MSMediaKeyError : sig
    type t = _MSMediaKeyError
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_code: t -> float [@@js.get "code"]
    val get_systemCode: t -> float [@@js.get "systemCode"]
    val get_MS_MEDIA_KEYERR_CLIENT: t -> float [@@js.get "MS_MEDIA_KEYERR_CLIENT"]
    val get_MS_MEDIA_KEYERR_DOMAIN: t -> float [@@js.get "MS_MEDIA_KEYERR_DOMAIN"]
    val get_MS_MEDIA_KEYERR_HARDWARECHANGE: t -> float [@@js.get "MS_MEDIA_KEYERR_HARDWARECHANGE"]
    val get_MS_MEDIA_KEYERR_OUTPUT: t -> float [@@js.get "MS_MEDIA_KEYERR_OUTPUT"]
    val get_MS_MEDIA_KEYERR_SERVICE: t -> float [@@js.get "MS_MEDIA_KEYERR_SERVICE"]
    val get_MS_MEDIA_KEYERR_UNKNOWN: t -> float [@@js.get "MS_MEDIA_KEYERR_UNKNOWN"]
  end
  val mSMediaKeyError: anonymous_interface_255 [@@js.global "MSMediaKeyError"]
  module[@js.scope "MSMediaKeyMessageEvent"] MSMediaKeyMessageEvent : sig
    type t = _MSMediaKeyMessageEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_destinationURL: t -> string or_null [@@js.get "destinationURL"]
    val get_message: t -> Uint8Array.t_0 [@@js.get "message"]
    val cast: t -> _Event [@@js.cast]
  end
  val mSMediaKeyMessageEvent: anonymous_interface_256 [@@js.global "MSMediaKeyMessageEvent"]
  module[@js.scope "MSMediaKeyNeededEvent"] MSMediaKeyNeededEvent : sig
    type t = _MSMediaKeyNeededEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_initData: t -> Uint8Array.t_0 or_null [@@js.get "initData"]
    val cast: t -> _Event [@@js.cast]
  end
  val mSMediaKeyNeededEvent: anonymous_interface_257 [@@js.global "MSMediaKeyNeededEvent"]
  module[@js.scope "MSMediaKeySession"] MSMediaKeySession : sig
    type t = _MSMediaKeySession
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_error: t -> _MSMediaKeyError or_null [@@js.get "error"]
    val get_keySystem: t -> string [@@js.get "keySystem"]
    val get_sessionId: t -> string [@@js.get "sessionId"]
    val close: t -> unit [@@js.call "close"]
    val update: t -> key:Uint8Array.t_0 -> unit [@@js.call "update"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val mSMediaKeySession: anonymous_interface_258 [@@js.global "MSMediaKeySession"]
  module[@js.scope "MSMediaKeys"] MSMediaKeys : sig
    type t = _MSMediaKeys
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_keySystem: t -> string [@@js.get "keySystem"]
    val createSession: t -> type_:string -> initData:Uint8Array.t_0 -> ?cdmData:Uint8Array.t_0 or_null -> unit -> _MSMediaKeySession [@@js.call "createSession"]
  end
  val mSMediaKeys: anonymous_interface_259 [@@js.global "MSMediaKeys"]
  module[@js.scope "MSNavigatorDoNotTrack"] MSNavigatorDoNotTrack : sig
    type t = _MSNavigatorDoNotTrack
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val confirmSiteSpecificTrackingException: t -> args:_ConfirmSiteSpecificExceptionsInformation -> bool [@@js.call "confirmSiteSpecificTrackingException"]
    val confirmWebWideTrackingException: t -> args:_ExceptionInformation -> bool [@@js.call "confirmWebWideTrackingException"]
    val removeSiteSpecificTrackingException: t -> args:_ExceptionInformation -> unit [@@js.call "removeSiteSpecificTrackingException"]
    val removeWebWideTrackingException: t -> args:_ExceptionInformation -> unit [@@js.call "removeWebWideTrackingException"]
    val storeSiteSpecificTrackingException: t -> args:_StoreSiteSpecificExceptionsInformation -> unit [@@js.call "storeSiteSpecificTrackingException"]
    val storeWebWideTrackingException: t -> args:_StoreExceptionsInformation -> unit [@@js.call "storeWebWideTrackingException"]
  end
  module[@js.scope "MSPointerEvent"] MSPointerEvent : sig
    type t = _MSPointerEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_currentPoint: t -> any [@@js.get "currentPoint"]
    val get_height: t -> float [@@js.get "height"]
    val get_hwTimestamp: t -> float [@@js.get "hwTimestamp"]
    val get_intermediatePoints: t -> any [@@js.get "intermediatePoints"]
    val get_isPrimary: t -> bool [@@js.get "isPrimary"]
    val get_pointerId: t -> float [@@js.get "pointerId"]
    val get_pointerType: t -> any [@@js.get "pointerType"]
    val get_pressure: t -> float [@@js.get "pressure"]
    val get_rotation: t -> float [@@js.get "rotation"]
    val get_tiltX: t -> float [@@js.get "tiltX"]
    val get_tiltY: t -> float [@@js.get "tiltY"]
    val get_width: t -> float [@@js.get "width"]
    val getCurrentPoint: t -> element:_Element -> unit [@@js.call "getCurrentPoint"]
    val getIntermediatePoints: t -> element:_Element -> unit [@@js.call "getIntermediatePoints"]
    val initPointerEvent: t -> typeArg:string -> canBubbleArg:bool -> cancelableArg:bool -> viewArg:_Window -> detailArg:float -> screenXArg:float -> screenYArg:float -> clientXArg:float -> clientYArg:float -> ctrlKeyArg:bool -> altKeyArg:bool -> shiftKeyArg:bool -> metaKeyArg:bool -> buttonArg:float -> relatedTargetArg:_EventTarget -> offsetXArg:float -> offsetYArg:float -> widthArg:float -> heightArg:float -> pressure:float -> rotation:float -> tiltX:float -> tiltY:float -> pointerIdArg:float -> pointerType:any -> hwTimestampArg:float -> isPrimary:bool -> unit [@@js.call "initPointerEvent"]
    val cast: t -> _MouseEvent [@@js.cast]
  end
  val mSPointerEvent: anonymous_interface_260 [@@js.global "MSPointerEvent"]
  module[@js.scope "MSStream"] MSStream : sig
    type t = _MSStream
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_type: t -> string [@@js.get "type"]
    val msClose: t -> unit [@@js.call "msClose"]
    val msDetachStream: t -> any [@@js.call "msDetachStream"]
  end
  val mSStream: anonymous_interface_261 [@@js.global "MSStream"]
  module[@js.scope "MediaDeviceInfo"] MediaDeviceInfo : sig
    type t = _MediaDeviceInfo
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_deviceId: t -> string [@@js.get "deviceId"]
    val get_groupId: t -> string [@@js.get "groupId"]
    val get_kind: t -> _MediaDeviceKind [@@js.get "kind"]
    val get_label: t -> string [@@js.get "label"]
    val toJSON: t -> any [@@js.call "toJSON"]
  end
  val mediaDeviceInfo: anonymous_interface_262 [@@js.global "MediaDeviceInfo"]
  module[@js.scope "MediaDevicesEventMap"] MediaDevicesEventMap : sig
    type t = _MediaDevicesEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_devicechange: t -> _Event [@@js.get "devicechange"]
    val set_devicechange: t -> _Event -> unit [@@js.set "devicechange"]
  end
  module[@js.scope "MediaDevices"] MediaDevices : sig
    type t = _MediaDevices
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_ondevicechange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "ondevicechange"]
    val set_ondevicechange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "ondevicechange"]
    val enumerateDevices: t -> _MediaDeviceInfo list Promise.t_1 [@@js.call "enumerateDevices"]
    val getSupportedConstraints: t -> _MediaTrackSupportedConstraints [@@js.call "getSupportedConstraints"]
    val getUserMedia: t -> ?constraints:_MediaStreamConstraints -> unit -> _MediaStream Promise.t_1 [@@js.call "getUserMedia"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val mediaDevices: anonymous_interface_263 [@@js.global "MediaDevices"]
  module[@js.scope "MediaElementAudioSourceNode"] MediaElementAudioSourceNode : sig
    type t = _MediaElementAudioSourceNode
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_mediaElement: t -> _HTMLMediaElement [@@js.get "mediaElement"]
    val cast: t -> _AudioNode [@@js.cast]
  end
  val mediaElementAudioSourceNode: anonymous_interface_264 [@@js.global "MediaElementAudioSourceNode"]
  module[@js.scope "MediaEncryptedEvent"] MediaEncryptedEvent : sig
    type t = _MediaEncryptedEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_initData: t -> ArrayBuffer.t_0 or_null [@@js.get "initData"]
    val get_initDataType: t -> string [@@js.get "initDataType"]
    val cast: t -> _Event [@@js.cast]
  end
  val mediaEncryptedEvent: anonymous_interface_265 [@@js.global "MediaEncryptedEvent"]
  module[@js.scope "MediaError"] MediaError : sig
    type t = _MediaError
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_code: t -> float [@@js.get "code"]
    val get_message: t -> string [@@js.get "message"]
    val get_msExtendedCode: t -> float [@@js.get "msExtendedCode"]
    val get_MEDIA_ERR_ABORTED: t -> float [@@js.get "MEDIA_ERR_ABORTED"]
    val get_MEDIA_ERR_DECODE: t -> float [@@js.get "MEDIA_ERR_DECODE"]
    val get_MEDIA_ERR_NETWORK: t -> float [@@js.get "MEDIA_ERR_NETWORK"]
    val get_MEDIA_ERR_SRC_NOT_SUPPORTED: t -> float [@@js.get "MEDIA_ERR_SRC_NOT_SUPPORTED"]
    val get_MS_MEDIA_ERR_ENCRYPTED: t -> float [@@js.get "MS_MEDIA_ERR_ENCRYPTED"]
  end
  val mediaError: anonymous_interface_266 [@@js.global "MediaError"]
  module[@js.scope "MediaKeyMessageEvent"] MediaKeyMessageEvent : sig
    type t = _MediaKeyMessageEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_message: t -> ArrayBuffer.t_0 [@@js.get "message"]
    val get_messageType: t -> _MediaKeyMessageType [@@js.get "messageType"]
    val cast: t -> _Event [@@js.cast]
  end
  val mediaKeyMessageEvent: anonymous_interface_267 [@@js.global "MediaKeyMessageEvent"]
  module[@js.scope "MediaKeySessionEventMap"] MediaKeySessionEventMap : sig
    type t = _MediaKeySessionEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_keystatuseschange: t -> _Event [@@js.get "keystatuseschange"]
    val set_keystatuseschange: t -> _Event -> unit [@@js.set "keystatuseschange"]
    val get_message: t -> _MediaKeyMessageEvent [@@js.get "message"]
    val set_message: t -> _MediaKeyMessageEvent -> unit [@@js.set "message"]
  end
  module[@js.scope "MediaKeySession"] MediaKeySession : sig
    type t = _MediaKeySession
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_closed: t -> unit Promise.t_1 [@@js.get "closed"]
    val get_expiration: t -> float [@@js.get "expiration"]
    val get_keyStatuses: t -> _MediaKeyStatusMap [@@js.get "keyStatuses"]
    val get_onkeystatuseschange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onkeystatuseschange"]
    val set_onkeystatuseschange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onkeystatuseschange"]
    val get_onmessage: t -> (this:t -> ev:_MediaKeyMessageEvent -> any) or_null [@@js.get "onmessage"]
    val set_onmessage: t -> (this:t -> ev:_MediaKeyMessageEvent -> any) or_null -> unit [@@js.set "onmessage"]
    val get_sessionId: t -> string [@@js.get "sessionId"]
    val close: t -> unit Promise.t_1 [@@js.call "close"]
    val generateRequest: t -> initDataType:string -> initData:_BufferSource -> unit Promise.t_1 [@@js.call "generateRequest"]
    val load: t -> sessionId:string -> bool Promise.t_1 [@@js.call "load"]
    val remove: t -> unit Promise.t_1 [@@js.call "remove"]
    val update: t -> response:_BufferSource -> unit Promise.t_1 [@@js.call "update"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val mediaKeySession: anonymous_interface_268 [@@js.global "MediaKeySession"]
  module[@js.scope "MediaKeyStatusMap"] MediaKeyStatusMap : sig
    type t = _MediaKeyStatusMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_size: t -> float [@@js.get "size"]
    val get_: t -> keyId:_BufferSource -> _MediaKeyStatus or_undefined [@@js.call "get"]
    val has: t -> keyId:_BufferSource -> bool [@@js.call "has"]
    val forEach: t -> callbackfn:(value:_MediaKeyStatus -> key:_BufferSource -> parent:t -> unit) -> ?thisArg:any -> unit -> unit [@@js.call "forEach"]
  end
  val mediaKeyStatusMap: anonymous_interface_269 [@@js.global "MediaKeyStatusMap"]
  module[@js.scope "MediaKeySystemAccess"] MediaKeySystemAccess : sig
    type t = _MediaKeySystemAccess
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_keySystem: t -> string [@@js.get "keySystem"]
    val createMediaKeys: t -> _MediaKeys Promise.t_1 [@@js.call "createMediaKeys"]
    val getConfiguration: t -> _MediaKeySystemConfiguration [@@js.call "getConfiguration"]
  end
  val mediaKeySystemAccess: anonymous_interface_270 [@@js.global "MediaKeySystemAccess"]
  module[@js.scope "MediaKeys"] MediaKeys : sig
    type t = _MediaKeys
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val createSession: t -> ?sessionType:_MediaKeySessionType -> unit -> _MediaKeySession [@@js.call "createSession"]
    val setServerCertificate: t -> serverCertificate:_BufferSource -> bool Promise.t_1 [@@js.call "setServerCertificate"]
  end
  val mediaKeys: anonymous_interface_271 [@@js.global "MediaKeys"]
  module[@js.scope "MediaList"] MediaList : sig
    type t = _MediaList
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_length: t -> float [@@js.get "length"]
    val get_mediaText: t -> string [@@js.get "mediaText"]
    val set_mediaText: t -> string -> unit [@@js.set "mediaText"]
    val toString: t -> string [@@js.call "toString"]
    val appendMedium: t -> medium:string -> unit [@@js.call "appendMedium"]
    val deleteMedium: t -> medium:string -> unit [@@js.call "deleteMedium"]
    val item: t -> index:float -> string or_null [@@js.call "item"]
    val get: t -> float -> string [@@js.index_get]
    val set: t -> float -> string -> unit [@@js.index_set]
  end
  val mediaList: anonymous_interface_272 [@@js.global "MediaList"]
  module[@js.scope "MediaQueryListEventMap"] MediaQueryListEventMap : sig
    type t = _MediaQueryListEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_change: t -> _MediaQueryListEvent [@@js.get "change"]
    val set_change: t -> _MediaQueryListEvent -> unit [@@js.set "change"]
  end
  module[@js.scope "MediaQueryList"] MediaQueryList : sig
    type t = _MediaQueryList
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_matches: t -> bool [@@js.get "matches"]
    val get_media: t -> string [@@js.get "media"]
    val get_onchange: t -> (this:t -> ev:_MediaQueryListEvent -> any) or_null [@@js.get "onchange"]
    val set_onchange: t -> (this:t -> ev:_MediaQueryListEvent -> any) or_null -> unit [@@js.set "onchange"]
    val addListener: t -> listener:(this:t -> ev:_MediaQueryListEvent -> any) or_null -> unit [@@js.call "addListener"]
    val removeListener: t -> listener:(this:t -> ev:_MediaQueryListEvent -> any) or_null -> unit [@@js.call "removeListener"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val mediaQueryList: anonymous_interface_273 [@@js.global "MediaQueryList"]
  module[@js.scope "MediaQueryListEvent"] MediaQueryListEvent : sig
    type t = _MediaQueryListEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_matches: t -> bool [@@js.get "matches"]
    val get_media: t -> string [@@js.get "media"]
    val cast: t -> _Event [@@js.cast]
  end
  val mediaQueryListEvent: anonymous_interface_274 [@@js.global "MediaQueryListEvent"]
  module[@js.scope "MediaSourceEventMap"] MediaSourceEventMap : sig
    type t = _MediaSourceEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_sourceclose: t -> _Event [@@js.get "sourceclose"]
    val set_sourceclose: t -> _Event -> unit [@@js.set "sourceclose"]
    val get_sourceended: t -> _Event [@@js.get "sourceended"]
    val set_sourceended: t -> _Event -> unit [@@js.set "sourceended"]
    val get_sourceopen: t -> _Event [@@js.get "sourceopen"]
    val set_sourceopen: t -> _Event -> unit [@@js.set "sourceopen"]
  end
  module[@js.scope "MediaSource"] MediaSource : sig
    type t = _MediaSource
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_activeSourceBuffers: t -> _SourceBufferList [@@js.get "activeSourceBuffers"]
    val get_duration: t -> float [@@js.get "duration"]
    val set_duration: t -> float -> unit [@@js.set "duration"]
    val get_onsourceclose: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onsourceclose"]
    val set_onsourceclose: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onsourceclose"]
    val get_onsourceended: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onsourceended"]
    val set_onsourceended: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onsourceended"]
    val get_onsourceopen: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onsourceopen"]
    val set_onsourceopen: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onsourceopen"]
    val get_readyState: t -> _ReadyState [@@js.get "readyState"]
    val get_sourceBuffers: t -> _SourceBufferList [@@js.get "sourceBuffers"]
    val addSourceBuffer: t -> type_:string -> _SourceBuffer [@@js.call "addSourceBuffer"]
    val clearLiveSeekableRange: t -> unit [@@js.call "clearLiveSeekableRange"]
    val endOfStream: t -> ?error:_EndOfStreamError -> unit -> unit [@@js.call "endOfStream"]
    val removeSourceBuffer: t -> sourceBuffer:_SourceBuffer -> unit [@@js.call "removeSourceBuffer"]
    val setLiveSeekableRange: t -> start:float -> end_:float -> unit [@@js.call "setLiveSeekableRange"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val mediaSource: anonymous_interface_275 [@@js.global "MediaSource"]
  module[@js.scope "MediaStreamEventMap"] MediaStreamEventMap : sig
    type t = _MediaStreamEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_addtrack: t -> _MediaStreamTrackEvent [@@js.get "addtrack"]
    val set_addtrack: t -> _MediaStreamTrackEvent -> unit [@@js.set "addtrack"]
    val get_removetrack: t -> _MediaStreamTrackEvent [@@js.get "removetrack"]
    val set_removetrack: t -> _MediaStreamTrackEvent -> unit [@@js.set "removetrack"]
  end
  module[@js.scope "MediaStream"] MediaStream : sig
    type t = _MediaStream
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_active: t -> bool [@@js.get "active"]
    val get_id: t -> string [@@js.get "id"]
    val get_onaddtrack: t -> (this:t -> ev:_MediaStreamTrackEvent -> any) or_null [@@js.get "onaddtrack"]
    val set_onaddtrack: t -> (this:t -> ev:_MediaStreamTrackEvent -> any) or_null -> unit [@@js.set "onaddtrack"]
    val get_onremovetrack: t -> (this:t -> ev:_MediaStreamTrackEvent -> any) or_null [@@js.get "onremovetrack"]
    val set_onremovetrack: t -> (this:t -> ev:_MediaStreamTrackEvent -> any) or_null -> unit [@@js.set "onremovetrack"]
    val addTrack: t -> track:_MediaStreamTrack -> unit [@@js.call "addTrack"]
    val clone: t -> t [@@js.call "clone"]
    val getAudioTracks: t -> _MediaStreamTrack list [@@js.call "getAudioTracks"]
    val getTrackById: t -> trackId:string -> _MediaStreamTrack or_null [@@js.call "getTrackById"]
    val getTracks: t -> _MediaStreamTrack list [@@js.call "getTracks"]
    val getVideoTracks: t -> _MediaStreamTrack list [@@js.call "getVideoTracks"]
    val removeTrack: t -> track:_MediaStreamTrack -> unit [@@js.call "removeTrack"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val mediaStream: anonymous_interface_276 [@@js.global "MediaStream"]
  module[@js.scope "MediaStreamAudioDestinationNode"] MediaStreamAudioDestinationNode : sig
    type t = _MediaStreamAudioDestinationNode
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_stream: t -> _MediaStream [@@js.get "stream"]
    val cast: t -> _AudioNode [@@js.cast]
  end
  val mediaStreamAudioDestinationNode: anonymous_interface_277 [@@js.global "MediaStreamAudioDestinationNode"]
  module[@js.scope "MediaStreamAudioSourceNode"] MediaStreamAudioSourceNode : sig
    type t = _MediaStreamAudioSourceNode
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_mediaStream: t -> _MediaStream [@@js.get "mediaStream"]
    val cast: t -> _AudioNode [@@js.cast]
  end
  val mediaStreamAudioSourceNode: anonymous_interface_278 [@@js.global "MediaStreamAudioSourceNode"]
  module[@js.scope "MediaStreamError"] MediaStreamError : sig
    type t = _MediaStreamError
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_constraintName: t -> string or_null [@@js.get "constraintName"]
    val get_message: t -> string or_null [@@js.get "message"]
    val get_name: t -> string [@@js.get "name"]
  end
  val mediaStreamError: anonymous_interface_279 [@@js.global "MediaStreamError"]
  module[@js.scope "MediaStreamErrorEvent"] MediaStreamErrorEvent : sig
    type t = _MediaStreamErrorEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_error: t -> _MediaStreamError or_null [@@js.get "error"]
    val cast: t -> _Event [@@js.cast]
  end
  val mediaStreamErrorEvent: anonymous_interface_280 [@@js.global "MediaStreamErrorEvent"]
  module[@js.scope "MediaStreamEvent"] MediaStreamEvent : sig
    type t = _MediaStreamEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_stream: t -> _MediaStream or_null [@@js.get "stream"]
    val cast: t -> _Event [@@js.cast]
  end
  val mediaStreamEvent: anonymous_interface_281 [@@js.global "MediaStreamEvent"]
  module[@js.scope "MediaStreamTrackEventMap"] MediaStreamTrackEventMap : sig
    type t = _MediaStreamTrackEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_ended: t -> _Event [@@js.get "ended"]
    val set_ended: t -> _Event -> unit [@@js.set "ended"]
    val get_isolationchange: t -> _Event [@@js.get "isolationchange"]
    val set_isolationchange: t -> _Event -> unit [@@js.set "isolationchange"]
    val get_mute: t -> _Event [@@js.get "mute"]
    val set_mute: t -> _Event -> unit [@@js.set "mute"]
    val get_unmute: t -> _Event [@@js.get "unmute"]
    val set_unmute: t -> _Event -> unit [@@js.set "unmute"]
  end
  module[@js.scope "MediaStreamTrack"] MediaStreamTrack : sig
    type t = _MediaStreamTrack
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_enabled: t -> bool [@@js.get "enabled"]
    val set_enabled: t -> bool -> unit [@@js.set "enabled"]
    val get_id: t -> string [@@js.get "id"]
    val get_isolated: t -> bool [@@js.get "isolated"]
    val get_kind: t -> string [@@js.get "kind"]
    val get_label: t -> string [@@js.get "label"]
    val get_muted: t -> bool [@@js.get "muted"]
    val get_onended: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onended"]
    val set_onended: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onended"]
    val get_onisolationchange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onisolationchange"]
    val set_onisolationchange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onisolationchange"]
    val get_onmute: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onmute"]
    val set_onmute: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onmute"]
    val get_onunmute: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onunmute"]
    val set_onunmute: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onunmute"]
    val get_readyState: t -> _MediaStreamTrackState [@@js.get "readyState"]
    val applyConstraints: t -> ?constraints:_MediaTrackConstraints -> unit -> unit Promise.t_1 [@@js.call "applyConstraints"]
    val clone: t -> t [@@js.call "clone"]
    val getCapabilities: t -> _MediaTrackCapabilities [@@js.call "getCapabilities"]
    val getConstraints: t -> _MediaTrackConstraints [@@js.call "getConstraints"]
    val getSettings: t -> _MediaTrackSettings [@@js.call "getSettings"]
    val stop: t -> unit [@@js.call "stop"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val mediaStreamTrack: anonymous_interface_282 [@@js.global "MediaStreamTrack"]
  module[@js.scope "MediaStreamTrackAudioSourceNode"] MediaStreamTrackAudioSourceNode : sig
    type t = _MediaStreamTrackAudioSourceNode
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val cast: t -> _AudioNode [@@js.cast]
  end
  val mediaStreamTrackAudioSourceNode: anonymous_interface_283 [@@js.global "MediaStreamTrackAudioSourceNode"]
  module[@js.scope "MediaStreamTrackEvent"] MediaStreamTrackEvent : sig
    type t = _MediaStreamTrackEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_track: t -> _MediaStreamTrack [@@js.get "track"]
    val cast: t -> _Event [@@js.cast]
  end
  val mediaStreamTrackEvent: anonymous_interface_284 [@@js.global "MediaStreamTrackEvent"]
  module[@js.scope "MessageChannel"] MessageChannel : sig
    type t = _MessageChannel
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_port1: t -> _MessagePort [@@js.get "port1"]
    val get_port2: t -> _MessagePort [@@js.get "port2"]
  end
  val messageChannel: anonymous_interface_286 [@@js.global "MessageChannel"]
  module[@js.scope "MessageEvent"] MessageEvent : sig
    type t = _MessageEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_data: t -> any [@@js.get "data"]
    val get_lastEventId: t -> string [@@js.get "lastEventId"]
    val get_origin: t -> string [@@js.get "origin"]
    val get_ports: t -> _MessagePort list [@@js.get "ports"]
    val get_source: t -> _MessageEventSource or_null [@@js.get "source"]
    val cast: t -> _Event [@@js.cast]
  end
  val messageEvent: anonymous_interface_287 [@@js.global "MessageEvent"]
  module[@js.scope "MessagePortEventMap"] MessagePortEventMap : sig
    type t = _MessagePortEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_message: t -> _MessageEvent [@@js.get "message"]
    val set_message: t -> _MessageEvent -> unit [@@js.set "message"]
    val get_messageerror: t -> _MessageEvent [@@js.get "messageerror"]
    val set_messageerror: t -> _MessageEvent -> unit [@@js.set "messageerror"]
  end
  module[@js.scope "MessagePort"] MessagePort : sig
    type t = _MessagePort
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_onmessage: t -> (this:t -> ev:_MessageEvent -> any) or_null [@@js.get "onmessage"]
    val set_onmessage: t -> (this:t -> ev:_MessageEvent -> any) or_null -> unit [@@js.set "onmessage"]
    val get_onmessageerror: t -> (this:t -> ev:_MessageEvent -> any) or_null [@@js.get "onmessageerror"]
    val set_onmessageerror: t -> (this:t -> ev:_MessageEvent -> any) or_null -> unit [@@js.set "onmessageerror"]
    val close: t -> unit [@@js.call "close"]
    val postMessage: t -> message:any -> transfer:_Transferable list -> unit [@@js.call "postMessage"]
    val postMessage': t -> message:any -> ?options:_PostMessageOptions -> unit -> unit [@@js.call "postMessage"]
    val start: t -> unit [@@js.call "start"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val messagePort: anonymous_interface_288 [@@js.global "MessagePort"]
  module[@js.scope "MimeType"] MimeType : sig
    type t = _MimeType
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_description: t -> string [@@js.get "description"]
    val get_enabledPlugin: t -> _Plugin [@@js.get "enabledPlugin"]
    val get_suffixes: t -> string [@@js.get "suffixes"]
    val get_type: t -> string [@@js.get "type"]
  end
  val mimeType: anonymous_interface_289 [@@js.global "MimeType"]
  module[@js.scope "MimeTypeArray"] MimeTypeArray : sig
    type t = _MimeTypeArray
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_length: t -> float [@@js.get "length"]
    val item: t -> index:float -> _MimeType or_null [@@js.call "item"]
    val namedItem: t -> name:string -> _MimeType or_null [@@js.call "namedItem"]
    val get: t -> float -> _MimeType [@@js.index_get]
    val set: t -> float -> _MimeType -> unit [@@js.index_set]
  end
  val mimeTypeArray: anonymous_interface_290 [@@js.global "MimeTypeArray"]
  module[@js.scope "MouseEvent"] MouseEvent : sig
    type t = _MouseEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_altKey: t -> bool [@@js.get "altKey"]
    val get_button: t -> float [@@js.get "button"]
    val get_buttons: t -> float [@@js.get "buttons"]
    val get_clientX: t -> float [@@js.get "clientX"]
    val get_clientY: t -> float [@@js.get "clientY"]
    val get_ctrlKey: t -> bool [@@js.get "ctrlKey"]
    val get_metaKey: t -> bool [@@js.get "metaKey"]
    val get_movementX: t -> float [@@js.get "movementX"]
    val get_movementY: t -> float [@@js.get "movementY"]
    val get_offsetX: t -> float [@@js.get "offsetX"]
    val get_offsetY: t -> float [@@js.get "offsetY"]
    val get_pageX: t -> float [@@js.get "pageX"]
    val get_pageY: t -> float [@@js.get "pageY"]
    val get_relatedTarget: t -> _EventTarget or_null [@@js.get "relatedTarget"]
    val get_screenX: t -> float [@@js.get "screenX"]
    val get_screenY: t -> float [@@js.get "screenY"]
    val get_shiftKey: t -> bool [@@js.get "shiftKey"]
    val get_x: t -> float [@@js.get "x"]
    val get_y: t -> float [@@js.get "y"]
    val getModifierState: t -> keyArg:string -> bool [@@js.call "getModifierState"]
    val initMouseEvent: t -> typeArg:string -> canBubbleArg:bool -> cancelableArg:bool -> viewArg:_Window -> detailArg:float -> screenXArg:float -> screenYArg:float -> clientXArg:float -> clientYArg:float -> ctrlKeyArg:bool -> altKeyArg:bool -> shiftKeyArg:bool -> metaKeyArg:bool -> buttonArg:float -> relatedTargetArg:_EventTarget or_null -> unit [@@js.call "initMouseEvent"]
    val cast: t -> _UIEvent [@@js.cast]
  end
  val mouseEvent: anonymous_interface_292 [@@js.global "MouseEvent"]
  module[@js.scope "MutationEvent"] MutationEvent : sig
    type t = _MutationEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_attrChange: t -> float [@@js.get "attrChange"]
    val get_attrName: t -> string [@@js.get "attrName"]
    val get_newValue: t -> string [@@js.get "newValue"]
    val get_prevValue: t -> string [@@js.get "prevValue"]
    val get_relatedNode: t -> _Node [@@js.get "relatedNode"]
    val initMutationEvent: t -> typeArg:string -> canBubbleArg:bool -> cancelableArg:bool -> relatedNodeArg:_Node -> prevValueArg:string -> newValueArg:string -> attrNameArg:string -> attrChangeArg:float -> unit [@@js.call "initMutationEvent"]
    val get_ADDITION: t -> float [@@js.get "ADDITION"]
    val get_MODIFICATION: t -> float [@@js.get "MODIFICATION"]
    val get_REMOVAL: t -> float [@@js.get "REMOVAL"]
    val cast: t -> _Event [@@js.cast]
  end
  val mutationEvent: anonymous_interface_293 [@@js.global "MutationEvent"]
  module[@js.scope "MutationObserver"] MutationObserver : sig
    type t = _MutationObserver
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val disconnect: t -> unit [@@js.call "disconnect"]
    val observe: t -> target:_Node -> ?options:_MutationObserverInit -> unit -> unit [@@js.call "observe"]
    val takeRecords: t -> _MutationRecord list [@@js.call "takeRecords"]
  end
  val mutationObserver: anonymous_interface_294 [@@js.global "MutationObserver"]
  module[@js.scope "MutationRecord"] MutationRecord : sig
    type t = _MutationRecord
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_addedNodes: t -> _NodeList [@@js.get "addedNodes"]
    val get_attributeName: t -> string or_null [@@js.get "attributeName"]
    val get_attributeNamespace: t -> string or_null [@@js.get "attributeNamespace"]
    val get_nextSibling: t -> _Node or_null [@@js.get "nextSibling"]
    val get_oldValue: t -> string or_null [@@js.get "oldValue"]
    val get_previousSibling: t -> _Node or_null [@@js.get "previousSibling"]
    val get_removedNodes: t -> _NodeList [@@js.get "removedNodes"]
    val get_target: t -> _Node [@@js.get "target"]
    val get_type: t -> _MutationRecordType [@@js.get "type"]
  end
  val mutationRecord: anonymous_interface_295 [@@js.global "MutationRecord"]
  module[@js.scope "NamedNodeMap"] NamedNodeMap : sig
    type t = _NamedNodeMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_length: t -> float [@@js.get "length"]
    val getNamedItem: t -> qualifiedName:string -> _Attr or_null [@@js.call "getNamedItem"]
    val getNamedItemNS: t -> namespace:string or_null -> localName:string -> _Attr or_null [@@js.call "getNamedItemNS"]
    val item: t -> index:float -> _Attr or_null [@@js.call "item"]
    val removeNamedItem: t -> qualifiedName:string -> _Attr [@@js.call "removeNamedItem"]
    val removeNamedItemNS: t -> namespace:string or_null -> localName:string -> _Attr [@@js.call "removeNamedItemNS"]
    val setNamedItem: t -> attr:_Attr -> _Attr or_null [@@js.call "setNamedItem"]
    val setNamedItemNS: t -> attr:_Attr -> _Attr or_null [@@js.call "setNamedItemNS"]
    val get: t -> float -> _Attr [@@js.index_get]
    val set: t -> float -> _Attr -> unit [@@js.index_set]
  end
  val namedNodeMap: anonymous_interface_296 [@@js.global "NamedNodeMap"]
  module[@js.scope "NavigationPreloadManager"] NavigationPreloadManager : sig
    type t = _NavigationPreloadManager
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val disable: t -> unit Promise.t_1 [@@js.call "disable"]
    val enable: t -> unit Promise.t_1 [@@js.call "enable"]
    val getState: t -> _NavigationPreloadState Promise.t_1 [@@js.call "getState"]
    val setHeaderValue: t -> value:string -> unit Promise.t_1 [@@js.call "setHeaderValue"]
  end
  val navigationPreloadManager: anonymous_interface_297 [@@js.global "NavigationPreloadManager"]
  module[@js.scope "Navigator"] Navigator : sig
    type t = _Navigator
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_activeVRDisplays: t -> _VRDisplay list [@@js.get "activeVRDisplays"]
    val get_clipboard: t -> _Clipboard [@@js.get "clipboard"]
    val get_credentials: t -> _CredentialsContainer [@@js.get "credentials"]
    val get_doNotTrack: t -> string or_null [@@js.get "doNotTrack"]
    val get_geolocation: t -> _Geolocation [@@js.get "geolocation"]
    val get_maxTouchPoints: t -> float [@@js.get "maxTouchPoints"]
    val get_mediaDevices: t -> _MediaDevices [@@js.get "mediaDevices"]
    val get_msManipulationViewsEnabled: t -> bool [@@js.get "msManipulationViewsEnabled"]
    val get_msMaxTouchPoints: t -> float [@@js.get "msMaxTouchPoints"]
    val get_msPointerEnabled: t -> bool [@@js.get "msPointerEnabled"]
    val get_permissions: t -> _Permissions [@@js.get "permissions"]
    val get_pointerEnabled: t -> bool [@@js.get "pointerEnabled"]
    val get_serviceWorker: t -> _ServiceWorkerContainer [@@js.get "serviceWorker"]
    val getGamepads: t -> _Gamepad or_null list [@@js.call "getGamepads"]
    val getUserMedia: t -> constraints:_MediaStreamConstraints -> successCallback:_NavigatorUserMediaSuccessCallback -> errorCallback:_NavigatorUserMediaErrorCallback -> unit [@@js.call "getUserMedia"]
    val getVRDisplays: t -> _VRDisplay list Promise.t_1 [@@js.call "getVRDisplays"]
    val msLaunchUri: t -> uri:string -> ?successCallback:_MSLaunchUriCallback -> ?noHandlerCallback:_MSLaunchUriCallback -> unit -> unit [@@js.call "msLaunchUri"]
    val requestMediaKeySystemAccess: t -> keySystem:string -> supportedConfigurations:_MediaKeySystemConfiguration list -> _MediaKeySystemAccess Promise.t_1 [@@js.call "requestMediaKeySystemAccess"]
    val vibrate: t -> pattern:float list or_number -> bool [@@js.call "vibrate"]
    val cast: t -> _MSFileSaver [@@js.cast]
    val cast': t -> _MSNavigatorDoNotTrack [@@js.cast]
    val cast'': t -> _NavigatorAutomationInformation [@@js.cast]
    val cast''': t -> _NavigatorBeacon [@@js.cast]
    val cast'''': t -> _NavigatorConcurrentHardware [@@js.cast]
    val cast''''': t -> _NavigatorContentUtils [@@js.cast]
    val cast'''''': t -> _NavigatorCookies [@@js.cast]
    val cast''''''': t -> _NavigatorID [@@js.cast]
    val cast'''''''': t -> _NavigatorLanguage [@@js.cast]
    val cast''''''''': t -> _NavigatorOnLine [@@js.cast]
    val cast'''''''''': t -> _NavigatorPlugins [@@js.cast]
    val cast''''''''''': t -> _NavigatorStorage [@@js.cast]
  end
  val navigator: anonymous_interface_298 [@@js.global "Navigator"]
  module[@js.scope "NavigatorAutomationInformation"] NavigatorAutomationInformation : sig
    type t = _NavigatorAutomationInformation
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_webdriver: t -> bool [@@js.get "webdriver"]
  end
  module[@js.scope "NavigatorBeacon"] NavigatorBeacon : sig
    type t = _NavigatorBeacon
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val sendBeacon: t -> url:string -> ?data:((((((_FormData, Int16Array.t_0, Int32Array.t_0, Int8Array.t_0, Uint16Array.t_0, Uint32Array.t_0, Uint8Array.t_0, Uint8ClampedArray.t_0) union8, Float64Array.t_0) or_, Float32Array.t_0) or_, DataView.t_0) or_, _Blob) or_, ArrayBuffer.t_0) or_ or_string or_null -> unit -> bool [@@js.call "sendBeacon"]
  end
  module[@js.scope "NavigatorConcurrentHardware"] NavigatorConcurrentHardware : sig
    type t = _NavigatorConcurrentHardware
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_hardwareConcurrency: t -> float [@@js.get "hardwareConcurrency"]
  end
  module[@js.scope "NavigatorContentUtils"] NavigatorContentUtils : sig
    type t = _NavigatorContentUtils
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val registerProtocolHandler: t -> scheme:string -> url:string -> title:string -> unit [@@js.call "registerProtocolHandler"]
    val unregisterProtocolHandler: t -> scheme:string -> url:string -> unit [@@js.call "unregisterProtocolHandler"]
  end
  module[@js.scope "NavigatorCookies"] NavigatorCookies : sig
    type t = _NavigatorCookies
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_cookieEnabled: t -> bool [@@js.get "cookieEnabled"]
  end
  module[@js.scope "NavigatorID"] NavigatorID : sig
    type t = _NavigatorID
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_appCodeName: t -> string [@@js.get "appCodeName"]
    val get_appName: t -> string [@@js.get "appName"]
    val get_appVersion: t -> string [@@js.get "appVersion"]
    val get_oscpu: t -> string [@@js.get "oscpu"]
    val get_platform: t -> string [@@js.get "platform"]
    val get_product: t -> string [@@js.get "product"]
    val get_productSub: t -> string [@@js.get "productSub"]
    val get_userAgent: t -> string [@@js.get "userAgent"]
    val get_vendor: t -> string [@@js.get "vendor"]
    val get_vendorSub: t -> string [@@js.get "vendorSub"]
    val taintEnabled: t -> bool [@@js.call "taintEnabled"]
  end
  module[@js.scope "NavigatorLanguage"] NavigatorLanguage : sig
    type t = _NavigatorLanguage
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_language: t -> string [@@js.get "language"]
    val get_languages: t -> string list [@@js.get "languages"]
  end
  module[@js.scope "NavigatorOnLine"] NavigatorOnLine : sig
    type t = _NavigatorOnLine
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_onLine: t -> bool [@@js.get "onLine"]
  end
  module[@js.scope "NavigatorPlugins"] NavigatorPlugins : sig
    type t = _NavigatorPlugins
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_mimeTypes: t -> _MimeTypeArray [@@js.get "mimeTypes"]
    val get_plugins: t -> _PluginArray [@@js.get "plugins"]
    val javaEnabled: t -> bool [@@js.call "javaEnabled"]
  end
  module[@js.scope "NavigatorStorage"] NavigatorStorage : sig
    type t = _NavigatorStorage
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_storage: t -> _StorageManager [@@js.get "storage"]
  end
  module[@js.scope "Node"] Node : sig
    type t = _Node
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_baseURI: t -> string [@@js.get "baseURI"]
    val get_childNodes: t -> _ChildNode _NodeListOf [@@js.get "childNodes"]
    val get_firstChild: t -> _ChildNode or_null [@@js.get "firstChild"]
    val get_isConnected: t -> bool [@@js.get "isConnected"]
    val get_lastChild: t -> _ChildNode or_null [@@js.get "lastChild"]
    val get_namespaceURI: t -> string or_null [@@js.get "namespaceURI"]
    val get_nextSibling: t -> _ChildNode or_null [@@js.get "nextSibling"]
    val get_nodeName: t -> string [@@js.get "nodeName"]
    val get_nodeType: t -> float [@@js.get "nodeType"]
    val get_nodeValue: t -> string or_null [@@js.get "nodeValue"]
    val set_nodeValue: t -> string or_null -> unit [@@js.set "nodeValue"]
    val get_ownerDocument: t -> _Document or_null [@@js.get "ownerDocument"]
    val get_parentElement: t -> _HTMLElement or_null [@@js.get "parentElement"]
    val get_parentNode: t -> (t, _ParentNode) intersection2 or_null [@@js.get "parentNode"]
    val get_previousSibling: t -> _ChildNode or_null [@@js.get "previousSibling"]
    val get_textContent: t -> string or_null [@@js.get "textContent"]
    val set_textContent: t -> string or_null -> unit [@@js.set "textContent"]
    val appendChild: t -> newChild:'T -> 'T [@@js.call "appendChild"]
    val cloneNode: t -> ?deep:bool -> unit -> t [@@js.call "cloneNode"]
    val compareDocumentPosition: t -> other:t -> float [@@js.call "compareDocumentPosition"]
    val contains: t -> other:t or_null -> bool [@@js.call "contains"]
    val getRootNode: t -> ?options:_GetRootNodeOptions -> unit -> t [@@js.call "getRootNode"]
    val hasChildNodes: t -> bool [@@js.call "hasChildNodes"]
    val insertBefore: t -> newChild:'T -> refChild:t or_null -> 'T [@@js.call "insertBefore"]
    val isDefaultNamespace: t -> namespace:string or_null -> bool [@@js.call "isDefaultNamespace"]
    val isEqualNode: t -> otherNode:t or_null -> bool [@@js.call "isEqualNode"]
    val isSameNode: t -> otherNode:t or_null -> bool [@@js.call "isSameNode"]
    val lookupNamespaceURI: t -> prefix:string or_null -> string or_null [@@js.call "lookupNamespaceURI"]
    val lookupPrefix: t -> namespace:string or_null -> string or_null [@@js.call "lookupPrefix"]
    val normalize: t -> unit [@@js.call "normalize"]
    val removeChild: t -> oldChild:'T -> 'T [@@js.call "removeChild"]
    val replaceChild: t -> newChild:t -> oldChild:'T -> 'T [@@js.call "replaceChild"]
    val get_ATTRIBUTE_NODE: t -> float [@@js.get "ATTRIBUTE_NODE"]
    val get_CDATA_SECTION_NODE: t -> float [@@js.get "CDATA_SECTION_NODE"]
    val get_COMMENT_NODE: t -> float [@@js.get "COMMENT_NODE"]
    val get_DOCUMENT_FRAGMENT_NODE: t -> float [@@js.get "DOCUMENT_FRAGMENT_NODE"]
    val get_DOCUMENT_NODE: t -> float [@@js.get "DOCUMENT_NODE"]
    val get_DOCUMENT_POSITION_CONTAINED_BY: t -> float [@@js.get "DOCUMENT_POSITION_CONTAINED_BY"]
    val get_DOCUMENT_POSITION_CONTAINS: t -> float [@@js.get "DOCUMENT_POSITION_CONTAINS"]
    val get_DOCUMENT_POSITION_DISCONNECTED: t -> float [@@js.get "DOCUMENT_POSITION_DISCONNECTED"]
    val get_DOCUMENT_POSITION_FOLLOWING: t -> float [@@js.get "DOCUMENT_POSITION_FOLLOWING"]
    val get_DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: t -> float [@@js.get "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC"]
    val get_DOCUMENT_POSITION_PRECEDING: t -> float [@@js.get "DOCUMENT_POSITION_PRECEDING"]
    val get_DOCUMENT_TYPE_NODE: t -> float [@@js.get "DOCUMENT_TYPE_NODE"]
    val get_ELEMENT_NODE: t -> float [@@js.get "ELEMENT_NODE"]
    val get_ENTITY_NODE: t -> float [@@js.get "ENTITY_NODE"]
    val get_ENTITY_REFERENCE_NODE: t -> float [@@js.get "ENTITY_REFERENCE_NODE"]
    val get_NOTATION_NODE: t -> float [@@js.get "NOTATION_NODE"]
    val get_PROCESSING_INSTRUCTION_NODE: t -> float [@@js.get "PROCESSING_INSTRUCTION_NODE"]
    val get_TEXT_NODE: t -> float [@@js.get "TEXT_NODE"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val node: anonymous_interface_299 [@@js.global "Node"]
  module[@js.scope "NodeFilter"] NodeFilter : sig
    type t = _NodeFilter
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val acceptNode: t -> node:_Node -> float [@@js.call "acceptNode"]
  end
  val nodeFilter: anonymous_interface_0 [@@js.global "NodeFilter"]
  module[@js.scope "NodeIterator"] NodeIterator : sig
    type t = _NodeIterator
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_filter: t -> _NodeFilter or_null [@@js.get "filter"]
    val get_pointerBeforeReferenceNode: t -> bool [@@js.get "pointerBeforeReferenceNode"]
    val get_referenceNode: t -> _Node [@@js.get "referenceNode"]
    val get_root: t -> _Node [@@js.get "root"]
    val get_whatToShow: t -> float [@@js.get "whatToShow"]
    val detach: t -> unit [@@js.call "detach"]
    val nextNode: t -> _Node or_null [@@js.call "nextNode"]
    val previousNode: t -> _Node or_null [@@js.call "previousNode"]
  end
  val nodeIterator: anonymous_interface_300 [@@js.global "NodeIterator"]
  module[@js.scope "NodeList"] NodeList : sig
    type t = _NodeList
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_length: t -> float [@@js.get "length"]
    val item: t -> index:float -> _Node or_null [@@js.call "item"]
    val forEach: t -> callbackfn:(value:_Node -> key:float -> parent:t -> unit) -> ?thisArg:any -> unit -> unit [@@js.call "forEach"]
    val get: t -> float -> _Node [@@js.index_get]
    val set: t -> float -> _Node -> unit [@@js.index_set]
  end
  val nodeList: anonymous_interface_301 [@@js.global "NodeList"]
  module[@js.scope "NodeListOf"] NodeListOf : sig
    type 'TNode t = 'TNode _NodeListOf
    val t_to_js: ('TNode -> Ojs.t) -> 'TNode t -> Ojs.t
    val t_of_js: (Ojs.t -> 'TNode) -> Ojs.t -> 'TNode t
    type 'TNode t_1 = 'TNode t
    val t_1_to_js: ('TNode -> Ojs.t) -> 'TNode t_1 -> Ojs.t
    val t_1_of_js: (Ojs.t -> 'TNode) -> Ojs.t -> 'TNode t_1
    val get_length: 'TNode t -> float [@@js.get "length"]
    val set_length: 'TNode t -> float -> unit [@@js.set "length"]
    val item: 'TNode t -> index:float -> 'TNode [@@js.call "item"]
    val forEach: 'TNode t -> callbackfn:(value:'TNode -> key:float -> parent:'TNode t -> unit) -> ?thisArg:any -> unit -> unit [@@js.call "forEach"]
    val get: 'TNode t -> float -> 'TNode [@@js.index_get]
    val set: 'TNode t -> float -> 'TNode -> unit [@@js.index_set]
    val cast: 'TNode t -> _NodeList [@@js.cast]
  end
  module[@js.scope "NonDocumentTypeChildNode"] NonDocumentTypeChildNode : sig
    type t = _NonDocumentTypeChildNode
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_nextElementSibling: t -> _Element or_null [@@js.get "nextElementSibling"]
    val get_previousElementSibling: t -> _Element or_null [@@js.get "previousElementSibling"]
  end
  module[@js.scope "NonElementParentNode"] NonElementParentNode : sig
    type t = _NonElementParentNode
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val getElementById: t -> elementId:string -> _Element or_null [@@js.call "getElementById"]
  end
  module[@js.scope "NotificationEventMap"] NotificationEventMap : sig
    type t = _NotificationEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_click: t -> _Event [@@js.get "click"]
    val set_click: t -> _Event -> unit [@@js.set "click"]
    val get_close: t -> _Event [@@js.get "close"]
    val set_close: t -> _Event -> unit [@@js.set "close"]
    val get_error: t -> _Event [@@js.get "error"]
    val set_error: t -> _Event -> unit [@@js.set "error"]
    val get_show: t -> _Event [@@js.get "show"]
    val set_show: t -> _Event -> unit [@@js.set "show"]
  end
  module[@js.scope "Notification"] Notification : sig
    type t = _Notification
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_actions: t -> _NotificationAction list [@@js.get "actions"]
    val get_badge: t -> string [@@js.get "badge"]
    val get_body: t -> string [@@js.get "body"]
    val get_data: t -> any [@@js.get "data"]
    val get_dir: t -> _NotificationDirection [@@js.get "dir"]
    val get_icon: t -> string [@@js.get "icon"]
    val get_image: t -> string [@@js.get "image"]
    val get_lang: t -> string [@@js.get "lang"]
    val get_onclick: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onclick"]
    val set_onclick: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onclick"]
    val get_onclose: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onclose"]
    val set_onclose: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onclose"]
    val get_onerror: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onerror"]
    val set_onerror: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onerror"]
    val get_onshow: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onshow"]
    val set_onshow: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onshow"]
    val get_renotify: t -> bool [@@js.get "renotify"]
    val get_requireInteraction: t -> bool [@@js.get "requireInteraction"]
    val get_silent: t -> bool [@@js.get "silent"]
    val get_tag: t -> string [@@js.get "tag"]
    val get_timestamp: t -> float [@@js.get "timestamp"]
    val get_title: t -> string [@@js.get "title"]
    val get_vibrate: t -> float list [@@js.get "vibrate"]
    val close: t -> unit [@@js.call "close"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val notification: anonymous_interface_302 [@@js.global "Notification"]
  module OES_element_index_uint : sig
    type t = _OES_element_index_uint
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module[@js.scope "OES_standard_derivatives"] OES_standard_derivatives : sig
    type t = _OES_standard_derivatives
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_FRAGMENT_SHADER_DERIVATIVE_HINT_OES: t -> _GLenum [@@js.get "FRAGMENT_SHADER_DERIVATIVE_HINT_OES"]
  end
  module OES_texture_float : sig
    type t = _OES_texture_float
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module OES_texture_float_linear : sig
    type t = _OES_texture_float_linear
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module[@js.scope "OES_texture_half_float"] OES_texture_half_float : sig
    type t = _OES_texture_half_float
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_HALF_FLOAT_OES: t -> _GLenum [@@js.get "HALF_FLOAT_OES"]
  end
  module OES_texture_half_float_linear : sig
    type t = _OES_texture_half_float_linear
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module[@js.scope "OES_vertex_array_object"] OES_vertex_array_object : sig
    type t = _OES_vertex_array_object
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val bindVertexArrayOES: t -> arrayObject:_WebGLVertexArrayObjectOES or_null -> unit [@@js.call "bindVertexArrayOES"]
    val createVertexArrayOES: t -> _WebGLVertexArrayObjectOES or_null [@@js.call "createVertexArrayOES"]
    val deleteVertexArrayOES: t -> arrayObject:_WebGLVertexArrayObjectOES or_null -> unit [@@js.call "deleteVertexArrayOES"]
    val isVertexArrayOES: t -> arrayObject:_WebGLVertexArrayObjectOES or_null -> _GLboolean [@@js.call "isVertexArrayOES"]
    val get_VERTEX_ARRAY_BINDING_OES: t -> _GLenum [@@js.get "VERTEX_ARRAY_BINDING_OES"]
  end
  module[@js.scope "OfflineAudioCompletionEvent"] OfflineAudioCompletionEvent : sig
    type t = _OfflineAudioCompletionEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_renderedBuffer: t -> _AudioBuffer [@@js.get "renderedBuffer"]
    val cast: t -> _Event [@@js.cast]
  end
  val offlineAudioCompletionEvent: anonymous_interface_303 [@@js.global "OfflineAudioCompletionEvent"]
  module[@js.scope "OfflineAudioContextEventMap"] OfflineAudioContextEventMap : sig
    type t = _OfflineAudioContextEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_complete: t -> _OfflineAudioCompletionEvent [@@js.get "complete"]
    val set_complete: t -> _OfflineAudioCompletionEvent -> unit [@@js.set "complete"]
    val cast: t -> _BaseAudioContextEventMap [@@js.cast]
  end
  module[@js.scope "OfflineAudioContext"] OfflineAudioContext : sig
    type t = _OfflineAudioContext
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_length: t -> float [@@js.get "length"]
    val get_oncomplete: t -> (this:t -> ev:_OfflineAudioCompletionEvent -> any) or_null [@@js.get "oncomplete"]
    val set_oncomplete: t -> (this:t -> ev:_OfflineAudioCompletionEvent -> any) or_null -> unit [@@js.set "oncomplete"]
    val resume: t -> unit Promise.t_1 [@@js.call "resume"]
    val startRendering: t -> _AudioBuffer Promise.t_1 [@@js.call "startRendering"]
    val suspend: t -> suspendTime:float -> unit Promise.t_1 [@@js.call "suspend"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _BaseAudioContext [@@js.cast]
  end
  val offlineAudioContext: anonymous_interface_304 [@@js.global "OfflineAudioContext"]
  module[@js.scope "OffscreenCanvas"] OffscreenCanvas : sig
    type t = _OffscreenCanvas
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_height: t -> float [@@js.get "height"]
    val set_height: t -> float -> unit [@@js.set "height"]
    val get_width: t -> float [@@js.get "width"]
    val set_width: t -> float -> unit [@@js.set "width"]
    val convertToBlob: t -> ?options:_ImageEncodeOptions -> unit -> _Blob Promise.t_1 [@@js.call "convertToBlob"]
    val getContext: t -> contextId:([`L_s1_2d] [@js.enum]) -> ?options:_CanvasRenderingContext2DSettings -> unit -> _OffscreenCanvasRenderingContext2D or_null [@@js.call "getContext"]
    val getContext': t -> contextId:([`L_s202_bitmaprenderer] [@js.enum]) -> ?options:_ImageBitmapRenderingContextSettings -> unit -> _ImageBitmapRenderingContext or_null [@@js.call "getContext"]
    val getContext'': t -> contextId:([`L_s867_webgl] [@js.enum]) -> ?options:_WebGLContextAttributes -> unit -> _WebGLRenderingContext or_null [@@js.call "getContext"]
    val getContext''': t -> contextId:([`L_s868_webgl2] [@js.enum]) -> ?options:_WebGLContextAttributes -> unit -> _WebGL2RenderingContext or_null [@@js.call "getContext"]
    val getContext'''': t -> contextId:_OffscreenRenderingContextId -> ?options:any -> unit -> _OffscreenRenderingContext or_null [@@js.call "getContext"]
    val transferToImageBitmap: t -> _ImageBitmap [@@js.call "transferToImageBitmap"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val offscreenCanvas: anonymous_interface_305 [@@js.global "OffscreenCanvas"]
  module[@js.scope "OffscreenCanvasRenderingContext2D"] OffscreenCanvasRenderingContext2D : sig
    type t = _OffscreenCanvasRenderingContext2D
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_canvas: t -> _OffscreenCanvas [@@js.get "canvas"]
    val commit: t -> unit [@@js.call "commit"]
    val cast: t -> _CanvasCompositing [@@js.cast]
    val cast': t -> _CanvasDrawImage [@@js.cast]
    val cast'': t -> _CanvasDrawPath [@@js.cast]
    val cast''': t -> _CanvasFillStrokeStyles [@@js.cast]
    val cast'''': t -> _CanvasFilters [@@js.cast]
    val cast''''': t -> _CanvasImageData [@@js.cast]
    val cast'''''': t -> _CanvasImageSmoothing [@@js.cast]
    val cast''''''': t -> _CanvasPath [@@js.cast]
    val cast'''''''': t -> _CanvasPathDrawingStyles [@@js.cast]
    val cast''''''''': t -> _CanvasRect [@@js.cast]
    val cast'''''''''': t -> _CanvasShadowStyles [@@js.cast]
    val cast''''''''''': t -> _CanvasState [@@js.cast]
    val cast'''''''''''': t -> _CanvasText [@@js.cast]
    val cast''''''''''''': t -> _CanvasTextDrawingStyles [@@js.cast]
    val cast'''''''''''''': t -> _CanvasTransform [@@js.cast]
  end
  val offscreenCanvasRenderingContext2D: anonymous_interface_306 [@@js.global "OffscreenCanvasRenderingContext2D"]
  module[@js.scope "OscillatorNode"] OscillatorNode : sig
    type t = _OscillatorNode
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_detune: t -> _AudioParam [@@js.get "detune"]
    val get_frequency: t -> _AudioParam [@@js.get "frequency"]
    val get_type: t -> _OscillatorType [@@js.get "type"]
    val set_type: t -> _OscillatorType -> unit [@@js.set "type"]
    val setPeriodicWave: t -> periodicWave:_PeriodicWave -> unit [@@js.call "setPeriodicWave"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _AudioScheduledSourceNode [@@js.cast]
  end
  val oscillatorNode: anonymous_interface_307 [@@js.global "OscillatorNode"]
  module[@js.scope "OverconstrainedError"] OverconstrainedError : sig
    type t = _OverconstrainedError
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_constraint: t -> string [@@js.get "constraint"]
    val set_constraint: t -> string -> unit [@@js.set "constraint"]
    val cast: t -> Error.t_0 [@@js.cast]
  end
  val overconstrainedError: anonymous_interface_308 [@@js.global "OverconstrainedError"]
  module[@js.scope "OverflowEvent"] OverflowEvent : sig
    type t = _OverflowEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_horizontalOverflow: t -> bool [@@js.get "horizontalOverflow"]
    val get_orient: t -> float [@@js.get "orient"]
    val get_verticalOverflow: t -> bool [@@js.get "verticalOverflow"]
    val get_BOTH: t -> float [@@js.get "BOTH"]
    val get_HORIZONTAL: t -> float [@@js.get "HORIZONTAL"]
    val get_VERTICAL: t -> float [@@js.get "VERTICAL"]
    val cast: t -> _UIEvent [@@js.cast]
  end
  val overflowEvent: anonymous_interface_309 [@@js.global "OverflowEvent"]
  module[@js.scope "PageTransitionEvent"] PageTransitionEvent : sig
    type t = _PageTransitionEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_persisted: t -> bool [@@js.get "persisted"]
    val cast: t -> _Event [@@js.cast]
  end
  val pageTransitionEvent: anonymous_interface_310 [@@js.global "PageTransitionEvent"]
  module[@js.scope "PannerNode"] PannerNode : sig
    type t = _PannerNode
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_coneInnerAngle: t -> float [@@js.get "coneInnerAngle"]
    val set_coneInnerAngle: t -> float -> unit [@@js.set "coneInnerAngle"]
    val get_coneOuterAngle: t -> float [@@js.get "coneOuterAngle"]
    val set_coneOuterAngle: t -> float -> unit [@@js.set "coneOuterAngle"]
    val get_coneOuterGain: t -> float [@@js.get "coneOuterGain"]
    val set_coneOuterGain: t -> float -> unit [@@js.set "coneOuterGain"]
    val get_distanceModel: t -> _DistanceModelType [@@js.get "distanceModel"]
    val set_distanceModel: t -> _DistanceModelType -> unit [@@js.set "distanceModel"]
    val get_maxDistance: t -> float [@@js.get "maxDistance"]
    val set_maxDistance: t -> float -> unit [@@js.set "maxDistance"]
    val get_orientationX: t -> _AudioParam [@@js.get "orientationX"]
    val get_orientationY: t -> _AudioParam [@@js.get "orientationY"]
    val get_orientationZ: t -> _AudioParam [@@js.get "orientationZ"]
    val get_panningModel: t -> _PanningModelType [@@js.get "panningModel"]
    val set_panningModel: t -> _PanningModelType -> unit [@@js.set "panningModel"]
    val get_positionX: t -> _AudioParam [@@js.get "positionX"]
    val get_positionY: t -> _AudioParam [@@js.get "positionY"]
    val get_positionZ: t -> _AudioParam [@@js.get "positionZ"]
    val get_refDistance: t -> float [@@js.get "refDistance"]
    val set_refDistance: t -> float -> unit [@@js.set "refDistance"]
    val get_rolloffFactor: t -> float [@@js.get "rolloffFactor"]
    val set_rolloffFactor: t -> float -> unit [@@js.set "rolloffFactor"]
    val setOrientation: t -> x:float -> y:float -> z:float -> unit [@@js.call "setOrientation"]
    val setPosition: t -> x:float -> y:float -> z:float -> unit [@@js.call "setPosition"]
    val cast: t -> _AudioNode [@@js.cast]
  end
  val pannerNode: anonymous_interface_311 [@@js.global "PannerNode"]
  module[@js.scope "ParentNode"] ParentNode : sig
    type t = _ParentNode
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_childElementCount: t -> float [@@js.get "childElementCount"]
    val get_children: t -> _HTMLCollection [@@js.get "children"]
    val get_firstElementChild: t -> _Element or_null [@@js.get "firstElementChild"]
    val get_lastElementChild: t -> _Element or_null [@@js.get "lastElementChild"]
    val append: t -> nodes:(_Node or_string list [@js.variadic]) -> unit [@@js.call "append"]
    val prepend: t -> nodes:(_Node or_string list [@js.variadic]) -> unit [@@js.call "prepend"]
    val querySelector: t -> selectors:'K -> (* FIXME: unknown type '{..}['K]' *)any or_null [@@js.call "querySelector"]
    val querySelector': t -> selectors:'K -> (* FIXME: unknown type '{..}['K]' *)any or_null [@@js.call "querySelector"]
    val querySelector'': t -> selectors:string -> 'E or_null [@@js.call "querySelector"]
    val querySelectorAll: t -> selectors:'K -> (* FIXME: unknown type '{..}['K]' *)any _NodeListOf [@@js.call "querySelectorAll"]
    val querySelectorAll': t -> selectors:'K -> (* FIXME: unknown type '{..}['K]' *)any _NodeListOf [@@js.call "querySelectorAll"]
    val querySelectorAll'': t -> selectors:string -> 'E _NodeListOf [@@js.call "querySelectorAll"]
  end
  module[@js.scope "Path2D"] Path2D : sig
    type t = _Path2D
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val addPath: t -> path:t -> ?transform:_DOMMatrix2DInit -> unit -> unit [@@js.call "addPath"]
    val cast: t -> _CanvasPath [@@js.cast]
  end
  val path2D: anonymous_interface_312 [@@js.global "Path2D"]
  module[@js.scope "PaymentAddress"] PaymentAddress : sig
    type t = _PaymentAddress
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_addressLine: t -> string list [@@js.get "addressLine"]
    val get_city: t -> string [@@js.get "city"]
    val get_country: t -> string [@@js.get "country"]
    val get_dependentLocality: t -> string [@@js.get "dependentLocality"]
    val get_languageCode: t -> string [@@js.get "languageCode"]
    val get_organization: t -> string [@@js.get "organization"]
    val get_phone: t -> string [@@js.get "phone"]
    val get_postalCode: t -> string [@@js.get "postalCode"]
    val get_recipient: t -> string [@@js.get "recipient"]
    val get_region: t -> string [@@js.get "region"]
    val get_sortingCode: t -> string [@@js.get "sortingCode"]
    val toJSON: t -> any [@@js.call "toJSON"]
  end
  val paymentAddress: anonymous_interface_313 [@@js.global "PaymentAddress"]
  module[@js.scope "PaymentRequestEventMap"] PaymentRequestEventMap : sig
    type t = _PaymentRequestEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_shippingaddresschange: t -> _Event [@@js.get "shippingaddresschange"]
    val set_shippingaddresschange: t -> _Event -> unit [@@js.set "shippingaddresschange"]
    val get_shippingoptionchange: t -> _Event [@@js.get "shippingoptionchange"]
    val set_shippingoptionchange: t -> _Event -> unit [@@js.set "shippingoptionchange"]
  end
  module[@js.scope "PaymentRequest"] PaymentRequest : sig
    type t = _PaymentRequest
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_id: t -> string [@@js.get "id"]
    val get_onshippingaddresschange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onshippingaddresschange"]
    val set_onshippingaddresschange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onshippingaddresschange"]
    val get_onshippingoptionchange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onshippingoptionchange"]
    val set_onshippingoptionchange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onshippingoptionchange"]
    val get_shippingAddress: t -> _PaymentAddress or_null [@@js.get "shippingAddress"]
    val get_shippingOption: t -> string or_null [@@js.get "shippingOption"]
    val get_shippingType: t -> _PaymentShippingType or_null [@@js.get "shippingType"]
    val abort: t -> unit Promise.t_1 [@@js.call "abort"]
    val canMakePayment: t -> bool Promise.t_1 [@@js.call "canMakePayment"]
    val show: t -> _PaymentResponse Promise.t_1 [@@js.call "show"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val paymentRequest: anonymous_interface_314 [@@js.global "PaymentRequest"]
  module[@js.scope "PaymentRequestUpdateEvent"] PaymentRequestUpdateEvent : sig
    type t = _PaymentRequestUpdateEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val updateWith: t -> detailsPromise:(_PaymentDetailsUpdate, _PaymentDetailsUpdate Promise.t_1) union2 -> unit [@@js.call "updateWith"]
    val cast: t -> _Event [@@js.cast]
  end
  val paymentRequestUpdateEvent: anonymous_interface_315 [@@js.global "PaymentRequestUpdateEvent"]
  module[@js.scope "PaymentResponse"] PaymentResponse : sig
    type t = _PaymentResponse
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_details: t -> any [@@js.get "details"]
    val get_methodName: t -> string [@@js.get "methodName"]
    val get_payerEmail: t -> string or_null [@@js.get "payerEmail"]
    val get_payerName: t -> string or_null [@@js.get "payerName"]
    val get_payerPhone: t -> string or_null [@@js.get "payerPhone"]
    val get_requestId: t -> string [@@js.get "requestId"]
    val get_shippingAddress: t -> _PaymentAddress or_null [@@js.get "shippingAddress"]
    val get_shippingOption: t -> string or_null [@@js.get "shippingOption"]
    val complete: t -> ?result:_PaymentComplete -> unit -> unit Promise.t_1 [@@js.call "complete"]
    val toJSON: t -> any [@@js.call "toJSON"]
  end
  val paymentResponse: anonymous_interface_316 [@@js.global "PaymentResponse"]
  module[@js.scope "PerfWidgetExternal"] PerfWidgetExternal : sig
    type t = _PerfWidgetExternal
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_activeNetworkRequestCount: t -> float [@@js.get "activeNetworkRequestCount"]
    val get_averageFrameTime: t -> float [@@js.get "averageFrameTime"]
    val get_averagePaintTime: t -> float [@@js.get "averagePaintTime"]
    val get_extraInformationEnabled: t -> bool [@@js.get "extraInformationEnabled"]
    val get_independentRenderingEnabled: t -> bool [@@js.get "independentRenderingEnabled"]
    val get_irDisablingContentString: t -> string [@@js.get "irDisablingContentString"]
    val get_irStatusAvailable: t -> bool [@@js.get "irStatusAvailable"]
    val get_maxCpuSpeed: t -> float [@@js.get "maxCpuSpeed"]
    val get_paintRequestsPerSecond: t -> float [@@js.get "paintRequestsPerSecond"]
    val get_performanceCounter: t -> float [@@js.get "performanceCounter"]
    val get_performanceCounterFrequency: t -> float [@@js.get "performanceCounterFrequency"]
    val addEventListener: t -> eventType:string -> callback:untyped_function -> unit [@@js.call "addEventListener"]
    val getMemoryUsage: t -> float [@@js.call "getMemoryUsage"]
    val getProcessCpuUsage: t -> float [@@js.call "getProcessCpuUsage"]
    val getRecentCpuUsage: t -> last:float or_null -> any [@@js.call "getRecentCpuUsage"]
    val getRecentFrames: t -> last:float or_null -> any [@@js.call "getRecentFrames"]
    val getRecentMemoryUsage: t -> last:float or_null -> any [@@js.call "getRecentMemoryUsage"]
    val getRecentPaintRequests: t -> last:float or_null -> any [@@js.call "getRecentPaintRequests"]
    val removeEventListener: t -> eventType:string -> callback:untyped_function -> unit [@@js.call "removeEventListener"]
    val repositionWindow: t -> x:float -> y:float -> unit [@@js.call "repositionWindow"]
    val resizeWindow: t -> width:float -> height:float -> unit [@@js.call "resizeWindow"]
  end
  val perfWidgetExternal: anonymous_interface_317 [@@js.global "PerfWidgetExternal"]
  module[@js.scope "PerformanceEventMap"] PerformanceEventMap : sig
    type t = _PerformanceEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_resourcetimingbufferfull: t -> _Event [@@js.get "resourcetimingbufferfull"]
    val set_resourcetimingbufferfull: t -> _Event -> unit [@@js.set "resourcetimingbufferfull"]
  end
  module[@js.scope "Performance"] Performance : sig
    type t = _Performance
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_navigation: t -> _PerformanceNavigation [@@js.get "navigation"]
    val get_onresourcetimingbufferfull: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onresourcetimingbufferfull"]
    val set_onresourcetimingbufferfull: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onresourcetimingbufferfull"]
    val get_timeOrigin: t -> float [@@js.get "timeOrigin"]
    val get_timing: t -> _PerformanceTiming [@@js.get "timing"]
    val clearMarks: t -> ?markName:string -> unit -> unit [@@js.call "clearMarks"]
    val clearMeasures: t -> ?measureName:string -> unit -> unit [@@js.call "clearMeasures"]
    val clearResourceTimings: t -> unit [@@js.call "clearResourceTimings"]
    val getEntries: t -> _PerformanceEntryList [@@js.call "getEntries"]
    val getEntriesByName: t -> name:string -> ?type_:string -> unit -> _PerformanceEntryList [@@js.call "getEntriesByName"]
    val getEntriesByType: t -> type_:string -> _PerformanceEntryList [@@js.call "getEntriesByType"]
    val mark: t -> markName:string -> unit [@@js.call "mark"]
    val measure: t -> measureName:string -> ?startMark:string -> ?endMark:string -> unit -> unit [@@js.call "measure"]
    val now: t -> float [@@js.call "now"]
    val setResourceTimingBufferSize: t -> maxSize:float -> unit [@@js.call "setResourceTimingBufferSize"]
    val toJSON: t -> any [@@js.call "toJSON"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val performance: anonymous_interface_318 [@@js.global "Performance"]
  module[@js.scope "PerformanceEntry"] PerformanceEntry : sig
    type t = _PerformanceEntry
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_duration: t -> float [@@js.get "duration"]
    val get_entryType: t -> string [@@js.get "entryType"]
    val get_name: t -> string [@@js.get "name"]
    val get_startTime: t -> float [@@js.get "startTime"]
    val toJSON: t -> any [@@js.call "toJSON"]
  end
  val performanceEntry: anonymous_interface_319 [@@js.global "PerformanceEntry"]
  module[@js.scope "PerformanceMark"] PerformanceMark : sig
    type t = _PerformanceMark
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val cast: t -> _PerformanceEntry [@@js.cast]
  end
  val performanceMark: anonymous_interface_320 [@@js.global "PerformanceMark"]
  module[@js.scope "PerformanceMeasure"] PerformanceMeasure : sig
    type t = _PerformanceMeasure
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val cast: t -> _PerformanceEntry [@@js.cast]
  end
  val performanceMeasure: anonymous_interface_321 [@@js.global "PerformanceMeasure"]
  module[@js.scope "PerformanceNavigation"] PerformanceNavigation : sig
    type t = _PerformanceNavigation
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_redirectCount: t -> float [@@js.get "redirectCount"]
    val get_type: t -> float [@@js.get "type"]
    val toJSON: t -> any [@@js.call "toJSON"]
    val get_TYPE_BACK_FORWARD: t -> float [@@js.get "TYPE_BACK_FORWARD"]
    val get_TYPE_NAVIGATE: t -> float [@@js.get "TYPE_NAVIGATE"]
    val get_TYPE_RELOAD: t -> float [@@js.get "TYPE_RELOAD"]
    val get_TYPE_RESERVED: t -> float [@@js.get "TYPE_RESERVED"]
  end
  val performanceNavigation: anonymous_interface_322 [@@js.global "PerformanceNavigation"]
  module[@js.scope "PerformanceNavigationTiming"] PerformanceNavigationTiming : sig
    type t = _PerformanceNavigationTiming
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_domComplete: t -> float [@@js.get "domComplete"]
    val get_domContentLoadedEventEnd: t -> float [@@js.get "domContentLoadedEventEnd"]
    val get_domContentLoadedEventStart: t -> float [@@js.get "domContentLoadedEventStart"]
    val get_domInteractive: t -> float [@@js.get "domInteractive"]
    val get_loadEventEnd: t -> float [@@js.get "loadEventEnd"]
    val get_loadEventStart: t -> float [@@js.get "loadEventStart"]
    val get_redirectCount: t -> float [@@js.get "redirectCount"]
    val get_type: t -> _NavigationType [@@js.get "type"]
    val get_unloadEventEnd: t -> float [@@js.get "unloadEventEnd"]
    val get_unloadEventStart: t -> float [@@js.get "unloadEventStart"]
    val toJSON: t -> any [@@js.call "toJSON"]
    val cast: t -> _PerformanceResourceTiming [@@js.cast]
  end
  val performanceNavigationTiming: anonymous_interface_323 [@@js.global "PerformanceNavigationTiming"]
  module[@js.scope "PerformanceObserver"] PerformanceObserver : sig
    type t = _PerformanceObserver
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val disconnect: t -> unit [@@js.call "disconnect"]
    val observe: t -> ?options:_PerformanceObserverInit -> unit -> unit [@@js.call "observe"]
    val takeRecords: t -> _PerformanceEntryList [@@js.call "takeRecords"]
  end
  val performanceObserver: anonymous_interface_324 [@@js.global "PerformanceObserver"]
  module[@js.scope "PerformanceObserverEntryList"] PerformanceObserverEntryList : sig
    type t = _PerformanceObserverEntryList
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val getEntries: t -> _PerformanceEntryList [@@js.call "getEntries"]
    val getEntriesByName: t -> name:string -> ?type_:string -> unit -> _PerformanceEntryList [@@js.call "getEntriesByName"]
    val getEntriesByType: t -> type_:string -> _PerformanceEntryList [@@js.call "getEntriesByType"]
  end
  val performanceObserverEntryList: anonymous_interface_325 [@@js.global "PerformanceObserverEntryList"]
  module[@js.scope "PerformanceResourceTiming"] PerformanceResourceTiming : sig
    type t = _PerformanceResourceTiming
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_connectEnd: t -> float [@@js.get "connectEnd"]
    val get_connectStart: t -> float [@@js.get "connectStart"]
    val get_decodedBodySize: t -> float [@@js.get "decodedBodySize"]
    val get_domainLookupEnd: t -> float [@@js.get "domainLookupEnd"]
    val get_domainLookupStart: t -> float [@@js.get "domainLookupStart"]
    val get_encodedBodySize: t -> float [@@js.get "encodedBodySize"]
    val get_fetchStart: t -> float [@@js.get "fetchStart"]
    val get_initiatorType: t -> string [@@js.get "initiatorType"]
    val get_nextHopProtocol: t -> string [@@js.get "nextHopProtocol"]
    val get_redirectEnd: t -> float [@@js.get "redirectEnd"]
    val get_redirectStart: t -> float [@@js.get "redirectStart"]
    val get_requestStart: t -> float [@@js.get "requestStart"]
    val get_responseEnd: t -> float [@@js.get "responseEnd"]
    val get_responseStart: t -> float [@@js.get "responseStart"]
    val get_secureConnectionStart: t -> float [@@js.get "secureConnectionStart"]
    val get_transferSize: t -> float [@@js.get "transferSize"]
    val get_workerStart: t -> float [@@js.get "workerStart"]
    val toJSON: t -> any [@@js.call "toJSON"]
    val cast: t -> _PerformanceEntry [@@js.cast]
  end
  val performanceResourceTiming: anonymous_interface_326 [@@js.global "PerformanceResourceTiming"]
  module[@js.scope "PerformanceTiming"] PerformanceTiming : sig
    type t = _PerformanceTiming
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_connectEnd: t -> float [@@js.get "connectEnd"]
    val get_connectStart: t -> float [@@js.get "connectStart"]
    val get_domComplete: t -> float [@@js.get "domComplete"]
    val get_domContentLoadedEventEnd: t -> float [@@js.get "domContentLoadedEventEnd"]
    val get_domContentLoadedEventStart: t -> float [@@js.get "domContentLoadedEventStart"]
    val get_domInteractive: t -> float [@@js.get "domInteractive"]
    val get_domLoading: t -> float [@@js.get "domLoading"]
    val get_domainLookupEnd: t -> float [@@js.get "domainLookupEnd"]
    val get_domainLookupStart: t -> float [@@js.get "domainLookupStart"]
    val get_fetchStart: t -> float [@@js.get "fetchStart"]
    val get_loadEventEnd: t -> float [@@js.get "loadEventEnd"]
    val get_loadEventStart: t -> float [@@js.get "loadEventStart"]
    val get_navigationStart: t -> float [@@js.get "navigationStart"]
    val get_redirectEnd: t -> float [@@js.get "redirectEnd"]
    val get_redirectStart: t -> float [@@js.get "redirectStart"]
    val get_requestStart: t -> float [@@js.get "requestStart"]
    val get_responseEnd: t -> float [@@js.get "responseEnd"]
    val get_responseStart: t -> float [@@js.get "responseStart"]
    val get_secureConnectionStart: t -> float [@@js.get "secureConnectionStart"]
    val get_unloadEventEnd: t -> float [@@js.get "unloadEventEnd"]
    val get_unloadEventStart: t -> float [@@js.get "unloadEventStart"]
    val toJSON: t -> any [@@js.call "toJSON"]
  end
  val performanceTiming: anonymous_interface_327 [@@js.global "PerformanceTiming"]
  module PeriodicWave : sig
    type t = _PeriodicWave
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  val periodicWave: anonymous_interface_328 [@@js.global "PeriodicWave"]
  module[@js.scope "PermissionRequest"] PermissionRequest : sig
    type t = _PermissionRequest
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_state: t -> _MSWebViewPermissionState [@@js.get "state"]
    val defer: t -> unit [@@js.call "defer"]
    val cast: t -> _DeferredPermissionRequest [@@js.cast]
  end
  val permissionRequest: anonymous_interface_329 [@@js.global "PermissionRequest"]
  module[@js.scope "PermissionRequestedEvent"] PermissionRequestedEvent : sig
    type t = _PermissionRequestedEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_permissionRequest: t -> _PermissionRequest [@@js.get "permissionRequest"]
    val cast: t -> _Event [@@js.cast]
  end
  val permissionRequestedEvent: anonymous_interface_330 [@@js.global "PermissionRequestedEvent"]
  module[@js.scope "PermissionStatusEventMap"] PermissionStatusEventMap : sig
    type t = _PermissionStatusEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_change: t -> _Event [@@js.get "change"]
    val set_change: t -> _Event -> unit [@@js.set "change"]
  end
  module[@js.scope "PermissionStatus"] PermissionStatus : sig
    type t = _PermissionStatus
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_onchange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onchange"]
    val set_onchange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onchange"]
    val get_state: t -> _PermissionState [@@js.get "state"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val permissionStatus: anonymous_interface_331 [@@js.global "PermissionStatus"]
  module[@js.scope "Permissions"] Permissions : sig
    type t = _Permissions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val query: t -> permissionDesc:([`U_s137_accelerometer of _PermissionDescriptor  | `U_s155_ambient_light_sensor of _PermissionDescriptor  | `U_s187_background_sync of _PermissionDescriptor  | `U_s207_bluetooth of _PermissionDescriptor  | `U_s222_camera of (_PermissionDescriptor, _DevicePermissionDescriptor) union2  | `U_s245_clipboard of _PermissionDescriptor  | `U_s288_device_info of _PermissionDescriptor  | `U_s394_geolocation of _PermissionDescriptor  | `U_s398_gyroscope of _PermissionDescriptor  | `U_s510_magnetometer of _PermissionDescriptor  | `U_s534_microphone of (_PermissionDescriptor, _DevicePermissionDescriptor) union2  | `U_s536_midi of (_PermissionDescriptor, _MidiPermissionDescriptor) union2  | `U_s577_notifications of _PermissionDescriptor  | `U_s619_persistent_storage of _PermissionDescriptor  | `U_s661_push of (_PermissionDescriptor, _PushPermissionDescriptor) union2  | `U_s747_speaker of (_PermissionDescriptor, _DevicePermissionDescriptor) union2 ] [@js.union on_field "name"]) -> _PermissionStatus Promise.t_1 [@@js.call "query"]
  end
  val permissions: anonymous_interface_332 [@@js.global "Permissions"]
  module[@js.scope "Plugin"] Plugin : sig
    type t = _Plugin
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_description: t -> string [@@js.get "description"]
    val get_filename: t -> string [@@js.get "filename"]
    val get_length: t -> float [@@js.get "length"]
    val get_name: t -> string [@@js.get "name"]
    val item: t -> index:float -> _MimeType or_null [@@js.call "item"]
    val namedItem: t -> name:string -> _MimeType or_null [@@js.call "namedItem"]
    val get: t -> float -> _MimeType [@@js.index_get]
    val set: t -> float -> _MimeType -> unit [@@js.index_set]
  end
  val plugin: anonymous_interface_333 [@@js.global "Plugin"]
  module[@js.scope "PluginArray"] PluginArray : sig
    type t = _PluginArray
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_length: t -> float [@@js.get "length"]
    val item: t -> index:float -> _Plugin or_null [@@js.call "item"]
    val namedItem: t -> name:string -> _Plugin or_null [@@js.call "namedItem"]
    val refresh: t -> ?reload:bool -> unit -> unit [@@js.call "refresh"]
    val get: t -> float -> _Plugin [@@js.index_get]
    val set: t -> float -> _Plugin -> unit [@@js.index_set]
  end
  val pluginArray: anonymous_interface_334 [@@js.global "PluginArray"]
  module[@js.scope "PointerEvent"] PointerEvent : sig
    type t = _PointerEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_height: t -> float [@@js.get "height"]
    val get_isPrimary: t -> bool [@@js.get "isPrimary"]
    val get_pointerId: t -> float [@@js.get "pointerId"]
    val get_pointerType: t -> string [@@js.get "pointerType"]
    val get_pressure: t -> float [@@js.get "pressure"]
    val get_tangentialPressure: t -> float [@@js.get "tangentialPressure"]
    val get_tiltX: t -> float [@@js.get "tiltX"]
    val get_tiltY: t -> float [@@js.get "tiltY"]
    val get_twist: t -> float [@@js.get "twist"]
    val get_width: t -> float [@@js.get "width"]
    val cast: t -> _MouseEvent [@@js.cast]
  end
  val pointerEvent: anonymous_interface_335 [@@js.global "PointerEvent"]
  module[@js.scope "PopStateEvent"] PopStateEvent : sig
    type t = _PopStateEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_state: t -> any [@@js.get "state"]
    val cast: t -> _Event [@@js.cast]
  end
  val popStateEvent: anonymous_interface_336 [@@js.global "PopStateEvent"]
  module[@js.scope "Position"] Position : sig
    type t = _Position
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_coords: t -> _Coordinates [@@js.get "coords"]
    val get_timestamp: t -> float [@@js.get "timestamp"]
  end
  module[@js.scope "PositionError"] PositionError : sig
    type t = _PositionError
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_code: t -> float [@@js.get "code"]
    val get_message: t -> string [@@js.get "message"]
    val get_PERMISSION_DENIED: t -> float [@@js.get "PERMISSION_DENIED"]
    val get_POSITION_UNAVAILABLE: t -> float [@@js.get "POSITION_UNAVAILABLE"]
    val get_TIMEOUT: t -> float [@@js.get "TIMEOUT"]
  end
  module[@js.scope "ProcessingInstruction"] ProcessingInstruction : sig
    type t = _ProcessingInstruction
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_target: t -> string [@@js.get "target"]
    val cast: t -> _CharacterData [@@js.cast]
  end
  val processingInstruction: anonymous_interface_337 [@@js.global "ProcessingInstruction"]
  module[@js.scope "ProgressEvent"] ProgressEvent : sig
    type 'T t = 'T _ProgressEvent
    val t_to_js: ('T -> Ojs.t) -> 'T t -> Ojs.t
    val t_of_js: (Ojs.t -> 'T) -> Ojs.t -> 'T t
    type 'T t_1 = 'T t
    val t_1_to_js: ('T -> Ojs.t) -> 'T t_1 -> Ojs.t
    val t_1_of_js: (Ojs.t -> 'T) -> Ojs.t -> 'T t_1
    type t_0 = _EventTarget t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_lengthComputable: 'T t -> bool [@@js.get "lengthComputable"]
    val get_loaded: 'T t -> float [@@js.get "loaded"]
    val get_target: 'T t -> 'T or_null [@@js.get "target"]
    val get_total: 'T t -> float [@@js.get "total"]
    val cast: 'T t -> _Event [@@js.cast]
  end
  val progressEvent: anonymous_interface_338 [@@js.global "ProgressEvent"]
  module[@js.scope "PromiseRejectionEvent"] PromiseRejectionEvent : sig
    type t = _PromiseRejectionEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_promise: t -> any Promise.t_1 [@@js.get "promise"]
    val get_reason: t -> any [@@js.get "reason"]
    val cast: t -> _Event [@@js.cast]
  end
  val promiseRejectionEvent: anonymous_interface_339 [@@js.global "PromiseRejectionEvent"]
  module[@js.scope "PublicKeyCredential"] PublicKeyCredential : sig
    type t = _PublicKeyCredential
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_rawId: t -> ArrayBuffer.t_0 [@@js.get "rawId"]
    val get_response: t -> _AuthenticatorResponse [@@js.get "response"]
    val getClientExtensionResults: t -> _AuthenticationExtensionsClientOutputs [@@js.call "getClientExtensionResults"]
    val cast: t -> _Credential [@@js.cast]
  end
  val publicKeyCredential: anonymous_interface_340 [@@js.global "PublicKeyCredential"]
  module[@js.scope "PushManager"] PushManager : sig
    type t = _PushManager
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val getSubscription: t -> _PushSubscription or_null Promise.t_1 [@@js.call "getSubscription"]
    val permissionState: t -> ?options:_PushSubscriptionOptionsInit -> unit -> _PushPermissionState Promise.t_1 [@@js.call "permissionState"]
    val subscribe: t -> ?options:_PushSubscriptionOptionsInit -> unit -> _PushSubscription Promise.t_1 [@@js.call "subscribe"]
  end
  val pushManager: anonymous_interface_341 [@@js.global "PushManager"]
  module[@js.scope "PushSubscription"] PushSubscription : sig
    type t = _PushSubscription
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_endpoint: t -> string [@@js.get "endpoint"]
    val get_expirationTime: t -> float or_null [@@js.get "expirationTime"]
    val get_options: t -> _PushSubscriptionOptions [@@js.get "options"]
    val getKey: t -> name:_PushEncryptionKeyName -> ArrayBuffer.t_0 or_null [@@js.call "getKey"]
    val toJSON: t -> _PushSubscriptionJSON [@@js.call "toJSON"]
    val unsubscribe: t -> bool Promise.t_1 [@@js.call "unsubscribe"]
  end
  val pushSubscription: anonymous_interface_342 [@@js.global "PushSubscription"]
  module[@js.scope "PushSubscriptionOptions"] PushSubscriptionOptions : sig
    type t = _PushSubscriptionOptions
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_applicationServerKey: t -> ArrayBuffer.t_0 or_null [@@js.get "applicationServerKey"]
    val get_userVisibleOnly: t -> bool [@@js.get "userVisibleOnly"]
  end
  val pushSubscriptionOptions: anonymous_interface_343 [@@js.global "PushSubscriptionOptions"]
  module[@js.scope "RTCCertificate"] RTCCertificate : sig
    type t = _RTCCertificate
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_expires: t -> float [@@js.get "expires"]
    val getFingerprints: t -> _RTCDtlsFingerprint list [@@js.call "getFingerprints"]
  end
  val rTCCertificate: anonymous_interface_344 [@@js.global "RTCCertificate"]
  module[@js.scope "RTCDTMFSenderEventMap"] RTCDTMFSenderEventMap : sig
    type t = _RTCDTMFSenderEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_tonechange: t -> _RTCDTMFToneChangeEvent [@@js.get "tonechange"]
    val set_tonechange: t -> _RTCDTMFToneChangeEvent -> unit [@@js.set "tonechange"]
  end
  module[@js.scope "RTCDTMFSender"] RTCDTMFSender : sig
    type t = _RTCDTMFSender
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_canInsertDTMF: t -> bool [@@js.get "canInsertDTMF"]
    val get_ontonechange: t -> (this:t -> ev:_RTCDTMFToneChangeEvent -> any) or_null [@@js.get "ontonechange"]
    val set_ontonechange: t -> (this:t -> ev:_RTCDTMFToneChangeEvent -> any) or_null -> unit [@@js.set "ontonechange"]
    val get_toneBuffer: t -> string [@@js.get "toneBuffer"]
    val insertDTMF: t -> tones:string -> ?duration:float -> ?interToneGap:float -> unit -> unit [@@js.call "insertDTMF"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val rTCDTMFSender: anonymous_interface_345 [@@js.global "RTCDTMFSender"]
  module[@js.scope "RTCDTMFToneChangeEvent"] RTCDTMFToneChangeEvent : sig
    type t = _RTCDTMFToneChangeEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_tone: t -> string [@@js.get "tone"]
    val cast: t -> _Event [@@js.cast]
  end
  val rTCDTMFToneChangeEvent: anonymous_interface_346 [@@js.global "RTCDTMFToneChangeEvent"]
  module[@js.scope "RTCDataChannelEventMap"] RTCDataChannelEventMap : sig
    type t = _RTCDataChannelEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_bufferedamountlow: t -> _Event [@@js.get "bufferedamountlow"]
    val set_bufferedamountlow: t -> _Event -> unit [@@js.set "bufferedamountlow"]
    val get_close: t -> _Event [@@js.get "close"]
    val set_close: t -> _Event -> unit [@@js.set "close"]
    val get_error: t -> _RTCErrorEvent [@@js.get "error"]
    val set_error: t -> _RTCErrorEvent -> unit [@@js.set "error"]
    val get_message: t -> _MessageEvent [@@js.get "message"]
    val set_message: t -> _MessageEvent -> unit [@@js.set "message"]
    val get_open: t -> _Event [@@js.get "open"]
    val set_open: t -> _Event -> unit [@@js.set "open"]
  end
  module[@js.scope "RTCDataChannel"] RTCDataChannel : sig
    type t = _RTCDataChannel
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_binaryType: t -> string [@@js.get "binaryType"]
    val set_binaryType: t -> string -> unit [@@js.set "binaryType"]
    val get_bufferedAmount: t -> float [@@js.get "bufferedAmount"]
    val get_bufferedAmountLowThreshold: t -> float [@@js.get "bufferedAmountLowThreshold"]
    val set_bufferedAmountLowThreshold: t -> float -> unit [@@js.set "bufferedAmountLowThreshold"]
    val get_id: t -> float or_null [@@js.get "id"]
    val get_label: t -> string [@@js.get "label"]
    val get_maxPacketLifeTime: t -> float or_null [@@js.get "maxPacketLifeTime"]
    val get_maxRetransmits: t -> float or_null [@@js.get "maxRetransmits"]
    val get_negotiated: t -> bool [@@js.get "negotiated"]
    val get_onbufferedamountlow: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onbufferedamountlow"]
    val set_onbufferedamountlow: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onbufferedamountlow"]
    val get_onclose: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onclose"]
    val set_onclose: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onclose"]
    val get_onerror: t -> (this:t -> ev:_RTCErrorEvent -> any) or_null [@@js.get "onerror"]
    val set_onerror: t -> (this:t -> ev:_RTCErrorEvent -> any) or_null -> unit [@@js.set "onerror"]
    val get_onmessage: t -> (this:t -> ev:_MessageEvent -> any) or_null [@@js.get "onmessage"]
    val set_onmessage: t -> (this:t -> ev:_MessageEvent -> any) or_null -> unit [@@js.set "onmessage"]
    val get_onopen: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onopen"]
    val set_onopen: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onopen"]
    val get_ordered: t -> bool [@@js.get "ordered"]
    val get_priority: t -> _RTCPriorityType [@@js.get "priority"]
    val get_protocol: t -> string [@@js.get "protocol"]
    val get_readyState: t -> _RTCDataChannelState [@@js.get "readyState"]
    val close: t -> unit [@@js.call "close"]
    val send: t -> data:string -> unit [@@js.call "send"]
    val send': t -> data:_Blob -> unit [@@js.call "send"]
    val send'': t -> data:ArrayBuffer.t_0 -> unit [@@js.call "send"]
    val send''': t -> data:ArrayBufferView.t_0 -> unit [@@js.call "send"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val rTCDataChannel: anonymous_interface_347 [@@js.global "RTCDataChannel"]
  module[@js.scope "RTCDataChannelEvent"] RTCDataChannelEvent : sig
    type t = _RTCDataChannelEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_channel: t -> _RTCDataChannel [@@js.get "channel"]
    val cast: t -> _Event [@@js.cast]
  end
  val rTCDataChannelEvent: anonymous_interface_348 [@@js.global "RTCDataChannelEvent"]
  module[@js.scope "RTCDtlsTransportEventMap"] RTCDtlsTransportEventMap : sig
    type t = _RTCDtlsTransportEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_error: t -> _RTCErrorEvent [@@js.get "error"]
    val set_error: t -> _RTCErrorEvent -> unit [@@js.set "error"]
    val get_statechange: t -> _Event [@@js.get "statechange"]
    val set_statechange: t -> _Event -> unit [@@js.set "statechange"]
  end
  module[@js.scope "RTCDtlsTransport"] RTCDtlsTransport : sig
    type t = _RTCDtlsTransport
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_iceTransport: t -> _RTCIceTransport [@@js.get "iceTransport"]
    val get_onerror: t -> (this:t -> ev:_RTCErrorEvent -> any) or_null [@@js.get "onerror"]
    val set_onerror: t -> (this:t -> ev:_RTCErrorEvent -> any) or_null -> unit [@@js.set "onerror"]
    val get_onstatechange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onstatechange"]
    val set_onstatechange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onstatechange"]
    val get_state: t -> _RTCDtlsTransportState [@@js.get "state"]
    val getRemoteCertificates: t -> ArrayBuffer.t_0 list [@@js.call "getRemoteCertificates"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val rTCDtlsTransport: anonymous_interface_349 [@@js.global "RTCDtlsTransport"]
  module[@js.scope "RTCDtlsTransportStateChangedEvent"] RTCDtlsTransportStateChangedEvent : sig
    type t = _RTCDtlsTransportStateChangedEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_state: t -> _RTCDtlsTransportState [@@js.get "state"]
    val cast: t -> _Event [@@js.cast]
  end
  val rTCDtlsTransportStateChangedEvent: anonymous_interface_350 [@@js.global "RTCDtlsTransportStateChangedEvent"]
  module[@js.scope "RTCDtmfSenderEventMap"] RTCDtmfSenderEventMap : sig
    type t = _RTCDtmfSenderEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_tonechange: t -> _RTCDTMFToneChangeEvent [@@js.get "tonechange"]
    val set_tonechange: t -> _RTCDTMFToneChangeEvent -> unit [@@js.set "tonechange"]
  end
  module[@js.scope "RTCDtmfSender"] RTCDtmfSender : sig
    type t = _RTCDtmfSender
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_canInsertDTMF: t -> bool [@@js.get "canInsertDTMF"]
    val get_duration: t -> float [@@js.get "duration"]
    val get_interToneGap: t -> float [@@js.get "interToneGap"]
    val get_ontonechange: t -> (this:t -> ev:_RTCDTMFToneChangeEvent -> any) or_null [@@js.get "ontonechange"]
    val set_ontonechange: t -> (this:t -> ev:_RTCDTMFToneChangeEvent -> any) or_null -> unit [@@js.set "ontonechange"]
    val get_sender: t -> _RTCRtpSender [@@js.get "sender"]
    val get_toneBuffer: t -> string [@@js.get "toneBuffer"]
    val insertDTMF: t -> tones:string -> ?duration:float -> ?interToneGap:float -> unit -> unit [@@js.call "insertDTMF"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val rTCDtmfSender: anonymous_interface_351 [@@js.global "RTCDtmfSender"]
  module[@js.scope "RTCError"] RTCError : sig
    type t = _RTCError
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_errorDetail: t -> _RTCErrorDetailType [@@js.get "errorDetail"]
    val get_httpRequestStatusCode: t -> float or_null [@@js.get "httpRequestStatusCode"]
    val get_receivedAlert: t -> float or_null [@@js.get "receivedAlert"]
    val get_sctpCauseCode: t -> float or_null [@@js.get "sctpCauseCode"]
    val get_sdpLineNumber: t -> float or_null [@@js.get "sdpLineNumber"]
    val get_sentAlert: t -> float or_null [@@js.get "sentAlert"]
    val cast: t -> _DOMException [@@js.cast]
  end
  val rTCError: anonymous_interface_352 [@@js.global "RTCError"]
  module[@js.scope "RTCErrorEvent"] RTCErrorEvent : sig
    type t = _RTCErrorEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_error: t -> _RTCError [@@js.get "error"]
    val cast: t -> _Event [@@js.cast]
  end
  val rTCErrorEvent: anonymous_interface_353 [@@js.global "RTCErrorEvent"]
  module[@js.scope "RTCIceCandidate"] RTCIceCandidate : sig
    type t = _RTCIceCandidate
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_candidate: t -> string [@@js.get "candidate"]
    val get_component: t -> _RTCIceComponent or_null [@@js.get "component"]
    val get_foundation: t -> string or_null [@@js.get "foundation"]
    val get_port: t -> float or_null [@@js.get "port"]
    val get_priority: t -> float or_null [@@js.get "priority"]
    val get_protocol: t -> _RTCIceProtocol or_null [@@js.get "protocol"]
    val get_relatedAddress: t -> string or_null [@@js.get "relatedAddress"]
    val get_relatedPort: t -> float or_null [@@js.get "relatedPort"]
    val get_sdpMLineIndex: t -> float or_null [@@js.get "sdpMLineIndex"]
    val get_sdpMid: t -> string or_null [@@js.get "sdpMid"]
    val get_tcpType: t -> _RTCIceTcpCandidateType or_null [@@js.get "tcpType"]
    val get_type: t -> _RTCIceCandidateType or_null [@@js.get "type"]
    val get_usernameFragment: t -> string or_null [@@js.get "usernameFragment"]
    val toJSON: t -> _RTCIceCandidateInit [@@js.call "toJSON"]
  end
  val rTCIceCandidate: anonymous_interface_354 [@@js.global "RTCIceCandidate"]
  module[@js.scope "RTCIceCandidatePairChangedEvent"] RTCIceCandidatePairChangedEvent : sig
    type t = _RTCIceCandidatePairChangedEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_pair: t -> _RTCIceCandidatePair [@@js.get "pair"]
    val cast: t -> _Event [@@js.cast]
  end
  val rTCIceCandidatePairChangedEvent: anonymous_interface_355 [@@js.global "RTCIceCandidatePairChangedEvent"]
  module[@js.scope "RTCIceGathererEventMap"] RTCIceGathererEventMap : sig
    type t = _RTCIceGathererEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_error: t -> _Event [@@js.get "error"]
    val set_error: t -> _Event -> unit [@@js.set "error"]
    val get_localcandidate: t -> _RTCIceGathererEvent [@@js.get "localcandidate"]
    val set_localcandidate: t -> _RTCIceGathererEvent -> unit [@@js.set "localcandidate"]
  end
  module[@js.scope "RTCIceGatherer"] RTCIceGatherer : sig
    type t = _RTCIceGatherer
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_component: t -> _RTCIceComponent [@@js.get "component"]
    val get_onerror: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onerror"]
    val set_onerror: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onerror"]
    val get_onlocalcandidate: t -> (this:t -> ev:_RTCIceGathererEvent -> any) or_null [@@js.get "onlocalcandidate"]
    val set_onlocalcandidate: t -> (this:t -> ev:_RTCIceGathererEvent -> any) or_null -> unit [@@js.set "onlocalcandidate"]
    val createAssociatedGatherer: t -> t [@@js.call "createAssociatedGatherer"]
    val getLocalCandidates: t -> _RTCIceCandidateDictionary list [@@js.call "getLocalCandidates"]
    val getLocalParameters: t -> _RTCIceParameters [@@js.call "getLocalParameters"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _RTCStatsProvider [@@js.cast]
  end
  val rTCIceGatherer: anonymous_interface_356 [@@js.global "RTCIceGatherer"]
  module[@js.scope "RTCIceGathererEvent"] RTCIceGathererEvent : sig
    type t = _RTCIceGathererEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_candidate: t -> (_RTCIceCandidateComplete, _RTCIceCandidateDictionary) union2 [@@js.get "candidate"]
    val cast: t -> _Event [@@js.cast]
  end
  val rTCIceGathererEvent: anonymous_interface_357 [@@js.global "RTCIceGathererEvent"]
  module[@js.scope "RTCIceTransportEventMap"] RTCIceTransportEventMap : sig
    type t = _RTCIceTransportEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_gatheringstatechange: t -> _Event [@@js.get "gatheringstatechange"]
    val set_gatheringstatechange: t -> _Event -> unit [@@js.set "gatheringstatechange"]
    val get_selectedcandidatepairchange: t -> _Event [@@js.get "selectedcandidatepairchange"]
    val set_selectedcandidatepairchange: t -> _Event -> unit [@@js.set "selectedcandidatepairchange"]
    val get_statechange: t -> _Event [@@js.get "statechange"]
    val set_statechange: t -> _Event -> unit [@@js.set "statechange"]
  end
  module[@js.scope "RTCIceTransport"] RTCIceTransport : sig
    type t = _RTCIceTransport
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_component: t -> _RTCIceComponent [@@js.get "component"]
    val get_gatheringState: t -> _RTCIceGathererState [@@js.get "gatheringState"]
    val get_ongatheringstatechange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "ongatheringstatechange"]
    val set_ongatheringstatechange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "ongatheringstatechange"]
    val get_onselectedcandidatepairchange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onselectedcandidatepairchange"]
    val set_onselectedcandidatepairchange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onselectedcandidatepairchange"]
    val get_onstatechange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onstatechange"]
    val set_onstatechange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onstatechange"]
    val get_role: t -> _RTCIceRole [@@js.get "role"]
    val get_state: t -> _RTCIceTransportState [@@js.get "state"]
    val getLocalCandidates: t -> _RTCIceCandidate list [@@js.call "getLocalCandidates"]
    val getLocalParameters: t -> _RTCIceParameters or_null [@@js.call "getLocalParameters"]
    val getRemoteCandidates: t -> _RTCIceCandidate list [@@js.call "getRemoteCandidates"]
    val getRemoteParameters: t -> _RTCIceParameters or_null [@@js.call "getRemoteParameters"]
    val getSelectedCandidatePair: t -> _RTCIceCandidatePair or_null [@@js.call "getSelectedCandidatePair"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val rTCIceTransport: anonymous_interface_358 [@@js.global "RTCIceTransport"]
  module[@js.scope "RTCIceTransportStateChangedEvent"] RTCIceTransportStateChangedEvent : sig
    type t = _RTCIceTransportStateChangedEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_state: t -> _RTCIceTransportState [@@js.get "state"]
    val cast: t -> _Event [@@js.cast]
  end
  val rTCIceTransportStateChangedEvent: anonymous_interface_359 [@@js.global "RTCIceTransportStateChangedEvent"]
  module[@js.scope "RTCIdentityAssertion"] RTCIdentityAssertion : sig
    type t = _RTCIdentityAssertion
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_idp: t -> string [@@js.get "idp"]
    val set_idp: t -> string -> unit [@@js.set "idp"]
    val get_name: t -> string [@@js.get "name"]
    val set_name: t -> string -> unit [@@js.set "name"]
  end
  val rTCIdentityAssertion: anonymous_interface_360 [@@js.global "RTCIdentityAssertion"]
  module[@js.scope "RTCPeerConnectionEventMap"] RTCPeerConnectionEventMap : sig
    type t = _RTCPeerConnectionEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_connectionstatechange: t -> _Event [@@js.get "connectionstatechange"]
    val set_connectionstatechange: t -> _Event -> unit [@@js.set "connectionstatechange"]
    val get_datachannel: t -> _RTCDataChannelEvent [@@js.get "datachannel"]
    val set_datachannel: t -> _RTCDataChannelEvent -> unit [@@js.set "datachannel"]
    val get_icecandidate: t -> _RTCPeerConnectionIceEvent [@@js.get "icecandidate"]
    val set_icecandidate: t -> _RTCPeerConnectionIceEvent -> unit [@@js.set "icecandidate"]
    val get_icecandidateerror: t -> _RTCPeerConnectionIceErrorEvent [@@js.get "icecandidateerror"]
    val set_icecandidateerror: t -> _RTCPeerConnectionIceErrorEvent -> unit [@@js.set "icecandidateerror"]
    val get_iceconnectionstatechange: t -> _Event [@@js.get "iceconnectionstatechange"]
    val set_iceconnectionstatechange: t -> _Event -> unit [@@js.set "iceconnectionstatechange"]
    val get_icegatheringstatechange: t -> _Event [@@js.get "icegatheringstatechange"]
    val set_icegatheringstatechange: t -> _Event -> unit [@@js.set "icegatheringstatechange"]
    val get_negotiationneeded: t -> _Event [@@js.get "negotiationneeded"]
    val set_negotiationneeded: t -> _Event -> unit [@@js.set "negotiationneeded"]
    val get_signalingstatechange: t -> _Event [@@js.get "signalingstatechange"]
    val set_signalingstatechange: t -> _Event -> unit [@@js.set "signalingstatechange"]
    val get_statsended: t -> _RTCStatsEvent [@@js.get "statsended"]
    val set_statsended: t -> _RTCStatsEvent -> unit [@@js.set "statsended"]
    val get_track: t -> _RTCTrackEvent [@@js.get "track"]
    val set_track: t -> _RTCTrackEvent -> unit [@@js.set "track"]
  end
  module[@js.scope "RTCPeerConnection"] RTCPeerConnection : sig
    type t = _RTCPeerConnection
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_canTrickleIceCandidates: t -> bool or_null [@@js.get "canTrickleIceCandidates"]
    val get_connectionState: t -> _RTCPeerConnectionState [@@js.get "connectionState"]
    val get_currentLocalDescription: t -> _RTCSessionDescription or_null [@@js.get "currentLocalDescription"]
    val get_currentRemoteDescription: t -> _RTCSessionDescription or_null [@@js.get "currentRemoteDescription"]
    val get_iceConnectionState: t -> _RTCIceConnectionState [@@js.get "iceConnectionState"]
    val get_iceGatheringState: t -> _RTCIceGatheringState [@@js.get "iceGatheringState"]
    val get_idpErrorInfo: t -> string or_null [@@js.get "idpErrorInfo"]
    val get_idpLoginUrl: t -> string or_null [@@js.get "idpLoginUrl"]
    val get_localDescription: t -> _RTCSessionDescription or_null [@@js.get "localDescription"]
    val get_onconnectionstatechange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onconnectionstatechange"]
    val set_onconnectionstatechange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onconnectionstatechange"]
    val get_ondatachannel: t -> (this:t -> ev:_RTCDataChannelEvent -> any) or_null [@@js.get "ondatachannel"]
    val set_ondatachannel: t -> (this:t -> ev:_RTCDataChannelEvent -> any) or_null -> unit [@@js.set "ondatachannel"]
    val get_onicecandidate: t -> (this:t -> ev:_RTCPeerConnectionIceEvent -> any) or_null [@@js.get "onicecandidate"]
    val set_onicecandidate: t -> (this:t -> ev:_RTCPeerConnectionIceEvent -> any) or_null -> unit [@@js.set "onicecandidate"]
    val get_onicecandidateerror: t -> (this:t -> ev:_RTCPeerConnectionIceErrorEvent -> any) or_null [@@js.get "onicecandidateerror"]
    val set_onicecandidateerror: t -> (this:t -> ev:_RTCPeerConnectionIceErrorEvent -> any) or_null -> unit [@@js.set "onicecandidateerror"]
    val get_oniceconnectionstatechange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "oniceconnectionstatechange"]
    val set_oniceconnectionstatechange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "oniceconnectionstatechange"]
    val get_onicegatheringstatechange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onicegatheringstatechange"]
    val set_onicegatheringstatechange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onicegatheringstatechange"]
    val get_onnegotiationneeded: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onnegotiationneeded"]
    val set_onnegotiationneeded: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onnegotiationneeded"]
    val get_onsignalingstatechange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onsignalingstatechange"]
    val set_onsignalingstatechange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onsignalingstatechange"]
    val get_onstatsended: t -> (this:t -> ev:_RTCStatsEvent -> any) or_null [@@js.get "onstatsended"]
    val set_onstatsended: t -> (this:t -> ev:_RTCStatsEvent -> any) or_null -> unit [@@js.set "onstatsended"]
    val get_ontrack: t -> (this:t -> ev:_RTCTrackEvent -> any) or_null [@@js.get "ontrack"]
    val set_ontrack: t -> (this:t -> ev:_RTCTrackEvent -> any) or_null -> unit [@@js.set "ontrack"]
    val get_peerIdentity: t -> _RTCIdentityAssertion Promise.t_1 [@@js.get "peerIdentity"]
    val get_pendingLocalDescription: t -> _RTCSessionDescription or_null [@@js.get "pendingLocalDescription"]
    val get_pendingRemoteDescription: t -> _RTCSessionDescription or_null [@@js.get "pendingRemoteDescription"]
    val get_remoteDescription: t -> _RTCSessionDescription or_null [@@js.get "remoteDescription"]
    val get_sctp: t -> _RTCSctpTransport or_null [@@js.get "sctp"]
    val get_signalingState: t -> _RTCSignalingState [@@js.get "signalingState"]
    val addIceCandidate: t -> candidate:(_RTCIceCandidate, _RTCIceCandidateInit) union2 -> unit Promise.t_1 [@@js.call "addIceCandidate"]
    val addTrack: t -> track:_MediaStreamTrack -> streams:(_MediaStream list [@js.variadic]) -> _RTCRtpSender [@@js.call "addTrack"]
    val addTransceiver: t -> trackOrKind:_MediaStreamTrack or_string -> ?init:_RTCRtpTransceiverInit -> unit -> _RTCRtpTransceiver [@@js.call "addTransceiver"]
    val close: t -> unit [@@js.call "close"]
    val createAnswer: t -> ?options:_RTCOfferOptions -> unit -> _RTCSessionDescriptionInit Promise.t_1 [@@js.call "createAnswer"]
    val createDataChannel: t -> label:string -> ?dataChannelDict:_RTCDataChannelInit -> unit -> _RTCDataChannel [@@js.call "createDataChannel"]
    val createOffer: t -> ?options:_RTCOfferOptions -> unit -> _RTCSessionDescriptionInit Promise.t_1 [@@js.call "createOffer"]
    val getConfiguration: t -> _RTCConfiguration [@@js.call "getConfiguration"]
    val getIdentityAssertion: t -> string Promise.t_1 [@@js.call "getIdentityAssertion"]
    val getReceivers: t -> _RTCRtpReceiver list [@@js.call "getReceivers"]
    val getSenders: t -> _RTCRtpSender list [@@js.call "getSenders"]
    val getStats: t -> ?selector:_MediaStreamTrack or_null -> unit -> _RTCStatsReport Promise.t_1 [@@js.call "getStats"]
    val getTransceivers: t -> _RTCRtpTransceiver list [@@js.call "getTransceivers"]
    val removeTrack: t -> sender:_RTCRtpSender -> unit [@@js.call "removeTrack"]
    val setConfiguration: t -> configuration:_RTCConfiguration -> unit [@@js.call "setConfiguration"]
    val setIdentityProvider: t -> provider:string -> ?options:_RTCIdentityProviderOptions -> unit -> unit [@@js.call "setIdentityProvider"]
    val setLocalDescription: t -> description:_RTCSessionDescriptionInit -> unit Promise.t_1 [@@js.call "setLocalDescription"]
    val setRemoteDescription: t -> description:_RTCSessionDescriptionInit -> unit Promise.t_1 [@@js.call "setRemoteDescription"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val rTCPeerConnection: anonymous_interface_361 [@@js.global "RTCPeerConnection"]
  module[@js.scope "RTCPeerConnectionIceErrorEvent"] RTCPeerConnectionIceErrorEvent : sig
    type t = _RTCPeerConnectionIceErrorEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_errorCode: t -> float [@@js.get "errorCode"]
    val get_errorText: t -> string [@@js.get "errorText"]
    val get_hostCandidate: t -> string [@@js.get "hostCandidate"]
    val get_url: t -> string [@@js.get "url"]
    val cast: t -> _Event [@@js.cast]
  end
  val rTCPeerConnectionIceErrorEvent: anonymous_interface_362 [@@js.global "RTCPeerConnectionIceErrorEvent"]
  module[@js.scope "RTCPeerConnectionIceEvent"] RTCPeerConnectionIceEvent : sig
    type t = _RTCPeerConnectionIceEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_candidate: t -> _RTCIceCandidate or_null [@@js.get "candidate"]
    val get_url: t -> string or_null [@@js.get "url"]
    val cast: t -> _Event [@@js.cast]
  end
  val rTCPeerConnectionIceEvent: anonymous_interface_363 [@@js.global "RTCPeerConnectionIceEvent"]
  module[@js.scope "RTCRtpReceiver"] RTCRtpReceiver : sig
    type t = _RTCRtpReceiver
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_rtcpTransport: t -> _RTCDtlsTransport or_null [@@js.get "rtcpTransport"]
    val get_track: t -> _MediaStreamTrack [@@js.get "track"]
    val get_transport: t -> _RTCDtlsTransport or_null [@@js.get "transport"]
    val getContributingSources: t -> _RTCRtpContributingSource list [@@js.call "getContributingSources"]
    val getParameters: t -> _RTCRtpReceiveParameters [@@js.call "getParameters"]
    val getStats: t -> _RTCStatsReport Promise.t_1 [@@js.call "getStats"]
    val getSynchronizationSources: t -> _RTCRtpSynchronizationSource list [@@js.call "getSynchronizationSources"]
  end
  val rTCRtpReceiver: anonymous_interface_364 [@@js.global "RTCRtpReceiver"]
  module[@js.scope "RTCRtpSender"] RTCRtpSender : sig
    type t = _RTCRtpSender
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_dtmf: t -> _RTCDTMFSender or_null [@@js.get "dtmf"]
    val get_rtcpTransport: t -> _RTCDtlsTransport or_null [@@js.get "rtcpTransport"]
    val get_track: t -> _MediaStreamTrack or_null [@@js.get "track"]
    val get_transport: t -> _RTCDtlsTransport or_null [@@js.get "transport"]
    val getParameters: t -> _RTCRtpSendParameters [@@js.call "getParameters"]
    val getStats: t -> _RTCStatsReport Promise.t_1 [@@js.call "getStats"]
    val replaceTrack: t -> withTrack:_MediaStreamTrack or_null -> unit Promise.t_1 [@@js.call "replaceTrack"]
    val setParameters: t -> parameters:_RTCRtpSendParameters -> unit Promise.t_1 [@@js.call "setParameters"]
    val setStreams: t -> streams:(_MediaStream list [@js.variadic]) -> unit [@@js.call "setStreams"]
  end
  val rTCRtpSender: anonymous_interface_365 [@@js.global "RTCRtpSender"]
  module[@js.scope "RTCRtpTransceiver"] RTCRtpTransceiver : sig
    type t = _RTCRtpTransceiver
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_currentDirection: t -> _RTCRtpTransceiverDirection or_null [@@js.get "currentDirection"]
    val get_direction: t -> _RTCRtpTransceiverDirection [@@js.get "direction"]
    val set_direction: t -> _RTCRtpTransceiverDirection -> unit [@@js.set "direction"]
    val get_mid: t -> string or_null [@@js.get "mid"]
    val get_receiver: t -> _RTCRtpReceiver [@@js.get "receiver"]
    val get_sender: t -> _RTCRtpSender [@@js.get "sender"]
    val setCodecPreferences: t -> codecs:_RTCRtpCodecCapability list -> unit [@@js.call "setCodecPreferences"]
    val stop: t -> unit [@@js.call "stop"]
  end
  val rTCRtpTransceiver: anonymous_interface_366 [@@js.global "RTCRtpTransceiver"]
  module[@js.scope "RTCSctpTransportEventMap"] RTCSctpTransportEventMap : sig
    type t = _RTCSctpTransportEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_statechange: t -> _Event [@@js.get "statechange"]
    val set_statechange: t -> _Event -> unit [@@js.set "statechange"]
  end
  module[@js.scope "RTCSctpTransport"] RTCSctpTransport : sig
    type t = _RTCSctpTransport
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_maxChannels: t -> float or_null [@@js.get "maxChannels"]
    val get_maxMessageSize: t -> float [@@js.get "maxMessageSize"]
    val get_onstatechange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onstatechange"]
    val set_onstatechange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onstatechange"]
    val get_state: t -> _RTCSctpTransportState [@@js.get "state"]
    val get_transport: t -> _RTCDtlsTransport [@@js.get "transport"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val rTCSctpTransport: anonymous_interface_367 [@@js.global "RTCSctpTransport"]
  module[@js.scope "RTCSessionDescription"] RTCSessionDescription : sig
    type t = _RTCSessionDescription
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_sdp: t -> string [@@js.get "sdp"]
    val get_type: t -> _RTCSdpType [@@js.get "type"]
    val toJSON: t -> any [@@js.call "toJSON"]
  end
  val rTCSessionDescription: anonymous_interface_368 [@@js.global "RTCSessionDescription"]
  module[@js.scope "RTCSrtpSdesTransportEventMap"] RTCSrtpSdesTransportEventMap : sig
    type t = _RTCSrtpSdesTransportEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_error: t -> _Event [@@js.get "error"]
    val set_error: t -> _Event -> unit [@@js.set "error"]
  end
  module[@js.scope "RTCSrtpSdesTransport"] RTCSrtpSdesTransport : sig
    type t = _RTCSrtpSdesTransport
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_onerror: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onerror"]
    val set_onerror: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onerror"]
    val get_transport: t -> _RTCIceTransport [@@js.get "transport"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val rTCSrtpSdesTransport: anonymous_interface_369 [@@js.global "RTCSrtpSdesTransport"]
  module[@js.scope "RTCSsrcConflictEvent"] RTCSsrcConflictEvent : sig
    type t = _RTCSsrcConflictEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_ssrc: t -> float [@@js.get "ssrc"]
    val cast: t -> _Event [@@js.cast]
  end
  val rTCSsrcConflictEvent: anonymous_interface_370 [@@js.global "RTCSsrcConflictEvent"]
  module[@js.scope "RTCStatsEvent"] RTCStatsEvent : sig
    type t = _RTCStatsEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_report: t -> _RTCStatsReport [@@js.get "report"]
    val cast: t -> _Event [@@js.cast]
  end
  val rTCStatsEvent: anonymous_interface_371 [@@js.global "RTCStatsEvent"]
  module[@js.scope "RTCStatsProvider"] RTCStatsProvider : sig
    type t = _RTCStatsProvider
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val getStats: t -> _RTCStatsReport Promise.t_1 [@@js.call "getStats"]
    val msGetStats: t -> _RTCStatsReport Promise.t_1 [@@js.call "msGetStats"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val rTCStatsProvider: anonymous_interface_372 [@@js.global "RTCStatsProvider"]
  val rTCStatsReport: anonymous_interface_373 [@@js.global "RTCStatsReport"]
  module[@js.scope "RTCTrackEvent"] RTCTrackEvent : sig
    type t = _RTCTrackEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_receiver: t -> _RTCRtpReceiver [@@js.get "receiver"]
    val get_streams: t -> _MediaStream list [@@js.get "streams"]
    val get_track: t -> _MediaStreamTrack [@@js.get "track"]
    val get_transceiver: t -> _RTCRtpTransceiver [@@js.get "transceiver"]
    val cast: t -> _Event [@@js.cast]
  end
  val rTCTrackEvent: anonymous_interface_374 [@@js.global "RTCTrackEvent"]
  module[@js.scope "RadioNodeList"] RadioNodeList : sig
    type t = _RadioNodeList
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_value: t -> string [@@js.get "value"]
    val set_value: t -> string -> unit [@@js.set "value"]
    val cast: t -> _NodeList [@@js.cast]
  end
  val radioNodeList: anonymous_interface_375 [@@js.global "RadioNodeList"]
  module[@js.scope "RandomSource"] RandomSource : sig
    type t = _RandomSource
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val getRandomValues: t -> array:'T -> 'T [@@js.call "getRandomValues"]
  end
  val randomSource: anonymous_interface_376 [@@js.global "RandomSource"]
  module[@js.scope "Range"] Range : sig
    type t = _Range
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_commonAncestorContainer: t -> _Node [@@js.get "commonAncestorContainer"]
    val cloneContents: t -> _DocumentFragment [@@js.call "cloneContents"]
    val cloneRange: t -> t [@@js.call "cloneRange"]
    val collapse: t -> ?toStart:bool -> unit -> unit [@@js.call "collapse"]
    val compareBoundaryPoints: t -> how:float -> sourceRange:t -> float [@@js.call "compareBoundaryPoints"]
    val comparePoint: t -> node:_Node -> offset:float -> float [@@js.call "comparePoint"]
    val createContextualFragment: t -> fragment:string -> _DocumentFragment [@@js.call "createContextualFragment"]
    val deleteContents: t -> unit [@@js.call "deleteContents"]
    val detach: t -> unit [@@js.call "detach"]
    val extractContents: t -> _DocumentFragment [@@js.call "extractContents"]
    val getBoundingClientRect: t -> _DOMRect [@@js.call "getBoundingClientRect"]
    val getClientRects: t -> _DOMRectList [@@js.call "getClientRects"]
    val insertNode: t -> node:_Node -> unit [@@js.call "insertNode"]
    val intersectsNode: t -> node:_Node -> bool [@@js.call "intersectsNode"]
    val isPointInRange: t -> node:_Node -> offset:float -> bool [@@js.call "isPointInRange"]
    val selectNode: t -> node:_Node -> unit [@@js.call "selectNode"]
    val selectNodeContents: t -> node:_Node -> unit [@@js.call "selectNodeContents"]
    val setEnd: t -> node:_Node -> offset:float -> unit [@@js.call "setEnd"]
    val setEndAfter: t -> node:_Node -> unit [@@js.call "setEndAfter"]
    val setEndBefore: t -> node:_Node -> unit [@@js.call "setEndBefore"]
    val setStart: t -> node:_Node -> offset:float -> unit [@@js.call "setStart"]
    val setStartAfter: t -> node:_Node -> unit [@@js.call "setStartAfter"]
    val setStartBefore: t -> node:_Node -> unit [@@js.call "setStartBefore"]
    val surroundContents: t -> newParent:_Node -> unit [@@js.call "surroundContents"]
    val toString: t -> string [@@js.call "toString"]
    val get_END_TO_END: t -> float [@@js.get "END_TO_END"]
    val get_END_TO_START: t -> float [@@js.get "END_TO_START"]
    val get_START_TO_END: t -> float [@@js.get "START_TO_END"]
    val get_START_TO_START: t -> float [@@js.get "START_TO_START"]
    val cast: t -> _AbstractRange [@@js.cast]
  end
  val range: anonymous_interface_377 [@@js.global "Range"]
  module[@js.scope "ReadableByteStreamController"] ReadableByteStreamController : sig
    type t = _ReadableByteStreamController
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_byobRequest: t -> _ReadableStreamBYOBRequest or_undefined [@@js.get "byobRequest"]
    val get_desiredSize: t -> float or_null [@@js.get "desiredSize"]
    val close: t -> unit [@@js.call "close"]
    val enqueue: t -> chunk:ArrayBufferView.t_0 -> unit [@@js.call "enqueue"]
    val error: t -> ?error:any -> unit -> unit [@@js.call "error"]
  end
  module[@js.scope "ReadableStream"] ReadableStream : sig
    type 'R t = 'R _ReadableStream
    val t_to_js: ('R -> Ojs.t) -> 'R t -> Ojs.t
    val t_of_js: (Ojs.t -> 'R) -> Ojs.t -> 'R t
    type 'R t_1 = 'R t
    val t_1_to_js: ('R -> Ojs.t) -> 'R t_1 -> Ojs.t
    val t_1_of_js: (Ojs.t -> 'R) -> Ojs.t -> 'R t_1
    type t_0 = any t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_locked: 'R t -> bool [@@js.get "locked"]
    val cancel: 'R t -> ?reason:any -> unit -> unit Promise.t_1 [@@js.call "cancel"]
    val getReader: 'R t -> options:anonymous_interface_4 -> _ReadableStreamBYOBReader [@@js.call "getReader"]
    val getReader': 'R t -> 'R _ReadableStreamDefaultReader [@@js.call "getReader"]
    val pipeThrough: 'R t -> anonymous_interface_610 -> ?options:_PipeOptions -> unit -> 'T t [@@js.call "pipeThrough"]
    val pipeTo: 'R t -> dest:'R _WritableStream -> ?options:_PipeOptions -> unit -> unit Promise.t_1 [@@js.call "pipeTo"]
    val tee: 'R t -> ('R t * 'R t) [@@js.call "tee"]
  end
  val readableStream: anonymous_interface_378 [@@js.global "ReadableStream"]
  module[@js.scope "ReadableStreamBYOBReader"] ReadableStreamBYOBReader : sig
    type t = _ReadableStreamBYOBReader
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_closed: t -> unit Promise.t_1 [@@js.get "closed"]
    val cancel: t -> ?reason:any -> unit -> unit Promise.t_1 [@@js.call "cancel"]
    val read: t -> view:'T -> 'T _ReadableStreamReadResult Promise.t_1 [@@js.call "read"]
    val releaseLock: t -> unit [@@js.call "releaseLock"]
  end
  module[@js.scope "ReadableStreamBYOBRequest"] ReadableStreamBYOBRequest : sig
    type t = _ReadableStreamBYOBRequest
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_view: t -> ArrayBufferView.t_0 [@@js.get "view"]
    val respond: t -> bytesWritten:float -> unit [@@js.call "respond"]
    val respondWithNewView: t -> view:ArrayBufferView.t_0 -> unit [@@js.call "respondWithNewView"]
  end
  module[@js.scope "ReadableStreamDefaultController"] ReadableStreamDefaultController : sig
    type 'R t = 'R _ReadableStreamDefaultController
    val t_to_js: ('R -> Ojs.t) -> 'R t -> Ojs.t
    val t_of_js: (Ojs.t -> 'R) -> Ojs.t -> 'R t
    type 'R t_1 = 'R t
    val t_1_to_js: ('R -> Ojs.t) -> 'R t_1 -> Ojs.t
    val t_1_of_js: (Ojs.t -> 'R) -> Ojs.t -> 'R t_1
    type t_0 = any t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_desiredSize: 'R t -> float or_null [@@js.get "desiredSize"]
    val close: 'R t -> unit [@@js.call "close"]
    val enqueue: 'R t -> chunk:'R -> unit [@@js.call "enqueue"]
    val error: 'R t -> ?error:any -> unit -> unit [@@js.call "error"]
  end
  module[@js.scope "ReadableStreamDefaultReader"] ReadableStreamDefaultReader : sig
    type 'R t = 'R _ReadableStreamDefaultReader
    val t_to_js: ('R -> Ojs.t) -> 'R t -> Ojs.t
    val t_of_js: (Ojs.t -> 'R) -> Ojs.t -> 'R t
    type 'R t_1 = 'R t
    val t_1_to_js: ('R -> Ojs.t) -> 'R t_1 -> Ojs.t
    val t_1_of_js: (Ojs.t -> 'R) -> Ojs.t -> 'R t_1
    type t_0 = any t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_closed: 'R t -> unit Promise.t_1 [@@js.get "closed"]
    val cancel: 'R t -> ?reason:any -> unit -> unit Promise.t_1 [@@js.call "cancel"]
    val read: 'R t -> 'R _ReadableStreamReadResult Promise.t_1 [@@js.call "read"]
    val releaseLock: 'R t -> unit [@@js.call "releaseLock"]
  end
  module[@js.scope "ReadableStreamReader"] ReadableStreamReader : sig
    type 'R t = 'R _ReadableStreamReader
    val t_to_js: ('R -> Ojs.t) -> 'R t -> Ojs.t
    val t_of_js: (Ojs.t -> 'R) -> Ojs.t -> 'R t
    type 'R t_1 = 'R t
    val t_1_to_js: ('R -> Ojs.t) -> 'R t_1 -> Ojs.t
    val t_1_of_js: (Ojs.t -> 'R) -> Ojs.t -> 'R t_1
    type t_0 = any t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val cancel: 'R t -> unit Promise.t_1 [@@js.call "cancel"]
    val read: 'R t -> 'R _ReadableStreamReadResult Promise.t_1 [@@js.call "read"]
    val releaseLock: 'R t -> unit [@@js.call "releaseLock"]
  end
  val readableStreamReader: anonymous_interface_379 [@@js.global "ReadableStreamReader"]
  module[@js.scope "Request"] Request : sig
    type t = _Request
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_cache: t -> _RequestCache [@@js.get "cache"]
    val get_credentials: t -> _RequestCredentials [@@js.get "credentials"]
    val get_destination: t -> _RequestDestination [@@js.get "destination"]
    val get_headers: t -> _Headers [@@js.get "headers"]
    val get_integrity: t -> string [@@js.get "integrity"]
    val get_isHistoryNavigation: t -> bool [@@js.get "isHistoryNavigation"]
    val get_isReloadNavigation: t -> bool [@@js.get "isReloadNavigation"]
    val get_keepalive: t -> bool [@@js.get "keepalive"]
    val get_method: t -> string [@@js.get "method"]
    val get_mode: t -> _RequestMode [@@js.get "mode"]
    val get_redirect: t -> _RequestRedirect [@@js.get "redirect"]
    val get_referrer: t -> string [@@js.get "referrer"]
    val get_referrerPolicy: t -> _ReferrerPolicy [@@js.get "referrerPolicy"]
    val get_signal: t -> _AbortSignal [@@js.get "signal"]
    val get_url: t -> string [@@js.get "url"]
    val clone: t -> t [@@js.call "clone"]
    val cast: t -> _Body [@@js.cast]
  end
  val request: anonymous_interface_380 [@@js.global "Request"]
  module[@js.scope "Response"] Response : sig
    type t = _Response
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_headers: t -> _Headers [@@js.get "headers"]
    val get_ok: t -> bool [@@js.get "ok"]
    val get_redirected: t -> bool [@@js.get "redirected"]
    val get_status: t -> float [@@js.get "status"]
    val get_statusText: t -> string [@@js.get "statusText"]
    val get_trailer: t -> _Headers Promise.t_1 [@@js.get "trailer"]
    val get_type: t -> _ResponseType [@@js.get "type"]
    val get_url: t -> string [@@js.get "url"]
    val clone: t -> t [@@js.call "clone"]
    val cast: t -> _Body [@@js.cast]
  end
  val response: anonymous_interface_381 [@@js.global "Response"]
  module[@js.scope "SVGAElement"] SVGAElement : sig
    type t = _SVGAElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_target: t -> _SVGAnimatedString [@@js.get "target"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGGraphicsElement [@@js.cast]
    val cast': t -> _SVGURIReference [@@js.cast]
  end
  val sVGAElement: anonymous_interface_383 [@@js.global "SVGAElement"]
  module[@js.scope "SVGAngle"] SVGAngle : sig
    type t = _SVGAngle
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_unitType: t -> float [@@js.get "unitType"]
    val get_value: t -> float [@@js.get "value"]
    val set_value: t -> float -> unit [@@js.set "value"]
    val get_valueAsString: t -> string [@@js.get "valueAsString"]
    val set_valueAsString: t -> string -> unit [@@js.set "valueAsString"]
    val get_valueInSpecifiedUnits: t -> float [@@js.get "valueInSpecifiedUnits"]
    val set_valueInSpecifiedUnits: t -> float -> unit [@@js.set "valueInSpecifiedUnits"]
    val convertToSpecifiedUnits: t -> unitType:float -> unit [@@js.call "convertToSpecifiedUnits"]
    val newValueSpecifiedUnits: t -> unitType:float -> valueInSpecifiedUnits:float -> unit [@@js.call "newValueSpecifiedUnits"]
    val get_SVG_ANGLETYPE_DEG: t -> float [@@js.get "SVG_ANGLETYPE_DEG"]
    val get_SVG_ANGLETYPE_GRAD: t -> float [@@js.get "SVG_ANGLETYPE_GRAD"]
    val get_SVG_ANGLETYPE_RAD: t -> float [@@js.get "SVG_ANGLETYPE_RAD"]
    val get_SVG_ANGLETYPE_UNKNOWN: t -> float [@@js.get "SVG_ANGLETYPE_UNKNOWN"]
    val get_SVG_ANGLETYPE_UNSPECIFIED: t -> float [@@js.get "SVG_ANGLETYPE_UNSPECIFIED"]
  end
  val sVGAngle: anonymous_interface_384 [@@js.global "SVGAngle"]
  module[@js.scope "SVGAnimateElement"] SVGAnimateElement : sig
    type t = _SVGAnimateElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGAnimationElement [@@js.cast]
  end
  val sVGAnimateElement: anonymous_interface_385 [@@js.global "SVGAnimateElement"]
  module[@js.scope "SVGAnimateMotionElement"] SVGAnimateMotionElement : sig
    type t = _SVGAnimateMotionElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGAnimationElement [@@js.cast]
  end
  val sVGAnimateMotionElement: anonymous_interface_386 [@@js.global "SVGAnimateMotionElement"]
  module[@js.scope "SVGAnimateTransformElement"] SVGAnimateTransformElement : sig
    type t = _SVGAnimateTransformElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGAnimationElement [@@js.cast]
  end
  val sVGAnimateTransformElement: anonymous_interface_387 [@@js.global "SVGAnimateTransformElement"]
  module[@js.scope "SVGAnimatedAngle"] SVGAnimatedAngle : sig
    type t = _SVGAnimatedAngle
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_animVal: t -> _SVGAngle [@@js.get "animVal"]
    val get_baseVal: t -> _SVGAngle [@@js.get "baseVal"]
  end
  val sVGAnimatedAngle: anonymous_interface_388 [@@js.global "SVGAnimatedAngle"]
  module[@js.scope "SVGAnimatedBoolean"] SVGAnimatedBoolean : sig
    type t = _SVGAnimatedBoolean
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_animVal: t -> bool [@@js.get "animVal"]
    val get_baseVal: t -> bool [@@js.get "baseVal"]
    val set_baseVal: t -> bool -> unit [@@js.set "baseVal"]
  end
  val sVGAnimatedBoolean: anonymous_interface_389 [@@js.global "SVGAnimatedBoolean"]
  module[@js.scope "SVGAnimatedEnumeration"] SVGAnimatedEnumeration : sig
    type t = _SVGAnimatedEnumeration
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_animVal: t -> float [@@js.get "animVal"]
    val get_baseVal: t -> float [@@js.get "baseVal"]
    val set_baseVal: t -> float -> unit [@@js.set "baseVal"]
  end
  val sVGAnimatedEnumeration: anonymous_interface_390 [@@js.global "SVGAnimatedEnumeration"]
  module[@js.scope "SVGAnimatedInteger"] SVGAnimatedInteger : sig
    type t = _SVGAnimatedInteger
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_animVal: t -> float [@@js.get "animVal"]
    val get_baseVal: t -> float [@@js.get "baseVal"]
    val set_baseVal: t -> float -> unit [@@js.set "baseVal"]
  end
  val sVGAnimatedInteger: anonymous_interface_391 [@@js.global "SVGAnimatedInteger"]
  module[@js.scope "SVGAnimatedLength"] SVGAnimatedLength : sig
    type t = _SVGAnimatedLength
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_animVal: t -> _SVGLength [@@js.get "animVal"]
    val get_baseVal: t -> _SVGLength [@@js.get "baseVal"]
  end
  val sVGAnimatedLength: anonymous_interface_392 [@@js.global "SVGAnimatedLength"]
  module[@js.scope "SVGAnimatedLengthList"] SVGAnimatedLengthList : sig
    type t = _SVGAnimatedLengthList
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_animVal: t -> _SVGLengthList [@@js.get "animVal"]
    val get_baseVal: t -> _SVGLengthList [@@js.get "baseVal"]
  end
  val sVGAnimatedLengthList: anonymous_interface_393 [@@js.global "SVGAnimatedLengthList"]
  module[@js.scope "SVGAnimatedNumber"] SVGAnimatedNumber : sig
    type t = _SVGAnimatedNumber
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_animVal: t -> float [@@js.get "animVal"]
    val get_baseVal: t -> float [@@js.get "baseVal"]
    val set_baseVal: t -> float -> unit [@@js.set "baseVal"]
  end
  val sVGAnimatedNumber: anonymous_interface_394 [@@js.global "SVGAnimatedNumber"]
  module[@js.scope "SVGAnimatedNumberList"] SVGAnimatedNumberList : sig
    type t = _SVGAnimatedNumberList
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_animVal: t -> _SVGNumberList [@@js.get "animVal"]
    val get_baseVal: t -> _SVGNumberList [@@js.get "baseVal"]
  end
  val sVGAnimatedNumberList: anonymous_interface_395 [@@js.global "SVGAnimatedNumberList"]
  module[@js.scope "SVGAnimatedPoints"] SVGAnimatedPoints : sig
    type t = _SVGAnimatedPoints
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_animatedPoints: t -> _SVGPointList [@@js.get "animatedPoints"]
    val get_points: t -> _SVGPointList [@@js.get "points"]
  end
  module[@js.scope "SVGAnimatedPreserveAspectRatio"] SVGAnimatedPreserveAspectRatio : sig
    type t = _SVGAnimatedPreserveAspectRatio
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_animVal: t -> _SVGPreserveAspectRatio [@@js.get "animVal"]
    val get_baseVal: t -> _SVGPreserveAspectRatio [@@js.get "baseVal"]
  end
  val sVGAnimatedPreserveAspectRatio: anonymous_interface_396 [@@js.global "SVGAnimatedPreserveAspectRatio"]
  module[@js.scope "SVGAnimatedRect"] SVGAnimatedRect : sig
    type t = _SVGAnimatedRect
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_animVal: t -> _DOMRectReadOnly [@@js.get "animVal"]
    val get_baseVal: t -> _DOMRect [@@js.get "baseVal"]
  end
  val sVGAnimatedRect: anonymous_interface_397 [@@js.global "SVGAnimatedRect"]
  module[@js.scope "SVGAnimatedString"] SVGAnimatedString : sig
    type t = _SVGAnimatedString
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_animVal: t -> string [@@js.get "animVal"]
    val get_baseVal: t -> string [@@js.get "baseVal"]
    val set_baseVal: t -> string -> unit [@@js.set "baseVal"]
  end
  val sVGAnimatedString: anonymous_interface_398 [@@js.global "SVGAnimatedString"]
  module[@js.scope "SVGAnimatedTransformList"] SVGAnimatedTransformList : sig
    type t = _SVGAnimatedTransformList
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_animVal: t -> _SVGTransformList [@@js.get "animVal"]
    val get_baseVal: t -> _SVGTransformList [@@js.get "baseVal"]
  end
  val sVGAnimatedTransformList: anonymous_interface_399 [@@js.global "SVGAnimatedTransformList"]
  module[@js.scope "SVGAnimationElement"] SVGAnimationElement : sig
    type t = _SVGAnimationElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_targetElement: t -> _SVGElement [@@js.get "targetElement"]
    val getCurrentTime: t -> float [@@js.call "getCurrentTime"]
    val getSimpleDuration: t -> float [@@js.call "getSimpleDuration"]
    val getStartTime: t -> float [@@js.call "getStartTime"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGElement [@@js.cast]
  end
  val sVGAnimationElement: anonymous_interface_400 [@@js.global "SVGAnimationElement"]
  module[@js.scope "SVGCircleElement"] SVGCircleElement : sig
    type t = _SVGCircleElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_cx: t -> _SVGAnimatedLength [@@js.get "cx"]
    val get_cy: t -> _SVGAnimatedLength [@@js.get "cy"]
    val get_r: t -> _SVGAnimatedLength [@@js.get "r"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGGeometryElement [@@js.cast]
  end
  val sVGCircleElement: anonymous_interface_401 [@@js.global "SVGCircleElement"]
  module[@js.scope "SVGClipPathElement"] SVGClipPathElement : sig
    type t = _SVGClipPathElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_clipPathUnits: t -> _SVGAnimatedEnumeration [@@js.get "clipPathUnits"]
    val get_transform: t -> _SVGAnimatedTransformList [@@js.get "transform"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGElement [@@js.cast]
  end
  val sVGClipPathElement: anonymous_interface_402 [@@js.global "SVGClipPathElement"]
  module[@js.scope "SVGComponentTransferFunctionElement"] SVGComponentTransferFunctionElement : sig
    type t = _SVGComponentTransferFunctionElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_amplitude: t -> _SVGAnimatedNumber [@@js.get "amplitude"]
    val get_exponent: t -> _SVGAnimatedNumber [@@js.get "exponent"]
    val get_intercept: t -> _SVGAnimatedNumber [@@js.get "intercept"]
    val get_offset: t -> _SVGAnimatedNumber [@@js.get "offset"]
    val get_slope: t -> _SVGAnimatedNumber [@@js.get "slope"]
    val get_tableValues: t -> _SVGAnimatedNumberList [@@js.get "tableValues"]
    val get_type: t -> _SVGAnimatedEnumeration [@@js.get "type"]
    val get_SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE: t -> float [@@js.get "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE"]
    val get_SVG_FECOMPONENTTRANSFER_TYPE_GAMMA: t -> float [@@js.get "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA"]
    val get_SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY: t -> float [@@js.get "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY"]
    val get_SVG_FECOMPONENTTRANSFER_TYPE_LINEAR: t -> float [@@js.get "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR"]
    val get_SVG_FECOMPONENTTRANSFER_TYPE_TABLE: t -> float [@@js.get "SVG_FECOMPONENTTRANSFER_TYPE_TABLE"]
    val get_SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN: t -> float [@@js.get "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGElement [@@js.cast]
  end
  val sVGComponentTransferFunctionElement: anonymous_interface_403 [@@js.global "SVGComponentTransferFunctionElement"]
  module[@js.scope "SVGCursorElement"] SVGCursorElement : sig
    type t = _SVGCursorElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_x: t -> _SVGAnimatedLength [@@js.get "x"]
    val get_y: t -> _SVGAnimatedLength [@@js.get "y"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGElement [@@js.cast]
  end
  val sVGCursorElement: anonymous_interface_404 [@@js.global "SVGCursorElement"]
  module[@js.scope "SVGDefsElement"] SVGDefsElement : sig
    type t = _SVGDefsElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGGraphicsElement [@@js.cast]
  end
  val sVGDefsElement: anonymous_interface_405 [@@js.global "SVGDefsElement"]
  module[@js.scope "SVGDescElement"] SVGDescElement : sig
    type t = _SVGDescElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGElement [@@js.cast]
  end
  val sVGDescElement: anonymous_interface_406 [@@js.global "SVGDescElement"]
  module[@js.scope "SVGElementEventMap"] SVGElementEventMap : sig
    type t = _SVGElementEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val cast: t -> _ElementEventMap [@@js.cast]
    val cast': t -> _GlobalEventHandlersEventMap [@@js.cast]
    val cast'': t -> _DocumentAndElementEventHandlersEventMap [@@js.cast]
  end
  module[@js.scope "SVGElement"] SVGElement : sig
    type t = _SVGElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_className: t -> any [@@js.get "className"]
    val get_ownerSVGElement: t -> _SVGSVGElement or_null [@@js.get "ownerSVGElement"]
    val get_viewportElement: t -> t or_null [@@js.get "viewportElement"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _Element [@@js.cast]
    val cast': t -> _DocumentAndElementEventHandlers [@@js.cast]
    val cast'': t -> _ElementCSSInlineStyle [@@js.cast]
    val cast''': t -> _GlobalEventHandlers [@@js.cast]
    val cast'''': t -> _HTMLOrSVGElement [@@js.cast]
    val cast''''': t -> _SVGElementInstance [@@js.cast]
  end
  val sVGElement: anonymous_interface_407 [@@js.global "SVGElement"]
  module[@js.scope "SVGElementInstance"] SVGElementInstance : sig
    type t = _SVGElementInstance
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_correspondingElement: t -> _SVGElement [@@js.get "correspondingElement"]
    val get_correspondingUseElement: t -> _SVGUseElement [@@js.get "correspondingUseElement"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val sVGElementInstance: anonymous_interface_408 [@@js.global "SVGElementInstance"]
  module[@js.scope "SVGElementInstanceList"] SVGElementInstanceList : sig
    type t = _SVGElementInstanceList
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_length: t -> float [@@js.get "length"]
    val item: t -> index:float -> _SVGElementInstance [@@js.call "item"]
  end
  val sVGElementInstanceList: anonymous_interface_409 [@@js.global "SVGElementInstanceList"]
  module[@js.scope "SVGEllipseElement"] SVGEllipseElement : sig
    type t = _SVGEllipseElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_cx: t -> _SVGAnimatedLength [@@js.get "cx"]
    val get_cy: t -> _SVGAnimatedLength [@@js.get "cy"]
    val get_rx: t -> _SVGAnimatedLength [@@js.get "rx"]
    val get_ry: t -> _SVGAnimatedLength [@@js.get "ry"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGGeometryElement [@@js.cast]
  end
  val sVGEllipseElement: anonymous_interface_410 [@@js.global "SVGEllipseElement"]
  module[@js.scope "SVGFEBlendElement"] SVGFEBlendElement : sig
    type t = _SVGFEBlendElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_in1: t -> _SVGAnimatedString [@@js.get "in1"]
    val get_in2: t -> _SVGAnimatedString [@@js.get "in2"]
    val get_mode: t -> _SVGAnimatedEnumeration [@@js.get "mode"]
    val get_SVG_FEBLEND_MODE_COLOR: t -> float [@@js.get "SVG_FEBLEND_MODE_COLOR"]
    val get_SVG_FEBLEND_MODE_COLOR_BURN: t -> float [@@js.get "SVG_FEBLEND_MODE_COLOR_BURN"]
    val get_SVG_FEBLEND_MODE_COLOR_DODGE: t -> float [@@js.get "SVG_FEBLEND_MODE_COLOR_DODGE"]
    val get_SVG_FEBLEND_MODE_DARKEN: t -> float [@@js.get "SVG_FEBLEND_MODE_DARKEN"]
    val get_SVG_FEBLEND_MODE_DIFFERENCE: t -> float [@@js.get "SVG_FEBLEND_MODE_DIFFERENCE"]
    val get_SVG_FEBLEND_MODE_EXCLUSION: t -> float [@@js.get "SVG_FEBLEND_MODE_EXCLUSION"]
    val get_SVG_FEBLEND_MODE_HARD_LIGHT: t -> float [@@js.get "SVG_FEBLEND_MODE_HARD_LIGHT"]
    val get_SVG_FEBLEND_MODE_HUE: t -> float [@@js.get "SVG_FEBLEND_MODE_HUE"]
    val get_SVG_FEBLEND_MODE_LIGHTEN: t -> float [@@js.get "SVG_FEBLEND_MODE_LIGHTEN"]
    val get_SVG_FEBLEND_MODE_LUMINOSITY: t -> float [@@js.get "SVG_FEBLEND_MODE_LUMINOSITY"]
    val get_SVG_FEBLEND_MODE_MULTIPLY: t -> float [@@js.get "SVG_FEBLEND_MODE_MULTIPLY"]
    val get_SVG_FEBLEND_MODE_NORMAL: t -> float [@@js.get "SVG_FEBLEND_MODE_NORMAL"]
    val get_SVG_FEBLEND_MODE_OVERLAY: t -> float [@@js.get "SVG_FEBLEND_MODE_OVERLAY"]
    val get_SVG_FEBLEND_MODE_SATURATION: t -> float [@@js.get "SVG_FEBLEND_MODE_SATURATION"]
    val get_SVG_FEBLEND_MODE_SCREEN: t -> float [@@js.get "SVG_FEBLEND_MODE_SCREEN"]
    val get_SVG_FEBLEND_MODE_SOFT_LIGHT: t -> float [@@js.get "SVG_FEBLEND_MODE_SOFT_LIGHT"]
    val get_SVG_FEBLEND_MODE_UNKNOWN: t -> float [@@js.get "SVG_FEBLEND_MODE_UNKNOWN"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGElement [@@js.cast]
    val cast': t -> _SVGFilterPrimitiveStandardAttributes [@@js.cast]
  end
  val sVGFEBlendElement: anonymous_interface_411 [@@js.global "SVGFEBlendElement"]
  module[@js.scope "SVGFEColorMatrixElement"] SVGFEColorMatrixElement : sig
    type t = _SVGFEColorMatrixElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_in1: t -> _SVGAnimatedString [@@js.get "in1"]
    val get_type: t -> _SVGAnimatedEnumeration [@@js.get "type"]
    val get_values: t -> _SVGAnimatedNumberList [@@js.get "values"]
    val get_SVG_FECOLORMATRIX_TYPE_HUEROTATE: t -> float [@@js.get "SVG_FECOLORMATRIX_TYPE_HUEROTATE"]
    val get_SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA: t -> float [@@js.get "SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA"]
    val get_SVG_FECOLORMATRIX_TYPE_MATRIX: t -> float [@@js.get "SVG_FECOLORMATRIX_TYPE_MATRIX"]
    val get_SVG_FECOLORMATRIX_TYPE_SATURATE: t -> float [@@js.get "SVG_FECOLORMATRIX_TYPE_SATURATE"]
    val get_SVG_FECOLORMATRIX_TYPE_UNKNOWN: t -> float [@@js.get "SVG_FECOLORMATRIX_TYPE_UNKNOWN"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGElement [@@js.cast]
    val cast': t -> _SVGFilterPrimitiveStandardAttributes [@@js.cast]
  end
  val sVGFEColorMatrixElement: anonymous_interface_412 [@@js.global "SVGFEColorMatrixElement"]
  module[@js.scope "SVGFEComponentTransferElement"] SVGFEComponentTransferElement : sig
    type t = _SVGFEComponentTransferElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_in1: t -> _SVGAnimatedString [@@js.get "in1"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGElement [@@js.cast]
    val cast': t -> _SVGFilterPrimitiveStandardAttributes [@@js.cast]
  end
  val sVGFEComponentTransferElement: anonymous_interface_413 [@@js.global "SVGFEComponentTransferElement"]
  module[@js.scope "SVGFECompositeElement"] SVGFECompositeElement : sig
    type t = _SVGFECompositeElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_in1: t -> _SVGAnimatedString [@@js.get "in1"]
    val get_in2: t -> _SVGAnimatedString [@@js.get "in2"]
    val get_k1: t -> _SVGAnimatedNumber [@@js.get "k1"]
    val get_k2: t -> _SVGAnimatedNumber [@@js.get "k2"]
    val get_k3: t -> _SVGAnimatedNumber [@@js.get "k3"]
    val get_k4: t -> _SVGAnimatedNumber [@@js.get "k4"]
    val get_operator: t -> _SVGAnimatedEnumeration [@@js.get "operator"]
    val get_SVG_FECOMPOSITE_OPERATOR_ARITHMETIC: t -> float [@@js.get "SVG_FECOMPOSITE_OPERATOR_ARITHMETIC"]
    val get_SVG_FECOMPOSITE_OPERATOR_ATOP: t -> float [@@js.get "SVG_FECOMPOSITE_OPERATOR_ATOP"]
    val get_SVG_FECOMPOSITE_OPERATOR_IN: t -> float [@@js.get "SVG_FECOMPOSITE_OPERATOR_IN"]
    val get_SVG_FECOMPOSITE_OPERATOR_OUT: t -> float [@@js.get "SVG_FECOMPOSITE_OPERATOR_OUT"]
    val get_SVG_FECOMPOSITE_OPERATOR_OVER: t -> float [@@js.get "SVG_FECOMPOSITE_OPERATOR_OVER"]
    val get_SVG_FECOMPOSITE_OPERATOR_UNKNOWN: t -> float [@@js.get "SVG_FECOMPOSITE_OPERATOR_UNKNOWN"]
    val get_SVG_FECOMPOSITE_OPERATOR_XOR: t -> float [@@js.get "SVG_FECOMPOSITE_OPERATOR_XOR"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGElement [@@js.cast]
    val cast': t -> _SVGFilterPrimitiveStandardAttributes [@@js.cast]
  end
  val sVGFECompositeElement: anonymous_interface_414 [@@js.global "SVGFECompositeElement"]
  module[@js.scope "SVGFEConvolveMatrixElement"] SVGFEConvolveMatrixElement : sig
    type t = _SVGFEConvolveMatrixElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_bias: t -> _SVGAnimatedNumber [@@js.get "bias"]
    val get_divisor: t -> _SVGAnimatedNumber [@@js.get "divisor"]
    val get_edgeMode: t -> _SVGAnimatedEnumeration [@@js.get "edgeMode"]
    val get_in1: t -> _SVGAnimatedString [@@js.get "in1"]
    val get_kernelMatrix: t -> _SVGAnimatedNumberList [@@js.get "kernelMatrix"]
    val get_kernelUnitLengthX: t -> _SVGAnimatedNumber [@@js.get "kernelUnitLengthX"]
    val get_kernelUnitLengthY: t -> _SVGAnimatedNumber [@@js.get "kernelUnitLengthY"]
    val get_orderX: t -> _SVGAnimatedInteger [@@js.get "orderX"]
    val get_orderY: t -> _SVGAnimatedInteger [@@js.get "orderY"]
    val get_preserveAlpha: t -> _SVGAnimatedBoolean [@@js.get "preserveAlpha"]
    val get_targetX: t -> _SVGAnimatedInteger [@@js.get "targetX"]
    val get_targetY: t -> _SVGAnimatedInteger [@@js.get "targetY"]
    val get_SVG_EDGEMODE_DUPLICATE: t -> float [@@js.get "SVG_EDGEMODE_DUPLICATE"]
    val get_SVG_EDGEMODE_NONE: t -> float [@@js.get "SVG_EDGEMODE_NONE"]
    val get_SVG_EDGEMODE_UNKNOWN: t -> float [@@js.get "SVG_EDGEMODE_UNKNOWN"]
    val get_SVG_EDGEMODE_WRAP: t -> float [@@js.get "SVG_EDGEMODE_WRAP"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGElement [@@js.cast]
    val cast': t -> _SVGFilterPrimitiveStandardAttributes [@@js.cast]
  end
  val sVGFEConvolveMatrixElement: anonymous_interface_415 [@@js.global "SVGFEConvolveMatrixElement"]
  module[@js.scope "SVGFEDiffuseLightingElement"] SVGFEDiffuseLightingElement : sig
    type t = _SVGFEDiffuseLightingElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_diffuseConstant: t -> _SVGAnimatedNumber [@@js.get "diffuseConstant"]
    val get_in1: t -> _SVGAnimatedString [@@js.get "in1"]
    val get_kernelUnitLengthX: t -> _SVGAnimatedNumber [@@js.get "kernelUnitLengthX"]
    val get_kernelUnitLengthY: t -> _SVGAnimatedNumber [@@js.get "kernelUnitLengthY"]
    val get_surfaceScale: t -> _SVGAnimatedNumber [@@js.get "surfaceScale"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGElement [@@js.cast]
    val cast': t -> _SVGFilterPrimitiveStandardAttributes [@@js.cast]
  end
  val sVGFEDiffuseLightingElement: anonymous_interface_416 [@@js.global "SVGFEDiffuseLightingElement"]
  module[@js.scope "SVGFEDisplacementMapElement"] SVGFEDisplacementMapElement : sig
    type t = _SVGFEDisplacementMapElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_in1: t -> _SVGAnimatedString [@@js.get "in1"]
    val get_in2: t -> _SVGAnimatedString [@@js.get "in2"]
    val get_scale: t -> _SVGAnimatedNumber [@@js.get "scale"]
    val get_xChannelSelector: t -> _SVGAnimatedEnumeration [@@js.get "xChannelSelector"]
    val get_yChannelSelector: t -> _SVGAnimatedEnumeration [@@js.get "yChannelSelector"]
    val get_SVG_CHANNEL_A: t -> float [@@js.get "SVG_CHANNEL_A"]
    val get_SVG_CHANNEL_B: t -> float [@@js.get "SVG_CHANNEL_B"]
    val get_SVG_CHANNEL_G: t -> float [@@js.get "SVG_CHANNEL_G"]
    val get_SVG_CHANNEL_R: t -> float [@@js.get "SVG_CHANNEL_R"]
    val get_SVG_CHANNEL_UNKNOWN: t -> float [@@js.get "SVG_CHANNEL_UNKNOWN"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGElement [@@js.cast]
    val cast': t -> _SVGFilterPrimitiveStandardAttributes [@@js.cast]
  end
  val sVGFEDisplacementMapElement: anonymous_interface_417 [@@js.global "SVGFEDisplacementMapElement"]
  module[@js.scope "SVGFEDistantLightElement"] SVGFEDistantLightElement : sig
    type t = _SVGFEDistantLightElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_azimuth: t -> _SVGAnimatedNumber [@@js.get "azimuth"]
    val get_elevation: t -> _SVGAnimatedNumber [@@js.get "elevation"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGElement [@@js.cast]
  end
  val sVGFEDistantLightElement: anonymous_interface_418 [@@js.global "SVGFEDistantLightElement"]
  module[@js.scope "SVGFEDropShadowElement"] SVGFEDropShadowElement : sig
    type t = _SVGFEDropShadowElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_dx: t -> _SVGAnimatedNumber [@@js.get "dx"]
    val get_dy: t -> _SVGAnimatedNumber [@@js.get "dy"]
    val get_in1: t -> _SVGAnimatedString [@@js.get "in1"]
    val get_stdDeviationX: t -> _SVGAnimatedNumber [@@js.get "stdDeviationX"]
    val get_stdDeviationY: t -> _SVGAnimatedNumber [@@js.get "stdDeviationY"]
    val setStdDeviation: t -> stdDeviationX:float -> stdDeviationY:float -> unit [@@js.call "setStdDeviation"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGElement [@@js.cast]
    val cast': t -> _SVGFilterPrimitiveStandardAttributes [@@js.cast]
  end
  val sVGFEDropShadowElement: anonymous_interface_419 [@@js.global "SVGFEDropShadowElement"]
  module[@js.scope "SVGFEFloodElement"] SVGFEFloodElement : sig
    type t = _SVGFEFloodElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGElement [@@js.cast]
    val cast': t -> _SVGFilterPrimitiveStandardAttributes [@@js.cast]
  end
  val sVGFEFloodElement: anonymous_interface_420 [@@js.global "SVGFEFloodElement"]
  module[@js.scope "SVGFEFuncAElement"] SVGFEFuncAElement : sig
    type t = _SVGFEFuncAElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGComponentTransferFunctionElement [@@js.cast]
  end
  val sVGFEFuncAElement: anonymous_interface_421 [@@js.global "SVGFEFuncAElement"]
  module[@js.scope "SVGFEFuncBElement"] SVGFEFuncBElement : sig
    type t = _SVGFEFuncBElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGComponentTransferFunctionElement [@@js.cast]
  end
  val sVGFEFuncBElement: anonymous_interface_422 [@@js.global "SVGFEFuncBElement"]
  module[@js.scope "SVGFEFuncGElement"] SVGFEFuncGElement : sig
    type t = _SVGFEFuncGElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGComponentTransferFunctionElement [@@js.cast]
  end
  val sVGFEFuncGElement: anonymous_interface_423 [@@js.global "SVGFEFuncGElement"]
  module[@js.scope "SVGFEFuncRElement"] SVGFEFuncRElement : sig
    type t = _SVGFEFuncRElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGComponentTransferFunctionElement [@@js.cast]
  end
  val sVGFEFuncRElement: anonymous_interface_424 [@@js.global "SVGFEFuncRElement"]
  module[@js.scope "SVGFEGaussianBlurElement"] SVGFEGaussianBlurElement : sig
    type t = _SVGFEGaussianBlurElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_in1: t -> _SVGAnimatedString [@@js.get "in1"]
    val get_stdDeviationX: t -> _SVGAnimatedNumber [@@js.get "stdDeviationX"]
    val get_stdDeviationY: t -> _SVGAnimatedNumber [@@js.get "stdDeviationY"]
    val setStdDeviation: t -> stdDeviationX:float -> stdDeviationY:float -> unit [@@js.call "setStdDeviation"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGElement [@@js.cast]
    val cast': t -> _SVGFilterPrimitiveStandardAttributes [@@js.cast]
  end
  val sVGFEGaussianBlurElement: anonymous_interface_425 [@@js.global "SVGFEGaussianBlurElement"]
  module[@js.scope "SVGFEImageElement"] SVGFEImageElement : sig
    type t = _SVGFEImageElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_preserveAspectRatio: t -> _SVGAnimatedPreserveAspectRatio [@@js.get "preserveAspectRatio"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGElement [@@js.cast]
    val cast': t -> _SVGFilterPrimitiveStandardAttributes [@@js.cast]
    val cast'': t -> _SVGURIReference [@@js.cast]
  end
  val sVGFEImageElement: anonymous_interface_426 [@@js.global "SVGFEImageElement"]
  module[@js.scope "SVGFEMergeElement"] SVGFEMergeElement : sig
    type t = _SVGFEMergeElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGElement [@@js.cast]
    val cast': t -> _SVGFilterPrimitiveStandardAttributes [@@js.cast]
  end
  val sVGFEMergeElement: anonymous_interface_427 [@@js.global "SVGFEMergeElement"]
  module[@js.scope "SVGFEMergeNodeElement"] SVGFEMergeNodeElement : sig
    type t = _SVGFEMergeNodeElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_in1: t -> _SVGAnimatedString [@@js.get "in1"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGElement [@@js.cast]
  end
  val sVGFEMergeNodeElement: anonymous_interface_428 [@@js.global "SVGFEMergeNodeElement"]
  module[@js.scope "SVGFEMorphologyElement"] SVGFEMorphologyElement : sig
    type t = _SVGFEMorphologyElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_in1: t -> _SVGAnimatedString [@@js.get "in1"]
    val get_operator: t -> _SVGAnimatedEnumeration [@@js.get "operator"]
    val get_radiusX: t -> _SVGAnimatedNumber [@@js.get "radiusX"]
    val get_radiusY: t -> _SVGAnimatedNumber [@@js.get "radiusY"]
    val get_SVG_MORPHOLOGY_OPERATOR_DILATE: t -> float [@@js.get "SVG_MORPHOLOGY_OPERATOR_DILATE"]
    val get_SVG_MORPHOLOGY_OPERATOR_ERODE: t -> float [@@js.get "SVG_MORPHOLOGY_OPERATOR_ERODE"]
    val get_SVG_MORPHOLOGY_OPERATOR_UNKNOWN: t -> float [@@js.get "SVG_MORPHOLOGY_OPERATOR_UNKNOWN"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGElement [@@js.cast]
    val cast': t -> _SVGFilterPrimitiveStandardAttributes [@@js.cast]
  end
  val sVGFEMorphologyElement: anonymous_interface_429 [@@js.global "SVGFEMorphologyElement"]
  module[@js.scope "SVGFEOffsetElement"] SVGFEOffsetElement : sig
    type t = _SVGFEOffsetElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_dx: t -> _SVGAnimatedNumber [@@js.get "dx"]
    val get_dy: t -> _SVGAnimatedNumber [@@js.get "dy"]
    val get_in1: t -> _SVGAnimatedString [@@js.get "in1"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGElement [@@js.cast]
    val cast': t -> _SVGFilterPrimitiveStandardAttributes [@@js.cast]
  end
  val sVGFEOffsetElement: anonymous_interface_430 [@@js.global "SVGFEOffsetElement"]
  module[@js.scope "SVGFEPointLightElement"] SVGFEPointLightElement : sig
    type t = _SVGFEPointLightElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_x: t -> _SVGAnimatedNumber [@@js.get "x"]
    val get_y: t -> _SVGAnimatedNumber [@@js.get "y"]
    val get_z: t -> _SVGAnimatedNumber [@@js.get "z"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGElement [@@js.cast]
  end
  val sVGFEPointLightElement: anonymous_interface_431 [@@js.global "SVGFEPointLightElement"]
  module[@js.scope "SVGFESpecularLightingElement"] SVGFESpecularLightingElement : sig
    type t = _SVGFESpecularLightingElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_in1: t -> _SVGAnimatedString [@@js.get "in1"]
    val get_kernelUnitLengthX: t -> _SVGAnimatedNumber [@@js.get "kernelUnitLengthX"]
    val get_kernelUnitLengthY: t -> _SVGAnimatedNumber [@@js.get "kernelUnitLengthY"]
    val get_specularConstant: t -> _SVGAnimatedNumber [@@js.get "specularConstant"]
    val get_specularExponent: t -> _SVGAnimatedNumber [@@js.get "specularExponent"]
    val get_surfaceScale: t -> _SVGAnimatedNumber [@@js.get "surfaceScale"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGElement [@@js.cast]
    val cast': t -> _SVGFilterPrimitiveStandardAttributes [@@js.cast]
  end
  val sVGFESpecularLightingElement: anonymous_interface_432 [@@js.global "SVGFESpecularLightingElement"]
  module[@js.scope "SVGFESpotLightElement"] SVGFESpotLightElement : sig
    type t = _SVGFESpotLightElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_limitingConeAngle: t -> _SVGAnimatedNumber [@@js.get "limitingConeAngle"]
    val get_pointsAtX: t -> _SVGAnimatedNumber [@@js.get "pointsAtX"]
    val get_pointsAtY: t -> _SVGAnimatedNumber [@@js.get "pointsAtY"]
    val get_pointsAtZ: t -> _SVGAnimatedNumber [@@js.get "pointsAtZ"]
    val get_specularExponent: t -> _SVGAnimatedNumber [@@js.get "specularExponent"]
    val get_x: t -> _SVGAnimatedNumber [@@js.get "x"]
    val get_y: t -> _SVGAnimatedNumber [@@js.get "y"]
    val get_z: t -> _SVGAnimatedNumber [@@js.get "z"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGElement [@@js.cast]
  end
  val sVGFESpotLightElement: anonymous_interface_433 [@@js.global "SVGFESpotLightElement"]
  module[@js.scope "SVGFETileElement"] SVGFETileElement : sig
    type t = _SVGFETileElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_in1: t -> _SVGAnimatedString [@@js.get "in1"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGElement [@@js.cast]
    val cast': t -> _SVGFilterPrimitiveStandardAttributes [@@js.cast]
  end
  val sVGFETileElement: anonymous_interface_434 [@@js.global "SVGFETileElement"]
  module[@js.scope "SVGFETurbulenceElement"] SVGFETurbulenceElement : sig
    type t = _SVGFETurbulenceElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_baseFrequencyX: t -> _SVGAnimatedNumber [@@js.get "baseFrequencyX"]
    val get_baseFrequencyY: t -> _SVGAnimatedNumber [@@js.get "baseFrequencyY"]
    val get_numOctaves: t -> _SVGAnimatedInteger [@@js.get "numOctaves"]
    val get_seed: t -> _SVGAnimatedNumber [@@js.get "seed"]
    val get_stitchTiles: t -> _SVGAnimatedEnumeration [@@js.get "stitchTiles"]
    val get_type: t -> _SVGAnimatedEnumeration [@@js.get "type"]
    val get_SVG_STITCHTYPE_NOSTITCH: t -> float [@@js.get "SVG_STITCHTYPE_NOSTITCH"]
    val get_SVG_STITCHTYPE_STITCH: t -> float [@@js.get "SVG_STITCHTYPE_STITCH"]
    val get_SVG_STITCHTYPE_UNKNOWN: t -> float [@@js.get "SVG_STITCHTYPE_UNKNOWN"]
    val get_SVG_TURBULENCE_TYPE_FRACTALNOISE: t -> float [@@js.get "SVG_TURBULENCE_TYPE_FRACTALNOISE"]
    val get_SVG_TURBULENCE_TYPE_TURBULENCE: t -> float [@@js.get "SVG_TURBULENCE_TYPE_TURBULENCE"]
    val get_SVG_TURBULENCE_TYPE_UNKNOWN: t -> float [@@js.get "SVG_TURBULENCE_TYPE_UNKNOWN"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGElement [@@js.cast]
    val cast': t -> _SVGFilterPrimitiveStandardAttributes [@@js.cast]
  end
  val sVGFETurbulenceElement: anonymous_interface_435 [@@js.global "SVGFETurbulenceElement"]
  module[@js.scope "SVGFilterElement"] SVGFilterElement : sig
    type t = _SVGFilterElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_filterUnits: t -> _SVGAnimatedEnumeration [@@js.get "filterUnits"]
    val get_height: t -> _SVGAnimatedLength [@@js.get "height"]
    val get_primitiveUnits: t -> _SVGAnimatedEnumeration [@@js.get "primitiveUnits"]
    val get_width: t -> _SVGAnimatedLength [@@js.get "width"]
    val get_x: t -> _SVGAnimatedLength [@@js.get "x"]
    val get_y: t -> _SVGAnimatedLength [@@js.get "y"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGElement [@@js.cast]
    val cast': t -> _SVGURIReference [@@js.cast]
  end
  val sVGFilterElement: anonymous_interface_436 [@@js.global "SVGFilterElement"]
  module[@js.scope "SVGFilterPrimitiveStandardAttributes"] SVGFilterPrimitiveStandardAttributes : sig
    type t = _SVGFilterPrimitiveStandardAttributes
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_height: t -> _SVGAnimatedLength [@@js.get "height"]
    val get_result: t -> _SVGAnimatedString [@@js.get "result"]
    val get_width: t -> _SVGAnimatedLength [@@js.get "width"]
    val get_x: t -> _SVGAnimatedLength [@@js.get "x"]
    val get_y: t -> _SVGAnimatedLength [@@js.get "y"]
  end
  module[@js.scope "SVGFitToViewBox"] SVGFitToViewBox : sig
    type t = _SVGFitToViewBox
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_preserveAspectRatio: t -> _SVGAnimatedPreserveAspectRatio [@@js.get "preserveAspectRatio"]
    val get_viewBox: t -> _SVGAnimatedRect [@@js.get "viewBox"]
  end
  module[@js.scope "SVGForeignObjectElement"] SVGForeignObjectElement : sig
    type t = _SVGForeignObjectElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_height: t -> _SVGAnimatedLength [@@js.get "height"]
    val get_width: t -> _SVGAnimatedLength [@@js.get "width"]
    val get_x: t -> _SVGAnimatedLength [@@js.get "x"]
    val get_y: t -> _SVGAnimatedLength [@@js.get "y"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGGraphicsElement [@@js.cast]
  end
  val sVGForeignObjectElement: anonymous_interface_437 [@@js.global "SVGForeignObjectElement"]
  module[@js.scope "SVGGElement"] SVGGElement : sig
    type t = _SVGGElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGGraphicsElement [@@js.cast]
  end
  val sVGGElement: anonymous_interface_438 [@@js.global "SVGGElement"]
  module[@js.scope "SVGGeometryElement"] SVGGeometryElement : sig
    type t = _SVGGeometryElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_pathLength: t -> _SVGAnimatedNumber [@@js.get "pathLength"]
    val getPointAtLength: t -> distance:float -> _DOMPoint [@@js.call "getPointAtLength"]
    val getTotalLength: t -> float [@@js.call "getTotalLength"]
    val isPointInFill: t -> ?point:_DOMPointInit -> unit -> bool [@@js.call "isPointInFill"]
    val isPointInStroke: t -> ?point:_DOMPointInit -> unit -> bool [@@js.call "isPointInStroke"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGGraphicsElement [@@js.cast]
  end
  val sVGGeometryElement: anonymous_interface_439 [@@js.global "SVGGeometryElement"]
  module[@js.scope "SVGGradientElement"] SVGGradientElement : sig
    type t = _SVGGradientElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_gradientTransform: t -> _SVGAnimatedTransformList [@@js.get "gradientTransform"]
    val get_gradientUnits: t -> _SVGAnimatedEnumeration [@@js.get "gradientUnits"]
    val get_spreadMethod: t -> _SVGAnimatedEnumeration [@@js.get "spreadMethod"]
    val get_SVG_SPREADMETHOD_PAD: t -> float [@@js.get "SVG_SPREADMETHOD_PAD"]
    val get_SVG_SPREADMETHOD_REFLECT: t -> float [@@js.get "SVG_SPREADMETHOD_REFLECT"]
    val get_SVG_SPREADMETHOD_REPEAT: t -> float [@@js.get "SVG_SPREADMETHOD_REPEAT"]
    val get_SVG_SPREADMETHOD_UNKNOWN: t -> float [@@js.get "SVG_SPREADMETHOD_UNKNOWN"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGElement [@@js.cast]
    val cast': t -> _SVGURIReference [@@js.cast]
  end
  val sVGGradientElement: anonymous_interface_440 [@@js.global "SVGGradientElement"]
  module[@js.scope "SVGGraphicsElement"] SVGGraphicsElement : sig
    type t = _SVGGraphicsElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_transform: t -> _SVGAnimatedTransformList [@@js.get "transform"]
    val getBBox: t -> ?options:_SVGBoundingBoxOptions -> unit -> _DOMRect [@@js.call "getBBox"]
    val getCTM: t -> _DOMMatrix or_null [@@js.call "getCTM"]
    val getScreenCTM: t -> _DOMMatrix or_null [@@js.call "getScreenCTM"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGElement [@@js.cast]
    val cast': t -> _SVGTests [@@js.cast]
  end
  val sVGGraphicsElement: anonymous_interface_441 [@@js.global "SVGGraphicsElement"]
  module[@js.scope "SVGImageElement"] SVGImageElement : sig
    type t = _SVGImageElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_height: t -> _SVGAnimatedLength [@@js.get "height"]
    val get_preserveAspectRatio: t -> _SVGAnimatedPreserveAspectRatio [@@js.get "preserveAspectRatio"]
    val get_width: t -> _SVGAnimatedLength [@@js.get "width"]
    val get_x: t -> _SVGAnimatedLength [@@js.get "x"]
    val get_y: t -> _SVGAnimatedLength [@@js.get "y"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGGraphicsElement [@@js.cast]
    val cast': t -> _SVGURIReference [@@js.cast]
  end
  val sVGImageElement: anonymous_interface_442 [@@js.global "SVGImageElement"]
  module[@js.scope "SVGLength"] SVGLength : sig
    type t = _SVGLength
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_unitType: t -> float [@@js.get "unitType"]
    val get_value: t -> float [@@js.get "value"]
    val set_value: t -> float -> unit [@@js.set "value"]
    val get_valueAsString: t -> string [@@js.get "valueAsString"]
    val set_valueAsString: t -> string -> unit [@@js.set "valueAsString"]
    val get_valueInSpecifiedUnits: t -> float [@@js.get "valueInSpecifiedUnits"]
    val set_valueInSpecifiedUnits: t -> float -> unit [@@js.set "valueInSpecifiedUnits"]
    val convertToSpecifiedUnits: t -> unitType:float -> unit [@@js.call "convertToSpecifiedUnits"]
    val newValueSpecifiedUnits: t -> unitType:float -> valueInSpecifiedUnits:float -> unit [@@js.call "newValueSpecifiedUnits"]
    val get_SVG_LENGTHTYPE_CM: t -> float [@@js.get "SVG_LENGTHTYPE_CM"]
    val get_SVG_LENGTHTYPE_EMS: t -> float [@@js.get "SVG_LENGTHTYPE_EMS"]
    val get_SVG_LENGTHTYPE_EXS: t -> float [@@js.get "SVG_LENGTHTYPE_EXS"]
    val get_SVG_LENGTHTYPE_IN: t -> float [@@js.get "SVG_LENGTHTYPE_IN"]
    val get_SVG_LENGTHTYPE_MM: t -> float [@@js.get "SVG_LENGTHTYPE_MM"]
    val get_SVG_LENGTHTYPE_NUMBER: t -> float [@@js.get "SVG_LENGTHTYPE_NUMBER"]
    val get_SVG_LENGTHTYPE_PC: t -> float [@@js.get "SVG_LENGTHTYPE_PC"]
    val get_SVG_LENGTHTYPE_PERCENTAGE: t -> float [@@js.get "SVG_LENGTHTYPE_PERCENTAGE"]
    val get_SVG_LENGTHTYPE_PT: t -> float [@@js.get "SVG_LENGTHTYPE_PT"]
    val get_SVG_LENGTHTYPE_PX: t -> float [@@js.get "SVG_LENGTHTYPE_PX"]
    val get_SVG_LENGTHTYPE_UNKNOWN: t -> float [@@js.get "SVG_LENGTHTYPE_UNKNOWN"]
  end
  val sVGLength: anonymous_interface_443 [@@js.global "SVGLength"]
  module[@js.scope "SVGLengthList"] SVGLengthList : sig
    type t = _SVGLengthList
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_length: t -> float [@@js.get "length"]
    val get_numberOfItems: t -> float [@@js.get "numberOfItems"]
    val appendItem: t -> newItem:_SVGLength -> _SVGLength [@@js.call "appendItem"]
    val clear: t -> unit [@@js.call "clear"]
    val getItem: t -> index:float -> _SVGLength [@@js.call "getItem"]
    val initialize: t -> newItem:_SVGLength -> _SVGLength [@@js.call "initialize"]
    val insertItemBefore: t -> newItem:_SVGLength -> index:float -> _SVGLength [@@js.call "insertItemBefore"]
    val removeItem: t -> index:float -> _SVGLength [@@js.call "removeItem"]
    val replaceItem: t -> newItem:_SVGLength -> index:float -> _SVGLength [@@js.call "replaceItem"]
    val get: t -> float -> _SVGLength [@@js.index_get]
    val set: t -> float -> _SVGLength -> unit [@@js.index_set]
  end
  val sVGLengthList: anonymous_interface_444 [@@js.global "SVGLengthList"]
  module[@js.scope "SVGLineElement"] SVGLineElement : sig
    type t = _SVGLineElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_x1: t -> _SVGAnimatedLength [@@js.get "x1"]
    val get_x2: t -> _SVGAnimatedLength [@@js.get "x2"]
    val get_y1: t -> _SVGAnimatedLength [@@js.get "y1"]
    val get_y2: t -> _SVGAnimatedLength [@@js.get "y2"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGGeometryElement [@@js.cast]
  end
  val sVGLineElement: anonymous_interface_445 [@@js.global "SVGLineElement"]
  module[@js.scope "SVGLinearGradientElement"] SVGLinearGradientElement : sig
    type t = _SVGLinearGradientElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_x1: t -> _SVGAnimatedLength [@@js.get "x1"]
    val get_x2: t -> _SVGAnimatedLength [@@js.get "x2"]
    val get_y1: t -> _SVGAnimatedLength [@@js.get "y1"]
    val get_y2: t -> _SVGAnimatedLength [@@js.get "y2"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGGradientElement [@@js.cast]
  end
  val sVGLinearGradientElement: anonymous_interface_446 [@@js.global "SVGLinearGradientElement"]
  module[@js.scope "SVGMarkerElement"] SVGMarkerElement : sig
    type t = _SVGMarkerElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_markerHeight: t -> _SVGAnimatedLength [@@js.get "markerHeight"]
    val get_markerUnits: t -> _SVGAnimatedEnumeration [@@js.get "markerUnits"]
    val get_markerWidth: t -> _SVGAnimatedLength [@@js.get "markerWidth"]
    val get_orientAngle: t -> _SVGAnimatedAngle [@@js.get "orientAngle"]
    val get_orientType: t -> _SVGAnimatedEnumeration [@@js.get "orientType"]
    val get_refX: t -> _SVGAnimatedLength [@@js.get "refX"]
    val get_refY: t -> _SVGAnimatedLength [@@js.get "refY"]
    val setOrientToAngle: t -> angle:_SVGAngle -> unit [@@js.call "setOrientToAngle"]
    val setOrientToAuto: t -> unit [@@js.call "setOrientToAuto"]
    val get_SVG_MARKERUNITS_STROKEWIDTH: t -> float [@@js.get "SVG_MARKERUNITS_STROKEWIDTH"]
    val get_SVG_MARKERUNITS_UNKNOWN: t -> float [@@js.get "SVG_MARKERUNITS_UNKNOWN"]
    val get_SVG_MARKERUNITS_USERSPACEONUSE: t -> float [@@js.get "SVG_MARKERUNITS_USERSPACEONUSE"]
    val get_SVG_MARKER_ORIENT_ANGLE: t -> float [@@js.get "SVG_MARKER_ORIENT_ANGLE"]
    val get_SVG_MARKER_ORIENT_AUTO: t -> float [@@js.get "SVG_MARKER_ORIENT_AUTO"]
    val get_SVG_MARKER_ORIENT_UNKNOWN: t -> float [@@js.get "SVG_MARKER_ORIENT_UNKNOWN"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGElement [@@js.cast]
    val cast': t -> _SVGFitToViewBox [@@js.cast]
  end
  val sVGMarkerElement: anonymous_interface_447 [@@js.global "SVGMarkerElement"]
  module[@js.scope "SVGMaskElement"] SVGMaskElement : sig
    type t = _SVGMaskElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_height: t -> _SVGAnimatedLength [@@js.get "height"]
    val get_maskContentUnits: t -> _SVGAnimatedEnumeration [@@js.get "maskContentUnits"]
    val get_maskUnits: t -> _SVGAnimatedEnumeration [@@js.get "maskUnits"]
    val get_width: t -> _SVGAnimatedLength [@@js.get "width"]
    val get_x: t -> _SVGAnimatedLength [@@js.get "x"]
    val get_y: t -> _SVGAnimatedLength [@@js.get "y"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGElement [@@js.cast]
  end
  val sVGMaskElement: anonymous_interface_448 [@@js.global "SVGMaskElement"]
  module[@js.scope "SVGMetadataElement"] SVGMetadataElement : sig
    type t = _SVGMetadataElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGElement [@@js.cast]
  end
  val sVGMetadataElement: anonymous_interface_449 [@@js.global "SVGMetadataElement"]
  module[@js.scope "SVGNumber"] SVGNumber : sig
    type t = _SVGNumber
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_value: t -> float [@@js.get "value"]
    val set_value: t -> float -> unit [@@js.set "value"]
  end
  val sVGNumber: anonymous_interface_450 [@@js.global "SVGNumber"]
  module[@js.scope "SVGNumberList"] SVGNumberList : sig
    type t = _SVGNumberList
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_length: t -> float [@@js.get "length"]
    val get_numberOfItems: t -> float [@@js.get "numberOfItems"]
    val appendItem: t -> newItem:_SVGNumber -> _SVGNumber [@@js.call "appendItem"]
    val clear: t -> unit [@@js.call "clear"]
    val getItem: t -> index:float -> _SVGNumber [@@js.call "getItem"]
    val initialize: t -> newItem:_SVGNumber -> _SVGNumber [@@js.call "initialize"]
    val insertItemBefore: t -> newItem:_SVGNumber -> index:float -> _SVGNumber [@@js.call "insertItemBefore"]
    val removeItem: t -> index:float -> _SVGNumber [@@js.call "removeItem"]
    val replaceItem: t -> newItem:_SVGNumber -> index:float -> _SVGNumber [@@js.call "replaceItem"]
    val get: t -> float -> _SVGNumber [@@js.index_get]
    val set: t -> float -> _SVGNumber -> unit [@@js.index_set]
  end
  val sVGNumberList: anonymous_interface_451 [@@js.global "SVGNumberList"]
  module[@js.scope "SVGPathElement"] SVGPathElement : sig
    type t = _SVGPathElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_pathSegList: t -> _SVGPathSegList [@@js.get "pathSegList"]
    val createSVGPathSegArcAbs: t -> x:float -> y:float -> r1:float -> r2:float -> angle:float -> largeArcFlag:bool -> sweepFlag:bool -> _SVGPathSegArcAbs [@@js.call "createSVGPathSegArcAbs"]
    val createSVGPathSegArcRel: t -> x:float -> y:float -> r1:float -> r2:float -> angle:float -> largeArcFlag:bool -> sweepFlag:bool -> _SVGPathSegArcRel [@@js.call "createSVGPathSegArcRel"]
    val createSVGPathSegClosePath: t -> _SVGPathSegClosePath [@@js.call "createSVGPathSegClosePath"]
    val createSVGPathSegCurvetoCubicAbs: t -> x:float -> y:float -> x1:float -> y1:float -> x2:float -> y2:float -> _SVGPathSegCurvetoCubicAbs [@@js.call "createSVGPathSegCurvetoCubicAbs"]
    val createSVGPathSegCurvetoCubicRel: t -> x:float -> y:float -> x1:float -> y1:float -> x2:float -> y2:float -> _SVGPathSegCurvetoCubicRel [@@js.call "createSVGPathSegCurvetoCubicRel"]
    val createSVGPathSegCurvetoCubicSmoothAbs: t -> x:float -> y:float -> x2:float -> y2:float -> _SVGPathSegCurvetoCubicSmoothAbs [@@js.call "createSVGPathSegCurvetoCubicSmoothAbs"]
    val createSVGPathSegCurvetoCubicSmoothRel: t -> x:float -> y:float -> x2:float -> y2:float -> _SVGPathSegCurvetoCubicSmoothRel [@@js.call "createSVGPathSegCurvetoCubicSmoothRel"]
    val createSVGPathSegCurvetoQuadraticAbs: t -> x:float -> y:float -> x1:float -> y1:float -> _SVGPathSegCurvetoQuadraticAbs [@@js.call "createSVGPathSegCurvetoQuadraticAbs"]
    val createSVGPathSegCurvetoQuadraticRel: t -> x:float -> y:float -> x1:float -> y1:float -> _SVGPathSegCurvetoQuadraticRel [@@js.call "createSVGPathSegCurvetoQuadraticRel"]
    val createSVGPathSegCurvetoQuadraticSmoothAbs: t -> x:float -> y:float -> _SVGPathSegCurvetoQuadraticSmoothAbs [@@js.call "createSVGPathSegCurvetoQuadraticSmoothAbs"]
    val createSVGPathSegCurvetoQuadraticSmoothRel: t -> x:float -> y:float -> _SVGPathSegCurvetoQuadraticSmoothRel [@@js.call "createSVGPathSegCurvetoQuadraticSmoothRel"]
    val createSVGPathSegLinetoAbs: t -> x:float -> y:float -> _SVGPathSegLinetoAbs [@@js.call "createSVGPathSegLinetoAbs"]
    val createSVGPathSegLinetoHorizontalAbs: t -> x:float -> _SVGPathSegLinetoHorizontalAbs [@@js.call "createSVGPathSegLinetoHorizontalAbs"]
    val createSVGPathSegLinetoHorizontalRel: t -> x:float -> _SVGPathSegLinetoHorizontalRel [@@js.call "createSVGPathSegLinetoHorizontalRel"]
    val createSVGPathSegLinetoRel: t -> x:float -> y:float -> _SVGPathSegLinetoRel [@@js.call "createSVGPathSegLinetoRel"]
    val createSVGPathSegLinetoVerticalAbs: t -> y:float -> _SVGPathSegLinetoVerticalAbs [@@js.call "createSVGPathSegLinetoVerticalAbs"]
    val createSVGPathSegLinetoVerticalRel: t -> y:float -> _SVGPathSegLinetoVerticalRel [@@js.call "createSVGPathSegLinetoVerticalRel"]
    val createSVGPathSegMovetoAbs: t -> x:float -> y:float -> _SVGPathSegMovetoAbs [@@js.call "createSVGPathSegMovetoAbs"]
    val createSVGPathSegMovetoRel: t -> x:float -> y:float -> _SVGPathSegMovetoRel [@@js.call "createSVGPathSegMovetoRel"]
    val getPathSegAtLength: t -> distance:float -> float [@@js.call "getPathSegAtLength"]
    val getPointAtLength: t -> distance:float -> _SVGPoint [@@js.call "getPointAtLength"]
    val getTotalLength: t -> float [@@js.call "getTotalLength"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGGraphicsElement [@@js.cast]
  end
  val sVGPathElement: anonymous_interface_452 [@@js.global "SVGPathElement"]
  module[@js.scope "SVGPathSeg"] SVGPathSeg : sig
    type t = _SVGPathSeg
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_pathSegType: t -> float [@@js.get "pathSegType"]
    val get_pathSegTypeAsLetter: t -> string [@@js.get "pathSegTypeAsLetter"]
    val get_PATHSEG_ARC_ABS: t -> float [@@js.get "PATHSEG_ARC_ABS"]
    val get_PATHSEG_ARC_REL: t -> float [@@js.get "PATHSEG_ARC_REL"]
    val get_PATHSEG_CLOSEPATH: t -> float [@@js.get "PATHSEG_CLOSEPATH"]
    val get_PATHSEG_CURVETO_CUBIC_ABS: t -> float [@@js.get "PATHSEG_CURVETO_CUBIC_ABS"]
    val get_PATHSEG_CURVETO_CUBIC_REL: t -> float [@@js.get "PATHSEG_CURVETO_CUBIC_REL"]
    val get_PATHSEG_CURVETO_CUBIC_SMOOTH_ABS: t -> float [@@js.get "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS"]
    val get_PATHSEG_CURVETO_CUBIC_SMOOTH_REL: t -> float [@@js.get "PATHSEG_CURVETO_CUBIC_SMOOTH_REL"]
    val get_PATHSEG_CURVETO_QUADRATIC_ABS: t -> float [@@js.get "PATHSEG_CURVETO_QUADRATIC_ABS"]
    val get_PATHSEG_CURVETO_QUADRATIC_REL: t -> float [@@js.get "PATHSEG_CURVETO_QUADRATIC_REL"]
    val get_PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS: t -> float [@@js.get "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS"]
    val get_PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL: t -> float [@@js.get "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL"]
    val get_PATHSEG_LINETO_ABS: t -> float [@@js.get "PATHSEG_LINETO_ABS"]
    val get_PATHSEG_LINETO_HORIZONTAL_ABS: t -> float [@@js.get "PATHSEG_LINETO_HORIZONTAL_ABS"]
    val get_PATHSEG_LINETO_HORIZONTAL_REL: t -> float [@@js.get "PATHSEG_LINETO_HORIZONTAL_REL"]
    val get_PATHSEG_LINETO_REL: t -> float [@@js.get "PATHSEG_LINETO_REL"]
    val get_PATHSEG_LINETO_VERTICAL_ABS: t -> float [@@js.get "PATHSEG_LINETO_VERTICAL_ABS"]
    val get_PATHSEG_LINETO_VERTICAL_REL: t -> float [@@js.get "PATHSEG_LINETO_VERTICAL_REL"]
    val get_PATHSEG_MOVETO_ABS: t -> float [@@js.get "PATHSEG_MOVETO_ABS"]
    val get_PATHSEG_MOVETO_REL: t -> float [@@js.get "PATHSEG_MOVETO_REL"]
    val get_PATHSEG_UNKNOWN: t -> float [@@js.get "PATHSEG_UNKNOWN"]
  end
  val sVGPathSeg: anonymous_interface_453 [@@js.global "SVGPathSeg"]
  module[@js.scope "SVGPathSegArcAbs"] SVGPathSegArcAbs : sig
    type t = _SVGPathSegArcAbs
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_angle: t -> float [@@js.get "angle"]
    val set_angle: t -> float -> unit [@@js.set "angle"]
    val get_largeArcFlag: t -> bool [@@js.get "largeArcFlag"]
    val set_largeArcFlag: t -> bool -> unit [@@js.set "largeArcFlag"]
    val get_r1: t -> float [@@js.get "r1"]
    val set_r1: t -> float -> unit [@@js.set "r1"]
    val get_r2: t -> float [@@js.get "r2"]
    val set_r2: t -> float -> unit [@@js.set "r2"]
    val get_sweepFlag: t -> bool [@@js.get "sweepFlag"]
    val set_sweepFlag: t -> bool -> unit [@@js.set "sweepFlag"]
    val get_x: t -> float [@@js.get "x"]
    val set_x: t -> float -> unit [@@js.set "x"]
    val get_y: t -> float [@@js.get "y"]
    val set_y: t -> float -> unit [@@js.set "y"]
    val cast: t -> _SVGPathSeg [@@js.cast]
  end
  val sVGPathSegArcAbs: anonymous_interface_454 [@@js.global "SVGPathSegArcAbs"]
  module[@js.scope "SVGPathSegArcRel"] SVGPathSegArcRel : sig
    type t = _SVGPathSegArcRel
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_angle: t -> float [@@js.get "angle"]
    val set_angle: t -> float -> unit [@@js.set "angle"]
    val get_largeArcFlag: t -> bool [@@js.get "largeArcFlag"]
    val set_largeArcFlag: t -> bool -> unit [@@js.set "largeArcFlag"]
    val get_r1: t -> float [@@js.get "r1"]
    val set_r1: t -> float -> unit [@@js.set "r1"]
    val get_r2: t -> float [@@js.get "r2"]
    val set_r2: t -> float -> unit [@@js.set "r2"]
    val get_sweepFlag: t -> bool [@@js.get "sweepFlag"]
    val set_sweepFlag: t -> bool -> unit [@@js.set "sweepFlag"]
    val get_x: t -> float [@@js.get "x"]
    val set_x: t -> float -> unit [@@js.set "x"]
    val get_y: t -> float [@@js.get "y"]
    val set_y: t -> float -> unit [@@js.set "y"]
    val cast: t -> _SVGPathSeg [@@js.cast]
  end
  val sVGPathSegArcRel: anonymous_interface_455 [@@js.global "SVGPathSegArcRel"]
  module[@js.scope "SVGPathSegClosePath"] SVGPathSegClosePath : sig
    type t = _SVGPathSegClosePath
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val cast: t -> _SVGPathSeg [@@js.cast]
  end
  val sVGPathSegClosePath: anonymous_interface_456 [@@js.global "SVGPathSegClosePath"]
  module[@js.scope "SVGPathSegCurvetoCubicAbs"] SVGPathSegCurvetoCubicAbs : sig
    type t = _SVGPathSegCurvetoCubicAbs
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_x: t -> float [@@js.get "x"]
    val set_x: t -> float -> unit [@@js.set "x"]
    val get_x1: t -> float [@@js.get "x1"]
    val set_x1: t -> float -> unit [@@js.set "x1"]
    val get_x2: t -> float [@@js.get "x2"]
    val set_x2: t -> float -> unit [@@js.set "x2"]
    val get_y: t -> float [@@js.get "y"]
    val set_y: t -> float -> unit [@@js.set "y"]
    val get_y1: t -> float [@@js.get "y1"]
    val set_y1: t -> float -> unit [@@js.set "y1"]
    val get_y2: t -> float [@@js.get "y2"]
    val set_y2: t -> float -> unit [@@js.set "y2"]
    val cast: t -> _SVGPathSeg [@@js.cast]
  end
  val sVGPathSegCurvetoCubicAbs: anonymous_interface_457 [@@js.global "SVGPathSegCurvetoCubicAbs"]
  module[@js.scope "SVGPathSegCurvetoCubicRel"] SVGPathSegCurvetoCubicRel : sig
    type t = _SVGPathSegCurvetoCubicRel
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_x: t -> float [@@js.get "x"]
    val set_x: t -> float -> unit [@@js.set "x"]
    val get_x1: t -> float [@@js.get "x1"]
    val set_x1: t -> float -> unit [@@js.set "x1"]
    val get_x2: t -> float [@@js.get "x2"]
    val set_x2: t -> float -> unit [@@js.set "x2"]
    val get_y: t -> float [@@js.get "y"]
    val set_y: t -> float -> unit [@@js.set "y"]
    val get_y1: t -> float [@@js.get "y1"]
    val set_y1: t -> float -> unit [@@js.set "y1"]
    val get_y2: t -> float [@@js.get "y2"]
    val set_y2: t -> float -> unit [@@js.set "y2"]
    val cast: t -> _SVGPathSeg [@@js.cast]
  end
  val sVGPathSegCurvetoCubicRel: anonymous_interface_458 [@@js.global "SVGPathSegCurvetoCubicRel"]
  module[@js.scope "SVGPathSegCurvetoCubicSmoothAbs"] SVGPathSegCurvetoCubicSmoothAbs : sig
    type t = _SVGPathSegCurvetoCubicSmoothAbs
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_x: t -> float [@@js.get "x"]
    val set_x: t -> float -> unit [@@js.set "x"]
    val get_x2: t -> float [@@js.get "x2"]
    val set_x2: t -> float -> unit [@@js.set "x2"]
    val get_y: t -> float [@@js.get "y"]
    val set_y: t -> float -> unit [@@js.set "y"]
    val get_y2: t -> float [@@js.get "y2"]
    val set_y2: t -> float -> unit [@@js.set "y2"]
    val cast: t -> _SVGPathSeg [@@js.cast]
  end
  val sVGPathSegCurvetoCubicSmoothAbs: anonymous_interface_459 [@@js.global "SVGPathSegCurvetoCubicSmoothAbs"]
  module[@js.scope "SVGPathSegCurvetoCubicSmoothRel"] SVGPathSegCurvetoCubicSmoothRel : sig
    type t = _SVGPathSegCurvetoCubicSmoothRel
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_x: t -> float [@@js.get "x"]
    val set_x: t -> float -> unit [@@js.set "x"]
    val get_x2: t -> float [@@js.get "x2"]
    val set_x2: t -> float -> unit [@@js.set "x2"]
    val get_y: t -> float [@@js.get "y"]
    val set_y: t -> float -> unit [@@js.set "y"]
    val get_y2: t -> float [@@js.get "y2"]
    val set_y2: t -> float -> unit [@@js.set "y2"]
    val cast: t -> _SVGPathSeg [@@js.cast]
  end
  val sVGPathSegCurvetoCubicSmoothRel: anonymous_interface_460 [@@js.global "SVGPathSegCurvetoCubicSmoothRel"]
  module[@js.scope "SVGPathSegCurvetoQuadraticAbs"] SVGPathSegCurvetoQuadraticAbs : sig
    type t = _SVGPathSegCurvetoQuadraticAbs
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_x: t -> float [@@js.get "x"]
    val set_x: t -> float -> unit [@@js.set "x"]
    val get_x1: t -> float [@@js.get "x1"]
    val set_x1: t -> float -> unit [@@js.set "x1"]
    val get_y: t -> float [@@js.get "y"]
    val set_y: t -> float -> unit [@@js.set "y"]
    val get_y1: t -> float [@@js.get "y1"]
    val set_y1: t -> float -> unit [@@js.set "y1"]
    val cast: t -> _SVGPathSeg [@@js.cast]
  end
  val sVGPathSegCurvetoQuadraticAbs: anonymous_interface_461 [@@js.global "SVGPathSegCurvetoQuadraticAbs"]
  module[@js.scope "SVGPathSegCurvetoQuadraticRel"] SVGPathSegCurvetoQuadraticRel : sig
    type t = _SVGPathSegCurvetoQuadraticRel
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_x: t -> float [@@js.get "x"]
    val set_x: t -> float -> unit [@@js.set "x"]
    val get_x1: t -> float [@@js.get "x1"]
    val set_x1: t -> float -> unit [@@js.set "x1"]
    val get_y: t -> float [@@js.get "y"]
    val set_y: t -> float -> unit [@@js.set "y"]
    val get_y1: t -> float [@@js.get "y1"]
    val set_y1: t -> float -> unit [@@js.set "y1"]
    val cast: t -> _SVGPathSeg [@@js.cast]
  end
  val sVGPathSegCurvetoQuadraticRel: anonymous_interface_462 [@@js.global "SVGPathSegCurvetoQuadraticRel"]
  module[@js.scope "SVGPathSegCurvetoQuadraticSmoothAbs"] SVGPathSegCurvetoQuadraticSmoothAbs : sig
    type t = _SVGPathSegCurvetoQuadraticSmoothAbs
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_x: t -> float [@@js.get "x"]
    val set_x: t -> float -> unit [@@js.set "x"]
    val get_y: t -> float [@@js.get "y"]
    val set_y: t -> float -> unit [@@js.set "y"]
    val cast: t -> _SVGPathSeg [@@js.cast]
  end
  val sVGPathSegCurvetoQuadraticSmoothAbs: anonymous_interface_463 [@@js.global "SVGPathSegCurvetoQuadraticSmoothAbs"]
  module[@js.scope "SVGPathSegCurvetoQuadraticSmoothRel"] SVGPathSegCurvetoQuadraticSmoothRel : sig
    type t = _SVGPathSegCurvetoQuadraticSmoothRel
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_x: t -> float [@@js.get "x"]
    val set_x: t -> float -> unit [@@js.set "x"]
    val get_y: t -> float [@@js.get "y"]
    val set_y: t -> float -> unit [@@js.set "y"]
    val cast: t -> _SVGPathSeg [@@js.cast]
  end
  val sVGPathSegCurvetoQuadraticSmoothRel: anonymous_interface_464 [@@js.global "SVGPathSegCurvetoQuadraticSmoothRel"]
  module[@js.scope "SVGPathSegLinetoAbs"] SVGPathSegLinetoAbs : sig
    type t = _SVGPathSegLinetoAbs
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_x: t -> float [@@js.get "x"]
    val set_x: t -> float -> unit [@@js.set "x"]
    val get_y: t -> float [@@js.get "y"]
    val set_y: t -> float -> unit [@@js.set "y"]
    val cast: t -> _SVGPathSeg [@@js.cast]
  end
  val sVGPathSegLinetoAbs: anonymous_interface_465 [@@js.global "SVGPathSegLinetoAbs"]
  module[@js.scope "SVGPathSegLinetoHorizontalAbs"] SVGPathSegLinetoHorizontalAbs : sig
    type t = _SVGPathSegLinetoHorizontalAbs
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_x: t -> float [@@js.get "x"]
    val set_x: t -> float -> unit [@@js.set "x"]
    val cast: t -> _SVGPathSeg [@@js.cast]
  end
  val sVGPathSegLinetoHorizontalAbs: anonymous_interface_466 [@@js.global "SVGPathSegLinetoHorizontalAbs"]
  module[@js.scope "SVGPathSegLinetoHorizontalRel"] SVGPathSegLinetoHorizontalRel : sig
    type t = _SVGPathSegLinetoHorizontalRel
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_x: t -> float [@@js.get "x"]
    val set_x: t -> float -> unit [@@js.set "x"]
    val cast: t -> _SVGPathSeg [@@js.cast]
  end
  val sVGPathSegLinetoHorizontalRel: anonymous_interface_467 [@@js.global "SVGPathSegLinetoHorizontalRel"]
  module[@js.scope "SVGPathSegLinetoRel"] SVGPathSegLinetoRel : sig
    type t = _SVGPathSegLinetoRel
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_x: t -> float [@@js.get "x"]
    val set_x: t -> float -> unit [@@js.set "x"]
    val get_y: t -> float [@@js.get "y"]
    val set_y: t -> float -> unit [@@js.set "y"]
    val cast: t -> _SVGPathSeg [@@js.cast]
  end
  val sVGPathSegLinetoRel: anonymous_interface_468 [@@js.global "SVGPathSegLinetoRel"]
  module[@js.scope "SVGPathSegLinetoVerticalAbs"] SVGPathSegLinetoVerticalAbs : sig
    type t = _SVGPathSegLinetoVerticalAbs
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_y: t -> float [@@js.get "y"]
    val set_y: t -> float -> unit [@@js.set "y"]
    val cast: t -> _SVGPathSeg [@@js.cast]
  end
  val sVGPathSegLinetoVerticalAbs: anonymous_interface_469 [@@js.global "SVGPathSegLinetoVerticalAbs"]
  module[@js.scope "SVGPathSegLinetoVerticalRel"] SVGPathSegLinetoVerticalRel : sig
    type t = _SVGPathSegLinetoVerticalRel
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_y: t -> float [@@js.get "y"]
    val set_y: t -> float -> unit [@@js.set "y"]
    val cast: t -> _SVGPathSeg [@@js.cast]
  end
  val sVGPathSegLinetoVerticalRel: anonymous_interface_470 [@@js.global "SVGPathSegLinetoVerticalRel"]
  module[@js.scope "SVGPathSegList"] SVGPathSegList : sig
    type t = _SVGPathSegList
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_numberOfItems: t -> float [@@js.get "numberOfItems"]
    val appendItem: t -> newItem:_SVGPathSeg -> _SVGPathSeg [@@js.call "appendItem"]
    val clear: t -> unit [@@js.call "clear"]
    val getItem: t -> index:float -> _SVGPathSeg [@@js.call "getItem"]
    val initialize: t -> newItem:_SVGPathSeg -> _SVGPathSeg [@@js.call "initialize"]
    val insertItemBefore: t -> newItem:_SVGPathSeg -> index:float -> _SVGPathSeg [@@js.call "insertItemBefore"]
    val removeItem: t -> index:float -> _SVGPathSeg [@@js.call "removeItem"]
    val replaceItem: t -> newItem:_SVGPathSeg -> index:float -> _SVGPathSeg [@@js.call "replaceItem"]
  end
  val sVGPathSegList: anonymous_interface_471 [@@js.global "SVGPathSegList"]
  module[@js.scope "SVGPathSegMovetoAbs"] SVGPathSegMovetoAbs : sig
    type t = _SVGPathSegMovetoAbs
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_x: t -> float [@@js.get "x"]
    val set_x: t -> float -> unit [@@js.set "x"]
    val get_y: t -> float [@@js.get "y"]
    val set_y: t -> float -> unit [@@js.set "y"]
    val cast: t -> _SVGPathSeg [@@js.cast]
  end
  val sVGPathSegMovetoAbs: anonymous_interface_472 [@@js.global "SVGPathSegMovetoAbs"]
  module[@js.scope "SVGPathSegMovetoRel"] SVGPathSegMovetoRel : sig
    type t = _SVGPathSegMovetoRel
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_x: t -> float [@@js.get "x"]
    val set_x: t -> float -> unit [@@js.set "x"]
    val get_y: t -> float [@@js.get "y"]
    val set_y: t -> float -> unit [@@js.set "y"]
    val cast: t -> _SVGPathSeg [@@js.cast]
  end
  val sVGPathSegMovetoRel: anonymous_interface_473 [@@js.global "SVGPathSegMovetoRel"]
  module[@js.scope "SVGPatternElement"] SVGPatternElement : sig
    type t = _SVGPatternElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_height: t -> _SVGAnimatedLength [@@js.get "height"]
    val get_patternContentUnits: t -> _SVGAnimatedEnumeration [@@js.get "patternContentUnits"]
    val get_patternTransform: t -> _SVGAnimatedTransformList [@@js.get "patternTransform"]
    val get_patternUnits: t -> _SVGAnimatedEnumeration [@@js.get "patternUnits"]
    val get_width: t -> _SVGAnimatedLength [@@js.get "width"]
    val get_x: t -> _SVGAnimatedLength [@@js.get "x"]
    val get_y: t -> _SVGAnimatedLength [@@js.get "y"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGElement [@@js.cast]
    val cast': t -> _SVGFitToViewBox [@@js.cast]
    val cast'': t -> _SVGURIReference [@@js.cast]
  end
  val sVGPatternElement: anonymous_interface_474 [@@js.global "SVGPatternElement"]
  module[@js.scope "SVGPointList"] SVGPointList : sig
    type t = _SVGPointList
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_length: t -> float [@@js.get "length"]
    val get_numberOfItems: t -> float [@@js.get "numberOfItems"]
    val appendItem: t -> newItem:_DOMPoint -> _DOMPoint [@@js.call "appendItem"]
    val clear: t -> unit [@@js.call "clear"]
    val getItem: t -> index:float -> _DOMPoint [@@js.call "getItem"]
    val initialize: t -> newItem:_DOMPoint -> _DOMPoint [@@js.call "initialize"]
    val insertItemBefore: t -> newItem:_DOMPoint -> index:float -> _DOMPoint [@@js.call "insertItemBefore"]
    val removeItem: t -> index:float -> _DOMPoint [@@js.call "removeItem"]
    val replaceItem: t -> newItem:_DOMPoint -> index:float -> _DOMPoint [@@js.call "replaceItem"]
    val get: t -> float -> _DOMPoint [@@js.index_get]
    val set: t -> float -> _DOMPoint -> unit [@@js.index_set]
  end
  val sVGPointList: anonymous_interface_475 [@@js.global "SVGPointList"]
  module[@js.scope "SVGPolygonElement"] SVGPolygonElement : sig
    type t = _SVGPolygonElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGGeometryElement [@@js.cast]
    val cast': t -> _SVGAnimatedPoints [@@js.cast]
  end
  val sVGPolygonElement: anonymous_interface_476 [@@js.global "SVGPolygonElement"]
  module[@js.scope "SVGPolylineElement"] SVGPolylineElement : sig
    type t = _SVGPolylineElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGGeometryElement [@@js.cast]
    val cast': t -> _SVGAnimatedPoints [@@js.cast]
  end
  val sVGPolylineElement: anonymous_interface_477 [@@js.global "SVGPolylineElement"]
  module[@js.scope "SVGPreserveAspectRatio"] SVGPreserveAspectRatio : sig
    type t = _SVGPreserveAspectRatio
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_align: t -> float [@@js.get "align"]
    val set_align: t -> float -> unit [@@js.set "align"]
    val get_meetOrSlice: t -> float [@@js.get "meetOrSlice"]
    val set_meetOrSlice: t -> float -> unit [@@js.set "meetOrSlice"]
    val get_SVG_MEETORSLICE_MEET: t -> float [@@js.get "SVG_MEETORSLICE_MEET"]
    val get_SVG_MEETORSLICE_SLICE: t -> float [@@js.get "SVG_MEETORSLICE_SLICE"]
    val get_SVG_MEETORSLICE_UNKNOWN: t -> float [@@js.get "SVG_MEETORSLICE_UNKNOWN"]
    val get_SVG_PRESERVEASPECTRATIO_NONE: t -> float [@@js.get "SVG_PRESERVEASPECTRATIO_NONE"]
    val get_SVG_PRESERVEASPECTRATIO_UNKNOWN: t -> float [@@js.get "SVG_PRESERVEASPECTRATIO_UNKNOWN"]
    val get_SVG_PRESERVEASPECTRATIO_XMAXYMAX: t -> float [@@js.get "SVG_PRESERVEASPECTRATIO_XMAXYMAX"]
    val get_SVG_PRESERVEASPECTRATIO_XMAXYMID: t -> float [@@js.get "SVG_PRESERVEASPECTRATIO_XMAXYMID"]
    val get_SVG_PRESERVEASPECTRATIO_XMAXYMIN: t -> float [@@js.get "SVG_PRESERVEASPECTRATIO_XMAXYMIN"]
    val get_SVG_PRESERVEASPECTRATIO_XMIDYMAX: t -> float [@@js.get "SVG_PRESERVEASPECTRATIO_XMIDYMAX"]
    val get_SVG_PRESERVEASPECTRATIO_XMIDYMID: t -> float [@@js.get "SVG_PRESERVEASPECTRATIO_XMIDYMID"]
    val get_SVG_PRESERVEASPECTRATIO_XMIDYMIN: t -> float [@@js.get "SVG_PRESERVEASPECTRATIO_XMIDYMIN"]
    val get_SVG_PRESERVEASPECTRATIO_XMINYMAX: t -> float [@@js.get "SVG_PRESERVEASPECTRATIO_XMINYMAX"]
    val get_SVG_PRESERVEASPECTRATIO_XMINYMID: t -> float [@@js.get "SVG_PRESERVEASPECTRATIO_XMINYMID"]
    val get_SVG_PRESERVEASPECTRATIO_XMINYMIN: t -> float [@@js.get "SVG_PRESERVEASPECTRATIO_XMINYMIN"]
  end
  val sVGPreserveAspectRatio: anonymous_interface_478 [@@js.global "SVGPreserveAspectRatio"]
  module[@js.scope "SVGRadialGradientElement"] SVGRadialGradientElement : sig
    type t = _SVGRadialGradientElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_cx: t -> _SVGAnimatedLength [@@js.get "cx"]
    val get_cy: t -> _SVGAnimatedLength [@@js.get "cy"]
    val get_fr: t -> _SVGAnimatedLength [@@js.get "fr"]
    val get_fx: t -> _SVGAnimatedLength [@@js.get "fx"]
    val get_fy: t -> _SVGAnimatedLength [@@js.get "fy"]
    val get_r: t -> _SVGAnimatedLength [@@js.get "r"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGGradientElement [@@js.cast]
  end
  val sVGRadialGradientElement: anonymous_interface_479 [@@js.global "SVGRadialGradientElement"]
  module[@js.scope "SVGRectElement"] SVGRectElement : sig
    type t = _SVGRectElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_height: t -> _SVGAnimatedLength [@@js.get "height"]
    val get_rx: t -> _SVGAnimatedLength [@@js.get "rx"]
    val get_ry: t -> _SVGAnimatedLength [@@js.get "ry"]
    val get_width: t -> _SVGAnimatedLength [@@js.get "width"]
    val get_x: t -> _SVGAnimatedLength [@@js.get "x"]
    val get_y: t -> _SVGAnimatedLength [@@js.get "y"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGGeometryElement [@@js.cast]
  end
  val sVGRectElement: anonymous_interface_480 [@@js.global "SVGRectElement"]
  module[@js.scope "SVGSVGElementEventMap"] SVGSVGElementEventMap : sig
    type t = _SVGSVGElementEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_SVGUnload: t -> _Event [@@js.get "SVGUnload"]
    val set_SVGUnload: t -> _Event -> unit [@@js.set "SVGUnload"]
    val get_SVGZoom: t -> _SVGZoomEvent [@@js.get "SVGZoom"]
    val set_SVGZoom: t -> _SVGZoomEvent -> unit [@@js.set "SVGZoom"]
    val cast: t -> _SVGElementEventMap [@@js.cast]
  end
  module[@js.scope "SVGSVGElement"] SVGSVGElement : sig
    type t = _SVGSVGElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_contentScriptType: t -> string [@@js.get "contentScriptType"]
    val set_contentScriptType: t -> string -> unit [@@js.set "contentScriptType"]
    val get_contentStyleType: t -> string [@@js.get "contentStyleType"]
    val set_contentStyleType: t -> string -> unit [@@js.set "contentStyleType"]
    val get_currentScale: t -> float [@@js.get "currentScale"]
    val set_currentScale: t -> float -> unit [@@js.set "currentScale"]
    val get_currentTranslate: t -> _SVGPoint [@@js.get "currentTranslate"]
    val get_height: t -> _SVGAnimatedLength [@@js.get "height"]
    val get_onunload: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onunload"]
    val set_onunload: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onunload"]
    val get_onzoom: t -> (this:t -> ev:_SVGZoomEvent -> any) or_null [@@js.get "onzoom"]
    val set_onzoom: t -> (this:t -> ev:_SVGZoomEvent -> any) or_null -> unit [@@js.set "onzoom"]
    val get_pixelUnitToMillimeterX: t -> float [@@js.get "pixelUnitToMillimeterX"]
    val get_pixelUnitToMillimeterY: t -> float [@@js.get "pixelUnitToMillimeterY"]
    val get_screenPixelToMillimeterX: t -> float [@@js.get "screenPixelToMillimeterX"]
    val get_screenPixelToMillimeterY: t -> float [@@js.get "screenPixelToMillimeterY"]
    val get_viewport: t -> _SVGRect [@@js.get "viewport"]
    val get_width: t -> _SVGAnimatedLength [@@js.get "width"]
    val get_x: t -> _SVGAnimatedLength [@@js.get "x"]
    val get_y: t -> _SVGAnimatedLength [@@js.get "y"]
    val animationsPaused: t -> bool [@@js.call "animationsPaused"]
    val checkEnclosure: t -> element:_SVGElement -> rect:_SVGRect -> bool [@@js.call "checkEnclosure"]
    val checkIntersection: t -> element:_SVGElement -> rect:_SVGRect -> bool [@@js.call "checkIntersection"]
    val createSVGAngle: t -> _SVGAngle [@@js.call "createSVGAngle"]
    val createSVGLength: t -> _SVGLength [@@js.call "createSVGLength"]
    val createSVGMatrix: t -> _SVGMatrix [@@js.call "createSVGMatrix"]
    val createSVGNumber: t -> _SVGNumber [@@js.call "createSVGNumber"]
    val createSVGPoint: t -> _SVGPoint [@@js.call "createSVGPoint"]
    val createSVGRect: t -> _SVGRect [@@js.call "createSVGRect"]
    val createSVGTransform: t -> _SVGTransform [@@js.call "createSVGTransform"]
    val createSVGTransformFromMatrix: t -> matrix:_SVGMatrix -> _SVGTransform [@@js.call "createSVGTransformFromMatrix"]
    val deselectAll: t -> unit [@@js.call "deselectAll"]
    val forceRedraw: t -> unit [@@js.call "forceRedraw"]
    val getComputedStyle: t -> elt:_Element -> ?pseudoElt:string or_null -> unit -> _CSSStyleDeclaration [@@js.call "getComputedStyle"]
    val getCurrentTime: t -> float [@@js.call "getCurrentTime"]
    val getElementById: t -> elementId:string -> _Element [@@js.call "getElementById"]
    val getEnclosureList: t -> rect:_SVGRect -> referenceElement:_SVGElement -> (((_SVGImageElement, _SVGLineElement, _SVGPathElement, _SVGPolygonElement, _SVGPolylineElement, _SVGRectElement, _SVGTextElement, _SVGUseElement) union8, _SVGEllipseElement) or_, _SVGCircleElement) or_ _NodeListOf [@@js.call "getEnclosureList"]
    val getIntersectionList: t -> rect:_SVGRect -> referenceElement:_SVGElement -> (((_SVGImageElement, _SVGLineElement, _SVGPathElement, _SVGPolygonElement, _SVGPolylineElement, _SVGRectElement, _SVGTextElement, _SVGUseElement) union8, _SVGEllipseElement) or_, _SVGCircleElement) or_ _NodeListOf [@@js.call "getIntersectionList"]
    val pauseAnimations: t -> unit [@@js.call "pauseAnimations"]
    val setCurrentTime: t -> seconds:float -> unit [@@js.call "setCurrentTime"]
    val suspendRedraw: t -> maxWaitMilliseconds:float -> float [@@js.call "suspendRedraw"]
    val unpauseAnimations: t -> unit [@@js.call "unpauseAnimations"]
    val unsuspendRedraw: t -> suspendHandleID:float -> unit [@@js.call "unsuspendRedraw"]
    val unsuspendRedrawAll: t -> unit [@@js.call "unsuspendRedrawAll"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGGraphicsElement [@@js.cast]
    val cast': t -> _DocumentEvent [@@js.cast]
    val cast'': t -> _SVGFitToViewBox [@@js.cast]
    val cast''': t -> _SVGZoomAndPan [@@js.cast]
  end
  val sVGSVGElement: anonymous_interface_481 [@@js.global "SVGSVGElement"]
  module[@js.scope "SVGScriptElement"] SVGScriptElement : sig
    type t = _SVGScriptElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_type: t -> string [@@js.get "type"]
    val set_type: t -> string -> unit [@@js.set "type"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGElement [@@js.cast]
    val cast': t -> _SVGURIReference [@@js.cast]
  end
  val sVGScriptElement: anonymous_interface_482 [@@js.global "SVGScriptElement"]
  module[@js.scope "SVGStopElement"] SVGStopElement : sig
    type t = _SVGStopElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_offset: t -> _SVGAnimatedNumber [@@js.get "offset"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGElement [@@js.cast]
  end
  val sVGStopElement: anonymous_interface_483 [@@js.global "SVGStopElement"]
  module[@js.scope "SVGStringList"] SVGStringList : sig
    type t = _SVGStringList
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_length: t -> float [@@js.get "length"]
    val get_numberOfItems: t -> float [@@js.get "numberOfItems"]
    val appendItem: t -> newItem:string -> string [@@js.call "appendItem"]
    val clear: t -> unit [@@js.call "clear"]
    val getItem: t -> index:float -> string [@@js.call "getItem"]
    val initialize: t -> newItem:string -> string [@@js.call "initialize"]
    val insertItemBefore: t -> newItem:string -> index:float -> string [@@js.call "insertItemBefore"]
    val removeItem: t -> index:float -> string [@@js.call "removeItem"]
    val replaceItem: t -> newItem:string -> index:float -> string [@@js.call "replaceItem"]
    val get: t -> float -> string [@@js.index_get]
    val set: t -> float -> string -> unit [@@js.index_set]
  end
  val sVGStringList: anonymous_interface_484 [@@js.global "SVGStringList"]
  module[@js.scope "SVGStyleElement"] SVGStyleElement : sig
    type t = _SVGStyleElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_disabled: t -> bool [@@js.get "disabled"]
    val set_disabled: t -> bool -> unit [@@js.set "disabled"]
    val get_media: t -> string [@@js.get "media"]
    val set_media: t -> string -> unit [@@js.set "media"]
    val get_title: t -> string [@@js.get "title"]
    val set_title: t -> string -> unit [@@js.set "title"]
    val get_type: t -> string [@@js.get "type"]
    val set_type: t -> string -> unit [@@js.set "type"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGElement [@@js.cast]
  end
  val sVGStyleElement: anonymous_interface_485 [@@js.global "SVGStyleElement"]
  module[@js.scope "SVGSwitchElement"] SVGSwitchElement : sig
    type t = _SVGSwitchElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGGraphicsElement [@@js.cast]
  end
  val sVGSwitchElement: anonymous_interface_486 [@@js.global "SVGSwitchElement"]
  module[@js.scope "SVGSymbolElement"] SVGSymbolElement : sig
    type t = _SVGSymbolElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGElement [@@js.cast]
    val cast': t -> _SVGFitToViewBox [@@js.cast]
  end
  val sVGSymbolElement: anonymous_interface_487 [@@js.global "SVGSymbolElement"]
  module[@js.scope "SVGTSpanElement"] SVGTSpanElement : sig
    type t = _SVGTSpanElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGTextPositioningElement [@@js.cast]
  end
  val sVGTSpanElement: anonymous_interface_488 [@@js.global "SVGTSpanElement"]
  module[@js.scope "SVGTests"] SVGTests : sig
    type t = _SVGTests
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_requiredExtensions: t -> _SVGStringList [@@js.get "requiredExtensions"]
    val get_systemLanguage: t -> _SVGStringList [@@js.get "systemLanguage"]
  end
  module[@js.scope "SVGTextContentElement"] SVGTextContentElement : sig
    type t = _SVGTextContentElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_lengthAdjust: t -> _SVGAnimatedEnumeration [@@js.get "lengthAdjust"]
    val get_textLength: t -> _SVGAnimatedLength [@@js.get "textLength"]
    val getCharNumAtPosition: t -> ?point:_DOMPointInit -> unit -> float [@@js.call "getCharNumAtPosition"]
    val getComputedTextLength: t -> float [@@js.call "getComputedTextLength"]
    val getEndPositionOfChar: t -> charnum:float -> _DOMPoint [@@js.call "getEndPositionOfChar"]
    val getExtentOfChar: t -> charnum:float -> _DOMRect [@@js.call "getExtentOfChar"]
    val getNumberOfChars: t -> float [@@js.call "getNumberOfChars"]
    val getRotationOfChar: t -> charnum:float -> float [@@js.call "getRotationOfChar"]
    val getStartPositionOfChar: t -> charnum:float -> _DOMPoint [@@js.call "getStartPositionOfChar"]
    val getSubStringLength: t -> charnum:float -> nchars:float -> float [@@js.call "getSubStringLength"]
    val selectSubString: t -> charnum:float -> nchars:float -> unit [@@js.call "selectSubString"]
    val get_LENGTHADJUST_SPACING: t -> float [@@js.get "LENGTHADJUST_SPACING"]
    val get_LENGTHADJUST_SPACINGANDGLYPHS: t -> float [@@js.get "LENGTHADJUST_SPACINGANDGLYPHS"]
    val get_LENGTHADJUST_UNKNOWN: t -> float [@@js.get "LENGTHADJUST_UNKNOWN"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGGraphicsElement [@@js.cast]
  end
  val sVGTextContentElement: anonymous_interface_489 [@@js.global "SVGTextContentElement"]
  module[@js.scope "SVGTextElement"] SVGTextElement : sig
    type t = _SVGTextElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGTextPositioningElement [@@js.cast]
  end
  val sVGTextElement: anonymous_interface_490 [@@js.global "SVGTextElement"]
  module[@js.scope "SVGTextPathElement"] SVGTextPathElement : sig
    type t = _SVGTextPathElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_method: t -> _SVGAnimatedEnumeration [@@js.get "method"]
    val get_spacing: t -> _SVGAnimatedEnumeration [@@js.get "spacing"]
    val get_startOffset: t -> _SVGAnimatedLength [@@js.get "startOffset"]
    val get_TEXTPATH_METHODTYPE_ALIGN: t -> float [@@js.get "TEXTPATH_METHODTYPE_ALIGN"]
    val get_TEXTPATH_METHODTYPE_STRETCH: t -> float [@@js.get "TEXTPATH_METHODTYPE_STRETCH"]
    val get_TEXTPATH_METHODTYPE_UNKNOWN: t -> float [@@js.get "TEXTPATH_METHODTYPE_UNKNOWN"]
    val get_TEXTPATH_SPACINGTYPE_AUTO: t -> float [@@js.get "TEXTPATH_SPACINGTYPE_AUTO"]
    val get_TEXTPATH_SPACINGTYPE_EXACT: t -> float [@@js.get "TEXTPATH_SPACINGTYPE_EXACT"]
    val get_TEXTPATH_SPACINGTYPE_UNKNOWN: t -> float [@@js.get "TEXTPATH_SPACINGTYPE_UNKNOWN"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGTextContentElement [@@js.cast]
    val cast': t -> _SVGURIReference [@@js.cast]
  end
  val sVGTextPathElement: anonymous_interface_491 [@@js.global "SVGTextPathElement"]
  module[@js.scope "SVGTextPositioningElement"] SVGTextPositioningElement : sig
    type t = _SVGTextPositioningElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_dx: t -> _SVGAnimatedLengthList [@@js.get "dx"]
    val get_dy: t -> _SVGAnimatedLengthList [@@js.get "dy"]
    val get_rotate: t -> _SVGAnimatedNumberList [@@js.get "rotate"]
    val get_x: t -> _SVGAnimatedLengthList [@@js.get "x"]
    val get_y: t -> _SVGAnimatedLengthList [@@js.get "y"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGTextContentElement [@@js.cast]
  end
  val sVGTextPositioningElement: anonymous_interface_492 [@@js.global "SVGTextPositioningElement"]
  module[@js.scope "SVGTitleElement"] SVGTitleElement : sig
    type t = _SVGTitleElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGElement [@@js.cast]
  end
  val sVGTitleElement: anonymous_interface_493 [@@js.global "SVGTitleElement"]
  module[@js.scope "SVGTransform"] SVGTransform : sig
    type t = _SVGTransform
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_angle: t -> float [@@js.get "angle"]
    val get_matrix: t -> _SVGMatrix [@@js.get "matrix"]
    val get_type: t -> float [@@js.get "type"]
    val setMatrix: t -> matrix:_SVGMatrix -> unit [@@js.call "setMatrix"]
    val setRotate: t -> angle:float -> cx:float -> cy:float -> unit [@@js.call "setRotate"]
    val setScale: t -> sx:float -> sy:float -> unit [@@js.call "setScale"]
    val setSkewX: t -> angle:float -> unit [@@js.call "setSkewX"]
    val setSkewY: t -> angle:float -> unit [@@js.call "setSkewY"]
    val setTranslate: t -> tx:float -> ty:float -> unit [@@js.call "setTranslate"]
    val get_SVG_TRANSFORM_MATRIX: t -> float [@@js.get "SVG_TRANSFORM_MATRIX"]
    val get_SVG_TRANSFORM_ROTATE: t -> float [@@js.get "SVG_TRANSFORM_ROTATE"]
    val get_SVG_TRANSFORM_SCALE: t -> float [@@js.get "SVG_TRANSFORM_SCALE"]
    val get_SVG_TRANSFORM_SKEWX: t -> float [@@js.get "SVG_TRANSFORM_SKEWX"]
    val get_SVG_TRANSFORM_SKEWY: t -> float [@@js.get "SVG_TRANSFORM_SKEWY"]
    val get_SVG_TRANSFORM_TRANSLATE: t -> float [@@js.get "SVG_TRANSFORM_TRANSLATE"]
    val get_SVG_TRANSFORM_UNKNOWN: t -> float [@@js.get "SVG_TRANSFORM_UNKNOWN"]
  end
  val sVGTransform: anonymous_interface_494 [@@js.global "SVGTransform"]
  module[@js.scope "SVGTransformList"] SVGTransformList : sig
    type t = _SVGTransformList
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_numberOfItems: t -> float [@@js.get "numberOfItems"]
    val appendItem: t -> newItem:_SVGTransform -> _SVGTransform [@@js.call "appendItem"]
    val clear: t -> unit [@@js.call "clear"]
    val consolidate: t -> _SVGTransform [@@js.call "consolidate"]
    val createSVGTransformFromMatrix: t -> matrix:_SVGMatrix -> _SVGTransform [@@js.call "createSVGTransformFromMatrix"]
    val getItem: t -> index:float -> _SVGTransform [@@js.call "getItem"]
    val initialize: t -> newItem:_SVGTransform -> _SVGTransform [@@js.call "initialize"]
    val insertItemBefore: t -> newItem:_SVGTransform -> index:float -> _SVGTransform [@@js.call "insertItemBefore"]
    val removeItem: t -> index:float -> _SVGTransform [@@js.call "removeItem"]
    val replaceItem: t -> newItem:_SVGTransform -> index:float -> _SVGTransform [@@js.call "replaceItem"]
  end
  val sVGTransformList: anonymous_interface_495 [@@js.global "SVGTransformList"]
  module[@js.scope "SVGURIReference"] SVGURIReference : sig
    type t = _SVGURIReference
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_href: t -> _SVGAnimatedString [@@js.get "href"]
  end
  module[@js.scope "SVGUnitTypes"] SVGUnitTypes : sig
    type t = _SVGUnitTypes
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_SVG_UNIT_TYPE_OBJECTBOUNDINGBOX: t -> float [@@js.get "SVG_UNIT_TYPE_OBJECTBOUNDINGBOX"]
    val get_SVG_UNIT_TYPE_UNKNOWN: t -> float [@@js.get "SVG_UNIT_TYPE_UNKNOWN"]
    val get_SVG_UNIT_TYPE_USERSPACEONUSE: t -> float [@@js.get "SVG_UNIT_TYPE_USERSPACEONUSE"]
  end
  val sVGUnitTypes: anonymous_interface_496 [@@js.global "SVGUnitTypes"]
  module[@js.scope "SVGUseElement"] SVGUseElement : sig
    type t = _SVGUseElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_animatedInstanceRoot: t -> _SVGElementInstance or_null [@@js.get "animatedInstanceRoot"]
    val get_height: t -> _SVGAnimatedLength [@@js.get "height"]
    val get_instanceRoot: t -> _SVGElementInstance or_null [@@js.get "instanceRoot"]
    val get_width: t -> _SVGAnimatedLength [@@js.get "width"]
    val get_x: t -> _SVGAnimatedLength [@@js.get "x"]
    val get_y: t -> _SVGAnimatedLength [@@js.get "y"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGGraphicsElement [@@js.cast]
    val cast': t -> _SVGURIReference [@@js.cast]
  end
  val sVGUseElement: anonymous_interface_497 [@@js.global "SVGUseElement"]
  module[@js.scope "SVGViewElement"] SVGViewElement : sig
    type t = _SVGViewElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_viewTarget: t -> _SVGStringList [@@js.get "viewTarget"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _SVGElement [@@js.cast]
    val cast': t -> _SVGFitToViewBox [@@js.cast]
    val cast'': t -> _SVGZoomAndPan [@@js.cast]
  end
  val sVGViewElement: anonymous_interface_498 [@@js.global "SVGViewElement"]
  module[@js.scope "SVGZoomAndPan"] SVGZoomAndPan : sig
    type t = _SVGZoomAndPan
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_zoomAndPan: t -> float [@@js.get "zoomAndPan"]
  end
  val sVGZoomAndPan: anonymous_interface_1 [@@js.global "SVGZoomAndPan"]
  module[@js.scope "SVGZoomEvent"] SVGZoomEvent : sig
    type t = _SVGZoomEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_newScale: t -> float [@@js.get "newScale"]
    val get_newTranslate: t -> _SVGPoint [@@js.get "newTranslate"]
    val get_previousScale: t -> float [@@js.get "previousScale"]
    val get_previousTranslate: t -> _SVGPoint [@@js.get "previousTranslate"]
    val get_zoomRectScreen: t -> _SVGRect [@@js.get "zoomRectScreen"]
    val cast: t -> _UIEvent [@@js.cast]
  end
  val sVGZoomEvent: anonymous_interface_499 [@@js.global "SVGZoomEvent"]
  module[@js.scope "ScopedCredential"] ScopedCredential : sig
    type t = _ScopedCredential
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_id: t -> ArrayBuffer.t_0 [@@js.get "id"]
    val get_type: t -> _ScopedCredentialType [@@js.get "type"]
  end
  val scopedCredential: anonymous_interface_500 [@@js.global "ScopedCredential"]
  module[@js.scope "ScopedCredentialInfo"] ScopedCredentialInfo : sig
    type t = _ScopedCredentialInfo
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_credential: t -> _ScopedCredential [@@js.get "credential"]
    val get_publicKey: t -> _CryptoKey [@@js.get "publicKey"]
  end
  val scopedCredentialInfo: anonymous_interface_501 [@@js.global "ScopedCredentialInfo"]
  module[@js.scope "Screen"] Screen : sig
    type t = _Screen
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_availHeight: t -> float [@@js.get "availHeight"]
    val get_availWidth: t -> float [@@js.get "availWidth"]
    val get_colorDepth: t -> float [@@js.get "colorDepth"]
    val get_height: t -> float [@@js.get "height"]
    val get_orientation: t -> _ScreenOrientation [@@js.get "orientation"]
    val get_pixelDepth: t -> float [@@js.get "pixelDepth"]
    val get_width: t -> float [@@js.get "width"]
  end
  val screen: anonymous_interface_502 [@@js.global "Screen"]
  module[@js.scope "ScreenOrientationEventMap"] ScreenOrientationEventMap : sig
    type t = _ScreenOrientationEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_change: t -> _Event [@@js.get "change"]
    val set_change: t -> _Event -> unit [@@js.set "change"]
  end
  module[@js.scope "ScreenOrientation"] ScreenOrientation : sig
    type t = _ScreenOrientation
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_angle: t -> float [@@js.get "angle"]
    val get_onchange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onchange"]
    val set_onchange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onchange"]
    val get_type: t -> _OrientationType [@@js.get "type"]
    val lock: t -> orientation:_OrientationLockType -> unit Promise.t_1 [@@js.call "lock"]
    val unlock: t -> unit [@@js.call "unlock"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val screenOrientation: anonymous_interface_503 [@@js.global "ScreenOrientation"]
  module[@js.scope "ScriptProcessorNodeEventMap"] ScriptProcessorNodeEventMap : sig
    type t = _ScriptProcessorNodeEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_audioprocess: t -> _AudioProcessingEvent [@@js.get "audioprocess"]
    val set_audioprocess: t -> _AudioProcessingEvent -> unit [@@js.set "audioprocess"]
  end
  module[@js.scope "ScriptProcessorNode"] ScriptProcessorNode : sig
    type t = _ScriptProcessorNode
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_bufferSize: t -> float [@@js.get "bufferSize"]
    val get_onaudioprocess: t -> (this:t -> ev:_AudioProcessingEvent -> any) or_null [@@js.get "onaudioprocess"]
    val set_onaudioprocess: t -> (this:t -> ev:_AudioProcessingEvent -> any) or_null -> unit [@@js.set "onaudioprocess"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _AudioNode [@@js.cast]
  end
  val scriptProcessorNode: anonymous_interface_504 [@@js.global "ScriptProcessorNode"]
  module[@js.scope "SecurityPolicyViolationEvent"] SecurityPolicyViolationEvent : sig
    type t = _SecurityPolicyViolationEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_blockedURI: t -> string [@@js.get "blockedURI"]
    val get_columnNumber: t -> float [@@js.get "columnNumber"]
    val get_documentURI: t -> string [@@js.get "documentURI"]
    val get_effectiveDirective: t -> string [@@js.get "effectiveDirective"]
    val get_lineNumber: t -> float [@@js.get "lineNumber"]
    val get_originalPolicy: t -> string [@@js.get "originalPolicy"]
    val get_referrer: t -> string [@@js.get "referrer"]
    val get_sourceFile: t -> string [@@js.get "sourceFile"]
    val get_statusCode: t -> float [@@js.get "statusCode"]
    val get_violatedDirective: t -> string [@@js.get "violatedDirective"]
    val cast: t -> _Event [@@js.cast]
  end
  val securityPolicyViolationEvent: anonymous_interface_505 [@@js.global "SecurityPolicyViolationEvent"]
  module[@js.scope "Selection"] Selection : sig
    type t = _Selection
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_anchorNode: t -> _Node or_null [@@js.get "anchorNode"]
    val get_anchorOffset: t -> float [@@js.get "anchorOffset"]
    val get_focusNode: t -> _Node or_null [@@js.get "focusNode"]
    val get_focusOffset: t -> float [@@js.get "focusOffset"]
    val get_isCollapsed: t -> bool [@@js.get "isCollapsed"]
    val get_rangeCount: t -> float [@@js.get "rangeCount"]
    val get_type: t -> string [@@js.get "type"]
    val addRange: t -> range:_Range -> unit [@@js.call "addRange"]
    val collapse: t -> node:_Node or_null -> ?offset:float -> unit -> unit [@@js.call "collapse"]
    val collapseToEnd: t -> unit [@@js.call "collapseToEnd"]
    val collapseToStart: t -> unit [@@js.call "collapseToStart"]
    val containsNode: t -> node:_Node -> ?allowPartialContainment:bool -> unit -> bool [@@js.call "containsNode"]
    val deleteFromDocument: t -> unit [@@js.call "deleteFromDocument"]
    val empty: t -> unit [@@js.call "empty"]
    val extend: t -> node:_Node -> ?offset:float -> unit -> unit [@@js.call "extend"]
    val getRangeAt: t -> index:float -> _Range [@@js.call "getRangeAt"]
    val removeAllRanges: t -> unit [@@js.call "removeAllRanges"]
    val removeRange: t -> range:_Range -> unit [@@js.call "removeRange"]
    val selectAllChildren: t -> node:_Node -> unit [@@js.call "selectAllChildren"]
    val setBaseAndExtent: t -> anchorNode:_Node -> anchorOffset:float -> focusNode:_Node -> focusOffset:float -> unit [@@js.call "setBaseAndExtent"]
    val setPosition: t -> node:_Node or_null -> ?offset:float -> unit -> unit [@@js.call "setPosition"]
    val toString: t -> string [@@js.call "toString"]
  end
  val selection: anonymous_interface_506 [@@js.global "Selection"]
  module[@js.scope "ServiceUIFrameContext"] ServiceUIFrameContext : sig
    type t = _ServiceUIFrameContext
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val getCachedFrameMessage: t -> key:string -> string [@@js.call "getCachedFrameMessage"]
    val postFrameMessage: t -> key:string -> data:string -> unit [@@js.call "postFrameMessage"]
  end
  val serviceUIFrameContext: _ServiceUIFrameContext [@@js.global "ServiceUIFrameContext"]
  module[@js.scope "ServiceWorkerEventMap"] ServiceWorkerEventMap : sig
    type t = _ServiceWorkerEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_statechange: t -> _Event [@@js.get "statechange"]
    val set_statechange: t -> _Event -> unit [@@js.set "statechange"]
    val cast: t -> _AbstractWorkerEventMap [@@js.cast]
  end
  module[@js.scope "ServiceWorker"] ServiceWorker : sig
    type t = _ServiceWorker
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_onstatechange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onstatechange"]
    val set_onstatechange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onstatechange"]
    val get_scriptURL: t -> string [@@js.get "scriptURL"]
    val get_state: t -> _ServiceWorkerState [@@js.get "state"]
    val postMessage: t -> message:any -> transfer:_Transferable list -> unit [@@js.call "postMessage"]
    val postMessage': t -> message:any -> ?options:_PostMessageOptions -> unit -> unit [@@js.call "postMessage"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
    val cast': t -> _AbstractWorker [@@js.cast]
  end
  val serviceWorker: anonymous_interface_507 [@@js.global "ServiceWorker"]
  module[@js.scope "ServiceWorkerContainerEventMap"] ServiceWorkerContainerEventMap : sig
    type t = _ServiceWorkerContainerEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_controllerchange: t -> _Event [@@js.get "controllerchange"]
    val set_controllerchange: t -> _Event -> unit [@@js.set "controllerchange"]
    val get_message: t -> _MessageEvent [@@js.get "message"]
    val set_message: t -> _MessageEvent -> unit [@@js.set "message"]
    val get_messageerror: t -> _MessageEvent [@@js.get "messageerror"]
    val set_messageerror: t -> _MessageEvent -> unit [@@js.set "messageerror"]
  end
  module[@js.scope "ServiceWorkerContainer"] ServiceWorkerContainer : sig
    type t = _ServiceWorkerContainer
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_controller: t -> _ServiceWorker or_null [@@js.get "controller"]
    val get_oncontrollerchange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "oncontrollerchange"]
    val set_oncontrollerchange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "oncontrollerchange"]
    val get_onmessage: t -> (this:t -> ev:_MessageEvent -> any) or_null [@@js.get "onmessage"]
    val set_onmessage: t -> (this:t -> ev:_MessageEvent -> any) or_null -> unit [@@js.set "onmessage"]
    val get_onmessageerror: t -> (this:t -> ev:_MessageEvent -> any) or_null [@@js.get "onmessageerror"]
    val set_onmessageerror: t -> (this:t -> ev:_MessageEvent -> any) or_null -> unit [@@js.set "onmessageerror"]
    val get_ready: t -> _ServiceWorkerRegistration Promise.t_1 [@@js.get "ready"]
    val getRegistration: t -> ?clientURL:string -> unit -> _ServiceWorkerRegistration or_undefined Promise.t_1 [@@js.call "getRegistration"]
    val getRegistrations: t -> _ServiceWorkerRegistration list Promise.t_1 [@@js.call "getRegistrations"]
    val register: t -> scriptURL:string -> ?options:_RegistrationOptions -> unit -> _ServiceWorkerRegistration Promise.t_1 [@@js.call "register"]
    val startMessages: t -> unit [@@js.call "startMessages"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val serviceWorkerContainer: anonymous_interface_508 [@@js.global "ServiceWorkerContainer"]
  module[@js.scope "ServiceWorkerMessageEvent"] ServiceWorkerMessageEvent : sig
    type t = _ServiceWorkerMessageEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_data: t -> any [@@js.get "data"]
    val get_lastEventId: t -> string [@@js.get "lastEventId"]
    val get_origin: t -> string [@@js.get "origin"]
    val get_ports: t -> _MessagePort list or_null [@@js.get "ports"]
    val get_source: t -> (_MessagePort, _ServiceWorker) union2 or_null [@@js.get "source"]
    val cast: t -> _Event [@@js.cast]
  end
  val serviceWorkerMessageEvent: anonymous_interface_509 [@@js.global "ServiceWorkerMessageEvent"]
  module[@js.scope "ServiceWorkerRegistrationEventMap"] ServiceWorkerRegistrationEventMap : sig
    type t = _ServiceWorkerRegistrationEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_updatefound: t -> _Event [@@js.get "updatefound"]
    val set_updatefound: t -> _Event -> unit [@@js.set "updatefound"]
  end
  module[@js.scope "ServiceWorkerRegistration"] ServiceWorkerRegistration : sig
    type t = _ServiceWorkerRegistration
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_active: t -> _ServiceWorker or_null [@@js.get "active"]
    val get_installing: t -> _ServiceWorker or_null [@@js.get "installing"]
    val get_navigationPreload: t -> _NavigationPreloadManager [@@js.get "navigationPreload"]
    val get_onupdatefound: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onupdatefound"]
    val set_onupdatefound: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onupdatefound"]
    val get_pushManager: t -> _PushManager [@@js.get "pushManager"]
    val get_scope: t -> string [@@js.get "scope"]
    val get_sync: t -> _SyncManager [@@js.get "sync"]
    val get_updateViaCache: t -> _ServiceWorkerUpdateViaCache [@@js.get "updateViaCache"]
    val get_waiting: t -> _ServiceWorker or_null [@@js.get "waiting"]
    val getNotifications: t -> ?filter:_GetNotificationOptions -> unit -> _Notification list Promise.t_1 [@@js.call "getNotifications"]
    val showNotification: t -> title:string -> ?options:_NotificationOptions -> unit -> unit Promise.t_1 [@@js.call "showNotification"]
    val unregister: t -> bool Promise.t_1 [@@js.call "unregister"]
    val update: t -> unit Promise.t_1 [@@js.call "update"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val serviceWorkerRegistration: anonymous_interface_510 [@@js.global "ServiceWorkerRegistration"]
  module[@js.scope "ShadowRoot"] ShadowRoot : sig
    type t = _ShadowRoot
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_host: t -> _Element [@@js.get "host"]
    val get_mode: t -> _ShadowRootMode [@@js.get "mode"]
    val cast: t -> _DocumentFragment [@@js.cast]
    val cast': t -> _DocumentOrShadowRoot [@@js.cast]
    val cast'': t -> _InnerHTML [@@js.cast]
  end
  val shadowRoot: anonymous_interface_511 [@@js.global "ShadowRoot"]
  module[@js.scope "Slotable"] Slotable : sig
    type t = _Slotable
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_assignedSlot: t -> _HTMLSlotElement or_null [@@js.get "assignedSlot"]
  end
  module[@js.scope "SourceBufferEventMap"] SourceBufferEventMap : sig
    type t = _SourceBufferEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_abort: t -> _Event [@@js.get "abort"]
    val set_abort: t -> _Event -> unit [@@js.set "abort"]
    val get_error: t -> _Event [@@js.get "error"]
    val set_error: t -> _Event -> unit [@@js.set "error"]
    val get_update: t -> _Event [@@js.get "update"]
    val set_update: t -> _Event -> unit [@@js.set "update"]
    val get_updateend: t -> _Event [@@js.get "updateend"]
    val set_updateend: t -> _Event -> unit [@@js.set "updateend"]
    val get_updatestart: t -> _Event [@@js.get "updatestart"]
    val set_updatestart: t -> _Event -> unit [@@js.set "updatestart"]
  end
  module[@js.scope "SourceBuffer"] SourceBuffer : sig
    type t = _SourceBuffer
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_appendWindowEnd: t -> float [@@js.get "appendWindowEnd"]
    val set_appendWindowEnd: t -> float -> unit [@@js.set "appendWindowEnd"]
    val get_appendWindowStart: t -> float [@@js.get "appendWindowStart"]
    val set_appendWindowStart: t -> float -> unit [@@js.set "appendWindowStart"]
    val get_audioTracks: t -> _AudioTrackList [@@js.get "audioTracks"]
    val get_buffered: t -> _TimeRanges [@@js.get "buffered"]
    val get_mode: t -> _AppendMode [@@js.get "mode"]
    val set_mode: t -> _AppendMode -> unit [@@js.set "mode"]
    val get_onabort: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onabort"]
    val set_onabort: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onabort"]
    val get_onerror: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onerror"]
    val set_onerror: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onerror"]
    val get_onupdate: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onupdate"]
    val set_onupdate: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onupdate"]
    val get_onupdateend: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onupdateend"]
    val set_onupdateend: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onupdateend"]
    val get_onupdatestart: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onupdatestart"]
    val set_onupdatestart: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onupdatestart"]
    val get_textTracks: t -> _TextTrackList [@@js.get "textTracks"]
    val get_timestampOffset: t -> float [@@js.get "timestampOffset"]
    val set_timestampOffset: t -> float -> unit [@@js.set "timestampOffset"]
    val get_updating: t -> bool [@@js.get "updating"]
    val get_videoTracks: t -> _VideoTrackList [@@js.get "videoTracks"]
    val abort: t -> unit [@@js.call "abort"]
    val appendBuffer: t -> data:_BufferSource -> unit [@@js.call "appendBuffer"]
    val remove: t -> start:float -> end_:float -> unit [@@js.call "remove"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val sourceBuffer: anonymous_interface_512 [@@js.global "SourceBuffer"]
  module[@js.scope "SourceBufferListEventMap"] SourceBufferListEventMap : sig
    type t = _SourceBufferListEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_addsourcebuffer: t -> _Event [@@js.get "addsourcebuffer"]
    val set_addsourcebuffer: t -> _Event -> unit [@@js.set "addsourcebuffer"]
    val get_removesourcebuffer: t -> _Event [@@js.get "removesourcebuffer"]
    val set_removesourcebuffer: t -> _Event -> unit [@@js.set "removesourcebuffer"]
  end
  module[@js.scope "SourceBufferList"] SourceBufferList : sig
    type t = _SourceBufferList
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_length: t -> float [@@js.get "length"]
    val get_onaddsourcebuffer: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onaddsourcebuffer"]
    val set_onaddsourcebuffer: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onaddsourcebuffer"]
    val get_onremovesourcebuffer: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onremovesourcebuffer"]
    val set_onremovesourcebuffer: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onremovesourcebuffer"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val get: t -> float -> _SourceBuffer [@@js.index_get]
    val set: t -> float -> _SourceBuffer -> unit [@@js.index_set]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val sourceBufferList: anonymous_interface_513 [@@js.global "SourceBufferList"]
  module[@js.scope "SpeechGrammar"] SpeechGrammar : sig
    type t = _SpeechGrammar
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_src: t -> string [@@js.get "src"]
    val set_src: t -> string -> unit [@@js.set "src"]
    val get_weight: t -> float [@@js.get "weight"]
    val set_weight: t -> float -> unit [@@js.set "weight"]
  end
  val speechGrammar: anonymous_interface_514 [@@js.global "SpeechGrammar"]
  module[@js.scope "SpeechGrammarList"] SpeechGrammarList : sig
    type t = _SpeechGrammarList
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_length: t -> float [@@js.get "length"]
    val addFromString: t -> string:string -> ?weight:float -> unit -> unit [@@js.call "addFromString"]
    val addFromURI: t -> src:string -> ?weight:float -> unit -> unit [@@js.call "addFromURI"]
    val item: t -> index:float -> _SpeechGrammar [@@js.call "item"]
    val get: t -> float -> _SpeechGrammar [@@js.index_get]
    val set: t -> float -> _SpeechGrammar -> unit [@@js.index_set]
  end
  val speechGrammarList: anonymous_interface_515 [@@js.global "SpeechGrammarList"]
  module[@js.scope "SpeechRecognitionEventMap"] SpeechRecognitionEventMap : sig
    type t = _SpeechRecognitionEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_audioend: t -> _Event [@@js.get "audioend"]
    val set_audioend: t -> _Event -> unit [@@js.set "audioend"]
    val get_audiostart: t -> _Event [@@js.get "audiostart"]
    val set_audiostart: t -> _Event -> unit [@@js.set "audiostart"]
    val get_end: t -> _Event [@@js.get "end"]
    val set_end: t -> _Event -> unit [@@js.set "end"]
    val get_error: t -> _Event [@@js.get "error"]
    val set_error: t -> _Event -> unit [@@js.set "error"]
    val get_nomatch: t -> _SpeechRecognitionEvent [@@js.get "nomatch"]
    val set_nomatch: t -> _SpeechRecognitionEvent -> unit [@@js.set "nomatch"]
    val get_result: t -> _SpeechRecognitionEvent [@@js.get "result"]
    val set_result: t -> _SpeechRecognitionEvent -> unit [@@js.set "result"]
    val get_soundend: t -> _Event [@@js.get "soundend"]
    val set_soundend: t -> _Event -> unit [@@js.set "soundend"]
    val get_soundstart: t -> _Event [@@js.get "soundstart"]
    val set_soundstart: t -> _Event -> unit [@@js.set "soundstart"]
    val get_speechend: t -> _Event [@@js.get "speechend"]
    val set_speechend: t -> _Event -> unit [@@js.set "speechend"]
    val get_speechstart: t -> _Event [@@js.get "speechstart"]
    val set_speechstart: t -> _Event -> unit [@@js.set "speechstart"]
    val get_start: t -> _Event [@@js.get "start"]
    val set_start: t -> _Event -> unit [@@js.set "start"]
  end
  module[@js.scope "SpeechRecognition"] SpeechRecognition : sig
    type t = _SpeechRecognition
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_continuous: t -> bool [@@js.get "continuous"]
    val set_continuous: t -> bool -> unit [@@js.set "continuous"]
    val get_grammars: t -> _SpeechGrammarList [@@js.get "grammars"]
    val set_grammars: t -> _SpeechGrammarList -> unit [@@js.set "grammars"]
    val get_interimResults: t -> bool [@@js.get "interimResults"]
    val set_interimResults: t -> bool -> unit [@@js.set "interimResults"]
    val get_lang: t -> string [@@js.get "lang"]
    val set_lang: t -> string -> unit [@@js.set "lang"]
    val get_maxAlternatives: t -> float [@@js.get "maxAlternatives"]
    val set_maxAlternatives: t -> float -> unit [@@js.set "maxAlternatives"]
    val get_onaudioend: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onaudioend"]
    val set_onaudioend: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onaudioend"]
    val get_onaudiostart: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onaudiostart"]
    val set_onaudiostart: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onaudiostart"]
    val get_onend: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onend"]
    val set_onend: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onend"]
    val get_onerror: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onerror"]
    val set_onerror: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onerror"]
    val get_onnomatch: t -> (this:t -> ev:_SpeechRecognitionEvent -> any) or_null [@@js.get "onnomatch"]
    val set_onnomatch: t -> (this:t -> ev:_SpeechRecognitionEvent -> any) or_null -> unit [@@js.set "onnomatch"]
    val get_onresult: t -> (this:t -> ev:_SpeechRecognitionEvent -> any) or_null [@@js.get "onresult"]
    val set_onresult: t -> (this:t -> ev:_SpeechRecognitionEvent -> any) or_null -> unit [@@js.set "onresult"]
    val get_onsoundend: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onsoundend"]
    val set_onsoundend: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onsoundend"]
    val get_onsoundstart: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onsoundstart"]
    val set_onsoundstart: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onsoundstart"]
    val get_onspeechend: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onspeechend"]
    val set_onspeechend: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onspeechend"]
    val get_onspeechstart: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onspeechstart"]
    val set_onspeechstart: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onspeechstart"]
    val get_onstart: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onstart"]
    val set_onstart: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onstart"]
    val abort: t -> unit [@@js.call "abort"]
    val start: t -> unit [@@js.call "start"]
    val stop: t -> unit [@@js.call "stop"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val speechRecognition: anonymous_interface_516 [@@js.global "SpeechRecognition"]
  module[@js.scope "SpeechRecognitionAlternative"] SpeechRecognitionAlternative : sig
    type t = _SpeechRecognitionAlternative
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_confidence: t -> float [@@js.get "confidence"]
    val get_transcript: t -> string [@@js.get "transcript"]
  end
  val speechRecognitionAlternative: anonymous_interface_517 [@@js.global "SpeechRecognitionAlternative"]
  module[@js.scope "SpeechRecognitionEvent"] SpeechRecognitionEvent : sig
    type t = _SpeechRecognitionEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_resultIndex: t -> float [@@js.get "resultIndex"]
    val get_results: t -> _SpeechRecognitionResultList [@@js.get "results"]
    val cast: t -> _Event [@@js.cast]
  end
  val speechRecognitionEvent: anonymous_interface_518 [@@js.global "SpeechRecognitionEvent"]
  module[@js.scope "SpeechRecognitionResult"] SpeechRecognitionResult : sig
    type t = _SpeechRecognitionResult
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_isFinal: t -> bool [@@js.get "isFinal"]
    val get_length: t -> float [@@js.get "length"]
    val item: t -> index:float -> _SpeechRecognitionAlternative [@@js.call "item"]
    val get: t -> float -> _SpeechRecognitionAlternative [@@js.index_get]
    val set: t -> float -> _SpeechRecognitionAlternative -> unit [@@js.index_set]
  end
  val speechRecognitionResult: anonymous_interface_519 [@@js.global "SpeechRecognitionResult"]
  module[@js.scope "SpeechRecognitionResultList"] SpeechRecognitionResultList : sig
    type t = _SpeechRecognitionResultList
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_length: t -> float [@@js.get "length"]
    val item: t -> index:float -> _SpeechRecognitionResult [@@js.call "item"]
    val get: t -> float -> _SpeechRecognitionResult [@@js.index_get]
    val set: t -> float -> _SpeechRecognitionResult -> unit [@@js.index_set]
  end
  val speechRecognitionResultList: anonymous_interface_520 [@@js.global "SpeechRecognitionResultList"]
  module[@js.scope "SpeechSynthesisEventMap"] SpeechSynthesisEventMap : sig
    type t = _SpeechSynthesisEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_voiceschanged: t -> _Event [@@js.get "voiceschanged"]
    val set_voiceschanged: t -> _Event -> unit [@@js.set "voiceschanged"]
  end
  module[@js.scope "SpeechSynthesis"] SpeechSynthesis : sig
    type t = _SpeechSynthesis
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_onvoiceschanged: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onvoiceschanged"]
    val set_onvoiceschanged: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onvoiceschanged"]
    val get_paused: t -> bool [@@js.get "paused"]
    val get_pending: t -> bool [@@js.get "pending"]
    val get_speaking: t -> bool [@@js.get "speaking"]
    val cancel: t -> unit [@@js.call "cancel"]
    val getVoices: t -> _SpeechSynthesisVoice list [@@js.call "getVoices"]
    val pause: t -> unit [@@js.call "pause"]
    val resume: t -> unit [@@js.call "resume"]
    val speak: t -> utterance:_SpeechSynthesisUtterance -> unit [@@js.call "speak"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val speechSynthesis: anonymous_interface_521 [@@js.global "SpeechSynthesis"]
  module[@js.scope "SpeechSynthesisErrorEvent"] SpeechSynthesisErrorEvent : sig
    type t = _SpeechSynthesisErrorEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_error: t -> _SpeechSynthesisErrorCode [@@js.get "error"]
    val cast: t -> _SpeechSynthesisEvent [@@js.cast]
  end
  val speechSynthesisErrorEvent: anonymous_interface_522 [@@js.global "SpeechSynthesisErrorEvent"]
  module[@js.scope "SpeechSynthesisEvent"] SpeechSynthesisEvent : sig
    type t = _SpeechSynthesisEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_charIndex: t -> float [@@js.get "charIndex"]
    val get_charLength: t -> float [@@js.get "charLength"]
    val get_elapsedTime: t -> float [@@js.get "elapsedTime"]
    val get_name: t -> string [@@js.get "name"]
    val get_utterance: t -> _SpeechSynthesisUtterance [@@js.get "utterance"]
    val cast: t -> _Event [@@js.cast]
  end
  val speechSynthesisEvent: anonymous_interface_523 [@@js.global "SpeechSynthesisEvent"]
  module[@js.scope "SpeechSynthesisUtteranceEventMap"] SpeechSynthesisUtteranceEventMap : sig
    type t = _SpeechSynthesisUtteranceEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_boundary: t -> _SpeechSynthesisEvent [@@js.get "boundary"]
    val set_boundary: t -> _SpeechSynthesisEvent -> unit [@@js.set "boundary"]
    val get_end: t -> _SpeechSynthesisEvent [@@js.get "end"]
    val set_end: t -> _SpeechSynthesisEvent -> unit [@@js.set "end"]
    val get_error: t -> _SpeechSynthesisErrorEvent [@@js.get "error"]
    val set_error: t -> _SpeechSynthesisErrorEvent -> unit [@@js.set "error"]
    val get_mark: t -> _SpeechSynthesisEvent [@@js.get "mark"]
    val set_mark: t -> _SpeechSynthesisEvent -> unit [@@js.set "mark"]
    val get_pause: t -> _SpeechSynthesisEvent [@@js.get "pause"]
    val set_pause: t -> _SpeechSynthesisEvent -> unit [@@js.set "pause"]
    val get_resume: t -> _SpeechSynthesisEvent [@@js.get "resume"]
    val set_resume: t -> _SpeechSynthesisEvent -> unit [@@js.set "resume"]
    val get_start: t -> _SpeechSynthesisEvent [@@js.get "start"]
    val set_start: t -> _SpeechSynthesisEvent -> unit [@@js.set "start"]
  end
  module[@js.scope "SpeechSynthesisUtterance"] SpeechSynthesisUtterance : sig
    type t = _SpeechSynthesisUtterance
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_lang: t -> string [@@js.get "lang"]
    val set_lang: t -> string -> unit [@@js.set "lang"]
    val get_onboundary: t -> (this:t -> ev:_SpeechSynthesisEvent -> any) or_null [@@js.get "onboundary"]
    val set_onboundary: t -> (this:t -> ev:_SpeechSynthesisEvent -> any) or_null -> unit [@@js.set "onboundary"]
    val get_onend: t -> (this:t -> ev:_SpeechSynthesisEvent -> any) or_null [@@js.get "onend"]
    val set_onend: t -> (this:t -> ev:_SpeechSynthesisEvent -> any) or_null -> unit [@@js.set "onend"]
    val get_onerror: t -> (this:t -> ev:_SpeechSynthesisErrorEvent -> any) or_null [@@js.get "onerror"]
    val set_onerror: t -> (this:t -> ev:_SpeechSynthesisErrorEvent -> any) or_null -> unit [@@js.set "onerror"]
    val get_onmark: t -> (this:t -> ev:_SpeechSynthesisEvent -> any) or_null [@@js.get "onmark"]
    val set_onmark: t -> (this:t -> ev:_SpeechSynthesisEvent -> any) or_null -> unit [@@js.set "onmark"]
    val get_onpause: t -> (this:t -> ev:_SpeechSynthesisEvent -> any) or_null [@@js.get "onpause"]
    val set_onpause: t -> (this:t -> ev:_SpeechSynthesisEvent -> any) or_null -> unit [@@js.set "onpause"]
    val get_onresume: t -> (this:t -> ev:_SpeechSynthesisEvent -> any) or_null [@@js.get "onresume"]
    val set_onresume: t -> (this:t -> ev:_SpeechSynthesisEvent -> any) or_null -> unit [@@js.set "onresume"]
    val get_onstart: t -> (this:t -> ev:_SpeechSynthesisEvent -> any) or_null [@@js.get "onstart"]
    val set_onstart: t -> (this:t -> ev:_SpeechSynthesisEvent -> any) or_null -> unit [@@js.set "onstart"]
    val get_pitch: t -> float [@@js.get "pitch"]
    val set_pitch: t -> float -> unit [@@js.set "pitch"]
    val get_rate: t -> float [@@js.get "rate"]
    val set_rate: t -> float -> unit [@@js.set "rate"]
    val get_text: t -> string [@@js.get "text"]
    val set_text: t -> string -> unit [@@js.set "text"]
    val get_voice: t -> _SpeechSynthesisVoice or_null [@@js.get "voice"]
    val set_voice: t -> _SpeechSynthesisVoice or_null -> unit [@@js.set "voice"]
    val get_volume: t -> float [@@js.get "volume"]
    val set_volume: t -> float -> unit [@@js.set "volume"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val speechSynthesisUtterance: anonymous_interface_524 [@@js.global "SpeechSynthesisUtterance"]
  module[@js.scope "SpeechSynthesisVoice"] SpeechSynthesisVoice : sig
    type t = _SpeechSynthesisVoice
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_default: t -> bool [@@js.get "default"]
    val get_lang: t -> string [@@js.get "lang"]
    val get_localService: t -> bool [@@js.get "localService"]
    val get_name: t -> string [@@js.get "name"]
    val get_voiceURI: t -> string [@@js.get "voiceURI"]
  end
  val speechSynthesisVoice: anonymous_interface_525 [@@js.global "SpeechSynthesisVoice"]
  module[@js.scope "StaticRange"] StaticRange : sig
    type t = _StaticRange
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val cast: t -> _AbstractRange [@@js.cast]
  end
  val staticRange: anonymous_interface_526 [@@js.global "StaticRange"]
  module[@js.scope "StereoPannerNode"] StereoPannerNode : sig
    type t = _StereoPannerNode
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_pan: t -> _AudioParam [@@js.get "pan"]
    val cast: t -> _AudioNode [@@js.cast]
  end
  val stereoPannerNode: anonymous_interface_527 [@@js.global "StereoPannerNode"]
  module[@js.scope "Storage"] Storage : sig
    type t = _Storage
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_length: t -> float [@@js.get "length"]
    val clear: t -> unit [@@js.call "clear"]
    val getItem: t -> key:string -> string or_null [@@js.call "getItem"]
    val key: t -> index:float -> string or_null [@@js.call "key"]
    val removeItem: t -> key:string -> unit [@@js.call "removeItem"]
    val setItem: t -> key:string -> value:string -> unit [@@js.call "setItem"]
    val get: t -> string -> any [@@js.index_get]
    val set: t -> string -> any -> unit [@@js.index_set]
  end
  val storage: anonymous_interface_528 [@@js.global "Storage"]
  module[@js.scope "StorageEvent"] StorageEvent : sig
    type t = _StorageEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_key: t -> string or_null [@@js.get "key"]
    val get_newValue: t -> string or_null [@@js.get "newValue"]
    val get_oldValue: t -> string or_null [@@js.get "oldValue"]
    val get_storageArea: t -> _Storage or_null [@@js.get "storageArea"]
    val get_url: t -> string [@@js.get "url"]
    val cast: t -> _Event [@@js.cast]
  end
  val storageEvent: anonymous_interface_529 [@@js.global "StorageEvent"]
  module[@js.scope "StorageManager"] StorageManager : sig
    type t = _StorageManager
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val estimate: t -> _StorageEstimate Promise.t_1 [@@js.call "estimate"]
    val persist: t -> bool Promise.t_1 [@@js.call "persist"]
    val persisted: t -> bool Promise.t_1 [@@js.call "persisted"]
  end
  val storageManager: anonymous_interface_530 [@@js.global "StorageManager"]
  module[@js.scope "StyleMedia"] StyleMedia : sig
    type t = _StyleMedia
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_type: t -> string [@@js.get "type"]
    val matchMedium: t -> mediaquery:string -> bool [@@js.call "matchMedium"]
  end
  val styleMedia: anonymous_interface_531 [@@js.global "StyleMedia"]
  module[@js.scope "StyleSheet"] StyleSheet : sig
    type t = _StyleSheet
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_disabled: t -> bool [@@js.get "disabled"]
    val set_disabled: t -> bool -> unit [@@js.set "disabled"]
    val get_href: t -> string or_null [@@js.get "href"]
    val get_media: t -> _MediaList [@@js.get "media"]
    val get_ownerNode: t -> _Node [@@js.get "ownerNode"]
    val get_parentStyleSheet: t -> t or_null [@@js.get "parentStyleSheet"]
    val get_title: t -> string or_null [@@js.get "title"]
    val get_type: t -> string [@@js.get "type"]
  end
  val styleSheet: anonymous_interface_532 [@@js.global "StyleSheet"]
  module[@js.scope "StyleSheetList"] StyleSheetList : sig
    type t = _StyleSheetList
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_length: t -> float [@@js.get "length"]
    val item: t -> index:float -> _StyleSheet or_null [@@js.call "item"]
    val get: t -> float -> _StyleSheet [@@js.index_get]
    val set: t -> float -> _StyleSheet -> unit [@@js.index_set]
  end
  val styleSheetList: anonymous_interface_533 [@@js.global "StyleSheetList"]
  module[@js.scope "SubtleCrypto"] SubtleCrypto : sig
    type t = _SubtleCrypto
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val decrypt: t -> algorithm:(_AesCbcParams, _AesCfbParams, _AesCmacParams, _AesCtrParams, _AesGcmParams, _RsaOaepParams) union6 or_string -> key:_CryptoKey -> data:((((Float64Array.t_0, Int16Array.t_0, Int32Array.t_0, Int8Array.t_0, Uint16Array.t_0, Uint32Array.t_0, Uint8Array.t_0, Uint8ClampedArray.t_0) union8, Float32Array.t_0) or_, DataView.t_0) or_, ArrayBuffer.t_0) or_ -> ArrayBuffer.t_0 PromiseLike.t_1 [@@js.call "decrypt"]
    val deriveBits: t -> algorithm:(_ConcatParams, _DhKeyDeriveParams, _EcdhKeyDeriveParams, _HkdfCtrParams, _Pbkdf2Params) union5 or_string -> baseKey:_CryptoKey -> length:float -> ArrayBuffer.t_0 PromiseLike.t_1 [@@js.call "deriveBits"]
    val deriveKey: t -> algorithm:(_ConcatParams, _DhKeyDeriveParams, _EcdhKeyDeriveParams, _HkdfCtrParams, _Pbkdf2Params) union5 or_string -> baseKey:_CryptoKey -> derivedKeyType:(_AesDerivedKeyParams, _ConcatParams, _HkdfCtrParams, _HmacImportParams, _Pbkdf2Params) union5 or_string -> extractable:bool -> keyUsages:string list -> _CryptoKey PromiseLike.t_1 [@@js.call "deriveKey"]
    val digest: t -> algorithm:_Algorithm or_string -> data:((((Float64Array.t_0, Int16Array.t_0, Int32Array.t_0, Int8Array.t_0, Uint16Array.t_0, Uint32Array.t_0, Uint8Array.t_0, Uint8ClampedArray.t_0) union8, Float32Array.t_0) or_, DataView.t_0) or_, ArrayBuffer.t_0) or_ -> ArrayBuffer.t_0 PromiseLike.t_1 [@@js.call "digest"]
    val encrypt: t -> algorithm:(_AesCbcParams, _AesCfbParams, _AesCmacParams, _AesCtrParams, _AesGcmParams, _RsaOaepParams) union6 or_string -> key:_CryptoKey -> data:((((Float64Array.t_0, Int16Array.t_0, Int32Array.t_0, Int8Array.t_0, Uint16Array.t_0, Uint32Array.t_0, Uint8Array.t_0, Uint8ClampedArray.t_0) union8, Float32Array.t_0) or_, DataView.t_0) or_, ArrayBuffer.t_0) or_ -> ArrayBuffer.t_0 PromiseLike.t_1 [@@js.call "encrypt"]
    val exportKey: t -> format:([`L_s469_jwk] [@js.enum]) -> key:_CryptoKey -> _JsonWebKey PromiseLike.t_1 [@@js.call "exportKey"]
    val exportKey': t -> format:([`L_s623_pkcs8 | `L_s665_raw | `L_s751_spki] [@js.enum]) -> key:_CryptoKey -> ArrayBuffer.t_0 PromiseLike.t_1 [@@js.call "exportKey"]
    val exportKey'': t -> format:string -> key:_CryptoKey -> (ArrayBuffer.t_0, _JsonWebKey) union2 PromiseLike.t_1 [@@js.call "exportKey"]
    val generateKey: t -> algorithm:string -> extractable:bool -> keyUsages:string list -> (_CryptoKey, _CryptoKeyPair) union2 PromiseLike.t_1 [@@js.call "generateKey"]
    val generateKey': t -> algorithm:(_DhKeyGenParams, _EcKeyGenParams, _RsaHashedKeyGenParams) union3 -> extractable:bool -> keyUsages:string list -> _CryptoKeyPair PromiseLike.t_1 [@@js.call "generateKey"]
    val generateKey'': t -> algorithm:(_AesKeyGenParams, _HmacKeyGenParams, _Pbkdf2Params) union3 -> extractable:bool -> keyUsages:string list -> _CryptoKey PromiseLike.t_1 [@@js.call "generateKey"]
    val importKey: t -> format:([`L_s469_jwk] [@js.enum]) -> keyData:_JsonWebKey -> algorithm:(_AesKeyAlgorithm, _DhImportKeyParams, _EcKeyImportParams, _HmacImportParams, _RsaHashedImportParams) union5 or_string -> extractable:bool -> keyUsages:string list -> _CryptoKey PromiseLike.t_1 [@@js.call "importKey"]
    val importKey': t -> format:([`L_s623_pkcs8 | `L_s665_raw | `L_s751_spki] [@js.enum]) -> keyData:((((Float64Array.t_0, Int16Array.t_0, Int32Array.t_0, Int8Array.t_0, Uint16Array.t_0, Uint32Array.t_0, Uint8Array.t_0, Uint8ClampedArray.t_0) union8, Float32Array.t_0) or_, DataView.t_0) or_, ArrayBuffer.t_0) or_ -> algorithm:(_AesKeyAlgorithm, _DhImportKeyParams, _EcKeyImportParams, _HmacImportParams, _RsaHashedImportParams) union5 or_string -> extractable:bool -> keyUsages:string list -> _CryptoKey PromiseLike.t_1 [@@js.call "importKey"]
    val importKey'': t -> format:string -> keyData:(((((Int16Array.t_0, Int32Array.t_0, Int8Array.t_0, _JsonWebKey, Uint16Array.t_0, Uint32Array.t_0, Uint8Array.t_0, Uint8ClampedArray.t_0) union8, Float64Array.t_0) or_, Float32Array.t_0) or_, DataView.t_0) or_, ArrayBuffer.t_0) or_ -> algorithm:(_AesKeyAlgorithm, _DhImportKeyParams, _EcKeyImportParams, _HmacImportParams, _RsaHashedImportParams) union5 or_string -> extractable:bool -> keyUsages:string list -> _CryptoKey PromiseLike.t_1 [@@js.call "importKey"]
    val sign: t -> algorithm:(_AesCmacParams, _EcdsaParams, _RsaPssParams) union3 or_string -> key:_CryptoKey -> data:((((Float64Array.t_0, Int16Array.t_0, Int32Array.t_0, Int8Array.t_0, Uint16Array.t_0, Uint32Array.t_0, Uint8Array.t_0, Uint8ClampedArray.t_0) union8, Float32Array.t_0) or_, DataView.t_0) or_, ArrayBuffer.t_0) or_ -> ArrayBuffer.t_0 PromiseLike.t_1 [@@js.call "sign"]
    val unwrapKey: t -> format:string -> wrappedKey:((((Float64Array.t_0, Int16Array.t_0, Int32Array.t_0, Int8Array.t_0, Uint16Array.t_0, Uint32Array.t_0, Uint8Array.t_0, Uint8ClampedArray.t_0) union8, Float32Array.t_0) or_, DataView.t_0) or_, ArrayBuffer.t_0) or_ -> unwrappingKey:_CryptoKey -> unwrapAlgorithm:_Algorithm or_string -> unwrappedKeyAlgorithm:_Algorithm or_string -> extractable:bool -> keyUsages:string list -> _CryptoKey PromiseLike.t_1 [@@js.call "unwrapKey"]
    val verify: t -> algorithm:(_AesCmacParams, _EcdsaParams, _RsaPssParams) union3 or_string -> key:_CryptoKey -> signature:((((Float64Array.t_0, Int16Array.t_0, Int32Array.t_0, Int8Array.t_0, Uint16Array.t_0, Uint32Array.t_0, Uint8Array.t_0, Uint8ClampedArray.t_0) union8, Float32Array.t_0) or_, DataView.t_0) or_, ArrayBuffer.t_0) or_ -> data:((((Float64Array.t_0, Int16Array.t_0, Int32Array.t_0, Int8Array.t_0, Uint16Array.t_0, Uint32Array.t_0, Uint8Array.t_0, Uint8ClampedArray.t_0) union8, Float32Array.t_0) or_, DataView.t_0) or_, ArrayBuffer.t_0) or_ -> bool PromiseLike.t_1 [@@js.call "verify"]
    val wrapKey: t -> format:string -> key:_CryptoKey -> wrappingKey:_CryptoKey -> wrapAlgorithm:_Algorithm or_string -> ArrayBuffer.t_0 PromiseLike.t_1 [@@js.call "wrapKey"]
  end
  val subtleCrypto: anonymous_interface_534 [@@js.global "SubtleCrypto"]
  module[@js.scope "SyncManager"] SyncManager : sig
    type t = _SyncManager
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val getTags: t -> string list Promise.t_1 [@@js.call "getTags"]
    val register: t -> tag:string -> unit Promise.t_1 [@@js.call "register"]
  end
  val syncManager: anonymous_interface_535 [@@js.global "SyncManager"]
  module[@js.scope "Text"] Text : sig
    type t = _Text
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_assignedSlot: t -> _HTMLSlotElement or_null [@@js.get "assignedSlot"]
    val get_wholeText: t -> string [@@js.get "wholeText"]
    val splitText: t -> offset:float -> t [@@js.call "splitText"]
    val cast: t -> _CharacterData [@@js.cast]
    val cast': t -> _Slotable [@@js.cast]
  end
  val text: anonymous_interface_537 [@@js.global "Text"]
  module[@js.scope "TextDecoder"] TextDecoder : sig
    type t = _TextDecoder
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val decode: t -> ?input:_BufferSource -> ?options:_TextDecodeOptions -> unit -> string [@@js.call "decode"]
    val cast: t -> _TextDecoderCommon [@@js.cast]
  end
  val textDecoder: anonymous_interface_538 [@@js.global "TextDecoder"]
  module[@js.scope "TextDecoderCommon"] TextDecoderCommon : sig
    type t = _TextDecoderCommon
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_encoding: t -> string [@@js.get "encoding"]
    val get_fatal: t -> bool [@@js.get "fatal"]
    val get_ignoreBOM: t -> bool [@@js.get "ignoreBOM"]
  end
  module[@js.scope "TextDecoderStream"] TextDecoderStream : sig
    type t = _TextDecoderStream
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_readable: t -> string _ReadableStream [@@js.get "readable"]
    val get_writable: t -> _BufferSource _WritableStream [@@js.get "writable"]
    val cast: t -> _GenericTransformStream [@@js.cast]
    val cast': t -> _TextDecoderCommon [@@js.cast]
  end
  val textDecoderStream: anonymous_interface_539 [@@js.global "TextDecoderStream"]
  module[@js.scope "TextEncoder"] TextEncoder : sig
    type t = _TextEncoder
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val encode: t -> ?input:string -> unit -> Uint8Array.t_0 [@@js.call "encode"]
    val encodeInto: t -> source:string -> destination:Uint8Array.t_0 -> _TextEncoderEncodeIntoResult [@@js.call "encodeInto"]
    val cast: t -> _TextEncoderCommon [@@js.cast]
  end
  val textEncoder: anonymous_interface_540 [@@js.global "TextEncoder"]
  module[@js.scope "TextEncoderCommon"] TextEncoderCommon : sig
    type t = _TextEncoderCommon
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_encoding: t -> string [@@js.get "encoding"]
  end
  module[@js.scope "TextEncoderStream"] TextEncoderStream : sig
    type t = _TextEncoderStream
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_readable: t -> Uint8Array.t_0 _ReadableStream [@@js.get "readable"]
    val get_writable: t -> string _WritableStream [@@js.get "writable"]
    val cast: t -> _GenericTransformStream [@@js.cast]
    val cast': t -> _TextEncoderCommon [@@js.cast]
  end
  val textEncoderStream: anonymous_interface_541 [@@js.global "TextEncoderStream"]
  module[@js.scope "TextEvent"] TextEvent : sig
    type t = _TextEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_data: t -> string [@@js.get "data"]
    val initTextEvent: t -> typeArg:string -> canBubbleArg:bool -> cancelableArg:bool -> viewArg:_Window -> dataArg:string -> inputMethod:float -> locale:string -> unit [@@js.call "initTextEvent"]
    val get_DOM_INPUT_METHOD_DROP: t -> float [@@js.get "DOM_INPUT_METHOD_DROP"]
    val get_DOM_INPUT_METHOD_HANDWRITING: t -> float [@@js.get "DOM_INPUT_METHOD_HANDWRITING"]
    val get_DOM_INPUT_METHOD_IME: t -> float [@@js.get "DOM_INPUT_METHOD_IME"]
    val get_DOM_INPUT_METHOD_KEYBOARD: t -> float [@@js.get "DOM_INPUT_METHOD_KEYBOARD"]
    val get_DOM_INPUT_METHOD_MULTIMODAL: t -> float [@@js.get "DOM_INPUT_METHOD_MULTIMODAL"]
    val get_DOM_INPUT_METHOD_OPTION: t -> float [@@js.get "DOM_INPUT_METHOD_OPTION"]
    val get_DOM_INPUT_METHOD_PASTE: t -> float [@@js.get "DOM_INPUT_METHOD_PASTE"]
    val get_DOM_INPUT_METHOD_SCRIPT: t -> float [@@js.get "DOM_INPUT_METHOD_SCRIPT"]
    val get_DOM_INPUT_METHOD_UNKNOWN: t -> float [@@js.get "DOM_INPUT_METHOD_UNKNOWN"]
    val get_DOM_INPUT_METHOD_VOICE: t -> float [@@js.get "DOM_INPUT_METHOD_VOICE"]
    val cast: t -> _UIEvent [@@js.cast]
  end
  val textEvent: anonymous_interface_542 [@@js.global "TextEvent"]
  module[@js.scope "TextMetrics"] TextMetrics : sig
    type t = _TextMetrics
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_actualBoundingBoxAscent: t -> float [@@js.get "actualBoundingBoxAscent"]
    val get_actualBoundingBoxDescent: t -> float [@@js.get "actualBoundingBoxDescent"]
    val get_actualBoundingBoxLeft: t -> float [@@js.get "actualBoundingBoxLeft"]
    val get_actualBoundingBoxRight: t -> float [@@js.get "actualBoundingBoxRight"]
    val get_alphabeticBaseline: t -> float [@@js.get "alphabeticBaseline"]
    val get_emHeightAscent: t -> float [@@js.get "emHeightAscent"]
    val get_emHeightDescent: t -> float [@@js.get "emHeightDescent"]
    val get_fontBoundingBoxAscent: t -> float [@@js.get "fontBoundingBoxAscent"]
    val get_fontBoundingBoxDescent: t -> float [@@js.get "fontBoundingBoxDescent"]
    val get_hangingBaseline: t -> float [@@js.get "hangingBaseline"]
    val get_ideographicBaseline: t -> float [@@js.get "ideographicBaseline"]
    val get_width: t -> float [@@js.get "width"]
  end
  val textMetrics: anonymous_interface_543 [@@js.global "TextMetrics"]
  module[@js.scope "TextTrackEventMap"] TextTrackEventMap : sig
    type t = _TextTrackEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_cuechange: t -> _Event [@@js.get "cuechange"]
    val set_cuechange: t -> _Event -> unit [@@js.set "cuechange"]
    val get_error: t -> _Event [@@js.get "error"]
    val set_error: t -> _Event -> unit [@@js.set "error"]
    val get_load: t -> _Event [@@js.get "load"]
    val set_load: t -> _Event -> unit [@@js.set "load"]
  end
  module[@js.scope "TextTrack"] TextTrack : sig
    type t = _TextTrack
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_activeCues: t -> _TextTrackCueList [@@js.get "activeCues"]
    val get_cues: t -> _TextTrackCueList [@@js.get "cues"]
    val get_inBandMetadataTrackDispatchType: t -> string [@@js.get "inBandMetadataTrackDispatchType"]
    val get_kind: t -> string [@@js.get "kind"]
    val get_label: t -> string [@@js.get "label"]
    val get_language: t -> string [@@js.get "language"]
    val get_mode: t -> _TextTrackMode or_number [@@js.get "mode"]
    val set_mode: t -> _TextTrackMode or_number -> unit [@@js.set "mode"]
    val get_oncuechange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "oncuechange"]
    val set_oncuechange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "oncuechange"]
    val get_onerror: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onerror"]
    val set_onerror: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onerror"]
    val get_onload: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onload"]
    val set_onload: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onload"]
    val get_readyState: t -> float [@@js.get "readyState"]
    val get_sourceBuffer: t -> _SourceBuffer or_null [@@js.get "sourceBuffer"]
    val addCue: t -> cue:_TextTrackCue -> unit [@@js.call "addCue"]
    val removeCue: t -> cue:_TextTrackCue -> unit [@@js.call "removeCue"]
    val get_DISABLED: t -> float [@@js.get "DISABLED"]
    val get_ERROR: t -> float [@@js.get "ERROR"]
    val get_HIDDEN: t -> float [@@js.get "HIDDEN"]
    val get_LOADED: t -> float [@@js.get "LOADED"]
    val get_LOADING: t -> float [@@js.get "LOADING"]
    val get_NONE: t -> float [@@js.get "NONE"]
    val get_SHOWING: t -> float [@@js.get "SHOWING"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val textTrack: anonymous_interface_544 [@@js.global "TextTrack"]
  module[@js.scope "TextTrackCueEventMap"] TextTrackCueEventMap : sig
    type t = _TextTrackCueEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_enter: t -> _Event [@@js.get "enter"]
    val set_enter: t -> _Event -> unit [@@js.set "enter"]
    val get_exit: t -> _Event [@@js.get "exit"]
    val set_exit: t -> _Event -> unit [@@js.set "exit"]
  end
  module[@js.scope "TextTrackCue"] TextTrackCue : sig
    type t = _TextTrackCue
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_endTime: t -> float [@@js.get "endTime"]
    val set_endTime: t -> float -> unit [@@js.set "endTime"]
    val get_id: t -> string [@@js.get "id"]
    val set_id: t -> string -> unit [@@js.set "id"]
    val get_onenter: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onenter"]
    val set_onenter: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onenter"]
    val get_onexit: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onexit"]
    val set_onexit: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onexit"]
    val get_pauseOnExit: t -> bool [@@js.get "pauseOnExit"]
    val set_pauseOnExit: t -> bool -> unit [@@js.set "pauseOnExit"]
    val get_startTime: t -> float [@@js.get "startTime"]
    val set_startTime: t -> float -> unit [@@js.set "startTime"]
    val get_text: t -> string [@@js.get "text"]
    val set_text: t -> string -> unit [@@js.set "text"]
    val get_track: t -> _TextTrack [@@js.get "track"]
    val getCueAsHTML: t -> _DocumentFragment [@@js.call "getCueAsHTML"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val textTrackCue: anonymous_interface_545 [@@js.global "TextTrackCue"]
  module[@js.scope "TextTrackCueList"] TextTrackCueList : sig
    type t = _TextTrackCueList
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_length: t -> float [@@js.get "length"]
    val getCueById: t -> id:string -> _TextTrackCue [@@js.call "getCueById"]
    val item: t -> index:float -> _TextTrackCue [@@js.call "item"]
    val get: t -> float -> _TextTrackCue [@@js.index_get]
    val set: t -> float -> _TextTrackCue -> unit [@@js.index_set]
  end
  val textTrackCueList: anonymous_interface_546 [@@js.global "TextTrackCueList"]
  module[@js.scope "TextTrackListEventMap"] TextTrackListEventMap : sig
    type t = _TextTrackListEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_addtrack: t -> _TrackEvent [@@js.get "addtrack"]
    val set_addtrack: t -> _TrackEvent -> unit [@@js.set "addtrack"]
    val get_change: t -> _Event [@@js.get "change"]
    val set_change: t -> _Event -> unit [@@js.set "change"]
    val get_removetrack: t -> _TrackEvent [@@js.get "removetrack"]
    val set_removetrack: t -> _TrackEvent -> unit [@@js.set "removetrack"]
  end
  module[@js.scope "TextTrackList"] TextTrackList : sig
    type t = _TextTrackList
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_length: t -> float [@@js.get "length"]
    val get_onaddtrack: t -> (this:t -> ev:_TrackEvent -> any) or_null [@@js.get "onaddtrack"]
    val set_onaddtrack: t -> (this:t -> ev:_TrackEvent -> any) or_null -> unit [@@js.set "onaddtrack"]
    val get_onchange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onchange"]
    val set_onchange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onchange"]
    val get_onremovetrack: t -> (this:t -> ev:_TrackEvent -> any) or_null [@@js.get "onremovetrack"]
    val set_onremovetrack: t -> (this:t -> ev:_TrackEvent -> any) or_null -> unit [@@js.set "onremovetrack"]
    val item: t -> index:float -> _TextTrack [@@js.call "item"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val get: t -> float -> _TextTrack [@@js.index_get]
    val set: t -> float -> _TextTrack -> unit [@@js.index_set]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val textTrackList: anonymous_interface_547 [@@js.global "TextTrackList"]
  module[@js.scope "TimeRanges"] TimeRanges : sig
    type t = _TimeRanges
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_length: t -> float [@@js.get "length"]
    val end_: t -> index:float -> float [@@js.call "end"]
    val start: t -> index:float -> float [@@js.call "start"]
  end
  val timeRanges: anonymous_interface_548 [@@js.global "TimeRanges"]
  module[@js.scope "Touch"] Touch : sig
    type t = _Touch
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_altitudeAngle: t -> float [@@js.get "altitudeAngle"]
    val get_azimuthAngle: t -> float [@@js.get "azimuthAngle"]
    val get_clientX: t -> float [@@js.get "clientX"]
    val get_clientY: t -> float [@@js.get "clientY"]
    val get_force: t -> float [@@js.get "force"]
    val get_identifier: t -> float [@@js.get "identifier"]
    val get_pageX: t -> float [@@js.get "pageX"]
    val get_pageY: t -> float [@@js.get "pageY"]
    val get_radiusX: t -> float [@@js.get "radiusX"]
    val get_radiusY: t -> float [@@js.get "radiusY"]
    val get_rotationAngle: t -> float [@@js.get "rotationAngle"]
    val get_screenX: t -> float [@@js.get "screenX"]
    val get_screenY: t -> float [@@js.get "screenY"]
    val get_target: t -> _EventTarget [@@js.get "target"]
    val get_touchType: t -> _TouchType [@@js.get "touchType"]
  end
  val touch: anonymous_interface_549 [@@js.global "Touch"]
  module[@js.scope "TouchEvent"] TouchEvent : sig
    type t = _TouchEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_altKey: t -> bool [@@js.get "altKey"]
    val get_changedTouches: t -> _TouchList [@@js.get "changedTouches"]
    val get_ctrlKey: t -> bool [@@js.get "ctrlKey"]
    val get_metaKey: t -> bool [@@js.get "metaKey"]
    val get_shiftKey: t -> bool [@@js.get "shiftKey"]
    val get_targetTouches: t -> _TouchList [@@js.get "targetTouches"]
    val get_touches: t -> _TouchList [@@js.get "touches"]
    val cast: t -> _UIEvent [@@js.cast]
  end
  val touchEvent: anonymous_interface_550 [@@js.global "TouchEvent"]
  module[@js.scope "TouchList"] TouchList : sig
    type t = _TouchList
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_length: t -> float [@@js.get "length"]
    val item: t -> index:float -> _Touch or_null [@@js.call "item"]
    val get: t -> float -> _Touch [@@js.index_get]
    val set: t -> float -> _Touch -> unit [@@js.index_set]
  end
  val touchList: anonymous_interface_551 [@@js.global "TouchList"]
  module[@js.scope "TrackEvent"] TrackEvent : sig
    type t = _TrackEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_track: t -> (_AudioTrack, _TextTrack, _VideoTrack) union3 or_null [@@js.get "track"]
    val cast: t -> _Event [@@js.cast]
  end
  val trackEvent: anonymous_interface_552 [@@js.global "TrackEvent"]
  module[@js.scope "TransformStream"] TransformStream : sig
    type ('I, 'O) t = ('I, 'O) _TransformStream
    val t_to_js: ('I -> Ojs.t) -> ('O -> Ojs.t) -> ('I, 'O) t -> Ojs.t
    val t_of_js: (Ojs.t -> 'I) -> (Ojs.t -> 'O) -> Ojs.t -> ('I, 'O) t
    type ('I, 'O) t_2 = ('I, 'O) t
    val t_2_to_js: ('I -> Ojs.t) -> ('O -> Ojs.t) -> ('I, 'O) t_2 -> Ojs.t
    val t_2_of_js: (Ojs.t -> 'I) -> (Ojs.t -> 'O) -> Ojs.t -> ('I, 'O) t_2
    type 'I t_1 = ('I, any) t
    val t_1_to_js: ('I -> Ojs.t) -> 'I t_1 -> Ojs.t
    val t_1_of_js: (Ojs.t -> 'I) -> Ojs.t -> 'I t_1
    type t_0 = (any, any) t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_readable: ('I, 'O) t -> 'O _ReadableStream [@@js.get "readable"]
    val get_writable: ('I, 'O) t -> 'I _WritableStream [@@js.get "writable"]
  end
  val transformStream: anonymous_interface_553 [@@js.global "TransformStream"]
  module[@js.scope "TransformStreamDefaultController"] TransformStreamDefaultController : sig
    type 'O t = 'O _TransformStreamDefaultController
    val t_to_js: ('O -> Ojs.t) -> 'O t -> Ojs.t
    val t_of_js: (Ojs.t -> 'O) -> Ojs.t -> 'O t
    type 'O t_1 = 'O t
    val t_1_to_js: ('O -> Ojs.t) -> 'O t_1 -> Ojs.t
    val t_1_of_js: (Ojs.t -> 'O) -> Ojs.t -> 'O t_1
    type t_0 = any t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_desiredSize: 'O t -> float or_null [@@js.get "desiredSize"]
    val enqueue: 'O t -> chunk:'O -> unit [@@js.call "enqueue"]
    val error: 'O t -> ?reason:any -> unit -> unit [@@js.call "error"]
    val terminate: 'O t -> unit [@@js.call "terminate"]
  end
  module[@js.scope "TransitionEvent"] TransitionEvent : sig
    type t = _TransitionEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_elapsedTime: t -> float [@@js.get "elapsedTime"]
    val get_propertyName: t -> string [@@js.get "propertyName"]
    val get_pseudoElement: t -> string [@@js.get "pseudoElement"]
    val cast: t -> _Event [@@js.cast]
  end
  val transitionEvent: anonymous_interface_554 [@@js.global "TransitionEvent"]
  module[@js.scope "TreeWalker"] TreeWalker : sig
    type t = _TreeWalker
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_currentNode: t -> _Node [@@js.get "currentNode"]
    val set_currentNode: t -> _Node -> unit [@@js.set "currentNode"]
    val get_filter: t -> _NodeFilter or_null [@@js.get "filter"]
    val get_root: t -> _Node [@@js.get "root"]
    val get_whatToShow: t -> float [@@js.get "whatToShow"]
    val firstChild: t -> _Node or_null [@@js.call "firstChild"]
    val lastChild: t -> _Node or_null [@@js.call "lastChild"]
    val nextNode: t -> _Node or_null [@@js.call "nextNode"]
    val nextSibling: t -> _Node or_null [@@js.call "nextSibling"]
    val parentNode: t -> _Node or_null [@@js.call "parentNode"]
    val previousNode: t -> _Node or_null [@@js.call "previousNode"]
    val previousSibling: t -> _Node or_null [@@js.call "previousSibling"]
  end
  val treeWalker: anonymous_interface_555 [@@js.global "TreeWalker"]
  module[@js.scope "UIEvent"] UIEvent : sig
    type t = _UIEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_detail: t -> float [@@js.get "detail"]
    val get_view: t -> _Window or_null [@@js.get "view"]
    val get_which: t -> float [@@js.get "which"]
    val cast: t -> _Event [@@js.cast]
  end
  val uIEvent: anonymous_interface_556 [@@js.global "UIEvent"]
  module[@js.scope "URL"] URL : sig
    type t = _URL
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_hash: t -> string [@@js.get "hash"]
    val set_hash: t -> string -> unit [@@js.set "hash"]
    val get_host: t -> string [@@js.get "host"]
    val set_host: t -> string -> unit [@@js.set "host"]
    val get_hostname: t -> string [@@js.get "hostname"]
    val set_hostname: t -> string -> unit [@@js.set "hostname"]
    val get_href: t -> string [@@js.get "href"]
    val set_href: t -> string -> unit [@@js.set "href"]
    val toString: t -> string [@@js.call "toString"]
    val get_origin: t -> string [@@js.get "origin"]
    val get_password: t -> string [@@js.get "password"]
    val set_password: t -> string -> unit [@@js.set "password"]
    val get_pathname: t -> string [@@js.get "pathname"]
    val set_pathname: t -> string -> unit [@@js.set "pathname"]
    val get_port: t -> string [@@js.get "port"]
    val set_port: t -> string -> unit [@@js.set "port"]
    val get_protocol: t -> string [@@js.get "protocol"]
    val set_protocol: t -> string -> unit [@@js.set "protocol"]
    val get_search: t -> string [@@js.get "search"]
    val set_search: t -> string -> unit [@@js.set "search"]
    val get_searchParams: t -> _URLSearchParams [@@js.get "searchParams"]
    val get_username: t -> string [@@js.get "username"]
    val set_username: t -> string -> unit [@@js.set "username"]
    val toJSON: t -> string [@@js.call "toJSON"]
  end
  val uRL: anonymous_interface_557 [@@js.global "URL"]
  module WebkitURL : sig
    type t = webkitURL
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  val webkitURL: anonymous_interface_557 [@@js.global "webkitURL"]
  module[@js.scope "URLSearchParams"] URLSearchParams : sig
    type t = _URLSearchParams
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val append: t -> name:string -> value:string -> unit [@@js.call "append"]
    val delete: t -> name:string -> unit [@@js.call "delete"]
    val get_: t -> name:string -> string or_null [@@js.call "get"]
    val getAll: t -> name:string -> string list [@@js.call "getAll"]
    val has: t -> name:string -> bool [@@js.call "has"]
    val set_: t -> name:string -> value:string -> unit [@@js.call "set"]
    val sort: t -> unit [@@js.call "sort"]
    val toString: t -> string [@@js.call "toString"]
    val forEach: t -> callbackfn:(value:string -> key:string -> parent:t -> unit) -> ?thisArg:any -> unit -> unit [@@js.call "forEach"]
  end
  val uRLSearchParams: anonymous_interface_558 [@@js.global "URLSearchParams"]
  module[@js.scope "VRDisplay"] VRDisplay : sig
    type t = _VRDisplay
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_capabilities: t -> _VRDisplayCapabilities [@@js.get "capabilities"]
    val get_depthFar: t -> float [@@js.get "depthFar"]
    val set_depthFar: t -> float -> unit [@@js.set "depthFar"]
    val get_depthNear: t -> float [@@js.get "depthNear"]
    val set_depthNear: t -> float -> unit [@@js.set "depthNear"]
    val get_displayId: t -> float [@@js.get "displayId"]
    val get_displayName: t -> string [@@js.get "displayName"]
    val get_isConnected: t -> bool [@@js.get "isConnected"]
    val get_isPresenting: t -> bool [@@js.get "isPresenting"]
    val get_stageParameters: t -> _VRStageParameters or_null [@@js.get "stageParameters"]
    val cancelAnimationFrame: t -> handle:float -> unit [@@js.call "cancelAnimationFrame"]
    val exitPresent: t -> unit Promise.t_1 [@@js.call "exitPresent"]
    val getEyeParameters: t -> whichEye:string -> _VREyeParameters [@@js.call "getEyeParameters"]
    val getFrameData: t -> frameData:_VRFrameData -> bool [@@js.call "getFrameData"]
    val getLayers: t -> _VRLayer list [@@js.call "getLayers"]
    val getPose: t -> _VRPose [@@js.call "getPose"]
    val requestAnimationFrame: t -> callback:_FrameRequestCallback -> float [@@js.call "requestAnimationFrame"]
    val requestPresent: t -> layers:_VRLayer list -> unit Promise.t_1 [@@js.call "requestPresent"]
    val resetPose: t -> unit [@@js.call "resetPose"]
    val submitFrame: t -> ?pose:_VRPose -> unit -> unit [@@js.call "submitFrame"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val vRDisplay: anonymous_interface_559 [@@js.global "VRDisplay"]
  module[@js.scope "VRDisplayCapabilities"] VRDisplayCapabilities : sig
    type t = _VRDisplayCapabilities
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_canPresent: t -> bool [@@js.get "canPresent"]
    val get_hasExternalDisplay: t -> bool [@@js.get "hasExternalDisplay"]
    val get_hasOrientation: t -> bool [@@js.get "hasOrientation"]
    val get_hasPosition: t -> bool [@@js.get "hasPosition"]
    val get_maxLayers: t -> float [@@js.get "maxLayers"]
  end
  val vRDisplayCapabilities: anonymous_interface_560 [@@js.global "VRDisplayCapabilities"]
  module[@js.scope "VRDisplayEvent"] VRDisplayEvent : sig
    type t = _VRDisplayEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_display: t -> _VRDisplay [@@js.get "display"]
    val get_reason: t -> _VRDisplayEventReason or_null [@@js.get "reason"]
    val cast: t -> _Event [@@js.cast]
  end
  val vRDisplayEvent: anonymous_interface_561 [@@js.global "VRDisplayEvent"]
  module[@js.scope "VREyeParameters"] VREyeParameters : sig
    type t = _VREyeParameters
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_fieldOfView: t -> _VRFieldOfView [@@js.get "fieldOfView"]
    val get_offset: t -> Float32Array.t_0 [@@js.get "offset"]
    val get_renderHeight: t -> float [@@js.get "renderHeight"]
    val get_renderWidth: t -> float [@@js.get "renderWidth"]
  end
  val vREyeParameters: anonymous_interface_562 [@@js.global "VREyeParameters"]
  module[@js.scope "VRFieldOfView"] VRFieldOfView : sig
    type t = _VRFieldOfView
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_downDegrees: t -> float [@@js.get "downDegrees"]
    val get_leftDegrees: t -> float [@@js.get "leftDegrees"]
    val get_rightDegrees: t -> float [@@js.get "rightDegrees"]
    val get_upDegrees: t -> float [@@js.get "upDegrees"]
  end
  val vRFieldOfView: anonymous_interface_563 [@@js.global "VRFieldOfView"]
  module[@js.scope "VRFrameData"] VRFrameData : sig
    type t = _VRFrameData
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_leftProjectionMatrix: t -> Float32Array.t_0 [@@js.get "leftProjectionMatrix"]
    val get_leftViewMatrix: t -> Float32Array.t_0 [@@js.get "leftViewMatrix"]
    val get_pose: t -> _VRPose [@@js.get "pose"]
    val get_rightProjectionMatrix: t -> Float32Array.t_0 [@@js.get "rightProjectionMatrix"]
    val get_rightViewMatrix: t -> Float32Array.t_0 [@@js.get "rightViewMatrix"]
    val get_timestamp: t -> float [@@js.get "timestamp"]
  end
  val vRFrameData: anonymous_interface_564 [@@js.global "VRFrameData"]
  module[@js.scope "VRPose"] VRPose : sig
    type t = _VRPose
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_angularAcceleration: t -> Float32Array.t_0 or_null [@@js.get "angularAcceleration"]
    val get_angularVelocity: t -> Float32Array.t_0 or_null [@@js.get "angularVelocity"]
    val get_linearAcceleration: t -> Float32Array.t_0 or_null [@@js.get "linearAcceleration"]
    val get_linearVelocity: t -> Float32Array.t_0 or_null [@@js.get "linearVelocity"]
    val get_orientation: t -> Float32Array.t_0 or_null [@@js.get "orientation"]
    val get_position: t -> Float32Array.t_0 or_null [@@js.get "position"]
    val get_timestamp: t -> float [@@js.get "timestamp"]
  end
  val vRPose: anonymous_interface_565 [@@js.global "VRPose"]
  module[@js.scope "VTTCue"] VTTCue : sig
    type t = _VTTCue
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_align: t -> _AlignSetting [@@js.get "align"]
    val set_align: t -> _AlignSetting -> unit [@@js.set "align"]
    val get_line: t -> _LineAndPositionSetting [@@js.get "line"]
    val set_line: t -> _LineAndPositionSetting -> unit [@@js.set "line"]
    val get_lineAlign: t -> _LineAlignSetting [@@js.get "lineAlign"]
    val set_lineAlign: t -> _LineAlignSetting -> unit [@@js.set "lineAlign"]
    val get_position: t -> _LineAndPositionSetting [@@js.get "position"]
    val set_position: t -> _LineAndPositionSetting -> unit [@@js.set "position"]
    val get_positionAlign: t -> _PositionAlignSetting [@@js.get "positionAlign"]
    val set_positionAlign: t -> _PositionAlignSetting -> unit [@@js.set "positionAlign"]
    val get_region: t -> _VTTRegion or_null [@@js.get "region"]
    val set_region: t -> _VTTRegion or_null -> unit [@@js.set "region"]
    val get_size: t -> float [@@js.get "size"]
    val set_size: t -> float -> unit [@@js.set "size"]
    val get_snapToLines: t -> bool [@@js.get "snapToLines"]
    val set_snapToLines: t -> bool -> unit [@@js.set "snapToLines"]
    val get_text: t -> string [@@js.get "text"]
    val set_text: t -> string -> unit [@@js.set "text"]
    val get_vertical: t -> _DirectionSetting [@@js.get "vertical"]
    val set_vertical: t -> _DirectionSetting -> unit [@@js.set "vertical"]
    val getCueAsHTML: t -> _DocumentFragment [@@js.call "getCueAsHTML"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _TextTrackCue [@@js.cast]
  end
  val vTTCue: anonymous_interface_566 [@@js.global "VTTCue"]
  module[@js.scope "VTTRegion"] VTTRegion : sig
    type t = _VTTRegion
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_id: t -> string [@@js.get "id"]
    val set_id: t -> string -> unit [@@js.set "id"]
    val get_lines: t -> float [@@js.get "lines"]
    val set_lines: t -> float -> unit [@@js.set "lines"]
    val get_regionAnchorX: t -> float [@@js.get "regionAnchorX"]
    val set_regionAnchorX: t -> float -> unit [@@js.set "regionAnchorX"]
    val get_regionAnchorY: t -> float [@@js.get "regionAnchorY"]
    val set_regionAnchorY: t -> float -> unit [@@js.set "regionAnchorY"]
    val get_scroll: t -> _ScrollSetting [@@js.get "scroll"]
    val set_scroll: t -> _ScrollSetting -> unit [@@js.set "scroll"]
    val get_viewportAnchorX: t -> float [@@js.get "viewportAnchorX"]
    val set_viewportAnchorX: t -> float -> unit [@@js.set "viewportAnchorX"]
    val get_viewportAnchorY: t -> float [@@js.get "viewportAnchorY"]
    val set_viewportAnchorY: t -> float -> unit [@@js.set "viewportAnchorY"]
    val get_width: t -> float [@@js.get "width"]
    val set_width: t -> float -> unit [@@js.set "width"]
  end
  val vTTRegion: anonymous_interface_567 [@@js.global "VTTRegion"]
  module[@js.scope "ValidityState"] ValidityState : sig
    type t = _ValidityState
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_badInput: t -> bool [@@js.get "badInput"]
    val get_customError: t -> bool [@@js.get "customError"]
    val get_patternMismatch: t -> bool [@@js.get "patternMismatch"]
    val get_rangeOverflow: t -> bool [@@js.get "rangeOverflow"]
    val get_rangeUnderflow: t -> bool [@@js.get "rangeUnderflow"]
    val get_stepMismatch: t -> bool [@@js.get "stepMismatch"]
    val get_tooLong: t -> bool [@@js.get "tooLong"]
    val get_tooShort: t -> bool [@@js.get "tooShort"]
    val get_typeMismatch: t -> bool [@@js.get "typeMismatch"]
    val get_valid: t -> bool [@@js.get "valid"]
    val get_valueMissing: t -> bool [@@js.get "valueMissing"]
  end
  val validityState: anonymous_interface_568 [@@js.global "ValidityState"]
  module[@js.scope "VideoPlaybackQuality"] VideoPlaybackQuality : sig
    type t = _VideoPlaybackQuality
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_corruptedVideoFrames: t -> float [@@js.get "corruptedVideoFrames"]
    val get_creationTime: t -> float [@@js.get "creationTime"]
    val get_droppedVideoFrames: t -> float [@@js.get "droppedVideoFrames"]
    val get_totalFrameDelay: t -> float [@@js.get "totalFrameDelay"]
    val get_totalVideoFrames: t -> float [@@js.get "totalVideoFrames"]
  end
  val videoPlaybackQuality: anonymous_interface_569 [@@js.global "VideoPlaybackQuality"]
  module[@js.scope "VideoTrack"] VideoTrack : sig
    type t = _VideoTrack
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_id: t -> string [@@js.get "id"]
    val get_kind: t -> string [@@js.get "kind"]
    val set_kind: t -> string -> unit [@@js.set "kind"]
    val get_label: t -> string [@@js.get "label"]
    val get_language: t -> string [@@js.get "language"]
    val set_language: t -> string -> unit [@@js.set "language"]
    val get_selected: t -> bool [@@js.get "selected"]
    val set_selected: t -> bool -> unit [@@js.set "selected"]
    val get_sourceBuffer: t -> _SourceBuffer or_null [@@js.get "sourceBuffer"]
  end
  val videoTrack: anonymous_interface_570 [@@js.global "VideoTrack"]
  module[@js.scope "VideoTrackListEventMap"] VideoTrackListEventMap : sig
    type t = _VideoTrackListEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_addtrack: t -> _TrackEvent [@@js.get "addtrack"]
    val set_addtrack: t -> _TrackEvent -> unit [@@js.set "addtrack"]
    val get_change: t -> _Event [@@js.get "change"]
    val set_change: t -> _Event -> unit [@@js.set "change"]
    val get_removetrack: t -> _TrackEvent [@@js.get "removetrack"]
    val set_removetrack: t -> _TrackEvent -> unit [@@js.set "removetrack"]
  end
  module[@js.scope "VideoTrackList"] VideoTrackList : sig
    type t = _VideoTrackList
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_length: t -> float [@@js.get "length"]
    val get_onaddtrack: t -> (this:t -> ev:_TrackEvent -> any) or_null [@@js.get "onaddtrack"]
    val set_onaddtrack: t -> (this:t -> ev:_TrackEvent -> any) or_null -> unit [@@js.set "onaddtrack"]
    val get_onchange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onchange"]
    val set_onchange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onchange"]
    val get_onremovetrack: t -> (this:t -> ev:_TrackEvent -> any) or_null [@@js.get "onremovetrack"]
    val set_onremovetrack: t -> (this:t -> ev:_TrackEvent -> any) or_null -> unit [@@js.set "onremovetrack"]
    val get_selectedIndex: t -> float [@@js.get "selectedIndex"]
    val getTrackById: t -> id:string -> _VideoTrack or_null [@@js.call "getTrackById"]
    val item: t -> index:float -> _VideoTrack [@@js.call "item"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val get: t -> float -> _VideoTrack [@@js.index_get]
    val set: t -> float -> _VideoTrack -> unit [@@js.index_set]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val videoTrackList: anonymous_interface_571 [@@js.global "VideoTrackList"]
  module[@js.scope "WEBGL_color_buffer_float"] WEBGL_color_buffer_float : sig
    type t = _WEBGL_color_buffer_float
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT: t -> _GLenum [@@js.get "FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT"]
    val get_RGBA32F_EXT: t -> _GLenum [@@js.get "RGBA32F_EXT"]
    val get_UNSIGNED_NORMALIZED_EXT: t -> _GLenum [@@js.get "UNSIGNED_NORMALIZED_EXT"]
  end
  module[@js.scope "WEBGL_compressed_texture_astc"] WEBGL_compressed_texture_astc : sig
    type t = _WEBGL_compressed_texture_astc
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val getSupportedProfiles: t -> string list [@@js.call "getSupportedProfiles"]
    val get_COMPRESSED_RGBA_ASTC_10x10_KHR: t -> _GLenum [@@js.get "COMPRESSED_RGBA_ASTC_10x10_KHR"]
    val get_COMPRESSED_RGBA_ASTC_10x5_KHR: t -> _GLenum [@@js.get "COMPRESSED_RGBA_ASTC_10x5_KHR"]
    val get_COMPRESSED_RGBA_ASTC_10x6_KHR: t -> _GLenum [@@js.get "COMPRESSED_RGBA_ASTC_10x6_KHR"]
    val get_COMPRESSED_RGBA_ASTC_10x8_KHR: t -> _GLenum [@@js.get "COMPRESSED_RGBA_ASTC_10x8_KHR"]
    val get_COMPRESSED_RGBA_ASTC_12x10_KHR: t -> _GLenum [@@js.get "COMPRESSED_RGBA_ASTC_12x10_KHR"]
    val get_COMPRESSED_RGBA_ASTC_12x12_KHR: t -> _GLenum [@@js.get "COMPRESSED_RGBA_ASTC_12x12_KHR"]
    val get_COMPRESSED_RGBA_ASTC_4x4_KHR: t -> _GLenum [@@js.get "COMPRESSED_RGBA_ASTC_4x4_KHR"]
    val get_COMPRESSED_RGBA_ASTC_5x4_KHR: t -> _GLenum [@@js.get "COMPRESSED_RGBA_ASTC_5x4_KHR"]
    val get_COMPRESSED_RGBA_ASTC_5x5_KHR: t -> _GLenum [@@js.get "COMPRESSED_RGBA_ASTC_5x5_KHR"]
    val get_COMPRESSED_RGBA_ASTC_6x5_KHR: t -> _GLenum [@@js.get "COMPRESSED_RGBA_ASTC_6x5_KHR"]
    val get_COMPRESSED_RGBA_ASTC_6x6_KHR: t -> _GLenum [@@js.get "COMPRESSED_RGBA_ASTC_6x6_KHR"]
    val get_COMPRESSED_RGBA_ASTC_8x5_KHR: t -> _GLenum [@@js.get "COMPRESSED_RGBA_ASTC_8x5_KHR"]
    val get_COMPRESSED_RGBA_ASTC_8x6_KHR: t -> _GLenum [@@js.get "COMPRESSED_RGBA_ASTC_8x6_KHR"]
    val get_COMPRESSED_RGBA_ASTC_8x8_KHR: t -> _GLenum [@@js.get "COMPRESSED_RGBA_ASTC_8x8_KHR"]
    val get_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR: t -> _GLenum [@@js.get "COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR"]
    val get_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR: t -> _GLenum [@@js.get "COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR"]
    val get_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR: t -> _GLenum [@@js.get "COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR"]
    val get_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR: t -> _GLenum [@@js.get "COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR"]
    val get_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR: t -> _GLenum [@@js.get "COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR"]
    val get_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR: t -> _GLenum [@@js.get "COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR"]
    val get_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR: t -> _GLenum [@@js.get "COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR"]
    val get_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR: t -> _GLenum [@@js.get "COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR"]
    val get_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR: t -> _GLenum [@@js.get "COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR"]
    val get_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR: t -> _GLenum [@@js.get "COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR"]
    val get_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR: t -> _GLenum [@@js.get "COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR"]
    val get_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR: t -> _GLenum [@@js.get "COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR"]
    val get_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR: t -> _GLenum [@@js.get "COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR"]
    val get_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR: t -> _GLenum [@@js.get "COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR"]
  end
  module[@js.scope "WEBGL_compressed_texture_s3tc"] WEBGL_compressed_texture_s3tc : sig
    type t = _WEBGL_compressed_texture_s3tc
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_COMPRESSED_RGBA_S3TC_DXT1_EXT: t -> _GLenum [@@js.get "COMPRESSED_RGBA_S3TC_DXT1_EXT"]
    val get_COMPRESSED_RGBA_S3TC_DXT3_EXT: t -> _GLenum [@@js.get "COMPRESSED_RGBA_S3TC_DXT3_EXT"]
    val get_COMPRESSED_RGBA_S3TC_DXT5_EXT: t -> _GLenum [@@js.get "COMPRESSED_RGBA_S3TC_DXT5_EXT"]
    val get_COMPRESSED_RGB_S3TC_DXT1_EXT: t -> _GLenum [@@js.get "COMPRESSED_RGB_S3TC_DXT1_EXT"]
  end
  module[@js.scope "WEBGL_compressed_texture_s3tc_srgb"] WEBGL_compressed_texture_s3tc_srgb : sig
    type t = _WEBGL_compressed_texture_s3tc_srgb
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT: t -> _GLenum [@@js.get "COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT"]
    val get_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT: t -> _GLenum [@@js.get "COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT"]
    val get_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT: t -> _GLenum [@@js.get "COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT"]
    val get_COMPRESSED_SRGB_S3TC_DXT1_EXT: t -> _GLenum [@@js.get "COMPRESSED_SRGB_S3TC_DXT1_EXT"]
  end
  module[@js.scope "WEBGL_debug_renderer_info"] WEBGL_debug_renderer_info : sig
    type t = _WEBGL_debug_renderer_info
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_UNMASKED_RENDERER_WEBGL: t -> _GLenum [@@js.get "UNMASKED_RENDERER_WEBGL"]
    val get_UNMASKED_VENDOR_WEBGL: t -> _GLenum [@@js.get "UNMASKED_VENDOR_WEBGL"]
  end
  module[@js.scope "WEBGL_debug_shaders"] WEBGL_debug_shaders : sig
    type t = _WEBGL_debug_shaders
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val getTranslatedShaderSource: t -> shader:_WebGLShader -> string [@@js.call "getTranslatedShaderSource"]
  end
  module[@js.scope "WEBGL_depth_texture"] WEBGL_depth_texture : sig
    type t = _WEBGL_depth_texture
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_UNSIGNED_INT_24_8_WEBGL: t -> _GLenum [@@js.get "UNSIGNED_INT_24_8_WEBGL"]
  end
  module[@js.scope "WEBGL_draw_buffers"] WEBGL_draw_buffers : sig
    type t = _WEBGL_draw_buffers
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val drawBuffersWEBGL: t -> buffers:_GLenum list -> unit [@@js.call "drawBuffersWEBGL"]
    val get_COLOR_ATTACHMENT0_WEBGL: t -> _GLenum [@@js.get "COLOR_ATTACHMENT0_WEBGL"]
    val get_COLOR_ATTACHMENT10_WEBGL: t -> _GLenum [@@js.get "COLOR_ATTACHMENT10_WEBGL"]
    val get_COLOR_ATTACHMENT11_WEBGL: t -> _GLenum [@@js.get "COLOR_ATTACHMENT11_WEBGL"]
    val get_COLOR_ATTACHMENT12_WEBGL: t -> _GLenum [@@js.get "COLOR_ATTACHMENT12_WEBGL"]
    val get_COLOR_ATTACHMENT13_WEBGL: t -> _GLenum [@@js.get "COLOR_ATTACHMENT13_WEBGL"]
    val get_COLOR_ATTACHMENT14_WEBGL: t -> _GLenum [@@js.get "COLOR_ATTACHMENT14_WEBGL"]
    val get_COLOR_ATTACHMENT15_WEBGL: t -> _GLenum [@@js.get "COLOR_ATTACHMENT15_WEBGL"]
    val get_COLOR_ATTACHMENT1_WEBGL: t -> _GLenum [@@js.get "COLOR_ATTACHMENT1_WEBGL"]
    val get_COLOR_ATTACHMENT2_WEBGL: t -> _GLenum [@@js.get "COLOR_ATTACHMENT2_WEBGL"]
    val get_COLOR_ATTACHMENT3_WEBGL: t -> _GLenum [@@js.get "COLOR_ATTACHMENT3_WEBGL"]
    val get_COLOR_ATTACHMENT4_WEBGL: t -> _GLenum [@@js.get "COLOR_ATTACHMENT4_WEBGL"]
    val get_COLOR_ATTACHMENT5_WEBGL: t -> _GLenum [@@js.get "COLOR_ATTACHMENT5_WEBGL"]
    val get_COLOR_ATTACHMENT6_WEBGL: t -> _GLenum [@@js.get "COLOR_ATTACHMENT6_WEBGL"]
    val get_COLOR_ATTACHMENT7_WEBGL: t -> _GLenum [@@js.get "COLOR_ATTACHMENT7_WEBGL"]
    val get_COLOR_ATTACHMENT8_WEBGL: t -> _GLenum [@@js.get "COLOR_ATTACHMENT8_WEBGL"]
    val get_COLOR_ATTACHMENT9_WEBGL: t -> _GLenum [@@js.get "COLOR_ATTACHMENT9_WEBGL"]
    val get_DRAW_BUFFER0_WEBGL: t -> _GLenum [@@js.get "DRAW_BUFFER0_WEBGL"]
    val get_DRAW_BUFFER10_WEBGL: t -> _GLenum [@@js.get "DRAW_BUFFER10_WEBGL"]
    val get_DRAW_BUFFER11_WEBGL: t -> _GLenum [@@js.get "DRAW_BUFFER11_WEBGL"]
    val get_DRAW_BUFFER12_WEBGL: t -> _GLenum [@@js.get "DRAW_BUFFER12_WEBGL"]
    val get_DRAW_BUFFER13_WEBGL: t -> _GLenum [@@js.get "DRAW_BUFFER13_WEBGL"]
    val get_DRAW_BUFFER14_WEBGL: t -> _GLenum [@@js.get "DRAW_BUFFER14_WEBGL"]
    val get_DRAW_BUFFER15_WEBGL: t -> _GLenum [@@js.get "DRAW_BUFFER15_WEBGL"]
    val get_DRAW_BUFFER1_WEBGL: t -> _GLenum [@@js.get "DRAW_BUFFER1_WEBGL"]
    val get_DRAW_BUFFER2_WEBGL: t -> _GLenum [@@js.get "DRAW_BUFFER2_WEBGL"]
    val get_DRAW_BUFFER3_WEBGL: t -> _GLenum [@@js.get "DRAW_BUFFER3_WEBGL"]
    val get_DRAW_BUFFER4_WEBGL: t -> _GLenum [@@js.get "DRAW_BUFFER4_WEBGL"]
    val get_DRAW_BUFFER5_WEBGL: t -> _GLenum [@@js.get "DRAW_BUFFER5_WEBGL"]
    val get_DRAW_BUFFER6_WEBGL: t -> _GLenum [@@js.get "DRAW_BUFFER6_WEBGL"]
    val get_DRAW_BUFFER7_WEBGL: t -> _GLenum [@@js.get "DRAW_BUFFER7_WEBGL"]
    val get_DRAW_BUFFER8_WEBGL: t -> _GLenum [@@js.get "DRAW_BUFFER8_WEBGL"]
    val get_DRAW_BUFFER9_WEBGL: t -> _GLenum [@@js.get "DRAW_BUFFER9_WEBGL"]
    val get_MAX_COLOR_ATTACHMENTS_WEBGL: t -> _GLenum [@@js.get "MAX_COLOR_ATTACHMENTS_WEBGL"]
    val get_MAX_DRAW_BUFFERS_WEBGL: t -> _GLenum [@@js.get "MAX_DRAW_BUFFERS_WEBGL"]
  end
  module[@js.scope "WEBGL_lose_context"] WEBGL_lose_context : sig
    type t = _WEBGL_lose_context
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val loseContext: t -> unit [@@js.call "loseContext"]
    val restoreContext: t -> unit [@@js.call "restoreContext"]
  end
  module[@js.scope "WaveShaperNode"] WaveShaperNode : sig
    type t = _WaveShaperNode
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_curve: t -> Float32Array.t_0 or_null [@@js.get "curve"]
    val set_curve: t -> Float32Array.t_0 or_null -> unit [@@js.set "curve"]
    val get_oversample: t -> _OverSampleType [@@js.get "oversample"]
    val set_oversample: t -> _OverSampleType -> unit [@@js.set "oversample"]
    val cast: t -> _AudioNode [@@js.cast]
  end
  val waveShaperNode: anonymous_interface_572 [@@js.global "WaveShaperNode"]
  module[@js.scope "WebAuthentication"] WebAuthentication : sig
    type t = _WebAuthentication
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val getAssertion: t -> assertionChallenge:((((Float64Array.t_0, Int16Array.t_0, Int32Array.t_0, Int8Array.t_0, Uint16Array.t_0, Uint32Array.t_0, Uint8Array.t_0, Uint8ClampedArray.t_0) union8, Float32Array.t_0) or_, DataView.t_0) or_, ArrayBuffer.t_0) or_ or_null -> ?options:_AssertionOptions -> unit -> _WebAuthnAssertion Promise.t_1 [@@js.call "getAssertion"]
    val makeCredential: t -> accountInformation:_Account -> cryptoParameters:_ScopedCredentialParameters list -> attestationChallenge:((((Float64Array.t_0, Int16Array.t_0, Int32Array.t_0, Int8Array.t_0, Uint16Array.t_0, Uint32Array.t_0, Uint8Array.t_0, Uint8ClampedArray.t_0) union8, Float32Array.t_0) or_, DataView.t_0) or_, ArrayBuffer.t_0) or_ or_null -> ?options:_ScopedCredentialOptions -> unit -> _ScopedCredentialInfo Promise.t_1 [@@js.call "makeCredential"]
  end
  val webAuthentication: anonymous_interface_573 [@@js.global "WebAuthentication"]
  module[@js.scope "WebAuthnAssertion"] WebAuthnAssertion : sig
    type t = _WebAuthnAssertion
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_authenticatorData: t -> ArrayBuffer.t_0 [@@js.get "authenticatorData"]
    val get_clientData: t -> ArrayBuffer.t_0 [@@js.get "clientData"]
    val get_credential: t -> _ScopedCredential [@@js.get "credential"]
    val get_signature: t -> ArrayBuffer.t_0 [@@js.get "signature"]
  end
  val webAuthnAssertion: anonymous_interface_574 [@@js.global "WebAuthnAssertion"]
  module[@js.scope "WebGL2RenderingContext"] WebGL2RenderingContext : sig
    type t = _WebGL2RenderingContext
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val cast: t -> _WebGL2RenderingContextBase [@@js.cast]
    val cast': t -> _WebGL2RenderingContextOverloads [@@js.cast]
    val cast'': t -> _WebGLRenderingContextBase [@@js.cast]
  end
  val webGL2RenderingContext: anonymous_interface_575 [@@js.global "WebGL2RenderingContext"]
  module[@js.scope "WebGL2RenderingContextBase"] WebGL2RenderingContextBase : sig
    type t = _WebGL2RenderingContextBase
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val beginQuery: t -> target:_GLenum -> query:_WebGLQuery -> unit [@@js.call "beginQuery"]
    val beginTransformFeedback: t -> primitiveMode:_GLenum -> unit [@@js.call "beginTransformFeedback"]
    val bindBufferBase: t -> target:_GLenum -> index:_GLuint -> buffer:_WebGLBuffer or_null -> unit [@@js.call "bindBufferBase"]
    val bindBufferRange: t -> target:_GLenum -> index:_GLuint -> buffer:_WebGLBuffer or_null -> offset:_GLintptr -> size:_GLsizeiptr -> unit [@@js.call "bindBufferRange"]
    val bindSampler: t -> unit:_GLuint -> sampler:_WebGLSampler or_null -> unit [@@js.call "bindSampler"]
    val bindTransformFeedback: t -> target:_GLenum -> tf:_WebGLTransformFeedback or_null -> unit [@@js.call "bindTransformFeedback"]
    val bindVertexArray: t -> array:_WebGLVertexArrayObject or_null -> unit [@@js.call "bindVertexArray"]
    val blitFramebuffer: t -> srcX0:_GLint -> srcY0:_GLint -> srcX1:_GLint -> srcY1:_GLint -> dstX0:_GLint -> dstY0:_GLint -> dstX1:_GLint -> dstY1:_GLint -> mask:_GLbitfield -> filter:_GLenum -> unit [@@js.call "blitFramebuffer"]
    val clearBufferfi: t -> buffer:_GLenum -> drawbuffer:_GLint -> depth:_GLfloat -> stencil:_GLint -> unit [@@js.call "clearBufferfi"]
    val clearBufferfv: t -> buffer:_GLenum -> drawbuffer:_GLint -> values:_Float32List -> ?srcOffset:_GLuint -> unit -> unit [@@js.call "clearBufferfv"]
    val clearBufferiv: t -> buffer:_GLenum -> drawbuffer:_GLint -> values:_Int32List -> ?srcOffset:_GLuint -> unit -> unit [@@js.call "clearBufferiv"]
    val clearBufferuiv: t -> buffer:_GLenum -> drawbuffer:_GLint -> values:_Uint32List -> ?srcOffset:_GLuint -> unit -> unit [@@js.call "clearBufferuiv"]
    val clientWaitSync: t -> sync:_WebGLSync -> flags:_GLbitfield -> timeout:_GLuint64 -> _GLenum [@@js.call "clientWaitSync"]
    val compressedTexImage3D: t -> target:_GLenum -> level:_GLint -> internalformat:_GLenum -> width:_GLsizei -> height:_GLsizei -> depth:_GLsizei -> border:_GLint -> imageSize:_GLsizei -> offset:_GLintptr -> unit [@@js.call "compressedTexImage3D"]
    val compressedTexImage3D': t -> target:_GLenum -> level:_GLint -> internalformat:_GLenum -> width:_GLsizei -> height:_GLsizei -> depth:_GLsizei -> border:_GLint -> srcData:ArrayBufferView.t_0 -> ?srcOffset:_GLuint -> ?srcLengthOverride:_GLuint -> unit -> unit [@@js.call "compressedTexImage3D"]
    val compressedTexSubImage3D: t -> target:_GLenum -> level:_GLint -> xoffset:_GLint -> yoffset:_GLint -> zoffset:_GLint -> width:_GLsizei -> height:_GLsizei -> depth:_GLsizei -> format:_GLenum -> imageSize:_GLsizei -> offset:_GLintptr -> unit [@@js.call "compressedTexSubImage3D"]
    val compressedTexSubImage3D': t -> target:_GLenum -> level:_GLint -> xoffset:_GLint -> yoffset:_GLint -> zoffset:_GLint -> width:_GLsizei -> height:_GLsizei -> depth:_GLsizei -> format:_GLenum -> srcData:ArrayBufferView.t_0 -> ?srcOffset:_GLuint -> ?srcLengthOverride:_GLuint -> unit -> unit [@@js.call "compressedTexSubImage3D"]
    val copyBufferSubData: t -> readTarget:_GLenum -> writeTarget:_GLenum -> readOffset:_GLintptr -> writeOffset:_GLintptr -> size:_GLsizeiptr -> unit [@@js.call "copyBufferSubData"]
    val copyTexSubImage3D: t -> target:_GLenum -> level:_GLint -> xoffset:_GLint -> yoffset:_GLint -> zoffset:_GLint -> x:_GLint -> y:_GLint -> width:_GLsizei -> height:_GLsizei -> unit [@@js.call "copyTexSubImage3D"]
    val createQuery: t -> _WebGLQuery or_null [@@js.call "createQuery"]
    val createSampler: t -> _WebGLSampler or_null [@@js.call "createSampler"]
    val createTransformFeedback: t -> _WebGLTransformFeedback or_null [@@js.call "createTransformFeedback"]
    val createVertexArray: t -> _WebGLVertexArrayObject or_null [@@js.call "createVertexArray"]
    val deleteQuery: t -> query:_WebGLQuery or_null -> unit [@@js.call "deleteQuery"]
    val deleteSampler: t -> sampler:_WebGLSampler or_null -> unit [@@js.call "deleteSampler"]
    val deleteSync: t -> sync:_WebGLSync or_null -> unit [@@js.call "deleteSync"]
    val deleteTransformFeedback: t -> tf:_WebGLTransformFeedback or_null -> unit [@@js.call "deleteTransformFeedback"]
    val deleteVertexArray: t -> vertexArray:_WebGLVertexArrayObject or_null -> unit [@@js.call "deleteVertexArray"]
    val drawArraysInstanced: t -> mode:_GLenum -> first:_GLint -> count:_GLsizei -> instanceCount:_GLsizei -> unit [@@js.call "drawArraysInstanced"]
    val drawBuffers: t -> buffers:_GLenum list -> unit [@@js.call "drawBuffers"]
    val drawElementsInstanced: t -> mode:_GLenum -> count:_GLsizei -> type_:_GLenum -> offset:_GLintptr -> instanceCount:_GLsizei -> unit [@@js.call "drawElementsInstanced"]
    val drawRangeElements: t -> mode:_GLenum -> start:_GLuint -> end_:_GLuint -> count:_GLsizei -> type_:_GLenum -> offset:_GLintptr -> unit [@@js.call "drawRangeElements"]
    val endQuery: t -> target:_GLenum -> unit [@@js.call "endQuery"]
    val endTransformFeedback: t -> unit [@@js.call "endTransformFeedback"]
    val fenceSync: t -> condition:_GLenum -> flags:_GLbitfield -> _WebGLSync or_null [@@js.call "fenceSync"]
    val framebufferTextureLayer: t -> target:_GLenum -> attachment:_GLenum -> texture:_WebGLTexture or_null -> level:_GLint -> layer:_GLint -> unit [@@js.call "framebufferTextureLayer"]
    val getActiveUniformBlockName: t -> program:_WebGLProgram -> uniformBlockIndex:_GLuint -> string or_null [@@js.call "getActiveUniformBlockName"]
    val getActiveUniformBlockParameter: t -> program:_WebGLProgram -> uniformBlockIndex:_GLuint -> pname:_GLenum -> any [@@js.call "getActiveUniformBlockParameter"]
    val getActiveUniforms: t -> program:_WebGLProgram -> uniformIndices:_GLuint list -> pname:_GLenum -> any [@@js.call "getActiveUniforms"]
    val getBufferSubData: t -> target:_GLenum -> srcByteOffset:_GLintptr -> dstBuffer:ArrayBufferView.t_0 -> ?dstOffset:_GLuint -> ?length:_GLuint -> unit -> unit [@@js.call "getBufferSubData"]
    val getFragDataLocation: t -> program:_WebGLProgram -> name:string -> _GLint [@@js.call "getFragDataLocation"]
    val getIndexedParameter: t -> target:_GLenum -> index:_GLuint -> any [@@js.call "getIndexedParameter"]
    val getInternalformatParameter: t -> target:_GLenum -> internalformat:_GLenum -> pname:_GLenum -> any [@@js.call "getInternalformatParameter"]
    val getQuery: t -> target:_GLenum -> pname:_GLenum -> _WebGLQuery or_null [@@js.call "getQuery"]
    val getQueryParameter: t -> query:_WebGLQuery -> pname:_GLenum -> any [@@js.call "getQueryParameter"]
    val getSamplerParameter: t -> sampler:_WebGLSampler -> pname:_GLenum -> any [@@js.call "getSamplerParameter"]
    val getSyncParameter: t -> sync:_WebGLSync -> pname:_GLenum -> any [@@js.call "getSyncParameter"]
    val getTransformFeedbackVarying: t -> program:_WebGLProgram -> index:_GLuint -> _WebGLActiveInfo or_null [@@js.call "getTransformFeedbackVarying"]
    val getUniformBlockIndex: t -> program:_WebGLProgram -> uniformBlockName:string -> _GLuint [@@js.call "getUniformBlockIndex"]
    val getUniformIndices: t -> program:_WebGLProgram -> uniformNames:string list -> _GLuint list or_null [@@js.call "getUniformIndices"]
    val invalidateFramebuffer: t -> target:_GLenum -> attachments:_GLenum list -> unit [@@js.call "invalidateFramebuffer"]
    val invalidateSubFramebuffer: t -> target:_GLenum -> attachments:_GLenum list -> x:_GLint -> y:_GLint -> width:_GLsizei -> height:_GLsizei -> unit [@@js.call "invalidateSubFramebuffer"]
    val isQuery: t -> query:_WebGLQuery or_null -> _GLboolean [@@js.call "isQuery"]
    val isSampler: t -> sampler:_WebGLSampler or_null -> _GLboolean [@@js.call "isSampler"]
    val isSync: t -> sync:_WebGLSync or_null -> _GLboolean [@@js.call "isSync"]
    val isTransformFeedback: t -> tf:_WebGLTransformFeedback or_null -> _GLboolean [@@js.call "isTransformFeedback"]
    val isVertexArray: t -> vertexArray:_WebGLVertexArrayObject or_null -> _GLboolean [@@js.call "isVertexArray"]
    val pauseTransformFeedback: t -> unit [@@js.call "pauseTransformFeedback"]
    val readBuffer: t -> src:_GLenum -> unit [@@js.call "readBuffer"]
    val renderbufferStorageMultisample: t -> target:_GLenum -> samples:_GLsizei -> internalformat:_GLenum -> width:_GLsizei -> height:_GLsizei -> unit [@@js.call "renderbufferStorageMultisample"]
    val resumeTransformFeedback: t -> unit [@@js.call "resumeTransformFeedback"]
    val samplerParameterf: t -> sampler:_WebGLSampler -> pname:_GLenum -> param:_GLfloat -> unit [@@js.call "samplerParameterf"]
    val samplerParameteri: t -> sampler:_WebGLSampler -> pname:_GLenum -> param:_GLint -> unit [@@js.call "samplerParameteri"]
    val texImage3D: t -> target:_GLenum -> level:_GLint -> internalformat:_GLint -> width:_GLsizei -> height:_GLsizei -> depth:_GLsizei -> border:_GLint -> format:_GLenum -> type_:_GLenum -> pboOffset:_GLintptr -> unit [@@js.call "texImage3D"]
    val texImage3D': t -> target:_GLenum -> level:_GLint -> internalformat:_GLint -> width:_GLsizei -> height:_GLsizei -> depth:_GLsizei -> border:_GLint -> format:_GLenum -> type_:_GLenum -> source:_TexImageSource -> unit [@@js.call "texImage3D"]
    val texImage3D'': t -> target:_GLenum -> level:_GLint -> internalformat:_GLint -> width:_GLsizei -> height:_GLsizei -> depth:_GLsizei -> border:_GLint -> format:_GLenum -> type_:_GLenum -> srcData:ArrayBufferView.t_0 or_null -> unit [@@js.call "texImage3D"]
    val texImage3D''': t -> target:_GLenum -> level:_GLint -> internalformat:_GLint -> width:_GLsizei -> height:_GLsizei -> depth:_GLsizei -> border:_GLint -> format:_GLenum -> type_:_GLenum -> srcData:ArrayBufferView.t_0 -> srcOffset:_GLuint -> unit [@@js.call "texImage3D"]
    val texStorage2D: t -> target:_GLenum -> levels:_GLsizei -> internalformat:_GLenum -> width:_GLsizei -> height:_GLsizei -> unit [@@js.call "texStorage2D"]
    val texStorage3D: t -> target:_GLenum -> levels:_GLsizei -> internalformat:_GLenum -> width:_GLsizei -> height:_GLsizei -> depth:_GLsizei -> unit [@@js.call "texStorage3D"]
    val texSubImage3D: t -> target:_GLenum -> level:_GLint -> xoffset:_GLint -> yoffset:_GLint -> zoffset:_GLint -> width:_GLsizei -> height:_GLsizei -> depth:_GLsizei -> format:_GLenum -> type_:_GLenum -> pboOffset:_GLintptr -> unit [@@js.call "texSubImage3D"]
    val texSubImage3D': t -> target:_GLenum -> level:_GLint -> xoffset:_GLint -> yoffset:_GLint -> zoffset:_GLint -> width:_GLsizei -> height:_GLsizei -> depth:_GLsizei -> format:_GLenum -> type_:_GLenum -> source:_TexImageSource -> unit [@@js.call "texSubImage3D"]
    val texSubImage3D'': t -> target:_GLenum -> level:_GLint -> xoffset:_GLint -> yoffset:_GLint -> zoffset:_GLint -> width:_GLsizei -> height:_GLsizei -> depth:_GLsizei -> format:_GLenum -> type_:_GLenum -> srcData:ArrayBufferView.t_0 or_null -> ?srcOffset:_GLuint -> unit -> unit [@@js.call "texSubImage3D"]
    val transformFeedbackVaryings: t -> program:_WebGLProgram -> varyings:string list -> bufferMode:_GLenum -> unit [@@js.call "transformFeedbackVaryings"]
    val uniform1ui: t -> location:_WebGLUniformLocation or_null -> v0:_GLuint -> unit [@@js.call "uniform1ui"]
    val uniform1uiv: t -> location:_WebGLUniformLocation or_null -> data:_Uint32List -> ?srcOffset:_GLuint -> ?srcLength:_GLuint -> unit -> unit [@@js.call "uniform1uiv"]
    val uniform2ui: t -> location:_WebGLUniformLocation or_null -> v0:_GLuint -> v1:_GLuint -> unit [@@js.call "uniform2ui"]
    val uniform2uiv: t -> location:_WebGLUniformLocation or_null -> data:_Uint32List -> ?srcOffset:_GLuint -> ?srcLength:_GLuint -> unit -> unit [@@js.call "uniform2uiv"]
    val uniform3ui: t -> location:_WebGLUniformLocation or_null -> v0:_GLuint -> v1:_GLuint -> v2:_GLuint -> unit [@@js.call "uniform3ui"]
    val uniform3uiv: t -> location:_WebGLUniformLocation or_null -> data:_Uint32List -> ?srcOffset:_GLuint -> ?srcLength:_GLuint -> unit -> unit [@@js.call "uniform3uiv"]
    val uniform4ui: t -> location:_WebGLUniformLocation or_null -> v0:_GLuint -> v1:_GLuint -> v2:_GLuint -> v3:_GLuint -> unit [@@js.call "uniform4ui"]
    val uniform4uiv: t -> location:_WebGLUniformLocation or_null -> data:_Uint32List -> ?srcOffset:_GLuint -> ?srcLength:_GLuint -> unit -> unit [@@js.call "uniform4uiv"]
    val uniformBlockBinding: t -> program:_WebGLProgram -> uniformBlockIndex:_GLuint -> uniformBlockBinding:_GLuint -> unit [@@js.call "uniformBlockBinding"]
    val uniformMatrix2x3fv: t -> location:_WebGLUniformLocation or_null -> transpose:_GLboolean -> data:_Float32List -> ?srcOffset:_GLuint -> ?srcLength:_GLuint -> unit -> unit [@@js.call "uniformMatrix2x3fv"]
    val uniformMatrix2x4fv: t -> location:_WebGLUniformLocation or_null -> transpose:_GLboolean -> data:_Float32List -> ?srcOffset:_GLuint -> ?srcLength:_GLuint -> unit -> unit [@@js.call "uniformMatrix2x4fv"]
    val uniformMatrix3x2fv: t -> location:_WebGLUniformLocation or_null -> transpose:_GLboolean -> data:_Float32List -> ?srcOffset:_GLuint -> ?srcLength:_GLuint -> unit -> unit [@@js.call "uniformMatrix3x2fv"]
    val uniformMatrix3x4fv: t -> location:_WebGLUniformLocation or_null -> transpose:_GLboolean -> data:_Float32List -> ?srcOffset:_GLuint -> ?srcLength:_GLuint -> unit -> unit [@@js.call "uniformMatrix3x4fv"]
    val uniformMatrix4x2fv: t -> location:_WebGLUniformLocation or_null -> transpose:_GLboolean -> data:_Float32List -> ?srcOffset:_GLuint -> ?srcLength:_GLuint -> unit -> unit [@@js.call "uniformMatrix4x2fv"]
    val uniformMatrix4x3fv: t -> location:_WebGLUniformLocation or_null -> transpose:_GLboolean -> data:_Float32List -> ?srcOffset:_GLuint -> ?srcLength:_GLuint -> unit -> unit [@@js.call "uniformMatrix4x3fv"]
    val vertexAttribDivisor: t -> index:_GLuint -> divisor:_GLuint -> unit [@@js.call "vertexAttribDivisor"]
    val vertexAttribI4i: t -> index:_GLuint -> x:_GLint -> y:_GLint -> z:_GLint -> w:_GLint -> unit [@@js.call "vertexAttribI4i"]
    val vertexAttribI4iv: t -> index:_GLuint -> values:_Int32List -> unit [@@js.call "vertexAttribI4iv"]
    val vertexAttribI4ui: t -> index:_GLuint -> x:_GLuint -> y:_GLuint -> z:_GLuint -> w:_GLuint -> unit [@@js.call "vertexAttribI4ui"]
    val vertexAttribI4uiv: t -> index:_GLuint -> values:_Uint32List -> unit [@@js.call "vertexAttribI4uiv"]
    val vertexAttribIPointer: t -> index:_GLuint -> size:_GLint -> type_:_GLenum -> stride:_GLsizei -> offset:_GLintptr -> unit [@@js.call "vertexAttribIPointer"]
    val waitSync: t -> sync:_WebGLSync -> flags:_GLbitfield -> timeout:_GLint64 -> unit [@@js.call "waitSync"]
    val get_ACTIVE_UNIFORM_BLOCKS: t -> _GLenum [@@js.get "ACTIVE_UNIFORM_BLOCKS"]
    val get_ALREADY_SIGNALED: t -> _GLenum [@@js.get "ALREADY_SIGNALED"]
    val get_ANY_SAMPLES_PASSED: t -> _GLenum [@@js.get "ANY_SAMPLES_PASSED"]
    val get_ANY_SAMPLES_PASSED_CONSERVATIVE: t -> _GLenum [@@js.get "ANY_SAMPLES_PASSED_CONSERVATIVE"]
    val get_COLOR: t -> _GLenum [@@js.get "COLOR"]
    val get_COLOR_ATTACHMENT1: t -> _GLenum [@@js.get "COLOR_ATTACHMENT1"]
    val get_COLOR_ATTACHMENT10: t -> _GLenum [@@js.get "COLOR_ATTACHMENT10"]
    val get_COLOR_ATTACHMENT11: t -> _GLenum [@@js.get "COLOR_ATTACHMENT11"]
    val get_COLOR_ATTACHMENT12: t -> _GLenum [@@js.get "COLOR_ATTACHMENT12"]
    val get_COLOR_ATTACHMENT13: t -> _GLenum [@@js.get "COLOR_ATTACHMENT13"]
    val get_COLOR_ATTACHMENT14: t -> _GLenum [@@js.get "COLOR_ATTACHMENT14"]
    val get_COLOR_ATTACHMENT15: t -> _GLenum [@@js.get "COLOR_ATTACHMENT15"]
    val get_COLOR_ATTACHMENT2: t -> _GLenum [@@js.get "COLOR_ATTACHMENT2"]
    val get_COLOR_ATTACHMENT3: t -> _GLenum [@@js.get "COLOR_ATTACHMENT3"]
    val get_COLOR_ATTACHMENT4: t -> _GLenum [@@js.get "COLOR_ATTACHMENT4"]
    val get_COLOR_ATTACHMENT5: t -> _GLenum [@@js.get "COLOR_ATTACHMENT5"]
    val get_COLOR_ATTACHMENT6: t -> _GLenum [@@js.get "COLOR_ATTACHMENT6"]
    val get_COLOR_ATTACHMENT7: t -> _GLenum [@@js.get "COLOR_ATTACHMENT7"]
    val get_COLOR_ATTACHMENT8: t -> _GLenum [@@js.get "COLOR_ATTACHMENT8"]
    val get_COLOR_ATTACHMENT9: t -> _GLenum [@@js.get "COLOR_ATTACHMENT9"]
    val get_COMPARE_REF_TO_TEXTURE: t -> _GLenum [@@js.get "COMPARE_REF_TO_TEXTURE"]
    val get_CONDITION_SATISFIED: t -> _GLenum [@@js.get "CONDITION_SATISFIED"]
    val get_COPY_READ_BUFFER: t -> _GLenum [@@js.get "COPY_READ_BUFFER"]
    val get_COPY_READ_BUFFER_BINDING: t -> _GLenum [@@js.get "COPY_READ_BUFFER_BINDING"]
    val get_COPY_WRITE_BUFFER: t -> _GLenum [@@js.get "COPY_WRITE_BUFFER"]
    val get_COPY_WRITE_BUFFER_BINDING: t -> _GLenum [@@js.get "COPY_WRITE_BUFFER_BINDING"]
    val get_CURRENT_QUERY: t -> _GLenum [@@js.get "CURRENT_QUERY"]
    val get_DEPTH: t -> _GLenum [@@js.get "DEPTH"]
    val get_DEPTH24_STENCIL8: t -> _GLenum [@@js.get "DEPTH24_STENCIL8"]
    val get_DEPTH32F_STENCIL8: t -> _GLenum [@@js.get "DEPTH32F_STENCIL8"]
    val get_DEPTH_COMPONENT24: t -> _GLenum [@@js.get "DEPTH_COMPONENT24"]
    val get_DEPTH_COMPONENT32F: t -> _GLenum [@@js.get "DEPTH_COMPONENT32F"]
    val get_DRAW_BUFFER0: t -> _GLenum [@@js.get "DRAW_BUFFER0"]
    val get_DRAW_BUFFER1: t -> _GLenum [@@js.get "DRAW_BUFFER1"]
    val get_DRAW_BUFFER10: t -> _GLenum [@@js.get "DRAW_BUFFER10"]
    val get_DRAW_BUFFER11: t -> _GLenum [@@js.get "DRAW_BUFFER11"]
    val get_DRAW_BUFFER12: t -> _GLenum [@@js.get "DRAW_BUFFER12"]
    val get_DRAW_BUFFER13: t -> _GLenum [@@js.get "DRAW_BUFFER13"]
    val get_DRAW_BUFFER14: t -> _GLenum [@@js.get "DRAW_BUFFER14"]
    val get_DRAW_BUFFER15: t -> _GLenum [@@js.get "DRAW_BUFFER15"]
    val get_DRAW_BUFFER2: t -> _GLenum [@@js.get "DRAW_BUFFER2"]
    val get_DRAW_BUFFER3: t -> _GLenum [@@js.get "DRAW_BUFFER3"]
    val get_DRAW_BUFFER4: t -> _GLenum [@@js.get "DRAW_BUFFER4"]
    val get_DRAW_BUFFER5: t -> _GLenum [@@js.get "DRAW_BUFFER5"]
    val get_DRAW_BUFFER6: t -> _GLenum [@@js.get "DRAW_BUFFER6"]
    val get_DRAW_BUFFER7: t -> _GLenum [@@js.get "DRAW_BUFFER7"]
    val get_DRAW_BUFFER8: t -> _GLenum [@@js.get "DRAW_BUFFER8"]
    val get_DRAW_BUFFER9: t -> _GLenum [@@js.get "DRAW_BUFFER9"]
    val get_DRAW_FRAMEBUFFER: t -> _GLenum [@@js.get "DRAW_FRAMEBUFFER"]
    val get_DRAW_FRAMEBUFFER_BINDING: t -> _GLenum [@@js.get "DRAW_FRAMEBUFFER_BINDING"]
    val get_DYNAMIC_COPY: t -> _GLenum [@@js.get "DYNAMIC_COPY"]
    val get_DYNAMIC_READ: t -> _GLenum [@@js.get "DYNAMIC_READ"]
    val get_FLOAT_32_UNSIGNED_INT_24_8_REV: t -> _GLenum [@@js.get "FLOAT_32_UNSIGNED_INT_24_8_REV"]
    val get_FLOAT_MAT2x3: t -> _GLenum [@@js.get "FLOAT_MAT2x3"]
    val get_FLOAT_MAT2x4: t -> _GLenum [@@js.get "FLOAT_MAT2x4"]
    val get_FLOAT_MAT3x2: t -> _GLenum [@@js.get "FLOAT_MAT3x2"]
    val get_FLOAT_MAT3x4: t -> _GLenum [@@js.get "FLOAT_MAT3x4"]
    val get_FLOAT_MAT4x2: t -> _GLenum [@@js.get "FLOAT_MAT4x2"]
    val get_FLOAT_MAT4x3: t -> _GLenum [@@js.get "FLOAT_MAT4x3"]
    val get_FRAGMENT_SHADER_DERIVATIVE_HINT: t -> _GLenum [@@js.get "FRAGMENT_SHADER_DERIVATIVE_HINT"]
    val get_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE: t -> _GLenum [@@js.get "FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE"]
    val get_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE: t -> _GLenum [@@js.get "FRAMEBUFFER_ATTACHMENT_BLUE_SIZE"]
    val get_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: t -> _GLenum [@@js.get "FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING"]
    val get_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE: t -> _GLenum [@@js.get "FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE"]
    val get_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE: t -> _GLenum [@@js.get "FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE"]
    val get_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE: t -> _GLenum [@@js.get "FRAMEBUFFER_ATTACHMENT_GREEN_SIZE"]
    val get_FRAMEBUFFER_ATTACHMENT_RED_SIZE: t -> _GLenum [@@js.get "FRAMEBUFFER_ATTACHMENT_RED_SIZE"]
    val get_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE: t -> _GLenum [@@js.get "FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE"]
    val get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER: t -> _GLenum [@@js.get "FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER"]
    val get_FRAMEBUFFER_DEFAULT: t -> _GLenum [@@js.get "FRAMEBUFFER_DEFAULT"]
    val get_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE: t -> _GLenum [@@js.get "FRAMEBUFFER_INCOMPLETE_MULTISAMPLE"]
    val get_HALF_FLOAT: t -> _GLenum [@@js.get "HALF_FLOAT"]
    val get_INTERLEAVED_ATTRIBS: t -> _GLenum [@@js.get "INTERLEAVED_ATTRIBS"]
    val get_INT_2_10_10_10_REV: t -> _GLenum [@@js.get "INT_2_10_10_10_REV"]
    val get_INT_SAMPLER_2D: t -> _GLenum [@@js.get "INT_SAMPLER_2D"]
    val get_INT_SAMPLER_2D_ARRAY: t -> _GLenum [@@js.get "INT_SAMPLER_2D_ARRAY"]
    val get_INT_SAMPLER_3D: t -> _GLenum [@@js.get "INT_SAMPLER_3D"]
    val get_INT_SAMPLER_CUBE: t -> _GLenum [@@js.get "INT_SAMPLER_CUBE"]
    val get_INVALID_INDEX: t -> _GLenum [@@js.get "INVALID_INDEX"]
    val get_MAX: t -> _GLenum [@@js.get "MAX"]
    val get_MAX_3D_TEXTURE_SIZE: t -> _GLenum [@@js.get "MAX_3D_TEXTURE_SIZE"]
    val get_MAX_ARRAY_TEXTURE_LAYERS: t -> _GLenum [@@js.get "MAX_ARRAY_TEXTURE_LAYERS"]
    val get_MAX_CLIENT_WAIT_TIMEOUT_WEBGL: t -> _GLenum [@@js.get "MAX_CLIENT_WAIT_TIMEOUT_WEBGL"]
    val get_MAX_COLOR_ATTACHMENTS: t -> _GLenum [@@js.get "MAX_COLOR_ATTACHMENTS"]
    val get_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS: t -> _GLenum [@@js.get "MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS"]
    val get_MAX_COMBINED_UNIFORM_BLOCKS: t -> _GLenum [@@js.get "MAX_COMBINED_UNIFORM_BLOCKS"]
    val get_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS: t -> _GLenum [@@js.get "MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS"]
    val get_MAX_DRAW_BUFFERS: t -> _GLenum [@@js.get "MAX_DRAW_BUFFERS"]
    val get_MAX_ELEMENTS_INDICES: t -> _GLenum [@@js.get "MAX_ELEMENTS_INDICES"]
    val get_MAX_ELEMENTS_VERTICES: t -> _GLenum [@@js.get "MAX_ELEMENTS_VERTICES"]
    val get_MAX_ELEMENT_INDEX: t -> _GLenum [@@js.get "MAX_ELEMENT_INDEX"]
    val get_MAX_FRAGMENT_INPUT_COMPONENTS: t -> _GLenum [@@js.get "MAX_FRAGMENT_INPUT_COMPONENTS"]
    val get_MAX_FRAGMENT_UNIFORM_BLOCKS: t -> _GLenum [@@js.get "MAX_FRAGMENT_UNIFORM_BLOCKS"]
    val get_MAX_FRAGMENT_UNIFORM_COMPONENTS: t -> _GLenum [@@js.get "MAX_FRAGMENT_UNIFORM_COMPONENTS"]
    val get_MAX_PROGRAM_TEXEL_OFFSET: t -> _GLenum [@@js.get "MAX_PROGRAM_TEXEL_OFFSET"]
    val get_MAX_SAMPLES: t -> _GLenum [@@js.get "MAX_SAMPLES"]
    val get_MAX_SERVER_WAIT_TIMEOUT: t -> _GLenum [@@js.get "MAX_SERVER_WAIT_TIMEOUT"]
    val get_MAX_TEXTURE_LOD_BIAS: t -> _GLenum [@@js.get "MAX_TEXTURE_LOD_BIAS"]
    val get_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS: t -> _GLenum [@@js.get "MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS"]
    val get_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS: t -> _GLenum [@@js.get "MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS"]
    val get_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS: t -> _GLenum [@@js.get "MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS"]
    val get_MAX_UNIFORM_BLOCK_SIZE: t -> _GLenum [@@js.get "MAX_UNIFORM_BLOCK_SIZE"]
    val get_MAX_UNIFORM_BUFFER_BINDINGS: t -> _GLenum [@@js.get "MAX_UNIFORM_BUFFER_BINDINGS"]
    val get_MAX_VARYING_COMPONENTS: t -> _GLenum [@@js.get "MAX_VARYING_COMPONENTS"]
    val get_MAX_VERTEX_OUTPUT_COMPONENTS: t -> _GLenum [@@js.get "MAX_VERTEX_OUTPUT_COMPONENTS"]
    val get_MAX_VERTEX_UNIFORM_BLOCKS: t -> _GLenum [@@js.get "MAX_VERTEX_UNIFORM_BLOCKS"]
    val get_MAX_VERTEX_UNIFORM_COMPONENTS: t -> _GLenum [@@js.get "MAX_VERTEX_UNIFORM_COMPONENTS"]
    val get_MIN: t -> _GLenum [@@js.get "MIN"]
    val get_MIN_PROGRAM_TEXEL_OFFSET: t -> _GLenum [@@js.get "MIN_PROGRAM_TEXEL_OFFSET"]
    val get_OBJECT_TYPE: t -> _GLenum [@@js.get "OBJECT_TYPE"]
    val get_PACK_ROW_LENGTH: t -> _GLenum [@@js.get "PACK_ROW_LENGTH"]
    val get_PACK_SKIP_PIXELS: t -> _GLenum [@@js.get "PACK_SKIP_PIXELS"]
    val get_PACK_SKIP_ROWS: t -> _GLenum [@@js.get "PACK_SKIP_ROWS"]
    val get_PIXEL_PACK_BUFFER: t -> _GLenum [@@js.get "PIXEL_PACK_BUFFER"]
    val get_PIXEL_PACK_BUFFER_BINDING: t -> _GLenum [@@js.get "PIXEL_PACK_BUFFER_BINDING"]
    val get_PIXEL_UNPACK_BUFFER: t -> _GLenum [@@js.get "PIXEL_UNPACK_BUFFER"]
    val get_PIXEL_UNPACK_BUFFER_BINDING: t -> _GLenum [@@js.get "PIXEL_UNPACK_BUFFER_BINDING"]
    val get_QUERY_RESULT: t -> _GLenum [@@js.get "QUERY_RESULT"]
    val get_QUERY_RESULT_AVAILABLE: t -> _GLenum [@@js.get "QUERY_RESULT_AVAILABLE"]
    val get_R11F_G11F_B10F: t -> _GLenum [@@js.get "R11F_G11F_B10F"]
    val get_R16F: t -> _GLenum [@@js.get "R16F"]
    val get_R16I: t -> _GLenum [@@js.get "R16I"]
    val get_R16UI: t -> _GLenum [@@js.get "R16UI"]
    val get_R32F: t -> _GLenum [@@js.get "R32F"]
    val get_R32I: t -> _GLenum [@@js.get "R32I"]
    val get_R32UI: t -> _GLenum [@@js.get "R32UI"]
    val get_R8: t -> _GLenum [@@js.get "R8"]
    val get_R8I: t -> _GLenum [@@js.get "R8I"]
    val get_R8UI: t -> _GLenum [@@js.get "R8UI"]
    val get_R8_SNORM: t -> _GLenum [@@js.get "R8_SNORM"]
    val get_RASTERIZER_DISCARD: t -> _GLenum [@@js.get "RASTERIZER_DISCARD"]
    val get_READ_BUFFER: t -> _GLenum [@@js.get "READ_BUFFER"]
    val get_READ_FRAMEBUFFER: t -> _GLenum [@@js.get "READ_FRAMEBUFFER"]
    val get_READ_FRAMEBUFFER_BINDING: t -> _GLenum [@@js.get "READ_FRAMEBUFFER_BINDING"]
    val get_RED: t -> _GLenum [@@js.get "RED"]
    val get_RED_INTEGER: t -> _GLenum [@@js.get "RED_INTEGER"]
    val get_RENDERBUFFER_SAMPLES: t -> _GLenum [@@js.get "RENDERBUFFER_SAMPLES"]
    val get_RG: t -> _GLenum [@@js.get "RG"]
    val get_RG16F: t -> _GLenum [@@js.get "RG16F"]
    val get_RG16I: t -> _GLenum [@@js.get "RG16I"]
    val get_RG16UI: t -> _GLenum [@@js.get "RG16UI"]
    val get_RG32F: t -> _GLenum [@@js.get "RG32F"]
    val get_RG32I: t -> _GLenum [@@js.get "RG32I"]
    val get_RG32UI: t -> _GLenum [@@js.get "RG32UI"]
    val get_RG8: t -> _GLenum [@@js.get "RG8"]
    val get_RG8I: t -> _GLenum [@@js.get "RG8I"]
    val get_RG8UI: t -> _GLenum [@@js.get "RG8UI"]
    val get_RG8_SNORM: t -> _GLenum [@@js.get "RG8_SNORM"]
    val get_RGB10_A2: t -> _GLenum [@@js.get "RGB10_A2"]
    val get_RGB10_A2UI: t -> _GLenum [@@js.get "RGB10_A2UI"]
    val get_RGB16F: t -> _GLenum [@@js.get "RGB16F"]
    val get_RGB16I: t -> _GLenum [@@js.get "RGB16I"]
    val get_RGB16UI: t -> _GLenum [@@js.get "RGB16UI"]
    val get_RGB32F: t -> _GLenum [@@js.get "RGB32F"]
    val get_RGB32I: t -> _GLenum [@@js.get "RGB32I"]
    val get_RGB32UI: t -> _GLenum [@@js.get "RGB32UI"]
    val get_RGB8: t -> _GLenum [@@js.get "RGB8"]
    val get_RGB8I: t -> _GLenum [@@js.get "RGB8I"]
    val get_RGB8UI: t -> _GLenum [@@js.get "RGB8UI"]
    val get_RGB8_SNORM: t -> _GLenum [@@js.get "RGB8_SNORM"]
    val get_RGB9_E5: t -> _GLenum [@@js.get "RGB9_E5"]
    val get_RGBA16F: t -> _GLenum [@@js.get "RGBA16F"]
    val get_RGBA16I: t -> _GLenum [@@js.get "RGBA16I"]
    val get_RGBA16UI: t -> _GLenum [@@js.get "RGBA16UI"]
    val get_RGBA32F: t -> _GLenum [@@js.get "RGBA32F"]
    val get_RGBA32I: t -> _GLenum [@@js.get "RGBA32I"]
    val get_RGBA32UI: t -> _GLenum [@@js.get "RGBA32UI"]
    val get_RGBA8: t -> _GLenum [@@js.get "RGBA8"]
    val get_RGBA8I: t -> _GLenum [@@js.get "RGBA8I"]
    val get_RGBA8UI: t -> _GLenum [@@js.get "RGBA8UI"]
    val get_RGBA8_SNORM: t -> _GLenum [@@js.get "RGBA8_SNORM"]
    val get_RGBA_INTEGER: t -> _GLenum [@@js.get "RGBA_INTEGER"]
    val get_RGB_INTEGER: t -> _GLenum [@@js.get "RGB_INTEGER"]
    val get_RG_INTEGER: t -> _GLenum [@@js.get "RG_INTEGER"]
    val get_SAMPLER_2D_ARRAY: t -> _GLenum [@@js.get "SAMPLER_2D_ARRAY"]
    val get_SAMPLER_2D_ARRAY_SHADOW: t -> _GLenum [@@js.get "SAMPLER_2D_ARRAY_SHADOW"]
    val get_SAMPLER_2D_SHADOW: t -> _GLenum [@@js.get "SAMPLER_2D_SHADOW"]
    val get_SAMPLER_3D: t -> _GLenum [@@js.get "SAMPLER_3D"]
    val get_SAMPLER_BINDING: t -> _GLenum [@@js.get "SAMPLER_BINDING"]
    val get_SAMPLER_CUBE_SHADOW: t -> _GLenum [@@js.get "SAMPLER_CUBE_SHADOW"]
    val get_SEPARATE_ATTRIBS: t -> _GLenum [@@js.get "SEPARATE_ATTRIBS"]
    val get_SIGNALED: t -> _GLenum [@@js.get "SIGNALED"]
    val get_SIGNED_NORMALIZED: t -> _GLenum [@@js.get "SIGNED_NORMALIZED"]
    val get_SRGB: t -> _GLenum [@@js.get "SRGB"]
    val get_SRGB8: t -> _GLenum [@@js.get "SRGB8"]
    val get_SRGB8_ALPHA8: t -> _GLenum [@@js.get "SRGB8_ALPHA8"]
    val get_STATIC_COPY: t -> _GLenum [@@js.get "STATIC_COPY"]
    val get_STATIC_READ: t -> _GLenum [@@js.get "STATIC_READ"]
    val get_STENCIL: t -> _GLenum [@@js.get "STENCIL"]
    val get_STREAM_COPY: t -> _GLenum [@@js.get "STREAM_COPY"]
    val get_STREAM_READ: t -> _GLenum [@@js.get "STREAM_READ"]
    val get_SYNC_CONDITION: t -> _GLenum [@@js.get "SYNC_CONDITION"]
    val get_SYNC_FENCE: t -> _GLenum [@@js.get "SYNC_FENCE"]
    val get_SYNC_FLAGS: t -> _GLenum [@@js.get "SYNC_FLAGS"]
    val get_SYNC_FLUSH_COMMANDS_BIT: t -> _GLenum [@@js.get "SYNC_FLUSH_COMMANDS_BIT"]
    val get_SYNC_GPU_COMMANDS_COMPLETE: t -> _GLenum [@@js.get "SYNC_GPU_COMMANDS_COMPLETE"]
    val get_SYNC_STATUS: t -> _GLenum [@@js.get "SYNC_STATUS"]
    val get_TEXTURE_2D_ARRAY: t -> _GLenum [@@js.get "TEXTURE_2D_ARRAY"]
    val get_TEXTURE_3D: t -> _GLenum [@@js.get "TEXTURE_3D"]
    val get_TEXTURE_BASE_LEVEL: t -> _GLenum [@@js.get "TEXTURE_BASE_LEVEL"]
    val get_TEXTURE_BINDING_2D_ARRAY: t -> _GLenum [@@js.get "TEXTURE_BINDING_2D_ARRAY"]
    val get_TEXTURE_BINDING_3D: t -> _GLenum [@@js.get "TEXTURE_BINDING_3D"]
    val get_TEXTURE_COMPARE_FUNC: t -> _GLenum [@@js.get "TEXTURE_COMPARE_FUNC"]
    val get_TEXTURE_COMPARE_MODE: t -> _GLenum [@@js.get "TEXTURE_COMPARE_MODE"]
    val get_TEXTURE_IMMUTABLE_FORMAT: t -> _GLenum [@@js.get "TEXTURE_IMMUTABLE_FORMAT"]
    val get_TEXTURE_IMMUTABLE_LEVELS: t -> _GLenum [@@js.get "TEXTURE_IMMUTABLE_LEVELS"]
    val get_TEXTURE_MAX_LEVEL: t -> _GLenum [@@js.get "TEXTURE_MAX_LEVEL"]
    val get_TEXTURE_MAX_LOD: t -> _GLenum [@@js.get "TEXTURE_MAX_LOD"]
    val get_TEXTURE_MIN_LOD: t -> _GLenum [@@js.get "TEXTURE_MIN_LOD"]
    val get_TEXTURE_WRAP_R: t -> _GLenum [@@js.get "TEXTURE_WRAP_R"]
    val get_TIMEOUT_EXPIRED: t -> _GLenum [@@js.get "TIMEOUT_EXPIRED"]
    val get_TIMEOUT_IGNORED: t -> _GLint64 [@@js.get "TIMEOUT_IGNORED"]
    val get_TRANSFORM_FEEDBACK: t -> _GLenum [@@js.get "TRANSFORM_FEEDBACK"]
    val get_TRANSFORM_FEEDBACK_ACTIVE: t -> _GLenum [@@js.get "TRANSFORM_FEEDBACK_ACTIVE"]
    val get_TRANSFORM_FEEDBACK_BINDING: t -> _GLenum [@@js.get "TRANSFORM_FEEDBACK_BINDING"]
    val get_TRANSFORM_FEEDBACK_BUFFER: t -> _GLenum [@@js.get "TRANSFORM_FEEDBACK_BUFFER"]
    val get_TRANSFORM_FEEDBACK_BUFFER_BINDING: t -> _GLenum [@@js.get "TRANSFORM_FEEDBACK_BUFFER_BINDING"]
    val get_TRANSFORM_FEEDBACK_BUFFER_MODE: t -> _GLenum [@@js.get "TRANSFORM_FEEDBACK_BUFFER_MODE"]
    val get_TRANSFORM_FEEDBACK_BUFFER_SIZE: t -> _GLenum [@@js.get "TRANSFORM_FEEDBACK_BUFFER_SIZE"]
    val get_TRANSFORM_FEEDBACK_BUFFER_START: t -> _GLenum [@@js.get "TRANSFORM_FEEDBACK_BUFFER_START"]
    val get_TRANSFORM_FEEDBACK_PAUSED: t -> _GLenum [@@js.get "TRANSFORM_FEEDBACK_PAUSED"]
    val get_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN: t -> _GLenum [@@js.get "TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN"]
    val get_TRANSFORM_FEEDBACK_VARYINGS: t -> _GLenum [@@js.get "TRANSFORM_FEEDBACK_VARYINGS"]
    val get_UNIFORM_ARRAY_STRIDE: t -> _GLenum [@@js.get "UNIFORM_ARRAY_STRIDE"]
    val get_UNIFORM_BLOCK_ACTIVE_UNIFORMS: t -> _GLenum [@@js.get "UNIFORM_BLOCK_ACTIVE_UNIFORMS"]
    val get_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES: t -> _GLenum [@@js.get "UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES"]
    val get_UNIFORM_BLOCK_BINDING: t -> _GLenum [@@js.get "UNIFORM_BLOCK_BINDING"]
    val get_UNIFORM_BLOCK_DATA_SIZE: t -> _GLenum [@@js.get "UNIFORM_BLOCK_DATA_SIZE"]
    val get_UNIFORM_BLOCK_INDEX: t -> _GLenum [@@js.get "UNIFORM_BLOCK_INDEX"]
    val get_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER: t -> _GLenum [@@js.get "UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER"]
    val get_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER: t -> _GLenum [@@js.get "UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER"]
    val get_UNIFORM_BUFFER: t -> _GLenum [@@js.get "UNIFORM_BUFFER"]
    val get_UNIFORM_BUFFER_BINDING: t -> _GLenum [@@js.get "UNIFORM_BUFFER_BINDING"]
    val get_UNIFORM_BUFFER_OFFSET_ALIGNMENT: t -> _GLenum [@@js.get "UNIFORM_BUFFER_OFFSET_ALIGNMENT"]
    val get_UNIFORM_BUFFER_SIZE: t -> _GLenum [@@js.get "UNIFORM_BUFFER_SIZE"]
    val get_UNIFORM_BUFFER_START: t -> _GLenum [@@js.get "UNIFORM_BUFFER_START"]
    val get_UNIFORM_IS_ROW_MAJOR: t -> _GLenum [@@js.get "UNIFORM_IS_ROW_MAJOR"]
    val get_UNIFORM_MATRIX_STRIDE: t -> _GLenum [@@js.get "UNIFORM_MATRIX_STRIDE"]
    val get_UNIFORM_OFFSET: t -> _GLenum [@@js.get "UNIFORM_OFFSET"]
    val get_UNIFORM_SIZE: t -> _GLenum [@@js.get "UNIFORM_SIZE"]
    val get_UNIFORM_TYPE: t -> _GLenum [@@js.get "UNIFORM_TYPE"]
    val get_UNPACK_IMAGE_HEIGHT: t -> _GLenum [@@js.get "UNPACK_IMAGE_HEIGHT"]
    val get_UNPACK_ROW_LENGTH: t -> _GLenum [@@js.get "UNPACK_ROW_LENGTH"]
    val get_UNPACK_SKIP_IMAGES: t -> _GLenum [@@js.get "UNPACK_SKIP_IMAGES"]
    val get_UNPACK_SKIP_PIXELS: t -> _GLenum [@@js.get "UNPACK_SKIP_PIXELS"]
    val get_UNPACK_SKIP_ROWS: t -> _GLenum [@@js.get "UNPACK_SKIP_ROWS"]
    val get_UNSIGNALED: t -> _GLenum [@@js.get "UNSIGNALED"]
    val get_UNSIGNED_INT_10F_11F_11F_REV: t -> _GLenum [@@js.get "UNSIGNED_INT_10F_11F_11F_REV"]
    val get_UNSIGNED_INT_24_8: t -> _GLenum [@@js.get "UNSIGNED_INT_24_8"]
    val get_UNSIGNED_INT_2_10_10_10_REV: t -> _GLenum [@@js.get "UNSIGNED_INT_2_10_10_10_REV"]
    val get_UNSIGNED_INT_5_9_9_9_REV: t -> _GLenum [@@js.get "UNSIGNED_INT_5_9_9_9_REV"]
    val get_UNSIGNED_INT_SAMPLER_2D: t -> _GLenum [@@js.get "UNSIGNED_INT_SAMPLER_2D"]
    val get_UNSIGNED_INT_SAMPLER_2D_ARRAY: t -> _GLenum [@@js.get "UNSIGNED_INT_SAMPLER_2D_ARRAY"]
    val get_UNSIGNED_INT_SAMPLER_3D: t -> _GLenum [@@js.get "UNSIGNED_INT_SAMPLER_3D"]
    val get_UNSIGNED_INT_SAMPLER_CUBE: t -> _GLenum [@@js.get "UNSIGNED_INT_SAMPLER_CUBE"]
    val get_UNSIGNED_INT_VEC2: t -> _GLenum [@@js.get "UNSIGNED_INT_VEC2"]
    val get_UNSIGNED_INT_VEC3: t -> _GLenum [@@js.get "UNSIGNED_INT_VEC3"]
    val get_UNSIGNED_INT_VEC4: t -> _GLenum [@@js.get "UNSIGNED_INT_VEC4"]
    val get_UNSIGNED_NORMALIZED: t -> _GLenum [@@js.get "UNSIGNED_NORMALIZED"]
    val get_VERTEX_ARRAY_BINDING: t -> _GLenum [@@js.get "VERTEX_ARRAY_BINDING"]
    val get_VERTEX_ATTRIB_ARRAY_DIVISOR: t -> _GLenum [@@js.get "VERTEX_ATTRIB_ARRAY_DIVISOR"]
    val get_VERTEX_ATTRIB_ARRAY_INTEGER: t -> _GLenum [@@js.get "VERTEX_ATTRIB_ARRAY_INTEGER"]
    val get_WAIT_FAILED: t -> _GLenum [@@js.get "WAIT_FAILED"]
  end
  module[@js.scope "WebGL2RenderingContextOverloads"] WebGL2RenderingContextOverloads : sig
    type t = _WebGL2RenderingContextOverloads
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val bufferData: t -> target:_GLenum -> size:_GLsizeiptr -> usage:_GLenum -> unit [@@js.call "bufferData"]
    val bufferData': t -> target:_GLenum -> srcData:_BufferSource or_null -> usage:_GLenum -> unit [@@js.call "bufferData"]
    val bufferData'': t -> target:_GLenum -> srcData:ArrayBufferView.t_0 -> usage:_GLenum -> srcOffset:_GLuint -> ?length:_GLuint -> unit -> unit [@@js.call "bufferData"]
    val bufferSubData: t -> target:_GLenum -> dstByteOffset:_GLintptr -> srcData:_BufferSource -> unit [@@js.call "bufferSubData"]
    val bufferSubData': t -> target:_GLenum -> dstByteOffset:_GLintptr -> srcData:ArrayBufferView.t_0 -> srcOffset:_GLuint -> ?length:_GLuint -> unit -> unit [@@js.call "bufferSubData"]
    val compressedTexImage2D: t -> target:_GLenum -> level:_GLint -> internalformat:_GLenum -> width:_GLsizei -> height:_GLsizei -> border:_GLint -> imageSize:_GLsizei -> offset:_GLintptr -> unit [@@js.call "compressedTexImage2D"]
    val compressedTexImage2D': t -> target:_GLenum -> level:_GLint -> internalformat:_GLenum -> width:_GLsizei -> height:_GLsizei -> border:_GLint -> srcData:ArrayBufferView.t_0 -> ?srcOffset:_GLuint -> ?srcLengthOverride:_GLuint -> unit -> unit [@@js.call "compressedTexImage2D"]
    val compressedTexSubImage2D: t -> target:_GLenum -> level:_GLint -> xoffset:_GLint -> yoffset:_GLint -> width:_GLsizei -> height:_GLsizei -> format:_GLenum -> imageSize:_GLsizei -> offset:_GLintptr -> unit [@@js.call "compressedTexSubImage2D"]
    val compressedTexSubImage2D': t -> target:_GLenum -> level:_GLint -> xoffset:_GLint -> yoffset:_GLint -> width:_GLsizei -> height:_GLsizei -> format:_GLenum -> srcData:ArrayBufferView.t_0 -> ?srcOffset:_GLuint -> ?srcLengthOverride:_GLuint -> unit -> unit [@@js.call "compressedTexSubImage2D"]
    val readPixels: t -> x:_GLint -> y:_GLint -> width:_GLsizei -> height:_GLsizei -> format:_GLenum -> type_:_GLenum -> dstData:ArrayBufferView.t_0 or_null -> unit [@@js.call "readPixels"]
    val readPixels': t -> x:_GLint -> y:_GLint -> width:_GLsizei -> height:_GLsizei -> format:_GLenum -> type_:_GLenum -> offset:_GLintptr -> unit [@@js.call "readPixels"]
    val readPixels'': t -> x:_GLint -> y:_GLint -> width:_GLsizei -> height:_GLsizei -> format:_GLenum -> type_:_GLenum -> dstData:ArrayBufferView.t_0 -> dstOffset:_GLuint -> unit [@@js.call "readPixels"]
    val texImage2D: t -> target:_GLenum -> level:_GLint -> internalformat:_GLint -> width:_GLsizei -> height:_GLsizei -> border:_GLint -> format:_GLenum -> type_:_GLenum -> pixels:ArrayBufferView.t_0 or_null -> unit [@@js.call "texImage2D"]
    val texImage2D': t -> target:_GLenum -> level:_GLint -> internalformat:_GLint -> format:_GLenum -> type_:_GLenum -> source:_TexImageSource -> unit [@@js.call "texImage2D"]
    val texImage2D'': t -> target:_GLenum -> level:_GLint -> internalformat:_GLint -> width:_GLsizei -> height:_GLsizei -> border:_GLint -> format:_GLenum -> type_:_GLenum -> pboOffset:_GLintptr -> unit [@@js.call "texImage2D"]
    val texImage2D''': t -> target:_GLenum -> level:_GLint -> internalformat:_GLint -> width:_GLsizei -> height:_GLsizei -> border:_GLint -> format:_GLenum -> type_:_GLenum -> source:_TexImageSource -> unit [@@js.call "texImage2D"]
    val texImage2D'''': t -> target:_GLenum -> level:_GLint -> internalformat:_GLint -> width:_GLsizei -> height:_GLsizei -> border:_GLint -> format:_GLenum -> type_:_GLenum -> srcData:ArrayBufferView.t_0 -> srcOffset:_GLuint -> unit [@@js.call "texImage2D"]
    val texSubImage2D: t -> target:_GLenum -> level:_GLint -> xoffset:_GLint -> yoffset:_GLint -> width:_GLsizei -> height:_GLsizei -> format:_GLenum -> type_:_GLenum -> pixels:ArrayBufferView.t_0 or_null -> unit [@@js.call "texSubImage2D"]
    val texSubImage2D': t -> target:_GLenum -> level:_GLint -> xoffset:_GLint -> yoffset:_GLint -> format:_GLenum -> type_:_GLenum -> source:_TexImageSource -> unit [@@js.call "texSubImage2D"]
    val texSubImage2D'': t -> target:_GLenum -> level:_GLint -> xoffset:_GLint -> yoffset:_GLint -> width:_GLsizei -> height:_GLsizei -> format:_GLenum -> type_:_GLenum -> pboOffset:_GLintptr -> unit [@@js.call "texSubImage2D"]
    val texSubImage2D''': t -> target:_GLenum -> level:_GLint -> xoffset:_GLint -> yoffset:_GLint -> width:_GLsizei -> height:_GLsizei -> format:_GLenum -> type_:_GLenum -> source:_TexImageSource -> unit [@@js.call "texSubImage2D"]
    val texSubImage2D'''': t -> target:_GLenum -> level:_GLint -> xoffset:_GLint -> yoffset:_GLint -> width:_GLsizei -> height:_GLsizei -> format:_GLenum -> type_:_GLenum -> srcData:ArrayBufferView.t_0 -> srcOffset:_GLuint -> unit [@@js.call "texSubImage2D"]
    val uniform1fv: t -> location:_WebGLUniformLocation or_null -> data:_Float32List -> ?srcOffset:_GLuint -> ?srcLength:_GLuint -> unit -> unit [@@js.call "uniform1fv"]
    val uniform1iv: t -> location:_WebGLUniformLocation or_null -> data:_Int32List -> ?srcOffset:_GLuint -> ?srcLength:_GLuint -> unit -> unit [@@js.call "uniform1iv"]
    val uniform2fv: t -> location:_WebGLUniformLocation or_null -> data:_Float32List -> ?srcOffset:_GLuint -> ?srcLength:_GLuint -> unit -> unit [@@js.call "uniform2fv"]
    val uniform2iv: t -> location:_WebGLUniformLocation or_null -> data:_Int32List -> ?srcOffset:_GLuint -> ?srcLength:_GLuint -> unit -> unit [@@js.call "uniform2iv"]
    val uniform3fv: t -> location:_WebGLUniformLocation or_null -> data:_Float32List -> ?srcOffset:_GLuint -> ?srcLength:_GLuint -> unit -> unit [@@js.call "uniform3fv"]
    val uniform3iv: t -> location:_WebGLUniformLocation or_null -> data:_Int32List -> ?srcOffset:_GLuint -> ?srcLength:_GLuint -> unit -> unit [@@js.call "uniform3iv"]
    val uniform4fv: t -> location:_WebGLUniformLocation or_null -> data:_Float32List -> ?srcOffset:_GLuint -> ?srcLength:_GLuint -> unit -> unit [@@js.call "uniform4fv"]
    val uniform4iv: t -> location:_WebGLUniformLocation or_null -> data:_Int32List -> ?srcOffset:_GLuint -> ?srcLength:_GLuint -> unit -> unit [@@js.call "uniform4iv"]
    val uniformMatrix2fv: t -> location:_WebGLUniformLocation or_null -> transpose:_GLboolean -> data:_Float32List -> ?srcOffset:_GLuint -> ?srcLength:_GLuint -> unit -> unit [@@js.call "uniformMatrix2fv"]
    val uniformMatrix3fv: t -> location:_WebGLUniformLocation or_null -> transpose:_GLboolean -> data:_Float32List -> ?srcOffset:_GLuint -> ?srcLength:_GLuint -> unit -> unit [@@js.call "uniformMatrix3fv"]
    val uniformMatrix4fv: t -> location:_WebGLUniformLocation or_null -> transpose:_GLboolean -> data:_Float32List -> ?srcOffset:_GLuint -> ?srcLength:_GLuint -> unit -> unit [@@js.call "uniformMatrix4fv"]
  end
  module[@js.scope "WebGLActiveInfo"] WebGLActiveInfo : sig
    type t = _WebGLActiveInfo
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_name: t -> string [@@js.get "name"]
    val get_size: t -> _GLint [@@js.get "size"]
    val get_type: t -> _GLenum [@@js.get "type"]
  end
  val webGLActiveInfo: anonymous_interface_576 [@@js.global "WebGLActiveInfo"]
  module[@js.scope "WebGLBuffer"] WebGLBuffer : sig
    type t = _WebGLBuffer
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val cast: t -> _WebGLObject [@@js.cast]
  end
  val webGLBuffer: anonymous_interface_577 [@@js.global "WebGLBuffer"]
  module[@js.scope "WebGLContextEvent"] WebGLContextEvent : sig
    type t = _WebGLContextEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_statusMessage: t -> string [@@js.get "statusMessage"]
    val cast: t -> _Event [@@js.cast]
  end
  val webGLContextEvent: anonymous_interface_578 [@@js.global "WebGLContextEvent"]
  module[@js.scope "WebGLFramebuffer"] WebGLFramebuffer : sig
    type t = _WebGLFramebuffer
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val cast: t -> _WebGLObject [@@js.cast]
  end
  val webGLFramebuffer: anonymous_interface_579 [@@js.global "WebGLFramebuffer"]
  module WebGLObject : sig
    type t = _WebGLObject
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  val webGLObject: anonymous_interface_580 [@@js.global "WebGLObject"]
  module[@js.scope "WebGLProgram"] WebGLProgram : sig
    type t = _WebGLProgram
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val cast: t -> _WebGLObject [@@js.cast]
  end
  val webGLProgram: anonymous_interface_581 [@@js.global "WebGLProgram"]
  module[@js.scope "WebGLQuery"] WebGLQuery : sig
    type t = _WebGLQuery
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val cast: t -> _WebGLObject [@@js.cast]
  end
  val webGLQuery: anonymous_interface_582 [@@js.global "WebGLQuery"]
  module[@js.scope "WebGLRenderbuffer"] WebGLRenderbuffer : sig
    type t = _WebGLRenderbuffer
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val cast: t -> _WebGLObject [@@js.cast]
  end
  val webGLRenderbuffer: anonymous_interface_583 [@@js.global "WebGLRenderbuffer"]
  module[@js.scope "WebGLRenderingContext"] WebGLRenderingContext : sig
    type t = _WebGLRenderingContext
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val cast: t -> _WebGLRenderingContextBase [@@js.cast]
    val cast': t -> _WebGLRenderingContextOverloads [@@js.cast]
  end
  val webGLRenderingContext: anonymous_interface_584 [@@js.global "WebGLRenderingContext"]
  module[@js.scope "WebGLRenderingContextBase"] WebGLRenderingContextBase : sig
    type t = _WebGLRenderingContextBase
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_canvas: t -> (_HTMLCanvasElement, _OffscreenCanvas) union2 [@@js.get "canvas"]
    val get_drawingBufferHeight: t -> _GLsizei [@@js.get "drawingBufferHeight"]
    val get_drawingBufferWidth: t -> _GLsizei [@@js.get "drawingBufferWidth"]
    val activeTexture: t -> texture:_GLenum -> unit [@@js.call "activeTexture"]
    val attachShader: t -> program:_WebGLProgram -> shader:_WebGLShader -> unit [@@js.call "attachShader"]
    val bindAttribLocation: t -> program:_WebGLProgram -> index:_GLuint -> name:string -> unit [@@js.call "bindAttribLocation"]
    val bindBuffer: t -> target:_GLenum -> buffer:_WebGLBuffer or_null -> unit [@@js.call "bindBuffer"]
    val bindFramebuffer: t -> target:_GLenum -> framebuffer:_WebGLFramebuffer or_null -> unit [@@js.call "bindFramebuffer"]
    val bindRenderbuffer: t -> target:_GLenum -> renderbuffer:_WebGLRenderbuffer or_null -> unit [@@js.call "bindRenderbuffer"]
    val bindTexture: t -> target:_GLenum -> texture:_WebGLTexture or_null -> unit [@@js.call "bindTexture"]
    val blendColor: t -> red:_GLclampf -> green:_GLclampf -> blue:_GLclampf -> alpha:_GLclampf -> unit [@@js.call "blendColor"]
    val blendEquation: t -> mode:_GLenum -> unit [@@js.call "blendEquation"]
    val blendEquationSeparate: t -> modeRGB:_GLenum -> modeAlpha:_GLenum -> unit [@@js.call "blendEquationSeparate"]
    val blendFunc: t -> sfactor:_GLenum -> dfactor:_GLenum -> unit [@@js.call "blendFunc"]
    val blendFuncSeparate: t -> srcRGB:_GLenum -> dstRGB:_GLenum -> srcAlpha:_GLenum -> dstAlpha:_GLenum -> unit [@@js.call "blendFuncSeparate"]
    val checkFramebufferStatus: t -> target:_GLenum -> _GLenum [@@js.call "checkFramebufferStatus"]
    val clear: t -> mask:_GLbitfield -> unit [@@js.call "clear"]
    val clearColor: t -> red:_GLclampf -> green:_GLclampf -> blue:_GLclampf -> alpha:_GLclampf -> unit [@@js.call "clearColor"]
    val clearDepth: t -> depth:_GLclampf -> unit [@@js.call "clearDepth"]
    val clearStencil: t -> s:_GLint -> unit [@@js.call "clearStencil"]
    val colorMask: t -> red:_GLboolean -> green:_GLboolean -> blue:_GLboolean -> alpha:_GLboolean -> unit [@@js.call "colorMask"]
    val compileShader: t -> shader:_WebGLShader -> unit [@@js.call "compileShader"]
    val copyTexImage2D: t -> target:_GLenum -> level:_GLint -> internalformat:_GLenum -> x:_GLint -> y:_GLint -> width:_GLsizei -> height:_GLsizei -> border:_GLint -> unit [@@js.call "copyTexImage2D"]
    val copyTexSubImage2D: t -> target:_GLenum -> level:_GLint -> xoffset:_GLint -> yoffset:_GLint -> x:_GLint -> y:_GLint -> width:_GLsizei -> height:_GLsizei -> unit [@@js.call "copyTexSubImage2D"]
    val createBuffer: t -> _WebGLBuffer or_null [@@js.call "createBuffer"]
    val createFramebuffer: t -> _WebGLFramebuffer or_null [@@js.call "createFramebuffer"]
    val createProgram: t -> _WebGLProgram or_null [@@js.call "createProgram"]
    val createRenderbuffer: t -> _WebGLRenderbuffer or_null [@@js.call "createRenderbuffer"]
    val createShader: t -> type_:_GLenum -> _WebGLShader or_null [@@js.call "createShader"]
    val createTexture: t -> _WebGLTexture or_null [@@js.call "createTexture"]
    val cullFace: t -> mode:_GLenum -> unit [@@js.call "cullFace"]
    val deleteBuffer: t -> buffer:_WebGLBuffer or_null -> unit [@@js.call "deleteBuffer"]
    val deleteFramebuffer: t -> framebuffer:_WebGLFramebuffer or_null -> unit [@@js.call "deleteFramebuffer"]
    val deleteProgram: t -> program:_WebGLProgram or_null -> unit [@@js.call "deleteProgram"]
    val deleteRenderbuffer: t -> renderbuffer:_WebGLRenderbuffer or_null -> unit [@@js.call "deleteRenderbuffer"]
    val deleteShader: t -> shader:_WebGLShader or_null -> unit [@@js.call "deleteShader"]
    val deleteTexture: t -> texture:_WebGLTexture or_null -> unit [@@js.call "deleteTexture"]
    val depthFunc: t -> func:_GLenum -> unit [@@js.call "depthFunc"]
    val depthMask: t -> flag:_GLboolean -> unit [@@js.call "depthMask"]
    val depthRange: t -> zNear:_GLclampf -> zFar:_GLclampf -> unit [@@js.call "depthRange"]
    val detachShader: t -> program:_WebGLProgram -> shader:_WebGLShader -> unit [@@js.call "detachShader"]
    val disable: t -> cap:_GLenum -> unit [@@js.call "disable"]
    val disableVertexAttribArray: t -> index:_GLuint -> unit [@@js.call "disableVertexAttribArray"]
    val drawArrays: t -> mode:_GLenum -> first:_GLint -> count:_GLsizei -> unit [@@js.call "drawArrays"]
    val drawElements: t -> mode:_GLenum -> count:_GLsizei -> type_:_GLenum -> offset:_GLintptr -> unit [@@js.call "drawElements"]
    val enable: t -> cap:_GLenum -> unit [@@js.call "enable"]
    val enableVertexAttribArray: t -> index:_GLuint -> unit [@@js.call "enableVertexAttribArray"]
    val finish: t -> unit [@@js.call "finish"]
    val flush: t -> unit [@@js.call "flush"]
    val framebufferRenderbuffer: t -> target:_GLenum -> attachment:_GLenum -> renderbuffertarget:_GLenum -> renderbuffer:_WebGLRenderbuffer or_null -> unit [@@js.call "framebufferRenderbuffer"]
    val framebufferTexture2D: t -> target:_GLenum -> attachment:_GLenum -> textarget:_GLenum -> texture:_WebGLTexture or_null -> level:_GLint -> unit [@@js.call "framebufferTexture2D"]
    val frontFace: t -> mode:_GLenum -> unit [@@js.call "frontFace"]
    val generateMipmap: t -> target:_GLenum -> unit [@@js.call "generateMipmap"]
    val getActiveAttrib: t -> program:_WebGLProgram -> index:_GLuint -> _WebGLActiveInfo or_null [@@js.call "getActiveAttrib"]
    val getActiveUniform: t -> program:_WebGLProgram -> index:_GLuint -> _WebGLActiveInfo or_null [@@js.call "getActiveUniform"]
    val getAttachedShaders: t -> program:_WebGLProgram -> _WebGLShader list or_null [@@js.call "getAttachedShaders"]
    val getAttribLocation: t -> program:_WebGLProgram -> name:string -> _GLint [@@js.call "getAttribLocation"]
    val getBufferParameter: t -> target:_GLenum -> pname:_GLenum -> any [@@js.call "getBufferParameter"]
    val getContextAttributes: t -> _WebGLContextAttributes or_null [@@js.call "getContextAttributes"]
    val getError: t -> _GLenum [@@js.call "getError"]
    val getExtension: t -> extensionName:([`L_s18_EXT_blend_minmax] [@js.enum]) -> _EXT_blend_minmax or_null [@@js.call "getExtension"]
    val getExtension': t -> extensionName:([`L_s22_EXT_texture_filter_anisotropic] [@js.enum]) -> _EXT_texture_filter_anisotropic or_null [@@js.call "getExtension"]
    val getExtension'': t -> extensionName:([`L_s19_EXT_frag_depth] [@js.enum]) -> _EXT_frag_depth or_null [@@js.call "getExtension"]
    val getExtension''': t -> extensionName:([`L_s21_EXT_shader_texture_lod] [@js.enum]) -> _EXT_shader_texture_lod or_null [@@js.call "getExtension"]
    val getExtension'''': t -> extensionName:([`L_s20_EXT_sRGB] [@js.enum]) -> _EXT_sRGB or_null [@@js.call "getExtension"]
    val getExtension''''': t -> extensionName:([`L_s80_OES_vertex_array_object] [@js.enum]) -> _OES_vertex_array_object or_null [@@js.call "getExtension"]
    val getExtension'''''': t -> extensionName:([`L_s122_WEBGL_color_buffer_float] [@js.enum]) -> _WEBGL_color_buffer_float or_null [@@js.call "getExtension"]
    val getExtension''''''': t -> extensionName:([`L_s123_WEBGL_compressed_texture_astc] [@js.enum]) -> _WEBGL_compressed_texture_astc or_null [@@js.call "getExtension"]
    val getExtension'''''''': t -> extensionName:([`L_s125_WEBGL_compressed_texture_s3tc_srgb] [@js.enum]) -> _WEBGL_compressed_texture_s3tc_srgb or_null [@@js.call "getExtension"]
    val getExtension''''''''': t -> extensionName:([`L_s127_WEBGL_debug_shaders] [@js.enum]) -> _WEBGL_debug_shaders or_null [@@js.call "getExtension"]
    val getExtension'''''''''': t -> extensionName:([`L_s129_WEBGL_draw_buffers] [@js.enum]) -> _WEBGL_draw_buffers or_null [@@js.call "getExtension"]
    val getExtension''''''''''': t -> extensionName:([`L_s130_WEBGL_lose_context] [@js.enum]) -> _WEBGL_lose_context or_null [@@js.call "getExtension"]
    val getExtension'''''''''''': t -> extensionName:([`L_s128_WEBGL_depth_texture] [@js.enum]) -> _WEBGL_depth_texture or_null [@@js.call "getExtension"]
    val getExtension''''''''''''': t -> extensionName:([`L_s126_WEBGL_debug_renderer_info] [@js.enum]) -> _WEBGL_debug_renderer_info or_null [@@js.call "getExtension"]
    val getExtension'''''''''''''': t -> extensionName:([`L_s124_WEBGL_compressed_texture_s3tc] [@js.enum]) -> _WEBGL_compressed_texture_s3tc or_null [@@js.call "getExtension"]
    val getExtension''''''''''''''': t -> extensionName:([`L_s79_OES_texture_half_float_linear] [@js.enum]) -> _OES_texture_half_float_linear or_null [@@js.call "getExtension"]
    val getExtension'''''''''''''''': t -> extensionName:([`L_s78_OES_texture_half_float] [@js.enum]) -> _OES_texture_half_float or_null [@@js.call "getExtension"]
    val getExtension''''''''''''''''': t -> extensionName:([`L_s77_OES_texture_float_linear] [@js.enum]) -> _OES_texture_float_linear or_null [@@js.call "getExtension"]
    val getExtension'''''''''''''''''': t -> extensionName:([`L_s76_OES_texture_float] [@js.enum]) -> _OES_texture_float or_null [@@js.call "getExtension"]
    val getExtension''''''''''''''''''': t -> extensionName:([`L_s75_OES_standard_derivatives] [@js.enum]) -> _OES_standard_derivatives or_null [@@js.call "getExtension"]
    val getExtension'''''''''''''''''''': t -> extensionName:([`L_s74_OES_element_index_uint] [@js.enum]) -> _OES_element_index_uint or_null [@@js.call "getExtension"]
    val getExtension''''''''''''''''''''': t -> extensionName:([`L_s4_ANGLE_instanced_arrays] [@js.enum]) -> _ANGLE_instanced_arrays or_null [@@js.call "getExtension"]
    val getExtension'''''''''''''''''''''': t -> extensionName:string -> any [@@js.call "getExtension"]
    val getFramebufferAttachmentParameter: t -> target:_GLenum -> attachment:_GLenum -> pname:_GLenum -> any [@@js.call "getFramebufferAttachmentParameter"]
    val getParameter: t -> pname:_GLenum -> any [@@js.call "getParameter"]
    val getProgramInfoLog: t -> program:_WebGLProgram -> string or_null [@@js.call "getProgramInfoLog"]
    val getProgramParameter: t -> program:_WebGLProgram -> pname:_GLenum -> any [@@js.call "getProgramParameter"]
    val getRenderbufferParameter: t -> target:_GLenum -> pname:_GLenum -> any [@@js.call "getRenderbufferParameter"]
    val getShaderInfoLog: t -> shader:_WebGLShader -> string or_null [@@js.call "getShaderInfoLog"]
    val getShaderParameter: t -> shader:_WebGLShader -> pname:_GLenum -> any [@@js.call "getShaderParameter"]
    val getShaderPrecisionFormat: t -> shadertype:_GLenum -> precisiontype:_GLenum -> _WebGLShaderPrecisionFormat or_null [@@js.call "getShaderPrecisionFormat"]
    val getShaderSource: t -> shader:_WebGLShader -> string or_null [@@js.call "getShaderSource"]
    val getSupportedExtensions: t -> string list or_null [@@js.call "getSupportedExtensions"]
    val getTexParameter: t -> target:_GLenum -> pname:_GLenum -> any [@@js.call "getTexParameter"]
    val getUniform: t -> program:_WebGLProgram -> location:_WebGLUniformLocation -> any [@@js.call "getUniform"]
    val getUniformLocation: t -> program:_WebGLProgram -> name:string -> _WebGLUniformLocation or_null [@@js.call "getUniformLocation"]
    val getVertexAttrib: t -> index:_GLuint -> pname:_GLenum -> any [@@js.call "getVertexAttrib"]
    val getVertexAttribOffset: t -> index:_GLuint -> pname:_GLenum -> _GLintptr [@@js.call "getVertexAttribOffset"]
    val hint: t -> target:_GLenum -> mode:_GLenum -> unit [@@js.call "hint"]
    val isBuffer: t -> buffer:_WebGLBuffer or_null -> _GLboolean [@@js.call "isBuffer"]
    val isContextLost: t -> bool [@@js.call "isContextLost"]
    val isEnabled: t -> cap:_GLenum -> _GLboolean [@@js.call "isEnabled"]
    val isFramebuffer: t -> framebuffer:_WebGLFramebuffer or_null -> _GLboolean [@@js.call "isFramebuffer"]
    val isProgram: t -> program:_WebGLProgram or_null -> _GLboolean [@@js.call "isProgram"]
    val isRenderbuffer: t -> renderbuffer:_WebGLRenderbuffer or_null -> _GLboolean [@@js.call "isRenderbuffer"]
    val isShader: t -> shader:_WebGLShader or_null -> _GLboolean [@@js.call "isShader"]
    val isTexture: t -> texture:_WebGLTexture or_null -> _GLboolean [@@js.call "isTexture"]
    val lineWidth: t -> width:_GLfloat -> unit [@@js.call "lineWidth"]
    val linkProgram: t -> program:_WebGLProgram -> unit [@@js.call "linkProgram"]
    val pixelStorei: t -> pname:_GLenum -> param:(_GLboolean, _GLint) union2 -> unit [@@js.call "pixelStorei"]
    val polygonOffset: t -> factor:_GLfloat -> units:_GLfloat -> unit [@@js.call "polygonOffset"]
    val renderbufferStorage: t -> target:_GLenum -> internalformat:_GLenum -> width:_GLsizei -> height:_GLsizei -> unit [@@js.call "renderbufferStorage"]
    val sampleCoverage: t -> value:_GLclampf -> invert:_GLboolean -> unit [@@js.call "sampleCoverage"]
    val scissor: t -> x:_GLint -> y:_GLint -> width:_GLsizei -> height:_GLsizei -> unit [@@js.call "scissor"]
    val shaderSource: t -> shader:_WebGLShader -> source:string -> unit [@@js.call "shaderSource"]
    val stencilFunc: t -> func:_GLenum -> ref:_GLint -> mask:_GLuint -> unit [@@js.call "stencilFunc"]
    val stencilFuncSeparate: t -> face:_GLenum -> func:_GLenum -> ref:_GLint -> mask:_GLuint -> unit [@@js.call "stencilFuncSeparate"]
    val stencilMask: t -> mask:_GLuint -> unit [@@js.call "stencilMask"]
    val stencilMaskSeparate: t -> face:_GLenum -> mask:_GLuint -> unit [@@js.call "stencilMaskSeparate"]
    val stencilOp: t -> fail:_GLenum -> zfail:_GLenum -> zpass:_GLenum -> unit [@@js.call "stencilOp"]
    val stencilOpSeparate: t -> face:_GLenum -> fail:_GLenum -> zfail:_GLenum -> zpass:_GLenum -> unit [@@js.call "stencilOpSeparate"]
    val texParameterf: t -> target:_GLenum -> pname:_GLenum -> param:_GLfloat -> unit [@@js.call "texParameterf"]
    val texParameteri: t -> target:_GLenum -> pname:_GLenum -> param:_GLint -> unit [@@js.call "texParameteri"]
    val uniform1f: t -> location:_WebGLUniformLocation or_null -> x:_GLfloat -> unit [@@js.call "uniform1f"]
    val uniform1i: t -> location:_WebGLUniformLocation or_null -> x:_GLint -> unit [@@js.call "uniform1i"]
    val uniform2f: t -> location:_WebGLUniformLocation or_null -> x:_GLfloat -> y:_GLfloat -> unit [@@js.call "uniform2f"]
    val uniform2i: t -> location:_WebGLUniformLocation or_null -> x:_GLint -> y:_GLint -> unit [@@js.call "uniform2i"]
    val uniform3f: t -> location:_WebGLUniformLocation or_null -> x:_GLfloat -> y:_GLfloat -> z:_GLfloat -> unit [@@js.call "uniform3f"]
    val uniform3i: t -> location:_WebGLUniformLocation or_null -> x:_GLint -> y:_GLint -> z:_GLint -> unit [@@js.call "uniform3i"]
    val uniform4f: t -> location:_WebGLUniformLocation or_null -> x:_GLfloat -> y:_GLfloat -> z:_GLfloat -> w:_GLfloat -> unit [@@js.call "uniform4f"]
    val uniform4i: t -> location:_WebGLUniformLocation or_null -> x:_GLint -> y:_GLint -> z:_GLint -> w:_GLint -> unit [@@js.call "uniform4i"]
    val useProgram: t -> program:_WebGLProgram or_null -> unit [@@js.call "useProgram"]
    val validateProgram: t -> program:_WebGLProgram -> unit [@@js.call "validateProgram"]
    val vertexAttrib1f: t -> index:_GLuint -> x:_GLfloat -> unit [@@js.call "vertexAttrib1f"]
    val vertexAttrib1fv: t -> index:_GLuint -> values:_Float32List -> unit [@@js.call "vertexAttrib1fv"]
    val vertexAttrib2f: t -> index:_GLuint -> x:_GLfloat -> y:_GLfloat -> unit [@@js.call "vertexAttrib2f"]
    val vertexAttrib2fv: t -> index:_GLuint -> values:_Float32List -> unit [@@js.call "vertexAttrib2fv"]
    val vertexAttrib3f: t -> index:_GLuint -> x:_GLfloat -> y:_GLfloat -> z:_GLfloat -> unit [@@js.call "vertexAttrib3f"]
    val vertexAttrib3fv: t -> index:_GLuint -> values:_Float32List -> unit [@@js.call "vertexAttrib3fv"]
    val vertexAttrib4f: t -> index:_GLuint -> x:_GLfloat -> y:_GLfloat -> z:_GLfloat -> w:_GLfloat -> unit [@@js.call "vertexAttrib4f"]
    val vertexAttrib4fv: t -> index:_GLuint -> values:_Float32List -> unit [@@js.call "vertexAttrib4fv"]
    val vertexAttribPointer: t -> index:_GLuint -> size:_GLint -> type_:_GLenum -> normalized:_GLboolean -> stride:_GLsizei -> offset:_GLintptr -> unit [@@js.call "vertexAttribPointer"]
    val viewport: t -> x:_GLint -> y:_GLint -> width:_GLsizei -> height:_GLsizei -> unit [@@js.call "viewport"]
    val get_ACTIVE_ATTRIBUTES: t -> _GLenum [@@js.get "ACTIVE_ATTRIBUTES"]
    val get_ACTIVE_TEXTURE: t -> _GLenum [@@js.get "ACTIVE_TEXTURE"]
    val get_ACTIVE_UNIFORMS: t -> _GLenum [@@js.get "ACTIVE_UNIFORMS"]
    val get_ALIASED_LINE_WIDTH_RANGE: t -> _GLenum [@@js.get "ALIASED_LINE_WIDTH_RANGE"]
    val get_ALIASED_POINT_SIZE_RANGE: t -> _GLenum [@@js.get "ALIASED_POINT_SIZE_RANGE"]
    val get_ALPHA: t -> _GLenum [@@js.get "ALPHA"]
    val get_ALPHA_BITS: t -> _GLenum [@@js.get "ALPHA_BITS"]
    val get_ALWAYS: t -> _GLenum [@@js.get "ALWAYS"]
    val get_ARRAY_BUFFER: t -> _GLenum [@@js.get "ARRAY_BUFFER"]
    val get_ARRAY_BUFFER_BINDING: t -> _GLenum [@@js.get "ARRAY_BUFFER_BINDING"]
    val get_ATTACHED_SHADERS: t -> _GLenum [@@js.get "ATTACHED_SHADERS"]
    val get_BACK: t -> _GLenum [@@js.get "BACK"]
    val get_BLEND: t -> _GLenum [@@js.get "BLEND"]
    val get_BLEND_COLOR: t -> _GLenum [@@js.get "BLEND_COLOR"]
    val get_BLEND_DST_ALPHA: t -> _GLenum [@@js.get "BLEND_DST_ALPHA"]
    val get_BLEND_DST_RGB: t -> _GLenum [@@js.get "BLEND_DST_RGB"]
    val get_BLEND_EQUATION: t -> _GLenum [@@js.get "BLEND_EQUATION"]
    val get_BLEND_EQUATION_ALPHA: t -> _GLenum [@@js.get "BLEND_EQUATION_ALPHA"]
    val get_BLEND_EQUATION_RGB: t -> _GLenum [@@js.get "BLEND_EQUATION_RGB"]
    val get_BLEND_SRC_ALPHA: t -> _GLenum [@@js.get "BLEND_SRC_ALPHA"]
    val get_BLEND_SRC_RGB: t -> _GLenum [@@js.get "BLEND_SRC_RGB"]
    val get_BLUE_BITS: t -> _GLenum [@@js.get "BLUE_BITS"]
    val get_BOOL: t -> _GLenum [@@js.get "BOOL"]
    val get_BOOL_VEC2: t -> _GLenum [@@js.get "BOOL_VEC2"]
    val get_BOOL_VEC3: t -> _GLenum [@@js.get "BOOL_VEC3"]
    val get_BOOL_VEC4: t -> _GLenum [@@js.get "BOOL_VEC4"]
    val get_BROWSER_DEFAULT_WEBGL: t -> _GLenum [@@js.get "BROWSER_DEFAULT_WEBGL"]
    val get_BUFFER_SIZE: t -> _GLenum [@@js.get "BUFFER_SIZE"]
    val get_BUFFER_USAGE: t -> _GLenum [@@js.get "BUFFER_USAGE"]
    val get_BYTE: t -> _GLenum [@@js.get "BYTE"]
    val get_CCW: t -> _GLenum [@@js.get "CCW"]
    val get_CLAMP_TO_EDGE: t -> _GLenum [@@js.get "CLAMP_TO_EDGE"]
    val get_COLOR_ATTACHMENT0: t -> _GLenum [@@js.get "COLOR_ATTACHMENT0"]
    val get_COLOR_BUFFER_BIT: t -> _GLenum [@@js.get "COLOR_BUFFER_BIT"]
    val get_COLOR_CLEAR_VALUE: t -> _GLenum [@@js.get "COLOR_CLEAR_VALUE"]
    val get_COLOR_WRITEMASK: t -> _GLenum [@@js.get "COLOR_WRITEMASK"]
    val get_COMPILE_STATUS: t -> _GLenum [@@js.get "COMPILE_STATUS"]
    val get_COMPRESSED_TEXTURE_FORMATS: t -> _GLenum [@@js.get "COMPRESSED_TEXTURE_FORMATS"]
    val get_CONSTANT_ALPHA: t -> _GLenum [@@js.get "CONSTANT_ALPHA"]
    val get_CONSTANT_COLOR: t -> _GLenum [@@js.get "CONSTANT_COLOR"]
    val get_CONTEXT_LOST_WEBGL: t -> _GLenum [@@js.get "CONTEXT_LOST_WEBGL"]
    val get_CULL_FACE: t -> _GLenum [@@js.get "CULL_FACE"]
    val get_CULL_FACE_MODE: t -> _GLenum [@@js.get "CULL_FACE_MODE"]
    val get_CURRENT_PROGRAM: t -> _GLenum [@@js.get "CURRENT_PROGRAM"]
    val get_CURRENT_VERTEX_ATTRIB: t -> _GLenum [@@js.get "CURRENT_VERTEX_ATTRIB"]
    val get_CW: t -> _GLenum [@@js.get "CW"]
    val get_DECR: t -> _GLenum [@@js.get "DECR"]
    val get_DECR_WRAP: t -> _GLenum [@@js.get "DECR_WRAP"]
    val get_DELETE_STATUS: t -> _GLenum [@@js.get "DELETE_STATUS"]
    val get_DEPTH_ATTACHMENT: t -> _GLenum [@@js.get "DEPTH_ATTACHMENT"]
    val get_DEPTH_BITS: t -> _GLenum [@@js.get "DEPTH_BITS"]
    val get_DEPTH_BUFFER_BIT: t -> _GLenum [@@js.get "DEPTH_BUFFER_BIT"]
    val get_DEPTH_CLEAR_VALUE: t -> _GLenum [@@js.get "DEPTH_CLEAR_VALUE"]
    val get_DEPTH_COMPONENT: t -> _GLenum [@@js.get "DEPTH_COMPONENT"]
    val get_DEPTH_COMPONENT16: t -> _GLenum [@@js.get "DEPTH_COMPONENT16"]
    val get_DEPTH_FUNC: t -> _GLenum [@@js.get "DEPTH_FUNC"]
    val get_DEPTH_RANGE: t -> _GLenum [@@js.get "DEPTH_RANGE"]
    val get_DEPTH_STENCIL: t -> _GLenum [@@js.get "DEPTH_STENCIL"]
    val get_DEPTH_STENCIL_ATTACHMENT: t -> _GLenum [@@js.get "DEPTH_STENCIL_ATTACHMENT"]
    val get_DEPTH_TEST: t -> _GLenum [@@js.get "DEPTH_TEST"]
    val get_DEPTH_WRITEMASK: t -> _GLenum [@@js.get "DEPTH_WRITEMASK"]
    val get_DITHER: t -> _GLenum [@@js.get "DITHER"]
    val get_DONT_CARE: t -> _GLenum [@@js.get "DONT_CARE"]
    val get_DST_ALPHA: t -> _GLenum [@@js.get "DST_ALPHA"]
    val get_DST_COLOR: t -> _GLenum [@@js.get "DST_COLOR"]
    val get_DYNAMIC_DRAW: t -> _GLenum [@@js.get "DYNAMIC_DRAW"]
    val get_ELEMENT_ARRAY_BUFFER: t -> _GLenum [@@js.get "ELEMENT_ARRAY_BUFFER"]
    val get_ELEMENT_ARRAY_BUFFER_BINDING: t -> _GLenum [@@js.get "ELEMENT_ARRAY_BUFFER_BINDING"]
    val get_EQUAL: t -> _GLenum [@@js.get "EQUAL"]
    val get_FASTEST: t -> _GLenum [@@js.get "FASTEST"]
    val get_FLOAT: t -> _GLenum [@@js.get "FLOAT"]
    val get_FLOAT_MAT2: t -> _GLenum [@@js.get "FLOAT_MAT2"]
    val get_FLOAT_MAT3: t -> _GLenum [@@js.get "FLOAT_MAT3"]
    val get_FLOAT_MAT4: t -> _GLenum [@@js.get "FLOAT_MAT4"]
    val get_FLOAT_VEC2: t -> _GLenum [@@js.get "FLOAT_VEC2"]
    val get_FLOAT_VEC3: t -> _GLenum [@@js.get "FLOAT_VEC3"]
    val get_FLOAT_VEC4: t -> _GLenum [@@js.get "FLOAT_VEC4"]
    val get_FRAGMENT_SHADER: t -> _GLenum [@@js.get "FRAGMENT_SHADER"]
    val get_FRAMEBUFFER: t -> _GLenum [@@js.get "FRAMEBUFFER"]
    val get_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: t -> _GLenum [@@js.get "FRAMEBUFFER_ATTACHMENT_OBJECT_NAME"]
    val get_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: t -> _GLenum [@@js.get "FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE"]
    val get_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: t -> _GLenum [@@js.get "FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE"]
    val get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: t -> _GLenum [@@js.get "FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL"]
    val get_FRAMEBUFFER_BINDING: t -> _GLenum [@@js.get "FRAMEBUFFER_BINDING"]
    val get_FRAMEBUFFER_COMPLETE: t -> _GLenum [@@js.get "FRAMEBUFFER_COMPLETE"]
    val get_FRAMEBUFFER_INCOMPLETE_ATTACHMENT: t -> _GLenum [@@js.get "FRAMEBUFFER_INCOMPLETE_ATTACHMENT"]
    val get_FRAMEBUFFER_INCOMPLETE_DIMENSIONS: t -> _GLenum [@@js.get "FRAMEBUFFER_INCOMPLETE_DIMENSIONS"]
    val get_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: t -> _GLenum [@@js.get "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"]
    val get_FRAMEBUFFER_UNSUPPORTED: t -> _GLenum [@@js.get "FRAMEBUFFER_UNSUPPORTED"]
    val get_FRONT: t -> _GLenum [@@js.get "FRONT"]
    val get_FRONT_AND_BACK: t -> _GLenum [@@js.get "FRONT_AND_BACK"]
    val get_FRONT_FACE: t -> _GLenum [@@js.get "FRONT_FACE"]
    val get_FUNC_ADD: t -> _GLenum [@@js.get "FUNC_ADD"]
    val get_FUNC_REVERSE_SUBTRACT: t -> _GLenum [@@js.get "FUNC_REVERSE_SUBTRACT"]
    val get_FUNC_SUBTRACT: t -> _GLenum [@@js.get "FUNC_SUBTRACT"]
    val get_GENERATE_MIPMAP_HINT: t -> _GLenum [@@js.get "GENERATE_MIPMAP_HINT"]
    val get_GEQUAL: t -> _GLenum [@@js.get "GEQUAL"]
    val get_GREATER: t -> _GLenum [@@js.get "GREATER"]
    val get_GREEN_BITS: t -> _GLenum [@@js.get "GREEN_BITS"]
    val get_HIGH_FLOAT: t -> _GLenum [@@js.get "HIGH_FLOAT"]
    val get_HIGH_INT: t -> _GLenum [@@js.get "HIGH_INT"]
    val get_IMPLEMENTATION_COLOR_READ_FORMAT: t -> _GLenum [@@js.get "IMPLEMENTATION_COLOR_READ_FORMAT"]
    val get_IMPLEMENTATION_COLOR_READ_TYPE: t -> _GLenum [@@js.get "IMPLEMENTATION_COLOR_READ_TYPE"]
    val get_INCR: t -> _GLenum [@@js.get "INCR"]
    val get_INCR_WRAP: t -> _GLenum [@@js.get "INCR_WRAP"]
    val get_INT: t -> _GLenum [@@js.get "INT"]
    val get_INT_VEC2: t -> _GLenum [@@js.get "INT_VEC2"]
    val get_INT_VEC3: t -> _GLenum [@@js.get "INT_VEC3"]
    val get_INT_VEC4: t -> _GLenum [@@js.get "INT_VEC4"]
    val get_INVALID_ENUM: t -> _GLenum [@@js.get "INVALID_ENUM"]
    val get_INVALID_FRAMEBUFFER_OPERATION: t -> _GLenum [@@js.get "INVALID_FRAMEBUFFER_OPERATION"]
    val get_INVALID_OPERATION: t -> _GLenum [@@js.get "INVALID_OPERATION"]
    val get_INVALID_VALUE: t -> _GLenum [@@js.get "INVALID_VALUE"]
    val get_INVERT: t -> _GLenum [@@js.get "INVERT"]
    val get_KEEP: t -> _GLenum [@@js.get "KEEP"]
    val get_LEQUAL: t -> _GLenum [@@js.get "LEQUAL"]
    val get_LESS: t -> _GLenum [@@js.get "LESS"]
    val get_LINEAR: t -> _GLenum [@@js.get "LINEAR"]
    val get_LINEAR_MIPMAP_LINEAR: t -> _GLenum [@@js.get "LINEAR_MIPMAP_LINEAR"]
    val get_LINEAR_MIPMAP_NEAREST: t -> _GLenum [@@js.get "LINEAR_MIPMAP_NEAREST"]
    val get_LINES: t -> _GLenum [@@js.get "LINES"]
    val get_LINE_LOOP: t -> _GLenum [@@js.get "LINE_LOOP"]
    val get_LINE_STRIP: t -> _GLenum [@@js.get "LINE_STRIP"]
    val get_LINE_WIDTH: t -> _GLenum [@@js.get "LINE_WIDTH"]
    val get_LINK_STATUS: t -> _GLenum [@@js.get "LINK_STATUS"]
    val get_LOW_FLOAT: t -> _GLenum [@@js.get "LOW_FLOAT"]
    val get_LOW_INT: t -> _GLenum [@@js.get "LOW_INT"]
    val get_LUMINANCE: t -> _GLenum [@@js.get "LUMINANCE"]
    val get_LUMINANCE_ALPHA: t -> _GLenum [@@js.get "LUMINANCE_ALPHA"]
    val get_MAX_COMBINED_TEXTURE_IMAGE_UNITS: t -> _GLenum [@@js.get "MAX_COMBINED_TEXTURE_IMAGE_UNITS"]
    val get_MAX_CUBE_MAP_TEXTURE_SIZE: t -> _GLenum [@@js.get "MAX_CUBE_MAP_TEXTURE_SIZE"]
    val get_MAX_FRAGMENT_UNIFORM_VECTORS: t -> _GLenum [@@js.get "MAX_FRAGMENT_UNIFORM_VECTORS"]
    val get_MAX_RENDERBUFFER_SIZE: t -> _GLenum [@@js.get "MAX_RENDERBUFFER_SIZE"]
    val get_MAX_TEXTURE_IMAGE_UNITS: t -> _GLenum [@@js.get "MAX_TEXTURE_IMAGE_UNITS"]
    val get_MAX_TEXTURE_SIZE: t -> _GLenum [@@js.get "MAX_TEXTURE_SIZE"]
    val get_MAX_VARYING_VECTORS: t -> _GLenum [@@js.get "MAX_VARYING_VECTORS"]
    val get_MAX_VERTEX_ATTRIBS: t -> _GLenum [@@js.get "MAX_VERTEX_ATTRIBS"]
    val get_MAX_VERTEX_TEXTURE_IMAGE_UNITS: t -> _GLenum [@@js.get "MAX_VERTEX_TEXTURE_IMAGE_UNITS"]
    val get_MAX_VERTEX_UNIFORM_VECTORS: t -> _GLenum [@@js.get "MAX_VERTEX_UNIFORM_VECTORS"]
    val get_MAX_VIEWPORT_DIMS: t -> _GLenum [@@js.get "MAX_VIEWPORT_DIMS"]
    val get_MEDIUM_FLOAT: t -> _GLenum [@@js.get "MEDIUM_FLOAT"]
    val get_MEDIUM_INT: t -> _GLenum [@@js.get "MEDIUM_INT"]
    val get_MIRRORED_REPEAT: t -> _GLenum [@@js.get "MIRRORED_REPEAT"]
    val get_NEAREST: t -> _GLenum [@@js.get "NEAREST"]
    val get_NEAREST_MIPMAP_LINEAR: t -> _GLenum [@@js.get "NEAREST_MIPMAP_LINEAR"]
    val get_NEAREST_MIPMAP_NEAREST: t -> _GLenum [@@js.get "NEAREST_MIPMAP_NEAREST"]
    val get_NEVER: t -> _GLenum [@@js.get "NEVER"]
    val get_NICEST: t -> _GLenum [@@js.get "NICEST"]
    val get_NONE: t -> _GLenum [@@js.get "NONE"]
    val get_NOTEQUAL: t -> _GLenum [@@js.get "NOTEQUAL"]
    val get_NO_ERROR: t -> _GLenum [@@js.get "NO_ERROR"]
    val get_ONE: t -> _GLenum [@@js.get "ONE"]
    val get_ONE_MINUS_CONSTANT_ALPHA: t -> _GLenum [@@js.get "ONE_MINUS_CONSTANT_ALPHA"]
    val get_ONE_MINUS_CONSTANT_COLOR: t -> _GLenum [@@js.get "ONE_MINUS_CONSTANT_COLOR"]
    val get_ONE_MINUS_DST_ALPHA: t -> _GLenum [@@js.get "ONE_MINUS_DST_ALPHA"]
    val get_ONE_MINUS_DST_COLOR: t -> _GLenum [@@js.get "ONE_MINUS_DST_COLOR"]
    val get_ONE_MINUS_SRC_ALPHA: t -> _GLenum [@@js.get "ONE_MINUS_SRC_ALPHA"]
    val get_ONE_MINUS_SRC_COLOR: t -> _GLenum [@@js.get "ONE_MINUS_SRC_COLOR"]
    val get_OUT_OF_MEMORY: t -> _GLenum [@@js.get "OUT_OF_MEMORY"]
    val get_PACK_ALIGNMENT: t -> _GLenum [@@js.get "PACK_ALIGNMENT"]
    val get_POINTS: t -> _GLenum [@@js.get "POINTS"]
    val get_POLYGON_OFFSET_FACTOR: t -> _GLenum [@@js.get "POLYGON_OFFSET_FACTOR"]
    val get_POLYGON_OFFSET_FILL: t -> _GLenum [@@js.get "POLYGON_OFFSET_FILL"]
    val get_POLYGON_OFFSET_UNITS: t -> _GLenum [@@js.get "POLYGON_OFFSET_UNITS"]
    val get_RED_BITS: t -> _GLenum [@@js.get "RED_BITS"]
    val get_RENDERBUFFER: t -> _GLenum [@@js.get "RENDERBUFFER"]
    val get_RENDERBUFFER_ALPHA_SIZE: t -> _GLenum [@@js.get "RENDERBUFFER_ALPHA_SIZE"]
    val get_RENDERBUFFER_BINDING: t -> _GLenum [@@js.get "RENDERBUFFER_BINDING"]
    val get_RENDERBUFFER_BLUE_SIZE: t -> _GLenum [@@js.get "RENDERBUFFER_BLUE_SIZE"]
    val get_RENDERBUFFER_DEPTH_SIZE: t -> _GLenum [@@js.get "RENDERBUFFER_DEPTH_SIZE"]
    val get_RENDERBUFFER_GREEN_SIZE: t -> _GLenum [@@js.get "RENDERBUFFER_GREEN_SIZE"]
    val get_RENDERBUFFER_HEIGHT: t -> _GLenum [@@js.get "RENDERBUFFER_HEIGHT"]
    val get_RENDERBUFFER_INTERNAL_FORMAT: t -> _GLenum [@@js.get "RENDERBUFFER_INTERNAL_FORMAT"]
    val get_RENDERBUFFER_RED_SIZE: t -> _GLenum [@@js.get "RENDERBUFFER_RED_SIZE"]
    val get_RENDERBUFFER_STENCIL_SIZE: t -> _GLenum [@@js.get "RENDERBUFFER_STENCIL_SIZE"]
    val get_RENDERBUFFER_WIDTH: t -> _GLenum [@@js.get "RENDERBUFFER_WIDTH"]
    val get_RENDERER: t -> _GLenum [@@js.get "RENDERER"]
    val get_REPEAT: t -> _GLenum [@@js.get "REPEAT"]
    val get_REPLACE: t -> _GLenum [@@js.get "REPLACE"]
    val get_RGB: t -> _GLenum [@@js.get "RGB"]
    val get_RGB565: t -> _GLenum [@@js.get "RGB565"]
    val get_RGB5_A1: t -> _GLenum [@@js.get "RGB5_A1"]
    val get_RGBA: t -> _GLenum [@@js.get "RGBA"]
    val get_RGBA4: t -> _GLenum [@@js.get "RGBA4"]
    val get_SAMPLER_2D: t -> _GLenum [@@js.get "SAMPLER_2D"]
    val get_SAMPLER_CUBE: t -> _GLenum [@@js.get "SAMPLER_CUBE"]
    val get_SAMPLES: t -> _GLenum [@@js.get "SAMPLES"]
    val get_SAMPLE_ALPHA_TO_COVERAGE: t -> _GLenum [@@js.get "SAMPLE_ALPHA_TO_COVERAGE"]
    val get_SAMPLE_BUFFERS: t -> _GLenum [@@js.get "SAMPLE_BUFFERS"]
    val get_SAMPLE_COVERAGE: t -> _GLenum [@@js.get "SAMPLE_COVERAGE"]
    val get_SAMPLE_COVERAGE_INVERT: t -> _GLenum [@@js.get "SAMPLE_COVERAGE_INVERT"]
    val get_SAMPLE_COVERAGE_VALUE: t -> _GLenum [@@js.get "SAMPLE_COVERAGE_VALUE"]
    val get_SCISSOR_BOX: t -> _GLenum [@@js.get "SCISSOR_BOX"]
    val get_SCISSOR_TEST: t -> _GLenum [@@js.get "SCISSOR_TEST"]
    val get_SHADER_TYPE: t -> _GLenum [@@js.get "SHADER_TYPE"]
    val get_SHADING_LANGUAGE_VERSION: t -> _GLenum [@@js.get "SHADING_LANGUAGE_VERSION"]
    val get_SHORT: t -> _GLenum [@@js.get "SHORT"]
    val get_SRC_ALPHA: t -> _GLenum [@@js.get "SRC_ALPHA"]
    val get_SRC_ALPHA_SATURATE: t -> _GLenum [@@js.get "SRC_ALPHA_SATURATE"]
    val get_SRC_COLOR: t -> _GLenum [@@js.get "SRC_COLOR"]
    val get_STATIC_DRAW: t -> _GLenum [@@js.get "STATIC_DRAW"]
    val get_STENCIL_ATTACHMENT: t -> _GLenum [@@js.get "STENCIL_ATTACHMENT"]
    val get_STENCIL_BACK_FAIL: t -> _GLenum [@@js.get "STENCIL_BACK_FAIL"]
    val get_STENCIL_BACK_FUNC: t -> _GLenum [@@js.get "STENCIL_BACK_FUNC"]
    val get_STENCIL_BACK_PASS_DEPTH_FAIL: t -> _GLenum [@@js.get "STENCIL_BACK_PASS_DEPTH_FAIL"]
    val get_STENCIL_BACK_PASS_DEPTH_PASS: t -> _GLenum [@@js.get "STENCIL_BACK_PASS_DEPTH_PASS"]
    val get_STENCIL_BACK_REF: t -> _GLenum [@@js.get "STENCIL_BACK_REF"]
    val get_STENCIL_BACK_VALUE_MASK: t -> _GLenum [@@js.get "STENCIL_BACK_VALUE_MASK"]
    val get_STENCIL_BACK_WRITEMASK: t -> _GLenum [@@js.get "STENCIL_BACK_WRITEMASK"]
    val get_STENCIL_BITS: t -> _GLenum [@@js.get "STENCIL_BITS"]
    val get_STENCIL_BUFFER_BIT: t -> _GLenum [@@js.get "STENCIL_BUFFER_BIT"]
    val get_STENCIL_CLEAR_VALUE: t -> _GLenum [@@js.get "STENCIL_CLEAR_VALUE"]
    val get_STENCIL_FAIL: t -> _GLenum [@@js.get "STENCIL_FAIL"]
    val get_STENCIL_FUNC: t -> _GLenum [@@js.get "STENCIL_FUNC"]
    val get_STENCIL_INDEX8: t -> _GLenum [@@js.get "STENCIL_INDEX8"]
    val get_STENCIL_PASS_DEPTH_FAIL: t -> _GLenum [@@js.get "STENCIL_PASS_DEPTH_FAIL"]
    val get_STENCIL_PASS_DEPTH_PASS: t -> _GLenum [@@js.get "STENCIL_PASS_DEPTH_PASS"]
    val get_STENCIL_REF: t -> _GLenum [@@js.get "STENCIL_REF"]
    val get_STENCIL_TEST: t -> _GLenum [@@js.get "STENCIL_TEST"]
    val get_STENCIL_VALUE_MASK: t -> _GLenum [@@js.get "STENCIL_VALUE_MASK"]
    val get_STENCIL_WRITEMASK: t -> _GLenum [@@js.get "STENCIL_WRITEMASK"]
    val get_STREAM_DRAW: t -> _GLenum [@@js.get "STREAM_DRAW"]
    val get_SUBPIXEL_BITS: t -> _GLenum [@@js.get "SUBPIXEL_BITS"]
    val get_TEXTURE: t -> _GLenum [@@js.get "TEXTURE"]
    val get_TEXTURE0: t -> _GLenum [@@js.get "TEXTURE0"]
    val get_TEXTURE1: t -> _GLenum [@@js.get "TEXTURE1"]
    val get_TEXTURE10: t -> _GLenum [@@js.get "TEXTURE10"]
    val get_TEXTURE11: t -> _GLenum [@@js.get "TEXTURE11"]
    val get_TEXTURE12: t -> _GLenum [@@js.get "TEXTURE12"]
    val get_TEXTURE13: t -> _GLenum [@@js.get "TEXTURE13"]
    val get_TEXTURE14: t -> _GLenum [@@js.get "TEXTURE14"]
    val get_TEXTURE15: t -> _GLenum [@@js.get "TEXTURE15"]
    val get_TEXTURE16: t -> _GLenum [@@js.get "TEXTURE16"]
    val get_TEXTURE17: t -> _GLenum [@@js.get "TEXTURE17"]
    val get_TEXTURE18: t -> _GLenum [@@js.get "TEXTURE18"]
    val get_TEXTURE19: t -> _GLenum [@@js.get "TEXTURE19"]
    val get_TEXTURE2: t -> _GLenum [@@js.get "TEXTURE2"]
    val get_TEXTURE20: t -> _GLenum [@@js.get "TEXTURE20"]
    val get_TEXTURE21: t -> _GLenum [@@js.get "TEXTURE21"]
    val get_TEXTURE22: t -> _GLenum [@@js.get "TEXTURE22"]
    val get_TEXTURE23: t -> _GLenum [@@js.get "TEXTURE23"]
    val get_TEXTURE24: t -> _GLenum [@@js.get "TEXTURE24"]
    val get_TEXTURE25: t -> _GLenum [@@js.get "TEXTURE25"]
    val get_TEXTURE26: t -> _GLenum [@@js.get "TEXTURE26"]
    val get_TEXTURE27: t -> _GLenum [@@js.get "TEXTURE27"]
    val get_TEXTURE28: t -> _GLenum [@@js.get "TEXTURE28"]
    val get_TEXTURE29: t -> _GLenum [@@js.get "TEXTURE29"]
    val get_TEXTURE3: t -> _GLenum [@@js.get "TEXTURE3"]
    val get_TEXTURE30: t -> _GLenum [@@js.get "TEXTURE30"]
    val get_TEXTURE31: t -> _GLenum [@@js.get "TEXTURE31"]
    val get_TEXTURE4: t -> _GLenum [@@js.get "TEXTURE4"]
    val get_TEXTURE5: t -> _GLenum [@@js.get "TEXTURE5"]
    val get_TEXTURE6: t -> _GLenum [@@js.get "TEXTURE6"]
    val get_TEXTURE7: t -> _GLenum [@@js.get "TEXTURE7"]
    val get_TEXTURE8: t -> _GLenum [@@js.get "TEXTURE8"]
    val get_TEXTURE9: t -> _GLenum [@@js.get "TEXTURE9"]
    val get_TEXTURE_2D: t -> _GLenum [@@js.get "TEXTURE_2D"]
    val get_TEXTURE_BINDING_2D: t -> _GLenum [@@js.get "TEXTURE_BINDING_2D"]
    val get_TEXTURE_BINDING_CUBE_MAP: t -> _GLenum [@@js.get "TEXTURE_BINDING_CUBE_MAP"]
    val get_TEXTURE_CUBE_MAP: t -> _GLenum [@@js.get "TEXTURE_CUBE_MAP"]
    val get_TEXTURE_CUBE_MAP_NEGATIVE_X: t -> _GLenum [@@js.get "TEXTURE_CUBE_MAP_NEGATIVE_X"]
    val get_TEXTURE_CUBE_MAP_NEGATIVE_Y: t -> _GLenum [@@js.get "TEXTURE_CUBE_MAP_NEGATIVE_Y"]
    val get_TEXTURE_CUBE_MAP_NEGATIVE_Z: t -> _GLenum [@@js.get "TEXTURE_CUBE_MAP_NEGATIVE_Z"]
    val get_TEXTURE_CUBE_MAP_POSITIVE_X: t -> _GLenum [@@js.get "TEXTURE_CUBE_MAP_POSITIVE_X"]
    val get_TEXTURE_CUBE_MAP_POSITIVE_Y: t -> _GLenum [@@js.get "TEXTURE_CUBE_MAP_POSITIVE_Y"]
    val get_TEXTURE_CUBE_MAP_POSITIVE_Z: t -> _GLenum [@@js.get "TEXTURE_CUBE_MAP_POSITIVE_Z"]
    val get_TEXTURE_MAG_FILTER: t -> _GLenum [@@js.get "TEXTURE_MAG_FILTER"]
    val get_TEXTURE_MIN_FILTER: t -> _GLenum [@@js.get "TEXTURE_MIN_FILTER"]
    val get_TEXTURE_WRAP_S: t -> _GLenum [@@js.get "TEXTURE_WRAP_S"]
    val get_TEXTURE_WRAP_T: t -> _GLenum [@@js.get "TEXTURE_WRAP_T"]
    val get_TRIANGLES: t -> _GLenum [@@js.get "TRIANGLES"]
    val get_TRIANGLE_FAN: t -> _GLenum [@@js.get "TRIANGLE_FAN"]
    val get_TRIANGLE_STRIP: t -> _GLenum [@@js.get "TRIANGLE_STRIP"]
    val get_UNPACK_ALIGNMENT: t -> _GLenum [@@js.get "UNPACK_ALIGNMENT"]
    val get_UNPACK_COLORSPACE_CONVERSION_WEBGL: t -> _GLenum [@@js.get "UNPACK_COLORSPACE_CONVERSION_WEBGL"]
    val get_UNPACK_FLIP_Y_WEBGL: t -> _GLenum [@@js.get "UNPACK_FLIP_Y_WEBGL"]
    val get_UNPACK_PREMULTIPLY_ALPHA_WEBGL: t -> _GLenum [@@js.get "UNPACK_PREMULTIPLY_ALPHA_WEBGL"]
    val get_UNSIGNED_BYTE: t -> _GLenum [@@js.get "UNSIGNED_BYTE"]
    val get_UNSIGNED_INT: t -> _GLenum [@@js.get "UNSIGNED_INT"]
    val get_UNSIGNED_SHORT: t -> _GLenum [@@js.get "UNSIGNED_SHORT"]
    val get_UNSIGNED_SHORT_4_4_4_4: t -> _GLenum [@@js.get "UNSIGNED_SHORT_4_4_4_4"]
    val get_UNSIGNED_SHORT_5_5_5_1: t -> _GLenum [@@js.get "UNSIGNED_SHORT_5_5_5_1"]
    val get_UNSIGNED_SHORT_5_6_5: t -> _GLenum [@@js.get "UNSIGNED_SHORT_5_6_5"]
    val get_VALIDATE_STATUS: t -> _GLenum [@@js.get "VALIDATE_STATUS"]
    val get_VENDOR: t -> _GLenum [@@js.get "VENDOR"]
    val get_VERSION: t -> _GLenum [@@js.get "VERSION"]
    val get_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: t -> _GLenum [@@js.get "VERTEX_ATTRIB_ARRAY_BUFFER_BINDING"]
    val get_VERTEX_ATTRIB_ARRAY_ENABLED: t -> _GLenum [@@js.get "VERTEX_ATTRIB_ARRAY_ENABLED"]
    val get_VERTEX_ATTRIB_ARRAY_NORMALIZED: t -> _GLenum [@@js.get "VERTEX_ATTRIB_ARRAY_NORMALIZED"]
    val get_VERTEX_ATTRIB_ARRAY_POINTER: t -> _GLenum [@@js.get "VERTEX_ATTRIB_ARRAY_POINTER"]
    val get_VERTEX_ATTRIB_ARRAY_SIZE: t -> _GLenum [@@js.get "VERTEX_ATTRIB_ARRAY_SIZE"]
    val get_VERTEX_ATTRIB_ARRAY_STRIDE: t -> _GLenum [@@js.get "VERTEX_ATTRIB_ARRAY_STRIDE"]
    val get_VERTEX_ATTRIB_ARRAY_TYPE: t -> _GLenum [@@js.get "VERTEX_ATTRIB_ARRAY_TYPE"]
    val get_VERTEX_SHADER: t -> _GLenum [@@js.get "VERTEX_SHADER"]
    val get_VIEWPORT: t -> _GLenum [@@js.get "VIEWPORT"]
    val get_ZERO: t -> _GLenum [@@js.get "ZERO"]
  end
  module[@js.scope "WebGLRenderingContextOverloads"] WebGLRenderingContextOverloads : sig
    type t = _WebGLRenderingContextOverloads
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val bufferData: t -> target:_GLenum -> size:_GLsizeiptr -> usage:_GLenum -> unit [@@js.call "bufferData"]
    val bufferData': t -> target:_GLenum -> data:_BufferSource or_null -> usage:_GLenum -> unit [@@js.call "bufferData"]
    val bufferSubData: t -> target:_GLenum -> offset:_GLintptr -> data:_BufferSource -> unit [@@js.call "bufferSubData"]
    val compressedTexImage2D: t -> target:_GLenum -> level:_GLint -> internalformat:_GLenum -> width:_GLsizei -> height:_GLsizei -> border:_GLint -> data:ArrayBufferView.t_0 -> unit [@@js.call "compressedTexImage2D"]
    val compressedTexSubImage2D: t -> target:_GLenum -> level:_GLint -> xoffset:_GLint -> yoffset:_GLint -> width:_GLsizei -> height:_GLsizei -> format:_GLenum -> data:ArrayBufferView.t_0 -> unit [@@js.call "compressedTexSubImage2D"]
    val readPixels: t -> x:_GLint -> y:_GLint -> width:_GLsizei -> height:_GLsizei -> format:_GLenum -> type_:_GLenum -> pixels:ArrayBufferView.t_0 or_null -> unit [@@js.call "readPixels"]
    val texImage2D: t -> target:_GLenum -> level:_GLint -> internalformat:_GLint -> width:_GLsizei -> height:_GLsizei -> border:_GLint -> format:_GLenum -> type_:_GLenum -> pixels:ArrayBufferView.t_0 or_null -> unit [@@js.call "texImage2D"]
    val texImage2D': t -> target:_GLenum -> level:_GLint -> internalformat:_GLint -> format:_GLenum -> type_:_GLenum -> source:_TexImageSource -> unit [@@js.call "texImage2D"]
    val texSubImage2D: t -> target:_GLenum -> level:_GLint -> xoffset:_GLint -> yoffset:_GLint -> width:_GLsizei -> height:_GLsizei -> format:_GLenum -> type_:_GLenum -> pixels:ArrayBufferView.t_0 or_null -> unit [@@js.call "texSubImage2D"]
    val texSubImage2D': t -> target:_GLenum -> level:_GLint -> xoffset:_GLint -> yoffset:_GLint -> format:_GLenum -> type_:_GLenum -> source:_TexImageSource -> unit [@@js.call "texSubImage2D"]
    val uniform1fv: t -> location:_WebGLUniformLocation or_null -> v:_Float32List -> unit [@@js.call "uniform1fv"]
    val uniform1iv: t -> location:_WebGLUniformLocation or_null -> v:_Int32List -> unit [@@js.call "uniform1iv"]
    val uniform2fv: t -> location:_WebGLUniformLocation or_null -> v:_Float32List -> unit [@@js.call "uniform2fv"]
    val uniform2iv: t -> location:_WebGLUniformLocation or_null -> v:_Int32List -> unit [@@js.call "uniform2iv"]
    val uniform3fv: t -> location:_WebGLUniformLocation or_null -> v:_Float32List -> unit [@@js.call "uniform3fv"]
    val uniform3iv: t -> location:_WebGLUniformLocation or_null -> v:_Int32List -> unit [@@js.call "uniform3iv"]
    val uniform4fv: t -> location:_WebGLUniformLocation or_null -> v:_Float32List -> unit [@@js.call "uniform4fv"]
    val uniform4iv: t -> location:_WebGLUniformLocation or_null -> v:_Int32List -> unit [@@js.call "uniform4iv"]
    val uniformMatrix2fv: t -> location:_WebGLUniformLocation or_null -> transpose:_GLboolean -> value:_Float32List -> unit [@@js.call "uniformMatrix2fv"]
    val uniformMatrix3fv: t -> location:_WebGLUniformLocation or_null -> transpose:_GLboolean -> value:_Float32List -> unit [@@js.call "uniformMatrix3fv"]
    val uniformMatrix4fv: t -> location:_WebGLUniformLocation or_null -> transpose:_GLboolean -> value:_Float32List -> unit [@@js.call "uniformMatrix4fv"]
  end
  module[@js.scope "WebGLSampler"] WebGLSampler : sig
    type t = _WebGLSampler
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val cast: t -> _WebGLObject [@@js.cast]
  end
  val webGLSampler: anonymous_interface_585 [@@js.global "WebGLSampler"]
  module[@js.scope "WebGLShader"] WebGLShader : sig
    type t = _WebGLShader
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val cast: t -> _WebGLObject [@@js.cast]
  end
  val webGLShader: anonymous_interface_586 [@@js.global "WebGLShader"]
  module[@js.scope "WebGLShaderPrecisionFormat"] WebGLShaderPrecisionFormat : sig
    type t = _WebGLShaderPrecisionFormat
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_precision: t -> _GLint [@@js.get "precision"]
    val get_rangeMax: t -> _GLint [@@js.get "rangeMax"]
    val get_rangeMin: t -> _GLint [@@js.get "rangeMin"]
  end
  val webGLShaderPrecisionFormat: anonymous_interface_587 [@@js.global "WebGLShaderPrecisionFormat"]
  module[@js.scope "WebGLSync"] WebGLSync : sig
    type t = _WebGLSync
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val cast: t -> _WebGLObject [@@js.cast]
  end
  val webGLSync: anonymous_interface_588 [@@js.global "WebGLSync"]
  module[@js.scope "WebGLTexture"] WebGLTexture : sig
    type t = _WebGLTexture
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val cast: t -> _WebGLObject [@@js.cast]
  end
  val webGLTexture: anonymous_interface_589 [@@js.global "WebGLTexture"]
  module[@js.scope "WebGLTransformFeedback"] WebGLTransformFeedback : sig
    type t = _WebGLTransformFeedback
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val cast: t -> _WebGLObject [@@js.cast]
  end
  val webGLTransformFeedback: anonymous_interface_590 [@@js.global "WebGLTransformFeedback"]
  module WebGLUniformLocation : sig
    type t = _WebGLUniformLocation
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  val webGLUniformLocation: anonymous_interface_591 [@@js.global "WebGLUniformLocation"]
  module[@js.scope "WebGLVertexArrayObject"] WebGLVertexArrayObject : sig
    type t = _WebGLVertexArrayObject
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val cast: t -> _WebGLObject [@@js.cast]
  end
  val webGLVertexArrayObject: anonymous_interface_592 [@@js.global "WebGLVertexArrayObject"]
  module[@js.scope "WebGLVertexArrayObjectOES"] WebGLVertexArrayObjectOES : sig
    type t = _WebGLVertexArrayObjectOES
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val cast: t -> _WebGLObject [@@js.cast]
  end
  module[@js.scope "WebKitPoint"] WebKitPoint : sig
    type t = _WebKitPoint
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_x: t -> float [@@js.get "x"]
    val set_x: t -> float -> unit [@@js.set "x"]
    val get_y: t -> float [@@js.get "y"]
    val set_y: t -> float -> unit [@@js.set "y"]
  end
  val webKitPoint: anonymous_interface_593 [@@js.global "WebKitPoint"]
  module[@js.scope "WebSocketEventMap"] WebSocketEventMap : sig
    type t = _WebSocketEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_close: t -> _CloseEvent [@@js.get "close"]
    val set_close: t -> _CloseEvent -> unit [@@js.set "close"]
    val get_error: t -> _Event [@@js.get "error"]
    val set_error: t -> _Event -> unit [@@js.set "error"]
    val get_message: t -> _MessageEvent [@@js.get "message"]
    val set_message: t -> _MessageEvent -> unit [@@js.set "message"]
    val get_open: t -> _Event [@@js.get "open"]
    val set_open: t -> _Event -> unit [@@js.set "open"]
  end
  module[@js.scope "WebSocket"] WebSocket : sig
    type t = _WebSocket
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_binaryType: t -> _BinaryType [@@js.get "binaryType"]
    val set_binaryType: t -> _BinaryType -> unit [@@js.set "binaryType"]
    val get_bufferedAmount: t -> float [@@js.get "bufferedAmount"]
    val get_extensions: t -> string [@@js.get "extensions"]
    val get_onclose: t -> (this:t -> ev:_CloseEvent -> any) or_null [@@js.get "onclose"]
    val set_onclose: t -> (this:t -> ev:_CloseEvent -> any) or_null -> unit [@@js.set "onclose"]
    val get_onerror: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onerror"]
    val set_onerror: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onerror"]
    val get_onmessage: t -> (this:t -> ev:_MessageEvent -> any) or_null [@@js.get "onmessage"]
    val set_onmessage: t -> (this:t -> ev:_MessageEvent -> any) or_null -> unit [@@js.set "onmessage"]
    val get_onopen: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onopen"]
    val set_onopen: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onopen"]
    val get_protocol: t -> string [@@js.get "protocol"]
    val get_readyState: t -> float [@@js.get "readyState"]
    val get_url: t -> string [@@js.get "url"]
    val close: t -> ?code:float -> ?reason:string -> unit -> unit [@@js.call "close"]
    val send: t -> data:(ArrayBufferLike.t_0, ArrayBufferView.t_0, _Blob) union3 or_string -> unit [@@js.call "send"]
    val get_CLOSED: t -> float [@@js.get "CLOSED"]
    val get_CLOSING: t -> float [@@js.get "CLOSING"]
    val get_CONNECTING: t -> float [@@js.get "CONNECTING"]
    val get_OPEN: t -> float [@@js.get "OPEN"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val webSocket: anonymous_interface_594 [@@js.global "WebSocket"]
  module[@js.scope "WheelEvent"] WheelEvent : sig
    type t = _WheelEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_deltaMode: t -> float [@@js.get "deltaMode"]
    val get_deltaX: t -> float [@@js.get "deltaX"]
    val get_deltaY: t -> float [@@js.get "deltaY"]
    val get_deltaZ: t -> float [@@js.get "deltaZ"]
    val get_DOM_DELTA_LINE: t -> float [@@js.get "DOM_DELTA_LINE"]
    val get_DOM_DELTA_PAGE: t -> float [@@js.get "DOM_DELTA_PAGE"]
    val get_DOM_DELTA_PIXEL: t -> float [@@js.get "DOM_DELTA_PIXEL"]
    val cast: t -> _MouseEvent [@@js.cast]
  end
  val wheelEvent: anonymous_interface_595 [@@js.global "WheelEvent"]
  module[@js.scope "WindowEventMap"] WindowEventMap : sig
    type t = _WindowEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_abort: t -> _UIEvent [@@js.get "abort"]
    val set_abort: t -> _UIEvent -> unit [@@js.set "abort"]
    val get_afterprint: t -> _Event [@@js.get "afterprint"]
    val set_afterprint: t -> _Event -> unit [@@js.set "afterprint"]
    val get_beforeprint: t -> _Event [@@js.get "beforeprint"]
    val set_beforeprint: t -> _Event -> unit [@@js.set "beforeprint"]
    val get_beforeunload: t -> _BeforeUnloadEvent [@@js.get "beforeunload"]
    val set_beforeunload: t -> _BeforeUnloadEvent -> unit [@@js.set "beforeunload"]
    val get_blur: t -> _FocusEvent [@@js.get "blur"]
    val set_blur: t -> _FocusEvent -> unit [@@js.set "blur"]
    val get_canplay: t -> _Event [@@js.get "canplay"]
    val set_canplay: t -> _Event -> unit [@@js.set "canplay"]
    val get_canplaythrough: t -> _Event [@@js.get "canplaythrough"]
    val set_canplaythrough: t -> _Event -> unit [@@js.set "canplaythrough"]
    val get_change: t -> _Event [@@js.get "change"]
    val set_change: t -> _Event -> unit [@@js.set "change"]
    val get_click: t -> _MouseEvent [@@js.get "click"]
    val set_click: t -> _MouseEvent -> unit [@@js.set "click"]
    val get_compassneedscalibration: t -> _Event [@@js.get "compassneedscalibration"]
    val set_compassneedscalibration: t -> _Event -> unit [@@js.set "compassneedscalibration"]
    val get_contextmenu: t -> _MouseEvent [@@js.get "contextmenu"]
    val set_contextmenu: t -> _MouseEvent -> unit [@@js.set "contextmenu"]
    val get_dblclick: t -> _MouseEvent [@@js.get "dblclick"]
    val set_dblclick: t -> _MouseEvent -> unit [@@js.set "dblclick"]
    val get_devicelight: t -> _DeviceLightEvent [@@js.get "devicelight"]
    val set_devicelight: t -> _DeviceLightEvent -> unit [@@js.set "devicelight"]
    val get_devicemotion: t -> _DeviceMotionEvent [@@js.get "devicemotion"]
    val set_devicemotion: t -> _DeviceMotionEvent -> unit [@@js.set "devicemotion"]
    val get_deviceorientation: t -> _DeviceOrientationEvent [@@js.get "deviceorientation"]
    val set_deviceorientation: t -> _DeviceOrientationEvent -> unit [@@js.set "deviceorientation"]
    val get_deviceorientationabsolute: t -> _DeviceOrientationEvent [@@js.get "deviceorientationabsolute"]
    val set_deviceorientationabsolute: t -> _DeviceOrientationEvent -> unit [@@js.set "deviceorientationabsolute"]
    val get_drag: t -> _DragEvent [@@js.get "drag"]
    val set_drag: t -> _DragEvent -> unit [@@js.set "drag"]
    val get_dragend: t -> _DragEvent [@@js.get "dragend"]
    val set_dragend: t -> _DragEvent -> unit [@@js.set "dragend"]
    val get_dragenter: t -> _DragEvent [@@js.get "dragenter"]
    val set_dragenter: t -> _DragEvent -> unit [@@js.set "dragenter"]
    val get_dragleave: t -> _DragEvent [@@js.get "dragleave"]
    val set_dragleave: t -> _DragEvent -> unit [@@js.set "dragleave"]
    val get_dragover: t -> _DragEvent [@@js.get "dragover"]
    val set_dragover: t -> _DragEvent -> unit [@@js.set "dragover"]
    val get_dragstart: t -> _DragEvent [@@js.get "dragstart"]
    val set_dragstart: t -> _DragEvent -> unit [@@js.set "dragstart"]
    val get_drop: t -> _DragEvent [@@js.get "drop"]
    val set_drop: t -> _DragEvent -> unit [@@js.set "drop"]
    val get_durationchange: t -> _Event [@@js.get "durationchange"]
    val set_durationchange: t -> _Event -> unit [@@js.set "durationchange"]
    val get_emptied: t -> _Event [@@js.get "emptied"]
    val set_emptied: t -> _Event -> unit [@@js.set "emptied"]
    val get_ended: t -> _Event [@@js.get "ended"]
    val set_ended: t -> _Event -> unit [@@js.set "ended"]
    val get_error: t -> _ErrorEvent [@@js.get "error"]
    val set_error: t -> _ErrorEvent -> unit [@@js.set "error"]
    val get_focus: t -> _FocusEvent [@@js.get "focus"]
    val set_focus: t -> _FocusEvent -> unit [@@js.set "focus"]
    val get_hashchange: t -> _HashChangeEvent [@@js.get "hashchange"]
    val set_hashchange: t -> _HashChangeEvent -> unit [@@js.set "hashchange"]
    val get_input: t -> _Event [@@js.get "input"]
    val set_input: t -> _Event -> unit [@@js.set "input"]
    val get_invalid: t -> _Event [@@js.get "invalid"]
    val set_invalid: t -> _Event -> unit [@@js.set "invalid"]
    val get_keydown: t -> _KeyboardEvent [@@js.get "keydown"]
    val set_keydown: t -> _KeyboardEvent -> unit [@@js.set "keydown"]
    val get_keypress: t -> _KeyboardEvent [@@js.get "keypress"]
    val set_keypress: t -> _KeyboardEvent -> unit [@@js.set "keypress"]
    val get_keyup: t -> _KeyboardEvent [@@js.get "keyup"]
    val set_keyup: t -> _KeyboardEvent -> unit [@@js.set "keyup"]
    val get_load: t -> _Event [@@js.get "load"]
    val set_load: t -> _Event -> unit [@@js.set "load"]
    val get_loadeddata: t -> _Event [@@js.get "loadeddata"]
    val set_loadeddata: t -> _Event -> unit [@@js.set "loadeddata"]
    val get_loadedmetadata: t -> _Event [@@js.get "loadedmetadata"]
    val set_loadedmetadata: t -> _Event -> unit [@@js.set "loadedmetadata"]
    val get_loadstart: t -> _Event [@@js.get "loadstart"]
    val set_loadstart: t -> _Event -> unit [@@js.set "loadstart"]
    val get_message: t -> _MessageEvent [@@js.get "message"]
    val set_message: t -> _MessageEvent -> unit [@@js.set "message"]
    val get_mousedown: t -> _MouseEvent [@@js.get "mousedown"]
    val set_mousedown: t -> _MouseEvent -> unit [@@js.set "mousedown"]
    val get_mouseenter: t -> _MouseEvent [@@js.get "mouseenter"]
    val set_mouseenter: t -> _MouseEvent -> unit [@@js.set "mouseenter"]
    val get_mouseleave: t -> _MouseEvent [@@js.get "mouseleave"]
    val set_mouseleave: t -> _MouseEvent -> unit [@@js.set "mouseleave"]
    val get_mousemove: t -> _MouseEvent [@@js.get "mousemove"]
    val set_mousemove: t -> _MouseEvent -> unit [@@js.set "mousemove"]
    val get_mouseout: t -> _MouseEvent [@@js.get "mouseout"]
    val set_mouseout: t -> _MouseEvent -> unit [@@js.set "mouseout"]
    val get_mouseover: t -> _MouseEvent [@@js.get "mouseover"]
    val set_mouseover: t -> _MouseEvent -> unit [@@js.set "mouseover"]
    val get_mouseup: t -> _MouseEvent [@@js.get "mouseup"]
    val set_mouseup: t -> _MouseEvent -> unit [@@js.set "mouseup"]
    val get_mousewheel: t -> _Event [@@js.get "mousewheel"]
    val set_mousewheel: t -> _Event -> unit [@@js.set "mousewheel"]
    val get_MSGestureChange: t -> _Event [@@js.get "MSGestureChange"]
    val set_MSGestureChange: t -> _Event -> unit [@@js.set "MSGestureChange"]
    val get_MSGestureDoubleTap: t -> _Event [@@js.get "MSGestureDoubleTap"]
    val set_MSGestureDoubleTap: t -> _Event -> unit [@@js.set "MSGestureDoubleTap"]
    val get_MSGestureEnd: t -> _Event [@@js.get "MSGestureEnd"]
    val set_MSGestureEnd: t -> _Event -> unit [@@js.set "MSGestureEnd"]
    val get_MSGestureHold: t -> _Event [@@js.get "MSGestureHold"]
    val set_MSGestureHold: t -> _Event -> unit [@@js.set "MSGestureHold"]
    val get_MSGestureStart: t -> _Event [@@js.get "MSGestureStart"]
    val set_MSGestureStart: t -> _Event -> unit [@@js.set "MSGestureStart"]
    val get_MSGestureTap: t -> _Event [@@js.get "MSGestureTap"]
    val set_MSGestureTap: t -> _Event -> unit [@@js.set "MSGestureTap"]
    val get_MSInertiaStart: t -> _Event [@@js.get "MSInertiaStart"]
    val set_MSInertiaStart: t -> _Event -> unit [@@js.set "MSInertiaStart"]
    val get_MSPointerCancel: t -> _Event [@@js.get "MSPointerCancel"]
    val set_MSPointerCancel: t -> _Event -> unit [@@js.set "MSPointerCancel"]
    val get_MSPointerDown: t -> _Event [@@js.get "MSPointerDown"]
    val set_MSPointerDown: t -> _Event -> unit [@@js.set "MSPointerDown"]
    val get_MSPointerEnter: t -> _Event [@@js.get "MSPointerEnter"]
    val set_MSPointerEnter: t -> _Event -> unit [@@js.set "MSPointerEnter"]
    val get_MSPointerLeave: t -> _Event [@@js.get "MSPointerLeave"]
    val set_MSPointerLeave: t -> _Event -> unit [@@js.set "MSPointerLeave"]
    val get_MSPointerMove: t -> _Event [@@js.get "MSPointerMove"]
    val set_MSPointerMove: t -> _Event -> unit [@@js.set "MSPointerMove"]
    val get_MSPointerOut: t -> _Event [@@js.get "MSPointerOut"]
    val set_MSPointerOut: t -> _Event -> unit [@@js.set "MSPointerOut"]
    val get_MSPointerOver: t -> _Event [@@js.get "MSPointerOver"]
    val set_MSPointerOver: t -> _Event -> unit [@@js.set "MSPointerOver"]
    val get_MSPointerUp: t -> _Event [@@js.get "MSPointerUp"]
    val set_MSPointerUp: t -> _Event -> unit [@@js.set "MSPointerUp"]
    val get_offline: t -> _Event [@@js.get "offline"]
    val set_offline: t -> _Event -> unit [@@js.set "offline"]
    val get_online: t -> _Event [@@js.get "online"]
    val set_online: t -> _Event -> unit [@@js.set "online"]
    val get_orientationchange: t -> _Event [@@js.get "orientationchange"]
    val set_orientationchange: t -> _Event -> unit [@@js.set "orientationchange"]
    val get_pagehide: t -> _PageTransitionEvent [@@js.get "pagehide"]
    val set_pagehide: t -> _PageTransitionEvent -> unit [@@js.set "pagehide"]
    val get_pageshow: t -> _PageTransitionEvent [@@js.get "pageshow"]
    val set_pageshow: t -> _PageTransitionEvent -> unit [@@js.set "pageshow"]
    val get_pause: t -> _Event [@@js.get "pause"]
    val set_pause: t -> _Event -> unit [@@js.set "pause"]
    val get_play: t -> _Event [@@js.get "play"]
    val set_play: t -> _Event -> unit [@@js.set "play"]
    val get_playing: t -> _Event [@@js.get "playing"]
    val set_playing: t -> _Event -> unit [@@js.set "playing"]
    val get_popstate: t -> _PopStateEvent [@@js.get "popstate"]
    val set_popstate: t -> _PopStateEvent -> unit [@@js.set "popstate"]
    val get_progress: t -> _Window _ProgressEvent [@@js.get "progress"]
    val set_progress: t -> _Window _ProgressEvent -> unit [@@js.set "progress"]
    val get_ratechange: t -> _Event [@@js.get "ratechange"]
    val set_ratechange: t -> _Event -> unit [@@js.set "ratechange"]
    val get_readystatechange: t -> _Window _ProgressEvent [@@js.get "readystatechange"]
    val set_readystatechange: t -> _Window _ProgressEvent -> unit [@@js.set "readystatechange"]
    val get_reset: t -> _Event [@@js.get "reset"]
    val set_reset: t -> _Event -> unit [@@js.set "reset"]
    val get_resize: t -> _UIEvent [@@js.get "resize"]
    val set_resize: t -> _UIEvent -> unit [@@js.set "resize"]
    val get_scroll: t -> _Event [@@js.get "scroll"]
    val set_scroll: t -> _Event -> unit [@@js.set "scroll"]
    val get_seeked: t -> _Event [@@js.get "seeked"]
    val set_seeked: t -> _Event -> unit [@@js.set "seeked"]
    val get_seeking: t -> _Event [@@js.get "seeking"]
    val set_seeking: t -> _Event -> unit [@@js.set "seeking"]
    val get_select: t -> _Event [@@js.get "select"]
    val set_select: t -> _Event -> unit [@@js.set "select"]
    val get_stalled: t -> _Event [@@js.get "stalled"]
    val set_stalled: t -> _Event -> unit [@@js.set "stalled"]
    val get_storage: t -> _StorageEvent [@@js.get "storage"]
    val set_storage: t -> _StorageEvent -> unit [@@js.set "storage"]
    val get_submit: t -> _Event [@@js.get "submit"]
    val set_submit: t -> _Event -> unit [@@js.set "submit"]
    val get_suspend: t -> _Event [@@js.get "suspend"]
    val set_suspend: t -> _Event -> unit [@@js.set "suspend"]
    val get_timeupdate: t -> _Event [@@js.get "timeupdate"]
    val set_timeupdate: t -> _Event -> unit [@@js.set "timeupdate"]
    val get_unload: t -> _Event [@@js.get "unload"]
    val set_unload: t -> _Event -> unit [@@js.set "unload"]
    val get_volumechange: t -> _Event [@@js.get "volumechange"]
    val set_volumechange: t -> _Event -> unit [@@js.set "volumechange"]
    val get_vrdisplayactivate: t -> _Event [@@js.get "vrdisplayactivate"]
    val set_vrdisplayactivate: t -> _Event -> unit [@@js.set "vrdisplayactivate"]
    val get_vrdisplayblur: t -> _Event [@@js.get "vrdisplayblur"]
    val set_vrdisplayblur: t -> _Event -> unit [@@js.set "vrdisplayblur"]
    val get_vrdisplayconnect: t -> _Event [@@js.get "vrdisplayconnect"]
    val set_vrdisplayconnect: t -> _Event -> unit [@@js.set "vrdisplayconnect"]
    val get_vrdisplaydeactivate: t -> _Event [@@js.get "vrdisplaydeactivate"]
    val set_vrdisplaydeactivate: t -> _Event -> unit [@@js.set "vrdisplaydeactivate"]
    val get_vrdisplaydisconnect: t -> _Event [@@js.get "vrdisplaydisconnect"]
    val set_vrdisplaydisconnect: t -> _Event -> unit [@@js.set "vrdisplaydisconnect"]
    val get_vrdisplayfocus: t -> _Event [@@js.get "vrdisplayfocus"]
    val set_vrdisplayfocus: t -> _Event -> unit [@@js.set "vrdisplayfocus"]
    val get_vrdisplaypointerrestricted: t -> _Event [@@js.get "vrdisplaypointerrestricted"]
    val set_vrdisplaypointerrestricted: t -> _Event -> unit [@@js.set "vrdisplaypointerrestricted"]
    val get_vrdisplaypointerunrestricted: t -> _Event [@@js.get "vrdisplaypointerunrestricted"]
    val set_vrdisplaypointerunrestricted: t -> _Event -> unit [@@js.set "vrdisplaypointerunrestricted"]
    val get_vrdisplaypresentchange: t -> _Event [@@js.get "vrdisplaypresentchange"]
    val set_vrdisplaypresentchange: t -> _Event -> unit [@@js.set "vrdisplaypresentchange"]
    val get_waiting: t -> _Event [@@js.get "waiting"]
    val set_waiting: t -> _Event -> unit [@@js.set "waiting"]
    val cast: t -> _GlobalEventHandlersEventMap [@@js.cast]
    val cast': t -> _WindowEventHandlersEventMap [@@js.cast]
  end
  module[@js.scope "Window"] Window : sig
    type t = _Window
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_applicationCache: t -> _ApplicationCache [@@js.get "applicationCache"]
    val get_clientInformation: t -> _Navigator [@@js.get "clientInformation"]
    val get_closed: t -> bool [@@js.get "closed"]
    val get_customElements: t -> _CustomElementRegistry [@@js.get "customElements"]
    val set_customElements: t -> _CustomElementRegistry -> unit [@@js.set "customElements"]
    val get_defaultStatus: t -> string [@@js.get "defaultStatus"]
    val set_defaultStatus: t -> string -> unit [@@js.set "defaultStatus"]
    val get_devicePixelRatio: t -> float [@@js.get "devicePixelRatio"]
    val get_doNotTrack: t -> string [@@js.get "doNotTrack"]
    val get_document: t -> _Document [@@js.get "document"]
    val get_event: t -> _Event or_undefined [@@js.get "event"]
    val get_external: t -> _External [@@js.get "external"]
    val get_frameElement: t -> _Element [@@js.get "frameElement"]
    val get_frames: t -> t [@@js.get "frames"]
    val get_history: t -> _History [@@js.get "history"]
    val get_innerHeight: t -> float [@@js.get "innerHeight"]
    val get_innerWidth: t -> float [@@js.get "innerWidth"]
    val get_isSecureContext: t -> bool [@@js.get "isSecureContext"]
    val get_length: t -> float [@@js.get "length"]
    val get_location: t -> _Location [@@js.get "location"]
    val set_location: t -> _Location -> unit [@@js.set "location"]
    val get_locationbar: t -> _BarProp [@@js.get "locationbar"]
    val get_menubar: t -> _BarProp [@@js.get "menubar"]
    val get_msContentScript: t -> _ExtensionScriptApis [@@js.get "msContentScript"]
    val get_name: t -> string [@@js.get "name"]
    val set_name: t -> string -> unit [@@js.set "name"]
    val get_navigator: t -> _Navigator [@@js.get "navigator"]
    val get_offscreenBuffering: t -> bool or_string [@@js.get "offscreenBuffering"]
    val set_offscreenBuffering: t -> bool or_string -> unit [@@js.set "offscreenBuffering"]
    val get_oncompassneedscalibration: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "oncompassneedscalibration"]
    val set_oncompassneedscalibration: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "oncompassneedscalibration"]
    val get_ondevicelight: t -> (this:t -> ev:_DeviceLightEvent -> any) or_null [@@js.get "ondevicelight"]
    val set_ondevicelight: t -> (this:t -> ev:_DeviceLightEvent -> any) or_null -> unit [@@js.set "ondevicelight"]
    val get_ondevicemotion: t -> (this:t -> ev:_DeviceMotionEvent -> any) or_null [@@js.get "ondevicemotion"]
    val set_ondevicemotion: t -> (this:t -> ev:_DeviceMotionEvent -> any) or_null -> unit [@@js.set "ondevicemotion"]
    val get_ondeviceorientation: t -> (this:t -> ev:_DeviceOrientationEvent -> any) or_null [@@js.get "ondeviceorientation"]
    val set_ondeviceorientation: t -> (this:t -> ev:_DeviceOrientationEvent -> any) or_null -> unit [@@js.set "ondeviceorientation"]
    val get_ondeviceorientationabsolute: t -> (this:t -> ev:_DeviceOrientationEvent -> any) or_null [@@js.get "ondeviceorientationabsolute"]
    val set_ondeviceorientationabsolute: t -> (this:t -> ev:_DeviceOrientationEvent -> any) or_null -> unit [@@js.set "ondeviceorientationabsolute"]
    val get_onmousewheel: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onmousewheel"]
    val set_onmousewheel: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onmousewheel"]
    val get_onmsgesturechange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onmsgesturechange"]
    val set_onmsgesturechange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onmsgesturechange"]
    val get_onmsgesturedoubletap: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onmsgesturedoubletap"]
    val set_onmsgesturedoubletap: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onmsgesturedoubletap"]
    val get_onmsgestureend: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onmsgestureend"]
    val set_onmsgestureend: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onmsgestureend"]
    val get_onmsgesturehold: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onmsgesturehold"]
    val set_onmsgesturehold: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onmsgesturehold"]
    val get_onmsgesturestart: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onmsgesturestart"]
    val set_onmsgesturestart: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onmsgesturestart"]
    val get_onmsgesturetap: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onmsgesturetap"]
    val set_onmsgesturetap: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onmsgesturetap"]
    val get_onmsinertiastart: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onmsinertiastart"]
    val set_onmsinertiastart: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onmsinertiastart"]
    val get_onmspointercancel: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onmspointercancel"]
    val set_onmspointercancel: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onmspointercancel"]
    val get_onmspointerdown: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onmspointerdown"]
    val set_onmspointerdown: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onmspointerdown"]
    val get_onmspointerenter: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onmspointerenter"]
    val set_onmspointerenter: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onmspointerenter"]
    val get_onmspointerleave: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onmspointerleave"]
    val set_onmspointerleave: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onmspointerleave"]
    val get_onmspointermove: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onmspointermove"]
    val set_onmspointermove: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onmspointermove"]
    val get_onmspointerout: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onmspointerout"]
    val set_onmspointerout: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onmspointerout"]
    val get_onmspointerover: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onmspointerover"]
    val set_onmspointerover: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onmspointerover"]
    val get_onmspointerup: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onmspointerup"]
    val set_onmspointerup: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onmspointerup"]
    val get_onorientationchange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onorientationchange"]
    val set_onorientationchange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onorientationchange"]
    val get_onreadystatechange: t -> (this:t -> ev:t _ProgressEvent -> any) or_null [@@js.get "onreadystatechange"]
    val set_onreadystatechange: t -> (this:t -> ev:t _ProgressEvent -> any) or_null -> unit [@@js.set "onreadystatechange"]
    val get_onvrdisplayactivate: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onvrdisplayactivate"]
    val set_onvrdisplayactivate: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onvrdisplayactivate"]
    val get_onvrdisplayblur: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onvrdisplayblur"]
    val set_onvrdisplayblur: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onvrdisplayblur"]
    val get_onvrdisplayconnect: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onvrdisplayconnect"]
    val set_onvrdisplayconnect: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onvrdisplayconnect"]
    val get_onvrdisplaydeactivate: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onvrdisplaydeactivate"]
    val set_onvrdisplaydeactivate: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onvrdisplaydeactivate"]
    val get_onvrdisplaydisconnect: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onvrdisplaydisconnect"]
    val set_onvrdisplaydisconnect: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onvrdisplaydisconnect"]
    val get_onvrdisplayfocus: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onvrdisplayfocus"]
    val set_onvrdisplayfocus: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onvrdisplayfocus"]
    val get_onvrdisplaypointerrestricted: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onvrdisplaypointerrestricted"]
    val set_onvrdisplaypointerrestricted: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onvrdisplaypointerrestricted"]
    val get_onvrdisplaypointerunrestricted: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onvrdisplaypointerunrestricted"]
    val set_onvrdisplaypointerunrestricted: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onvrdisplaypointerunrestricted"]
    val get_onvrdisplaypresentchange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onvrdisplaypresentchange"]
    val set_onvrdisplaypresentchange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onvrdisplaypresentchange"]
    val get_opener: t -> any [@@js.get "opener"]
    val set_opener: t -> any -> unit [@@js.set "opener"]
    val get_orientation: t -> string or_number [@@js.get "orientation"]
    val get_outerHeight: t -> float [@@js.get "outerHeight"]
    val get_outerWidth: t -> float [@@js.get "outerWidth"]
    val get_pageXOffset: t -> float [@@js.get "pageXOffset"]
    val get_pageYOffset: t -> float [@@js.get "pageYOffset"]
    val get_parent: t -> t [@@js.get "parent"]
    val get_personalbar: t -> _BarProp [@@js.get "personalbar"]
    val get_screen: t -> _Screen [@@js.get "screen"]
    val get_screenLeft: t -> float [@@js.get "screenLeft"]
    val get_screenTop: t -> float [@@js.get "screenTop"]
    val get_screenX: t -> float [@@js.get "screenX"]
    val get_screenY: t -> float [@@js.get "screenY"]
    val get_scrollX: t -> float [@@js.get "scrollX"]
    val get_scrollY: t -> float [@@js.get "scrollY"]
    val get_scrollbars: t -> _BarProp [@@js.get "scrollbars"]
    val get_self: t -> (t, (* FIXME: unknown type 'typeof globalThis' *)any) intersection2 [@@js.get "self"]
    val get_speechSynthesis: t -> _SpeechSynthesis [@@js.get "speechSynthesis"]
    val get_status: t -> string [@@js.get "status"]
    val set_status: t -> string -> unit [@@js.set "status"]
    val get_statusbar: t -> _BarProp [@@js.get "statusbar"]
    val get_styleMedia: t -> _StyleMedia [@@js.get "styleMedia"]
    val get_toolbar: t -> _BarProp [@@js.get "toolbar"]
    val get_top: t -> t [@@js.get "top"]
    val get_window: t -> (t, (* FIXME: unknown type 'typeof globalThis' *)any) intersection2 [@@js.get "window"]
    val alert: t -> ?message:any -> unit -> unit [@@js.call "alert"]
    val blur: t -> unit [@@js.call "blur"]
    val captureEvents: t -> unit [@@js.call "captureEvents"]
    val close: t -> unit [@@js.call "close"]
    val confirm: t -> ?message:string -> unit -> bool [@@js.call "confirm"]
    val departFocus: t -> navigationReason:_NavigationReason -> origin:_FocusNavigationOrigin -> unit [@@js.call "departFocus"]
    val focus: t -> unit [@@js.call "focus"]
    val getComputedStyle: t -> elt:_Element -> ?pseudoElt:string or_null -> unit -> _CSSStyleDeclaration [@@js.call "getComputedStyle"]
    val getMatchedCSSRules: t -> elt:_Element -> ?pseudoElt:string or_null -> unit -> _CSSRuleList [@@js.call "getMatchedCSSRules"]
    val getSelection: t -> _Selection or_null [@@js.call "getSelection"]
    val matchMedia: t -> query:string -> _MediaQueryList [@@js.call "matchMedia"]
    val moveBy: t -> x:float -> y:float -> unit [@@js.call "moveBy"]
    val moveTo: t -> x:float -> y:float -> unit [@@js.call "moveTo"]
    val msWriteProfilerMark: t -> profilerMarkName:string -> unit [@@js.call "msWriteProfilerMark"]
    val open_: t -> ?url:string -> ?target:string -> ?features:string -> ?replace:bool -> unit -> t or_null [@@js.call "open"]
    val postMessage: t -> message:any -> targetOrigin:string -> ?transfer:_Transferable list -> unit -> unit [@@js.call "postMessage"]
    val print: t -> unit [@@js.call "print"]
    val prompt: t -> ?message:string -> ?_default:string -> unit -> string or_null [@@js.call "prompt"]
    val releaseEvents: t -> unit [@@js.call "releaseEvents"]
    val resizeBy: t -> x:float -> y:float -> unit [@@js.call "resizeBy"]
    val resizeTo: t -> x:float -> y:float -> unit [@@js.call "resizeTo"]
    val scroll: t -> ?options:_ScrollToOptions -> unit -> unit [@@js.call "scroll"]
    val scroll': t -> x:float -> y:float -> unit [@@js.call "scroll"]
    val scrollBy: t -> ?options:_ScrollToOptions -> unit -> unit [@@js.call "scrollBy"]
    val scrollBy': t -> x:float -> y:float -> unit [@@js.call "scrollBy"]
    val scrollTo: t -> ?options:_ScrollToOptions -> unit -> unit [@@js.call "scrollTo"]
    val scrollTo': t -> x:float -> y:float -> unit [@@js.call "scrollTo"]
    val stop: t -> unit [@@js.call "stop"]
    val webkitCancelAnimationFrame: t -> handle:float -> unit [@@js.call "webkitCancelAnimationFrame"]
    val webkitConvertPointFromNodeToPage: t -> node:_Node -> pt:_WebKitPoint -> _WebKitPoint [@@js.call "webkitConvertPointFromNodeToPage"]
    val webkitConvertPointFromPageToNode: t -> node:_Node -> pt:_WebKitPoint -> _WebKitPoint [@@js.call "webkitConvertPointFromPageToNode"]
    val webkitRequestAnimationFrame: t -> callback:_FrameRequestCallback -> float [@@js.call "webkitRequestAnimationFrame"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val get: t -> float -> t [@@js.index_get]
    val set: t -> float -> t -> unit [@@js.index_set]
    val cast: t -> _EventTarget [@@js.cast]
    val cast': t -> _AnimationFrameProvider [@@js.cast]
    val cast'': t -> _GlobalEventHandlers [@@js.cast]
    val cast''': t -> _WindowConsole [@@js.cast]
    val cast'''': t -> _WindowEventHandlers [@@js.cast]
    val cast''''': t -> _WindowLocalStorage [@@js.cast]
    val cast'''''': t -> _WindowOrWorkerGlobalScope [@@js.cast]
    val cast''''''': t -> _WindowSessionStorage [@@js.cast]
  end
  val window: anonymous_interface_596 [@@js.global "Window"]
  module[@js.scope "WindowConsole"] WindowConsole : sig
    type t = _WindowConsole
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_console: t -> _Console [@@js.get "console"]
  end
  module[@js.scope "WindowEventHandlersEventMap"] WindowEventHandlersEventMap : sig
    type t = _WindowEventHandlersEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_afterprint: t -> _Event [@@js.get "afterprint"]
    val set_afterprint: t -> _Event -> unit [@@js.set "afterprint"]
    val get_beforeprint: t -> _Event [@@js.get "beforeprint"]
    val set_beforeprint: t -> _Event -> unit [@@js.set "beforeprint"]
    val get_beforeunload: t -> _BeforeUnloadEvent [@@js.get "beforeunload"]
    val set_beforeunload: t -> _BeforeUnloadEvent -> unit [@@js.set "beforeunload"]
    val get_hashchange: t -> _HashChangeEvent [@@js.get "hashchange"]
    val set_hashchange: t -> _HashChangeEvent -> unit [@@js.set "hashchange"]
    val get_languagechange: t -> _Event [@@js.get "languagechange"]
    val set_languagechange: t -> _Event -> unit [@@js.set "languagechange"]
    val get_message: t -> _MessageEvent [@@js.get "message"]
    val set_message: t -> _MessageEvent -> unit [@@js.set "message"]
    val get_messageerror: t -> _MessageEvent [@@js.get "messageerror"]
    val set_messageerror: t -> _MessageEvent -> unit [@@js.set "messageerror"]
    val get_offline: t -> _Event [@@js.get "offline"]
    val set_offline: t -> _Event -> unit [@@js.set "offline"]
    val get_online: t -> _Event [@@js.get "online"]
    val set_online: t -> _Event -> unit [@@js.set "online"]
    val get_pagehide: t -> _PageTransitionEvent [@@js.get "pagehide"]
    val set_pagehide: t -> _PageTransitionEvent -> unit [@@js.set "pagehide"]
    val get_pageshow: t -> _PageTransitionEvent [@@js.get "pageshow"]
    val set_pageshow: t -> _PageTransitionEvent -> unit [@@js.set "pageshow"]
    val get_popstate: t -> _PopStateEvent [@@js.get "popstate"]
    val set_popstate: t -> _PopStateEvent -> unit [@@js.set "popstate"]
    val get_rejectionhandled: t -> _PromiseRejectionEvent [@@js.get "rejectionhandled"]
    val set_rejectionhandled: t -> _PromiseRejectionEvent -> unit [@@js.set "rejectionhandled"]
    val get_storage: t -> _StorageEvent [@@js.get "storage"]
    val set_storage: t -> _StorageEvent -> unit [@@js.set "storage"]
    val get_unhandledrejection: t -> _PromiseRejectionEvent [@@js.get "unhandledrejection"]
    val set_unhandledrejection: t -> _PromiseRejectionEvent -> unit [@@js.set "unhandledrejection"]
    val get_unload: t -> _Event [@@js.get "unload"]
    val set_unload: t -> _Event -> unit [@@js.set "unload"]
  end
  module[@js.scope "WindowEventHandlers"] WindowEventHandlers : sig
    type t = _WindowEventHandlers
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_onafterprint: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onafterprint"]
    val set_onafterprint: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onafterprint"]
    val get_onbeforeprint: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onbeforeprint"]
    val set_onbeforeprint: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onbeforeprint"]
    val get_onbeforeunload: t -> (this:t -> ev:_BeforeUnloadEvent -> any) or_null [@@js.get "onbeforeunload"]
    val set_onbeforeunload: t -> (this:t -> ev:_BeforeUnloadEvent -> any) or_null -> unit [@@js.set "onbeforeunload"]
    val get_onhashchange: t -> (this:t -> ev:_HashChangeEvent -> any) or_null [@@js.get "onhashchange"]
    val set_onhashchange: t -> (this:t -> ev:_HashChangeEvent -> any) or_null -> unit [@@js.set "onhashchange"]
    val get_onlanguagechange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onlanguagechange"]
    val set_onlanguagechange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onlanguagechange"]
    val get_onmessage: t -> (this:t -> ev:_MessageEvent -> any) or_null [@@js.get "onmessage"]
    val set_onmessage: t -> (this:t -> ev:_MessageEvent -> any) or_null -> unit [@@js.set "onmessage"]
    val get_onmessageerror: t -> (this:t -> ev:_MessageEvent -> any) or_null [@@js.get "onmessageerror"]
    val set_onmessageerror: t -> (this:t -> ev:_MessageEvent -> any) or_null -> unit [@@js.set "onmessageerror"]
    val get_onoffline: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onoffline"]
    val set_onoffline: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onoffline"]
    val get_ononline: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "ononline"]
    val set_ononline: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "ononline"]
    val get_onpagehide: t -> (this:t -> ev:_PageTransitionEvent -> any) or_null [@@js.get "onpagehide"]
    val set_onpagehide: t -> (this:t -> ev:_PageTransitionEvent -> any) or_null -> unit [@@js.set "onpagehide"]
    val get_onpageshow: t -> (this:t -> ev:_PageTransitionEvent -> any) or_null [@@js.get "onpageshow"]
    val set_onpageshow: t -> (this:t -> ev:_PageTransitionEvent -> any) or_null -> unit [@@js.set "onpageshow"]
    val get_onpopstate: t -> (this:t -> ev:_PopStateEvent -> any) or_null [@@js.get "onpopstate"]
    val set_onpopstate: t -> (this:t -> ev:_PopStateEvent -> any) or_null -> unit [@@js.set "onpopstate"]
    val get_onrejectionhandled: t -> (this:t -> ev:_PromiseRejectionEvent -> any) or_null [@@js.get "onrejectionhandled"]
    val set_onrejectionhandled: t -> (this:t -> ev:_PromiseRejectionEvent -> any) or_null -> unit [@@js.set "onrejectionhandled"]
    val get_onstorage: t -> (this:t -> ev:_StorageEvent -> any) or_null [@@js.get "onstorage"]
    val set_onstorage: t -> (this:t -> ev:_StorageEvent -> any) or_null -> unit [@@js.set "onstorage"]
    val get_onunhandledrejection: t -> (this:t -> ev:_PromiseRejectionEvent -> any) or_null [@@js.get "onunhandledrejection"]
    val set_onunhandledrejection: t -> (this:t -> ev:_PromiseRejectionEvent -> any) or_null -> unit [@@js.set "onunhandledrejection"]
    val get_onunload: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onunload"]
    val set_onunload: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onunload"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
  end
  module[@js.scope "WindowLocalStorage"] WindowLocalStorage : sig
    type t = _WindowLocalStorage
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_localStorage: t -> _Storage [@@js.get "localStorage"]
  end
  module[@js.scope "WindowOrWorkerGlobalScope"] WindowOrWorkerGlobalScope : sig
    type t = _WindowOrWorkerGlobalScope
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_caches: t -> _CacheStorage [@@js.get "caches"]
    val get_crypto: t -> _Crypto [@@js.get "crypto"]
    val get_indexedDB: t -> _IDBFactory [@@js.get "indexedDB"]
    val get_origin: t -> string [@@js.get "origin"]
    val get_performance: t -> _Performance [@@js.get "performance"]
    val atob: t -> data:string -> string [@@js.call "atob"]
    val btoa: t -> data:string -> string [@@js.call "btoa"]
    val clearInterval: t -> ?handle:float -> unit -> unit [@@js.call "clearInterval"]
    val clearTimeout: t -> ?handle:float -> unit -> unit [@@js.call "clearTimeout"]
    val createImageBitmap: t -> image:_ImageBitmapSource -> _ImageBitmap Promise.t_1 [@@js.call "createImageBitmap"]
    val createImageBitmap': t -> image:_ImageBitmapSource -> sx:float -> sy:float -> sw:float -> sh:float -> _ImageBitmap Promise.t_1 [@@js.call "createImageBitmap"]
    val fetch: t -> input:_RequestInfo -> ?init:_RequestInit -> unit -> _Response Promise.t_1 [@@js.call "fetch"]
    val queueMicrotask: t -> callback:_VoidFunction -> unit [@@js.call "queueMicrotask"]
    val setInterval: t -> handler:_TimerHandler -> ?timeout:float -> arguments:(any list [@js.variadic]) -> float [@@js.call "setInterval"]
    val setTimeout: t -> handler:_TimerHandler -> ?timeout:float -> arguments:(any list [@js.variadic]) -> float [@@js.call "setTimeout"]
  end
  module[@js.scope "WindowSessionStorage"] WindowSessionStorage : sig
    type t = _WindowSessionStorage
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_sessionStorage: t -> _Storage [@@js.get "sessionStorage"]
  end
  module[@js.scope "WorkerEventMap"] WorkerEventMap : sig
    type t = _WorkerEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_message: t -> _MessageEvent [@@js.get "message"]
    val set_message: t -> _MessageEvent -> unit [@@js.set "message"]
    val cast: t -> _AbstractWorkerEventMap [@@js.cast]
  end
  module[@js.scope "Worker"] Worker : sig
    type t = _Worker
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_onmessage: t -> (this:t -> ev:_MessageEvent -> any) or_null [@@js.get "onmessage"]
    val set_onmessage: t -> (this:t -> ev:_MessageEvent -> any) or_null -> unit [@@js.set "onmessage"]
    val postMessage: t -> message:any -> transfer:_Transferable list -> unit [@@js.call "postMessage"]
    val postMessage': t -> message:any -> ?options:_PostMessageOptions -> unit -> unit [@@js.call "postMessage"]
    val terminate: t -> unit [@@js.call "terminate"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
    val cast': t -> _AbstractWorker [@@js.cast]
  end
  val worker: anonymous_interface_597 [@@js.global "Worker"]
  module[@js.scope "Worklet"] Worklet : sig
    type t = _Worklet
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val addModule: t -> moduleURL:string -> ?options:_WorkletOptions -> unit -> unit Promise.t_1 [@@js.call "addModule"]
  end
  val worklet: anonymous_interface_598 [@@js.global "Worklet"]
  module[@js.scope "WritableStream"] WritableStream : sig
    type 'W t = 'W _WritableStream
    val t_to_js: ('W -> Ojs.t) -> 'W t -> Ojs.t
    val t_of_js: (Ojs.t -> 'W) -> Ojs.t -> 'W t
    type 'W t_1 = 'W t
    val t_1_to_js: ('W -> Ojs.t) -> 'W t_1 -> Ojs.t
    val t_1_of_js: (Ojs.t -> 'W) -> Ojs.t -> 'W t_1
    type t_0 = any t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_locked: 'W t -> bool [@@js.get "locked"]
    val abort: 'W t -> ?reason:any -> unit -> unit Promise.t_1 [@@js.call "abort"]
    val getWriter: 'W t -> 'W _WritableStreamDefaultWriter [@@js.call "getWriter"]
  end
  val writableStream: anonymous_interface_599 [@@js.global "WritableStream"]
  module[@js.scope "WritableStreamDefaultController"] WritableStreamDefaultController : sig
    type t = _WritableStreamDefaultController
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val error: t -> ?error:any -> unit -> unit [@@js.call "error"]
  end
  module[@js.scope "WritableStreamDefaultWriter"] WritableStreamDefaultWriter : sig
    type 'W t = 'W _WritableStreamDefaultWriter
    val t_to_js: ('W -> Ojs.t) -> 'W t -> Ojs.t
    val t_of_js: (Ojs.t -> 'W) -> Ojs.t -> 'W t
    type 'W t_1 = 'W t
    val t_1_to_js: ('W -> Ojs.t) -> 'W t_1 -> Ojs.t
    val t_1_of_js: (Ojs.t -> 'W) -> Ojs.t -> 'W t_1
    type t_0 = any t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_closed: 'W t -> unit Promise.t_1 [@@js.get "closed"]
    val get_desiredSize: 'W t -> float or_null [@@js.get "desiredSize"]
    val get_ready: 'W t -> unit Promise.t_1 [@@js.get "ready"]
    val abort: 'W t -> ?reason:any -> unit -> unit Promise.t_1 [@@js.call "abort"]
    val close: 'W t -> unit Promise.t_1 [@@js.call "close"]
    val releaseLock: 'W t -> unit [@@js.call "releaseLock"]
    val write: 'W t -> chunk:'W -> unit Promise.t_1 [@@js.call "write"]
  end
  module[@js.scope "XMLDocument"] XMLDocument : sig
    type t = _XMLDocument
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _Document [@@js.cast]
  end
  val xMLDocument: anonymous_interface_600 [@@js.global "XMLDocument"]
  module[@js.scope "XMLHttpRequestEventMap"] XMLHttpRequestEventMap : sig
    type t = _XMLHttpRequestEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_readystatechange: t -> _Event [@@js.get "readystatechange"]
    val set_readystatechange: t -> _Event -> unit [@@js.set "readystatechange"]
    val cast: t -> _XMLHttpRequestEventTargetEventMap [@@js.cast]
  end
  module[@js.scope "XMLHttpRequest"] XMLHttpRequest : sig
    type t = _XMLHttpRequest
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_onreadystatechange: t -> (this:t -> ev:_Event -> any) or_null [@@js.get "onreadystatechange"]
    val set_onreadystatechange: t -> (this:t -> ev:_Event -> any) or_null -> unit [@@js.set "onreadystatechange"]
    val get_readyState: t -> float [@@js.get "readyState"]
    val get_response: t -> any [@@js.get "response"]
    val get_responseText: t -> string [@@js.get "responseText"]
    val get_responseType: t -> _XMLHttpRequestResponseType [@@js.get "responseType"]
    val set_responseType: t -> _XMLHttpRequestResponseType -> unit [@@js.set "responseType"]
    val get_responseURL: t -> string [@@js.get "responseURL"]
    val get_responseXML: t -> _Document or_null [@@js.get "responseXML"]
    val get_status: t -> float [@@js.get "status"]
    val get_statusText: t -> string [@@js.get "statusText"]
    val get_timeout: t -> float [@@js.get "timeout"]
    val set_timeout: t -> float -> unit [@@js.set "timeout"]
    val get_upload: t -> _XMLHttpRequestUpload [@@js.get "upload"]
    val get_withCredentials: t -> bool [@@js.get "withCredentials"]
    val set_withCredentials: t -> bool -> unit [@@js.set "withCredentials"]
    val abort: t -> unit [@@js.call "abort"]
    val getAllResponseHeaders: t -> string [@@js.call "getAllResponseHeaders"]
    val getResponseHeader: t -> name:string -> string or_null [@@js.call "getResponseHeader"]
    val open_: t -> method_:string -> url:string -> unit [@@js.call "open"]
    val open_': t -> method_:string -> url:string -> async:bool -> ?username:string or_null -> ?password:string or_null -> unit -> unit [@@js.call "open"]
    val overrideMimeType: t -> mime:string -> unit [@@js.call "overrideMimeType"]
    val send: t -> ?body:(_BodyInit, _Document) union2 or_null -> unit -> unit [@@js.call "send"]
    val setRequestHeader: t -> name:string -> value:string -> unit [@@js.call "setRequestHeader"]
    val get_DONE: t -> float [@@js.get "DONE"]
    val get_HEADERS_RECEIVED: t -> float [@@js.get "HEADERS_RECEIVED"]
    val get_LOADING: t -> float [@@js.get "LOADING"]
    val get_OPENED: t -> float [@@js.get "OPENED"]
    val get_UNSENT: t -> float [@@js.get "UNSENT"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _XMLHttpRequestEventTarget [@@js.cast]
  end
  val xMLHttpRequest: anonymous_interface_601 [@@js.global "XMLHttpRequest"]
  module[@js.scope "XMLHttpRequestEventTargetEventMap"] XMLHttpRequestEventTargetEventMap : sig
    type t = _XMLHttpRequestEventTargetEventMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_abort: t -> _XMLHttpRequestEventTarget _ProgressEvent [@@js.get "abort"]
    val set_abort: t -> _XMLHttpRequestEventTarget _ProgressEvent -> unit [@@js.set "abort"]
    val get_error: t -> _XMLHttpRequestEventTarget _ProgressEvent [@@js.get "error"]
    val set_error: t -> _XMLHttpRequestEventTarget _ProgressEvent -> unit [@@js.set "error"]
    val get_load: t -> _XMLHttpRequestEventTarget _ProgressEvent [@@js.get "load"]
    val set_load: t -> _XMLHttpRequestEventTarget _ProgressEvent -> unit [@@js.set "load"]
    val get_loadend: t -> _XMLHttpRequestEventTarget _ProgressEvent [@@js.get "loadend"]
    val set_loadend: t -> _XMLHttpRequestEventTarget _ProgressEvent -> unit [@@js.set "loadend"]
    val get_loadstart: t -> _XMLHttpRequestEventTarget _ProgressEvent [@@js.get "loadstart"]
    val set_loadstart: t -> _XMLHttpRequestEventTarget _ProgressEvent -> unit [@@js.set "loadstart"]
    val get_progress: t -> _XMLHttpRequestEventTarget _ProgressEvent [@@js.get "progress"]
    val set_progress: t -> _XMLHttpRequestEventTarget _ProgressEvent -> unit [@@js.set "progress"]
    val get_timeout: t -> _XMLHttpRequestEventTarget _ProgressEvent [@@js.get "timeout"]
    val set_timeout: t -> _XMLHttpRequestEventTarget _ProgressEvent -> unit [@@js.set "timeout"]
  end
  module[@js.scope "XMLHttpRequestEventTarget"] XMLHttpRequestEventTarget : sig
    type t = _XMLHttpRequestEventTarget
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_onabort: t -> (this:_XMLHttpRequest -> ev:_EventTarget _ProgressEvent -> any) or_null [@@js.get "onabort"]
    val set_onabort: t -> (this:_XMLHttpRequest -> ev:_EventTarget _ProgressEvent -> any) or_null -> unit [@@js.set "onabort"]
    val get_onerror: t -> (this:_XMLHttpRequest -> ev:_EventTarget _ProgressEvent -> any) or_null [@@js.get "onerror"]
    val set_onerror: t -> (this:_XMLHttpRequest -> ev:_EventTarget _ProgressEvent -> any) or_null -> unit [@@js.set "onerror"]
    val get_onload: t -> (this:_XMLHttpRequest -> ev:_EventTarget _ProgressEvent -> any) or_null [@@js.get "onload"]
    val set_onload: t -> (this:_XMLHttpRequest -> ev:_EventTarget _ProgressEvent -> any) or_null -> unit [@@js.set "onload"]
    val get_onloadend: t -> (this:_XMLHttpRequest -> ev:_EventTarget _ProgressEvent -> any) or_null [@@js.get "onloadend"]
    val set_onloadend: t -> (this:_XMLHttpRequest -> ev:_EventTarget _ProgressEvent -> any) or_null -> unit [@@js.set "onloadend"]
    val get_onloadstart: t -> (this:_XMLHttpRequest -> ev:_EventTarget _ProgressEvent -> any) or_null [@@js.get "onloadstart"]
    val set_onloadstart: t -> (this:_XMLHttpRequest -> ev:_EventTarget _ProgressEvent -> any) or_null -> unit [@@js.set "onloadstart"]
    val get_onprogress: t -> (this:_XMLHttpRequest -> ev:_EventTarget _ProgressEvent -> any) or_null [@@js.get "onprogress"]
    val set_onprogress: t -> (this:_XMLHttpRequest -> ev:_EventTarget _ProgressEvent -> any) or_null -> unit [@@js.set "onprogress"]
    val get_ontimeout: t -> (this:_XMLHttpRequest -> ev:_EventTarget _ProgressEvent -> any) or_null [@@js.get "ontimeout"]
    val set_ontimeout: t -> (this:_XMLHttpRequest -> ev:_EventTarget _ProgressEvent -> any) or_null -> unit [@@js.set "ontimeout"]
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _EventTarget [@@js.cast]
  end
  val xMLHttpRequestEventTarget: anonymous_interface_602 [@@js.global "XMLHttpRequestEventTarget"]
  module[@js.scope "XMLHttpRequestUpload"] XMLHttpRequestUpload : sig
    type t = _XMLHttpRequestUpload
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _XMLHttpRequestEventTarget [@@js.cast]
  end
  val xMLHttpRequestUpload: anonymous_interface_603 [@@js.global "XMLHttpRequestUpload"]
  module[@js.scope "XMLSerializer"] XMLSerializer : sig
    type t = _XMLSerializer
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val serializeToString: t -> root:_Node -> string [@@js.call "serializeToString"]
  end
  val xMLSerializer: anonymous_interface_604 [@@js.global "XMLSerializer"]
  module[@js.scope "XPathEvaluator"] XPathEvaluator : sig
    type t = _XPathEvaluator
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val cast: t -> _XPathEvaluatorBase [@@js.cast]
  end
  val xPathEvaluator: anonymous_interface_605 [@@js.global "XPathEvaluator"]
  module[@js.scope "XPathEvaluatorBase"] XPathEvaluatorBase : sig
    type t = _XPathEvaluatorBase
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val createExpression: t -> expression:string -> ?resolver:_XPathNSResolver or_null -> unit -> _XPathExpression [@@js.call "createExpression"]
    val createNSResolver: t -> nodeResolver:_Node -> _XPathNSResolver [@@js.call "createNSResolver"]
    val evaluate: t -> expression:string -> contextNode:_Node -> ?resolver:_XPathNSResolver or_null -> ?type_:float -> ?result:_XPathResult or_null -> unit -> _XPathResult [@@js.call "evaluate"]
  end
  module[@js.scope "XPathExpression"] XPathExpression : sig
    type t = _XPathExpression
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val evaluate: t -> contextNode:_Node -> ?type_:float -> ?result:_XPathResult or_null -> unit -> _XPathResult [@@js.call "evaluate"]
  end
  val xPathExpression: anonymous_interface_606 [@@js.global "XPathExpression"]
  module[@js.scope "XPathResult"] XPathResult : sig
    type t = _XPathResult
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_booleanValue: t -> bool [@@js.get "booleanValue"]
    val get_invalidIteratorState: t -> bool [@@js.get "invalidIteratorState"]
    val get_numberValue: t -> float [@@js.get "numberValue"]
    val get_resultType: t -> float [@@js.get "resultType"]
    val get_singleNodeValue: t -> _Node or_null [@@js.get "singleNodeValue"]
    val get_snapshotLength: t -> float [@@js.get "snapshotLength"]
    val get_stringValue: t -> string [@@js.get "stringValue"]
    val iterateNext: t -> _Node or_null [@@js.call "iterateNext"]
    val snapshotItem: t -> index:float -> _Node or_null [@@js.call "snapshotItem"]
    val get_ANY_TYPE: t -> float [@@js.get "ANY_TYPE"]
    val get_ANY_UNORDERED_NODE_TYPE: t -> float [@@js.get "ANY_UNORDERED_NODE_TYPE"]
    val get_BOOLEAN_TYPE: t -> float [@@js.get "BOOLEAN_TYPE"]
    val get_FIRST_ORDERED_NODE_TYPE: t -> float [@@js.get "FIRST_ORDERED_NODE_TYPE"]
    val get_NUMBER_TYPE: t -> float [@@js.get "NUMBER_TYPE"]
    val get_ORDERED_NODE_ITERATOR_TYPE: t -> float [@@js.get "ORDERED_NODE_ITERATOR_TYPE"]
    val get_ORDERED_NODE_SNAPSHOT_TYPE: t -> float [@@js.get "ORDERED_NODE_SNAPSHOT_TYPE"]
    val get_STRING_TYPE: t -> float [@@js.get "STRING_TYPE"]
    val get_UNORDERED_NODE_ITERATOR_TYPE: t -> float [@@js.get "UNORDERED_NODE_ITERATOR_TYPE"]
    val get_UNORDERED_NODE_SNAPSHOT_TYPE: t -> float [@@js.get "UNORDERED_NODE_SNAPSHOT_TYPE"]
  end
  val xPathResult: anonymous_interface_607 [@@js.global "XPathResult"]
  module[@js.scope "XSLTProcessor"] XSLTProcessor : sig
    type t = _XSLTProcessor
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val clearParameters: t -> unit [@@js.call "clearParameters"]
    val getParameter: t -> namespaceURI:string -> localName:string -> any [@@js.call "getParameter"]
    val importStylesheet: t -> style:_Node -> unit [@@js.call "importStylesheet"]
    val removeParameter: t -> namespaceURI:string -> localName:string -> unit [@@js.call "removeParameter"]
    val reset: t -> unit [@@js.call "reset"]
    val setParameter: t -> namespaceURI:string -> localName:string -> value:any -> unit [@@js.call "setParameter"]
    val transformToDocument: t -> source:_Node -> _Document [@@js.call "transformToDocument"]
    val transformToFragment: t -> source:_Node -> document:_Document -> _DocumentFragment [@@js.call "transformToFragment"]
  end
  val xSLTProcessor: anonymous_interface_608 [@@js.global "XSLTProcessor"]
  module[@js.scope "webkitRTCPeerConnection"] WebkitRTCPeerConnection : sig
    type t = webkitRTCPeerConnection
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val addEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val addEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.call "addEventListener"]
    val removeEventListener: t -> type_:'K -> listener:(this:t -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val removeEventListener': t -> type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.call "removeEventListener"]
    val cast: t -> _RTCPeerConnection [@@js.cast]
  end
  val webkitRTCPeerConnection: anonymous_interface_609 [@@js.global "webkitRTCPeerConnection"]
  module EventListenerOrEventListenerObject : sig
    type t = _EventListenerOrEventListenerObject
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module[@js.scope "WebAssembly"] WebAssembly : sig
    module CompileError : sig
      type t = _WebAssembly_CompileError
      val t_to_js: t -> Ojs.t
      val t_of_js: Ojs.t -> t
      type t_0 = t
      val t_0_to_js: t_0 -> Ojs.t
      val t_0_of_js: Ojs.t -> t_0
    end
    val compileError: anonymous_interface_72 [@@js.global "CompileError"]
    module[@js.scope "Global"] Global : sig
      type t = _WebAssembly_Global
      val t_to_js: t -> Ojs.t
      val t_of_js: Ojs.t -> t
      type t_0 = t
      val t_0_to_js: t_0 -> Ojs.t
      val t_0_of_js: Ojs.t -> t_0
      val get_value: t -> any [@@js.get "value"]
      val set_value: t -> any -> unit [@@js.set "value"]
      val valueOf: t -> any [@@js.call "valueOf"]
    end
    val global: anonymous_interface_137 [@@js.global "Global"]
    module[@js.scope "Instance"] Instance : sig
      type t = _WebAssembly_Instance
      val t_to_js: t -> Ojs.t
      val t_of_js: Ojs.t -> t
      type t_0 = t
      val t_0_to_js: t_0 -> Ojs.t
      val t_0_of_js: Ojs.t -> t_0
      val get_exports: t -> _WebAssembly_Exports [@@js.get "exports"]
    end
    val instance: anonymous_interface_238 [@@js.global "Instance"]
    module LinkError : sig
      type t = _WebAssembly_LinkError
      val t_to_js: t -> Ojs.t
      val t_of_js: Ojs.t -> t
      type t_0 = t
      val t_0_to_js: t_0 -> Ojs.t
      val t_0_of_js: Ojs.t -> t_0
    end
    val linkError: anonymous_interface_243 [@@js.global "LinkError"]
    module[@js.scope "Memory"] Memory : sig
      type t = _WebAssembly_Memory
      val t_to_js: t -> Ojs.t
      val t_of_js: Ojs.t -> t
      type t_0 = t
      val t_0_to_js: t_0 -> Ojs.t
      val t_0_of_js: Ojs.t -> t_0
      val get_buffer: t -> ArrayBuffer.t_0 [@@js.get "buffer"]
      val grow: t -> delta:float -> float [@@js.call "grow"]
    end
    val memory: anonymous_interface_285 [@@js.global "Memory"]
    module Module : sig
      type t = _WebAssembly_Module
      val t_to_js: t -> Ojs.t
      val t_of_js: Ojs.t -> t
      type t_0 = t
      val t_0_to_js: t_0 -> Ojs.t
      val t_0_of_js: Ojs.t -> t_0
    end
    val module_: anonymous_interface_291 [@@js.global "Module"]
    module RuntimeError : sig
      type t = _WebAssembly_RuntimeError
      val t_to_js: t -> Ojs.t
      val t_of_js: Ojs.t -> t
      type t_0 = t
      val t_0_to_js: t_0 -> Ojs.t
      val t_0_of_js: Ojs.t -> t_0
    end
    val runtimeError: anonymous_interface_382 [@@js.global "RuntimeError"]
    module[@js.scope "Table"] Table : sig
      type t = _WebAssembly_Table
      val t_to_js: t -> Ojs.t
      val t_of_js: Ojs.t -> t
      type t_0 = t
      val t_0_to_js: t_0 -> Ojs.t
      val t_0_of_js: Ojs.t -> t_0
      val get_length: t -> float [@@js.get "length"]
      val get_: t -> index:float -> untyped_function or_null [@@js.call "get"]
      val grow: t -> delta:float -> float [@@js.call "grow"]
      val set_: t -> index:float -> value:untyped_function or_null -> unit [@@js.call "set"]
    end
    val table: anonymous_interface_536 [@@js.global "Table"]
    module[@js.scope "GlobalDescriptor"] GlobalDescriptor : sig
      type t = _WebAssembly_GlobalDescriptor
      val t_to_js: t -> Ojs.t
      val t_of_js: Ojs.t -> t
      type t_0 = t
      val t_0_to_js: t_0 -> Ojs.t
      val t_0_of_js: Ojs.t -> t_0
      val get_mutable: t -> bool [@@js.get "mutable"]
      val set_mutable: t -> bool -> unit [@@js.set "mutable"]
      val get_value: t -> _WebAssembly_ValueType [@@js.get "value"]
      val set_value: t -> _WebAssembly_ValueType -> unit [@@js.set "value"]
    end
    module[@js.scope "MemoryDescriptor"] MemoryDescriptor : sig
      type t = _WebAssembly_MemoryDescriptor
      val t_to_js: t -> Ojs.t
      val t_of_js: Ojs.t -> t
      type t_0 = t
      val t_0_to_js: t_0 -> Ojs.t
      val t_0_of_js: Ojs.t -> t_0
      val get_initial: t -> float [@@js.get "initial"]
      val set_initial: t -> float -> unit [@@js.set "initial"]
      val get_maximum: t -> float [@@js.get "maximum"]
      val set_maximum: t -> float -> unit [@@js.set "maximum"]
    end
    module[@js.scope "ModuleExportDescriptor"] ModuleExportDescriptor : sig
      type t = _WebAssembly_ModuleExportDescriptor
      val t_to_js: t -> Ojs.t
      val t_of_js: Ojs.t -> t
      type t_0 = t
      val t_0_to_js: t_0 -> Ojs.t
      val t_0_of_js: Ojs.t -> t_0
      val get_kind: t -> _WebAssembly_ImportExportKind [@@js.get "kind"]
      val set_kind: t -> _WebAssembly_ImportExportKind -> unit [@@js.set "kind"]
      val get_name: t -> string [@@js.get "name"]
      val set_name: t -> string -> unit [@@js.set "name"]
    end
    module[@js.scope "ModuleImportDescriptor"] ModuleImportDescriptor : sig
      type t = _WebAssembly_ModuleImportDescriptor
      val t_to_js: t -> Ojs.t
      val t_of_js: Ojs.t -> t
      type t_0 = t
      val t_0_to_js: t_0 -> Ojs.t
      val t_0_of_js: Ojs.t -> t_0
      val get_kind: t -> _WebAssembly_ImportExportKind [@@js.get "kind"]
      val set_kind: t -> _WebAssembly_ImportExportKind -> unit [@@js.set "kind"]
      val get_module: t -> string [@@js.get "module"]
      val set_module: t -> string -> unit [@@js.set "module"]
      val get_name: t -> string [@@js.get "name"]
      val set_name: t -> string -> unit [@@js.set "name"]
    end
    module[@js.scope "TableDescriptor"] TableDescriptor : sig
      type t = _WebAssembly_TableDescriptor
      val t_to_js: t -> Ojs.t
      val t_of_js: Ojs.t -> t
      type t_0 = t
      val t_0_to_js: t_0 -> Ojs.t
      val t_0_of_js: Ojs.t -> t_0
      val get_element: t -> _WebAssembly_TableKind [@@js.get "element"]
      val set_element: t -> _WebAssembly_TableKind -> unit [@@js.set "element"]
      val get_initial: t -> float [@@js.get "initial"]
      val set_initial: t -> float -> unit [@@js.set "initial"]
      val get_maximum: t -> float [@@js.get "maximum"]
      val set_maximum: t -> float -> unit [@@js.set "maximum"]
    end
    module[@js.scope "WebAssemblyInstantiatedSource"] WebAssemblyInstantiatedSource : sig
      type t = _WebAssembly_WebAssemblyInstantiatedSource
      val t_to_js: t -> Ojs.t
      val t_of_js: Ojs.t -> t
      type t_0 = t
      val t_0_to_js: t_0 -> Ojs.t
      val t_0_of_js: Ojs.t -> t_0
      val get_instance: t -> _WebAssembly_Instance [@@js.get "instance"]
      val set_instance: t -> _WebAssembly_Instance -> unit [@@js.set "instance"]
      val get_module: t -> _WebAssembly_Module [@@js.get "module"]
      val set_module: t -> _WebAssembly_Module -> unit [@@js.set "module"]
    end
    module ImportExportKind : sig
      type t = _WebAssembly_ImportExportKind
      val t_to_js: t -> Ojs.t
      val t_of_js: Ojs.t -> t
      type t_0 = t
      val t_0_to_js: t_0 -> Ojs.t
      val t_0_of_js: Ojs.t -> t_0
    end
    module TableKind : sig
      type t = _WebAssembly_TableKind
      val t_to_js: t -> Ojs.t
      val t_of_js: Ojs.t -> t
      type t_0 = t
      val t_0_to_js: t_0 -> Ojs.t
      val t_0_of_js: Ojs.t -> t_0
    end
    module ValueType : sig
      type t = _WebAssembly_ValueType
      val t_to_js: t -> Ojs.t
      val t_of_js: Ojs.t -> t
      type t_0 = t
      val t_0_to_js: t_0 -> Ojs.t
      val t_0_of_js: Ojs.t -> t_0
    end
    module ExportValue : sig
      type t = _WebAssembly_ExportValue
      val t_to_js: t -> Ojs.t
      val t_of_js: Ojs.t -> t
      type t_0 = t
      val t_0_to_js: t_0 -> Ojs.t
      val t_0_of_js: Ojs.t -> t_0
    end
    module Exports : sig
      type t = _WebAssembly_Exports
      val t_to_js: t -> Ojs.t
      val t_of_js: Ojs.t -> t
      type t_0 = t
      val t_0_to_js: t_0 -> Ojs.t
      val t_0_of_js: Ojs.t -> t_0
    end
    module ImportValue : sig
      type t = _WebAssembly_ImportValue
      val t_to_js: t -> Ojs.t
      val t_of_js: Ojs.t -> t
      type t_0 = t
      val t_0_to_js: t_0 -> Ojs.t
      val t_0_of_js: Ojs.t -> t_0
    end
    module ModuleImports : sig
      type t = _WebAssembly_ModuleImports
      val t_to_js: t -> Ojs.t
      val t_of_js: Ojs.t -> t
      type t_0 = t
      val t_0_to_js: t_0 -> Ojs.t
      val t_0_of_js: Ojs.t -> t_0
    end
    module Imports : sig
      type t = _WebAssembly_Imports
      val t_to_js: t -> Ojs.t
      val t_of_js: Ojs.t -> t
      type t_0 = t
      val t_0_to_js: t_0 -> Ojs.t
      val t_0_of_js: Ojs.t -> t_0
    end
    val compile: bytes:_BufferSource -> _WebAssembly_Module Promise.t_1 [@@js.global "compile"]
    val compileStreaming: source:(_Response, _Response Promise.t_1) union2 -> _WebAssembly_Module Promise.t_1 [@@js.global "compileStreaming"]
    val instantiate: bytes:_BufferSource -> ?importObject:_WebAssembly_Imports -> unit -> _WebAssembly_WebAssemblyInstantiatedSource Promise.t_1 [@@js.global "instantiate"]
    val instantiate: moduleObject:_WebAssembly_Module -> ?importObject:_WebAssembly_Imports -> unit -> _WebAssembly_Instance Promise.t_1 [@@js.global "instantiate"]
    val instantiateStreaming: response:(_Response, _Response PromiseLike.t_1) union2 -> ?importObject:_WebAssembly_Imports -> unit -> _WebAssembly_WebAssemblyInstantiatedSource Promise.t_1 [@@js.global "instantiateStreaming"]
    val validate: bytes:_BufferSource -> bool [@@js.global "validate"]
  end
  module[@js.scope "BlobCallback"] BlobCallback : sig
    type t = _BlobCallback
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val apply: t -> blob:_Blob or_null -> unit [@@js.apply]
  end
  module[@js.scope "CustomElementConstructor"] CustomElementConstructor : sig
    type t = _CustomElementConstructor
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val create: t -> _HTMLElement [@@js.apply_newable]
  end
  module[@js.scope "DecodeErrorCallback"] DecodeErrorCallback : sig
    type t = _DecodeErrorCallback
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val apply: t -> error:_DOMException -> unit [@@js.apply]
  end
  module[@js.scope "DecodeSuccessCallback"] DecodeSuccessCallback : sig
    type t = _DecodeSuccessCallback
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val apply: t -> decodedData:_AudioBuffer -> unit [@@js.apply]
  end
  module[@js.scope "EventHandlerNonNull"] EventHandlerNonNull : sig
    type t = _EventHandlerNonNull
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val apply: t -> event:_Event -> any [@@js.apply]
  end
  module[@js.scope "ForEachCallback"] ForEachCallback : sig
    type t = _ForEachCallback
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val apply: t -> keyId:((((Float64Array.t_0, Int16Array.t_0, Int32Array.t_0, Int8Array.t_0, Uint16Array.t_0, Uint32Array.t_0, Uint8Array.t_0, Uint8ClampedArray.t_0) union8, Float32Array.t_0) or_, DataView.t_0) or_, ArrayBuffer.t_0) or_ or_null -> status:_MediaKeyStatus -> unit [@@js.apply]
  end
  module[@js.scope "FrameRequestCallback"] FrameRequestCallback : sig
    type t = _FrameRequestCallback
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val apply: t -> time:float -> unit [@@js.apply]
  end
  module[@js.scope "FunctionStringCallback"] FunctionStringCallback : sig
    type t = _FunctionStringCallback
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val apply: t -> data:string -> unit [@@js.apply]
  end
  module[@js.scope "IntersectionObserverCallback"] IntersectionObserverCallback : sig
    type t = _IntersectionObserverCallback
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val apply: t -> entries:_IntersectionObserverEntry list -> observer:_IntersectionObserver -> unit [@@js.apply]
  end
  module[@js.scope "MSLaunchUriCallback"] MSLaunchUriCallback : sig
    type t = _MSLaunchUriCallback
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val apply: t -> unit [@@js.apply]
  end
  module[@js.scope "MutationCallback"] MutationCallback : sig
    type t = _MutationCallback
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val apply: t -> mutations:_MutationRecord list -> observer:_MutationObserver -> unit [@@js.apply]
  end
  module[@js.scope "NavigatorUserMediaErrorCallback"] NavigatorUserMediaErrorCallback : sig
    type t = _NavigatorUserMediaErrorCallback
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val apply: t -> error:_MediaStreamError -> unit [@@js.apply]
  end
  module[@js.scope "NavigatorUserMediaSuccessCallback"] NavigatorUserMediaSuccessCallback : sig
    type t = _NavigatorUserMediaSuccessCallback
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val apply: t -> stream:_MediaStream -> unit [@@js.apply]
  end
  module[@js.scope "NotificationPermissionCallback"] NotificationPermissionCallback : sig
    type t = _NotificationPermissionCallback
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val apply: t -> permission:_NotificationPermission -> unit [@@js.apply]
  end
  module[@js.scope "OnBeforeUnloadEventHandlerNonNull"] OnBeforeUnloadEventHandlerNonNull : sig
    type t = _OnBeforeUnloadEventHandlerNonNull
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val apply: t -> event:_Event -> string or_null [@@js.apply]
  end
  module[@js.scope "OnErrorEventHandlerNonNull"] OnErrorEventHandlerNonNull : sig
    type t = _OnErrorEventHandlerNonNull
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val apply: t -> event:_Event or_string -> ?source:string -> ?lineno:float -> ?colno:float -> ?error:Error.t_0 -> unit -> any [@@js.apply]
  end
  module[@js.scope "PerformanceObserverCallback"] PerformanceObserverCallback : sig
    type t = _PerformanceObserverCallback
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val apply: t -> entries:_PerformanceObserverEntryList -> observer:_PerformanceObserver -> unit [@@js.apply]
  end
  module[@js.scope "PositionCallback"] PositionCallback : sig
    type t = _PositionCallback
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val apply: t -> position:_Position -> unit [@@js.apply]
  end
  module[@js.scope "PositionErrorCallback"] PositionErrorCallback : sig
    type t = _PositionErrorCallback
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val apply: t -> positionError:_PositionError -> unit [@@js.apply]
  end
  module[@js.scope "QueuingStrategySizeCallback"] QueuingStrategySizeCallback : sig
    type 'T t = 'T _QueuingStrategySizeCallback
    val t_to_js: ('T -> Ojs.t) -> 'T t -> Ojs.t
    val t_of_js: (Ojs.t -> 'T) -> Ojs.t -> 'T t
    type 'T t_1 = 'T t
    val t_1_to_js: ('T -> Ojs.t) -> 'T t_1 -> Ojs.t
    val t_1_of_js: (Ojs.t -> 'T) -> Ojs.t -> 'T t_1
    type t_0 = any t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val apply: 'T t -> chunk:'T -> float [@@js.apply]
  end
  module[@js.scope "RTCPeerConnectionErrorCallback"] RTCPeerConnectionErrorCallback : sig
    type t = _RTCPeerConnectionErrorCallback
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val apply: t -> error:_DOMException -> unit [@@js.apply]
  end
  module[@js.scope "RTCSessionDescriptionCallback"] RTCSessionDescriptionCallback : sig
    type t = _RTCSessionDescriptionCallback
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val apply: t -> description:_RTCSessionDescriptionInit -> unit [@@js.apply]
  end
  module[@js.scope "RTCStatsCallback"] RTCStatsCallback : sig
    type t = _RTCStatsCallback
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val apply: t -> report:_RTCStatsReport -> unit [@@js.apply]
  end
  module[@js.scope "ReadableByteStreamControllerCallback"] ReadableByteStreamControllerCallback : sig
    type t = _ReadableByteStreamControllerCallback
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val apply: t -> controller:_ReadableByteStreamController -> (unit, unit PromiseLike.t_1) union2 [@@js.apply]
  end
  module[@js.scope "ReadableStreamDefaultControllerCallback"] ReadableStreamDefaultControllerCallback : sig
    type 'R t = 'R _ReadableStreamDefaultControllerCallback
    val t_to_js: ('R -> Ojs.t) -> 'R t -> Ojs.t
    val t_of_js: (Ojs.t -> 'R) -> Ojs.t -> 'R t
    type 'R t_1 = 'R t
    val t_1_to_js: ('R -> Ojs.t) -> 'R t_1 -> Ojs.t
    val t_1_of_js: (Ojs.t -> 'R) -> Ojs.t -> 'R t_1
    val apply: 'R t -> controller:'R _ReadableStreamDefaultController -> (unit, unit PromiseLike.t_1) union2 [@@js.apply]
  end
  module[@js.scope "ReadableStreamErrorCallback"] ReadableStreamErrorCallback : sig
    type t = _ReadableStreamErrorCallback
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val apply: t -> reason:any -> (unit, unit PromiseLike.t_1) union2 [@@js.apply]
  end
  module[@js.scope "TransformStreamDefaultControllerCallback"] TransformStreamDefaultControllerCallback : sig
    type 'O t = 'O _TransformStreamDefaultControllerCallback
    val t_to_js: ('O -> Ojs.t) -> 'O t -> Ojs.t
    val t_of_js: (Ojs.t -> 'O) -> Ojs.t -> 'O t
    type 'O t_1 = 'O t
    val t_1_to_js: ('O -> Ojs.t) -> 'O t_1 -> Ojs.t
    val t_1_of_js: (Ojs.t -> 'O) -> Ojs.t -> 'O t_1
    val apply: 'O t -> controller:'O _TransformStreamDefaultController -> (unit, unit PromiseLike.t_1) union2 [@@js.apply]
  end
  module[@js.scope "TransformStreamDefaultControllerTransformCallback"] TransformStreamDefaultControllerTransformCallback : sig
    type ('I, 'O) t = ('I, 'O) _TransformStreamDefaultControllerTransformCallback
    val t_to_js: ('I -> Ojs.t) -> ('O -> Ojs.t) -> ('I, 'O) t -> Ojs.t
    val t_of_js: (Ojs.t -> 'I) -> (Ojs.t -> 'O) -> Ojs.t -> ('I, 'O) t
    type ('I, 'O) t_2 = ('I, 'O) t
    val t_2_to_js: ('I -> Ojs.t) -> ('O -> Ojs.t) -> ('I, 'O) t_2 -> Ojs.t
    val t_2_of_js: (Ojs.t -> 'I) -> (Ojs.t -> 'O) -> Ojs.t -> ('I, 'O) t_2
    val apply: ('I, 'O) t -> chunk:'I -> controller:'O _TransformStreamDefaultController -> (unit, unit PromiseLike.t_1) union2 [@@js.apply]
  end
  module[@js.scope "VoidFunction"] VoidFunction : sig
    type t = _VoidFunction
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val apply: t -> unit [@@js.apply]
  end
  module[@js.scope "WritableStreamDefaultControllerCloseCallback"] WritableStreamDefaultControllerCloseCallback : sig
    type t = _WritableStreamDefaultControllerCloseCallback
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val apply: t -> (unit, unit PromiseLike.t_1) union2 [@@js.apply]
  end
  module[@js.scope "WritableStreamDefaultControllerStartCallback"] WritableStreamDefaultControllerStartCallback : sig
    type t = _WritableStreamDefaultControllerStartCallback
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val apply: t -> controller:_WritableStreamDefaultController -> (unit, unit PromiseLike.t_1) union2 [@@js.apply]
  end
  module[@js.scope "WritableStreamDefaultControllerWriteCallback"] WritableStreamDefaultControllerWriteCallback : sig
    type 'W t = 'W _WritableStreamDefaultControllerWriteCallback
    val t_to_js: ('W -> Ojs.t) -> 'W t -> Ojs.t
    val t_of_js: (Ojs.t -> 'W) -> Ojs.t -> 'W t
    type 'W t_1 = 'W t
    val t_1_to_js: ('W -> Ojs.t) -> 'W t_1 -> Ojs.t
    val t_1_of_js: (Ojs.t -> 'W) -> Ojs.t -> 'W t_1
    val apply: 'W t -> chunk:'W -> controller:_WritableStreamDefaultController -> (unit, unit PromiseLike.t_1) union2 [@@js.apply]
  end
  module[@js.scope "WritableStreamErrorCallback"] WritableStreamErrorCallback : sig
    type t = _WritableStreamErrorCallback
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val apply: t -> reason:any -> (unit, unit PromiseLike.t_1) union2 [@@js.apply]
  end
  module[@js.scope "HTMLElementTagNameMap"] HTMLElementTagNameMap : sig
    type t = _HTMLElementTagNameMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_a: t -> _HTMLAnchorElement [@@js.get "a"]
    val set_a: t -> _HTMLAnchorElement -> unit [@@js.set "a"]
    val get_abbr: t -> _HTMLElement [@@js.get "abbr"]
    val set_abbr: t -> _HTMLElement -> unit [@@js.set "abbr"]
    val get_address: t -> _HTMLElement [@@js.get "address"]
    val set_address: t -> _HTMLElement -> unit [@@js.set "address"]
    val get_applet: t -> _HTMLAppletElement [@@js.get "applet"]
    val set_applet: t -> _HTMLAppletElement -> unit [@@js.set "applet"]
    val get_area: t -> _HTMLAreaElement [@@js.get "area"]
    val set_area: t -> _HTMLAreaElement -> unit [@@js.set "area"]
    val get_article: t -> _HTMLElement [@@js.get "article"]
    val set_article: t -> _HTMLElement -> unit [@@js.set "article"]
    val get_aside: t -> _HTMLElement [@@js.get "aside"]
    val set_aside: t -> _HTMLElement -> unit [@@js.set "aside"]
    val get_audio: t -> _HTMLAudioElement [@@js.get "audio"]
    val set_audio: t -> _HTMLAudioElement -> unit [@@js.set "audio"]
    val get_b: t -> _HTMLElement [@@js.get "b"]
    val set_b: t -> _HTMLElement -> unit [@@js.set "b"]
    val get_base: t -> _HTMLBaseElement [@@js.get "base"]
    val set_base: t -> _HTMLBaseElement -> unit [@@js.set "base"]
    val get_basefont: t -> _HTMLBaseFontElement [@@js.get "basefont"]
    val set_basefont: t -> _HTMLBaseFontElement -> unit [@@js.set "basefont"]
    val get_bdi: t -> _HTMLElement [@@js.get "bdi"]
    val set_bdi: t -> _HTMLElement -> unit [@@js.set "bdi"]
    val get_bdo: t -> _HTMLElement [@@js.get "bdo"]
    val set_bdo: t -> _HTMLElement -> unit [@@js.set "bdo"]
    val get_blockquote: t -> _HTMLQuoteElement [@@js.get "blockquote"]
    val set_blockquote: t -> _HTMLQuoteElement -> unit [@@js.set "blockquote"]
    val get_body: t -> _HTMLBodyElement [@@js.get "body"]
    val set_body: t -> _HTMLBodyElement -> unit [@@js.set "body"]
    val get_br: t -> _HTMLBRElement [@@js.get "br"]
    val set_br: t -> _HTMLBRElement -> unit [@@js.set "br"]
    val get_button: t -> _HTMLButtonElement [@@js.get "button"]
    val set_button: t -> _HTMLButtonElement -> unit [@@js.set "button"]
    val get_canvas: t -> _HTMLCanvasElement [@@js.get "canvas"]
    val set_canvas: t -> _HTMLCanvasElement -> unit [@@js.set "canvas"]
    val get_caption: t -> _HTMLTableCaptionElement [@@js.get "caption"]
    val set_caption: t -> _HTMLTableCaptionElement -> unit [@@js.set "caption"]
    val get_cite: t -> _HTMLElement [@@js.get "cite"]
    val set_cite: t -> _HTMLElement -> unit [@@js.set "cite"]
    val get_code: t -> _HTMLElement [@@js.get "code"]
    val set_code: t -> _HTMLElement -> unit [@@js.set "code"]
    val get_col: t -> _HTMLTableColElement [@@js.get "col"]
    val set_col: t -> _HTMLTableColElement -> unit [@@js.set "col"]
    val get_colgroup: t -> _HTMLTableColElement [@@js.get "colgroup"]
    val set_colgroup: t -> _HTMLTableColElement -> unit [@@js.set "colgroup"]
    val get_data: t -> _HTMLDataElement [@@js.get "data"]
    val set_data: t -> _HTMLDataElement -> unit [@@js.set "data"]
    val get_datalist: t -> _HTMLDataListElement [@@js.get "datalist"]
    val set_datalist: t -> _HTMLDataListElement -> unit [@@js.set "datalist"]
    val get_dd: t -> _HTMLElement [@@js.get "dd"]
    val set_dd: t -> _HTMLElement -> unit [@@js.set "dd"]
    val get_del: t -> _HTMLModElement [@@js.get "del"]
    val set_del: t -> _HTMLModElement -> unit [@@js.set "del"]
    val get_details: t -> _HTMLDetailsElement [@@js.get "details"]
    val set_details: t -> _HTMLDetailsElement -> unit [@@js.set "details"]
    val get_dfn: t -> _HTMLElement [@@js.get "dfn"]
    val set_dfn: t -> _HTMLElement -> unit [@@js.set "dfn"]
    val get_dialog: t -> _HTMLDialogElement [@@js.get "dialog"]
    val set_dialog: t -> _HTMLDialogElement -> unit [@@js.set "dialog"]
    val get_dir: t -> _HTMLDirectoryElement [@@js.get "dir"]
    val set_dir: t -> _HTMLDirectoryElement -> unit [@@js.set "dir"]
    val get_div: t -> _HTMLDivElement [@@js.get "div"]
    val set_div: t -> _HTMLDivElement -> unit [@@js.set "div"]
    val get_dl: t -> _HTMLDListElement [@@js.get "dl"]
    val set_dl: t -> _HTMLDListElement -> unit [@@js.set "dl"]
    val get_dt: t -> _HTMLElement [@@js.get "dt"]
    val set_dt: t -> _HTMLElement -> unit [@@js.set "dt"]
    val get_em: t -> _HTMLElement [@@js.get "em"]
    val set_em: t -> _HTMLElement -> unit [@@js.set "em"]
    val get_embed: t -> _HTMLEmbedElement [@@js.get "embed"]
    val set_embed: t -> _HTMLEmbedElement -> unit [@@js.set "embed"]
    val get_fieldset: t -> _HTMLFieldSetElement [@@js.get "fieldset"]
    val set_fieldset: t -> _HTMLFieldSetElement -> unit [@@js.set "fieldset"]
    val get_figcaption: t -> _HTMLElement [@@js.get "figcaption"]
    val set_figcaption: t -> _HTMLElement -> unit [@@js.set "figcaption"]
    val get_figure: t -> _HTMLElement [@@js.get "figure"]
    val set_figure: t -> _HTMLElement -> unit [@@js.set "figure"]
    val get_font: t -> _HTMLFontElement [@@js.get "font"]
    val set_font: t -> _HTMLFontElement -> unit [@@js.set "font"]
    val get_footer: t -> _HTMLElement [@@js.get "footer"]
    val set_footer: t -> _HTMLElement -> unit [@@js.set "footer"]
    val get_form: t -> _HTMLFormElement [@@js.get "form"]
    val set_form: t -> _HTMLFormElement -> unit [@@js.set "form"]
    val get_frame: t -> _HTMLFrameElement [@@js.get "frame"]
    val set_frame: t -> _HTMLFrameElement -> unit [@@js.set "frame"]
    val get_frameset: t -> _HTMLFrameSetElement [@@js.get "frameset"]
    val set_frameset: t -> _HTMLFrameSetElement -> unit [@@js.set "frameset"]
    val get_h1: t -> _HTMLHeadingElement [@@js.get "h1"]
    val set_h1: t -> _HTMLHeadingElement -> unit [@@js.set "h1"]
    val get_h2: t -> _HTMLHeadingElement [@@js.get "h2"]
    val set_h2: t -> _HTMLHeadingElement -> unit [@@js.set "h2"]
    val get_h3: t -> _HTMLHeadingElement [@@js.get "h3"]
    val set_h3: t -> _HTMLHeadingElement -> unit [@@js.set "h3"]
    val get_h4: t -> _HTMLHeadingElement [@@js.get "h4"]
    val set_h4: t -> _HTMLHeadingElement -> unit [@@js.set "h4"]
    val get_h5: t -> _HTMLHeadingElement [@@js.get "h5"]
    val set_h5: t -> _HTMLHeadingElement -> unit [@@js.set "h5"]
    val get_h6: t -> _HTMLHeadingElement [@@js.get "h6"]
    val set_h6: t -> _HTMLHeadingElement -> unit [@@js.set "h6"]
    val get_head: t -> _HTMLHeadElement [@@js.get "head"]
    val set_head: t -> _HTMLHeadElement -> unit [@@js.set "head"]
    val get_header: t -> _HTMLElement [@@js.get "header"]
    val set_header: t -> _HTMLElement -> unit [@@js.set "header"]
    val get_hgroup: t -> _HTMLElement [@@js.get "hgroup"]
    val set_hgroup: t -> _HTMLElement -> unit [@@js.set "hgroup"]
    val get_hr: t -> _HTMLHRElement [@@js.get "hr"]
    val set_hr: t -> _HTMLHRElement -> unit [@@js.set "hr"]
    val get_html: t -> _HTMLHtmlElement [@@js.get "html"]
    val set_html: t -> _HTMLHtmlElement -> unit [@@js.set "html"]
    val get_i: t -> _HTMLElement [@@js.get "i"]
    val set_i: t -> _HTMLElement -> unit [@@js.set "i"]
    val get_iframe: t -> _HTMLIFrameElement [@@js.get "iframe"]
    val set_iframe: t -> _HTMLIFrameElement -> unit [@@js.set "iframe"]
    val get_img: t -> _HTMLImageElement [@@js.get "img"]
    val set_img: t -> _HTMLImageElement -> unit [@@js.set "img"]
    val get_input: t -> _HTMLInputElement [@@js.get "input"]
    val set_input: t -> _HTMLInputElement -> unit [@@js.set "input"]
    val get_ins: t -> _HTMLModElement [@@js.get "ins"]
    val set_ins: t -> _HTMLModElement -> unit [@@js.set "ins"]
    val get_kbd: t -> _HTMLElement [@@js.get "kbd"]
    val set_kbd: t -> _HTMLElement -> unit [@@js.set "kbd"]
    val get_label: t -> _HTMLLabelElement [@@js.get "label"]
    val set_label: t -> _HTMLLabelElement -> unit [@@js.set "label"]
    val get_legend: t -> _HTMLLegendElement [@@js.get "legend"]
    val set_legend: t -> _HTMLLegendElement -> unit [@@js.set "legend"]
    val get_li: t -> _HTMLLIElement [@@js.get "li"]
    val set_li: t -> _HTMLLIElement -> unit [@@js.set "li"]
    val get_link: t -> _HTMLLinkElement [@@js.get "link"]
    val set_link: t -> _HTMLLinkElement -> unit [@@js.set "link"]
    val get_main: t -> _HTMLElement [@@js.get "main"]
    val set_main: t -> _HTMLElement -> unit [@@js.set "main"]
    val get_map: t -> _HTMLMapElement [@@js.get "map"]
    val set_map: t -> _HTMLMapElement -> unit [@@js.set "map"]
    val get_mark: t -> _HTMLElement [@@js.get "mark"]
    val set_mark: t -> _HTMLElement -> unit [@@js.set "mark"]
    val get_marquee: t -> _HTMLMarqueeElement [@@js.get "marquee"]
    val set_marquee: t -> _HTMLMarqueeElement -> unit [@@js.set "marquee"]
    val get_menu: t -> _HTMLMenuElement [@@js.get "menu"]
    val set_menu: t -> _HTMLMenuElement -> unit [@@js.set "menu"]
    val get_meta: t -> _HTMLMetaElement [@@js.get "meta"]
    val set_meta: t -> _HTMLMetaElement -> unit [@@js.set "meta"]
    val get_meter: t -> _HTMLMeterElement [@@js.get "meter"]
    val set_meter: t -> _HTMLMeterElement -> unit [@@js.set "meter"]
    val get_nav: t -> _HTMLElement [@@js.get "nav"]
    val set_nav: t -> _HTMLElement -> unit [@@js.set "nav"]
    val get_noscript: t -> _HTMLElement [@@js.get "noscript"]
    val set_noscript: t -> _HTMLElement -> unit [@@js.set "noscript"]
    val get_object: t -> _HTMLObjectElement [@@js.get "object"]
    val set_object: t -> _HTMLObjectElement -> unit [@@js.set "object"]
    val get_ol: t -> _HTMLOListElement [@@js.get "ol"]
    val set_ol: t -> _HTMLOListElement -> unit [@@js.set "ol"]
    val get_optgroup: t -> _HTMLOptGroupElement [@@js.get "optgroup"]
    val set_optgroup: t -> _HTMLOptGroupElement -> unit [@@js.set "optgroup"]
    val get_option: t -> _HTMLOptionElement [@@js.get "option"]
    val set_option: t -> _HTMLOptionElement -> unit [@@js.set "option"]
    val get_output: t -> _HTMLOutputElement [@@js.get "output"]
    val set_output: t -> _HTMLOutputElement -> unit [@@js.set "output"]
    val get_p: t -> _HTMLParagraphElement [@@js.get "p"]
    val set_p: t -> _HTMLParagraphElement -> unit [@@js.set "p"]
    val get_param: t -> _HTMLParamElement [@@js.get "param"]
    val set_param: t -> _HTMLParamElement -> unit [@@js.set "param"]
    val get_picture: t -> _HTMLPictureElement [@@js.get "picture"]
    val set_picture: t -> _HTMLPictureElement -> unit [@@js.set "picture"]
    val get_pre: t -> _HTMLPreElement [@@js.get "pre"]
    val set_pre: t -> _HTMLPreElement -> unit [@@js.set "pre"]
    val get_progress: t -> _HTMLProgressElement [@@js.get "progress"]
    val set_progress: t -> _HTMLProgressElement -> unit [@@js.set "progress"]
    val get_q: t -> _HTMLQuoteElement [@@js.get "q"]
    val set_q: t -> _HTMLQuoteElement -> unit [@@js.set "q"]
    val get_rp: t -> _HTMLElement [@@js.get "rp"]
    val set_rp: t -> _HTMLElement -> unit [@@js.set "rp"]
    val get_rt: t -> _HTMLElement [@@js.get "rt"]
    val set_rt: t -> _HTMLElement -> unit [@@js.set "rt"]
    val get_ruby: t -> _HTMLElement [@@js.get "ruby"]
    val set_ruby: t -> _HTMLElement -> unit [@@js.set "ruby"]
    val get_s: t -> _HTMLElement [@@js.get "s"]
    val set_s: t -> _HTMLElement -> unit [@@js.set "s"]
    val get_samp: t -> _HTMLElement [@@js.get "samp"]
    val set_samp: t -> _HTMLElement -> unit [@@js.set "samp"]
    val get_script: t -> _HTMLScriptElement [@@js.get "script"]
    val set_script: t -> _HTMLScriptElement -> unit [@@js.set "script"]
    val get_section: t -> _HTMLElement [@@js.get "section"]
    val set_section: t -> _HTMLElement -> unit [@@js.set "section"]
    val get_select: t -> _HTMLSelectElement [@@js.get "select"]
    val set_select: t -> _HTMLSelectElement -> unit [@@js.set "select"]
    val get_slot: t -> _HTMLSlotElement [@@js.get "slot"]
    val set_slot: t -> _HTMLSlotElement -> unit [@@js.set "slot"]
    val get_small: t -> _HTMLElement [@@js.get "small"]
    val set_small: t -> _HTMLElement -> unit [@@js.set "small"]
    val get_source: t -> _HTMLSourceElement [@@js.get "source"]
    val set_source: t -> _HTMLSourceElement -> unit [@@js.set "source"]
    val get_span: t -> _HTMLSpanElement [@@js.get "span"]
    val set_span: t -> _HTMLSpanElement -> unit [@@js.set "span"]
    val get_strong: t -> _HTMLElement [@@js.get "strong"]
    val set_strong: t -> _HTMLElement -> unit [@@js.set "strong"]
    val get_style: t -> _HTMLStyleElement [@@js.get "style"]
    val set_style: t -> _HTMLStyleElement -> unit [@@js.set "style"]
    val get_sub: t -> _HTMLElement [@@js.get "sub"]
    val set_sub: t -> _HTMLElement -> unit [@@js.set "sub"]
    val get_summary: t -> _HTMLElement [@@js.get "summary"]
    val set_summary: t -> _HTMLElement -> unit [@@js.set "summary"]
    val get_sup: t -> _HTMLElement [@@js.get "sup"]
    val set_sup: t -> _HTMLElement -> unit [@@js.set "sup"]
    val get_table: t -> _HTMLTableElement [@@js.get "table"]
    val set_table: t -> _HTMLTableElement -> unit [@@js.set "table"]
    val get_tbody: t -> _HTMLTableSectionElement [@@js.get "tbody"]
    val set_tbody: t -> _HTMLTableSectionElement -> unit [@@js.set "tbody"]
    val get_td: t -> _HTMLTableDataCellElement [@@js.get "td"]
    val set_td: t -> _HTMLTableDataCellElement -> unit [@@js.set "td"]
    val get_template: t -> _HTMLTemplateElement [@@js.get "template"]
    val set_template: t -> _HTMLTemplateElement -> unit [@@js.set "template"]
    val get_textarea: t -> _HTMLTextAreaElement [@@js.get "textarea"]
    val set_textarea: t -> _HTMLTextAreaElement -> unit [@@js.set "textarea"]
    val get_tfoot: t -> _HTMLTableSectionElement [@@js.get "tfoot"]
    val set_tfoot: t -> _HTMLTableSectionElement -> unit [@@js.set "tfoot"]
    val get_th: t -> _HTMLTableHeaderCellElement [@@js.get "th"]
    val set_th: t -> _HTMLTableHeaderCellElement -> unit [@@js.set "th"]
    val get_thead: t -> _HTMLTableSectionElement [@@js.get "thead"]
    val set_thead: t -> _HTMLTableSectionElement -> unit [@@js.set "thead"]
    val get_time: t -> _HTMLTimeElement [@@js.get "time"]
    val set_time: t -> _HTMLTimeElement -> unit [@@js.set "time"]
    val get_title: t -> _HTMLTitleElement [@@js.get "title"]
    val set_title: t -> _HTMLTitleElement -> unit [@@js.set "title"]
    val get_tr: t -> _HTMLTableRowElement [@@js.get "tr"]
    val set_tr: t -> _HTMLTableRowElement -> unit [@@js.set "tr"]
    val get_track: t -> _HTMLTrackElement [@@js.get "track"]
    val set_track: t -> _HTMLTrackElement -> unit [@@js.set "track"]
    val get_u: t -> _HTMLElement [@@js.get "u"]
    val set_u: t -> _HTMLElement -> unit [@@js.set "u"]
    val get_ul: t -> _HTMLUListElement [@@js.get "ul"]
    val set_ul: t -> _HTMLUListElement -> unit [@@js.set "ul"]
    val get_var: t -> _HTMLElement [@@js.get "var"]
    val set_var: t -> _HTMLElement -> unit [@@js.set "var"]
    val get_video: t -> _HTMLVideoElement [@@js.get "video"]
    val set_video: t -> _HTMLVideoElement -> unit [@@js.set "video"]
    val get_wbr: t -> _HTMLElement [@@js.get "wbr"]
    val set_wbr: t -> _HTMLElement -> unit [@@js.set "wbr"]
  end
  module[@js.scope "HTMLElementDeprecatedTagNameMap"] HTMLElementDeprecatedTagNameMap : sig
    type t = _HTMLElementDeprecatedTagNameMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_listing: t -> _HTMLPreElement [@@js.get "listing"]
    val set_listing: t -> _HTMLPreElement -> unit [@@js.set "listing"]
    val get_xmp: t -> _HTMLPreElement [@@js.get "xmp"]
    val set_xmp: t -> _HTMLPreElement -> unit [@@js.set "xmp"]
  end
  module[@js.scope "SVGElementTagNameMap"] SVGElementTagNameMap : sig
    type t = _SVGElementTagNameMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
    val get_a: t -> _SVGAElement [@@js.get "a"]
    val set_a: t -> _SVGAElement -> unit [@@js.set "a"]
    val get_circle: t -> _SVGCircleElement [@@js.get "circle"]
    val set_circle: t -> _SVGCircleElement -> unit [@@js.set "circle"]
    val get_clipPath: t -> _SVGClipPathElement [@@js.get "clipPath"]
    val set_clipPath: t -> _SVGClipPathElement -> unit [@@js.set "clipPath"]
    val get_defs: t -> _SVGDefsElement [@@js.get "defs"]
    val set_defs: t -> _SVGDefsElement -> unit [@@js.set "defs"]
    val get_desc: t -> _SVGDescElement [@@js.get "desc"]
    val set_desc: t -> _SVGDescElement -> unit [@@js.set "desc"]
    val get_ellipse: t -> _SVGEllipseElement [@@js.get "ellipse"]
    val set_ellipse: t -> _SVGEllipseElement -> unit [@@js.set "ellipse"]
    val get_feBlend: t -> _SVGFEBlendElement [@@js.get "feBlend"]
    val set_feBlend: t -> _SVGFEBlendElement -> unit [@@js.set "feBlend"]
    val get_feColorMatrix: t -> _SVGFEColorMatrixElement [@@js.get "feColorMatrix"]
    val set_feColorMatrix: t -> _SVGFEColorMatrixElement -> unit [@@js.set "feColorMatrix"]
    val get_feComponentTransfer: t -> _SVGFEComponentTransferElement [@@js.get "feComponentTransfer"]
    val set_feComponentTransfer: t -> _SVGFEComponentTransferElement -> unit [@@js.set "feComponentTransfer"]
    val get_feComposite: t -> _SVGFECompositeElement [@@js.get "feComposite"]
    val set_feComposite: t -> _SVGFECompositeElement -> unit [@@js.set "feComposite"]
    val get_feConvolveMatrix: t -> _SVGFEConvolveMatrixElement [@@js.get "feConvolveMatrix"]
    val set_feConvolveMatrix: t -> _SVGFEConvolveMatrixElement -> unit [@@js.set "feConvolveMatrix"]
    val get_feDiffuseLighting: t -> _SVGFEDiffuseLightingElement [@@js.get "feDiffuseLighting"]
    val set_feDiffuseLighting: t -> _SVGFEDiffuseLightingElement -> unit [@@js.set "feDiffuseLighting"]
    val get_feDisplacementMap: t -> _SVGFEDisplacementMapElement [@@js.get "feDisplacementMap"]
    val set_feDisplacementMap: t -> _SVGFEDisplacementMapElement -> unit [@@js.set "feDisplacementMap"]
    val get_feDistantLight: t -> _SVGFEDistantLightElement [@@js.get "feDistantLight"]
    val set_feDistantLight: t -> _SVGFEDistantLightElement -> unit [@@js.set "feDistantLight"]
    val get_feFlood: t -> _SVGFEFloodElement [@@js.get "feFlood"]
    val set_feFlood: t -> _SVGFEFloodElement -> unit [@@js.set "feFlood"]
    val get_feFuncA: t -> _SVGFEFuncAElement [@@js.get "feFuncA"]
    val set_feFuncA: t -> _SVGFEFuncAElement -> unit [@@js.set "feFuncA"]
    val get_feFuncB: t -> _SVGFEFuncBElement [@@js.get "feFuncB"]
    val set_feFuncB: t -> _SVGFEFuncBElement -> unit [@@js.set "feFuncB"]
    val get_feFuncG: t -> _SVGFEFuncGElement [@@js.get "feFuncG"]
    val set_feFuncG: t -> _SVGFEFuncGElement -> unit [@@js.set "feFuncG"]
    val get_feFuncR: t -> _SVGFEFuncRElement [@@js.get "feFuncR"]
    val set_feFuncR: t -> _SVGFEFuncRElement -> unit [@@js.set "feFuncR"]
    val get_feGaussianBlur: t -> _SVGFEGaussianBlurElement [@@js.get "feGaussianBlur"]
    val set_feGaussianBlur: t -> _SVGFEGaussianBlurElement -> unit [@@js.set "feGaussianBlur"]
    val get_feImage: t -> _SVGFEImageElement [@@js.get "feImage"]
    val set_feImage: t -> _SVGFEImageElement -> unit [@@js.set "feImage"]
    val get_feMerge: t -> _SVGFEMergeElement [@@js.get "feMerge"]
    val set_feMerge: t -> _SVGFEMergeElement -> unit [@@js.set "feMerge"]
    val get_feMergeNode: t -> _SVGFEMergeNodeElement [@@js.get "feMergeNode"]
    val set_feMergeNode: t -> _SVGFEMergeNodeElement -> unit [@@js.set "feMergeNode"]
    val get_feMorphology: t -> _SVGFEMorphologyElement [@@js.get "feMorphology"]
    val set_feMorphology: t -> _SVGFEMorphologyElement -> unit [@@js.set "feMorphology"]
    val get_feOffset: t -> _SVGFEOffsetElement [@@js.get "feOffset"]
    val set_feOffset: t -> _SVGFEOffsetElement -> unit [@@js.set "feOffset"]
    val get_fePointLight: t -> _SVGFEPointLightElement [@@js.get "fePointLight"]
    val set_fePointLight: t -> _SVGFEPointLightElement -> unit [@@js.set "fePointLight"]
    val get_feSpecularLighting: t -> _SVGFESpecularLightingElement [@@js.get "feSpecularLighting"]
    val set_feSpecularLighting: t -> _SVGFESpecularLightingElement -> unit [@@js.set "feSpecularLighting"]
    val get_feSpotLight: t -> _SVGFESpotLightElement [@@js.get "feSpotLight"]
    val set_feSpotLight: t -> _SVGFESpotLightElement -> unit [@@js.set "feSpotLight"]
    val get_feTile: t -> _SVGFETileElement [@@js.get "feTile"]
    val set_feTile: t -> _SVGFETileElement -> unit [@@js.set "feTile"]
    val get_feTurbulence: t -> _SVGFETurbulenceElement [@@js.get "feTurbulence"]
    val set_feTurbulence: t -> _SVGFETurbulenceElement -> unit [@@js.set "feTurbulence"]
    val get_filter: t -> _SVGFilterElement [@@js.get "filter"]
    val set_filter: t -> _SVGFilterElement -> unit [@@js.set "filter"]
    val get_foreignObject: t -> _SVGForeignObjectElement [@@js.get "foreignObject"]
    val set_foreignObject: t -> _SVGForeignObjectElement -> unit [@@js.set "foreignObject"]
    val get_g: t -> _SVGGElement [@@js.get "g"]
    val set_g: t -> _SVGGElement -> unit [@@js.set "g"]
    val get_image: t -> _SVGImageElement [@@js.get "image"]
    val set_image: t -> _SVGImageElement -> unit [@@js.set "image"]
    val get_line: t -> _SVGLineElement [@@js.get "line"]
    val set_line: t -> _SVGLineElement -> unit [@@js.set "line"]
    val get_linearGradient: t -> _SVGLinearGradientElement [@@js.get "linearGradient"]
    val set_linearGradient: t -> _SVGLinearGradientElement -> unit [@@js.set "linearGradient"]
    val get_marker: t -> _SVGMarkerElement [@@js.get "marker"]
    val set_marker: t -> _SVGMarkerElement -> unit [@@js.set "marker"]
    val get_mask: t -> _SVGMaskElement [@@js.get "mask"]
    val set_mask: t -> _SVGMaskElement -> unit [@@js.set "mask"]
    val get_metadata: t -> _SVGMetadataElement [@@js.get "metadata"]
    val set_metadata: t -> _SVGMetadataElement -> unit [@@js.set "metadata"]
    val get_path: t -> _SVGPathElement [@@js.get "path"]
    val set_path: t -> _SVGPathElement -> unit [@@js.set "path"]
    val get_pattern: t -> _SVGPatternElement [@@js.get "pattern"]
    val set_pattern: t -> _SVGPatternElement -> unit [@@js.set "pattern"]
    val get_polygon: t -> _SVGPolygonElement [@@js.get "polygon"]
    val set_polygon: t -> _SVGPolygonElement -> unit [@@js.set "polygon"]
    val get_polyline: t -> _SVGPolylineElement [@@js.get "polyline"]
    val set_polyline: t -> _SVGPolylineElement -> unit [@@js.set "polyline"]
    val get_radialGradient: t -> _SVGRadialGradientElement [@@js.get "radialGradient"]
    val set_radialGradient: t -> _SVGRadialGradientElement -> unit [@@js.set "radialGradient"]
    val get_rect: t -> _SVGRectElement [@@js.get "rect"]
    val set_rect: t -> _SVGRectElement -> unit [@@js.set "rect"]
    val get_script: t -> _SVGScriptElement [@@js.get "script"]
    val set_script: t -> _SVGScriptElement -> unit [@@js.set "script"]
    val get_stop: t -> _SVGStopElement [@@js.get "stop"]
    val set_stop: t -> _SVGStopElement -> unit [@@js.set "stop"]
    val get_style: t -> _SVGStyleElement [@@js.get "style"]
    val set_style: t -> _SVGStyleElement -> unit [@@js.set "style"]
    val get_svg: t -> _SVGSVGElement [@@js.get "svg"]
    val set_svg: t -> _SVGSVGElement -> unit [@@js.set "svg"]
    val get_switch: t -> _SVGSwitchElement [@@js.get "switch"]
    val set_switch: t -> _SVGSwitchElement -> unit [@@js.set "switch"]
    val get_symbol: t -> _SVGSymbolElement [@@js.get "symbol"]
    val set_symbol: t -> _SVGSymbolElement -> unit [@@js.set "symbol"]
    val get_text: t -> _SVGTextElement [@@js.get "text"]
    val set_text: t -> _SVGTextElement -> unit [@@js.set "text"]
    val get_textPath: t -> _SVGTextPathElement [@@js.get "textPath"]
    val set_textPath: t -> _SVGTextPathElement -> unit [@@js.set "textPath"]
    val get_title: t -> _SVGTitleElement [@@js.get "title"]
    val set_title: t -> _SVGTitleElement -> unit [@@js.set "title"]
    val get_tspan: t -> _SVGTSpanElement [@@js.get "tspan"]
    val set_tspan: t -> _SVGTSpanElement -> unit [@@js.set "tspan"]
    val get_use: t -> _SVGUseElement [@@js.get "use"]
    val set_use: t -> _SVGUseElement -> unit [@@js.set "use"]
    val get_view: t -> _SVGViewElement [@@js.get "view"]
    val set_view: t -> _SVGViewElement -> unit [@@js.set "view"]
  end
  module ElementTagNameMap : sig
    type t = _ElementTagNameMap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  val audio: anonymous_interface_612 [@@js.global "Audio"]
  val image: anonymous_interface_614 [@@js.global "Image"]
  val option: anonymous_interface_613 [@@js.global "Option"]
  val applicationCache: _ApplicationCache [@@js.global "applicationCache"]
  val clientInformation: _Navigator [@@js.global "clientInformation"]
  val closed: bool [@@js.global "closed"]
  val customElements: _CustomElementRegistry [@@js.global "customElements"]
  val defaultStatus: string [@@js.global "defaultStatus"]
  val devicePixelRatio: float [@@js.global "devicePixelRatio"]
  val doNotTrack: string [@@js.global "doNotTrack"]
  val document: _Document [@@js.global "document"]
  val event: _Event or_undefined [@@js.global "event"]
  val external_: _External [@@js.global "external"]
  val frameElement: _Element [@@js.global "frameElement"]
  val frames: _Window [@@js.global "frames"]
  val history: _History [@@js.global "history"]
  val innerHeight: float [@@js.global "innerHeight"]
  val innerWidth: float [@@js.global "innerWidth"]
  val isSecureContext: bool [@@js.global "isSecureContext"]
  val length: float [@@js.global "length"]
  val location: _Location [@@js.global "location"]
  val locationbar: _BarProp [@@js.global "locationbar"]
  val menubar: _BarProp [@@js.global "menubar"]
  val msContentScript: _ExtensionScriptApis [@@js.global "msContentScript"]
  val name: never [@@js.global "name"]
  val navigator: _Navigator [@@js.global "navigator"]
  val offscreenBuffering: bool or_string [@@js.global "offscreenBuffering"]
  val oncompassneedscalibration: (this:_Window -> ev:_Event -> any) or_null [@@js.global "oncompassneedscalibration"]
  val ondevicelight: (this:_Window -> ev:_DeviceLightEvent -> any) or_null [@@js.global "ondevicelight"]
  val ondevicemotion: (this:_Window -> ev:_DeviceMotionEvent -> any) or_null [@@js.global "ondevicemotion"]
  val ondeviceorientation: (this:_Window -> ev:_DeviceOrientationEvent -> any) or_null [@@js.global "ondeviceorientation"]
  val ondeviceorientationabsolute: (this:_Window -> ev:_DeviceOrientationEvent -> any) or_null [@@js.global "ondeviceorientationabsolute"]
  val onmousewheel: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onmousewheel"]
  val onmsgesturechange: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onmsgesturechange"]
  val onmsgesturedoubletap: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onmsgesturedoubletap"]
  val onmsgestureend: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onmsgestureend"]
  val onmsgesturehold: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onmsgesturehold"]
  val onmsgesturestart: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onmsgesturestart"]
  val onmsgesturetap: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onmsgesturetap"]
  val onmsinertiastart: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onmsinertiastart"]
  val onmspointercancel: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onmspointercancel"]
  val onmspointerdown: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onmspointerdown"]
  val onmspointerenter: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onmspointerenter"]
  val onmspointerleave: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onmspointerleave"]
  val onmspointermove: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onmspointermove"]
  val onmspointerout: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onmspointerout"]
  val onmspointerover: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onmspointerover"]
  val onmspointerup: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onmspointerup"]
  val onorientationchange: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onorientationchange"]
  val onreadystatechange: (this:_Window -> ev:_Window _ProgressEvent -> any) or_null [@@js.global "onreadystatechange"]
  val onvrdisplayactivate: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onvrdisplayactivate"]
  val onvrdisplayblur: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onvrdisplayblur"]
  val onvrdisplayconnect: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onvrdisplayconnect"]
  val onvrdisplaydeactivate: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onvrdisplaydeactivate"]
  val onvrdisplaydisconnect: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onvrdisplaydisconnect"]
  val onvrdisplayfocus: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onvrdisplayfocus"]
  val onvrdisplaypointerrestricted: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onvrdisplaypointerrestricted"]
  val onvrdisplaypointerunrestricted: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onvrdisplaypointerunrestricted"]
  val onvrdisplaypresentchange: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onvrdisplaypresentchange"]
  val opener: any [@@js.global "opener"]
  val orientation: string or_number [@@js.global "orientation"]
  val outerHeight: float [@@js.global "outerHeight"]
  val outerWidth: float [@@js.global "outerWidth"]
  val pageXOffset: float [@@js.global "pageXOffset"]
  val pageYOffset: float [@@js.global "pageYOffset"]
  val parent: _Window [@@js.global "parent"]
  val personalbar: _BarProp [@@js.global "personalbar"]
  val screen: _Screen [@@js.global "screen"]
  val screenLeft: float [@@js.global "screenLeft"]
  val screenTop: float [@@js.global "screenTop"]
  val screenX: float [@@js.global "screenX"]
  val screenY: float [@@js.global "screenY"]
  val scrollX: float [@@js.global "scrollX"]
  val scrollY: float [@@js.global "scrollY"]
  val scrollbars: _BarProp [@@js.global "scrollbars"]
  val self: (_Window, (* FIXME: unknown type 'typeof globalThis' *)any) intersection2 [@@js.global "self"]
  val speechSynthesis: _SpeechSynthesis [@@js.global "speechSynthesis"]
  val status: string [@@js.global "status"]
  val statusbar: _BarProp [@@js.global "statusbar"]
  val styleMedia: _StyleMedia [@@js.global "styleMedia"]
  val toolbar: _BarProp [@@js.global "toolbar"]
  val top: _Window [@@js.global "top"]
  val window: (_Window, (* FIXME: unknown type 'typeof globalThis' *)any) intersection2 [@@js.global "window"]
  val alert: ?message:any -> unit -> unit [@@js.global "alert"]
  val blur: unit -> unit [@@js.global "blur"]
  val captureEvents: unit -> unit [@@js.global "captureEvents"]
  val close: unit -> unit [@@js.global "close"]
  val confirm: ?message:string -> unit -> bool [@@js.global "confirm"]
  val departFocus: navigationReason:_NavigationReason -> origin:_FocusNavigationOrigin -> unit [@@js.global "departFocus"]
  val focus: unit -> unit [@@js.global "focus"]
  val getComputedStyle: elt:_Element -> ?pseudoElt:string or_null -> unit -> _CSSStyleDeclaration [@@js.global "getComputedStyle"]
  val getMatchedCSSRules: elt:_Element -> ?pseudoElt:string or_null -> unit -> _CSSRuleList [@@js.global "getMatchedCSSRules"]
  val getSelection: unit -> _Selection or_null [@@js.global "getSelection"]
  val matchMedia: query:string -> _MediaQueryList [@@js.global "matchMedia"]
  val moveBy: x:float -> y:float -> unit [@@js.global "moveBy"]
  val moveTo: x:float -> y:float -> unit [@@js.global "moveTo"]
  val msWriteProfilerMark: profilerMarkName:string -> unit [@@js.global "msWriteProfilerMark"]
  val open_: ?url:string -> ?target:string -> ?features:string -> ?replace:bool -> unit -> _Window or_null [@@js.global "open"]
  val postMessage: message:any -> targetOrigin:string -> ?transfer:_Transferable list -> unit -> unit [@@js.global "postMessage"]
  val print: unit -> unit [@@js.global "print"]
  val prompt: ?message:string -> ?_default:string -> unit -> string or_null [@@js.global "prompt"]
  val releaseEvents: unit -> unit [@@js.global "releaseEvents"]
  val resizeBy: x:float -> y:float -> unit [@@js.global "resizeBy"]
  val resizeTo: x:float -> y:float -> unit [@@js.global "resizeTo"]
  val scroll: ?options:_ScrollToOptions -> unit -> unit [@@js.global "scroll"]
  val scroll: x:float -> y:float -> unit [@@js.global "scroll"]
  val scrollBy: ?options:_ScrollToOptions -> unit -> unit [@@js.global "scrollBy"]
  val scrollBy: x:float -> y:float -> unit [@@js.global "scrollBy"]
  val scrollTo: ?options:_ScrollToOptions -> unit -> unit [@@js.global "scrollTo"]
  val scrollTo: x:float -> y:float -> unit [@@js.global "scrollTo"]
  val stop: unit -> unit [@@js.global "stop"]
  val webkitCancelAnimationFrame: handle:float -> unit [@@js.global "webkitCancelAnimationFrame"]
  val webkitConvertPointFromNodeToPage: node:_Node -> pt:_WebKitPoint -> _WebKitPoint [@@js.global "webkitConvertPointFromNodeToPage"]
  val webkitConvertPointFromPageToNode: node:_Node -> pt:_WebKitPoint -> _WebKitPoint [@@js.global "webkitConvertPointFromPageToNode"]
  val webkitRequestAnimationFrame: callback:_FrameRequestCallback -> float [@@js.global "webkitRequestAnimationFrame"]
  val toString: unit -> string [@@js.global "toString"]
  val dispatchEvent: event:_Event -> bool [@@js.global "dispatchEvent"]
  val sessionStorage: _Storage [@@js.global "sessionStorage"]
  val localStorage: _Storage [@@js.global "localStorage"]
  val console: _Console [@@js.global "console"]
  val onabort: (this:_Window -> ev:_UIEvent -> any) or_null [@@js.global "onabort"]
  val onanimationcancel: (this:_Window -> ev:_AnimationEvent -> any) or_null [@@js.global "onanimationcancel"]
  val onanimationend: (this:_Window -> ev:_AnimationEvent -> any) or_null [@@js.global "onanimationend"]
  val onanimationiteration: (this:_Window -> ev:_AnimationEvent -> any) or_null [@@js.global "onanimationiteration"]
  val onanimationstart: (this:_Window -> ev:_AnimationEvent -> any) or_null [@@js.global "onanimationstart"]
  val onauxclick: (this:_Window -> ev:_MouseEvent -> any) or_null [@@js.global "onauxclick"]
  val onblur: (this:_Window -> ev:_FocusEvent -> any) or_null [@@js.global "onblur"]
  val oncancel: (this:_Window -> ev:_Event -> any) or_null [@@js.global "oncancel"]
  val oncanplay: (this:_Window -> ev:_Event -> any) or_null [@@js.global "oncanplay"]
  val oncanplaythrough: (this:_Window -> ev:_Event -> any) or_null [@@js.global "oncanplaythrough"]
  val onchange: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onchange"]
  val onclick: (this:_Window -> ev:_MouseEvent -> any) or_null [@@js.global "onclick"]
  val onclose: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onclose"]
  val oncontextmenu: (this:_Window -> ev:_MouseEvent -> any) or_null [@@js.global "oncontextmenu"]
  val oncuechange: (this:_Window -> ev:_Event -> any) or_null [@@js.global "oncuechange"]
  val ondblclick: (this:_Window -> ev:_MouseEvent -> any) or_null [@@js.global "ondblclick"]
  val ondrag: (this:_Window -> ev:_DragEvent -> any) or_null [@@js.global "ondrag"]
  val ondragend: (this:_Window -> ev:_DragEvent -> any) or_null [@@js.global "ondragend"]
  val ondragenter: (this:_Window -> ev:_DragEvent -> any) or_null [@@js.global "ondragenter"]
  val ondragexit: (this:_Window -> ev:_Event -> any) or_null [@@js.global "ondragexit"]
  val ondragleave: (this:_Window -> ev:_DragEvent -> any) or_null [@@js.global "ondragleave"]
  val ondragover: (this:_Window -> ev:_DragEvent -> any) or_null [@@js.global "ondragover"]
  val ondragstart: (this:_Window -> ev:_DragEvent -> any) or_null [@@js.global "ondragstart"]
  val ondrop: (this:_Window -> ev:_DragEvent -> any) or_null [@@js.global "ondrop"]
  val ondurationchange: (this:_Window -> ev:_Event -> any) or_null [@@js.global "ondurationchange"]
  val onemptied: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onemptied"]
  val onended: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onended"]
  val onerror: _OnErrorEventHandler [@@js.global "onerror"]
  val onfocus: (this:_Window -> ev:_FocusEvent -> any) or_null [@@js.global "onfocus"]
  val ongotpointercapture: (this:_Window -> ev:_PointerEvent -> any) or_null [@@js.global "ongotpointercapture"]
  val oninput: (this:_Window -> ev:_Event -> any) or_null [@@js.global "oninput"]
  val oninvalid: (this:_Window -> ev:_Event -> any) or_null [@@js.global "oninvalid"]
  val onkeydown: (this:_Window -> ev:_KeyboardEvent -> any) or_null [@@js.global "onkeydown"]
  val onkeypress: (this:_Window -> ev:_KeyboardEvent -> any) or_null [@@js.global "onkeypress"]
  val onkeyup: (this:_Window -> ev:_KeyboardEvent -> any) or_null [@@js.global "onkeyup"]
  val onload: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onload"]
  val onloadeddata: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onloadeddata"]
  val onloadedmetadata: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onloadedmetadata"]
  val onloadstart: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onloadstart"]
  val onlostpointercapture: (this:_Window -> ev:_PointerEvent -> any) or_null [@@js.global "onlostpointercapture"]
  val onmousedown: (this:_Window -> ev:_MouseEvent -> any) or_null [@@js.global "onmousedown"]
  val onmouseenter: (this:_Window -> ev:_MouseEvent -> any) or_null [@@js.global "onmouseenter"]
  val onmouseleave: (this:_Window -> ev:_MouseEvent -> any) or_null [@@js.global "onmouseleave"]
  val onmousemove: (this:_Window -> ev:_MouseEvent -> any) or_null [@@js.global "onmousemove"]
  val onmouseout: (this:_Window -> ev:_MouseEvent -> any) or_null [@@js.global "onmouseout"]
  val onmouseover: (this:_Window -> ev:_MouseEvent -> any) or_null [@@js.global "onmouseover"]
  val onmouseup: (this:_Window -> ev:_MouseEvent -> any) or_null [@@js.global "onmouseup"]
  val onpause: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onpause"]
  val onplay: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onplay"]
  val onplaying: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onplaying"]
  val onpointercancel: (this:_Window -> ev:_PointerEvent -> any) or_null [@@js.global "onpointercancel"]
  val onpointerdown: (this:_Window -> ev:_PointerEvent -> any) or_null [@@js.global "onpointerdown"]
  val onpointerenter: (this:_Window -> ev:_PointerEvent -> any) or_null [@@js.global "onpointerenter"]
  val onpointerleave: (this:_Window -> ev:_PointerEvent -> any) or_null [@@js.global "onpointerleave"]
  val onpointermove: (this:_Window -> ev:_PointerEvent -> any) or_null [@@js.global "onpointermove"]
  val onpointerout: (this:_Window -> ev:_PointerEvent -> any) or_null [@@js.global "onpointerout"]
  val onpointerover: (this:_Window -> ev:_PointerEvent -> any) or_null [@@js.global "onpointerover"]
  val onpointerup: (this:_Window -> ev:_PointerEvent -> any) or_null [@@js.global "onpointerup"]
  val onprogress: (this:_Window -> ev:_EventTarget _ProgressEvent -> any) or_null [@@js.global "onprogress"]
  val onratechange: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onratechange"]
  val onreset: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onreset"]
  val onresize: (this:_Window -> ev:_UIEvent -> any) or_null [@@js.global "onresize"]
  val onscroll: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onscroll"]
  val onsecuritypolicyviolation: (this:_Window -> ev:_SecurityPolicyViolationEvent -> any) or_null [@@js.global "onsecuritypolicyviolation"]
  val onseeked: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onseeked"]
  val onseeking: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onseeking"]
  val onselect: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onselect"]
  val onselectionchange: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onselectionchange"]
  val onselectstart: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onselectstart"]
  val onstalled: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onstalled"]
  val onsubmit: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onsubmit"]
  val onsuspend: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onsuspend"]
  val ontimeupdate: (this:_Window -> ev:_Event -> any) or_null [@@js.global "ontimeupdate"]
  val ontoggle: (this:_Window -> ev:_Event -> any) or_null [@@js.global "ontoggle"]
  val ontouchcancel: (this:_Window -> ev:_TouchEvent -> any) or_null_or_undefined [@@js.global "ontouchcancel"]
  val ontouchend: (this:_Window -> ev:_TouchEvent -> any) or_null_or_undefined [@@js.global "ontouchend"]
  val ontouchmove: (this:_Window -> ev:_TouchEvent -> any) or_null_or_undefined [@@js.global "ontouchmove"]
  val ontouchstart: (this:_Window -> ev:_TouchEvent -> any) or_null_or_undefined [@@js.global "ontouchstart"]
  val ontransitioncancel: (this:_Window -> ev:_TransitionEvent -> any) or_null [@@js.global "ontransitioncancel"]
  val ontransitionend: (this:_Window -> ev:_TransitionEvent -> any) or_null [@@js.global "ontransitionend"]
  val ontransitionrun: (this:_Window -> ev:_TransitionEvent -> any) or_null [@@js.global "ontransitionrun"]
  val ontransitionstart: (this:_Window -> ev:_TransitionEvent -> any) or_null [@@js.global "ontransitionstart"]
  val onvolumechange: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onvolumechange"]
  val onwaiting: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onwaiting"]
  val onwheel: (this:_Window -> ev:_WheelEvent -> any) or_null [@@js.global "onwheel"]
  val cancelAnimationFrame: handle:float -> unit [@@js.global "cancelAnimationFrame"]
  val requestAnimationFrame: callback:_FrameRequestCallback -> float [@@js.global "requestAnimationFrame"]
  val caches: _CacheStorage [@@js.global "caches"]
  val crypto: _Crypto [@@js.global "crypto"]
  val indexedDB: _IDBFactory [@@js.global "indexedDB"]
  val origin: string [@@js.global "origin"]
  val performance: _Performance [@@js.global "performance"]
  val atob: data:string -> string [@@js.global "atob"]
  val btoa: data:string -> string [@@js.global "btoa"]
  val clearInterval: ?handle:float -> unit -> unit [@@js.global "clearInterval"]
  val clearTimeout: ?handle:float -> unit -> unit [@@js.global "clearTimeout"]
  val createImageBitmap: image:_ImageBitmapSource -> _ImageBitmap Promise.t_1 [@@js.global "createImageBitmap"]
  val createImageBitmap: image:_ImageBitmapSource -> sx:float -> sy:float -> sw:float -> sh:float -> _ImageBitmap Promise.t_1 [@@js.global "createImageBitmap"]
  val fetch: input:_RequestInfo -> ?init:_RequestInit -> unit -> _Response Promise.t_1 [@@js.global "fetch"]
  val queueMicrotask: callback:_VoidFunction -> unit [@@js.global "queueMicrotask"]
  val setInterval: handler:_TimerHandler -> ?timeout:float -> arguments:(any list [@js.variadic]) -> float [@@js.global "setInterval"]
  val setTimeout: handler:_TimerHandler -> ?timeout:float -> arguments:(any list [@js.variadic]) -> float [@@js.global "setTimeout"]
  val onafterprint: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onafterprint"]
  val onbeforeprint: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onbeforeprint"]
  val onbeforeunload: (this:_Window -> ev:_BeforeUnloadEvent -> any) or_null [@@js.global "onbeforeunload"]
  val onhashchange: (this:_Window -> ev:_HashChangeEvent -> any) or_null [@@js.global "onhashchange"]
  val onlanguagechange: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onlanguagechange"]
  val onmessage: (this:_Window -> ev:_MessageEvent -> any) or_null [@@js.global "onmessage"]
  val onmessageerror: (this:_Window -> ev:_MessageEvent -> any) or_null [@@js.global "onmessageerror"]
  val onoffline: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onoffline"]
  val ononline: (this:_Window -> ev:_Event -> any) or_null [@@js.global "ononline"]
  val onpagehide: (this:_Window -> ev:_PageTransitionEvent -> any) or_null [@@js.global "onpagehide"]
  val onpageshow: (this:_Window -> ev:_PageTransitionEvent -> any) or_null [@@js.global "onpageshow"]
  val onpopstate: (this:_Window -> ev:_PopStateEvent -> any) or_null [@@js.global "onpopstate"]
  val onrejectionhandled: (this:_Window -> ev:_PromiseRejectionEvent -> any) or_null [@@js.global "onrejectionhandled"]
  val onstorage: (this:_Window -> ev:_StorageEvent -> any) or_null [@@js.global "onstorage"]
  val onunhandledrejection: (this:_Window -> ev:_PromiseRejectionEvent -> any) or_null [@@js.global "onunhandledrejection"]
  val onunload: (this:_Window -> ev:_Event -> any) or_null [@@js.global "onunload"]
  val addEventListener: type_:'K -> listener:(this:_Window -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.global "addEventListener"]
  val addEventListener: type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_AddEventListenerOptions or_boolean -> unit -> unit [@@js.global "addEventListener"]
  val removeEventListener: type_:'K -> listener:(this:_Window -> ev:(* FIXME: unknown type '{..}['K]' *)any -> any) -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.global "removeEventListener"]
  val removeEventListener: type_:string -> listener:_EventListenerOrEventListenerObject -> ?options:_EventListenerOptions or_boolean -> unit -> unit [@@js.global "removeEventListener"]
  module HeadersInit : sig
    type t = _HeadersInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module BodyInit : sig
    type t = _BodyInit
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module RequestInfo : sig
    type t = _RequestInfo
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module BlobPart : sig
    type t = _BlobPart
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module DOMHighResTimeStamp : sig
    type t = _DOMHighResTimeStamp
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module RenderingContext : sig
    type t = _RenderingContext
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module HTMLOrSVGImageElement : sig
    type t = _HTMLOrSVGImageElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module CanvasImageSource : sig
    type t = _CanvasImageSource
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module OffscreenRenderingContext : sig
    type t = _OffscreenRenderingContext
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module MessageEventSource : sig
    type t = _MessageEventSource
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module HTMLOrSVGScriptElement : sig
    type t = _HTMLOrSVGScriptElement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module ImageBitmapSource : sig
    type t = _ImageBitmapSource
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module OnErrorEventHandler : sig
    type t = _OnErrorEventHandler
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module OnBeforeUnloadEventHandler : sig
    type t = _OnBeforeUnloadEventHandler
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module TimerHandler : sig
    type t = _TimerHandler
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module ConstrainULong : sig
    type t = _ConstrainULong
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module ConstrainDouble : sig
    type t = _ConstrainDouble
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module ConstrainBoolean : sig
    type t = _ConstrainBoolean
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module ConstrainDOMString : sig
    type t = _ConstrainDOMString
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module PerformanceEntryList : sig
    type t = _PerformanceEntryList
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module ReadableStreamReadResult : sig
    type 'T t = 'T _ReadableStreamReadResult
    val t_to_js: ('T -> Ojs.t) -> 'T t -> Ojs.t
    val t_of_js: (Ojs.t -> 'T) -> Ojs.t -> 'T t
    type 'T t_1 = 'T t
    val t_1_to_js: ('T -> Ojs.t) -> 'T t_1 -> Ojs.t
    val t_1_of_js: (Ojs.t -> 'T) -> Ojs.t -> 'T t_1
  end
  module VibratePattern : sig
    type t = _VibratePattern
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module COSEAlgorithmIdentifier : sig
    type t = _COSEAlgorithmIdentifier
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module AuthenticatorSelectionList : sig
    type t = _AuthenticatorSelectionList
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module AAGUID : sig
    type t = _AAGUID
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module AuthenticationExtensionsSupported : sig
    type t = _AuthenticationExtensionsSupported
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module UvmEntry : sig
    type t = _UvmEntry
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module UvmEntries : sig
    type t = _UvmEntries
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module AlgorithmIdentifier : sig
    type t = _AlgorithmIdentifier
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module HashAlgorithmIdentifier : sig
    type t = _HashAlgorithmIdentifier
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module BigInteger : sig
    type t = _BigInteger
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module NamedCurve : sig
    type t = _NamedCurve
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module GLenum : sig
    type t = _GLenum
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module GLboolean : sig
    type t = _GLboolean
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module GLbitfield : sig
    type t = _GLbitfield
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module GLint : sig
    type t = _GLint
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module GLsizei : sig
    type t = _GLsizei
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module GLintptr : sig
    type t = _GLintptr
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module GLsizeiptr : sig
    type t = _GLsizeiptr
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module GLuint : sig
    type t = _GLuint
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module GLfloat : sig
    type t = _GLfloat
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module GLclampf : sig
    type t = _GLclampf
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module TexImageSource : sig
    type t = _TexImageSource
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module Float32List : sig
    type t = _Float32List
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module Int32List : sig
    type t = _Int32List
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module GLint64 : sig
    type t = _GLint64
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module GLuint64 : sig
    type t = _GLuint64
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module Uint32List : sig
    type t = _Uint32List
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module BufferSource : sig
    type t = _BufferSource
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module DOMTimeStamp : sig
    type t = _DOMTimeStamp
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module LineAndPositionSetting : sig
    type t = _LineAndPositionSetting
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module FormDataEntryValue : sig
    type t = _FormDataEntryValue
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module InsertPosition : sig
    type t = _InsertPosition
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module IDBValidKey : sig
    type t = _IDBValidKey
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module MutationRecordType : sig
    type t = _MutationRecordType
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module IDBKeyPath : sig
    type t = _IDBKeyPath
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module Transferable : sig
    type t = _Transferable
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module RTCIceGatherCandidate : sig
    type t = _RTCIceGatherCandidate
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module RTCTransport : sig
    type t = _RTCTransport
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module MouseWheelEvent : sig
    type t = _MouseWheelEvent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module WindowProxy : sig
    type t = _WindowProxy
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module AlignSetting : sig
    type t = _AlignSetting
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module AnimationPlayState : sig
    type t = _AnimationPlayState
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module AppendMode : sig
    type t = _AppendMode
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module AttestationConveyancePreference : sig
    type t = _AttestationConveyancePreference
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module AudioContextLatencyCategory : sig
    type t = _AudioContextLatencyCategory
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module AudioContextState : sig
    type t = _AudioContextState
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module AuthenticatorAttachment : sig
    type t = _AuthenticatorAttachment
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module AuthenticatorTransport : sig
    type t = _AuthenticatorTransport
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module AutoKeyword : sig
    type t = _AutoKeyword
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module AutomationRate : sig
    type t = _AutomationRate
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module BinaryType : sig
    type t = _BinaryType
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module BiquadFilterType : sig
    type t = _BiquadFilterType
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module CanPlayTypeResult : sig
    type t = _CanPlayTypeResult
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module CanvasDirection : sig
    type t = _CanvasDirection
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module CanvasFillRule : sig
    type t = _CanvasFillRule
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module CanvasLineCap : sig
    type t = _CanvasLineCap
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module CanvasLineJoin : sig
    type t = _CanvasLineJoin
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module CanvasTextAlign : sig
    type t = _CanvasTextAlign
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module CanvasTextBaseline : sig
    type t = _CanvasTextBaseline
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module ChannelCountMode : sig
    type t = _ChannelCountMode
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module ChannelInterpretation : sig
    type t = _ChannelInterpretation
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module ClientTypes : sig
    type t = _ClientTypes
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module CompositeOperation : sig
    type t = _CompositeOperation
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module CompositeOperationOrAuto : sig
    type t = _CompositeOperationOrAuto
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module CredentialMediationRequirement : sig
    type t = _CredentialMediationRequirement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module DirectionSetting : sig
    type t = _DirectionSetting
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module DisplayCaptureSurfaceType : sig
    type t = _DisplayCaptureSurfaceType
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module DistanceModelType : sig
    type t = _DistanceModelType
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module DocumentReadyState : sig
    type t = _DocumentReadyState
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module EndOfStreamError : sig
    type t = _EndOfStreamError
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module EndingType : sig
    type t = _EndingType
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module FillMode : sig
    type t = _FillMode
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module FullscreenNavigationUI : sig
    type t = _FullscreenNavigationUI
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module GamepadHand : sig
    type t = _GamepadHand
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module GamepadHapticActuatorType : sig
    type t = _GamepadHapticActuatorType
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module GamepadMappingType : sig
    type t = _GamepadMappingType
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module IDBCursorDirection : sig
    type t = _IDBCursorDirection
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module IDBRequestReadyState : sig
    type t = _IDBRequestReadyState
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module IDBTransactionMode : sig
    type t = _IDBTransactionMode
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module ImageSmoothingQuality : sig
    type t = _ImageSmoothingQuality
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module IterationCompositeOperation : sig
    type t = _IterationCompositeOperation
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module KeyFormat : sig
    type t = _KeyFormat
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module KeyType : sig
    type t = _KeyType
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module KeyUsage : sig
    type t = _KeyUsage
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module LineAlignSetting : sig
    type t = _LineAlignSetting
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module ListeningState : sig
    type t = _ListeningState
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module MSCredentialType : sig
    type t = _MSCredentialType
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module MSTransportType : sig
    type t = _MSTransportType
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module MSWebViewPermissionState : sig
    type t = _MSWebViewPermissionState
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module MSWebViewPermissionType : sig
    type t = _MSWebViewPermissionType
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module MediaDeviceKind : sig
    type t = _MediaDeviceKind
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module MediaKeyMessageType : sig
    type t = _MediaKeyMessageType
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module MediaKeySessionType : sig
    type t = _MediaKeySessionType
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module MediaKeyStatus : sig
    type t = _MediaKeyStatus
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module MediaKeysRequirement : sig
    type t = _MediaKeysRequirement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module MediaStreamTrackState : sig
    type t = _MediaStreamTrackState
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module NavigationReason : sig
    type t = _NavigationReason
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module NavigationType : sig
    type t = _NavigationType
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module NotificationDirection : sig
    type t = _NotificationDirection
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module NotificationPermission : sig
    type t = _NotificationPermission
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module OffscreenRenderingContextId : sig
    type t = _OffscreenRenderingContextId
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module OrientationLockType : sig
    type t = _OrientationLockType
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module OrientationType : sig
    type t = _OrientationType
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module OscillatorType : sig
    type t = _OscillatorType
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module OverSampleType : sig
    type t = _OverSampleType
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module PanningModelType : sig
    type t = _PanningModelType
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module PaymentComplete : sig
    type t = _PaymentComplete
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module PaymentShippingType : sig
    type t = _PaymentShippingType
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module PermissionName : sig
    type t = _PermissionName
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module PermissionState : sig
    type t = _PermissionState
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module PlaybackDirection : sig
    type t = _PlaybackDirection
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module PositionAlignSetting : sig
    type t = _PositionAlignSetting
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module PublicKeyCredentialType : sig
    type t = _PublicKeyCredentialType
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module PushEncryptionKeyName : sig
    type t = _PushEncryptionKeyName
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module PushPermissionState : sig
    type t = _PushPermissionState
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module RTCBundlePolicy : sig
    type t = _RTCBundlePolicy
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module RTCDataChannelState : sig
    type t = _RTCDataChannelState
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module RTCDegradationPreference : sig
    type t = _RTCDegradationPreference
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module RTCDtlsRole : sig
    type t = _RTCDtlsRole
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module RTCDtlsTransportState : sig
    type t = _RTCDtlsTransportState
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module RTCDtxStatus : sig
    type t = _RTCDtxStatus
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module RTCErrorDetailType : sig
    type t = _RTCErrorDetailType
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module RTCIceCandidateType : sig
    type t = _RTCIceCandidateType
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module RTCIceComponent : sig
    type t = _RTCIceComponent
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module RTCIceConnectionState : sig
    type t = _RTCIceConnectionState
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module RTCIceCredentialType : sig
    type t = _RTCIceCredentialType
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module RTCIceGatherPolicy : sig
    type t = _RTCIceGatherPolicy
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module RTCIceGathererState : sig
    type t = _RTCIceGathererState
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module RTCIceGatheringState : sig
    type t = _RTCIceGatheringState
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module RTCIceProtocol : sig
    type t = _RTCIceProtocol
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module RTCIceRole : sig
    type t = _RTCIceRole
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module RTCIceTcpCandidateType : sig
    type t = _RTCIceTcpCandidateType
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module RTCIceTransportPolicy : sig
    type t = _RTCIceTransportPolicy
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module RTCIceTransportState : sig
    type t = _RTCIceTransportState
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module RTCPeerConnectionState : sig
    type t = _RTCPeerConnectionState
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module RTCPriorityType : sig
    type t = _RTCPriorityType
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module RTCRtcpMuxPolicy : sig
    type t = _RTCRtcpMuxPolicy
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module RTCRtpTransceiverDirection : sig
    type t = _RTCRtpTransceiverDirection
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module RTCSctpTransportState : sig
    type t = _RTCSctpTransportState
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module RTCSdpType : sig
    type t = _RTCSdpType
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module RTCSignalingState : sig
    type t = _RTCSignalingState
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module RTCStatsIceCandidatePairState : sig
    type t = _RTCStatsIceCandidatePairState
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module RTCStatsIceCandidateType : sig
    type t = _RTCStatsIceCandidateType
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module RTCStatsType : sig
    type t = _RTCStatsType
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module ReadyState : sig
    type t = _ReadyState
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module ReferrerPolicy : sig
    type t = _ReferrerPolicy
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module RequestCache : sig
    type t = _RequestCache
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module RequestCredentials : sig
    type t = _RequestCredentials
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module RequestDestination : sig
    type t = _RequestDestination
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module RequestMode : sig
    type t = _RequestMode
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module RequestRedirect : sig
    type t = _RequestRedirect
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module ResponseType : sig
    type t = _ResponseType
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module ScopedCredentialType : sig
    type t = _ScopedCredentialType
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module ScrollBehavior : sig
    type t = _ScrollBehavior
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module ScrollLogicalPosition : sig
    type t = _ScrollLogicalPosition
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module ScrollRestoration : sig
    type t = _ScrollRestoration
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module ScrollSetting : sig
    type t = _ScrollSetting
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module SelectionMode : sig
    type t = _SelectionMode
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module ServiceWorkerState : sig
    type t = _ServiceWorkerState
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module ServiceWorkerUpdateViaCache : sig
    type t = _ServiceWorkerUpdateViaCache
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module ShadowRootMode : sig
    type t = _ShadowRootMode
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module SpeechSynthesisErrorCode : sig
    type t = _SpeechSynthesisErrorCode
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module SupportedType : sig
    type t = _SupportedType
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module TextTrackKind : sig
    type t = _TextTrackKind
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module TextTrackMode : sig
    type t = _TextTrackMode
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module TouchType : sig
    type t = _TouchType
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module Transport : sig
    type t = _Transport
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module UserVerificationRequirement : sig
    type t = _UserVerificationRequirement
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module VRDisplayEventReason : sig
    type t = _VRDisplayEventReason
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module VideoFacingModeEnum : sig
    type t = _VideoFacingModeEnum
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module VisibilityState : sig
    type t = _VisibilityState
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module WebGLPowerPreference : sig
    type t = _WebGLPowerPreference
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module WorkerType : sig
    type t = _WorkerType
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
  module XMLHttpRequestResponseType : sig
    type t = _XMLHttpRequestResponseType
    val t_to_js: t -> Ojs.t
    val t_of_js: Ojs.t -> t
    type t_0 = t
    val t_0_to_js: t_0 -> Ojs.t
    val t_0_of_js: Ojs.t -> t_0
  end
end
