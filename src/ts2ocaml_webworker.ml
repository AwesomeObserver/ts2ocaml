[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Ts2ocaml_min
open Ts2ocaml_es
module DOMHighResTimeStamp =
  struct
    type t = float
    let rec t_of_js : Ojs.t -> t = fun (x2 : Ojs.t) -> Ojs.float_of_js x2
    and t_to_js : t -> Ojs.t = fun (x1 : float) -> Ojs.float_to_js x1
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4 : Ojs.t) -> t_of_js x4
    and t_0_to_js : t_0 -> Ojs.t = fun (x3 : t) -> t_to_js x3
  end
module PerformanceMeasureOptions =
  struct
    type t = [ `PerformanceMeasureOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6 : Ojs.t) -> t_of_js x6
    and t_0_to_js : t_0 -> Ojs.t = fun (x5 : t) -> t_to_js x5
    type tags = [ `PerformanceMeasureOptions ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `PerformanceMeasureOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x9 : Ojs.t) -> intf_of_js __tags_of_js x9
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7 : __tags intf) -> intf_to_js __tags_to_js x7
    let (get_detail : 'tags this -> any) =
      fun (x11 : 'tags this) ->
        any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x11) "detail")
    let (set_detail : 'tags this -> any -> unit) =
      fun (x13 : 'tags this) ->
        fun (x14 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x13) "detail"
            (any_to_js x14)
    let (get_duration : 'tags this -> DOMHighResTimeStamp.t) =
      fun (x16 : 'tags this) ->
        DOMHighResTimeStamp.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x16) "duration")
    let (set_duration : 'tags this -> DOMHighResTimeStamp.t -> unit) =
      fun (x18 : 'tags this) ->
        fun (x19 : DOMHighResTimeStamp.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x18) "duration"
            (DOMHighResTimeStamp.t_to_js x19)
    let (get_end : 'tags this -> DOMHighResTimeStamp.t or_string) =
      fun (x21 : 'tags this) ->
        or_string_of_js DOMHighResTimeStamp.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x21) "end")
    let (set_end : 'tags this -> DOMHighResTimeStamp.t or_string -> unit) =
      fun (x24 : 'tags this) ->
        fun (x25 : DOMHighResTimeStamp.t or_string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x24) "end"
            (or_string_to_js DOMHighResTimeStamp.t_to_js x25)
    let (get_start : 'tags this -> DOMHighResTimeStamp.t or_string) =
      fun (x28 : 'tags this) ->
        or_string_of_js DOMHighResTimeStamp.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x28) "start")
    let (set_start : 'tags this -> DOMHighResTimeStamp.t or_string -> unit) =
      fun (x31 : 'tags this) ->
        fun (x32 : DOMHighResTimeStamp.t or_string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x31) "start"
            (or_string_to_js DOMHighResTimeStamp.t_to_js x32)
    let cast_from = Obj.magic
  end
module PerformanceEntry =
  struct
    type t = [ `PerformanceEntry ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x36 : Ojs.t) -> t_of_js x36
    and t_0_to_js : t_0 -> Ojs.t = fun (x35 : t) -> t_to_js x35
    type tags = [ `PerformanceEntry ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `PerformanceEntry ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x39 : Ojs.t) -> intf_of_js __tags_of_js x39
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x37 : __tags intf) -> intf_to_js __tags_to_js x37
    let (get_duration : 'tags this -> DOMHighResTimeStamp.t) =
      fun (x41 : 'tags this) ->
        DOMHighResTimeStamp.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x41) "duration")
    let (get_entryType : 'tags this -> string) =
      fun (x43 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x43) "entryType")
    let (get_name : 'tags this -> string) =
      fun (x45 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x45) "name")
    let (get_startTime : 'tags this -> DOMHighResTimeStamp.t) =
      fun (x47 : 'tags this) ->
        DOMHighResTimeStamp.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x47) "startTime")
    let (toJSON : 'tags this -> any) =
      fun (x49 : 'tags this) ->
        any_of_js (Ojs.call (this_to_js Obj.magic x49) "toJSON" [||])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "PerformanceEntry") "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "PerformanceEntry")
             [||])
  end
module PerformanceMeasure =
  struct
    type t = [ `PerformanceEntry  | `PerformanceMeasure ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x52 : Ojs.t) -> t_of_js x52
    and t_0_to_js : t_0 -> Ojs.t = fun (x51 : t) -> t_to_js x51
    type tags = [ `PerformanceEntry  | `PerformanceMeasure ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `PerformanceMeasure ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x55 : Ojs.t) -> intf_of_js __tags_of_js x55
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x53 : __tags intf) -> intf_to_js __tags_to_js x53
    let (get_detail : 'tags this -> any) =
      fun (x57 : 'tags this) ->
        any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x57) "detail")
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "PerformanceMeasure") "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "PerformanceMeasure")
             [||])
  end
module PerformanceMarkOptions =
  struct
    type t = [ `PerformanceMarkOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x60 : Ojs.t) -> t_of_js x60
    and t_0_to_js : t_0 -> Ojs.t = fun (x59 : t) -> t_to_js x59
    type tags = [ `PerformanceMarkOptions ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `PerformanceMarkOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x63 : Ojs.t) -> intf_of_js __tags_of_js x63
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x61 : __tags intf) -> intf_to_js __tags_to_js x61
    let (get_detail : 'tags this -> any) =
      fun (x65 : 'tags this) ->
        any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x65) "detail")
    let (set_detail : 'tags this -> any -> unit) =
      fun (x67 : 'tags this) ->
        fun (x68 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x67) "detail"
            (any_to_js x68)
    let (get_startTime : 'tags this -> DOMHighResTimeStamp.t) =
      fun (x70 : 'tags this) ->
        DOMHighResTimeStamp.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x70) "startTime")
    let (set_startTime : 'tags this -> DOMHighResTimeStamp.t -> unit) =
      fun (x72 : 'tags this) ->
        fun (x73 : DOMHighResTimeStamp.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x72) "startTime"
            (DOMHighResTimeStamp.t_to_js x73)
    let cast_from = Obj.magic
  end
module PerformanceMark =
  struct
    type t = [ `PerformanceEntry  | `PerformanceMark ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x76 : Ojs.t) -> t_of_js x76
    and t_0_to_js : t_0 -> Ojs.t = fun (x75 : t) -> t_to_js x75
    type tags = [ `PerformanceEntry  | `PerformanceMark ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `PerformanceMark ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x79 : Ojs.t) -> intf_of_js __tags_of_js x79
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x77 : __tags intf) -> intf_to_js __tags_to_js x77
    let (get_detail : 'tags this -> any) =
      fun (x81 : 'tags this) ->
        any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x81) "detail")
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "PerformanceMark") "prototype")
    let (create :
      markName:string -> ?markOptions:PerformanceMarkOptions.t -> unit -> t)
      =
      fun ~markName:(x83 : string) ->
        fun ?markOptions:(x84 : PerformanceMarkOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "PerformanceMark")
                 (let x85 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x85 "push" [|(Ojs.string_to_js x83)|]);
                  (match x84 with
                   | Some x86 ->
                       ignore
                         (Ojs.call x85 "push"
                            [|(PerformanceMarkOptions.t_to_js x86)|])
                   | None -> ());
                  x85))
  end
module PerformanceEntryList =
  struct
    type t = PerformanceEntry.t list
    let rec t_of_js : Ojs.t -> t =
      fun (x89 : Ojs.t) -> Ojs.list_of_js PerformanceEntry.t_of_js x89
    and t_to_js : t -> Ojs.t =
      fun (x87 : PerformanceEntry.t list) ->
        Ojs.list_to_js PerformanceEntry.t_to_js x87
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x92 : Ojs.t) -> t_of_js x92
    and t_0_to_js : t_0 -> Ojs.t = fun (x91 : t) -> t_to_js x91
  end
module EventInit =
  struct
    type t = [ `EventInit ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x94 : Ojs.t) -> t_of_js x94
    and t_0_to_js : t_0 -> Ojs.t = fun (x93 : t) -> t_to_js x93
    type tags = [ `EventInit ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `EventInit ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x97 : Ojs.t) -> intf_of_js __tags_of_js x97
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x95 : __tags intf) -> intf_to_js __tags_to_js x95
    let (get_bubbles : 'tags this -> bool) =
      fun (x99 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x99) "bubbles")
    let (set_bubbles : 'tags this -> bool -> unit) =
      fun (x101 : 'tags this) ->
        fun (x102 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x101) "bubbles"
            (Ojs.bool_to_js x102)
    let (get_cancelable : 'tags this -> bool) =
      fun (x104 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x104) "cancelable")
    let (set_cancelable : 'tags this -> bool -> unit) =
      fun (x106 : 'tags this) ->
        fun (x107 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x106) "cancelable"
            (Ojs.bool_to_js x107)
    let (get_composed : 'tags this -> bool) =
      fun (x109 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x109) "composed")
    let (set_composed : 'tags this -> bool -> unit) =
      fun (x111 : 'tags this) ->
        fun (x112 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x111) "composed"
            (Ojs.bool_to_js x112)
    let cast_from = Obj.magic
  end
module EventListenerOptions =
  struct
    type t = [ `EventListenerOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x115 : Ojs.t) -> t_of_js x115
    and t_0_to_js : t_0 -> Ojs.t = fun (x114 : t) -> t_to_js x114
    type tags = [ `EventListenerOptions ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `EventListenerOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x118 : Ojs.t) -> intf_of_js __tags_of_js x118
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x116 : __tags intf) -> intf_to_js __tags_to_js x116
    let (get_capture : 'tags this -> bool) =
      fun (x120 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x120) "capture")
    let (set_capture : 'tags this -> bool -> unit) =
      fun (x122 : 'tags this) ->
        fun (x123 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x122) "capture"
            (Ojs.bool_to_js x123)
    let cast_from = Obj.magic
  end
module rec
  AbortSignal:sig
                type t = [ `AbortSignal  | `EventTarget ] intf
                type t_0 = t
                [@@@js.stop ]
                type tags = [ `AbortSignal  | `EventTarget ]
                type tags_0 = tags
                [@@@js.start ]
                [@@@js.implem
                  type tags = [ `AbortSignal  | `EventTarget ]
                  type tags_0 = tags]
                type 'tags this =
                  'tags intf constraint 'tags = [> `AbortSignal ]
                val t_to_js : t -> Ojs.t
                val t_of_js : Ojs.t -> t
                val t_0_to_js : t_0 -> Ojs.t
                val t_0_of_js : Ojs.t -> t_0
                val get_aborted : 'tags this -> bool
                val get_onabort :
                  'tags this -> (this:t -> ev:Event.t -> any) or_null
                val set_onabort :
                  'tags this -> (this:t -> ev:Event.t -> any) or_null -> unit
                val addEventListener :
                  'tags this ->
                    type_:'K ->
                      listener:(this:t -> ev:any -> any) ->
                        ?options:AddEventListenerOptions.t or_boolean ->
                          unit -> unit
                val addEventListener' :
                  'tags this ->
                    type_:string ->
                      listener:EventListenerOrEventListenerObject.t ->
                        ?options:AddEventListenerOptions.t or_boolean ->
                          unit -> unit
                val removeEventListener :
                  'tags this ->
                    type_:'K ->
                      listener:(this:t -> ev:any -> any) ->
                        ?options:EventListenerOptions.t or_boolean ->
                          unit -> unit
                val removeEventListener' :
                  'tags this ->
                    type_:string ->
                      listener:EventListenerOrEventListenerObject.t ->
                        ?options:EventListenerOptions.t or_boolean ->
                          unit -> unit
                val cast_from : 'tags this -> t
                val prototype : unit -> t
                val create : unit -> t
              end =
  struct
    type t = [ `AbortSignal  | `EventTarget ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x126 : Ojs.t) -> t_of_js x126
    and t_0_to_js : t_0 -> Ojs.t = fun (x125 : t) -> t_to_js x125
    type tags = [ `AbortSignal  | `EventTarget ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `AbortSignal ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x129 : Ojs.t) -> intf_of_js __tags_of_js x129
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x127 : __tags intf) -> intf_to_js __tags_to_js x127
    let (get_aborted : 'tags this -> bool) =
      fun (x131 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x131) "aborted")
    let (get_onabort : 'tags this -> (this:t -> ev:Event.t -> any) or_null) =
      fun (x133 : 'tags this) ->
        or_null_of_js
          (fun (x135 : Ojs.t) ->
             fun ~this:(x136 : t) ->
               fun ~ev:(x137 : Event.t) ->
                 any_of_js
                   (Ojs.apply x135 [|(t_to_js x136);(Event.t_to_js x137)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x133) "onabort")
    let (set_onabort :
      'tags this -> (this:t -> ev:Event.t -> any) or_null -> unit) =
      fun (x138 : 'tags this) ->
        fun (x139 : (this:t -> ev:Event.t -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x138) "onabort"
            (or_null_to_js
               (fun (x140 : this:t -> ev:Event.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x141 : Ojs.t) ->
                       fun (x142 : Ojs.t) ->
                         any_to_js
                           (x140 ~this:(t_of_js x141)
                              ~ev:(Event.t_of_js x142)))) x139)
    let (addEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x152 : 'tags this) ->
        fun ~type_:(x144 : 'K) ->
          fun ~listener:(x145 : this:t -> ev:any -> any) ->
            fun ?options:(x146 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x154 = this_to_js Obj.magic x152 in
                   Ojs.call (Ojs.get_prop_ascii x154 "addEventListener")
                     "apply"
                     [|x154;((let x147 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x147 "push" [|(Obj.magic x144)|]);
                              ignore
                                (Ojs.call x147 "push"
                                   [|(Ojs.fun_to_js 2
                                        (fun (x150 : Ojs.t) ->
                                           fun (x151 : Ojs.t) ->
                                             any_to_js
                                               (x145 ~this:(t_of_js x150)
                                                  ~ev:(any_of_js x151))))|]);
                              (match x146 with
                               | Some x148 ->
                                   ignore
                                     (Ojs.call x147 "push"
                                        [|(or_boolean_to_js
                                             AddEventListenerOptions.t_to_js
                                             x148)|])
                               | None -> ());
                              x147))|])
    let (addEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x161 : 'tags this) ->
        fun ~type_:(x155 : string) ->
          fun ~listener:(x156 : EventListenerOrEventListenerObject.t) ->
            fun ?options:(x157 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x163 = this_to_js Obj.magic x161 in
                   Ojs.call (Ojs.get_prop_ascii x163 "addEventListener")
                     "apply"
                     [|x163;((let x158 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x158 "push"
                                   [|(Ojs.string_to_js x155)|]);
                              ignore
                                (Ojs.call x158 "push"
                                   [|(EventListenerOrEventListenerObject.t_to_js
                                        x156)|]);
                              (match x157 with
                               | Some x159 ->
                                   ignore
                                     (Ojs.call x158 "push"
                                        [|(or_boolean_to_js
                                             AddEventListenerOptions.t_to_js
                                             x159)|])
                               | None -> ());
                              x158))|])
    let (removeEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x172 : 'tags this) ->
        fun ~type_:(x164 : 'K) ->
          fun ~listener:(x165 : this:t -> ev:any -> any) ->
            fun ?options:(x166 : EventListenerOptions.t or_boolean option) ->
              fun () ->
                ignore
                  (let x174 = this_to_js Obj.magic x172 in
                   Ojs.call (Ojs.get_prop_ascii x174 "removeEventListener")
                     "apply"
                     [|x174;((let x167 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x167 "push" [|(Obj.magic x164)|]);
                              ignore
                                (Ojs.call x167 "push"
                                   [|(Ojs.fun_to_js 2
                                        (fun (x170 : Ojs.t) ->
                                           fun (x171 : Ojs.t) ->
                                             any_to_js
                                               (x165 ~this:(t_of_js x170)
                                                  ~ev:(any_of_js x171))))|]);
                              (match x166 with
                               | Some x168 ->
                                   ignore
                                     (Ojs.call x167 "push"
                                        [|(or_boolean_to_js
                                             EventListenerOptions.t_to_js
                                             x168)|])
                               | None -> ());
                              x167))|])
    let (removeEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x181 : 'tags this) ->
        fun ~type_:(x175 : string) ->
          fun ~listener:(x176 : EventListenerOrEventListenerObject.t) ->
            fun ?options:(x177 : EventListenerOptions.t or_boolean option) ->
              fun () ->
                ignore
                  (let x183 = this_to_js Obj.magic x181 in
                   Ojs.call (Ojs.get_prop_ascii x183 "removeEventListener")
                     "apply"
                     [|x183;((let x178 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x178 "push"
                                   [|(Ojs.string_to_js x175)|]);
                              ignore
                                (Ojs.call x178 "push"
                                   [|(EventListenerOrEventListenerObject.t_to_js
                                        x176)|]);
                              (match x177 with
                               | Some x179 ->
                                   ignore
                                     (Ojs.call x178 "push"
                                        [|(or_boolean_to_js
                                             EventListenerOptions.t_to_js
                                             x179)|])
                               | None -> ());
                              x178))|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "AbortSignal")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "AbortSignal") [||])
  end
 and
  AddEventListenerOptions:sig
                            type t =
                              [ `AddEventListenerOptions 
                              | `EventListenerOptions ] intf
                            type t_0 = t
                            [@@@js.stop ]
                            type tags =
                              [ `AddEventListenerOptions 
                              | `EventListenerOptions ]
                            type tags_0 = tags
                            [@@@js.start ]
                            [@@@js.implem
                              type tags =
                                [ `AddEventListenerOptions 
                                | `EventListenerOptions ]
                              type tags_0 = tags]
                            type 'tags this =
                              'tags intf constraint 'tags =
                                          [> `AddEventListenerOptions ]
                            val t_to_js : t -> Ojs.t
                            val t_of_js : Ojs.t -> t
                            val t_0_to_js : t_0 -> Ojs.t
                            val t_0_of_js : Ojs.t -> t_0
                            val get_once : 'tags this -> bool
                            val set_once : 'tags this -> bool -> unit
                            val get_passive : 'tags this -> bool
                            val set_passive : 'tags this -> bool -> unit
                            val get_signal : 'tags this -> AbortSignal.t
                            val set_signal :
                              'tags this -> AbortSignal.t -> unit
                            val cast_from : 'tags this -> t
                          end =
  struct
    type t = [ `AddEventListenerOptions  | `EventListenerOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x185 : Ojs.t) -> t_of_js x185
    and t_0_to_js : t_0 -> Ojs.t = fun (x184 : t) -> t_to_js x184
    type tags = [ `AddEventListenerOptions  | `EventListenerOptions ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `AddEventListenerOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x188 : Ojs.t) -> intf_of_js __tags_of_js x188
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x186 : __tags intf) -> intf_to_js __tags_to_js x186
    let (get_once : 'tags this -> bool) =
      fun (x190 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x190) "once")
    let (set_once : 'tags this -> bool -> unit) =
      fun (x192 : 'tags this) ->
        fun (x193 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x192) "once"
            (Ojs.bool_to_js x193)
    let (get_passive : 'tags this -> bool) =
      fun (x195 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x195) "passive")
    let (set_passive : 'tags this -> bool -> unit) =
      fun (x197 : 'tags this) ->
        fun (x198 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x197) "passive"
            (Ojs.bool_to_js x198)
    let (get_signal : 'tags this -> AbortSignal.t) =
      fun (x200 : 'tags this) ->
        AbortSignal.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x200) "signal")
    let (set_signal : 'tags this -> AbortSignal.t -> unit) =
      fun (x202 : 'tags this) ->
        fun (x203 : AbortSignal.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x202) "signal"
            (AbortSignal.t_to_js x203)
    let cast_from = Obj.magic
  end and
       Event:sig
               type t = [ `Event ] intf
               type t_0 = t
               [@@@js.stop ]
               type tags = [ `Event ]
               type tags_0 = tags
               [@@@js.start ]
               [@@@js.implem type tags = [ `Event ]
                 type tags_0 = tags]
               type 'tags this = 'tags intf constraint 'tags = [> `Event ]
               val t_to_js : t -> Ojs.t
               val t_of_js : Ojs.t -> t
               val t_0_to_js : t_0 -> Ojs.t
               val t_0_of_js : Ojs.t -> t_0
               val get_bubbles : 'tags this -> bool
               val get_cancelBubble : 'tags this -> bool
               val set_cancelBubble : 'tags this -> bool -> unit
               val get_cancelable : 'tags this -> bool
               val get_composed : 'tags this -> bool
               val get_currentTarget : 'tags this -> EventTarget.t or_null
               val get_defaultPrevented : 'tags this -> bool
               val get_eventPhase : 'tags this -> float
               val get_isTrusted : 'tags this -> bool
               val get_returnValue : 'tags this -> bool
               val set_returnValue : 'tags this -> bool -> unit
               val get_srcElement : 'tags this -> EventTarget.t or_null
               val get_target : 'tags this -> EventTarget.t or_null
               val get_timeStamp : 'tags this -> DOMHighResTimeStamp.t
               val get_type : 'tags this -> string
               val composedPath : 'tags this -> EventTarget.t list
               val initEvent :
                 'tags this ->
                   type_:string ->
                     ?bubbles:bool -> ?cancelable:bool -> unit -> unit
               val preventDefault : 'tags this -> unit
               val stopImmediatePropagation : 'tags this -> unit
               val stopPropagation : 'tags this -> unit
               val get_AT_TARGET : 'tags this -> float
               val get_BUBBLING_PHASE : 'tags this -> float
               val get_CAPTURING_PHASE : 'tags this -> float
               val get_NONE : 'tags this -> float
               val cast_from : 'tags this -> t
               val prototype : unit -> t
               val create :
                 type_:string -> ?eventInitDict:EventInit.t -> unit -> t
               val at_target : unit -> float
               val bubbling_phase : unit -> float
               val capturing_phase : unit -> float
               val none : unit -> float
             end =
       struct
         type t = [ `Event ] intf
         let rec t_of_js : Ojs.t -> t = Obj.magic
         and t_to_js : t -> Ojs.t = Obj.magic
         type t_0 = t
         let rec t_0_of_js : Ojs.t -> t_0 =
           fun (x206 : Ojs.t) -> t_of_js x206
         and t_0_to_js : t_0 -> Ojs.t = fun (x205 : t) -> t_to_js x205
         type tags = [ `Event ]
         type tags_0 = tags
         type 'tags this = 'tags intf constraint 'tags = [> `Event ]
         let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
           = fun (type __tags) ->
           fun (__tags_of_js : Ojs.t -> __tags) ->
             fun (x209 : Ojs.t) -> intf_of_js __tags_of_js x209
         and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
           fun (type __tags) ->
           fun (__tags_to_js : __tags -> Ojs.t) ->
             fun (x207 : __tags intf) -> intf_to_js __tags_to_js x207
         let (get_bubbles : 'tags this -> bool) =
           fun (x211 : 'tags this) ->
             Ojs.bool_of_js
               (Ojs.get_prop_ascii (this_to_js Obj.magic x211) "bubbles")
         let (get_cancelBubble : 'tags this -> bool) =
           fun (x213 : 'tags this) ->
             Ojs.bool_of_js
               (Ojs.get_prop_ascii (this_to_js Obj.magic x213) "cancelBubble")
         let (set_cancelBubble : 'tags this -> bool -> unit) =
           fun (x215 : 'tags this) ->
             fun (x216 : bool) ->
               Ojs.set_prop_ascii (this_to_js Obj.magic x215) "cancelBubble"
                 (Ojs.bool_to_js x216)
         let (get_cancelable : 'tags this -> bool) =
           fun (x218 : 'tags this) ->
             Ojs.bool_of_js
               (Ojs.get_prop_ascii (this_to_js Obj.magic x218) "cancelable")
         let (get_composed : 'tags this -> bool) =
           fun (x220 : 'tags this) ->
             Ojs.bool_of_js
               (Ojs.get_prop_ascii (this_to_js Obj.magic x220) "composed")
         let (get_currentTarget : 'tags this -> EventTarget.t or_null) =
           fun (x222 : 'tags this) ->
             or_null_of_js EventTarget.t_of_js
               (Ojs.get_prop_ascii (this_to_js Obj.magic x222)
                  "currentTarget")
         let (get_defaultPrevented : 'tags this -> bool) =
           fun (x225 : 'tags this) ->
             Ojs.bool_of_js
               (Ojs.get_prop_ascii (this_to_js Obj.magic x225)
                  "defaultPrevented")
         let (get_eventPhase : 'tags this -> float) =
           fun (x227 : 'tags this) ->
             Ojs.float_of_js
               (Ojs.get_prop_ascii (this_to_js Obj.magic x227) "eventPhase")
         let (get_isTrusted : 'tags this -> bool) =
           fun (x229 : 'tags this) ->
             Ojs.bool_of_js
               (Ojs.get_prop_ascii (this_to_js Obj.magic x229) "isTrusted")
         let (get_returnValue : 'tags this -> bool) =
           fun (x231 : 'tags this) ->
             Ojs.bool_of_js
               (Ojs.get_prop_ascii (this_to_js Obj.magic x231) "returnValue")
         let (set_returnValue : 'tags this -> bool -> unit) =
           fun (x233 : 'tags this) ->
             fun (x234 : bool) ->
               Ojs.set_prop_ascii (this_to_js Obj.magic x233) "returnValue"
                 (Ojs.bool_to_js x234)
         let (get_srcElement : 'tags this -> EventTarget.t or_null) =
           fun (x236 : 'tags this) ->
             or_null_of_js EventTarget.t_of_js
               (Ojs.get_prop_ascii (this_to_js Obj.magic x236) "srcElement")
         let (get_target : 'tags this -> EventTarget.t or_null) =
           fun (x239 : 'tags this) ->
             or_null_of_js EventTarget.t_of_js
               (Ojs.get_prop_ascii (this_to_js Obj.magic x239) "target")
         let (get_timeStamp : 'tags this -> DOMHighResTimeStamp.t) =
           fun (x242 : 'tags this) ->
             DOMHighResTimeStamp.t_of_js
               (Ojs.get_prop_ascii (this_to_js Obj.magic x242) "timeStamp")
         let (get_type : 'tags this -> string) =
           fun (x244 : 'tags this) ->
             Ojs.string_of_js
               (Ojs.get_prop_ascii (this_to_js Obj.magic x244) "type")
         let (composedPath : 'tags this -> EventTarget.t list) =
           fun (x246 : 'tags this) ->
             Ojs.list_of_js EventTarget.t_of_js
               (Ojs.call (this_to_js Obj.magic x246) "composedPath" [||])
         let (initEvent :
           'tags this ->
             type_:string ->
               ?bubbles:bool -> ?cancelable:bool -> unit -> unit)
           =
           fun (x255 : 'tags this) ->
             fun ~type_:(x249 : string) ->
               fun ?bubbles:(x250 : bool option) ->
                 fun ?cancelable:(x251 : bool option) ->
                   fun () ->
                     ignore
                       (let x257 = this_to_js Obj.magic x255 in
                        Ojs.call (Ojs.get_prop_ascii x257 "initEvent")
                          "apply"
                          [|x257;((let x252 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x252 "push"
                                        [|(Ojs.string_to_js x249)|]);
                                   (match x250 with
                                    | Some x254 ->
                                        ignore
                                          (Ojs.call x252 "push"
                                             [|(Ojs.bool_to_js x254)|])
                                    | None -> ());
                                   (match x251 with
                                    | Some x253 ->
                                        ignore
                                          (Ojs.call x252 "push"
                                             [|(Ojs.bool_to_js x253)|])
                                    | None -> ());
                                   x252))|])
         let (preventDefault : 'tags this -> unit) =
           fun (x258 : 'tags this) ->
             ignore
               (Ojs.call (this_to_js Obj.magic x258) "preventDefault" [||])
         let (stopImmediatePropagation : 'tags this -> unit) =
           fun (x260 : 'tags this) ->
             ignore
               (Ojs.call (this_to_js Obj.magic x260)
                  "stopImmediatePropagation" [||])
         let (stopPropagation : 'tags this -> unit) =
           fun (x262 : 'tags this) ->
             ignore
               (Ojs.call (this_to_js Obj.magic x262) "stopPropagation" [||])
         let (get_AT_TARGET : 'tags this -> float) =
           fun (x264 : 'tags this) ->
             Ojs.float_of_js
               (Ojs.get_prop_ascii (this_to_js Obj.magic x264) "AT_TARGET")
         let (get_BUBBLING_PHASE : 'tags this -> float) =
           fun (x266 : 'tags this) ->
             Ojs.float_of_js
               (Ojs.get_prop_ascii (this_to_js Obj.magic x266)
                  "BUBBLING_PHASE")
         let (get_CAPTURING_PHASE : 'tags this -> float) =
           fun (x268 : 'tags this) ->
             Ojs.float_of_js
               (Ojs.get_prop_ascii (this_to_js Obj.magic x268)
                  "CAPTURING_PHASE")
         let (get_NONE : 'tags this -> float) =
           fun (x270 : 'tags this) ->
             Ojs.float_of_js
               (Ojs.get_prop_ascii (this_to_js Obj.magic x270) "NONE")
         let cast_from = Obj.magic
         let (prototype : unit -> t) =
           fun () ->
             t_of_js
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Event")
                  "prototype")
         let (create :
           type_:string -> ?eventInitDict:EventInit.t -> unit -> t) =
           fun ~type_:(x272 : string) ->
             fun ?eventInitDict:(x273 : EventInit.t option) ->
               fun () ->
                 t_of_js
                   (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Event")
                      (let x274 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       ignore
                         (Ojs.call x274 "push" [|(Ojs.string_to_js x272)|]);
                       (match x273 with
                        | Some x275 ->
                            ignore
                              (Ojs.call x274 "push"
                                 [|(EventInit.t_to_js x275)|])
                        | None -> ());
                       x274))
         let (at_target : unit -> float) =
           fun () ->
             Ojs.float_of_js
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Event")
                  "AT_TARGET")
         let (bubbling_phase : unit -> float) =
           fun () ->
             Ojs.float_of_js
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Event")
                  "BUBBLING_PHASE")
         let (capturing_phase : unit -> float) =
           fun () ->
             Ojs.float_of_js
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Event")
                  "CAPTURING_PHASE")
         let (none : unit -> float) =
           fun () ->
             Ojs.float_of_js
               (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Event")
                  "NONE")
       end and
            EventListener:sig
                            type t = [ `EventListener ] intf
                            type t_0 = t
                            [@@@js.stop ]
                            type tags = [ `EventListener ]
                            type tags_0 = tags
                            [@@@js.start ]
                            [@@@js.implem
                              type tags = [ `EventListener ]
                              type tags_0 = tags]
                            type 'tags this =
                              'tags intf constraint 'tags =
                                          [> `EventListener ]
                            val t_to_js : t -> Ojs.t
                            val t_of_js : Ojs.t -> t
                            val t_0_to_js : t_0 -> Ojs.t
                            val t_0_of_js : Ojs.t -> t_0
                            val apply : 'tags this -> evt:Event.t -> unit
                            val cast_from : 'tags this -> t
                          end =
            struct
              type t = [ `EventListener ] intf
              let rec t_of_js : Ojs.t -> t = Obj.magic
              and t_to_js : t -> Ojs.t = Obj.magic
              type t_0 = t
              let rec t_0_of_js : Ojs.t -> t_0 =
                fun (x277 : Ojs.t) -> t_of_js x277
              and t_0_to_js : t_0 -> Ojs.t = fun (x276 : t) -> t_to_js x276
              type tags = [ `EventListener ]
              type tags_0 = tags
              type 'tags this =
                'tags intf constraint 'tags = [> `EventListener ]
              let rec this_of_js :
                'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this = fun (type
                __tags) ->
                fun (__tags_of_js : Ojs.t -> __tags) ->
                  fun (x280 : Ojs.t) -> intf_of_js __tags_of_js x280
              and this_to_js :
                'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun (type
                __tags) ->
                fun (__tags_to_js : __tags -> Ojs.t) ->
                  fun (x278 : __tags intf) -> intf_to_js __tags_to_js x278
              let (apply : 'tags this -> evt:Event.t -> unit) =
                fun (x283 : 'tags this) ->
                  fun ~evt:(x282 : Event.t) ->
                    ignore
                      (Ojs.apply (this_to_js Obj.magic x283)
                         [|(Event.t_to_js x282)|])
              let cast_from = Obj.magic
            end and
                 EventListenerObject:sig
                                       type t = [ `EventListenerObject ] intf
                                       type t_0 = t
                                       [@@@js.stop ]
                                       type tags = [ `EventListenerObject ]
                                       type tags_0 = tags
                                       [@@@js.start ]
                                       [@@@js.implem
                                         type tags = [ `EventListenerObject ]
                                         type tags_0 = tags]
                                       type 'tags this =
                                         'tags intf constraint 'tags =
                                                     [>
                                                       `EventListenerObject ]
                                       val t_to_js : t -> Ojs.t
                                       val t_of_js : Ojs.t -> t
                                       val t_0_to_js : t_0 -> Ojs.t
                                       val t_0_of_js : Ojs.t -> t_0
                                       val handleEvent :
                                         'tags this ->
                                           object_:Event.t -> unit
                                       val cast_from : 'tags this -> t
                                     end =
                 struct
                   type t = [ `EventListenerObject ] intf
                   let rec t_of_js : Ojs.t -> t = Obj.magic
                   and t_to_js : t -> Ojs.t = Obj.magic
                   type t_0 = t
                   let rec t_0_of_js : Ojs.t -> t_0 =
                     fun (x286 : Ojs.t) -> t_of_js x286
                   and t_0_to_js : t_0 -> Ojs.t =
                     fun (x285 : t) -> t_to_js x285
                   type tags = [ `EventListenerObject ]
                   type tags_0 = tags
                   type 'tags this =
                     'tags intf constraint 'tags = [> `EventListenerObject ]
                   let rec this_of_js :
                     'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this = fun
                     (type __tags) ->
                     fun (__tags_of_js : Ojs.t -> __tags) ->
                       fun (x289 : Ojs.t) -> intf_of_js __tags_of_js x289
                   and this_to_js :
                     'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
                     (type __tags) ->
                     fun (__tags_to_js : __tags -> Ojs.t) ->
                       fun (x287 : __tags intf) ->
                         intf_to_js __tags_to_js x287
                   let (handleEvent : 'tags this -> object_:Event.t -> unit)
                     =
                     fun (x292 : 'tags this) ->
                       fun ~object_:(x291 : Event.t) ->
                         ignore
                           (Ojs.call (this_to_js Obj.magic x292)
                              "handleEvent" [|(Event.t_to_js x291)|])
                   let cast_from = Obj.magic
                 end and
                      EventListenerOrEventListenerObject:sig
                                                           type t =
                                                             (EventListener.t,
                                                               EventListenerObject.t)
                                                               union2
                                                           type t_0 = t
                                                           val t_to_js :
                                                             t -> Ojs.t
                                                           val t_of_js :
                                                             Ojs.t -> t
                                                           val t_0_to_js :
                                                             t_0 -> Ojs.t
                                                           val t_0_of_js :
                                                             Ojs.t -> t_0
                                                         end =
                      struct
                        type t =
                          (EventListener.t, EventListenerObject.t) union2
                        let rec t_of_js : Ojs.t -> t =
                          fun (x297 : Ojs.t) ->
                            union2_of_js EventListener.t_of_js
                              EventListenerObject.t_of_js x297
                        and t_to_js : t -> Ojs.t =
                          fun
                            (x294 :
                              (EventListener.t, EventListenerObject.t) union2)
                            ->
                            union2_to_js EventListener.t_to_js
                              EventListenerObject.t_to_js x294
                        type t_0 = t
                        let rec t_0_of_js : Ojs.t -> t_0 =
                          fun (x301 : Ojs.t) -> t_of_js x301
                        and t_0_to_js : t_0 -> Ojs.t =
                          fun (x300 : t) -> t_to_js x300
                      end and
                           EventTarget:sig
                                         type t = [ `EventTarget ] intf
                                         type t_0 = t
                                         [@@@js.stop ]
                                         type tags = [ `EventTarget ]
                                         type tags_0 = tags
                                         [@@@js.start ]
                                         [@@@js.implem
                                           type tags = [ `EventTarget ]
                                           type tags_0 = tags]
                                         type 'tags this =
                                           'tags intf constraint 'tags =
                                                       [> `EventTarget ]
                                         val t_to_js : t -> Ojs.t
                                         val t_of_js : Ojs.t -> t
                                         val t_0_to_js : t_0 -> Ojs.t
                                         val t_0_of_js : Ojs.t -> t_0
                                         val addEventListener :
                                           'tags this ->
                                             type_:string ->
                                               callback:EventListenerOrEventListenerObject.t
                                                 or_null ->
                                                 ?options:AddEventListenerOptions.t
                                                   or_boolean -> unit -> unit
                                         val dispatchEvent :
                                           'tags this ->
                                             event:Event.t -> bool
                                         val removeEventListener :
                                           'tags this ->
                                             type_:string ->
                                               callback:EventListenerOrEventListenerObject.t
                                                 or_null ->
                                                 ?options:EventListenerOptions.t
                                                   or_boolean -> unit -> unit
                                         val cast_from : 'tags this -> t
                                         val prototype : unit -> t
                                         val create : unit -> t
                                       end =
                           struct
                             type t = [ `EventTarget ] intf
                             let rec t_of_js : Ojs.t -> t = Obj.magic
                             and t_to_js : t -> Ojs.t = Obj.magic
                             type t_0 = t
                             let rec t_0_of_js : Ojs.t -> t_0 =
                               fun (x303 : Ojs.t) -> t_of_js x303
                             and t_0_to_js : t_0 -> Ojs.t =
                               fun (x302 : t) -> t_to_js x302
                             type tags = [ `EventTarget ]
                             type tags_0 = tags
                             type 'tags this =
                               'tags intf constraint 'tags =
                                           [> `EventTarget ]
                             let rec this_of_js :
                               'tags .
                                 (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
                               = fun (type __tags) ->
                               fun (__tags_of_js : Ojs.t -> __tags) ->
                                 fun (x306 : Ojs.t) ->
                                   intf_of_js __tags_of_js x306
                             and this_to_js :
                               'tags .
                                 ('tags -> Ojs.t) -> 'tags this -> Ojs.t
                               = fun (type __tags) ->
                               fun (__tags_to_js : __tags -> Ojs.t) ->
                                 fun (x304 : __tags intf) ->
                                   intf_to_js __tags_to_js x304
                             let (addEventListener :
                               'tags this ->
                                 type_:string ->
                                   callback:EventListenerOrEventListenerObject.t
                                     or_null ->
                                     ?options:AddEventListenerOptions.t
                                       or_boolean -> unit -> unit)
                               =
                               fun (x315 : 'tags this) ->
                                 fun ~type_:(x308 : string) ->
                                   fun
                                     ~callback:(x309 :
                                                 EventListenerOrEventListenerObject.t
                                                   or_null)
                                     ->
                                     fun
                                       ?options:(x310 :
                                                  AddEventListenerOptions.t
                                                    or_boolean option)
                                       ->
                                       fun () ->
                                         ignore
                                           (let x317 =
                                              this_to_js Obj.magic x315 in
                                            Ojs.call
                                              (Ojs.get_prop_ascii x317
                                                 "addEventListener") "apply"
                                              [|x317;((let x311 =
                                                         Ojs.new_obj
                                                           (Ojs.get_prop_ascii
                                                              Ojs.global
                                                              "Array") 
                                                           [||] in
                                                       ignore
                                                         (Ojs.call x311
                                                            "push"
                                                            [|(Ojs.string_to_js
                                                                 x308)|]);
                                                       ignore
                                                         (Ojs.call x311
                                                            "push"
                                                            [|(or_null_to_js
                                                                 EventListenerOrEventListenerObject.t_to_js
                                                                 x309)|]);
                                                       (match x310 with
                                                        | Some x312 ->
                                                            ignore
                                                              (Ojs.call x311
                                                                 "push"
                                                                 [|(or_boolean_to_js
                                                                    AddEventListenerOptions.t_to_js
                                                                    x312)|])
                                                        | None -> ());
                                                       x311))|])
                             let (dispatchEvent :
                               'tags this -> event:Event.t -> bool) =
                               fun (x319 : 'tags this) ->
                                 fun ~event:(x318 : Event.t) ->
                                   Ojs.bool_of_js
                                     (Ojs.call (this_to_js Obj.magic x319)
                                        "dispatchEvent"
                                        [|(Event.t_to_js x318)|])
                             let (removeEventListener :
                               'tags this ->
                                 type_:string ->
                                   callback:EventListenerOrEventListenerObject.t
                                     or_null ->
                                     ?options:EventListenerOptions.t
                                       or_boolean -> unit -> unit)
                               =
                               fun (x328 : 'tags this) ->
                                 fun ~type_:(x321 : string) ->
                                   fun
                                     ~callback:(x322 :
                                                 EventListenerOrEventListenerObject.t
                                                   or_null)
                                     ->
                                     fun
                                       ?options:(x323 :
                                                  EventListenerOptions.t
                                                    or_boolean option)
                                       ->
                                       fun () ->
                                         ignore
                                           (let x330 =
                                              this_to_js Obj.magic x328 in
                                            Ojs.call
                                              (Ojs.get_prop_ascii x330
                                                 "removeEventListener")
                                              "apply"
                                              [|x330;((let x324 =
                                                         Ojs.new_obj
                                                           (Ojs.get_prop_ascii
                                                              Ojs.global
                                                              "Array") 
                                                           [||] in
                                                       ignore
                                                         (Ojs.call x324
                                                            "push"
                                                            [|(Ojs.string_to_js
                                                                 x321)|]);
                                                       ignore
                                                         (Ojs.call x324
                                                            "push"
                                                            [|(or_null_to_js
                                                                 EventListenerOrEventListenerObject.t_to_js
                                                                 x322)|]);
                                                       (match x323 with
                                                        | Some x325 ->
                                                            ignore
                                                              (Ojs.call x324
                                                                 "push"
                                                                 [|(or_boolean_to_js
                                                                    EventListenerOptions.t_to_js
                                                                    x325)|])
                                                        | None -> ());
                                                       x324))|])
                             let cast_from = Obj.magic
                             let (prototype : unit -> t) =
                               fun () ->
                                 t_of_js
                                   (Ojs.get_prop_ascii
                                      (Ojs.get_prop_ascii Ojs.global
                                         "EventTarget") "prototype")
                             let (create : unit -> t) =
                               fun () ->
                                 t_of_js
                                   (Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global
                                         "EventTarget") [||])
                           end
module Performance =
  struct
    type t = [ `EventTarget  | `Performance ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x332 : Ojs.t) -> t_of_js x332
    and t_0_to_js : t_0 -> Ojs.t = fun (x331 : t) -> t_to_js x331
    type tags = [ `EventTarget  | `Performance ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Performance ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x335 : Ojs.t) -> intf_of_js __tags_of_js x335
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x333 : __tags intf) -> intf_to_js __tags_to_js x333
    let (get_onresourcetimingbufferfull :
      'tags this -> (this:t -> ev:Event.t -> any) or_null) =
      fun (x337 : 'tags this) ->
        or_null_of_js
          (fun (x339 : Ojs.t) ->
             fun ~this:(x340 : t) ->
               fun ~ev:(x341 : Event.t) ->
                 any_of_js
                   (Ojs.apply x339 [|(t_to_js x340);(Event.t_to_js x341)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x337)
             "onresourcetimingbufferfull")
    let (set_onresourcetimingbufferfull :
      'tags this -> (this:t -> ev:Event.t -> any) or_null -> unit) =
      fun (x342 : 'tags this) ->
        fun (x343 : (this:t -> ev:Event.t -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x342)
            "onresourcetimingbufferfull"
            (or_null_to_js
               (fun (x344 : this:t -> ev:Event.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x345 : Ojs.t) ->
                       fun (x346 : Ojs.t) ->
                         any_to_js
                           (x344 ~this:(t_of_js x345)
                              ~ev:(Event.t_of_js x346)))) x343)
    let (get_timeOrigin : 'tags this -> DOMHighResTimeStamp.t) =
      fun (x348 : 'tags this) ->
        DOMHighResTimeStamp.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x348) "timeOrigin")
    let (clearMarks : 'tags this -> ?markName:string -> unit -> unit) =
      fun (x353 : 'tags this) ->
        fun ?markName:(x350 : string option) ->
          fun () ->
            ignore
              (let x355 = this_to_js Obj.magic x353 in
               Ojs.call (Ojs.get_prop_ascii x355 "clearMarks") "apply"
                 [|x355;((let x351 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x350 with
                           | Some x352 ->
                               ignore
                                 (Ojs.call x351 "push"
                                    [|(Ojs.string_to_js x352)|])
                           | None -> ());
                          x351))|])
    let (clearMeasures : 'tags this -> ?measureName:string -> unit -> unit) =
      fun (x359 : 'tags this) ->
        fun ?measureName:(x356 : string option) ->
          fun () ->
            ignore
              (let x361 = this_to_js Obj.magic x359 in
               Ojs.call (Ojs.get_prop_ascii x361 "clearMeasures") "apply"
                 [|x361;((let x357 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x356 with
                           | Some x358 ->
                               ignore
                                 (Ojs.call x357 "push"
                                    [|(Ojs.string_to_js x358)|])
                           | None -> ());
                          x357))|])
    let (clearResourceTimings : 'tags this -> unit) =
      fun (x362 : 'tags this) ->
        ignore
          (Ojs.call (this_to_js Obj.magic x362) "clearResourceTimings" [||])
    let (getEntries : 'tags this -> PerformanceEntryList.t) =
      fun (x364 : 'tags this) ->
        PerformanceEntryList.t_of_js
          (Ojs.call (this_to_js Obj.magic x364) "getEntries" [||])
    let (getEntriesByName :
      'tags this ->
        name:string -> ?type_:string -> unit -> PerformanceEntryList.t)
      =
      fun (x370 : 'tags this) ->
        fun ~name:(x366 : string) ->
          fun ?type_:(x367 : string option) ->
            fun () ->
              PerformanceEntryList.t_of_js
                (let x372 = this_to_js Obj.magic x370 in
                 Ojs.call (Ojs.get_prop_ascii x372 "getEntriesByName")
                   "apply"
                   [|x372;((let x368 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x368 "push"
                                 [|(Ojs.string_to_js x366)|]);
                            (match x367 with
                             | Some x369 ->
                                 ignore
                                   (Ojs.call x368 "push"
                                      [|(Ojs.string_to_js x369)|])
                             | None -> ());
                            x368))|])
    let (getEntriesByType :
      'tags this -> type_:string -> PerformanceEntryList.t) =
      fun (x374 : 'tags this) ->
        fun ~type_:(x373 : string) ->
          PerformanceEntryList.t_of_js
            (Ojs.call (this_to_js Obj.magic x374) "getEntriesByType"
               [|(Ojs.string_to_js x373)|])
    let (mark :
      'tags this ->
        markName:string ->
          ?markOptions:PerformanceMarkOptions.t -> unit -> PerformanceMark.t)
      =
      fun (x380 : 'tags this) ->
        fun ~markName:(x376 : string) ->
          fun ?markOptions:(x377 : PerformanceMarkOptions.t option) ->
            fun () ->
              PerformanceMark.t_of_js
                (let x382 = this_to_js Obj.magic x380 in
                 Ojs.call (Ojs.get_prop_ascii x382 "mark") "apply"
                   [|x382;((let x378 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x378 "push"
                                 [|(Ojs.string_to_js x376)|]);
                            (match x377 with
                             | Some x379 ->
                                 ignore
                                   (Ojs.call x378 "push"
                                      [|(PerformanceMarkOptions.t_to_js x379)|])
                             | None -> ());
                            x378))|])
    let (measure :
      'tags this ->
        measureName:string ->
          ?startOrMeasureOptions:PerformanceMeasureOptions.t or_string ->
            ?endMark:string -> unit -> PerformanceMeasure.t)
      =
      fun (x390 : 'tags this) ->
        fun ~measureName:(x383 : string) ->
          fun
            ?startOrMeasureOptions:(x384 :
                                     PerformanceMeasureOptions.t or_string
                                       option)
            ->
            fun ?endMark:(x385 : string option) ->
              fun () ->
                PerformanceMeasure.t_of_js
                  (let x392 = this_to_js Obj.magic x390 in
                   Ojs.call (Ojs.get_prop_ascii x392 "measure") "apply"
                     [|x392;((let x386 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x386 "push"
                                   [|(Ojs.string_to_js x383)|]);
                              (match x384 with
                               | Some x388 ->
                                   ignore
                                     (Ojs.call x386 "push"
                                        [|(or_string_to_js
                                             PerformanceMeasureOptions.t_to_js
                                             x388)|])
                               | None -> ());
                              (match x385 with
                               | Some x387 ->
                                   ignore
                                     (Ojs.call x386 "push"
                                        [|(Ojs.string_to_js x387)|])
                               | None -> ());
                              x386))|])
    let (now : 'tags this -> DOMHighResTimeStamp.t) =
      fun (x393 : 'tags this) ->
        DOMHighResTimeStamp.t_of_js
          (Ojs.call (this_to_js Obj.magic x393) "now" [||])
    let (setResourceTimingBufferSize : 'tags this -> maxSize:float -> unit) =
      fun (x396 : 'tags this) ->
        fun ~maxSize:(x395 : float) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x396)
               "setResourceTimingBufferSize" [|(Ojs.float_to_js x395)|])
    let (toJSON : 'tags this -> any) =
      fun (x398 : 'tags this) ->
        any_of_js (Ojs.call (this_to_js Obj.magic x398) "toJSON" [||])
    let (addEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x408 : 'tags this) ->
        fun ~type_:(x400 : 'K) ->
          fun ~listener:(x401 : this:t -> ev:any -> any) ->
            fun ?options:(x402 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x410 = this_to_js Obj.magic x408 in
                   Ojs.call (Ojs.get_prop_ascii x410 "addEventListener")
                     "apply"
                     [|x410;((let x403 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x403 "push" [|(Obj.magic x400)|]);
                              ignore
                                (Ojs.call x403 "push"
                                   [|(Ojs.fun_to_js 2
                                        (fun (x406 : Ojs.t) ->
                                           fun (x407 : Ojs.t) ->
                                             any_to_js
                                               (x401 ~this:(t_of_js x406)
                                                  ~ev:(any_of_js x407))))|]);
                              (match x402 with
                               | Some x404 ->
                                   ignore
                                     (Ojs.call x403 "push"
                                        [|(or_boolean_to_js
                                             AddEventListenerOptions.t_to_js
                                             x404)|])
                               | None -> ());
                              x403))|])
    let (addEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x417 : 'tags this) ->
        fun ~type_:(x411 : string) ->
          fun ~listener:(x412 : EventListenerOrEventListenerObject.t) ->
            fun ?options:(x413 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x419 = this_to_js Obj.magic x417 in
                   Ojs.call (Ojs.get_prop_ascii x419 "addEventListener")
                     "apply"
                     [|x419;((let x414 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x414 "push"
                                   [|(Ojs.string_to_js x411)|]);
                              ignore
                                (Ojs.call x414 "push"
                                   [|(EventListenerOrEventListenerObject.t_to_js
                                        x412)|]);
                              (match x413 with
                               | Some x415 ->
                                   ignore
                                     (Ojs.call x414 "push"
                                        [|(or_boolean_to_js
                                             AddEventListenerOptions.t_to_js
                                             x415)|])
                               | None -> ());
                              x414))|])
    let (removeEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x428 : 'tags this) ->
        fun ~type_:(x420 : 'K) ->
          fun ~listener:(x421 : this:t -> ev:any -> any) ->
            fun ?options:(x422 : EventListenerOptions.t or_boolean option) ->
              fun () ->
                ignore
                  (let x430 = this_to_js Obj.magic x428 in
                   Ojs.call (Ojs.get_prop_ascii x430 "removeEventListener")
                     "apply"
                     [|x430;((let x423 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x423 "push" [|(Obj.magic x420)|]);
                              ignore
                                (Ojs.call x423 "push"
                                   [|(Ojs.fun_to_js 2
                                        (fun (x426 : Ojs.t) ->
                                           fun (x427 : Ojs.t) ->
                                             any_to_js
                                               (x421 ~this:(t_of_js x426)
                                                  ~ev:(any_of_js x427))))|]);
                              (match x422 with
                               | Some x424 ->
                                   ignore
                                     (Ojs.call x423 "push"
                                        [|(or_boolean_to_js
                                             EventListenerOptions.t_to_js
                                             x424)|])
                               | None -> ());
                              x423))|])
    let (removeEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x437 : 'tags this) ->
        fun ~type_:(x431 : string) ->
          fun ~listener:(x432 : EventListenerOrEventListenerObject.t) ->
            fun ?options:(x433 : EventListenerOptions.t or_boolean option) ->
              fun () ->
                ignore
                  (let x439 = this_to_js Obj.magic x437 in
                   Ojs.call (Ojs.get_prop_ascii x439 "removeEventListener")
                     "apply"
                     [|x439;((let x434 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x434 "push"
                                   [|(Ojs.string_to_js x431)|]);
                              ignore
                                (Ojs.call x434 "push"
                                   [|(EventListenerOrEventListenerObject.t_to_js
                                        x432)|]);
                              (match x433 with
                               | Some x435 ->
                                   ignore
                                     (Ojs.call x434 "push"
                                        [|(or_boolean_to_js
                                             EventListenerOptions.t_to_js
                                             x435)|])
                               | None -> ());
                              x434))|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Performance")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Performance") [||])
  end
module PerformanceStatic =
  struct
    let (onresourcetimingbufferfull :
      unit -> (this:Performance.t -> ev:Event.t -> any) or_null) =
      fun () ->
        or_null_of_js
          (fun (x440 : Ojs.t) ->
             fun ~this:(x441 : Performance.t) ->
               fun ~ev:(x442 : Event.t) ->
                 any_of_js
                   (Ojs.apply x440
                      [|(Performance.t_to_js x441);(Event.t_to_js x442)|]))
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "performance")
             "onresourcetimingbufferfull")
    let (timeOrigin : unit -> DOMHighResTimeStamp.t) =
      fun () ->
        DOMHighResTimeStamp.t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "performance")
             "timeOrigin")
    let (clearMarks : ?markName:string -> unit -> unit) =
      fun ?markName:(x443 : string option) ->
        fun () ->
          ignore
            (let x446 = Ojs.get_prop_ascii Ojs.global "performance" in
             Ojs.call (Ojs.get_prop_ascii x446 "clearMarks") "apply"
               [|x446;((let x444 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        (match x443 with
                         | Some x445 ->
                             ignore
                               (Ojs.call x444 "push"
                                  [|(Ojs.string_to_js x445)|])
                         | None -> ());
                        x444))|])
    let (clearMeasures : ?measureName:string -> unit -> unit) =
      fun ?measureName:(x447 : string option) ->
        fun () ->
          ignore
            (let x450 = Ojs.get_prop_ascii Ojs.global "performance" in
             Ojs.call (Ojs.get_prop_ascii x450 "clearMeasures") "apply"
               [|x450;((let x448 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        (match x447 with
                         | Some x449 ->
                             ignore
                               (Ojs.call x448 "push"
                                  [|(Ojs.string_to_js x449)|])
                         | None -> ());
                        x448))|])
    let (clearResourceTimings : unit -> unit) =
      fun () ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "performance")
             "clearResourceTimings" [||])
    let (getEntries : unit -> PerformanceEntryList.t) =
      fun () ->
        PerformanceEntryList.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "performance")
             "getEntries" [||])
    let (getEntriesByName :
      name:string -> ?type_:string -> unit -> PerformanceEntryList.t) =
      fun ~name:(x451 : string) ->
        fun ?type_:(x452 : string option) ->
          fun () ->
            PerformanceEntryList.t_of_js
              (let x455 = Ojs.get_prop_ascii Ojs.global "performance" in
               Ojs.call (Ojs.get_prop_ascii x455 "getEntriesByName") "apply"
                 [|x455;((let x453 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          ignore
                            (Ojs.call x453 "push" [|(Ojs.string_to_js x451)|]);
                          (match x452 with
                           | Some x454 ->
                               ignore
                                 (Ojs.call x453 "push"
                                    [|(Ojs.string_to_js x454)|])
                           | None -> ());
                          x453))|])
    let (getEntriesByType : string -> PerformanceEntryList.t) =
      fun (x456 : string) ->
        PerformanceEntryList.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "performance")
             "getEntriesByType" [|(Ojs.string_to_js x456)|])
    let (mark :
      markName:string ->
        ?markOptions:PerformanceMarkOptions.t -> unit -> PerformanceMark.t)
      =
      fun ~markName:(x457 : string) ->
        fun ?markOptions:(x458 : PerformanceMarkOptions.t option) ->
          fun () ->
            PerformanceMark.t_of_js
              (let x461 = Ojs.get_prop_ascii Ojs.global "performance" in
               Ojs.call (Ojs.get_prop_ascii x461 "mark") "apply"
                 [|x461;((let x459 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          ignore
                            (Ojs.call x459 "push" [|(Ojs.string_to_js x457)|]);
                          (match x458 with
                           | Some x460 ->
                               ignore
                                 (Ojs.call x459 "push"
                                    [|(PerformanceMarkOptions.t_to_js x460)|])
                           | None -> ());
                          x459))|])
    let (measure :
      measureName:string ->
        ?startOrMeasureOptions:PerformanceMeasureOptions.t or_string ->
          ?endMark:string -> unit -> PerformanceMeasure.t)
      =
      fun ~measureName:(x462 : string) ->
        fun
          ?startOrMeasureOptions:(x463 :
                                   PerformanceMeasureOptions.t or_string
                                     option)
          ->
          fun ?endMark:(x464 : string option) ->
            fun () ->
              PerformanceMeasure.t_of_js
                (let x469 = Ojs.get_prop_ascii Ojs.global "performance" in
                 Ojs.call (Ojs.get_prop_ascii x469 "measure") "apply"
                   [|x469;((let x465 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x465 "push"
                                 [|(Ojs.string_to_js x462)|]);
                            (match x463 with
                             | Some x467 ->
                                 ignore
                                   (Ojs.call x465 "push"
                                      [|(or_string_to_js
                                           PerformanceMeasureOptions.t_to_js
                                           x467)|])
                             | None -> ());
                            (match x464 with
                             | Some x466 ->
                                 ignore
                                   (Ojs.call x465 "push"
                                      [|(Ojs.string_to_js x466)|])
                             | None -> ());
                            x465))|])
    let (now : unit -> DOMHighResTimeStamp.t) =
      fun () ->
        DOMHighResTimeStamp.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "performance") "now" [||])
    let (setResourceTimingBufferSize : float -> unit) =
      fun (x470 : float) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "performance")
             "setResourceTimingBufferSize" [|(Ojs.float_to_js x470)|])
    let (toJSON : unit -> any) =
      fun () ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "performance") "toJSON"
             [||])
    let (addEventListener :
      type_:'K ->
        listener:(this:Performance.t -> ev:any -> any) ->
          ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun ~type_:(x471 : 'K) ->
        fun ~listener:(x472 : this:Performance.t -> ev:any -> any) ->
          fun ?options:(x473 : AddEventListenerOptions.t or_boolean option)
            ->
            fun () ->
              ignore
                (let x479 = Ojs.get_prop_ascii Ojs.global "performance" in
                 Ojs.call (Ojs.get_prop_ascii x479 "addEventListener")
                   "apply"
                   [|x479;((let x474 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x474 "push" [|(Obj.magic x471)|]);
                            ignore
                              (Ojs.call x474 "push"
                                 [|(Ojs.fun_to_js 2
                                      (fun (x477 : Ojs.t) ->
                                         fun (x478 : Ojs.t) ->
                                           any_to_js
                                             (x472
                                                ~this:(Performance.t_of_js
                                                         x477)
                                                ~ev:(any_of_js x478))))|]);
                            (match x473 with
                             | Some x475 ->
                                 ignore
                                   (Ojs.call x474 "push"
                                      [|(or_boolean_to_js
                                           AddEventListenerOptions.t_to_js
                                           x475)|])
                             | None -> ());
                            x474))|])
    let (addEventListener' :
      type_:string ->
        listener:EventListenerOrEventListenerObject.t ->
          ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun ~type_:(x480 : string) ->
        fun ~listener:(x481 : EventListenerOrEventListenerObject.t) ->
          fun ?options:(x482 : AddEventListenerOptions.t or_boolean option)
            ->
            fun () ->
              ignore
                (let x486 = Ojs.get_prop_ascii Ojs.global "performance" in
                 Ojs.call (Ojs.get_prop_ascii x486 "addEventListener")
                   "apply"
                   [|x486;((let x483 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x483 "push"
                                 [|(Ojs.string_to_js x480)|]);
                            ignore
                              (Ojs.call x483 "push"
                                 [|(EventListenerOrEventListenerObject.t_to_js
                                      x481)|]);
                            (match x482 with
                             | Some x484 ->
                                 ignore
                                   (Ojs.call x483 "push"
                                      [|(or_boolean_to_js
                                           AddEventListenerOptions.t_to_js
                                           x484)|])
                             | None -> ());
                            x483))|])
    let (removeEventListener :
      type_:'K ->
        listener:(this:Performance.t -> ev:any -> any) ->
          ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun ~type_:(x487 : 'K) ->
        fun ~listener:(x488 : this:Performance.t -> ev:any -> any) ->
          fun ?options:(x489 : EventListenerOptions.t or_boolean option) ->
            fun () ->
              ignore
                (let x495 = Ojs.get_prop_ascii Ojs.global "performance" in
                 Ojs.call (Ojs.get_prop_ascii x495 "removeEventListener")
                   "apply"
                   [|x495;((let x490 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x490 "push" [|(Obj.magic x487)|]);
                            ignore
                              (Ojs.call x490 "push"
                                 [|(Ojs.fun_to_js 2
                                      (fun (x493 : Ojs.t) ->
                                         fun (x494 : Ojs.t) ->
                                           any_to_js
                                             (x488
                                                ~this:(Performance.t_of_js
                                                         x493)
                                                ~ev:(any_of_js x494))))|]);
                            (match x489 with
                             | Some x491 ->
                                 ignore
                                   (Ojs.call x490 "push"
                                      [|(or_boolean_to_js
                                           EventListenerOptions.t_to_js x491)|])
                             | None -> ());
                            x490))|])
    let (removeEventListener' :
      type_:string ->
        listener:EventListenerOrEventListenerObject.t ->
          ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun ~type_:(x496 : string) ->
        fun ~listener:(x497 : EventListenerOrEventListenerObject.t) ->
          fun ?options:(x498 : EventListenerOptions.t or_boolean option) ->
            fun () ->
              ignore
                (let x502 = Ojs.get_prop_ascii Ojs.global "performance" in
                 Ojs.call (Ojs.get_prop_ascii x502 "removeEventListener")
                   "apply"
                   [|x502;((let x499 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x499 "push"
                                 [|(Ojs.string_to_js x496)|]);
                            ignore
                              (Ojs.call x499 "push"
                                 [|(EventListenerOrEventListenerObject.t_to_js
                                      x497)|]);
                            (match x498 with
                             | Some x500 ->
                                 ignore
                                   (Ojs.call x499 "push"
                                      [|(or_boolean_to_js
                                           EventListenerOptions.t_to_js x500)|])
                             | None -> ());
                            x499))|])
  end
module StorageEstimate =
  struct
    type t = [ `StorageEstimate ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x504 : Ojs.t) -> t_of_js x504
    and t_0_to_js : t_0 -> Ojs.t = fun (x503 : t) -> t_to_js x503
    type tags = [ `StorageEstimate ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `StorageEstimate ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x507 : Ojs.t) -> intf_of_js __tags_of_js x507
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x505 : __tags intf) -> intf_to_js __tags_to_js x505
    let (get_quota : 'tags this -> float) =
      fun (x509 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x509) "quota")
    let (set_quota : 'tags this -> float -> unit) =
      fun (x511 : 'tags this) ->
        fun (x512 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x511) "quota"
            (Ojs.float_to_js x512)
    let (get_usage : 'tags this -> float) =
      fun (x514 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x514) "usage")
    let (set_usage : 'tags this -> float -> unit) =
      fun (x516 : 'tags this) ->
        fun (x517 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x516) "usage"
            (Ojs.float_to_js x517)
    let cast_from = Obj.magic
  end
module StorageManager =
  struct
    type t = [ `StorageManager ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x520 : Ojs.t) -> t_of_js x520
    and t_0_to_js : t_0 -> Ojs.t = fun (x519 : t) -> t_to_js x519
    type tags = [ `StorageManager ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `StorageManager ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x523 : Ojs.t) -> intf_of_js __tags_of_js x523
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x521 : __tags intf) -> intf_to_js __tags_to_js x521
    let (estimate : 'tags this -> StorageEstimate.t Promise.t_1) =
      fun (x525 : 'tags this) ->
        Promise.t_1_of_js StorageEstimate.t_of_js
          (Ojs.call (this_to_js Obj.magic x525) "estimate" [||])
    let (persisted : 'tags this -> bool Promise.t_1) =
      fun (x528 : 'tags this) ->
        Promise.t_1_of_js Ojs.bool_of_js
          (Ojs.call (this_to_js Obj.magic x528) "persisted" [||])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "StorageManager") "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "StorageManager") [||])
  end
module NavigatorStorage =
  struct
    type t = [ `NavigatorStorage ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x532 : Ojs.t) -> t_of_js x532
    and t_0_to_js : t_0 -> Ojs.t = fun (x531 : t) -> t_to_js x531
    type tags = [ `NavigatorStorage ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `NavigatorStorage ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x535 : Ojs.t) -> intf_of_js __tags_of_js x535
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x533 : __tags intf) -> intf_to_js __tags_to_js x533
    let (get_storage : 'tags this -> StorageManager.t) =
      fun (x537 : 'tags this) ->
        StorageManager.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x537) "storage")
    let cast_from = Obj.magic
  end
module NavigatorOnLine =
  struct
    type t = [ `NavigatorOnLine ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x540 : Ojs.t) -> t_of_js x540
    and t_0_to_js : t_0 -> Ojs.t = fun (x539 : t) -> t_to_js x539
    type tags = [ `NavigatorOnLine ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `NavigatorOnLine ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x543 : Ojs.t) -> intf_of_js __tags_of_js x543
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x541 : __tags intf) -> intf_to_js __tags_to_js x541
    let (get_onLine : 'tags this -> bool) =
      fun (x545 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x545) "onLine")
    let cast_from = Obj.magic
  end
module ConnectionType =
  struct
    type t =
      [ `L_s116_mixed  | `L_s128_none  | `L_s142_other  | `L_s196_unknown 
      | `L_s207_wifi  | `L_s46_bluetooth  | `L_s47_cellular 
      | `L_s68_ethernet ]
    let rec t_of_js : Ojs.t -> t =
      fun (x548 : Ojs.t) ->
        let x549 = x548 in
        match Ojs.string_of_js x549 with
        | "mixed" -> `L_s116_mixed
        | "none" -> `L_s128_none
        | "other" -> `L_s142_other
        | "unknown" -> `L_s196_unknown
        | "wifi" -> `L_s207_wifi
        | "bluetooth" -> `L_s46_bluetooth
        | "cellular" -> `L_s47_cellular
        | "ethernet" -> `L_s68_ethernet
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun
        (x547 :
          [ `L_s116_mixed  | `L_s128_none  | `L_s142_other 
          | `L_s196_unknown  | `L_s207_wifi  | `L_s46_bluetooth 
          | `L_s47_cellular  | `L_s68_ethernet ])
        ->
        match x547 with
        | `L_s116_mixed -> Ojs.string_to_js "mixed"
        | `L_s128_none -> Ojs.string_to_js "none"
        | `L_s142_other -> Ojs.string_to_js "other"
        | `L_s196_unknown -> Ojs.string_to_js "unknown"
        | `L_s207_wifi -> Ojs.string_to_js "wifi"
        | `L_s46_bluetooth -> Ojs.string_to_js "bluetooth"
        | `L_s47_cellular -> Ojs.string_to_js "cellular"
        | `L_s68_ethernet -> Ojs.string_to_js "ethernet"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x551 : Ojs.t) -> t_of_js x551
    and t_0_to_js : t_0 -> Ojs.t = fun (x550 : t) -> t_to_js x550
  end
module NetworkInformation =
  struct
    type t = [ `EventTarget  | `NetworkInformation ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x553 : Ojs.t) -> t_of_js x553
    and t_0_to_js : t_0 -> Ojs.t = fun (x552 : t) -> t_to_js x552
    type tags = [ `EventTarget  | `NetworkInformation ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `NetworkInformation ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x556 : Ojs.t) -> intf_of_js __tags_of_js x556
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x554 : __tags intf) -> intf_to_js __tags_to_js x554
    let (get_type : 'tags this -> ConnectionType.t) =
      fun (x558 : 'tags this) ->
        ConnectionType.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x558) "type")
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "NetworkInformation") "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "NetworkInformation")
             [||])
  end
module NavigatorNetworkInformation =
  struct
    type t = [ `NavigatorNetworkInformation ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x561 : Ojs.t) -> t_of_js x561
    and t_0_to_js : t_0 -> Ojs.t = fun (x560 : t) -> t_to_js x560
    type tags = [ `NavigatorNetworkInformation ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `NavigatorNetworkInformation ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x564 : Ojs.t) -> intf_of_js __tags_of_js x564
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x562 : __tags intf) -> intf_to_js __tags_to_js x562
    let (get_connection : 'tags this -> NetworkInformation.t) =
      fun (x566 : 'tags this) ->
        NetworkInformation.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x566) "connection")
    let cast_from = Obj.magic
  end
module NavigatorLanguage =
  struct
    type t = [ `NavigatorLanguage ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x569 : Ojs.t) -> t_of_js x569
    and t_0_to_js : t_0 -> Ojs.t = fun (x568 : t) -> t_to_js x568
    type tags = [ `NavigatorLanguage ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `NavigatorLanguage ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x572 : Ojs.t) -> intf_of_js __tags_of_js x572
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x570 : __tags intf) -> intf_to_js __tags_to_js x570
    let (get_language : 'tags this -> string) =
      fun (x574 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x574) "language")
    let (get_languages : 'tags this -> string list) =
      fun (x576 : 'tags this) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x576) "languages")
    let cast_from = Obj.magic
  end
module NavigatorID =
  struct
    type t = [ `NavigatorID ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x580 : Ojs.t) -> t_of_js x580
    and t_0_to_js : t_0 -> Ojs.t = fun (x579 : t) -> t_to_js x579
    type tags = [ `NavigatorID ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `NavigatorID ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x583 : Ojs.t) -> intf_of_js __tags_of_js x583
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x581 : __tags intf) -> intf_to_js __tags_to_js x581
    let (get_appCodeName : 'tags this -> string) =
      fun (x585 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x585) "appCodeName")
    let (get_appName : 'tags this -> string) =
      fun (x587 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x587) "appName")
    let (get_appVersion : 'tags this -> string) =
      fun (x589 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x589) "appVersion")
    let (get_platform : 'tags this -> string) =
      fun (x591 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x591) "platform")
    let (get_product : 'tags this -> string) =
      fun (x593 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x593) "product")
    let (get_userAgent : 'tags this -> string) =
      fun (x595 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x595) "userAgent")
    let cast_from = Obj.magic
  end
module NavigatorConcurrentHardware =
  struct
    type t = [ `NavigatorConcurrentHardware ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x598 : Ojs.t) -> t_of_js x598
    and t_0_to_js : t_0 -> Ojs.t = fun (x597 : t) -> t_to_js x597
    type tags = [ `NavigatorConcurrentHardware ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `NavigatorConcurrentHardware ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x601 : Ojs.t) -> intf_of_js __tags_of_js x601
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x599 : __tags intf) -> intf_to_js __tags_to_js x599
    let (get_hardwareConcurrency : 'tags this -> float) =
      fun (x603 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x603)
             "hardwareConcurrency")
    let cast_from = Obj.magic
  end
module MediaEncodingType =
  struct
    type t = [ `L_s165_record  | `L_s206_webrtc ]
    let rec t_of_js : Ojs.t -> t =
      fun (x606 : Ojs.t) ->
        let x607 = x606 in
        match Ojs.string_of_js x607 with
        | "record" -> `L_s165_record
        | "webrtc" -> `L_s206_webrtc
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun (x605 : [ `L_s165_record  | `L_s206_webrtc ]) ->
        match x605 with
        | `L_s165_record -> Ojs.string_to_js "record"
        | `L_s206_webrtc -> Ojs.string_to_js "webrtc"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x609 : Ojs.t) -> t_of_js x609
    and t_0_to_js : t_0 -> Ojs.t = fun (x608 : t) -> t_to_js x608
  end
module TransferFunction =
  struct
    type t = [ `L_s151_pq  | `L_s183_srgb  | `L_s86_hlg ]
    let rec t_of_js : Ojs.t -> t =
      fun (x611 : Ojs.t) ->
        let x612 = x611 in
        match Ojs.string_of_js x612 with
        | "pq" -> `L_s151_pq
        | "srgb" -> `L_s183_srgb
        | "hlg" -> `L_s86_hlg
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun (x610 : [ `L_s151_pq  | `L_s183_srgb  | `L_s86_hlg ]) ->
        match x610 with
        | `L_s151_pq -> Ojs.string_to_js "pq"
        | `L_s183_srgb -> Ojs.string_to_js "srgb"
        | `L_s86_hlg -> Ojs.string_to_js "hlg"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x614 : Ojs.t) -> t_of_js x614
    and t_0_to_js : t_0 -> Ojs.t = fun (x613 : t) -> t_to_js x613
  end
module HdrMetadataType =
  struct
    type t =
      [ `L_s179_smpteSt2086  | `L_s180_smpteSt2094_10 
      | `L_s181_smpteSt2094_40 ]
    let rec t_of_js : Ojs.t -> t =
      fun (x616 : Ojs.t) ->
        let x617 = x616 in
        match Ojs.string_of_js x617 with
        | "smpteSt2086" -> `L_s179_smpteSt2086
        | "smpteSt2094-10" -> `L_s180_smpteSt2094_10
        | "smpteSt2094-40" -> `L_s181_smpteSt2094_40
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun
        (x615 :
          [ `L_s179_smpteSt2086  | `L_s180_smpteSt2094_10 
          | `L_s181_smpteSt2094_40 ])
        ->
        match x615 with
        | `L_s179_smpteSt2086 -> Ojs.string_to_js "smpteSt2086"
        | `L_s180_smpteSt2094_10 -> Ojs.string_to_js "smpteSt2094-10"
        | `L_s181_smpteSt2094_40 -> Ojs.string_to_js "smpteSt2094-40"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x619 : Ojs.t) -> t_of_js x619
    and t_0_to_js : t_0 -> Ojs.t = fun (x618 : t) -> t_to_js x618
  end
module ColorGamut =
  struct
    type t = [ `L_s144_p3  | `L_s164_rec2020  | `L_s183_srgb ]
    let rec t_of_js : Ojs.t -> t =
      fun (x621 : Ojs.t) ->
        let x622 = x621 in
        match Ojs.string_of_js x622 with
        | "p3" -> `L_s144_p3
        | "rec2020" -> `L_s164_rec2020
        | "srgb" -> `L_s183_srgb
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun (x620 : [ `L_s144_p3  | `L_s164_rec2020  | `L_s183_srgb ]) ->
        match x620 with
        | `L_s144_p3 -> Ojs.string_to_js "p3"
        | `L_s164_rec2020 -> Ojs.string_to_js "rec2020"
        | `L_s183_srgb -> Ojs.string_to_js "srgb"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x624 : Ojs.t) -> t_of_js x624
    and t_0_to_js : t_0 -> Ojs.t = fun (x623 : t) -> t_to_js x623
  end
module VideoConfiguration =
  struct
    type t = [ `VideoConfiguration ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x626 : Ojs.t) -> t_of_js x626
    and t_0_to_js : t_0 -> Ojs.t = fun (x625 : t) -> t_to_js x625
    type tags = [ `VideoConfiguration ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `VideoConfiguration ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x629 : Ojs.t) -> intf_of_js __tags_of_js x629
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x627 : __tags intf) -> intf_to_js __tags_to_js x627
    let (get_bitrate : 'tags this -> float) =
      fun (x631 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x631) "bitrate")
    let (set_bitrate : 'tags this -> float -> unit) =
      fun (x633 : 'tags this) ->
        fun (x634 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x633) "bitrate"
            (Ojs.float_to_js x634)
    let (get_colorGamut : 'tags this -> ColorGamut.t) =
      fun (x636 : 'tags this) ->
        ColorGamut.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x636) "colorGamut")
    let (set_colorGamut : 'tags this -> ColorGamut.t -> unit) =
      fun (x638 : 'tags this) ->
        fun (x639 : ColorGamut.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x638) "colorGamut"
            (ColorGamut.t_to_js x639)
    let (get_contentType : 'tags this -> string) =
      fun (x641 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x641) "contentType")
    let (set_contentType : 'tags this -> string -> unit) =
      fun (x643 : 'tags this) ->
        fun (x644 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x643) "contentType"
            (Ojs.string_to_js x644)
    let (get_framerate : 'tags this -> float) =
      fun (x646 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x646) "framerate")
    let (set_framerate : 'tags this -> float -> unit) =
      fun (x648 : 'tags this) ->
        fun (x649 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x648) "framerate"
            (Ojs.float_to_js x649)
    let (get_hdrMetadataType : 'tags this -> HdrMetadataType.t) =
      fun (x651 : 'tags this) ->
        HdrMetadataType.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x651) "hdrMetadataType")
    let (set_hdrMetadataType : 'tags this -> HdrMetadataType.t -> unit) =
      fun (x653 : 'tags this) ->
        fun (x654 : HdrMetadataType.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x653) "hdrMetadataType"
            (HdrMetadataType.t_to_js x654)
    let (get_height : 'tags this -> float) =
      fun (x656 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x656) "height")
    let (set_height : 'tags this -> float -> unit) =
      fun (x658 : 'tags this) ->
        fun (x659 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x658) "height"
            (Ojs.float_to_js x659)
    let (get_scalabilityMode : 'tags this -> string) =
      fun (x661 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x661) "scalabilityMode")
    let (set_scalabilityMode : 'tags this -> string -> unit) =
      fun (x663 : 'tags this) ->
        fun (x664 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x663) "scalabilityMode"
            (Ojs.string_to_js x664)
    let (get_transferFunction : 'tags this -> TransferFunction.t) =
      fun (x666 : 'tags this) ->
        TransferFunction.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x666) "transferFunction")
    let (set_transferFunction : 'tags this -> TransferFunction.t -> unit) =
      fun (x668 : 'tags this) ->
        fun (x669 : TransferFunction.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x668) "transferFunction"
            (TransferFunction.t_to_js x669)
    let (get_width : 'tags this -> float) =
      fun (x671 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x671) "width")
    let (set_width : 'tags this -> float -> unit) =
      fun (x673 : 'tags this) ->
        fun (x674 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x673) "width"
            (Ojs.float_to_js x674)
    let cast_from = Obj.magic
  end
module AudioConfiguration =
  struct
    type t = [ `AudioConfiguration ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x677 : Ojs.t) -> t_of_js x677
    and t_0_to_js : t_0 -> Ojs.t = fun (x676 : t) -> t_to_js x676
    type tags = [ `AudioConfiguration ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `AudioConfiguration ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x680 : Ojs.t) -> intf_of_js __tags_of_js x680
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x678 : __tags intf) -> intf_to_js __tags_to_js x678
    let (get_bitrate : 'tags this -> float) =
      fun (x682 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x682) "bitrate")
    let (set_bitrate : 'tags this -> float -> unit) =
      fun (x684 : 'tags this) ->
        fun (x685 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x684) "bitrate"
            (Ojs.float_to_js x685)
    let (get_channels : 'tags this -> string) =
      fun (x687 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x687) "channels")
    let (set_channels : 'tags this -> string -> unit) =
      fun (x689 : 'tags this) ->
        fun (x690 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x689) "channels"
            (Ojs.string_to_js x690)
    let (get_contentType : 'tags this -> string) =
      fun (x692 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x692) "contentType")
    let (set_contentType : 'tags this -> string -> unit) =
      fun (x694 : 'tags this) ->
        fun (x695 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x694) "contentType"
            (Ojs.string_to_js x695)
    let (get_samplerate : 'tags this -> float) =
      fun (x697 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x697) "samplerate")
    let (set_samplerate : 'tags this -> float -> unit) =
      fun (x699 : 'tags this) ->
        fun (x700 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x699) "samplerate"
            (Ojs.float_to_js x700)
    let (get_spatialRendering : 'tags this -> bool) =
      fun (x702 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x702) "spatialRendering")
    let (set_spatialRendering : 'tags this -> bool -> unit) =
      fun (x704 : 'tags this) ->
        fun (x705 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x704) "spatialRendering"
            (Ojs.bool_to_js x705)
    let cast_from = Obj.magic
  end
module MediaConfiguration =
  struct
    type t = [ `MediaConfiguration ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x708 : Ojs.t) -> t_of_js x708
    and t_0_to_js : t_0 -> Ojs.t = fun (x707 : t) -> t_to_js x707
    type tags = [ `MediaConfiguration ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `MediaConfiguration ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x711 : Ojs.t) -> intf_of_js __tags_of_js x711
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x709 : __tags intf) -> intf_to_js __tags_to_js x709
    let (get_audio : 'tags this -> AudioConfiguration.t) =
      fun (x713 : 'tags this) ->
        AudioConfiguration.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x713) "audio")
    let (set_audio : 'tags this -> AudioConfiguration.t -> unit) =
      fun (x715 : 'tags this) ->
        fun (x716 : AudioConfiguration.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x715) "audio"
            (AudioConfiguration.t_to_js x716)
    let (get_video : 'tags this -> VideoConfiguration.t) =
      fun (x718 : 'tags this) ->
        VideoConfiguration.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x718) "video")
    let (set_video : 'tags this -> VideoConfiguration.t -> unit) =
      fun (x720 : 'tags this) ->
        fun (x721 : VideoConfiguration.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x720) "video"
            (VideoConfiguration.t_to_js x721)
    let cast_from = Obj.magic
  end
module MediaEncodingConfiguration =
  struct
    type t = [ `MediaConfiguration  | `MediaEncodingConfiguration ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x724 : Ojs.t) -> t_of_js x724
    and t_0_to_js : t_0 -> Ojs.t = fun (x723 : t) -> t_to_js x723
    type tags = [ `MediaConfiguration  | `MediaEncodingConfiguration ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `MediaEncodingConfiguration ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x727 : Ojs.t) -> intf_of_js __tags_of_js x727
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x725 : __tags intf) -> intf_to_js __tags_to_js x725
    let (get_type : 'tags this -> MediaEncodingType.t) =
      fun (x729 : 'tags this) ->
        MediaEncodingType.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x729) "type")
    let (set_type : 'tags this -> MediaEncodingType.t -> unit) =
      fun (x731 : 'tags this) ->
        fun (x732 : MediaEncodingType.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x731) "type"
            (MediaEncodingType.t_to_js x732)
    let cast_from = Obj.magic
  end
module MediaCapabilitiesInfo =
  struct
    type t = [ `MediaCapabilitiesInfo ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x735 : Ojs.t) -> t_of_js x735
    and t_0_to_js : t_0 -> Ojs.t = fun (x734 : t) -> t_to_js x734
    type tags = [ `MediaCapabilitiesInfo ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `MediaCapabilitiesInfo ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x738 : Ojs.t) -> intf_of_js __tags_of_js x738
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x736 : __tags intf) -> intf_to_js __tags_to_js x736
    let (get_powerEfficient : 'tags this -> bool) =
      fun (x740 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x740) "powerEfficient")
    let (set_powerEfficient : 'tags this -> bool -> unit) =
      fun (x742 : 'tags this) ->
        fun (x743 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x742) "powerEfficient"
            (Ojs.bool_to_js x743)
    let (get_smooth : 'tags this -> bool) =
      fun (x745 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x745) "smooth")
    let (set_smooth : 'tags this -> bool -> unit) =
      fun (x747 : 'tags this) ->
        fun (x748 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x747) "smooth"
            (Ojs.bool_to_js x748)
    let (get_supported : 'tags this -> bool) =
      fun (x750 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x750) "supported")
    let (set_supported : 'tags this -> bool -> unit) =
      fun (x752 : 'tags this) ->
        fun (x753 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x752) "supported"
            (Ojs.bool_to_js x753)
    let cast_from = Obj.magic
  end
module MediaCapabilitiesEncodingInfo =
  struct
    type t =
      [ `MediaCapabilitiesEncodingInfo  | `MediaCapabilitiesInfo ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x756 : Ojs.t) -> t_of_js x756
    and t_0_to_js : t_0 -> Ojs.t = fun (x755 : t) -> t_to_js x755
    type tags = [ `MediaCapabilitiesEncodingInfo  | `MediaCapabilitiesInfo ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `MediaCapabilitiesEncodingInfo ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x759 : Ojs.t) -> intf_of_js __tags_of_js x759
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x757 : __tags intf) -> intf_to_js __tags_to_js x757
    let (get_configuration : 'tags this -> MediaEncodingConfiguration.t) =
      fun (x761 : 'tags this) ->
        MediaEncodingConfiguration.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x761) "configuration")
    let (set_configuration :
      'tags this -> MediaEncodingConfiguration.t -> unit) =
      fun (x763 : 'tags this) ->
        fun (x764 : MediaEncodingConfiguration.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x763) "configuration"
            (MediaEncodingConfiguration.t_to_js x764)
    let cast_from = Obj.magic
  end
module MediaDecodingType =
  struct
    type t = [ `L_s111_media_source  | `L_s206_webrtc  | `L_s73_file ]
    let rec t_of_js : Ojs.t -> t =
      fun (x767 : Ojs.t) ->
        let x768 = x767 in
        match Ojs.string_of_js x768 with
        | "media-source" -> `L_s111_media_source
        | "webrtc" -> `L_s206_webrtc
        | "file" -> `L_s73_file
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun (x766 : [ `L_s111_media_source  | `L_s206_webrtc  | `L_s73_file ])
        ->
        match x766 with
        | `L_s111_media_source -> Ojs.string_to_js "media-source"
        | `L_s206_webrtc -> Ojs.string_to_js "webrtc"
        | `L_s73_file -> Ojs.string_to_js "file"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x770 : Ojs.t) -> t_of_js x770
    and t_0_to_js : t_0 -> Ojs.t = fun (x769 : t) -> t_to_js x769
  end
module MediaDecodingConfiguration =
  struct
    type t = [ `MediaConfiguration  | `MediaDecodingConfiguration ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x772 : Ojs.t) -> t_of_js x772
    and t_0_to_js : t_0 -> Ojs.t = fun (x771 : t) -> t_to_js x771
    type tags = [ `MediaConfiguration  | `MediaDecodingConfiguration ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `MediaDecodingConfiguration ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x775 : Ojs.t) -> intf_of_js __tags_of_js x775
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x773 : __tags intf) -> intf_to_js __tags_to_js x773
    let (get_type : 'tags this -> MediaDecodingType.t) =
      fun (x777 : 'tags this) ->
        MediaDecodingType.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x777) "type")
    let (set_type : 'tags this -> MediaDecodingType.t -> unit) =
      fun (x779 : 'tags this) ->
        fun (x780 : MediaDecodingType.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x779) "type"
            (MediaDecodingType.t_to_js x780)
    let cast_from = Obj.magic
  end
module MediaCapabilitiesDecodingInfo =
  struct
    type t =
      [ `MediaCapabilitiesDecodingInfo  | `MediaCapabilitiesInfo ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x783 : Ojs.t) -> t_of_js x783
    and t_0_to_js : t_0 -> Ojs.t = fun (x782 : t) -> t_to_js x782
    type tags = [ `MediaCapabilitiesDecodingInfo  | `MediaCapabilitiesInfo ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `MediaCapabilitiesDecodingInfo ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x786 : Ojs.t) -> intf_of_js __tags_of_js x786
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x784 : __tags intf) -> intf_to_js __tags_to_js x784
    let (get_configuration : 'tags this -> MediaDecodingConfiguration.t) =
      fun (x788 : 'tags this) ->
        MediaDecodingConfiguration.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x788) "configuration")
    let (set_configuration :
      'tags this -> MediaDecodingConfiguration.t -> unit) =
      fun (x790 : 'tags this) ->
        fun (x791 : MediaDecodingConfiguration.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x790) "configuration"
            (MediaDecodingConfiguration.t_to_js x791)
    let cast_from = Obj.magic
  end
module MediaCapabilities =
  struct
    type t = [ `MediaCapabilities ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x794 : Ojs.t) -> t_of_js x794
    and t_0_to_js : t_0 -> Ojs.t = fun (x793 : t) -> t_to_js x793
    type tags = [ `MediaCapabilities ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `MediaCapabilities ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x797 : Ojs.t) -> intf_of_js __tags_of_js x797
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x795 : __tags intf) -> intf_to_js __tags_to_js x795
    let (decodingInfo :
      'tags this ->
        configuration:MediaDecodingConfiguration.t ->
          MediaCapabilitiesDecodingInfo.t Promise.t_1)
      =
      fun (x800 : 'tags this) ->
        fun ~configuration:(x799 : MediaDecodingConfiguration.t) ->
          Promise.t_1_of_js MediaCapabilitiesDecodingInfo.t_of_js
            (Ojs.call (this_to_js Obj.magic x800) "decodingInfo"
               [|(MediaDecodingConfiguration.t_to_js x799)|])
    let (encodingInfo :
      'tags this ->
        configuration:MediaEncodingConfiguration.t ->
          MediaCapabilitiesEncodingInfo.t Promise.t_1)
      =
      fun (x804 : 'tags this) ->
        fun ~configuration:(x803 : MediaEncodingConfiguration.t) ->
          Promise.t_1_of_js MediaCapabilitiesEncodingInfo.t_of_js
            (Ojs.call (this_to_js Obj.magic x804) "encodingInfo"
               [|(MediaEncodingConfiguration.t_to_js x803)|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "MediaCapabilities") "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "MediaCapabilities")
             [||])
  end
module NavigatorStatic =
  struct
    let (mediaCapabilities : unit -> MediaCapabilities.t) =
      fun () ->
        MediaCapabilities.t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "navigator")
             "mediaCapabilities")
  end
module LocationStatic =
  struct
    let (hash : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "location")
             "hash")
    let (host : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "location")
             "host")
    let (hostname : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "location")
             "hostname")
    let (href : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "location")
             "href")
    let (toString : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "location") "toString"
             [||])
    let (origin : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "location")
             "origin")
    let (pathname : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "location")
             "pathname")
    let (port : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "location")
             "port")
    let (protocol : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "location")
             "protocol")
    let (search : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "location")
             "search")
  end
module IDBVersionChangeEventInit =
  struct
    type t = [ `EventInit  | `IDBVersionChangeEventInit ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x808 : Ojs.t) -> t_of_js x808
    and t_0_to_js : t_0 -> Ojs.t = fun (x807 : t) -> t_to_js x807
    type tags = [ `EventInit  | `IDBVersionChangeEventInit ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `IDBVersionChangeEventInit ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x811 : Ojs.t) -> intf_of_js __tags_of_js x811
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x809 : __tags intf) -> intf_to_js __tags_to_js x809
    let (get_newVersion : 'tags this -> float or_null) =
      fun (x813 : 'tags this) ->
        or_null_of_js Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x813) "newVersion")
    let (set_newVersion : 'tags this -> float or_null -> unit) =
      fun (x816 : 'tags this) ->
        fun (x817 : float or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x816) "newVersion"
            (or_null_to_js Ojs.float_to_js x817)
    let (get_oldVersion : 'tags this -> float) =
      fun (x820 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x820) "oldVersion")
    let (set_oldVersion : 'tags this -> float -> unit) =
      fun (x822 : 'tags this) ->
        fun (x823 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x822) "oldVersion"
            (Ojs.float_to_js x823)
    let cast_from = Obj.magic
  end
module IDBVersionChangeEvent =
  struct
    type t = [ `Event  | `IDBVersionChangeEvent ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x826 : Ojs.t) -> t_of_js x826
    and t_0_to_js : t_0 -> Ojs.t = fun (x825 : t) -> t_to_js x825
    type tags = [ `Event  | `IDBVersionChangeEvent ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `IDBVersionChangeEvent ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x829 : Ojs.t) -> intf_of_js __tags_of_js x829
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x827 : __tags intf) -> intf_to_js __tags_to_js x827
    let (get_newVersion : 'tags this -> float or_null) =
      fun (x831 : 'tags this) ->
        or_null_of_js Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x831) "newVersion")
    let (get_oldVersion : 'tags this -> float) =
      fun (x834 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x834) "oldVersion")
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "IDBVersionChangeEvent")
             "prototype")
    let (create :
      type_:string -> ?eventInitDict:IDBVersionChangeEventInit.t -> unit -> t)
      =
      fun ~type_:(x836 : string) ->
        fun ?eventInitDict:(x837 : IDBVersionChangeEventInit.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "IDBVersionChangeEvent")
                 (let x838 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x838 "push" [|(Ojs.string_to_js x836)|]);
                  (match x837 with
                   | Some x839 ->
                       ignore
                         (Ojs.call x838 "push"
                            [|(IDBVersionChangeEventInit.t_to_js x839)|])
                   | None -> ());
                  x838))
  end
module IDBObjectStoreParameters =
  struct
    type t = [ `IDBObjectStoreParameters ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x841 : Ojs.t) -> t_of_js x841
    and t_0_to_js : t_0 -> Ojs.t = fun (x840 : t) -> t_to_js x840
    type tags = [ `IDBObjectStoreParameters ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `IDBObjectStoreParameters ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x844 : Ojs.t) -> intf_of_js __tags_of_js x844
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x842 : __tags intf) -> intf_to_js __tags_to_js x842
    let (get_autoIncrement : 'tags this -> bool) =
      fun (x846 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x846) "autoIncrement")
    let (set_autoIncrement : 'tags this -> bool -> unit) =
      fun (x848 : 'tags this) ->
        fun (x849 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x848) "autoIncrement"
            (Ojs.bool_to_js x849)
    let (get_keyPath : 'tags this -> string list or_string or_null) =
      fun (x851 : 'tags this) ->
        or_null_of_js
          (fun (x853 : Ojs.t) ->
             or_string_of_js
               (fun (x854 : Ojs.t) -> Ojs.list_of_js Ojs.string_of_js x854)
               x853)
          (Ojs.get_prop_ascii (this_to_js Obj.magic x851) "keyPath")
    let (set_keyPath : 'tags this -> string list or_string or_null -> unit) =
      fun (x856 : 'tags this) ->
        fun (x857 : string list or_string or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x856) "keyPath"
            (or_null_to_js
               (fun (x858 : string list or_string) ->
                  or_string_to_js
                    (fun (x859 : string list) ->
                       Ojs.list_to_js Ojs.string_to_js x859) x858) x857)
    let cast_from = Obj.magic
  end
module IDBIndexParameters =
  struct
    type t = [ `IDBIndexParameters ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x863 : Ojs.t) -> t_of_js x863
    and t_0_to_js : t_0 -> Ojs.t = fun (x862 : t) -> t_to_js x862
    type tags = [ `IDBIndexParameters ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `IDBIndexParameters ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x866 : Ojs.t) -> intf_of_js __tags_of_js x866
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x864 : __tags intf) -> intf_to_js __tags_to_js x864
    let (get_multiEntry : 'tags this -> bool) =
      fun (x868 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x868) "multiEntry")
    let (set_multiEntry : 'tags this -> bool -> unit) =
      fun (x870 : 'tags this) ->
        fun (x871 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x870) "multiEntry"
            (Ojs.bool_to_js x871)
    let (get_unique : 'tags this -> bool) =
      fun (x873 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x873) "unique")
    let (set_unique : 'tags this -> bool -> unit) =
      fun (x875 : 'tags this) ->
        fun (x876 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x875) "unique"
            (Ojs.bool_to_js x876)
    let cast_from = Obj.magic
  end
module BufferSource =
  struct
    type t = never
    let rec t_of_js : Ojs.t -> t = fun (x879 : Ojs.t) -> never_of_js x879
    and t_to_js : t -> Ojs.t = fun (x878 : never) -> never_to_js x878
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x881 : Ojs.t) -> t_of_js x881
    and t_0_to_js : t_0 -> Ojs.t = fun (x880 : t) -> t_to_js x880
  end
module IDBValidKey =
  struct
    type t = t list or_string or_number
    let rec t_of_js : Ojs.t -> t =
      fun (x886 : Ojs.t) ->
        or_number_of_js
          (fun (x887 : Ojs.t) ->
             or_string_of_js
               (fun (x888 : Ojs.t) -> Ojs.list_of_js t_of_js x888) x887) x886
    and t_to_js : t -> Ojs.t =
      fun (x882 : t list or_string or_number) ->
        or_number_to_js
          (fun (x883 : t list or_string) ->
             or_string_to_js
               (fun (x884 : t list) -> Ojs.list_to_js t_to_js x884) x883)
          x882
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x891 : Ojs.t) -> t_of_js x891
    and t_0_to_js : t_0 -> Ojs.t = fun (x890 : t) -> t_to_js x890
  end
module IDBTransactionMode =
  struct
    type t =
      [ `L_s161_readonly  | `L_s162_readwrite  | `L_s203_versionchange ]
    let rec t_of_js : Ojs.t -> t =
      fun (x893 : Ojs.t) ->
        let x894 = x893 in
        match Ojs.string_of_js x894 with
        | "readonly" -> `L_s161_readonly
        | "readwrite" -> `L_s162_readwrite
        | "versionchange" -> `L_s203_versionchange
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun
        (x892 :
          [ `L_s161_readonly  | `L_s162_readwrite  | `L_s203_versionchange ])
        ->
        match x892 with
        | `L_s161_readonly -> Ojs.string_to_js "readonly"
        | `L_s162_readwrite -> Ojs.string_to_js "readwrite"
        | `L_s203_versionchange -> Ojs.string_to_js "versionchange"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x896 : Ojs.t) -> t_of_js x896
    and t_0_to_js : t_0 -> Ojs.t = fun (x895 : t) -> t_to_js x895
  end
module IDBRequestReadyState =
  struct
    type t = [ `L_s147_pending  | `L_s63_done ]
    let rec t_of_js : Ojs.t -> t =
      fun (x898 : Ojs.t) ->
        let x899 = x898 in
        match Ojs.string_of_js x899 with
        | "pending" -> `L_s147_pending
        | "done" -> `L_s63_done
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun (x897 : [ `L_s147_pending  | `L_s63_done ]) ->
        match x897 with
        | `L_s147_pending -> Ojs.string_to_js "pending"
        | `L_s63_done -> Ojs.string_to_js "done"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x901 : Ojs.t) -> t_of_js x901
    and t_0_to_js : t_0 -> Ojs.t = fun (x900 : t) -> t_to_js x900
  end
module DOMException =
  struct
    type t = [ `DOMException ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x903 : Ojs.t) -> t_of_js x903
    and t_0_to_js : t_0 -> Ojs.t = fun (x902 : t) -> t_to_js x902
    type tags = [ `DOMException ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `DOMException ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x906 : Ojs.t) -> intf_of_js __tags_of_js x906
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x904 : __tags intf) -> intf_to_js __tags_to_js x904
    let (get_code : 'tags this -> float) =
      fun (x908 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x908) "code")
    let (get_message : 'tags this -> string) =
      fun (x910 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x910) "message")
    let (get_name : 'tags this -> string) =
      fun (x912 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x912) "name")
    let (get_ABORT_ERR : 'tags this -> float) =
      fun (x914 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x914) "ABORT_ERR")
    let (get_DATA_CLONE_ERR : 'tags this -> float) =
      fun (x916 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x916) "DATA_CLONE_ERR")
    let (get_DOMSTRING_SIZE_ERR : 'tags this -> float) =
      fun (x918 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x918)
             "DOMSTRING_SIZE_ERR")
    let (get_HIERARCHY_REQUEST_ERR : 'tags this -> float) =
      fun (x920 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x920)
             "HIERARCHY_REQUEST_ERR")
    let (get_INDEX_SIZE_ERR : 'tags this -> float) =
      fun (x922 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x922) "INDEX_SIZE_ERR")
    let (get_INUSE_ATTRIBUTE_ERR : 'tags this -> float) =
      fun (x924 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x924)
             "INUSE_ATTRIBUTE_ERR")
    let (get_INVALID_ACCESS_ERR : 'tags this -> float) =
      fun (x926 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x926)
             "INVALID_ACCESS_ERR")
    let (get_INVALID_CHARACTER_ERR : 'tags this -> float) =
      fun (x928 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x928)
             "INVALID_CHARACTER_ERR")
    let (get_INVALID_MODIFICATION_ERR : 'tags this -> float) =
      fun (x930 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x930)
             "INVALID_MODIFICATION_ERR")
    let (get_INVALID_NODE_TYPE_ERR : 'tags this -> float) =
      fun (x932 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x932)
             "INVALID_NODE_TYPE_ERR")
    let (get_INVALID_STATE_ERR : 'tags this -> float) =
      fun (x934 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x934) "INVALID_STATE_ERR")
    let (get_NAMESPACE_ERR : 'tags this -> float) =
      fun (x936 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x936) "NAMESPACE_ERR")
    let (get_NETWORK_ERR : 'tags this -> float) =
      fun (x938 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x938) "NETWORK_ERR")
    let (get_NOT_FOUND_ERR : 'tags this -> float) =
      fun (x940 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x940) "NOT_FOUND_ERR")
    let (get_NOT_SUPPORTED_ERR : 'tags this -> float) =
      fun (x942 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x942) "NOT_SUPPORTED_ERR")
    let (get_NO_DATA_ALLOWED_ERR : 'tags this -> float) =
      fun (x944 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x944)
             "NO_DATA_ALLOWED_ERR")
    let (get_NO_MODIFICATION_ALLOWED_ERR : 'tags this -> float) =
      fun (x946 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x946)
             "NO_MODIFICATION_ALLOWED_ERR")
    let (get_QUOTA_EXCEEDED_ERR : 'tags this -> float) =
      fun (x948 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x948)
             "QUOTA_EXCEEDED_ERR")
    let (get_SECURITY_ERR : 'tags this -> float) =
      fun (x950 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x950) "SECURITY_ERR")
    let (get_SYNTAX_ERR : 'tags this -> float) =
      fun (x952 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x952) "SYNTAX_ERR")
    let (get_TIMEOUT_ERR : 'tags this -> float) =
      fun (x954 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x954) "TIMEOUT_ERR")
    let (get_TYPE_MISMATCH_ERR : 'tags this -> float) =
      fun (x956 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x956) "TYPE_MISMATCH_ERR")
    let (get_URL_MISMATCH_ERR : 'tags this -> float) =
      fun (x958 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x958) "URL_MISMATCH_ERR")
    let (get_VALIDATION_ERR : 'tags this -> float) =
      fun (x960 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x960) "VALIDATION_ERR")
    let (get_WRONG_DOCUMENT_ERR : 'tags this -> float) =
      fun (x962 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x962)
             "WRONG_DOCUMENT_ERR")
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DOMException")
             "prototype")
    let (create : ?message:string -> ?name:string -> unit -> t) =
      fun ?message:(x964 : string option) ->
        fun ?name:(x965 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "DOMException")
                 (let x966 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x964 with
                   | Some x968 ->
                       ignore
                         (Ojs.call x966 "push" [|(Ojs.string_to_js x968)|])
                   | None -> ());
                  (match x965 with
                   | Some x967 ->
                       ignore
                         (Ojs.call x966 "push" [|(Ojs.string_to_js x967)|])
                   | None -> ());
                  x966))
    let (abort_err : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DOMException")
             "ABORT_ERR")
    let (data_clone_err : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DOMException")
             "DATA_CLONE_ERR")
    let (domstring_size_err : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DOMException")
             "DOMSTRING_SIZE_ERR")
    let (hierarchy_request_err : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DOMException")
             "HIERARCHY_REQUEST_ERR")
    let (index_size_err : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DOMException")
             "INDEX_SIZE_ERR")
    let (inuse_attribute_err : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DOMException")
             "INUSE_ATTRIBUTE_ERR")
    let (invalid_access_err : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DOMException")
             "INVALID_ACCESS_ERR")
    let (invalid_character_err : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DOMException")
             "INVALID_CHARACTER_ERR")
    let (invalid_modification_err : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DOMException")
             "INVALID_MODIFICATION_ERR")
    let (invalid_node_type_err : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DOMException")
             "INVALID_NODE_TYPE_ERR")
    let (invalid_state_err : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DOMException")
             "INVALID_STATE_ERR")
    let (namespace_err : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DOMException")
             "NAMESPACE_ERR")
    let (network_err : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DOMException")
             "NETWORK_ERR")
    let (not_found_err : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DOMException")
             "NOT_FOUND_ERR")
    let (not_supported_err : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DOMException")
             "NOT_SUPPORTED_ERR")
    let (no_data_allowed_err : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DOMException")
             "NO_DATA_ALLOWED_ERR")
    let (no_modification_allowed_err : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DOMException")
             "NO_MODIFICATION_ALLOWED_ERR")
    let (quota_exceeded_err : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DOMException")
             "QUOTA_EXCEEDED_ERR")
    let (security_err : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DOMException")
             "SECURITY_ERR")
    let (syntax_err : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DOMException")
             "SYNTAX_ERR")
    let (timeout_err : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DOMException")
             "TIMEOUT_ERR")
    let (type_mismatch_err : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DOMException")
             "TYPE_MISMATCH_ERR")
    let (url_mismatch_err : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DOMException")
             "URL_MISMATCH_ERR")
    let (validation_err : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DOMException")
             "VALIDATION_ERR")
    let (wrong_document_err : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DOMException")
             "WRONG_DOCUMENT_ERR")
  end
module IDBKeyRange =
  struct
    type t = [ `IDBKeyRange ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x970 : Ojs.t) -> t_of_js x970
    and t_0_to_js : t_0 -> Ojs.t = fun (x969 : t) -> t_to_js x969
    type tags = [ `IDBKeyRange ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `IDBKeyRange ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x973 : Ojs.t) -> intf_of_js __tags_of_js x973
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x971 : __tags intf) -> intf_to_js __tags_to_js x971
    let (get_lower : 'tags this -> any) =
      fun (x975 : 'tags this) ->
        any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x975) "lower")
    let (get_lowerOpen : 'tags this -> bool) =
      fun (x977 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x977) "lowerOpen")
    let (get_upper : 'tags this -> any) =
      fun (x979 : 'tags this) ->
        any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x979) "upper")
    let (get_upperOpen : 'tags this -> bool) =
      fun (x981 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x981) "upperOpen")
    let (includes : 'tags this -> key:any -> bool) =
      fun (x984 : 'tags this) ->
        fun ~key:(x983 : any) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x984) "includes"
               [|(any_to_js x983)|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "IDBKeyRange")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "IDBKeyRange") [||])
    let (bound :
      lower:any ->
        upper:any -> ?lowerOpen:bool -> ?upperOpen:bool -> unit -> t)
      =
      fun ~lower:(x986 : any) ->
        fun ~upper:(x987 : any) ->
          fun ?lowerOpen:(x988 : bool option) ->
            fun ?upperOpen:(x989 : bool option) ->
              fun () ->
                t_of_js
                  (let x993 = Ojs.get_prop_ascii Ojs.global "IDBKeyRange" in
                   Ojs.call (Ojs.get_prop_ascii x993 "bound") "apply"
                     [|x993;((let x990 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x990 "push" [|(any_to_js x986)|]);
                              ignore
                                (Ojs.call x990 "push" [|(any_to_js x987)|]);
                              (match x988 with
                               | Some x992 ->
                                   ignore
                                     (Ojs.call x990 "push"
                                        [|(Ojs.bool_to_js x992)|])
                               | None -> ());
                              (match x989 with
                               | Some x991 ->
                                   ignore
                                     (Ojs.call x990 "push"
                                        [|(Ojs.bool_to_js x991)|])
                               | None -> ());
                              x990))|])
    let (lowerBound : lower:any -> ?open_:bool -> unit -> t) =
      fun ~lower:(x994 : any) ->
        fun ?open_:(x995 : bool option) ->
          fun () ->
            t_of_js
              (let x998 = Ojs.get_prop_ascii Ojs.global "IDBKeyRange" in
               Ojs.call (Ojs.get_prop_ascii x998 "lowerBound") "apply"
                 [|x998;((let x996 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          ignore (Ojs.call x996 "push" [|(any_to_js x994)|]);
                          (match x995 with
                           | Some x997 ->
                               ignore
                                 (Ojs.call x996 "push"
                                    [|(Ojs.bool_to_js x997)|])
                           | None -> ());
                          x996))|])
    let (only : any -> t) =
      fun (x999 : any) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "IDBKeyRange") "only"
             [|(any_to_js x999)|])
    let (upperBound : upper:any -> ?open_:bool -> unit -> t) =
      fun ~upper:(x1000 : any) ->
        fun ?open_:(x1001 : bool option) ->
          fun () ->
            t_of_js
              (let x1004 = Ojs.get_prop_ascii Ojs.global "IDBKeyRange" in
               Ojs.call (Ojs.get_prop_ascii x1004 "upperBound") "apply"
                 [|x1004;((let x1002 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x1002 "push" [|(any_to_js x1000)|]);
                           (match x1001 with
                            | Some x1003 ->
                                ignore
                                  (Ojs.call x1002 "push"
                                     [|(Ojs.bool_to_js x1003)|])
                            | None -> ());
                           x1002))|])
  end
module IDBCursorDirection =
  struct
    type t =
      [ `L_s121_next  | `L_s122_nextunique  | `L_s153_prev 
      | `L_s154_prevunique ]
    let rec t_of_js : Ojs.t -> t =
      fun (x1006 : Ojs.t) ->
        let x1007 = x1006 in
        match Ojs.string_of_js x1007 with
        | "next" -> `L_s121_next
        | "nextunique" -> `L_s122_nextunique
        | "prev" -> `L_s153_prev
        | "prevunique" -> `L_s154_prevunique
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun
        (x1005 :
          [ `L_s121_next  | `L_s122_nextunique  | `L_s153_prev 
          | `L_s154_prevunique ])
        ->
        match x1005 with
        | `L_s121_next -> Ojs.string_to_js "next"
        | `L_s122_nextunique -> Ojs.string_to_js "nextunique"
        | `L_s153_prev -> Ojs.string_to_js "prev"
        | `L_s154_prevunique -> Ojs.string_to_js "prevunique"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1009 : Ojs.t) -> t_of_js x1009
    and t_0_to_js : t_0 -> Ojs.t = fun (x1008 : t) -> t_to_js x1008
  end
module DOMStringList =
  struct
    type t =
      [ `DOMStringList  | string ArrayLike.tags_1
      | string IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1011 : Ojs.t) -> t_of_js x1011
    and t_0_to_js : t_0 -> Ojs.t = fun (x1010 : t) -> t_to_js x1010
    type tags =
      [ `DOMStringList  | string ArrayLike.tags_1
      | string IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `DOMStringList ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1014 : Ojs.t) -> intf_of_js __tags_of_js x1014
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1012 : __tags intf) -> intf_to_js __tags_to_js x1012
    let (get_length : 'tags this -> float) =
      fun (x1016 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1016) "length")
    let (contains : 'tags this -> string:string -> bool) =
      fun (x1019 : 'tags this) ->
        fun ~string:(x1018 : string) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x1019) "contains"
               [|(Ojs.string_to_js x1018)|])
    let (item : 'tags this -> index:float -> string or_null) =
      fun (x1022 : 'tags this) ->
        fun ~index:(x1021 : float) ->
          or_null_of_js Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x1022) "item"
               [|(Ojs.float_to_js x1021)|])
    let (get : 'tags this -> float -> string) =
      fun (x1025 : 'tags this) ->
        fun (x1027 : float) ->
          Ojs.string_of_js
            (Ojs.get_prop (this_to_js Obj.magic x1025)
               (Ojs.float_to_js x1027))
    let (set : 'tags this -> float -> string -> unit) =
      fun (x1028 : 'tags this) ->
        fun (x1030 : float) ->
          fun (x1031 : string) ->
            Ojs.set_prop (this_to_js Obj.magic x1028) (Ojs.float_to_js x1030)
              (Ojs.string_to_js x1031)
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DOMStringList")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "DOMStringList") [||])
  end
module rec
  IDBCursor:sig
              type t = [ `IDBCursor ] intf
              type t_0 = t
              [@@@js.stop ]
              type tags = [ `IDBCursor ]
              type tags_0 = tags
              [@@@js.start ]
              [@@@js.implem type tags = [ `IDBCursor ]
                type tags_0 = tags]
              type 'tags this = 'tags intf constraint 'tags = [> `IDBCursor ]
              val t_to_js : t -> Ojs.t
              val t_of_js : Ojs.t -> t
              val t_0_to_js : t_0 -> Ojs.t
              val t_0_of_js : Ojs.t -> t_0
              val get_direction : 'tags this -> IDBCursorDirection.t
              val get_key : 'tags this -> IDBValidKey.t
              val get_primaryKey : 'tags this -> IDBValidKey.t
              val get_request : 'tags this -> IDBRequest.t_0
              val get_source :
                'tags this -> (IDBIndex.t, IDBObjectStore.t) union2
              val advance : 'tags this -> count:float -> unit
              val continue : 'tags this -> ?key:IDBValidKey.t -> unit -> unit
              val continuePrimaryKey :
                'tags this ->
                  key:IDBValidKey.t -> primaryKey:IDBValidKey.t -> unit
              val delete : 'tags this -> never or_undefined IDBRequest.t
              val update :
                'tags this -> value:any -> IDBValidKey.t IDBRequest.t
              val cast_from : 'tags this -> t
              val prototype : unit -> t
              val create : unit -> t
            end =
  struct
    type t = [ `IDBCursor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1033 : Ojs.t) -> t_of_js x1033
    and t_0_to_js : t_0 -> Ojs.t = fun (x1032 : t) -> t_to_js x1032
    type tags = [ `IDBCursor ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `IDBCursor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1036 : Ojs.t) -> intf_of_js __tags_of_js x1036
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1034 : __tags intf) -> intf_to_js __tags_to_js x1034
    let (get_direction : 'tags this -> IDBCursorDirection.t) =
      fun (x1038 : 'tags this) ->
        IDBCursorDirection.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1038) "direction")
    let (get_key : 'tags this -> IDBValidKey.t) =
      fun (x1040 : 'tags this) ->
        IDBValidKey.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1040) "key")
    let (get_primaryKey : 'tags this -> IDBValidKey.t) =
      fun (x1042 : 'tags this) ->
        IDBValidKey.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1042) "primaryKey")
    let (get_request : 'tags this -> IDBRequest.t_0) =
      fun (x1044 : 'tags this) ->
        IDBRequest.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1044) "request")
    let (get_source : 'tags this -> (IDBIndex.t, IDBObjectStore.t) union2) =
      fun (x1046 : 'tags this) ->
        union2_of_js IDBIndex.t_of_js IDBObjectStore.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1046) "source")
    let (advance : 'tags this -> count:float -> unit) =
      fun (x1051 : 'tags this) ->
        fun ~count:(x1050 : float) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x1051) "advance"
               [|(Ojs.float_to_js x1050)|])
    let (continue : 'tags this -> ?key:IDBValidKey.t -> unit -> unit) =
      fun (x1056 : 'tags this) ->
        fun ?key:(x1053 : IDBValidKey.t option) ->
          fun () ->
            ignore
              (let x1058 = this_to_js Obj.magic x1056 in
               Ojs.call (Ojs.get_prop_ascii x1058 "continue") "apply"
                 [|x1058;((let x1054 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1053 with
                            | Some x1055 ->
                                ignore
                                  (Ojs.call x1054 "push"
                                     [|(IDBValidKey.t_to_js x1055)|])
                            | None -> ());
                           x1054))|])
    let (continuePrimaryKey :
      'tags this -> key:IDBValidKey.t -> primaryKey:IDBValidKey.t -> unit) =
      fun (x1061 : 'tags this) ->
        fun ~key:(x1059 : IDBValidKey.t) ->
          fun ~primaryKey:(x1060 : IDBValidKey.t) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x1061) "continuePrimaryKey"
                 [|(IDBValidKey.t_to_js x1059);(IDBValidKey.t_to_js x1060)|])
    let (delete : 'tags this -> never or_undefined IDBRequest.t) =
      fun (x1063 : 'tags this) ->
        IDBRequest.t_of_js
          (fun (x1065 : Ojs.t) -> or_undefined_of_js never_of_js x1065)
          (Ojs.call (this_to_js Obj.magic x1063) "delete" [||])
    let (update : 'tags this -> value:any -> IDBValidKey.t IDBRequest.t) =
      fun (x1068 : 'tags this) ->
        fun ~value:(x1067 : any) ->
          IDBRequest.t_of_js IDBValidKey.t_of_js
            (Ojs.call (this_to_js Obj.magic x1068) "update"
               [|(any_to_js x1067)|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "IDBCursor")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "IDBCursor") [||])
  end
 and
  IDBCursorWithValue:sig
                       type t = [ `IDBCursor  | `IDBCursorWithValue ] intf
                       type t_0 = t
                       [@@@js.stop ]
                       type tags = [ `IDBCursor  | `IDBCursorWithValue ]
                       type tags_0 = tags
                       [@@@js.start ]
                       [@@@js.implem
                         type tags = [ `IDBCursor  | `IDBCursorWithValue ]
                         type tags_0 = tags]
                       type 'tags this =
                         'tags intf constraint 'tags =
                                     [> `IDBCursorWithValue ]
                       val t_to_js : t -> Ojs.t
                       val t_of_js : Ojs.t -> t
                       val t_0_to_js : t_0 -> Ojs.t
                       val t_0_of_js : Ojs.t -> t_0
                       val get_value : 'tags this -> any
                       val cast_from : 'tags this -> t
                       val prototype : unit -> t
                       val create : unit -> t
                     end =
  struct
    type t = [ `IDBCursor  | `IDBCursorWithValue ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1072 : Ojs.t) -> t_of_js x1072
    and t_0_to_js : t_0 -> Ojs.t = fun (x1071 : t) -> t_to_js x1071
    type tags = [ `IDBCursor  | `IDBCursorWithValue ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `IDBCursorWithValue ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1075 : Ojs.t) -> intf_of_js __tags_of_js x1075
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1073 : __tags intf) -> intf_to_js __tags_to_js x1073
    let (get_value : 'tags this -> any) =
      fun (x1077 : 'tags this) ->
        any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x1077) "value")
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "IDBCursorWithValue") "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "IDBCursorWithValue")
             [||])
  end and
       IDBDatabase:sig
                     type t = [ `EventTarget  | `IDBDatabase ] intf
                     type t_0 = t
                     [@@@js.stop ]
                     type tags = [ `EventTarget  | `IDBDatabase ]
                     type tags_0 = tags
                     [@@@js.start ]
                     [@@@js.implem
                       type tags = [ `EventTarget  | `IDBDatabase ]
                       type tags_0 = tags]
                     type 'tags this =
                       'tags intf constraint 'tags = [> `IDBDatabase ]
                     val t_to_js : t -> Ojs.t
                     val t_of_js : Ojs.t -> t
                     val t_0_to_js : t_0 -> Ojs.t
                     val t_0_of_js : Ojs.t -> t_0
                     val transaction :
                       'tags this ->
                         storeNames:string Iterable.t_1 or_string ->
                           ?mode:IDBTransactionMode.t ->
                             unit -> IDBTransaction.t
                     val get_name : 'tags this -> string
                     val get_objectStoreNames : 'tags this -> DOMStringList.t
                     val get_onabort :
                       'tags this -> (this:t -> ev:Event.t -> any) or_null
                     val set_onabort :
                       'tags this ->
                         (this:t -> ev:Event.t -> any) or_null -> unit
                     val get_onclose :
                       'tags this -> (this:t -> ev:Event.t -> any) or_null
                     val set_onclose :
                       'tags this ->
                         (this:t -> ev:Event.t -> any) or_null -> unit
                     val get_onerror :
                       'tags this -> (this:t -> ev:Event.t -> any) or_null
                     val set_onerror :
                       'tags this ->
                         (this:t -> ev:Event.t -> any) or_null -> unit
                     val get_onversionchange :
                       'tags this ->
                         (this:t -> ev:IDBVersionChangeEvent.t -> any)
                           or_null
                     val set_onversionchange :
                       'tags this ->
                         (this:t -> ev:IDBVersionChangeEvent.t -> any)
                           or_null -> unit
                     val get_version : 'tags this -> float
                     val close : 'tags this -> unit
                     val createObjectStore :
                       'tags this ->
                         name:string ->
                           ?options:IDBObjectStoreParameters.t ->
                             unit -> IDBObjectStore.t
                     val deleteObjectStore :
                       'tags this -> name:string -> unit
                     val transaction' :
                       'tags this ->
                         storeNames:string list or_string ->
                           ?mode:IDBTransactionMode.t ->
                             unit -> IDBTransaction.t
                     val addEventListener :
                       'tags this ->
                         type_:'K ->
                           listener:(this:t -> ev:any -> any) ->
                             ?options:AddEventListenerOptions.t or_boolean ->
                               unit -> unit
                     val addEventListener' :
                       'tags this ->
                         type_:string ->
                           listener:EventListenerOrEventListenerObject.t ->
                             ?options:AddEventListenerOptions.t or_boolean ->
                               unit -> unit
                     val removeEventListener :
                       'tags this ->
                         type_:'K ->
                           listener:(this:t -> ev:any -> any) ->
                             ?options:EventListenerOptions.t or_boolean ->
                               unit -> unit
                     val removeEventListener' :
                       'tags this ->
                         type_:string ->
                           listener:EventListenerOrEventListenerObject.t ->
                             ?options:EventListenerOptions.t or_boolean ->
                               unit -> unit
                     val cast_from : 'tags this -> t
                     val prototype : unit -> t
                     val create : unit -> t
                   end =
       struct
         type t = [ `EventTarget  | `IDBDatabase ] intf
         let rec t_of_js : Ojs.t -> t = Obj.magic
         and t_to_js : t -> Ojs.t = Obj.magic
         type t_0 = t
         let rec t_0_of_js : Ojs.t -> t_0 =
           fun (x1080 : Ojs.t) -> t_of_js x1080
         and t_0_to_js : t_0 -> Ojs.t = fun (x1079 : t) -> t_to_js x1079
         type tags = [ `EventTarget  | `IDBDatabase ]
         type tags_0 = tags
         type 'tags this = 'tags intf constraint 'tags = [> `IDBDatabase ]
         let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
           = fun (type __tags) ->
           fun (__tags_of_js : Ojs.t -> __tags) ->
             fun (x1083 : Ojs.t) -> intf_of_js __tags_of_js x1083
         and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
           fun (type __tags) ->
           fun (__tags_to_js : __tags -> Ojs.t) ->
             fun (x1081 : __tags intf) -> intf_to_js __tags_to_js x1081
         let (transaction :
           'tags this ->
             storeNames:string Iterable.t_1 or_string ->
               ?mode:IDBTransactionMode.t -> unit -> IDBTransaction.t)
           =
           fun (x1091 : 'tags this) ->
             fun ~storeNames:(x1085 : string Iterable.t_1 or_string) ->
               fun ?mode:(x1086 : IDBTransactionMode.t option) ->
                 fun () ->
                   IDBTransaction.t_of_js
                     (let x1093 = this_to_js Obj.magic x1091 in
                      Ojs.call (Ojs.get_prop_ascii x1093 "transaction")
                        "apply"
                        [|x1093;((let x1087 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x1087 "push"
                                       [|(or_string_to_js
                                            (fun
                                               (x1089 : string Iterable.t_1)
                                               ->
                                               Iterable.t_1_to_js
                                                 Ojs.string_to_js x1089)
                                            x1085)|]);
                                  (match x1086 with
                                   | Some x1088 ->
                                       ignore
                                         (Ojs.call x1087 "push"
                                            [|(IDBTransactionMode.t_to_js
                                                 x1088)|])
                                   | None -> ());
                                  x1087))|])
         let (get_name : 'tags this -> string) =
           fun (x1094 : 'tags this) ->
             Ojs.string_of_js
               (Ojs.get_prop_ascii (this_to_js Obj.magic x1094) "name")
         let (get_objectStoreNames : 'tags this -> DOMStringList.t) =
           fun (x1096 : 'tags this) ->
             DOMStringList.t_of_js
               (Ojs.get_prop_ascii (this_to_js Obj.magic x1096)
                  "objectStoreNames")
         let (get_onabort :
           'tags this -> (this:t -> ev:Event.t -> any) or_null) =
           fun (x1098 : 'tags this) ->
             or_null_of_js
               (fun (x1100 : Ojs.t) ->
                  fun ~this:(x1101 : t) ->
                    fun ~ev:(x1102 : Event.t) ->
                      any_of_js
                        (Ojs.apply x1100
                           [|(t_to_js x1101);(Event.t_to_js x1102)|]))
               (Ojs.get_prop_ascii (this_to_js Obj.magic x1098) "onabort")
         let (set_onabort :
           'tags this -> (this:t -> ev:Event.t -> any) or_null -> unit) =
           fun (x1103 : 'tags this) ->
             fun (x1104 : (this:t -> ev:Event.t -> any) or_null) ->
               Ojs.set_prop_ascii (this_to_js Obj.magic x1103) "onabort"
                 (or_null_to_js
                    (fun (x1105 : this:t -> ev:Event.t -> any) ->
                       Ojs.fun_to_js 2
                         (fun (x1106 : Ojs.t) ->
                            fun (x1107 : Ojs.t) ->
                              any_to_js
                                (x1105 ~this:(t_of_js x1106)
                                   ~ev:(Event.t_of_js x1107)))) x1104)
         let (get_onclose :
           'tags this -> (this:t -> ev:Event.t -> any) or_null) =
           fun (x1109 : 'tags this) ->
             or_null_of_js
               (fun (x1111 : Ojs.t) ->
                  fun ~this:(x1112 : t) ->
                    fun ~ev:(x1113 : Event.t) ->
                      any_of_js
                        (Ojs.apply x1111
                           [|(t_to_js x1112);(Event.t_to_js x1113)|]))
               (Ojs.get_prop_ascii (this_to_js Obj.magic x1109) "onclose")
         let (set_onclose :
           'tags this -> (this:t -> ev:Event.t -> any) or_null -> unit) =
           fun (x1114 : 'tags this) ->
             fun (x1115 : (this:t -> ev:Event.t -> any) or_null) ->
               Ojs.set_prop_ascii (this_to_js Obj.magic x1114) "onclose"
                 (or_null_to_js
                    (fun (x1116 : this:t -> ev:Event.t -> any) ->
                       Ojs.fun_to_js 2
                         (fun (x1117 : Ojs.t) ->
                            fun (x1118 : Ojs.t) ->
                              any_to_js
                                (x1116 ~this:(t_of_js x1117)
                                   ~ev:(Event.t_of_js x1118)))) x1115)
         let (get_onerror :
           'tags this -> (this:t -> ev:Event.t -> any) or_null) =
           fun (x1120 : 'tags this) ->
             or_null_of_js
               (fun (x1122 : Ojs.t) ->
                  fun ~this:(x1123 : t) ->
                    fun ~ev:(x1124 : Event.t) ->
                      any_of_js
                        (Ojs.apply x1122
                           [|(t_to_js x1123);(Event.t_to_js x1124)|]))
               (Ojs.get_prop_ascii (this_to_js Obj.magic x1120) "onerror")
         let (set_onerror :
           'tags this -> (this:t -> ev:Event.t -> any) or_null -> unit) =
           fun (x1125 : 'tags this) ->
             fun (x1126 : (this:t -> ev:Event.t -> any) or_null) ->
               Ojs.set_prop_ascii (this_to_js Obj.magic x1125) "onerror"
                 (or_null_to_js
                    (fun (x1127 : this:t -> ev:Event.t -> any) ->
                       Ojs.fun_to_js 2
                         (fun (x1128 : Ojs.t) ->
                            fun (x1129 : Ojs.t) ->
                              any_to_js
                                (x1127 ~this:(t_of_js x1128)
                                   ~ev:(Event.t_of_js x1129)))) x1126)
         let (get_onversionchange :
           'tags this ->
             (this:t -> ev:IDBVersionChangeEvent.t -> any) or_null)
           =
           fun (x1131 : 'tags this) ->
             or_null_of_js
               (fun (x1133 : Ojs.t) ->
                  fun ~this:(x1134 : t) ->
                    fun ~ev:(x1135 : IDBVersionChangeEvent.t) ->
                      any_of_js
                        (Ojs.apply x1133
                           [|(t_to_js x1134);(IDBVersionChangeEvent.t_to_js
                                                x1135)|]))
               (Ojs.get_prop_ascii (this_to_js Obj.magic x1131)
                  "onversionchange")
         let (set_onversionchange :
           'tags this ->
             (this:t -> ev:IDBVersionChangeEvent.t -> any) or_null -> unit)
           =
           fun (x1136 : 'tags this) ->
             fun
               (x1137 :
                 (this:t -> ev:IDBVersionChangeEvent.t -> any) or_null)
               ->
               Ojs.set_prop_ascii (this_to_js Obj.magic x1136)
                 "onversionchange"
                 (or_null_to_js
                    (fun
                       (x1138 : this:t -> ev:IDBVersionChangeEvent.t -> any)
                       ->
                       Ojs.fun_to_js 2
                         (fun (x1139 : Ojs.t) ->
                            fun (x1140 : Ojs.t) ->
                              any_to_js
                                (x1138 ~this:(t_of_js x1139)
                                   ~ev:(IDBVersionChangeEvent.t_of_js x1140))))
                    x1137)
         let (get_version : 'tags this -> float) =
           fun (x1142 : 'tags this) ->
             Ojs.float_of_js
               (Ojs.get_prop_ascii (this_to_js Obj.magic x1142) "version")
         let (close : 'tags this -> unit) =
           fun (x1144 : 'tags this) ->
             ignore (Ojs.call (this_to_js Obj.magic x1144) "close" [||])
         let (createObjectStore :
           'tags this ->
             name:string ->
               ?options:IDBObjectStoreParameters.t ->
                 unit -> IDBObjectStore.t)
           =
           fun (x1150 : 'tags this) ->
             fun ~name:(x1146 : string) ->
               fun ?options:(x1147 : IDBObjectStoreParameters.t option) ->
                 fun () ->
                   IDBObjectStore.t_of_js
                     (let x1152 = this_to_js Obj.magic x1150 in
                      Ojs.call (Ojs.get_prop_ascii x1152 "createObjectStore")
                        "apply"
                        [|x1152;((let x1148 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x1148 "push"
                                       [|(Ojs.string_to_js x1146)|]);
                                  (match x1147 with
                                   | Some x1149 ->
                                       ignore
                                         (Ojs.call x1148 "push"
                                            [|(IDBObjectStoreParameters.t_to_js
                                                 x1149)|])
                                   | None -> ());
                                  x1148))|])
         let (deleteObjectStore : 'tags this -> name:string -> unit) =
           fun (x1154 : 'tags this) ->
             fun ~name:(x1153 : string) ->
               ignore
                 (Ojs.call (this_to_js Obj.magic x1154) "deleteObjectStore"
                    [|(Ojs.string_to_js x1153)|])
         let (transaction' :
           'tags this ->
             storeNames:string list or_string ->
               ?mode:IDBTransactionMode.t -> unit -> IDBTransaction.t)
           =
           fun (x1162 : 'tags this) ->
             fun ~storeNames:(x1156 : string list or_string) ->
               fun ?mode:(x1157 : IDBTransactionMode.t option) ->
                 fun () ->
                   IDBTransaction.t_of_js
                     (let x1164 = this_to_js Obj.magic x1162 in
                      Ojs.call (Ojs.get_prop_ascii x1164 "transaction")
                        "apply"
                        [|x1164;((let x1158 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x1158 "push"
                                       [|(or_string_to_js
                                            (fun (x1160 : string list) ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x1160)
                                            x1156)|]);
                                  (match x1157 with
                                   | Some x1159 ->
                                       ignore
                                         (Ojs.call x1158 "push"
                                            [|(IDBTransactionMode.t_to_js
                                                 x1159)|])
                                   | None -> ());
                                  x1158))|])
         let (addEventListener :
           'tags this ->
             type_:'K ->
               listener:(this:t -> ev:any -> any) ->
                 ?options:AddEventListenerOptions.t or_boolean ->
                   unit -> unit)
           =
           fun (x1173 : 'tags this) ->
             fun ~type_:(x1165 : 'K) ->
               fun ~listener:(x1166 : this:t -> ev:any -> any) ->
                 fun
                   ?options:(x1167 :
                              AddEventListenerOptions.t or_boolean option)
                   ->
                   fun () ->
                     ignore
                       (let x1175 = this_to_js Obj.magic x1173 in
                        Ojs.call
                          (Ojs.get_prop_ascii x1175 "addEventListener")
                          "apply"
                          [|x1175;((let x1168 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    ignore
                                      (Ojs.call x1168 "push"
                                         [|(Obj.magic x1165)|]);
                                    ignore
                                      (Ojs.call x1168 "push"
                                         [|(Ojs.fun_to_js 2
                                              (fun (x1171 : Ojs.t) ->
                                                 fun (x1172 : Ojs.t) ->
                                                   any_to_js
                                                     (x1166
                                                        ~this:(t_of_js x1171)
                                                        ~ev:(any_of_js x1172))))|]);
                                    (match x1167 with
                                     | Some x1169 ->
                                         ignore
                                           (Ojs.call x1168 "push"
                                              [|(or_boolean_to_js
                                                   AddEventListenerOptions.t_to_js
                                                   x1169)|])
                                     | None -> ());
                                    x1168))|])
         let (addEventListener' :
           'tags this ->
             type_:string ->
               listener:EventListenerOrEventListenerObject.t ->
                 ?options:AddEventListenerOptions.t or_boolean ->
                   unit -> unit)
           =
           fun (x1182 : 'tags this) ->
             fun ~type_:(x1176 : string) ->
               fun ~listener:(x1177 : EventListenerOrEventListenerObject.t)
                 ->
                 fun
                   ?options:(x1178 :
                              AddEventListenerOptions.t or_boolean option)
                   ->
                   fun () ->
                     ignore
                       (let x1184 = this_to_js Obj.magic x1182 in
                        Ojs.call
                          (Ojs.get_prop_ascii x1184 "addEventListener")
                          "apply"
                          [|x1184;((let x1179 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    ignore
                                      (Ojs.call x1179 "push"
                                         [|(Ojs.string_to_js x1176)|]);
                                    ignore
                                      (Ojs.call x1179 "push"
                                         [|(EventListenerOrEventListenerObject.t_to_js
                                              x1177)|]);
                                    (match x1178 with
                                     | Some x1180 ->
                                         ignore
                                           (Ojs.call x1179 "push"
                                              [|(or_boolean_to_js
                                                   AddEventListenerOptions.t_to_js
                                                   x1180)|])
                                     | None -> ());
                                    x1179))|])
         let (removeEventListener :
           'tags this ->
             type_:'K ->
               listener:(this:t -> ev:any -> any) ->
                 ?options:EventListenerOptions.t or_boolean -> unit -> unit)
           =
           fun (x1193 : 'tags this) ->
             fun ~type_:(x1185 : 'K) ->
               fun ~listener:(x1186 : this:t -> ev:any -> any) ->
                 fun
                   ?options:(x1187 :
                              EventListenerOptions.t or_boolean option)
                   ->
                   fun () ->
                     ignore
                       (let x1195 = this_to_js Obj.magic x1193 in
                        Ojs.call
                          (Ojs.get_prop_ascii x1195 "removeEventListener")
                          "apply"
                          [|x1195;((let x1188 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    ignore
                                      (Ojs.call x1188 "push"
                                         [|(Obj.magic x1185)|]);
                                    ignore
                                      (Ojs.call x1188 "push"
                                         [|(Ojs.fun_to_js 2
                                              (fun (x1191 : Ojs.t) ->
                                                 fun (x1192 : Ojs.t) ->
                                                   any_to_js
                                                     (x1186
                                                        ~this:(t_of_js x1191)
                                                        ~ev:(any_of_js x1192))))|]);
                                    (match x1187 with
                                     | Some x1189 ->
                                         ignore
                                           (Ojs.call x1188 "push"
                                              [|(or_boolean_to_js
                                                   EventListenerOptions.t_to_js
                                                   x1189)|])
                                     | None -> ());
                                    x1188))|])
         let (removeEventListener' :
           'tags this ->
             type_:string ->
               listener:EventListenerOrEventListenerObject.t ->
                 ?options:EventListenerOptions.t or_boolean -> unit -> unit)
           =
           fun (x1202 : 'tags this) ->
             fun ~type_:(x1196 : string) ->
               fun ~listener:(x1197 : EventListenerOrEventListenerObject.t)
                 ->
                 fun
                   ?options:(x1198 :
                              EventListenerOptions.t or_boolean option)
                   ->
                   fun () ->
                     ignore
                       (let x1204 = this_to_js Obj.magic x1202 in
                        Ojs.call
                          (Ojs.get_prop_ascii x1204 "removeEventListener")
                          "apply"
                          [|x1204;((let x1199 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    ignore
                                      (Ojs.call x1199 "push"
                                         [|(Ojs.string_to_js x1196)|]);
                                    ignore
                                      (Ojs.call x1199 "push"
                                         [|(EventListenerOrEventListenerObject.t_to_js
                                              x1197)|]);
                                    (match x1198 with
                                     | Some x1200 ->
                                         ignore
                                           (Ojs.call x1199 "push"
                                              [|(or_boolean_to_js
                                                   EventListenerOptions.t_to_js
                                                   x1200)|])
                                     | None -> ());
                                    x1199))|])
         let cast_from = Obj.magic
         let (prototype : unit -> t) =
           fun () ->
             t_of_js
               (Ojs.get_prop_ascii
                  (Ojs.get_prop_ascii Ojs.global "IDBDatabase") "prototype")
         let (create : unit -> t) =
           fun () ->
             t_of_js
               (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "IDBDatabase")
                  [||])
       end and
            IDBIndex:sig
                       type t = [ `IDBIndex ] intf
                       type t_0 = t
                       [@@@js.stop ]
                       type tags = [ `IDBIndex ]
                       type tags_0 = tags
                       [@@@js.start ]
                       [@@@js.implem
                         type tags = [ `IDBIndex ]
                         type tags_0 = tags]
                       type 'tags this =
                         'tags intf constraint 'tags = [> `IDBIndex ]
                       val t_to_js : t -> Ojs.t
                       val t_of_js : Ojs.t -> t
                       val t_0_to_js : t_0 -> Ojs.t
                       val t_0_of_js : Ojs.t -> t_0
                       val get_keyPath : 'tags this -> string list or_string
                       val get_multiEntry : 'tags this -> bool
                       val get_name : 'tags this -> string
                       val set_name : 'tags this -> string -> unit
                       val get_objectStore : 'tags this -> IDBObjectStore.t
                       val get_unique : 'tags this -> bool
                       val count :
                         'tags this ->
                           ?query:(IDBKeyRange.t, IDBValidKey.t) union2 ->
                             unit -> float IDBRequest.t
                       val get_ :
                         'tags this ->
                           query:(IDBKeyRange.t, IDBValidKey.t) union2 ->
                             any IDBRequest.t
                       val getAll :
                         'tags this ->
                           ?query:(IDBKeyRange.t, IDBValidKey.t) union2
                             or_null ->
                             ?count:float -> unit -> any list IDBRequest.t
                       val getAllKeys :
                         'tags this ->
                           ?query:(IDBKeyRange.t, IDBValidKey.t) union2
                             or_null ->
                             ?count:float ->
                               unit -> IDBValidKey.t list IDBRequest.t
                       val getKey :
                         'tags this ->
                           query:(IDBKeyRange.t, IDBValidKey.t) union2 ->
                             IDBValidKey.t or_undefined IDBRequest.t
                       val openCursor :
                         'tags this ->
                           ?query:(IDBKeyRange.t, IDBValidKey.t) union2
                             or_null ->
                             ?direction:IDBCursorDirection.t ->
                               unit ->
                                 IDBCursorWithValue.t or_null IDBRequest.t
                       val openKeyCursor :
                         'tags this ->
                           ?query:(IDBKeyRange.t, IDBValidKey.t) union2
                             or_null ->
                             ?direction:IDBCursorDirection.t ->
                               unit -> IDBCursor.t or_null IDBRequest.t
                       val cast_from : 'tags this -> t
                       val prototype : unit -> t
                       val create : unit -> t
                     end =
            struct
              type t = [ `IDBIndex ] intf
              let rec t_of_js : Ojs.t -> t = Obj.magic
              and t_to_js : t -> Ojs.t = Obj.magic
              type t_0 = t
              let rec t_0_of_js : Ojs.t -> t_0 =
                fun (x1206 : Ojs.t) -> t_of_js x1206
              and t_0_to_js : t_0 -> Ojs.t = fun (x1205 : t) -> t_to_js x1205
              type tags = [ `IDBIndex ]
              type tags_0 = tags
              type 'tags this = 'tags intf constraint 'tags = [> `IDBIndex ]
              let rec this_of_js :
                'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this = fun (type
                __tags) ->
                fun (__tags_of_js : Ojs.t -> __tags) ->
                  fun (x1209 : Ojs.t) -> intf_of_js __tags_of_js x1209
              and this_to_js :
                'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun (type
                __tags) ->
                fun (__tags_to_js : __tags -> Ojs.t) ->
                  fun (x1207 : __tags intf) -> intf_to_js __tags_to_js x1207
              let (get_keyPath : 'tags this -> string list or_string) =
                fun (x1211 : 'tags this) ->
                  or_string_of_js
                    (fun (x1213 : Ojs.t) ->
                       Ojs.list_of_js Ojs.string_of_js x1213)
                    (Ojs.get_prop_ascii (this_to_js Obj.magic x1211)
                       "keyPath")
              let (get_multiEntry : 'tags this -> bool) =
                fun (x1215 : 'tags this) ->
                  Ojs.bool_of_js
                    (Ojs.get_prop_ascii (this_to_js Obj.magic x1215)
                       "multiEntry")
              let (get_name : 'tags this -> string) =
                fun (x1217 : 'tags this) ->
                  Ojs.string_of_js
                    (Ojs.get_prop_ascii (this_to_js Obj.magic x1217) "name")
              let (set_name : 'tags this -> string -> unit) =
                fun (x1219 : 'tags this) ->
                  fun (x1220 : string) ->
                    Ojs.set_prop_ascii (this_to_js Obj.magic x1219) "name"
                      (Ojs.string_to_js x1220)
              let (get_objectStore : 'tags this -> IDBObjectStore.t) =
                fun (x1222 : 'tags this) ->
                  IDBObjectStore.t_of_js
                    (Ojs.get_prop_ascii (this_to_js Obj.magic x1222)
                       "objectStore")
              let (get_unique : 'tags this -> bool) =
                fun (x1224 : 'tags this) ->
                  Ojs.bool_of_js
                    (Ojs.get_prop_ascii (this_to_js Obj.magic x1224) "unique")
              let (count :
                'tags this ->
                  ?query:(IDBKeyRange.t, IDBValidKey.t) union2 ->
                    unit -> float IDBRequest.t)
                =
                fun (x1231 : 'tags this) ->
                  fun
                    ?query:(x1226 :
                             (IDBKeyRange.t, IDBValidKey.t) union2 option)
                    ->
                    fun () ->
                      IDBRequest.t_of_js Ojs.float_of_js
                        (let x1233 = this_to_js Obj.magic x1231 in
                         Ojs.call (Ojs.get_prop_ascii x1233 "count") "apply"
                           [|x1233;((let x1227 =
                                       Ojs.new_obj
                                         (Ojs.get_prop_ascii Ojs.global
                                            "Array") [||] in
                                     (match x1226 with
                                      | Some x1228 ->
                                          ignore
                                            (Ojs.call x1227 "push"
                                               [|(union2_to_js
                                                    IDBKeyRange.t_to_js
                                                    IDBValidKey.t_to_js x1228)|])
                                      | None -> ());
                                     x1227))|])
              let (get_ :
                'tags this ->
                  query:(IDBKeyRange.t, IDBValidKey.t) union2 ->
                    any IDBRequest.t)
                =
                fun (x1238 : 'tags this) ->
                  fun ~query:(x1235 : (IDBKeyRange.t, IDBValidKey.t) union2)
                    ->
                    IDBRequest.t_of_js any_of_js
                      (Ojs.call (this_to_js Obj.magic x1238) "get"
                         [|(union2_to_js IDBKeyRange.t_to_js
                              IDBValidKey.t_to_js x1235)|])
              let (getAll :
                'tags this ->
                  ?query:(IDBKeyRange.t, IDBValidKey.t) union2 or_null ->
                    ?count:float -> unit -> any list IDBRequest.t)
                =
                fun (x1249 : 'tags this) ->
                  fun
                    ?query:(x1241 :
                             (IDBKeyRange.t, IDBValidKey.t) union2 or_null
                               option)
                    ->
                    fun ?count:(x1242 : float option) ->
                      fun () ->
                        IDBRequest.t_of_js
                          (fun (x1252 : Ojs.t) ->
                             Ojs.list_of_js any_of_js x1252)
                          (let x1251 = this_to_js Obj.magic x1249 in
                           Ojs.call (Ojs.get_prop_ascii x1251 "getAll")
                             "apply"
                             [|x1251;((let x1243 =
                                         Ojs.new_obj
                                           (Ojs.get_prop_ascii Ojs.global
                                              "Array") [||] in
                                       (match x1241 with
                                        | Some x1245 ->
                                            ignore
                                              (Ojs.call x1243 "push"
                                                 [|(or_null_to_js
                                                      (fun
                                                         (x1246 :
                                                           (IDBKeyRange.t,
                                                             IDBValidKey.t)
                                                             union2)
                                                         ->
                                                         union2_to_js
                                                           IDBKeyRange.t_to_js
                                                           IDBValidKey.t_to_js
                                                           x1246) x1245)|])
                                        | None -> ());
                                       (match x1242 with
                                        | Some x1244 ->
                                            ignore
                                              (Ojs.call x1243 "push"
                                                 [|(Ojs.float_to_js x1244)|])
                                        | None -> ());
                                       x1243))|])
              let (getAllKeys :
                'tags this ->
                  ?query:(IDBKeyRange.t, IDBValidKey.t) union2 or_null ->
                    ?count:float -> unit -> IDBValidKey.t list IDBRequest.t)
                =
                fun (x1262 : 'tags this) ->
                  fun
                    ?query:(x1254 :
                             (IDBKeyRange.t, IDBValidKey.t) union2 or_null
                               option)
                    ->
                    fun ?count:(x1255 : float option) ->
                      fun () ->
                        IDBRequest.t_of_js
                          (fun (x1265 : Ojs.t) ->
                             Ojs.list_of_js IDBValidKey.t_of_js x1265)
                          (let x1264 = this_to_js Obj.magic x1262 in
                           Ojs.call (Ojs.get_prop_ascii x1264 "getAllKeys")
                             "apply"
                             [|x1264;((let x1256 =
                                         Ojs.new_obj
                                           (Ojs.get_prop_ascii Ojs.global
                                              "Array") [||] in
                                       (match x1254 with
                                        | Some x1258 ->
                                            ignore
                                              (Ojs.call x1256 "push"
                                                 [|(or_null_to_js
                                                      (fun
                                                         (x1259 :
                                                           (IDBKeyRange.t,
                                                             IDBValidKey.t)
                                                             union2)
                                                         ->
                                                         union2_to_js
                                                           IDBKeyRange.t_to_js
                                                           IDBValidKey.t_to_js
                                                           x1259) x1258)|])
                                        | None -> ());
                                       (match x1255 with
                                        | Some x1257 ->
                                            ignore
                                              (Ojs.call x1256 "push"
                                                 [|(Ojs.float_to_js x1257)|])
                                        | None -> ());
                                       x1256))|])
              let (getKey :
                'tags this ->
                  query:(IDBKeyRange.t, IDBValidKey.t) union2 ->
                    IDBValidKey.t or_undefined IDBRequest.t)
                =
                fun (x1270 : 'tags this) ->
                  fun ~query:(x1267 : (IDBKeyRange.t, IDBValidKey.t) union2)
                    ->
                    IDBRequest.t_of_js
                      (fun (x1272 : Ojs.t) ->
                         or_undefined_of_js IDBValidKey.t_of_js x1272)
                      (Ojs.call (this_to_js Obj.magic x1270) "getKey"
                         [|(union2_to_js IDBKeyRange.t_to_js
                              IDBValidKey.t_to_js x1267)|])
              let (openCursor :
                'tags this ->
                  ?query:(IDBKeyRange.t, IDBValidKey.t) union2 or_null ->
                    ?direction:IDBCursorDirection.t ->
                      unit -> IDBCursorWithValue.t or_null IDBRequest.t)
                =
                fun (x1282 : 'tags this) ->
                  fun
                    ?query:(x1274 :
                             (IDBKeyRange.t, IDBValidKey.t) union2 or_null
                               option)
                    ->
                    fun ?direction:(x1275 : IDBCursorDirection.t option) ->
                      fun () ->
                        IDBRequest.t_of_js
                          (fun (x1285 : Ojs.t) ->
                             or_null_of_js IDBCursorWithValue.t_of_js x1285)
                          (let x1284 = this_to_js Obj.magic x1282 in
                           Ojs.call (Ojs.get_prop_ascii x1284 "openCursor")
                             "apply"
                             [|x1284;((let x1276 =
                                         Ojs.new_obj
                                           (Ojs.get_prop_ascii Ojs.global
                                              "Array") [||] in
                                       (match x1274 with
                                        | Some x1278 ->
                                            ignore
                                              (Ojs.call x1276 "push"
                                                 [|(or_null_to_js
                                                      (fun
                                                         (x1279 :
                                                           (IDBKeyRange.t,
                                                             IDBValidKey.t)
                                                             union2)
                                                         ->
                                                         union2_to_js
                                                           IDBKeyRange.t_to_js
                                                           IDBValidKey.t_to_js
                                                           x1279) x1278)|])
                                        | None -> ());
                                       (match x1275 with
                                        | Some x1277 ->
                                            ignore
                                              (Ojs.call x1276 "push"
                                                 [|(IDBCursorDirection.t_to_js
                                                      x1277)|])
                                        | None -> ());
                                       x1276))|])
              let (openKeyCursor :
                'tags this ->
                  ?query:(IDBKeyRange.t, IDBValidKey.t) union2 or_null ->
                    ?direction:IDBCursorDirection.t ->
                      unit -> IDBCursor.t or_null IDBRequest.t)
                =
                fun (x1295 : 'tags this) ->
                  fun
                    ?query:(x1287 :
                             (IDBKeyRange.t, IDBValidKey.t) union2 or_null
                               option)
                    ->
                    fun ?direction:(x1288 : IDBCursorDirection.t option) ->
                      fun () ->
                        IDBRequest.t_of_js
                          (fun (x1298 : Ojs.t) ->
                             or_null_of_js IDBCursor.t_of_js x1298)
                          (let x1297 = this_to_js Obj.magic x1295 in
                           Ojs.call
                             (Ojs.get_prop_ascii x1297 "openKeyCursor")
                             "apply"
                             [|x1297;((let x1289 =
                                         Ojs.new_obj
                                           (Ojs.get_prop_ascii Ojs.global
                                              "Array") [||] in
                                       (match x1287 with
                                        | Some x1291 ->
                                            ignore
                                              (Ojs.call x1289 "push"
                                                 [|(or_null_to_js
                                                      (fun
                                                         (x1292 :
                                                           (IDBKeyRange.t,
                                                             IDBValidKey.t)
                                                             union2)
                                                         ->
                                                         union2_to_js
                                                           IDBKeyRange.t_to_js
                                                           IDBValidKey.t_to_js
                                                           x1292) x1291)|])
                                        | None -> ());
                                       (match x1288 with
                                        | Some x1290 ->
                                            ignore
                                              (Ojs.call x1289 "push"
                                                 [|(IDBCursorDirection.t_to_js
                                                      x1290)|])
                                        | None -> ());
                                       x1289))|])
              let cast_from = Obj.magic
              let (prototype : unit -> t) =
                fun () ->
                  t_of_js
                    (Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "IDBIndex") "prototype")
              let (create : unit -> t) =
                fun () ->
                  t_of_js
                    (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "IDBIndex")
                       [||])
            end and
                 IDBObjectStore:sig
                                  type t = [ `IDBObjectStore ] intf
                                  type t_0 = t
                                  [@@@js.stop ]
                                  type tags = [ `IDBObjectStore ]
                                  type tags_0 = tags
                                  [@@@js.start ]
                                  [@@@js.implem
                                    type tags = [ `IDBObjectStore ]
                                    type tags_0 = tags]
                                  type 'tags this =
                                    'tags intf constraint 'tags =
                                                [> `IDBObjectStore ]
                                  val t_to_js : t -> Ojs.t
                                  val t_of_js : Ojs.t -> t
                                  val t_0_to_js : t_0 -> Ojs.t
                                  val t_0_of_js : Ojs.t -> t_0
                                  val createIndex :
                                    'tags this ->
                                      name:string ->
                                        keyPath:string Iterable.t_1 or_string
                                          ->
                                          ?options:IDBIndexParameters.t ->
                                            unit -> IDBIndex.t
                                  val get_autoIncrement : 'tags this -> bool
                                  val get_indexNames :
                                    'tags this -> DOMStringList.t
                                  val get_keyPath :
                                    'tags this -> string list or_string
                                  val get_name : 'tags this -> string
                                  val set_name : 'tags this -> string -> unit
                                  val get_transaction :
                                    'tags this -> IDBTransaction.t
                                  val add :
                                    'tags this ->
                                      value:any ->
                                        ?key:IDBValidKey.t ->
                                          unit -> IDBValidKey.t IDBRequest.t
                                  val clear :
                                    'tags this ->
                                      never or_undefined IDBRequest.t
                                  val count :
                                    'tags this ->
                                      ?query:(IDBKeyRange.t, IDBValidKey.t)
                                        union2 -> unit -> float IDBRequest.t
                                  val createIndex' :
                                    'tags this ->
                                      name:string ->
                                        keyPath:string list or_string ->
                                          ?options:IDBIndexParameters.t ->
                                            unit -> IDBIndex.t
                                  val delete :
                                    'tags this ->
                                      query:(IDBKeyRange.t, IDBValidKey.t)
                                        union2 ->
                                        never or_undefined IDBRequest.t
                                  val deleteIndex :
                                    'tags this -> name:string -> unit
                                  val get_ :
                                    'tags this ->
                                      query:(IDBKeyRange.t, IDBValidKey.t)
                                        union2 -> any IDBRequest.t
                                  val getAll :
                                    'tags this ->
                                      ?query:(IDBKeyRange.t, IDBValidKey.t)
                                        union2 or_null ->
                                        ?count:float ->
                                          unit -> any list IDBRequest.t
                                  val getAllKeys :
                                    'tags this ->
                                      ?query:(IDBKeyRange.t, IDBValidKey.t)
                                        union2 or_null ->
                                        ?count:float ->
                                          unit ->
                                            IDBValidKey.t list IDBRequest.t
                                  val getKey :
                                    'tags this ->
                                      query:(IDBKeyRange.t, IDBValidKey.t)
                                        union2 ->
                                        IDBValidKey.t or_undefined
                                          IDBRequest.t
                                  val index :
                                    'tags this -> name:string -> IDBIndex.t
                                  val openCursor :
                                    'tags this ->
                                      ?query:(IDBKeyRange.t, IDBValidKey.t)
                                        union2 or_null ->
                                        ?direction:IDBCursorDirection.t ->
                                          unit ->
                                            IDBCursorWithValue.t or_null
                                              IDBRequest.t
                                  val openKeyCursor :
                                    'tags this ->
                                      ?query:(IDBKeyRange.t, IDBValidKey.t)
                                        union2 or_null ->
                                        ?direction:IDBCursorDirection.t ->
                                          unit ->
                                            IDBCursor.t or_null IDBRequest.t
                                  val put :
                                    'tags this ->
                                      value:any ->
                                        ?key:IDBValidKey.t ->
                                          unit -> IDBValidKey.t IDBRequest.t
                                  val cast_from : 'tags this -> t
                                  val prototype : unit -> t
                                  val create : unit -> t
                                end =
                 struct
                   type t = [ `IDBObjectStore ] intf
                   let rec t_of_js : Ojs.t -> t = Obj.magic
                   and t_to_js : t -> Ojs.t = Obj.magic
                   type t_0 = t
                   let rec t_0_of_js : Ojs.t -> t_0 =
                     fun (x1301 : Ojs.t) -> t_of_js x1301
                   and t_0_to_js : t_0 -> Ojs.t =
                     fun (x1300 : t) -> t_to_js x1300
                   type tags = [ `IDBObjectStore ]
                   type tags_0 = tags
                   type 'tags this =
                     'tags intf constraint 'tags = [> `IDBObjectStore ]
                   let rec this_of_js :
                     'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this = fun
                     (type __tags) ->
                     fun (__tags_of_js : Ojs.t -> __tags) ->
                       fun (x1304 : Ojs.t) -> intf_of_js __tags_of_js x1304
                   and this_to_js :
                     'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
                     (type __tags) ->
                     fun (__tags_to_js : __tags -> Ojs.t) ->
                       fun (x1302 : __tags intf) ->
                         intf_to_js __tags_to_js x1302
                   let (createIndex :
                     'tags this ->
                       name:string ->
                         keyPath:string Iterable.t_1 or_string ->
                           ?options:IDBIndexParameters.t ->
                             unit -> IDBIndex.t)
                     =
                     fun (x1313 : 'tags this) ->
                       fun ~name:(x1306 : string) ->
                         fun ~keyPath:(x1307 : string Iterable.t_1 or_string)
                           ->
                           fun ?options:(x1308 : IDBIndexParameters.t option)
                             ->
                             fun () ->
                               IDBIndex.t_of_js
                                 (let x1315 = this_to_js Obj.magic x1313 in
                                  Ojs.call
                                    (Ojs.get_prop_ascii x1315 "createIndex")
                                    "apply"
                                    [|x1315;((let x1309 =
                                                Ojs.new_obj
                                                  (Ojs.get_prop_ascii
                                                     Ojs.global "Array") 
                                                  [||] in
                                              ignore
                                                (Ojs.call x1309 "push"
                                                   [|(Ojs.string_to_js x1306)|]);
                                              ignore
                                                (Ojs.call x1309 "push"
                                                   [|(or_string_to_js
                                                        (fun
                                                           (x1311 :
                                                             string
                                                               Iterable.t_1)
                                                           ->
                                                           Iterable.t_1_to_js
                                                             Ojs.string_to_js
                                                             x1311) x1307)|]);
                                              (match x1308 with
                                               | Some x1310 ->
                                                   ignore
                                                     (Ojs.call x1309 "push"
                                                        [|(IDBIndexParameters.t_to_js
                                                             x1310)|])
                                               | None -> ());
                                              x1309))|])
                   let (get_autoIncrement : 'tags this -> bool) =
                     fun (x1316 : 'tags this) ->
                       Ojs.bool_of_js
                         (Ojs.get_prop_ascii (this_to_js Obj.magic x1316)
                            "autoIncrement")
                   let (get_indexNames : 'tags this -> DOMStringList.t) =
                     fun (x1318 : 'tags this) ->
                       DOMStringList.t_of_js
                         (Ojs.get_prop_ascii (this_to_js Obj.magic x1318)
                            "indexNames")
                   let (get_keyPath : 'tags this -> string list or_string) =
                     fun (x1320 : 'tags this) ->
                       or_string_of_js
                         (fun (x1322 : Ojs.t) ->
                            Ojs.list_of_js Ojs.string_of_js x1322)
                         (Ojs.get_prop_ascii (this_to_js Obj.magic x1320)
                            "keyPath")
                   let (get_name : 'tags this -> string) =
                     fun (x1324 : 'tags this) ->
                       Ojs.string_of_js
                         (Ojs.get_prop_ascii (this_to_js Obj.magic x1324)
                            "name")
                   let (set_name : 'tags this -> string -> unit) =
                     fun (x1326 : 'tags this) ->
                       fun (x1327 : string) ->
                         Ojs.set_prop_ascii (this_to_js Obj.magic x1326)
                           "name" (Ojs.string_to_js x1327)
                   let (get_transaction : 'tags this -> IDBTransaction.t) =
                     fun (x1329 : 'tags this) ->
                       IDBTransaction.t_of_js
                         (Ojs.get_prop_ascii (this_to_js Obj.magic x1329)
                            "transaction")
                   let (add :
                     'tags this ->
                       value:any ->
                         ?key:IDBValidKey.t ->
                           unit -> IDBValidKey.t IDBRequest.t)
                     =
                     fun (x1335 : 'tags this) ->
                       fun ~value:(x1331 : any) ->
                         fun ?key:(x1332 : IDBValidKey.t option) ->
                           fun () ->
                             IDBRequest.t_of_js IDBValidKey.t_of_js
                               (let x1337 = this_to_js Obj.magic x1335 in
                                Ojs.call (Ojs.get_prop_ascii x1337 "add")
                                  "apply"
                                  [|x1337;((let x1333 =
                                              Ojs.new_obj
                                                (Ojs.get_prop_ascii
                                                   Ojs.global "Array") 
                                                [||] in
                                            ignore
                                              (Ojs.call x1333 "push"
                                                 [|(any_to_js x1331)|]);
                                            (match x1332 with
                                             | Some x1334 ->
                                                 ignore
                                                   (Ojs.call x1333 "push"
                                                      [|(IDBValidKey.t_to_js
                                                           x1334)|])
                                             | None -> ());
                                            x1333))|])
                   let (clear :
                     'tags this -> never or_undefined IDBRequest.t) =
                     fun (x1339 : 'tags this) ->
                       IDBRequest.t_of_js
                         (fun (x1341 : Ojs.t) ->
                            or_undefined_of_js never_of_js x1341)
                         (Ojs.call (this_to_js Obj.magic x1339) "clear" [||])
                   let (count :
                     'tags this ->
                       ?query:(IDBKeyRange.t, IDBValidKey.t) union2 ->
                         unit -> float IDBRequest.t)
                     =
                     fun (x1348 : 'tags this) ->
                       fun
                         ?query:(x1343 :
                                  (IDBKeyRange.t, IDBValidKey.t) union2
                                    option)
                         ->
                         fun () ->
                           IDBRequest.t_of_js Ojs.float_of_js
                             (let x1350 = this_to_js Obj.magic x1348 in
                              Ojs.call (Ojs.get_prop_ascii x1350 "count")
                                "apply"
                                [|x1350;((let x1344 =
                                            Ojs.new_obj
                                              (Ojs.get_prop_ascii Ojs.global
                                                 "Array") [||] in
                                          (match x1343 with
                                           | Some x1345 ->
                                               ignore
                                                 (Ojs.call x1344 "push"
                                                    [|(union2_to_js
                                                         IDBKeyRange.t_to_js
                                                         IDBValidKey.t_to_js
                                                         x1345)|])
                                           | None -> ());
                                          x1344))|])
                   let (createIndex' :
                     'tags this ->
                       name:string ->
                         keyPath:string list or_string ->
                           ?options:IDBIndexParameters.t ->
                             unit -> IDBIndex.t)
                     =
                     fun (x1359 : 'tags this) ->
                       fun ~name:(x1352 : string) ->
                         fun ~keyPath:(x1353 : string list or_string) ->
                           fun ?options:(x1354 : IDBIndexParameters.t option)
                             ->
                             fun () ->
                               IDBIndex.t_of_js
                                 (let x1361 = this_to_js Obj.magic x1359 in
                                  Ojs.call
                                    (Ojs.get_prop_ascii x1361 "createIndex")
                                    "apply"
                                    [|x1361;((let x1355 =
                                                Ojs.new_obj
                                                  (Ojs.get_prop_ascii
                                                     Ojs.global "Array") 
                                                  [||] in
                                              ignore
                                                (Ojs.call x1355 "push"
                                                   [|(Ojs.string_to_js x1352)|]);
                                              ignore
                                                (Ojs.call x1355 "push"
                                                   [|(or_string_to_js
                                                        (fun
                                                           (x1357 :
                                                             string list)
                                                           ->
                                                           Ojs.list_to_js
                                                             Ojs.string_to_js
                                                             x1357) x1353)|]);
                                              (match x1354 with
                                               | Some x1356 ->
                                                   ignore
                                                     (Ojs.call x1355 "push"
                                                        [|(IDBIndexParameters.t_to_js
                                                             x1356)|])
                                               | None -> ());
                                              x1355))|])
                   let (delete :
                     'tags this ->
                       query:(IDBKeyRange.t, IDBValidKey.t) union2 ->
                         never or_undefined IDBRequest.t)
                     =
                     fun (x1365 : 'tags this) ->
                       fun
                         ~query:(x1362 :
                                  (IDBKeyRange.t, IDBValidKey.t) union2)
                         ->
                         IDBRequest.t_of_js
                           (fun (x1367 : Ojs.t) ->
                              or_undefined_of_js never_of_js x1367)
                           (Ojs.call (this_to_js Obj.magic x1365) "delete"
                              [|(union2_to_js IDBKeyRange.t_to_js
                                   IDBValidKey.t_to_js x1362)|])
                   let (deleteIndex : 'tags this -> name:string -> unit) =
                     fun (x1370 : 'tags this) ->
                       fun ~name:(x1369 : string) ->
                         ignore
                           (Ojs.call (this_to_js Obj.magic x1370)
                              "deleteIndex" [|(Ojs.string_to_js x1369)|])
                   let (get_ :
                     'tags this ->
                       query:(IDBKeyRange.t, IDBValidKey.t) union2 ->
                         any IDBRequest.t)
                     =
                     fun (x1375 : 'tags this) ->
                       fun
                         ~query:(x1372 :
                                  (IDBKeyRange.t, IDBValidKey.t) union2)
                         ->
                         IDBRequest.t_of_js any_of_js
                           (Ojs.call (this_to_js Obj.magic x1375) "get"
                              [|(union2_to_js IDBKeyRange.t_to_js
                                   IDBValidKey.t_to_js x1372)|])
                   let (getAll :
                     'tags this ->
                       ?query:(IDBKeyRange.t, IDBValidKey.t) union2 or_null
                         -> ?count:float -> unit -> any list IDBRequest.t)
                     =
                     fun (x1386 : 'tags this) ->
                       fun
                         ?query:(x1378 :
                                  (IDBKeyRange.t, IDBValidKey.t) union2
                                    or_null option)
                         ->
                         fun ?count:(x1379 : float option) ->
                           fun () ->
                             IDBRequest.t_of_js
                               (fun (x1389 : Ojs.t) ->
                                  Ojs.list_of_js any_of_js x1389)
                               (let x1388 = this_to_js Obj.magic x1386 in
                                Ojs.call (Ojs.get_prop_ascii x1388 "getAll")
                                  "apply"
                                  [|x1388;((let x1380 =
                                              Ojs.new_obj
                                                (Ojs.get_prop_ascii
                                                   Ojs.global "Array") 
                                                [||] in
                                            (match x1378 with
                                             | Some x1382 ->
                                                 ignore
                                                   (Ojs.call x1380 "push"
                                                      [|(or_null_to_js
                                                           (fun
                                                              (x1383 :
                                                                (IDBKeyRange.t,
                                                                  IDBValidKey.t)
                                                                  union2)
                                                              ->
                                                              union2_to_js
                                                                IDBKeyRange.t_to_js
                                                                IDBValidKey.t_to_js
                                                                x1383) x1382)|])
                                             | None -> ());
                                            (match x1379 with
                                             | Some x1381 ->
                                                 ignore
                                                   (Ojs.call x1380 "push"
                                                      [|(Ojs.float_to_js
                                                           x1381)|])
                                             | None -> ());
                                            x1380))|])
                   let (getAllKeys :
                     'tags this ->
                       ?query:(IDBKeyRange.t, IDBValidKey.t) union2 or_null
                         ->
                         ?count:float ->
                           unit -> IDBValidKey.t list IDBRequest.t)
                     =
                     fun (x1399 : 'tags this) ->
                       fun
                         ?query:(x1391 :
                                  (IDBKeyRange.t, IDBValidKey.t) union2
                                    or_null option)
                         ->
                         fun ?count:(x1392 : float option) ->
                           fun () ->
                             IDBRequest.t_of_js
                               (fun (x1402 : Ojs.t) ->
                                  Ojs.list_of_js IDBValidKey.t_of_js x1402)
                               (let x1401 = this_to_js Obj.magic x1399 in
                                Ojs.call
                                  (Ojs.get_prop_ascii x1401 "getAllKeys")
                                  "apply"
                                  [|x1401;((let x1393 =
                                              Ojs.new_obj
                                                (Ojs.get_prop_ascii
                                                   Ojs.global "Array") 
                                                [||] in
                                            (match x1391 with
                                             | Some x1395 ->
                                                 ignore
                                                   (Ojs.call x1393 "push"
                                                      [|(or_null_to_js
                                                           (fun
                                                              (x1396 :
                                                                (IDBKeyRange.t,
                                                                  IDBValidKey.t)
                                                                  union2)
                                                              ->
                                                              union2_to_js
                                                                IDBKeyRange.t_to_js
                                                                IDBValidKey.t_to_js
                                                                x1396) x1395)|])
                                             | None -> ());
                                            (match x1392 with
                                             | Some x1394 ->
                                                 ignore
                                                   (Ojs.call x1393 "push"
                                                      [|(Ojs.float_to_js
                                                           x1394)|])
                                             | None -> ());
                                            x1393))|])
                   let (getKey :
                     'tags this ->
                       query:(IDBKeyRange.t, IDBValidKey.t) union2 ->
                         IDBValidKey.t or_undefined IDBRequest.t)
                     =
                     fun (x1407 : 'tags this) ->
                       fun
                         ~query:(x1404 :
                                  (IDBKeyRange.t, IDBValidKey.t) union2)
                         ->
                         IDBRequest.t_of_js
                           (fun (x1409 : Ojs.t) ->
                              or_undefined_of_js IDBValidKey.t_of_js x1409)
                           (Ojs.call (this_to_js Obj.magic x1407) "getKey"
                              [|(union2_to_js IDBKeyRange.t_to_js
                                   IDBValidKey.t_to_js x1404)|])
                   let (index : 'tags this -> name:string -> IDBIndex.t) =
                     fun (x1412 : 'tags this) ->
                       fun ~name:(x1411 : string) ->
                         IDBIndex.t_of_js
                           (Ojs.call (this_to_js Obj.magic x1412) "index"
                              [|(Ojs.string_to_js x1411)|])
                   let (openCursor :
                     'tags this ->
                       ?query:(IDBKeyRange.t, IDBValidKey.t) union2 or_null
                         ->
                         ?direction:IDBCursorDirection.t ->
                           unit -> IDBCursorWithValue.t or_null IDBRequest.t)
                     =
                     fun (x1422 : 'tags this) ->
                       fun
                         ?query:(x1414 :
                                  (IDBKeyRange.t, IDBValidKey.t) union2
                                    or_null option)
                         ->
                         fun ?direction:(x1415 : IDBCursorDirection.t option)
                           ->
                           fun () ->
                             IDBRequest.t_of_js
                               (fun (x1425 : Ojs.t) ->
                                  or_null_of_js IDBCursorWithValue.t_of_js
                                    x1425)
                               (let x1424 = this_to_js Obj.magic x1422 in
                                Ojs.call
                                  (Ojs.get_prop_ascii x1424 "openCursor")
                                  "apply"
                                  [|x1424;((let x1416 =
                                              Ojs.new_obj
                                                (Ojs.get_prop_ascii
                                                   Ojs.global "Array") 
                                                [||] in
                                            (match x1414 with
                                             | Some x1418 ->
                                                 ignore
                                                   (Ojs.call x1416 "push"
                                                      [|(or_null_to_js
                                                           (fun
                                                              (x1419 :
                                                                (IDBKeyRange.t,
                                                                  IDBValidKey.t)
                                                                  union2)
                                                              ->
                                                              union2_to_js
                                                                IDBKeyRange.t_to_js
                                                                IDBValidKey.t_to_js
                                                                x1419) x1418)|])
                                             | None -> ());
                                            (match x1415 with
                                             | Some x1417 ->
                                                 ignore
                                                   (Ojs.call x1416 "push"
                                                      [|(IDBCursorDirection.t_to_js
                                                           x1417)|])
                                             | None -> ());
                                            x1416))|])
                   let (openKeyCursor :
                     'tags this ->
                       ?query:(IDBKeyRange.t, IDBValidKey.t) union2 or_null
                         ->
                         ?direction:IDBCursorDirection.t ->
                           unit -> IDBCursor.t or_null IDBRequest.t)
                     =
                     fun (x1435 : 'tags this) ->
                       fun
                         ?query:(x1427 :
                                  (IDBKeyRange.t, IDBValidKey.t) union2
                                    or_null option)
                         ->
                         fun ?direction:(x1428 : IDBCursorDirection.t option)
                           ->
                           fun () ->
                             IDBRequest.t_of_js
                               (fun (x1438 : Ojs.t) ->
                                  or_null_of_js IDBCursor.t_of_js x1438)
                               (let x1437 = this_to_js Obj.magic x1435 in
                                Ojs.call
                                  (Ojs.get_prop_ascii x1437 "openKeyCursor")
                                  "apply"
                                  [|x1437;((let x1429 =
                                              Ojs.new_obj
                                                (Ojs.get_prop_ascii
                                                   Ojs.global "Array") 
                                                [||] in
                                            (match x1427 with
                                             | Some x1431 ->
                                                 ignore
                                                   (Ojs.call x1429 "push"
                                                      [|(or_null_to_js
                                                           (fun
                                                              (x1432 :
                                                                (IDBKeyRange.t,
                                                                  IDBValidKey.t)
                                                                  union2)
                                                              ->
                                                              union2_to_js
                                                                IDBKeyRange.t_to_js
                                                                IDBValidKey.t_to_js
                                                                x1432) x1431)|])
                                             | None -> ());
                                            (match x1428 with
                                             | Some x1430 ->
                                                 ignore
                                                   (Ojs.call x1429 "push"
                                                      [|(IDBCursorDirection.t_to_js
                                                           x1430)|])
                                             | None -> ());
                                            x1429))|])
                   let (put :
                     'tags this ->
                       value:any ->
                         ?key:IDBValidKey.t ->
                           unit -> IDBValidKey.t IDBRequest.t)
                     =
                     fun (x1444 : 'tags this) ->
                       fun ~value:(x1440 : any) ->
                         fun ?key:(x1441 : IDBValidKey.t option) ->
                           fun () ->
                             IDBRequest.t_of_js IDBValidKey.t_of_js
                               (let x1446 = this_to_js Obj.magic x1444 in
                                Ojs.call (Ojs.get_prop_ascii x1446 "put")
                                  "apply"
                                  [|x1446;((let x1442 =
                                              Ojs.new_obj
                                                (Ojs.get_prop_ascii
                                                   Ojs.global "Array") 
                                                [||] in
                                            ignore
                                              (Ojs.call x1442 "push"
                                                 [|(any_to_js x1440)|]);
                                            (match x1441 with
                                             | Some x1443 ->
                                                 ignore
                                                   (Ojs.call x1442 "push"
                                                      [|(IDBValidKey.t_to_js
                                                           x1443)|])
                                             | None -> ());
                                            x1442))|])
                   let cast_from = Obj.magic
                   let (prototype : unit -> t) =
                     fun () ->
                       t_of_js
                         (Ojs.get_prop_ascii
                            (Ojs.get_prop_ascii Ojs.global "IDBObjectStore")
                            "prototype")
                   let (create : unit -> t) =
                     fun () ->
                       t_of_js
                         (Ojs.new_obj
                            (Ojs.get_prop_ascii Ojs.global "IDBObjectStore")
                            [||])
                 end and
                      IDBRequest:sig
                                   type 'T t =
                                     [ `EventTarget  | `IDBRequest of 'T ]
                                       intf
                                   type 'T t_1 = 'T t
                                   type t_0 = any t
                                   [@@@js.stop ]
                                   type 'T tags =
                                     [ `EventTarget  | `IDBRequest of 'T ]
                                   type 'T tags_1 = 'T tags
                                   type tags_0 = any tags
                                   [@@@js.start ]
                                   [@@@js.implem
                                     type 'T tags =
                                       [ `EventTarget  | `IDBRequest of 'T ]
                                     type 'T tags_1 = 'T tags
                                     type tags_0 = any tags]
                                   type ('tags, 'T) this =
                                     'tags intf constraint 'tags =
                                                 [> `IDBRequest of 'T ]
                                   val t_to_js :
                                     ('T -> Ojs.t) -> 'T t -> Ojs.t
                                   val t_of_js :
                                     (Ojs.t -> 'T) -> Ojs.t -> 'T t
                                   val t_1_to_js :
                                     ('T -> Ojs.t) -> 'T t_1 -> Ojs.t
                                   val t_1_of_js :
                                     (Ojs.t -> 'T) -> Ojs.t -> 'T t_1
                                   val t_0_to_js : t_0 -> Ojs.t
                                   val t_0_of_js : Ojs.t -> t_0
                                   val get_error :
                                     ('tags, 'T) this ->
                                       DOMException.t or_null
                                   val get_onerror :
                                     ('tags, 'T) this ->
                                       (this:'T t -> ev:Event.t -> any)
                                         or_null
                                   val set_onerror :
                                     ('tags, 'T) this ->
                                       (this:'T t -> ev:Event.t -> any)
                                         or_null -> unit
                                   val get_onsuccess :
                                     ('tags, 'T) this ->
                                       (this:'T t -> ev:Event.t -> any)
                                         or_null
                                   val set_onsuccess :
                                     ('tags, 'T) this ->
                                       (this:'T t -> ev:Event.t -> any)
                                         or_null -> unit
                                   val get_readyState :
                                     ('tags, 'T) this ->
                                       IDBRequestReadyState.t
                                   val get_result : ('tags, 'T) this -> 'T
                                   val get_source :
                                     ('tags, 'T) this ->
                                       (IDBCursor.t, IDBIndex.t,
                                         IDBObjectStore.t) union3
                                   val get_transaction :
                                     ('tags, 'T) this ->
                                       IDBTransaction.t or_null
                                   val addEventListener :
                                     ('tags, 'T) this ->
                                       type_:'K ->
                                         listener:(this:'T t -> ev:any -> any)
                                           ->
                                           ?options:AddEventListenerOptions.t
                                             or_boolean -> unit -> unit
                                   val addEventListener' :
                                     ('tags, 'T) this ->
                                       type_:string ->
                                         listener:EventListenerOrEventListenerObject.t
                                           ->
                                           ?options:AddEventListenerOptions.t
                                             or_boolean -> unit -> unit
                                   val removeEventListener :
                                     ('tags, 'T) this ->
                                       type_:'K ->
                                         listener:(this:'T t -> ev:any -> any)
                                           ->
                                           ?options:EventListenerOptions.t
                                             or_boolean -> unit -> unit
                                   val removeEventListener' :
                                     ('tags, 'T) this ->
                                       type_:string ->
                                         listener:EventListenerOrEventListenerObject.t
                                           ->
                                           ?options:EventListenerOptions.t
                                             or_boolean -> unit -> unit
                                   val cast_from : ('tags, 'T) this -> 'T t
                                   val prototype : unit -> t_0
                                   val create : unit -> t_0
                                 end =
                      struct
                        type 'T t =
                          [ `EventTarget  | `IDBRequest of 'T ] intf
                        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t
                          = fun _T -> Obj.magic
                        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
                          fun _T -> Obj.magic
                        type 'T t_1 = 'T t
                        let rec t_1_of_js :
                          'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
                          __T) ->
                          fun (__T_of_js : Ojs.t -> __T) ->
                            fun (x1450 : Ojs.t) -> t_of_js __T_of_js x1450
                        and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t
                          = fun (type __T) ->
                          fun (__T_to_js : __T -> Ojs.t) ->
                            fun (x1448 : __T t) -> t_to_js __T_to_js x1448
                        type t_0 = any t
                        let rec t_0_of_js : Ojs.t -> t_0 =
                          fun (x1454 : Ojs.t) -> t_of_js any_of_js x1454
                        and t_0_to_js : t_0 -> Ojs.t =
                          fun (x1452 : any t) -> t_to_js any_to_js x1452
                        type 'T tags = [ `EventTarget  | `IDBRequest of 'T ]
                        type 'T tags_1 = 'T tags
                        type tags_0 = any tags
                        type ('tags, 'T) this =
                          'tags intf constraint 'tags =
                                      [> `IDBRequest of 'T ]
                        let rec this_of_js :
                          'tags 'T .
                            (Ojs.t -> 'tags) ->
                              (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
                          = fun (type __tags) -> fun (type __T) ->
                          fun (__tags_of_js : Ojs.t -> __tags) ->
                            fun (__T_of_js : Ojs.t -> __T) ->
                              fun (x1458 : Ojs.t) ->
                                intf_of_js __tags_of_js x1458
                        and this_to_js :
                          'tags 'T .
                            ('tags -> Ojs.t) ->
                              ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
                          = fun (type __tags) -> fun (type __T) ->
                          fun (__tags_to_js : __tags -> Ojs.t) ->
                            fun (__T_to_js : __T -> Ojs.t) ->
                              fun (x1456 : __tags intf) ->
                                intf_to_js __tags_to_js x1456
                        let (get_error :
                          ('tags, 'T) this -> DOMException.t or_null) =
                          fun (x1460 : ('tags, 'T) this) ->
                            or_null_of_js DOMException.t_of_js
                              (Ojs.get_prop_ascii
                                 (this_to_js Obj.magic Obj.magic x1460)
                                 "error")
                        let (get_onerror :
                          ('tags, 'T) this ->
                            (this:'T t -> ev:Event.t -> any) or_null)
                          =
                          fun (x1464 : ('tags, 'T) this) ->
                            or_null_of_js
                              (fun (x1467 : Ojs.t) ->
                                 fun ~this:(x1468 : 'T t) ->
                                   fun ~ev:(x1470 : Event.t) ->
                                     any_of_js
                                       (Ojs.apply x1467
                                          [|(t_to_js Obj.magic x1468);(
                                            Event.t_to_js x1470)|]))
                              (Ojs.get_prop_ascii
                                 (this_to_js Obj.magic Obj.magic x1464)
                                 "onerror")
                        let (set_onerror :
                          ('tags, 'T) this ->
                            (this:'T t -> ev:Event.t -> any) or_null -> unit)
                          =
                          fun (x1471 : ('tags, 'T) this) ->
                            fun
                              (x1472 :
                                (this:'T t -> ev:Event.t -> any) or_null)
                              ->
                              Ojs.set_prop_ascii
                                (this_to_js Obj.magic Obj.magic x1471)
                                "onerror"
                                (or_null_to_js
                                   (fun
                                      (x1473 :
                                        this:'T t -> ev:Event.t -> any)
                                      ->
                                      Ojs.fun_to_js 2
                                        (fun (x1474 : Ojs.t) ->
                                           fun (x1476 : Ojs.t) ->
                                             any_to_js
                                               (x1473
                                                  ~this:(t_of_js Obj.magic
                                                           x1474)
                                                  ~ev:(Event.t_of_js x1476))))
                                   x1472)
                        let (get_onsuccess :
                          ('tags, 'T) this ->
                            (this:'T t -> ev:Event.t -> any) or_null)
                          =
                          fun (x1479 : ('tags, 'T) this) ->
                            or_null_of_js
                              (fun (x1482 : Ojs.t) ->
                                 fun ~this:(x1483 : 'T t) ->
                                   fun ~ev:(x1485 : Event.t) ->
                                     any_of_js
                                       (Ojs.apply x1482
                                          [|(t_to_js Obj.magic x1483);(
                                            Event.t_to_js x1485)|]))
                              (Ojs.get_prop_ascii
                                 (this_to_js Obj.magic Obj.magic x1479)
                                 "onsuccess")
                        let (set_onsuccess :
                          ('tags, 'T) this ->
                            (this:'T t -> ev:Event.t -> any) or_null -> unit)
                          =
                          fun (x1486 : ('tags, 'T) this) ->
                            fun
                              (x1487 :
                                (this:'T t -> ev:Event.t -> any) or_null)
                              ->
                              Ojs.set_prop_ascii
                                (this_to_js Obj.magic Obj.magic x1486)
                                "onsuccess"
                                (or_null_to_js
                                   (fun
                                      (x1488 :
                                        this:'T t -> ev:Event.t -> any)
                                      ->
                                      Ojs.fun_to_js 2
                                        (fun (x1489 : Ojs.t) ->
                                           fun (x1491 : Ojs.t) ->
                                             any_to_js
                                               (x1488
                                                  ~this:(t_of_js Obj.magic
                                                           x1489)
                                                  ~ev:(Event.t_of_js x1491))))
                                   x1487)
                        let (get_readyState :
                          ('tags, 'T) this -> IDBRequestReadyState.t) =
                          fun (x1494 : ('tags, 'T) this) ->
                            IDBRequestReadyState.t_of_js
                              (Ojs.get_prop_ascii
                                 (this_to_js Obj.magic Obj.magic x1494)
                                 "readyState")
                        let (get_result : ('tags, 'T) this -> 'T) =
                          fun (x1497 : ('tags, 'T) this) ->
                            Obj.magic
                              (Ojs.get_prop_ascii
                                 (this_to_js Obj.magic Obj.magic x1497)
                                 "result")
                        let (get_source :
                          ('tags, 'T) this ->
                            (IDBCursor.t, IDBIndex.t, IDBObjectStore.t)
                              union3)
                          =
                          fun (x1500 : ('tags, 'T) this) ->
                            union3_of_js IDBCursor.t_of_js IDBIndex.t_of_js
                              IDBObjectStore.t_of_js
                              (Ojs.get_prop_ascii
                                 (this_to_js Obj.magic Obj.magic x1500)
                                 "source")
                        let (get_transaction :
                          ('tags, 'T) this -> IDBTransaction.t or_null) =
                          fun (x1506 : ('tags, 'T) this) ->
                            or_null_of_js IDBTransaction.t_of_js
                              (Ojs.get_prop_ascii
                                 (this_to_js Obj.magic Obj.magic x1506)
                                 "transaction")
                        let (addEventListener :
                          ('tags, 'T) this ->
                            type_:'K ->
                              listener:(this:'T t -> ev:any -> any) ->
                                ?options:AddEventListenerOptions.t or_boolean
                                  -> unit -> unit)
                          =
                          fun (x1519 : ('tags, 'T) this) ->
                            fun ~type_:(x1510 : 'K) ->
                              fun
                                ~listener:(x1511 :
                                            this:'T t -> ev:any -> any)
                                ->
                                fun
                                  ?options:(x1512 :
                                             AddEventListenerOptions.t
                                               or_boolean option)
                                  ->
                                  fun () ->
                                    ignore
                                      (let x1522 =
                                         this_to_js Obj.magic Obj.magic x1519 in
                                       Ojs.call
                                         (Ojs.get_prop_ascii x1522
                                            "addEventListener") "apply"
                                         [|x1522;((let x1513 =
                                                     Ojs.new_obj
                                                       (Ojs.get_prop_ascii
                                                          Ojs.global "Array")
                                                       [||] in
                                                   ignore
                                                     (Ojs.call x1513 "push"
                                                        [|(Obj.magic x1510)|]);
                                                   ignore
                                                     (Ojs.call x1513 "push"
                                                        [|(Ojs.fun_to_js 2
                                                             (fun
                                                                (x1516 :
                                                                  Ojs.t)
                                                                ->
                                                                fun
                                                                  (x1518 :
                                                                    Ojs.t)
                                                                  ->
                                                                  any_to_js
                                                                    (
                                                                    x1511
                                                                    ~this:(
                                                                    t_of_js
                                                                    Obj.magic
                                                                    x1516)
                                                                    ~ev:(
                                                                    any_of_js
                                                                    x1518))))|]);
                                                   (match x1512 with
                                                    | Some x1514 ->
                                                        ignore
                                                          (Ojs.call x1513
                                                             "push"
                                                             [|(or_boolean_to_js
                                                                  AddEventListenerOptions.t_to_js
                                                                  x1514)|])
                                                    | None -> ());
                                                   x1513))|])
                        let (addEventListener' :
                          ('tags, 'T) this ->
                            type_:string ->
                              listener:EventListenerOrEventListenerObject.t
                                ->
                                ?options:AddEventListenerOptions.t or_boolean
                                  -> unit -> unit)
                          =
                          fun (x1529 : ('tags, 'T) this) ->
                            fun ~type_:(x1523 : string) ->
                              fun
                                ~listener:(x1524 :
                                            EventListenerOrEventListenerObject.t)
                                ->
                                fun
                                  ?options:(x1525 :
                                             AddEventListenerOptions.t
                                               or_boolean option)
                                  ->
                                  fun () ->
                                    ignore
                                      (let x1532 =
                                         this_to_js Obj.magic Obj.magic x1529 in
                                       Ojs.call
                                         (Ojs.get_prop_ascii x1532
                                            "addEventListener") "apply"
                                         [|x1532;((let x1526 =
                                                     Ojs.new_obj
                                                       (Ojs.get_prop_ascii
                                                          Ojs.global "Array")
                                                       [||] in
                                                   ignore
                                                     (Ojs.call x1526 "push"
                                                        [|(Ojs.string_to_js
                                                             x1523)|]);
                                                   ignore
                                                     (Ojs.call x1526 "push"
                                                        [|(EventListenerOrEventListenerObject.t_to_js
                                                             x1524)|]);
                                                   (match x1525 with
                                                    | Some x1527 ->
                                                        ignore
                                                          (Ojs.call x1526
                                                             "push"
                                                             [|(or_boolean_to_js
                                                                  AddEventListenerOptions.t_to_js
                                                                  x1527)|])
                                                    | None -> ());
                                                   x1526))|])
                        let (removeEventListener :
                          ('tags, 'T) this ->
                            type_:'K ->
                              listener:(this:'T t -> ev:any -> any) ->
                                ?options:EventListenerOptions.t or_boolean ->
                                  unit -> unit)
                          =
                          fun (x1542 : ('tags, 'T) this) ->
                            fun ~type_:(x1533 : 'K) ->
                              fun
                                ~listener:(x1534 :
                                            this:'T t -> ev:any -> any)
                                ->
                                fun
                                  ?options:(x1535 :
                                             EventListenerOptions.t
                                               or_boolean option)
                                  ->
                                  fun () ->
                                    ignore
                                      (let x1545 =
                                         this_to_js Obj.magic Obj.magic x1542 in
                                       Ojs.call
                                         (Ojs.get_prop_ascii x1545
                                            "removeEventListener") "apply"
                                         [|x1545;((let x1536 =
                                                     Ojs.new_obj
                                                       (Ojs.get_prop_ascii
                                                          Ojs.global "Array")
                                                       [||] in
                                                   ignore
                                                     (Ojs.call x1536 "push"
                                                        [|(Obj.magic x1533)|]);
                                                   ignore
                                                     (Ojs.call x1536 "push"
                                                        [|(Ojs.fun_to_js 2
                                                             (fun
                                                                (x1539 :
                                                                  Ojs.t)
                                                                ->
                                                                fun
                                                                  (x1541 :
                                                                    Ojs.t)
                                                                  ->
                                                                  any_to_js
                                                                    (
                                                                    x1534
                                                                    ~this:(
                                                                    t_of_js
                                                                    Obj.magic
                                                                    x1539)
                                                                    ~ev:(
                                                                    any_of_js
                                                                    x1541))))|]);
                                                   (match x1535 with
                                                    | Some x1537 ->
                                                        ignore
                                                          (Ojs.call x1536
                                                             "push"
                                                             [|(or_boolean_to_js
                                                                  EventListenerOptions.t_to_js
                                                                  x1537)|])
                                                    | None -> ());
                                                   x1536))|])
                        let (removeEventListener' :
                          ('tags, 'T) this ->
                            type_:string ->
                              listener:EventListenerOrEventListenerObject.t
                                ->
                                ?options:EventListenerOptions.t or_boolean ->
                                  unit -> unit)
                          =
                          fun (x1552 : ('tags, 'T) this) ->
                            fun ~type_:(x1546 : string) ->
                              fun
                                ~listener:(x1547 :
                                            EventListenerOrEventListenerObject.t)
                                ->
                                fun
                                  ?options:(x1548 :
                                             EventListenerOptions.t
                                               or_boolean option)
                                  ->
                                  fun () ->
                                    ignore
                                      (let x1555 =
                                         this_to_js Obj.magic Obj.magic x1552 in
                                       Ojs.call
                                         (Ojs.get_prop_ascii x1555
                                            "removeEventListener") "apply"
                                         [|x1555;((let x1549 =
                                                     Ojs.new_obj
                                                       (Ojs.get_prop_ascii
                                                          Ojs.global "Array")
                                                       [||] in
                                                   ignore
                                                     (Ojs.call x1549 "push"
                                                        [|(Ojs.string_to_js
                                                             x1546)|]);
                                                   ignore
                                                     (Ojs.call x1549 "push"
                                                        [|(EventListenerOrEventListenerObject.t_to_js
                                                             x1547)|]);
                                                   (match x1548 with
                                                    | Some x1550 ->
                                                        ignore
                                                          (Ojs.call x1549
                                                             "push"
                                                             [|(or_boolean_to_js
                                                                  EventListenerOptions.t_to_js
                                                                  x1550)|])
                                                    | None -> ());
                                                   x1549))|])
                        let cast_from = Obj.magic
                        let (prototype : unit -> t_0) =
                          fun () ->
                            t_0_of_js
                              (Ojs.get_prop_ascii
                                 (Ojs.get_prop_ascii Ojs.global "IDBRequest")
                                 "prototype")
                        let (create : unit -> t_0) =
                          fun () ->
                            t_0_of_js
                              (Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "IDBRequest")
                                 [||])
                      end and
                           IDBTransaction:sig
                                            type t =
                                              [ `EventTarget 
                                              | `IDBTransaction ] intf
                                            type t_0 = t
                                            [@@@js.stop ]
                                            type tags =
                                              [ `EventTarget 
                                              | `IDBTransaction ]
                                            type tags_0 = tags
                                            [@@@js.start ]
                                            [@@@js.implem
                                              type tags =
                                                [ `EventTarget 
                                                | `IDBTransaction ]
                                              type tags_0 = tags]
                                            type 'tags this =
                                              'tags intf constraint 'tags =
                                                          [>
                                                            `IDBTransaction ]
                                            val t_to_js : t -> Ojs.t
                                            val t_of_js : Ojs.t -> t
                                            val t_0_to_js : t_0 -> Ojs.t
                                            val t_0_of_js : Ojs.t -> t_0
                                            val get_db :
                                              'tags this -> IDBDatabase.t
                                            val get_error :
                                              'tags this ->
                                                DOMException.t or_null
                                            val get_mode :
                                              'tags this ->
                                                IDBTransactionMode.t
                                            val get_objectStoreNames :
                                              'tags this -> DOMStringList.t
                                            val get_onabort :
                                              'tags this ->
                                                (this:t -> ev:Event.t -> any)
                                                  or_null
                                            val set_onabort :
                                              'tags this ->
                                                (this:t -> ev:Event.t -> any)
                                                  or_null -> unit
                                            val get_oncomplete :
                                              'tags this ->
                                                (this:t -> ev:Event.t -> any)
                                                  or_null
                                            val set_oncomplete :
                                              'tags this ->
                                                (this:t -> ev:Event.t -> any)
                                                  or_null -> unit
                                            val get_onerror :
                                              'tags this ->
                                                (this:t -> ev:Event.t -> any)
                                                  or_null
                                            val set_onerror :
                                              'tags this ->
                                                (this:t -> ev:Event.t -> any)
                                                  or_null -> unit
                                            val abort : 'tags this -> unit
                                            val commit : 'tags this -> unit
                                            val objectStore :
                                              'tags this ->
                                                name:string ->
                                                  IDBObjectStore.t
                                            val addEventListener :
                                              'tags this ->
                                                type_:'K ->
                                                  listener:(this:t ->
                                                              ev:any -> any)
                                                    ->
                                                    ?options:AddEventListenerOptions.t
                                                      or_boolean ->
                                                      unit -> unit
                                            val addEventListener' :
                                              'tags this ->
                                                type_:string ->
                                                  listener:EventListenerOrEventListenerObject.t
                                                    ->
                                                    ?options:AddEventListenerOptions.t
                                                      or_boolean ->
                                                      unit -> unit
                                            val removeEventListener :
                                              'tags this ->
                                                type_:'K ->
                                                  listener:(this:t ->
                                                              ev:any -> any)
                                                    ->
                                                    ?options:EventListenerOptions.t
                                                      or_boolean ->
                                                      unit -> unit
                                            val removeEventListener' :
                                              'tags this ->
                                                type_:string ->
                                                  listener:EventListenerOrEventListenerObject.t
                                                    ->
                                                    ?options:EventListenerOptions.t
                                                      or_boolean ->
                                                      unit -> unit
                                            val cast_from : 'tags this -> t
                                            val prototype : unit -> t
                                            val create : unit -> t
                                          end =
                           struct
                             type t =
                               [ `EventTarget  | `IDBTransaction ] intf
                             let rec t_of_js : Ojs.t -> t = Obj.magic
                             and t_to_js : t -> Ojs.t = Obj.magic
                             type t_0 = t
                             let rec t_0_of_js : Ojs.t -> t_0 =
                               fun (x1557 : Ojs.t) -> t_of_js x1557
                             and t_0_to_js : t_0 -> Ojs.t =
                               fun (x1556 : t) -> t_to_js x1556
                             type tags = [ `EventTarget  | `IDBTransaction ]
                             type tags_0 = tags
                             type 'tags this =
                               'tags intf constraint 'tags =
                                           [> `IDBTransaction ]
                             let rec this_of_js :
                               'tags .
                                 (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
                               = fun (type __tags) ->
                               fun (__tags_of_js : Ojs.t -> __tags) ->
                                 fun (x1560 : Ojs.t) ->
                                   intf_of_js __tags_of_js x1560
                             and this_to_js :
                               'tags .
                                 ('tags -> Ojs.t) -> 'tags this -> Ojs.t
                               = fun (type __tags) ->
                               fun (__tags_to_js : __tags -> Ojs.t) ->
                                 fun (x1558 : __tags intf) ->
                                   intf_to_js __tags_to_js x1558
                             let (get_db : 'tags this -> IDBDatabase.t) =
                               fun (x1562 : 'tags this) ->
                                 IDBDatabase.t_of_js
                                   (Ojs.get_prop_ascii
                                      (this_to_js Obj.magic x1562) "db")
                             let (get_error :
                               'tags this -> DOMException.t or_null) =
                               fun (x1564 : 'tags this) ->
                                 or_null_of_js DOMException.t_of_js
                                   (Ojs.get_prop_ascii
                                      (this_to_js Obj.magic x1564) "error")
                             let (get_mode :
                               'tags this -> IDBTransactionMode.t) =
                               fun (x1567 : 'tags this) ->
                                 IDBTransactionMode.t_of_js
                                   (Ojs.get_prop_ascii
                                      (this_to_js Obj.magic x1567) "mode")
                             let (get_objectStoreNames :
                               'tags this -> DOMStringList.t) =
                               fun (x1569 : 'tags this) ->
                                 DOMStringList.t_of_js
                                   (Ojs.get_prop_ascii
                                      (this_to_js Obj.magic x1569)
                                      "objectStoreNames")
                             let (get_onabort :
                               'tags this ->
                                 (this:t -> ev:Event.t -> any) or_null)
                               =
                               fun (x1571 : 'tags this) ->
                                 or_null_of_js
                                   (fun (x1573 : Ojs.t) ->
                                      fun ~this:(x1574 : t) ->
                                        fun ~ev:(x1575 : Event.t) ->
                                          any_of_js
                                            (Ojs.apply x1573
                                               [|(t_to_js x1574);(Event.t_to_js
                                                                    x1575)|]))
                                   (Ojs.get_prop_ascii
                                      (this_to_js Obj.magic x1571) "onabort")
                             let (set_onabort :
                               'tags this ->
                                 (this:t -> ev:Event.t -> any) or_null ->
                                   unit)
                               =
                               fun (x1576 : 'tags this) ->
                                 fun
                                   (x1577 :
                                     (this:t -> ev:Event.t -> any) or_null)
                                   ->
                                   Ojs.set_prop_ascii
                                     (this_to_js Obj.magic x1576) "onabort"
                                     (or_null_to_js
                                        (fun
                                           (x1578 :
                                             this:t -> ev:Event.t -> any)
                                           ->
                                           Ojs.fun_to_js 2
                                             (fun (x1579 : Ojs.t) ->
                                                fun (x1580 : Ojs.t) ->
                                                  any_to_js
                                                    (x1578
                                                       ~this:(t_of_js x1579)
                                                       ~ev:(Event.t_of_js
                                                              x1580)))) x1577)
                             let (get_oncomplete :
                               'tags this ->
                                 (this:t -> ev:Event.t -> any) or_null)
                               =
                               fun (x1582 : 'tags this) ->
                                 or_null_of_js
                                   (fun (x1584 : Ojs.t) ->
                                      fun ~this:(x1585 : t) ->
                                        fun ~ev:(x1586 : Event.t) ->
                                          any_of_js
                                            (Ojs.apply x1584
                                               [|(t_to_js x1585);(Event.t_to_js
                                                                    x1586)|]))
                                   (Ojs.get_prop_ascii
                                      (this_to_js Obj.magic x1582)
                                      "oncomplete")
                             let (set_oncomplete :
                               'tags this ->
                                 (this:t -> ev:Event.t -> any) or_null ->
                                   unit)
                               =
                               fun (x1587 : 'tags this) ->
                                 fun
                                   (x1588 :
                                     (this:t -> ev:Event.t -> any) or_null)
                                   ->
                                   Ojs.set_prop_ascii
                                     (this_to_js Obj.magic x1587)
                                     "oncomplete"
                                     (or_null_to_js
                                        (fun
                                           (x1589 :
                                             this:t -> ev:Event.t -> any)
                                           ->
                                           Ojs.fun_to_js 2
                                             (fun (x1590 : Ojs.t) ->
                                                fun (x1591 : Ojs.t) ->
                                                  any_to_js
                                                    (x1589
                                                       ~this:(t_of_js x1590)
                                                       ~ev:(Event.t_of_js
                                                              x1591)))) x1588)
                             let (get_onerror :
                               'tags this ->
                                 (this:t -> ev:Event.t -> any) or_null)
                               =
                               fun (x1593 : 'tags this) ->
                                 or_null_of_js
                                   (fun (x1595 : Ojs.t) ->
                                      fun ~this:(x1596 : t) ->
                                        fun ~ev:(x1597 : Event.t) ->
                                          any_of_js
                                            (Ojs.apply x1595
                                               [|(t_to_js x1596);(Event.t_to_js
                                                                    x1597)|]))
                                   (Ojs.get_prop_ascii
                                      (this_to_js Obj.magic x1593) "onerror")
                             let (set_onerror :
                               'tags this ->
                                 (this:t -> ev:Event.t -> any) or_null ->
                                   unit)
                               =
                               fun (x1598 : 'tags this) ->
                                 fun
                                   (x1599 :
                                     (this:t -> ev:Event.t -> any) or_null)
                                   ->
                                   Ojs.set_prop_ascii
                                     (this_to_js Obj.magic x1598) "onerror"
                                     (or_null_to_js
                                        (fun
                                           (x1600 :
                                             this:t -> ev:Event.t -> any)
                                           ->
                                           Ojs.fun_to_js 2
                                             (fun (x1601 : Ojs.t) ->
                                                fun (x1602 : Ojs.t) ->
                                                  any_to_js
                                                    (x1600
                                                       ~this:(t_of_js x1601)
                                                       ~ev:(Event.t_of_js
                                                              x1602)))) x1599)
                             let (abort : 'tags this -> unit) =
                               fun (x1604 : 'tags this) ->
                                 ignore
                                   (Ojs.call (this_to_js Obj.magic x1604)
                                      "abort" [||])
                             let (commit : 'tags this -> unit) =
                               fun (x1606 : 'tags this) ->
                                 ignore
                                   (Ojs.call (this_to_js Obj.magic x1606)
                                      "commit" [||])
                             let (objectStore :
                               'tags this -> name:string -> IDBObjectStore.t)
                               =
                               fun (x1609 : 'tags this) ->
                                 fun ~name:(x1608 : string) ->
                                   IDBObjectStore.t_of_js
                                     (Ojs.call (this_to_js Obj.magic x1609)
                                        "objectStore"
                                        [|(Ojs.string_to_js x1608)|])
                             let (addEventListener :
                               'tags this ->
                                 type_:'K ->
                                   listener:(this:t -> ev:any -> any) ->
                                     ?options:AddEventListenerOptions.t
                                       or_boolean -> unit -> unit)
                               =
                               fun (x1619 : 'tags this) ->
                                 fun ~type_:(x1611 : 'K) ->
                                   fun
                                     ~listener:(x1612 :
                                                 this:t -> ev:any -> any)
                                     ->
                                     fun
                                       ?options:(x1613 :
                                                  AddEventListenerOptions.t
                                                    or_boolean option)
                                       ->
                                       fun () ->
                                         ignore
                                           (let x1621 =
                                              this_to_js Obj.magic x1619 in
                                            Ojs.call
                                              (Ojs.get_prop_ascii x1621
                                                 "addEventListener") "apply"
                                              [|x1621;((let x1614 =
                                                          Ojs.new_obj
                                                            (Ojs.get_prop_ascii
                                                               Ojs.global
                                                               "Array") 
                                                            [||] in
                                                        ignore
                                                          (Ojs.call x1614
                                                             "push"
                                                             [|(Obj.magic
                                                                  x1611)|]);
                                                        ignore
                                                          (Ojs.call x1614
                                                             "push"
                                                             [|(Ojs.fun_to_js
                                                                  2
                                                                  (fun
                                                                    (x1617 :
                                                                    Ojs.t) ->
                                                                    fun
                                                                    (x1618 :
                                                                    Ojs.t) ->
                                                                    any_to_js
                                                                    (x1612
                                                                    ~this:(
                                                                    t_of_js
                                                                    x1617)
                                                                    ~ev:(
                                                                    any_of_js
                                                                    x1618))))|]);
                                                        (match x1613 with
                                                         | Some x1615 ->
                                                             ignore
                                                               (Ojs.call
                                                                  x1614
                                                                  "push"
                                                                  [|(
                                                                    or_boolean_to_js
                                                                    AddEventListenerOptions.t_to_js
                                                                    x1615)|])
                                                         | None -> ());
                                                        x1614))|])
                             let (addEventListener' :
                               'tags this ->
                                 type_:string ->
                                   listener:EventListenerOrEventListenerObject.t
                                     ->
                                     ?options:AddEventListenerOptions.t
                                       or_boolean -> unit -> unit)
                               =
                               fun (x1628 : 'tags this) ->
                                 fun ~type_:(x1622 : string) ->
                                   fun
                                     ~listener:(x1623 :
                                                 EventListenerOrEventListenerObject.t)
                                     ->
                                     fun
                                       ?options:(x1624 :
                                                  AddEventListenerOptions.t
                                                    or_boolean option)
                                       ->
                                       fun () ->
                                         ignore
                                           (let x1630 =
                                              this_to_js Obj.magic x1628 in
                                            Ojs.call
                                              (Ojs.get_prop_ascii x1630
                                                 "addEventListener") "apply"
                                              [|x1630;((let x1625 =
                                                          Ojs.new_obj
                                                            (Ojs.get_prop_ascii
                                                               Ojs.global
                                                               "Array") 
                                                            [||] in
                                                        ignore
                                                          (Ojs.call x1625
                                                             "push"
                                                             [|(Ojs.string_to_js
                                                                  x1622)|]);
                                                        ignore
                                                          (Ojs.call x1625
                                                             "push"
                                                             [|(EventListenerOrEventListenerObject.t_to_js
                                                                  x1623)|]);
                                                        (match x1624 with
                                                         | Some x1626 ->
                                                             ignore
                                                               (Ojs.call
                                                                  x1625
                                                                  "push"
                                                                  [|(
                                                                    or_boolean_to_js
                                                                    AddEventListenerOptions.t_to_js
                                                                    x1626)|])
                                                         | None -> ());
                                                        x1625))|])
                             let (removeEventListener :
                               'tags this ->
                                 type_:'K ->
                                   listener:(this:t -> ev:any -> any) ->
                                     ?options:EventListenerOptions.t
                                       or_boolean -> unit -> unit)
                               =
                               fun (x1639 : 'tags this) ->
                                 fun ~type_:(x1631 : 'K) ->
                                   fun
                                     ~listener:(x1632 :
                                                 this:t -> ev:any -> any)
                                     ->
                                     fun
                                       ?options:(x1633 :
                                                  EventListenerOptions.t
                                                    or_boolean option)
                                       ->
                                       fun () ->
                                         ignore
                                           (let x1641 =
                                              this_to_js Obj.magic x1639 in
                                            Ojs.call
                                              (Ojs.get_prop_ascii x1641
                                                 "removeEventListener")
                                              "apply"
                                              [|x1641;((let x1634 =
                                                          Ojs.new_obj
                                                            (Ojs.get_prop_ascii
                                                               Ojs.global
                                                               "Array") 
                                                            [||] in
                                                        ignore
                                                          (Ojs.call x1634
                                                             "push"
                                                             [|(Obj.magic
                                                                  x1631)|]);
                                                        ignore
                                                          (Ojs.call x1634
                                                             "push"
                                                             [|(Ojs.fun_to_js
                                                                  2
                                                                  (fun
                                                                    (x1637 :
                                                                    Ojs.t) ->
                                                                    fun
                                                                    (x1638 :
                                                                    Ojs.t) ->
                                                                    any_to_js
                                                                    (x1632
                                                                    ~this:(
                                                                    t_of_js
                                                                    x1637)
                                                                    ~ev:(
                                                                    any_of_js
                                                                    x1638))))|]);
                                                        (match x1633 with
                                                         | Some x1635 ->
                                                             ignore
                                                               (Ojs.call
                                                                  x1634
                                                                  "push"
                                                                  [|(
                                                                    or_boolean_to_js
                                                                    EventListenerOptions.t_to_js
                                                                    x1635)|])
                                                         | None -> ());
                                                        x1634))|])
                             let (removeEventListener' :
                               'tags this ->
                                 type_:string ->
                                   listener:EventListenerOrEventListenerObject.t
                                     ->
                                     ?options:EventListenerOptions.t
                                       or_boolean -> unit -> unit)
                               =
                               fun (x1648 : 'tags this) ->
                                 fun ~type_:(x1642 : string) ->
                                   fun
                                     ~listener:(x1643 :
                                                 EventListenerOrEventListenerObject.t)
                                     ->
                                     fun
                                       ?options:(x1644 :
                                                  EventListenerOptions.t
                                                    or_boolean option)
                                       ->
                                       fun () ->
                                         ignore
                                           (let x1650 =
                                              this_to_js Obj.magic x1648 in
                                            Ojs.call
                                              (Ojs.get_prop_ascii x1650
                                                 "removeEventListener")
                                              "apply"
                                              [|x1650;((let x1645 =
                                                          Ojs.new_obj
                                                            (Ojs.get_prop_ascii
                                                               Ojs.global
                                                               "Array") 
                                                            [||] in
                                                        ignore
                                                          (Ojs.call x1645
                                                             "push"
                                                             [|(Ojs.string_to_js
                                                                  x1642)|]);
                                                        ignore
                                                          (Ojs.call x1645
                                                             "push"
                                                             [|(EventListenerOrEventListenerObject.t_to_js
                                                                  x1643)|]);
                                                        (match x1644 with
                                                         | Some x1646 ->
                                                             ignore
                                                               (Ojs.call
                                                                  x1645
                                                                  "push"
                                                                  [|(
                                                                    or_boolean_to_js
                                                                    EventListenerOptions.t_to_js
                                                                    x1646)|])
                                                         | None -> ());
                                                        x1645))|])
                             let cast_from = Obj.magic
                             let (prototype : unit -> t) =
                               fun () ->
                                 t_of_js
                                   (Ojs.get_prop_ascii
                                      (Ojs.get_prop_ascii Ojs.global
                                         "IDBTransaction") "prototype")
                             let (create : unit -> t) =
                               fun () ->
                                 t_of_js
                                   (Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global
                                         "IDBTransaction") [||])
                           end
module IDBOpenDBRequest =
  struct
    type t =
      [ `EventTarget  | `IDBOpenDBRequest  | `IDBRequest of IDBDatabase.t ]
        intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1652 : Ojs.t) -> t_of_js x1652
    and t_0_to_js : t_0 -> Ojs.t = fun (x1651 : t) -> t_to_js x1651
    type tags =
      [ `EventTarget  | `IDBOpenDBRequest  | `IDBRequest of IDBDatabase.t ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `IDBOpenDBRequest ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1655 : Ojs.t) -> intf_of_js __tags_of_js x1655
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1653 : __tags intf) -> intf_to_js __tags_to_js x1653
    let (get_onblocked : 'tags this -> (this:t -> ev:Event.t -> any) or_null)
      =
      fun (x1657 : 'tags this) ->
        or_null_of_js
          (fun (x1659 : Ojs.t) ->
             fun ~this:(x1660 : t) ->
               fun ~ev:(x1661 : Event.t) ->
                 any_of_js
                   (Ojs.apply x1659 [|(t_to_js x1660);(Event.t_to_js x1661)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1657) "onblocked")
    let (set_onblocked :
      'tags this -> (this:t -> ev:Event.t -> any) or_null -> unit) =
      fun (x1662 : 'tags this) ->
        fun (x1663 : (this:t -> ev:Event.t -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1662) "onblocked"
            (or_null_to_js
               (fun (x1664 : this:t -> ev:Event.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x1665 : Ojs.t) ->
                       fun (x1666 : Ojs.t) ->
                         any_to_js
                           (x1664 ~this:(t_of_js x1665)
                              ~ev:(Event.t_of_js x1666)))) x1663)
    let (get_onupgradeneeded :
      'tags this -> (this:t -> ev:IDBVersionChangeEvent.t -> any) or_null) =
      fun (x1668 : 'tags this) ->
        or_null_of_js
          (fun (x1670 : Ojs.t) ->
             fun ~this:(x1671 : t) ->
               fun ~ev:(x1672 : IDBVersionChangeEvent.t) ->
                 any_of_js
                   (Ojs.apply x1670
                      [|(t_to_js x1671);(IDBVersionChangeEvent.t_to_js x1672)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1668) "onupgradeneeded")
    let (set_onupgradeneeded :
      'tags this ->
        (this:t -> ev:IDBVersionChangeEvent.t -> any) or_null -> unit)
      =
      fun (x1673 : 'tags this) ->
        fun (x1674 : (this:t -> ev:IDBVersionChangeEvent.t -> any) or_null)
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1673) "onupgradeneeded"
            (or_null_to_js
               (fun (x1675 : this:t -> ev:IDBVersionChangeEvent.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x1676 : Ojs.t) ->
                       fun (x1677 : Ojs.t) ->
                         any_to_js
                           (x1675 ~this:(t_of_js x1676)
                              ~ev:(IDBVersionChangeEvent.t_of_js x1677))))
               x1674)
    let (addEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x1687 : 'tags this) ->
        fun ~type_:(x1679 : 'K) ->
          fun ~listener:(x1680 : this:t -> ev:any -> any) ->
            fun
              ?options:(x1681 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x1689 = this_to_js Obj.magic x1687 in
                   Ojs.call (Ojs.get_prop_ascii x1689 "addEventListener")
                     "apply"
                     [|x1689;((let x1682 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1682 "push" [|(Obj.magic x1679)|]);
                               ignore
                                 (Ojs.call x1682 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x1685 : Ojs.t) ->
                                            fun (x1686 : Ojs.t) ->
                                              any_to_js
                                                (x1680 ~this:(t_of_js x1685)
                                                   ~ev:(any_of_js x1686))))|]);
                               (match x1681 with
                                | Some x1683 ->
                                    ignore
                                      (Ojs.call x1682 "push"
                                         [|(or_boolean_to_js
                                              AddEventListenerOptions.t_to_js
                                              x1683)|])
                                | None -> ());
                               x1682))|])
    let (addEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x1696 : 'tags this) ->
        fun ~type_:(x1690 : string) ->
          fun ~listener:(x1691 : EventListenerOrEventListenerObject.t) ->
            fun
              ?options:(x1692 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x1698 = this_to_js Obj.magic x1696 in
                   Ojs.call (Ojs.get_prop_ascii x1698 "addEventListener")
                     "apply"
                     [|x1698;((let x1693 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1693 "push"
                                    [|(Ojs.string_to_js x1690)|]);
                               ignore
                                 (Ojs.call x1693 "push"
                                    [|(EventListenerOrEventListenerObject.t_to_js
                                         x1691)|]);
                               (match x1692 with
                                | Some x1694 ->
                                    ignore
                                      (Ojs.call x1693 "push"
                                         [|(or_boolean_to_js
                                              AddEventListenerOptions.t_to_js
                                              x1694)|])
                                | None -> ());
                               x1693))|])
    let (removeEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x1707 : 'tags this) ->
        fun ~type_:(x1699 : 'K) ->
          fun ~listener:(x1700 : this:t -> ev:any -> any) ->
            fun ?options:(x1701 : EventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x1709 = this_to_js Obj.magic x1707 in
                   Ojs.call (Ojs.get_prop_ascii x1709 "removeEventListener")
                     "apply"
                     [|x1709;((let x1702 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1702 "push" [|(Obj.magic x1699)|]);
                               ignore
                                 (Ojs.call x1702 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x1705 : Ojs.t) ->
                                            fun (x1706 : Ojs.t) ->
                                              any_to_js
                                                (x1700 ~this:(t_of_js x1705)
                                                   ~ev:(any_of_js x1706))))|]);
                               (match x1701 with
                                | Some x1703 ->
                                    ignore
                                      (Ojs.call x1702 "push"
                                         [|(or_boolean_to_js
                                              EventListenerOptions.t_to_js
                                              x1703)|])
                                | None -> ());
                               x1702))|])
    let (removeEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x1716 : 'tags this) ->
        fun ~type_:(x1710 : string) ->
          fun ~listener:(x1711 : EventListenerOrEventListenerObject.t) ->
            fun ?options:(x1712 : EventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x1718 = this_to_js Obj.magic x1716 in
                   Ojs.call (Ojs.get_prop_ascii x1718 "removeEventListener")
                     "apply"
                     [|x1718;((let x1713 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1713 "push"
                                    [|(Ojs.string_to_js x1710)|]);
                               ignore
                                 (Ojs.call x1713 "push"
                                    [|(EventListenerOrEventListenerObject.t_to_js
                                         x1711)|]);
                               (match x1712 with
                                | Some x1714 ->
                                    ignore
                                      (Ojs.call x1713 "push"
                                         [|(or_boolean_to_js
                                              EventListenerOptions.t_to_js
                                              x1714)|])
                                | None -> ());
                               x1713))|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "IDBOpenDBRequest") "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "IDBOpenDBRequest")
             [||])
  end
module IDBDatabaseInfo =
  struct
    type t = [ `IDBDatabaseInfo ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1720 : Ojs.t) -> t_of_js x1720
    and t_0_to_js : t_0 -> Ojs.t = fun (x1719 : t) -> t_to_js x1719
    type tags = [ `IDBDatabaseInfo ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `IDBDatabaseInfo ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1723 : Ojs.t) -> intf_of_js __tags_of_js x1723
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1721 : __tags intf) -> intf_to_js __tags_to_js x1721
    let (get_name : 'tags this -> string) =
      fun (x1725 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1725) "name")
    let (set_name : 'tags this -> string -> unit) =
      fun (x1727 : 'tags this) ->
        fun (x1728 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1727) "name"
            (Ojs.string_to_js x1728)
    let (get_version : 'tags this -> float) =
      fun (x1730 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1730) "version")
    let (set_version : 'tags this -> float -> unit) =
      fun (x1732 : 'tags this) ->
        fun (x1733 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1732) "version"
            (Ojs.float_to_js x1733)
    let cast_from = Obj.magic
  end
module IndexedDBStatic =
  struct
    let (cmp : first:any -> second:any -> float) =
      fun ~first:(x1735 : any) ->
        fun ~second:(x1736 : any) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "indexedDB") "cmp"
               [|(any_to_js x1735);(any_to_js x1736)|])
    let (databases : unit -> IDBDatabaseInfo.t list Promise.t_1) =
      fun () ->
        Promise.t_1_of_js
          (fun (x1737 : Ojs.t) ->
             Ojs.list_of_js IDBDatabaseInfo.t_of_js x1737)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "indexedDB") "databases"
             [||])
    let (deleteDatabase : string -> IDBOpenDBRequest.t) =
      fun (x1739 : string) ->
        IDBOpenDBRequest.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "indexedDB")
             "deleteDatabase" [|(Ojs.string_to_js x1739)|])
    let (open_ : name:string -> ?version:float -> unit -> IDBOpenDBRequest.t)
      =
      fun ~name:(x1740 : string) ->
        fun ?version:(x1741 : float option) ->
          fun () ->
            IDBOpenDBRequest.t_of_js
              (let x1744 = Ojs.get_prop_ascii Ojs.global "indexedDB" in
               Ojs.call (Ojs.get_prop_ascii x1744 "open") "apply"
                 [|x1744;((let x1742 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x1742 "push"
                                [|(Ojs.string_to_js x1740)|]);
                           (match x1741 with
                            | Some x1743 ->
                                ignore
                                  (Ojs.call x1742 "push"
                                     [|(Ojs.float_to_js x1743)|])
                            | None -> ());
                           x1742))|])
  end
module FontFaceSetLoadStatus =
  struct
    type t = [ `L_s100_loaded  | `L_s102_loading ]
    let rec t_of_js : Ojs.t -> t =
      fun (x1746 : Ojs.t) ->
        let x1747 = x1746 in
        match Ojs.string_of_js x1747 with
        | "loaded" -> `L_s100_loaded
        | "loading" -> `L_s102_loading
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun (x1745 : [ `L_s100_loaded  | `L_s102_loading ]) ->
        match x1745 with
        | `L_s100_loaded -> Ojs.string_to_js "loaded"
        | `L_s102_loading -> Ojs.string_to_js "loading"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1749 : Ojs.t) -> t_of_js x1749
    and t_0_to_js : t_0 -> Ojs.t = fun (x1748 : t) -> t_to_js x1748
  end
module FontFaceLoadStatus =
  struct
    type t =
      [ `L_s100_loaded  | `L_s102_loading  | `L_s197_unloaded 
      | `L_s67_error ]
    let rec t_of_js : Ojs.t -> t =
      fun (x1751 : Ojs.t) ->
        let x1752 = x1751 in
        match Ojs.string_of_js x1752 with
        | "loaded" -> `L_s100_loaded
        | "loading" -> `L_s102_loading
        | "unloaded" -> `L_s197_unloaded
        | "error" -> `L_s67_error
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun
        (x1750 :
          [ `L_s100_loaded  | `L_s102_loading  | `L_s197_unloaded 
          | `L_s67_error ])
        ->
        match x1750 with
        | `L_s100_loaded -> Ojs.string_to_js "loaded"
        | `L_s102_loading -> Ojs.string_to_js "loading"
        | `L_s197_unloaded -> Ojs.string_to_js "unloaded"
        | `L_s67_error -> Ojs.string_to_js "error"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1754 : Ojs.t) -> t_of_js x1754
    and t_0_to_js : t_0 -> Ojs.t = fun (x1753 : t) -> t_to_js x1753
  end
module FontFaceDescriptors =
  struct
    type t = [ `FontFaceDescriptors ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1756 : Ojs.t) -> t_of_js x1756
    and t_0_to_js : t_0 -> Ojs.t = fun (x1755 : t) -> t_to_js x1755
    type tags = [ `FontFaceDescriptors ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `FontFaceDescriptors ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1759 : Ojs.t) -> intf_of_js __tags_of_js x1759
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1757 : __tags intf) -> intf_to_js __tags_to_js x1757
    let (get_display : 'tags this -> string) =
      fun (x1761 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1761) "display")
    let (set_display : 'tags this -> string -> unit) =
      fun (x1763 : 'tags this) ->
        fun (x1764 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1763) "display"
            (Ojs.string_to_js x1764)
    let (get_featureSettings : 'tags this -> string) =
      fun (x1766 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1766) "featureSettings")
    let (set_featureSettings : 'tags this -> string -> unit) =
      fun (x1768 : 'tags this) ->
        fun (x1769 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1768) "featureSettings"
            (Ojs.string_to_js x1769)
    let (get_stretch : 'tags this -> string) =
      fun (x1771 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1771) "stretch")
    let (set_stretch : 'tags this -> string -> unit) =
      fun (x1773 : 'tags this) ->
        fun (x1774 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1773) "stretch"
            (Ojs.string_to_js x1774)
    let (get_style : 'tags this -> string) =
      fun (x1776 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1776) "style")
    let (set_style : 'tags this -> string -> unit) =
      fun (x1778 : 'tags this) ->
        fun (x1779 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1778) "style"
            (Ojs.string_to_js x1779)
    let (get_unicodeRange : 'tags this -> string) =
      fun (x1781 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1781) "unicodeRange")
    let (set_unicodeRange : 'tags this -> string -> unit) =
      fun (x1783 : 'tags this) ->
        fun (x1784 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1783) "unicodeRange"
            (Ojs.string_to_js x1784)
    let (get_variant : 'tags this -> string) =
      fun (x1786 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1786) "variant")
    let (set_variant : 'tags this -> string -> unit) =
      fun (x1788 : 'tags this) ->
        fun (x1789 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1788) "variant"
            (Ojs.string_to_js x1789)
    let (get_weight : 'tags this -> string) =
      fun (x1791 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1791) "weight")
    let (set_weight : 'tags this -> string -> unit) =
      fun (x1793 : 'tags this) ->
        fun (x1794 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1793) "weight"
            (Ojs.string_to_js x1794)
    let cast_from = Obj.magic
  end
module BinaryData =
  struct
    type t = never
    let rec t_of_js : Ojs.t -> t = fun (x1797 : Ojs.t) -> never_of_js x1797
    and t_to_js : t -> Ojs.t = fun (x1796 : never) -> never_to_js x1796
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1799 : Ojs.t) -> t_of_js x1799
    and t_0_to_js : t_0 -> Ojs.t = fun (x1798 : t) -> t_to_js x1798
  end
module FontFace =
  struct
    type t = [ `FontFace ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1801 : Ojs.t) -> t_of_js x1801
    and t_0_to_js : t_0 -> Ojs.t = fun (x1800 : t) -> t_to_js x1800
    type tags = [ `FontFace ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `FontFace ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1804 : Ojs.t) -> intf_of_js __tags_of_js x1804
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1802 : __tags intf) -> intf_to_js __tags_to_js x1802
    let (get_ascentOverride : 'tags this -> string) =
      fun (x1806 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1806) "ascentOverride")
    let (set_ascentOverride : 'tags this -> string -> unit) =
      fun (x1808 : 'tags this) ->
        fun (x1809 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1808) "ascentOverride"
            (Ojs.string_to_js x1809)
    let (get_descentOverride : 'tags this -> string) =
      fun (x1811 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1811) "descentOverride")
    let (set_descentOverride : 'tags this -> string -> unit) =
      fun (x1813 : 'tags this) ->
        fun (x1814 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1813) "descentOverride"
            (Ojs.string_to_js x1814)
    let (get_display : 'tags this -> string) =
      fun (x1816 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1816) "display")
    let (set_display : 'tags this -> string -> unit) =
      fun (x1818 : 'tags this) ->
        fun (x1819 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1818) "display"
            (Ojs.string_to_js x1819)
    let (get_family : 'tags this -> string) =
      fun (x1821 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1821) "family")
    let (set_family : 'tags this -> string -> unit) =
      fun (x1823 : 'tags this) ->
        fun (x1824 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1823) "family"
            (Ojs.string_to_js x1824)
    let (get_featureSettings : 'tags this -> string) =
      fun (x1826 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1826) "featureSettings")
    let (set_featureSettings : 'tags this -> string -> unit) =
      fun (x1828 : 'tags this) ->
        fun (x1829 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1828) "featureSettings"
            (Ojs.string_to_js x1829)
    let (get_lineGapOverride : 'tags this -> string) =
      fun (x1831 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1831) "lineGapOverride")
    let (set_lineGapOverride : 'tags this -> string -> unit) =
      fun (x1833 : 'tags this) ->
        fun (x1834 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1833) "lineGapOverride"
            (Ojs.string_to_js x1834)
    let (get_loaded : 'tags this -> t Promise.t_1) =
      fun (x1836 : 'tags this) ->
        Promise.t_1_of_js t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1836) "loaded")
    let (get_status : 'tags this -> FontFaceLoadStatus.t) =
      fun (x1839 : 'tags this) ->
        FontFaceLoadStatus.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1839) "status")
    let (get_stretch : 'tags this -> string) =
      fun (x1841 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1841) "stretch")
    let (set_stretch : 'tags this -> string -> unit) =
      fun (x1843 : 'tags this) ->
        fun (x1844 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1843) "stretch"
            (Ojs.string_to_js x1844)
    let (get_style : 'tags this -> string) =
      fun (x1846 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1846) "style")
    let (set_style : 'tags this -> string -> unit) =
      fun (x1848 : 'tags this) ->
        fun (x1849 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1848) "style"
            (Ojs.string_to_js x1849)
    let (get_unicodeRange : 'tags this -> string) =
      fun (x1851 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1851) "unicodeRange")
    let (set_unicodeRange : 'tags this -> string -> unit) =
      fun (x1853 : 'tags this) ->
        fun (x1854 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1853) "unicodeRange"
            (Ojs.string_to_js x1854)
    let (get_variant : 'tags this -> string) =
      fun (x1856 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1856) "variant")
    let (set_variant : 'tags this -> string -> unit) =
      fun (x1858 : 'tags this) ->
        fun (x1859 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1858) "variant"
            (Ojs.string_to_js x1859)
    let (get_variationSettings : 'tags this -> string) =
      fun (x1861 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1861)
             "variationSettings")
    let (set_variationSettings : 'tags this -> string -> unit) =
      fun (x1863 : 'tags this) ->
        fun (x1864 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1863) "variationSettings"
            (Ojs.string_to_js x1864)
    let (get_weight : 'tags this -> string) =
      fun (x1866 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1866) "weight")
    let (set_weight : 'tags this -> string -> unit) =
      fun (x1868 : 'tags this) ->
        fun (x1869 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1868) "weight"
            (Ojs.string_to_js x1869)
    let (load : 'tags this -> t Promise.t_1) =
      fun (x1871 : 'tags this) ->
        Promise.t_1_of_js t_of_js
          (Ojs.call (this_to_js Obj.magic x1871) "load" [||])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "FontFace")
             "prototype")
    let (create :
      family:string ->
        source:BinaryData.t or_string ->
          ?descriptors:FontFaceDescriptors.t -> unit -> t)
      =
      fun ~family:(x1874 : string) ->
        fun ~source:(x1875 : BinaryData.t or_string) ->
          fun ?descriptors:(x1876 : FontFaceDescriptors.t option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "FontFace")
                   (let x1877 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x1877 "push" [|(Ojs.string_to_js x1874)|]);
                    ignore
                      (Ojs.call x1877 "push"
                         [|(or_string_to_js BinaryData.t_to_js x1875)|]);
                    (match x1876 with
                     | Some x1878 ->
                         ignore
                           (Ojs.call x1877 "push"
                              [|(FontFaceDescriptors.t_to_js x1878)|])
                     | None -> ());
                    x1877))
  end
module FontFaceSet =
  struct
    type t = [ `EventTarget  | `FontFaceSet ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1881 : Ojs.t) -> t_of_js x1881
    and t_0_to_js : t_0 -> Ojs.t = fun (x1880 : t) -> t_to_js x1880
    type tags = [ `EventTarget  | `FontFaceSet ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `FontFaceSet ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1884 : Ojs.t) -> intf_of_js __tags_of_js x1884
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1882 : __tags intf) -> intf_to_js __tags_to_js x1882
    let (get_onloading : 'tags this -> (this:t -> ev:Event.t -> any) or_null)
      =
      fun (x1886 : 'tags this) ->
        or_null_of_js
          (fun (x1888 : Ojs.t) ->
             fun ~this:(x1889 : t) ->
               fun ~ev:(x1890 : Event.t) ->
                 any_of_js
                   (Ojs.apply x1888 [|(t_to_js x1889);(Event.t_to_js x1890)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1886) "onloading")
    let (set_onloading :
      'tags this -> (this:t -> ev:Event.t -> any) or_null -> unit) =
      fun (x1891 : 'tags this) ->
        fun (x1892 : (this:t -> ev:Event.t -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1891) "onloading"
            (or_null_to_js
               (fun (x1893 : this:t -> ev:Event.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x1894 : Ojs.t) ->
                       fun (x1895 : Ojs.t) ->
                         any_to_js
                           (x1893 ~this:(t_of_js x1894)
                              ~ev:(Event.t_of_js x1895)))) x1892)
    let (get_onloadingdone :
      'tags this -> (this:t -> ev:Event.t -> any) or_null) =
      fun (x1897 : 'tags this) ->
        or_null_of_js
          (fun (x1899 : Ojs.t) ->
             fun ~this:(x1900 : t) ->
               fun ~ev:(x1901 : Event.t) ->
                 any_of_js
                   (Ojs.apply x1899 [|(t_to_js x1900);(Event.t_to_js x1901)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1897) "onloadingdone")
    let (set_onloadingdone :
      'tags this -> (this:t -> ev:Event.t -> any) or_null -> unit) =
      fun (x1902 : 'tags this) ->
        fun (x1903 : (this:t -> ev:Event.t -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1902) "onloadingdone"
            (or_null_to_js
               (fun (x1904 : this:t -> ev:Event.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x1905 : Ojs.t) ->
                       fun (x1906 : Ojs.t) ->
                         any_to_js
                           (x1904 ~this:(t_of_js x1905)
                              ~ev:(Event.t_of_js x1906)))) x1903)
    let (get_onloadingerror :
      'tags this -> (this:t -> ev:Event.t -> any) or_null) =
      fun (x1908 : 'tags this) ->
        or_null_of_js
          (fun (x1910 : Ojs.t) ->
             fun ~this:(x1911 : t) ->
               fun ~ev:(x1912 : Event.t) ->
                 any_of_js
                   (Ojs.apply x1910 [|(t_to_js x1911);(Event.t_to_js x1912)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1908) "onloadingerror")
    let (set_onloadingerror :
      'tags this -> (this:t -> ev:Event.t -> any) or_null -> unit) =
      fun (x1913 : 'tags this) ->
        fun (x1914 : (this:t -> ev:Event.t -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1913) "onloadingerror"
            (or_null_to_js
               (fun (x1915 : this:t -> ev:Event.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x1916 : Ojs.t) ->
                       fun (x1917 : Ojs.t) ->
                         any_to_js
                           (x1915 ~this:(t_of_js x1916)
                              ~ev:(Event.t_of_js x1917)))) x1914)
    let (get_ready : 'tags this -> t Promise.t_1) =
      fun (x1919 : 'tags this) ->
        Promise.t_1_of_js t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1919) "ready")
    let (get_status : 'tags this -> FontFaceSetLoadStatus.t) =
      fun (x1922 : 'tags this) ->
        FontFaceSetLoadStatus.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1922) "status")
    let (check : 'tags this -> font:string -> ?text:string -> unit -> bool) =
      fun (x1928 : 'tags this) ->
        fun ~font:(x1924 : string) ->
          fun ?text:(x1925 : string option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1930 = this_to_js Obj.magic x1928 in
                 Ojs.call (Ojs.get_prop_ascii x1930 "check") "apply"
                   [|x1930;((let x1926 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1926 "push"
                                  [|(Ojs.string_to_js x1924)|]);
                             (match x1925 with
                              | Some x1927 ->
                                  ignore
                                    (Ojs.call x1926 "push"
                                       [|(Ojs.string_to_js x1927)|])
                              | None -> ());
                             x1926))|])
    let (load :
      'tags this ->
        font:string -> ?text:string -> unit -> FontFace.t list Promise.t_1)
      =
      fun (x1935 : 'tags this) ->
        fun ~font:(x1931 : string) ->
          fun ?text:(x1932 : string option) ->
            fun () ->
              Promise.t_1_of_js
                (fun (x1938 : Ojs.t) -> Ojs.list_of_js FontFace.t_of_js x1938)
                (let x1937 = this_to_js Obj.magic x1935 in
                 Ojs.call (Ojs.get_prop_ascii x1937 "load") "apply"
                   [|x1937;((let x1933 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1933 "push"
                                  [|(Ojs.string_to_js x1931)|]);
                             (match x1932 with
                              | Some x1934 ->
                                  ignore
                                    (Ojs.call x1933 "push"
                                       [|(Ojs.string_to_js x1934)|])
                              | None -> ());
                             x1933))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:FontFace.t -> key:FontFace.t -> parent:t -> unit)
          -> ?thisArg:any -> unit -> unit)
      =
      fun (x1947 : 'tags this) ->
        fun
          ~callbackfn:(x1940 :
                        value:FontFace.t ->
                          key:FontFace.t -> parent:t -> unit)
          ->
          fun ?thisArg:(x1941 : any option) ->
            fun () ->
              ignore
                (let x1949 = this_to_js Obj.magic x1947 in
                 Ojs.call (Ojs.get_prop_ascii x1949 "forEach") "apply"
                   [|x1949;((let x1942 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1942 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1944 : Ojs.t) ->
                                          fun (x1945 : Ojs.t) ->
                                            fun (x1946 : Ojs.t) ->
                                              x1940
                                                ~value:(FontFace.t_of_js
                                                          x1944)
                                                ~key:(FontFace.t_of_js x1945)
                                                ~parent:(t_of_js x1946)))|]);
                             (match x1941 with
                              | Some x1943 ->
                                  ignore
                                    (Ojs.call x1942 "push"
                                       [|(any_to_js x1943)|])
                              | None -> ());
                             x1942))|])
    let (addEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x1958 : 'tags this) ->
        fun ~type_:(x1950 : 'K) ->
          fun ~listener:(x1951 : this:t -> ev:any -> any) ->
            fun
              ?options:(x1952 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x1960 = this_to_js Obj.magic x1958 in
                   Ojs.call (Ojs.get_prop_ascii x1960 "addEventListener")
                     "apply"
                     [|x1960;((let x1953 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1953 "push" [|(Obj.magic x1950)|]);
                               ignore
                                 (Ojs.call x1953 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x1956 : Ojs.t) ->
                                            fun (x1957 : Ojs.t) ->
                                              any_to_js
                                                (x1951 ~this:(t_of_js x1956)
                                                   ~ev:(any_of_js x1957))))|]);
                               (match x1952 with
                                | Some x1954 ->
                                    ignore
                                      (Ojs.call x1953 "push"
                                         [|(or_boolean_to_js
                                              AddEventListenerOptions.t_to_js
                                              x1954)|])
                                | None -> ());
                               x1953))|])
    let (addEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x1967 : 'tags this) ->
        fun ~type_:(x1961 : string) ->
          fun ~listener:(x1962 : EventListenerOrEventListenerObject.t) ->
            fun
              ?options:(x1963 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x1969 = this_to_js Obj.magic x1967 in
                   Ojs.call (Ojs.get_prop_ascii x1969 "addEventListener")
                     "apply"
                     [|x1969;((let x1964 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1964 "push"
                                    [|(Ojs.string_to_js x1961)|]);
                               ignore
                                 (Ojs.call x1964 "push"
                                    [|(EventListenerOrEventListenerObject.t_to_js
                                         x1962)|]);
                               (match x1963 with
                                | Some x1965 ->
                                    ignore
                                      (Ojs.call x1964 "push"
                                         [|(or_boolean_to_js
                                              AddEventListenerOptions.t_to_js
                                              x1965)|])
                                | None -> ());
                               x1964))|])
    let (removeEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x1978 : 'tags this) ->
        fun ~type_:(x1970 : 'K) ->
          fun ~listener:(x1971 : this:t -> ev:any -> any) ->
            fun ?options:(x1972 : EventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x1980 = this_to_js Obj.magic x1978 in
                   Ojs.call (Ojs.get_prop_ascii x1980 "removeEventListener")
                     "apply"
                     [|x1980;((let x1973 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1973 "push" [|(Obj.magic x1970)|]);
                               ignore
                                 (Ojs.call x1973 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x1976 : Ojs.t) ->
                                            fun (x1977 : Ojs.t) ->
                                              any_to_js
                                                (x1971 ~this:(t_of_js x1976)
                                                   ~ev:(any_of_js x1977))))|]);
                               (match x1972 with
                                | Some x1974 ->
                                    ignore
                                      (Ojs.call x1973 "push"
                                         [|(or_boolean_to_js
                                              EventListenerOptions.t_to_js
                                              x1974)|])
                                | None -> ());
                               x1973))|])
    let (removeEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x1987 : 'tags this) ->
        fun ~type_:(x1981 : string) ->
          fun ~listener:(x1982 : EventListenerOrEventListenerObject.t) ->
            fun ?options:(x1983 : EventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x1989 = this_to_js Obj.magic x1987 in
                   Ojs.call (Ojs.get_prop_ascii x1989 "removeEventListener")
                     "apply"
                     [|x1989;((let x1984 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1984 "push"
                                    [|(Ojs.string_to_js x1981)|]);
                               ignore
                                 (Ojs.call x1984 "push"
                                    [|(EventListenerOrEventListenerObject.t_to_js
                                         x1982)|]);
                               (match x1983 with
                                | Some x1985 ->
                                    ignore
                                      (Ojs.call x1984 "push"
                                         [|(or_boolean_to_js
                                              EventListenerOptions.t_to_js
                                              x1985)|])
                                | None -> ());
                               x1984))|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "FontFaceSet")
             "prototype")
    let (create : FontFace.t list -> t) =
      fun (x1990 : FontFace.t list) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FontFaceSet")
             [|(Ojs.list_to_js FontFace.t_to_js x1990)|])
  end
module FontsStatic =
  struct
    let (onloading :
      unit -> (this:FontFaceSet.t -> ev:Event.t -> any) or_null) =
      fun () ->
        or_null_of_js
          (fun (x1992 : Ojs.t) ->
             fun ~this:(x1993 : FontFaceSet.t) ->
               fun ~ev:(x1994 : Event.t) ->
                 any_of_js
                   (Ojs.apply x1992
                      [|(FontFaceSet.t_to_js x1993);(Event.t_to_js x1994)|]))
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fonts")
             "onloading")
    let (onloadingdone :
      unit -> (this:FontFaceSet.t -> ev:Event.t -> any) or_null) =
      fun () ->
        or_null_of_js
          (fun (x1995 : Ojs.t) ->
             fun ~this:(x1996 : FontFaceSet.t) ->
               fun ~ev:(x1997 : Event.t) ->
                 any_of_js
                   (Ojs.apply x1995
                      [|(FontFaceSet.t_to_js x1996);(Event.t_to_js x1997)|]))
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fonts")
             "onloadingdone")
    let (onloadingerror :
      unit -> (this:FontFaceSet.t -> ev:Event.t -> any) or_null) =
      fun () ->
        or_null_of_js
          (fun (x1998 : Ojs.t) ->
             fun ~this:(x1999 : FontFaceSet.t) ->
               fun ~ev:(x2000 : Event.t) ->
                 any_of_js
                   (Ojs.apply x1998
                      [|(FontFaceSet.t_to_js x1999);(Event.t_to_js x2000)|]))
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fonts")
             "onloadingerror")
    let (ready : unit -> FontFaceSet.t Promise.t_1) =
      fun () ->
        Promise.t_1_of_js FontFaceSet.t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fonts") "ready")
    let (status : unit -> FontFaceSetLoadStatus.t) =
      fun () ->
        FontFaceSetLoadStatus.t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "fonts")
             "status")
    let (check : font:string -> ?text:string -> unit -> bool) =
      fun ~font:(x2002 : string) ->
        fun ?text:(x2003 : string option) ->
          fun () ->
            Ojs.bool_of_js
              (let x2006 = Ojs.get_prop_ascii Ojs.global "fonts" in
               Ojs.call (Ojs.get_prop_ascii x2006 "check") "apply"
                 [|x2006;((let x2004 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x2004 "push"
                                [|(Ojs.string_to_js x2002)|]);
                           (match x2003 with
                            | Some x2005 ->
                                ignore
                                  (Ojs.call x2004 "push"
                                     [|(Ojs.string_to_js x2005)|])
                            | None -> ());
                           x2004))|])
    let (load :
      font:string -> ?text:string -> unit -> FontFace.t list Promise.t_1) =
      fun ~font:(x2007 : string) ->
        fun ?text:(x2008 : string option) ->
          fun () ->
            Promise.t_1_of_js
              (fun (x2012 : Ojs.t) -> Ojs.list_of_js FontFace.t_of_js x2012)
              (let x2011 = Ojs.get_prop_ascii Ojs.global "fonts" in
               Ojs.call (Ojs.get_prop_ascii x2011 "load") "apply"
                 [|x2011;((let x2009 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x2009 "push"
                                [|(Ojs.string_to_js x2007)|]);
                           (match x2008 with
                            | Some x2010 ->
                                ignore
                                  (Ojs.call x2009 "push"
                                     [|(Ojs.string_to_js x2010)|])
                            | None -> ());
                           x2009))|])
    let (forEach :
      callbackfn:(value:FontFace.t ->
                    key:FontFace.t -> parent:FontFaceSet.t -> unit)
        -> ?thisArg:any -> unit -> unit)
      =
      fun
        ~callbackfn:(x2014 :
                      value:FontFace.t ->
                        key:FontFace.t -> parent:FontFaceSet.t -> unit)
        ->
        fun ?thisArg:(x2015 : any option) ->
          fun () ->
            ignore
              (let x2021 = Ojs.get_prop_ascii Ojs.global "fonts" in
               Ojs.call (Ojs.get_prop_ascii x2021 "forEach") "apply"
                 [|x2021;((let x2016 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x2016 "push"
                                [|(Ojs.fun_to_js 3
                                     (fun (x2018 : Ojs.t) ->
                                        fun (x2019 : Ojs.t) ->
                                          fun (x2020 : Ojs.t) ->
                                            x2014
                                              ~value:(FontFace.t_of_js x2018)
                                              ~key:(FontFace.t_of_js x2019)
                                              ~parent:(FontFaceSet.t_of_js
                                                         x2020)))|]);
                           (match x2015 with
                            | Some x2017 ->
                                ignore
                                  (Ojs.call x2016 "push"
                                     [|(any_to_js x2017)|])
                            | None -> ());
                           x2016))|])
    let (addEventListener :
      type_:'K ->
        listener:(this:FontFaceSet.t -> ev:any -> any) ->
          ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun ~type_:(x2022 : 'K) ->
        fun ~listener:(x2023 : this:FontFaceSet.t -> ev:any -> any) ->
          fun ?options:(x2024 : AddEventListenerOptions.t or_boolean option)
            ->
            fun () ->
              ignore
                (let x2030 = Ojs.get_prop_ascii Ojs.global "fonts" in
                 Ojs.call (Ojs.get_prop_ascii x2030 "addEventListener")
                   "apply"
                   [|x2030;((let x2025 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2025 "push" [|(Obj.magic x2022)|]);
                             ignore
                               (Ojs.call x2025 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x2028 : Ojs.t) ->
                                          fun (x2029 : Ojs.t) ->
                                            any_to_js
                                              (x2023
                                                 ~this:(FontFaceSet.t_of_js
                                                          x2028)
                                                 ~ev:(any_of_js x2029))))|]);
                             (match x2024 with
                              | Some x2026 ->
                                  ignore
                                    (Ojs.call x2025 "push"
                                       [|(or_boolean_to_js
                                            AddEventListenerOptions.t_to_js
                                            x2026)|])
                              | None -> ());
                             x2025))|])
    let (addEventListener' :
      type_:string ->
        listener:EventListenerOrEventListenerObject.t ->
          ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun ~type_:(x2031 : string) ->
        fun ~listener:(x2032 : EventListenerOrEventListenerObject.t) ->
          fun ?options:(x2033 : AddEventListenerOptions.t or_boolean option)
            ->
            fun () ->
              ignore
                (let x2037 = Ojs.get_prop_ascii Ojs.global "fonts" in
                 Ojs.call (Ojs.get_prop_ascii x2037 "addEventListener")
                   "apply"
                   [|x2037;((let x2034 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2034 "push"
                                  [|(Ojs.string_to_js x2031)|]);
                             ignore
                               (Ojs.call x2034 "push"
                                  [|(EventListenerOrEventListenerObject.t_to_js
                                       x2032)|]);
                             (match x2033 with
                              | Some x2035 ->
                                  ignore
                                    (Ojs.call x2034 "push"
                                       [|(or_boolean_to_js
                                            AddEventListenerOptions.t_to_js
                                            x2035)|])
                              | None -> ());
                             x2034))|])
    let (removeEventListener :
      type_:'K ->
        listener:(this:FontFaceSet.t -> ev:any -> any) ->
          ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun ~type_:(x2038 : 'K) ->
        fun ~listener:(x2039 : this:FontFaceSet.t -> ev:any -> any) ->
          fun ?options:(x2040 : EventListenerOptions.t or_boolean option) ->
            fun () ->
              ignore
                (let x2046 = Ojs.get_prop_ascii Ojs.global "fonts" in
                 Ojs.call (Ojs.get_prop_ascii x2046 "removeEventListener")
                   "apply"
                   [|x2046;((let x2041 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2041 "push" [|(Obj.magic x2038)|]);
                             ignore
                               (Ojs.call x2041 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x2044 : Ojs.t) ->
                                          fun (x2045 : Ojs.t) ->
                                            any_to_js
                                              (x2039
                                                 ~this:(FontFaceSet.t_of_js
                                                          x2044)
                                                 ~ev:(any_of_js x2045))))|]);
                             (match x2040 with
                              | Some x2042 ->
                                  ignore
                                    (Ojs.call x2041 "push"
                                       [|(or_boolean_to_js
                                            EventListenerOptions.t_to_js
                                            x2042)|])
                              | None -> ());
                             x2041))|])
    let (removeEventListener' :
      type_:string ->
        listener:EventListenerOrEventListenerObject.t ->
          ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun ~type_:(x2047 : string) ->
        fun ~listener:(x2048 : EventListenerOrEventListenerObject.t) ->
          fun ?options:(x2049 : EventListenerOptions.t or_boolean option) ->
            fun () ->
              ignore
                (let x2053 = Ojs.get_prop_ascii Ojs.global "fonts" in
                 Ojs.call (Ojs.get_prop_ascii x2053 "removeEventListener")
                   "apply"
                   [|x2053;((let x2050 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2050 "push"
                                  [|(Ojs.string_to_js x2047)|]);
                             ignore
                               (Ojs.call x2050 "push"
                                  [|(EventListenerOrEventListenerObject.t_to_js
                                       x2048)|]);
                             (match x2049 with
                              | Some x2051 ->
                                  ignore
                                    (Ojs.call x2050 "push"
                                       [|(or_boolean_to_js
                                            EventListenerOptions.t_to_js
                                            x2051)|])
                              | None -> ());
                             x2050))|])
  end
module Algorithm =
  struct
    type t = [ `Algorithm ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2055 : Ojs.t) -> t_of_js x2055
    and t_0_to_js : t_0 -> Ojs.t = fun (x2054 : t) -> t_to_js x2054
    type tags = [ `Algorithm ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Algorithm ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x2058 : Ojs.t) -> intf_of_js __tags_of_js x2058
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x2056 : __tags intf) -> intf_to_js __tags_to_js x2056
    let (get_name : 'tags this -> string) =
      fun (x2060 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2060) "name")
    let (set_name : 'tags this -> string -> unit) =
      fun (x2062 : 'tags this) ->
        fun (x2063 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2062) "name"
            (Ojs.string_to_js x2063)
    let cast_from = Obj.magic
  end
module RsaPssParams =
  struct
    type t = [ `Algorithm  | `RsaPssParams ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2066 : Ojs.t) -> t_of_js x2066
    and t_0_to_js : t_0 -> Ojs.t = fun (x2065 : t) -> t_to_js x2065
    type tags = [ `Algorithm  | `RsaPssParams ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RsaPssParams ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x2069 : Ojs.t) -> intf_of_js __tags_of_js x2069
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x2067 : __tags intf) -> intf_to_js __tags_to_js x2067
    let (get_saltLength : 'tags this -> float) =
      fun (x2071 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2071) "saltLength")
    let (set_saltLength : 'tags this -> float -> unit) =
      fun (x2073 : 'tags this) ->
        fun (x2074 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2073) "saltLength"
            (Ojs.float_to_js x2074)
    let cast_from = Obj.magic
  end
module RsaOaepParams =
  struct
    type t = [ `Algorithm  | `RsaOaepParams ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2077 : Ojs.t) -> t_of_js x2077
    and t_0_to_js : t_0 -> Ojs.t = fun (x2076 : t) -> t_to_js x2076
    type tags = [ `Algorithm  | `RsaOaepParams ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RsaOaepParams ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x2080 : Ojs.t) -> intf_of_js __tags_of_js x2080
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x2078 : __tags intf) -> intf_to_js __tags_to_js x2078
    let (get_label : 'tags this -> BufferSource.t) =
      fun (x2082 : 'tags this) ->
        BufferSource.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2082) "label")
    let (set_label : 'tags this -> BufferSource.t -> unit) =
      fun (x2084 : 'tags this) ->
        fun (x2085 : BufferSource.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2084) "label"
            (BufferSource.t_to_js x2085)
    let cast_from = Obj.magic
  end
module BigInteger =
  struct
    type t = Uint8Array.t_0
    let rec t_of_js : Ojs.t -> t =
      fun (x2088 : Ojs.t) -> Uint8Array.t_0_of_js x2088
    and t_to_js : t -> Ojs.t =
      fun (x2087 : Uint8Array.t_0) -> Uint8Array.t_0_to_js x2087
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2090 : Ojs.t) -> t_of_js x2090
    and t_0_to_js : t_0 -> Ojs.t = fun (x2089 : t) -> t_to_js x2089
  end
module RsaKeyGenParams =
  struct
    type t = [ `Algorithm  | `RsaKeyGenParams ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2092 : Ojs.t) -> t_of_js x2092
    and t_0_to_js : t_0 -> Ojs.t = fun (x2091 : t) -> t_to_js x2091
    type tags = [ `Algorithm  | `RsaKeyGenParams ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RsaKeyGenParams ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x2095 : Ojs.t) -> intf_of_js __tags_of_js x2095
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x2093 : __tags intf) -> intf_to_js __tags_to_js x2093
    let (get_modulusLength : 'tags this -> float) =
      fun (x2097 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2097) "modulusLength")
    let (set_modulusLength : 'tags this -> float -> unit) =
      fun (x2099 : 'tags this) ->
        fun (x2100 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2099) "modulusLength"
            (Ojs.float_to_js x2100)
    let (get_publicExponent : 'tags this -> BigInteger.t) =
      fun (x2102 : 'tags this) ->
        BigInteger.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2102) "publicExponent")
    let (set_publicExponent : 'tags this -> BigInteger.t -> unit) =
      fun (x2104 : 'tags this) ->
        fun (x2105 : BigInteger.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2104) "publicExponent"
            (BigInteger.t_to_js x2105)
    let cast_from = Obj.magic
  end
module AlgorithmIdentifier =
  struct
    type t = Algorithm.t or_string
    let rec t_of_js : Ojs.t -> t =
      fun (x2109 : Ojs.t) -> or_string_of_js Algorithm.t_of_js x2109
    and t_to_js : t -> Ojs.t =
      fun (x2107 : Algorithm.t or_string) ->
        or_string_to_js Algorithm.t_to_js x2107
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2112 : Ojs.t) -> t_of_js x2112
    and t_0_to_js : t_0 -> Ojs.t = fun (x2111 : t) -> t_to_js x2111
  end
module HashAlgorithmIdentifier =
  struct
    type t = AlgorithmIdentifier.t
    let rec t_of_js : Ojs.t -> t =
      fun (x2114 : Ojs.t) -> AlgorithmIdentifier.t_of_js x2114
    and t_to_js : t -> Ojs.t =
      fun (x2113 : AlgorithmIdentifier.t) ->
        AlgorithmIdentifier.t_to_js x2113
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2116 : Ojs.t) -> t_of_js x2116
    and t_0_to_js : t_0 -> Ojs.t = fun (x2115 : t) -> t_to_js x2115
  end
module RsaHashedKeyGenParams =
  struct
    type t =
      [ `Algorithm  | `RsaHashedKeyGenParams  | `RsaKeyGenParams ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2118 : Ojs.t) -> t_of_js x2118
    and t_0_to_js : t_0 -> Ojs.t = fun (x2117 : t) -> t_to_js x2117
    type tags = [ `Algorithm  | `RsaHashedKeyGenParams  | `RsaKeyGenParams ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `RsaHashedKeyGenParams ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x2121 : Ojs.t) -> intf_of_js __tags_of_js x2121
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x2119 : __tags intf) -> intf_to_js __tags_to_js x2119
    let (get_hash : 'tags this -> HashAlgorithmIdentifier.t) =
      fun (x2123 : 'tags this) ->
        HashAlgorithmIdentifier.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2123) "hash")
    let (set_hash : 'tags this -> HashAlgorithmIdentifier.t -> unit) =
      fun (x2125 : 'tags this) ->
        fun (x2126 : HashAlgorithmIdentifier.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2125) "hash"
            (HashAlgorithmIdentifier.t_to_js x2126)
    let cast_from = Obj.magic
  end
module RsaHashedImportParams =
  struct
    type t = [ `Algorithm  | `RsaHashedImportParams ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2129 : Ojs.t) -> t_of_js x2129
    and t_0_to_js : t_0 -> Ojs.t = fun (x2128 : t) -> t_to_js x2128
    type tags = [ `Algorithm  | `RsaHashedImportParams ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `RsaHashedImportParams ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x2132 : Ojs.t) -> intf_of_js __tags_of_js x2132
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x2130 : __tags intf) -> intf_to_js __tags_to_js x2130
    let (get_hash : 'tags this -> HashAlgorithmIdentifier.t) =
      fun (x2134 : 'tags this) ->
        HashAlgorithmIdentifier.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2134) "hash")
    let (set_hash : 'tags this -> HashAlgorithmIdentifier.t -> unit) =
      fun (x2136 : 'tags this) ->
        fun (x2137 : HashAlgorithmIdentifier.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2136) "hash"
            (HashAlgorithmIdentifier.t_to_js x2137)
    let cast_from = Obj.magic
  end
module Pbkdf2Params =
  struct
    type t = [ `Algorithm  | `Pbkdf2Params ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2140 : Ojs.t) -> t_of_js x2140
    and t_0_to_js : t_0 -> Ojs.t = fun (x2139 : t) -> t_to_js x2139
    type tags = [ `Algorithm  | `Pbkdf2Params ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Pbkdf2Params ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x2143 : Ojs.t) -> intf_of_js __tags_of_js x2143
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x2141 : __tags intf) -> intf_to_js __tags_to_js x2141
    let (get_hash : 'tags this -> HashAlgorithmIdentifier.t) =
      fun (x2145 : 'tags this) ->
        HashAlgorithmIdentifier.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2145) "hash")
    let (set_hash : 'tags this -> HashAlgorithmIdentifier.t -> unit) =
      fun (x2147 : 'tags this) ->
        fun (x2148 : HashAlgorithmIdentifier.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2147) "hash"
            (HashAlgorithmIdentifier.t_to_js x2148)
    let (get_iterations : 'tags this -> float) =
      fun (x2150 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2150) "iterations")
    let (set_iterations : 'tags this -> float -> unit) =
      fun (x2152 : 'tags this) ->
        fun (x2153 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2152) "iterations"
            (Ojs.float_to_js x2153)
    let (get_salt : 'tags this -> BufferSource.t) =
      fun (x2155 : 'tags this) ->
        BufferSource.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2155) "salt")
    let (set_salt : 'tags this -> BufferSource.t -> unit) =
      fun (x2157 : 'tags this) ->
        fun (x2158 : BufferSource.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2157) "salt"
            (BufferSource.t_to_js x2158)
    let cast_from = Obj.magic
  end
module KeyFormat =
  struct
    type t = [ `L_s150_pkcs8  | `L_s160_raw  | `L_s182_spki  | `L_s97_jwk ]
    let rec t_of_js : Ojs.t -> t =
      fun (x2161 : Ojs.t) ->
        let x2162 = x2161 in
        match Ojs.string_of_js x2162 with
        | "pkcs8" -> `L_s150_pkcs8
        | "raw" -> `L_s160_raw
        | "spki" -> `L_s182_spki
        | "jwk" -> `L_s97_jwk
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun
        (x2160 :
          [ `L_s150_pkcs8  | `L_s160_raw  | `L_s182_spki  | `L_s97_jwk ])
        ->
        match x2160 with
        | `L_s150_pkcs8 -> Ojs.string_to_js "pkcs8"
        | `L_s160_raw -> Ojs.string_to_js "raw"
        | `L_s182_spki -> Ojs.string_to_js "spki"
        | `L_s97_jwk -> Ojs.string_to_js "jwk"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2164 : Ojs.t) -> t_of_js x2164
    and t_0_to_js : t_0 -> Ojs.t = fun (x2163 : t) -> t_to_js x2163
  end
module RsaOtherPrimesInfo =
  struct
    type t = [ `RsaOtherPrimesInfo ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2166 : Ojs.t) -> t_of_js x2166
    and t_0_to_js : t_0 -> Ojs.t = fun (x2165 : t) -> t_to_js x2165
    type tags = [ `RsaOtherPrimesInfo ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RsaOtherPrimesInfo ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x2169 : Ojs.t) -> intf_of_js __tags_of_js x2169
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x2167 : __tags intf) -> intf_to_js __tags_to_js x2167
    let (get_d : 'tags this -> string) =
      fun (x2171 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2171) "d")
    let (set_d : 'tags this -> string -> unit) =
      fun (x2173 : 'tags this) ->
        fun (x2174 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2173) "d"
            (Ojs.string_to_js x2174)
    let (get_r : 'tags this -> string) =
      fun (x2176 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2176) "r")
    let (set_r : 'tags this -> string -> unit) =
      fun (x2178 : 'tags this) ->
        fun (x2179 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2178) "r"
            (Ojs.string_to_js x2179)
    let (get_t : 'tags this -> string) =
      fun (x2181 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2181) "t")
    let (set_t : 'tags this -> string -> unit) =
      fun (x2183 : 'tags this) ->
        fun (x2184 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2183) "t"
            (Ojs.string_to_js x2184)
    let cast_from = Obj.magic
  end
module JsonWebKey =
  struct
    type t = [ `JsonWebKey ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2187 : Ojs.t) -> t_of_js x2187
    and t_0_to_js : t_0 -> Ojs.t = fun (x2186 : t) -> t_to_js x2186
    type tags = [ `JsonWebKey ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `JsonWebKey ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x2190 : Ojs.t) -> intf_of_js __tags_of_js x2190
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x2188 : __tags intf) -> intf_to_js __tags_to_js x2188
    let (get_alg : 'tags this -> string) =
      fun (x2192 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2192) "alg")
    let (set_alg : 'tags this -> string -> unit) =
      fun (x2194 : 'tags this) ->
        fun (x2195 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2194) "alg"
            (Ojs.string_to_js x2195)
    let (get_crv : 'tags this -> string) =
      fun (x2197 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2197) "crv")
    let (set_crv : 'tags this -> string -> unit) =
      fun (x2199 : 'tags this) ->
        fun (x2200 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2199) "crv"
            (Ojs.string_to_js x2200)
    let (get_d : 'tags this -> string) =
      fun (x2202 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2202) "d")
    let (set_d : 'tags this -> string -> unit) =
      fun (x2204 : 'tags this) ->
        fun (x2205 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2204) "d"
            (Ojs.string_to_js x2205)
    let (get_dp : 'tags this -> string) =
      fun (x2207 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2207) "dp")
    let (set_dp : 'tags this -> string -> unit) =
      fun (x2209 : 'tags this) ->
        fun (x2210 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2209) "dp"
            (Ojs.string_to_js x2210)
    let (get_dq : 'tags this -> string) =
      fun (x2212 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2212) "dq")
    let (set_dq : 'tags this -> string -> unit) =
      fun (x2214 : 'tags this) ->
        fun (x2215 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2214) "dq"
            (Ojs.string_to_js x2215)
    let (get_e : 'tags this -> string) =
      fun (x2217 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2217) "e")
    let (set_e : 'tags this -> string -> unit) =
      fun (x2219 : 'tags this) ->
        fun (x2220 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2219) "e"
            (Ojs.string_to_js x2220)
    let (get_ext : 'tags this -> bool) =
      fun (x2222 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2222) "ext")
    let (set_ext : 'tags this -> bool -> unit) =
      fun (x2224 : 'tags this) ->
        fun (x2225 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2224) "ext"
            (Ojs.bool_to_js x2225)
    let (get_k : 'tags this -> string) =
      fun (x2227 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2227) "k")
    let (set_k : 'tags this -> string -> unit) =
      fun (x2229 : 'tags this) ->
        fun (x2230 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2229) "k"
            (Ojs.string_to_js x2230)
    let (get_key_ops : 'tags this -> string list) =
      fun (x2232 : 'tags this) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2232) "key_ops")
    let (set_key_ops : 'tags this -> string list -> unit) =
      fun (x2235 : 'tags this) ->
        fun (x2236 : string list) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2235) "key_ops"
            (Ojs.list_to_js Ojs.string_to_js x2236)
    let (get_kty : 'tags this -> string) =
      fun (x2239 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2239) "kty")
    let (set_kty : 'tags this -> string -> unit) =
      fun (x2241 : 'tags this) ->
        fun (x2242 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2241) "kty"
            (Ojs.string_to_js x2242)
    let (get_n : 'tags this -> string) =
      fun (x2244 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2244) "n")
    let (set_n : 'tags this -> string -> unit) =
      fun (x2246 : 'tags this) ->
        fun (x2247 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2246) "n"
            (Ojs.string_to_js x2247)
    let (get_oth : 'tags this -> RsaOtherPrimesInfo.t list) =
      fun (x2249 : 'tags this) ->
        Ojs.list_of_js RsaOtherPrimesInfo.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2249) "oth")
    let (set_oth : 'tags this -> RsaOtherPrimesInfo.t list -> unit) =
      fun (x2252 : 'tags this) ->
        fun (x2253 : RsaOtherPrimesInfo.t list) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2252) "oth"
            (Ojs.list_to_js RsaOtherPrimesInfo.t_to_js x2253)
    let (get_p : 'tags this -> string) =
      fun (x2256 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2256) "p")
    let (set_p : 'tags this -> string -> unit) =
      fun (x2258 : 'tags this) ->
        fun (x2259 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2258) "p"
            (Ojs.string_to_js x2259)
    let (get_q : 'tags this -> string) =
      fun (x2261 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2261) "q")
    let (set_q : 'tags this -> string -> unit) =
      fun (x2263 : 'tags this) ->
        fun (x2264 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2263) "q"
            (Ojs.string_to_js x2264)
    let (get_qi : 'tags this -> string) =
      fun (x2266 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2266) "qi")
    let (set_qi : 'tags this -> string -> unit) =
      fun (x2268 : 'tags this) ->
        fun (x2269 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2268) "qi"
            (Ojs.string_to_js x2269)
    let (get_use : 'tags this -> string) =
      fun (x2271 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2271) "use")
    let (set_use : 'tags this -> string -> unit) =
      fun (x2273 : 'tags this) ->
        fun (x2274 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2273) "use"
            (Ojs.string_to_js x2274)
    let (get_x : 'tags this -> string) =
      fun (x2276 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2276) "x")
    let (set_x : 'tags this -> string -> unit) =
      fun (x2278 : 'tags this) ->
        fun (x2279 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2278) "x"
            (Ojs.string_to_js x2279)
    let (get_y : 'tags this -> string) =
      fun (x2281 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2281) "y")
    let (set_y : 'tags this -> string -> unit) =
      fun (x2283 : 'tags this) ->
        fun (x2284 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2283) "y"
            (Ojs.string_to_js x2284)
    let cast_from = Obj.magic
  end
module HmacKeyGenParams =
  struct
    type t = [ `Algorithm  | `HmacKeyGenParams ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2287 : Ojs.t) -> t_of_js x2287
    and t_0_to_js : t_0 -> Ojs.t = fun (x2286 : t) -> t_to_js x2286
    type tags = [ `Algorithm  | `HmacKeyGenParams ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `HmacKeyGenParams ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x2290 : Ojs.t) -> intf_of_js __tags_of_js x2290
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x2288 : __tags intf) -> intf_to_js __tags_to_js x2288
    let (get_hash : 'tags this -> HashAlgorithmIdentifier.t) =
      fun (x2292 : 'tags this) ->
        HashAlgorithmIdentifier.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2292) "hash")
    let (set_hash : 'tags this -> HashAlgorithmIdentifier.t -> unit) =
      fun (x2294 : 'tags this) ->
        fun (x2295 : HashAlgorithmIdentifier.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2294) "hash"
            (HashAlgorithmIdentifier.t_to_js x2295)
    let (get_length : 'tags this -> float) =
      fun (x2297 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2297) "length")
    let (set_length : 'tags this -> float -> unit) =
      fun (x2299 : 'tags this) ->
        fun (x2300 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2299) "length"
            (Ojs.float_to_js x2300)
    let cast_from = Obj.magic
  end
module HmacImportParams =
  struct
    type t = [ `Algorithm  | `HmacImportParams ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2303 : Ojs.t) -> t_of_js x2303
    and t_0_to_js : t_0 -> Ojs.t = fun (x2302 : t) -> t_to_js x2302
    type tags = [ `Algorithm  | `HmacImportParams ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `HmacImportParams ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x2306 : Ojs.t) -> intf_of_js __tags_of_js x2306
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x2304 : __tags intf) -> intf_to_js __tags_to_js x2304
    let (get_hash : 'tags this -> HashAlgorithmIdentifier.t) =
      fun (x2308 : 'tags this) ->
        HashAlgorithmIdentifier.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2308) "hash")
    let (set_hash : 'tags this -> HashAlgorithmIdentifier.t -> unit) =
      fun (x2310 : 'tags this) ->
        fun (x2311 : HashAlgorithmIdentifier.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2310) "hash"
            (HashAlgorithmIdentifier.t_to_js x2311)
    let (get_length : 'tags this -> float) =
      fun (x2313 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2313) "length")
    let (set_length : 'tags this -> float -> unit) =
      fun (x2315 : 'tags this) ->
        fun (x2316 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2315) "length"
            (Ojs.float_to_js x2316)
    let cast_from = Obj.magic
  end
module HkdfParams =
  struct
    type t = [ `Algorithm  | `HkdfParams ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2319 : Ojs.t) -> t_of_js x2319
    and t_0_to_js : t_0 -> Ojs.t = fun (x2318 : t) -> t_to_js x2318
    type tags = [ `Algorithm  | `HkdfParams ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `HkdfParams ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x2322 : Ojs.t) -> intf_of_js __tags_of_js x2322
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x2320 : __tags intf) -> intf_to_js __tags_to_js x2320
    let (get_hash : 'tags this -> HashAlgorithmIdentifier.t) =
      fun (x2324 : 'tags this) ->
        HashAlgorithmIdentifier.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2324) "hash")
    let (set_hash : 'tags this -> HashAlgorithmIdentifier.t -> unit) =
      fun (x2326 : 'tags this) ->
        fun (x2327 : HashAlgorithmIdentifier.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2326) "hash"
            (HashAlgorithmIdentifier.t_to_js x2327)
    let (get_info : 'tags this -> BufferSource.t) =
      fun (x2329 : 'tags this) ->
        BufferSource.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2329) "info")
    let (set_info : 'tags this -> BufferSource.t -> unit) =
      fun (x2331 : 'tags this) ->
        fun (x2332 : BufferSource.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2331) "info"
            (BufferSource.t_to_js x2332)
    let (get_salt : 'tags this -> BufferSource.t) =
      fun (x2334 : 'tags this) ->
        BufferSource.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2334) "salt")
    let (set_salt : 'tags this -> BufferSource.t -> unit) =
      fun (x2336 : 'tags this) ->
        fun (x2337 : BufferSource.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2336) "salt"
            (BufferSource.t_to_js x2337)
    let cast_from = Obj.magic
  end
module EcdsaParams =
  struct
    type t = [ `Algorithm  | `EcdsaParams ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2340 : Ojs.t) -> t_of_js x2340
    and t_0_to_js : t_0 -> Ojs.t = fun (x2339 : t) -> t_to_js x2339
    type tags = [ `Algorithm  | `EcdsaParams ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `EcdsaParams ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x2343 : Ojs.t) -> intf_of_js __tags_of_js x2343
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x2341 : __tags intf) -> intf_to_js __tags_to_js x2341
    let (get_hash : 'tags this -> HashAlgorithmIdentifier.t) =
      fun (x2345 : 'tags this) ->
        HashAlgorithmIdentifier.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2345) "hash")
    let (set_hash : 'tags this -> HashAlgorithmIdentifier.t -> unit) =
      fun (x2347 : 'tags this) ->
        fun (x2348 : HashAlgorithmIdentifier.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2347) "hash"
            (HashAlgorithmIdentifier.t_to_js x2348)
    let cast_from = Obj.magic
  end
module KeyUsage =
  struct
    type t =
      [ `L_s178_sign  | `L_s199_unwrapKey  | `L_s202_verify 
      | `L_s210_wrapKey  | `L_s56_decrypt  | `L_s59_deriveBits 
      | `L_s60_deriveKey  | `L_s65_encrypt ]
    let rec t_of_js : Ojs.t -> t =
      fun (x2351 : Ojs.t) ->
        let x2352 = x2351 in
        match Ojs.string_of_js x2352 with
        | "sign" -> `L_s178_sign
        | "unwrapKey" -> `L_s199_unwrapKey
        | "verify" -> `L_s202_verify
        | "wrapKey" -> `L_s210_wrapKey
        | "decrypt" -> `L_s56_decrypt
        | "deriveBits" -> `L_s59_deriveBits
        | "deriveKey" -> `L_s60_deriveKey
        | "encrypt" -> `L_s65_encrypt
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun
        (x2350 :
          [ `L_s178_sign  | `L_s199_unwrapKey  | `L_s202_verify 
          | `L_s210_wrapKey  | `L_s56_decrypt  | `L_s59_deriveBits 
          | `L_s60_deriveKey  | `L_s65_encrypt ])
        ->
        match x2350 with
        | `L_s178_sign -> Ojs.string_to_js "sign"
        | `L_s199_unwrapKey -> Ojs.string_to_js "unwrapKey"
        | `L_s202_verify -> Ojs.string_to_js "verify"
        | `L_s210_wrapKey -> Ojs.string_to_js "wrapKey"
        | `L_s56_decrypt -> Ojs.string_to_js "decrypt"
        | `L_s59_deriveBits -> Ojs.string_to_js "deriveBits"
        | `L_s60_deriveKey -> Ojs.string_to_js "deriveKey"
        | `L_s65_encrypt -> Ojs.string_to_js "encrypt"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2354 : Ojs.t) -> t_of_js x2354
    and t_0_to_js : t_0 -> Ojs.t = fun (x2353 : t) -> t_to_js x2353
  end
module KeyType =
  struct
    type t = [ `L_s155_private  | `L_s158_public  | `L_s175_secret ]
    let rec t_of_js : Ojs.t -> t =
      fun (x2356 : Ojs.t) ->
        let x2357 = x2356 in
        match Ojs.string_of_js x2357 with
        | "private" -> `L_s155_private
        | "public" -> `L_s158_public
        | "secret" -> `L_s175_secret
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun (x2355 : [ `L_s155_private  | `L_s158_public  | `L_s175_secret ])
        ->
        match x2355 with
        | `L_s155_private -> Ojs.string_to_js "private"
        | `L_s158_public -> Ojs.string_to_js "public"
        | `L_s175_secret -> Ojs.string_to_js "secret"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2359 : Ojs.t) -> t_of_js x2359
    and t_0_to_js : t_0 -> Ojs.t = fun (x2358 : t) -> t_to_js x2358
  end
module KeyAlgorithm =
  struct
    type t = [ `KeyAlgorithm ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2361 : Ojs.t) -> t_of_js x2361
    and t_0_to_js : t_0 -> Ojs.t = fun (x2360 : t) -> t_to_js x2360
    type tags = [ `KeyAlgorithm ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `KeyAlgorithm ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x2364 : Ojs.t) -> intf_of_js __tags_of_js x2364
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x2362 : __tags intf) -> intf_to_js __tags_to_js x2362
    let (get_name : 'tags this -> string) =
      fun (x2366 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2366) "name")
    let (set_name : 'tags this -> string -> unit) =
      fun (x2368 : 'tags this) ->
        fun (x2369 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2368) "name"
            (Ojs.string_to_js x2369)
    let cast_from = Obj.magic
  end
module CryptoKey =
  struct
    type t = [ `CryptoKey ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2372 : Ojs.t) -> t_of_js x2372
    and t_0_to_js : t_0 -> Ojs.t = fun (x2371 : t) -> t_to_js x2371
    type tags = [ `CryptoKey ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `CryptoKey ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x2375 : Ojs.t) -> intf_of_js __tags_of_js x2375
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x2373 : __tags intf) -> intf_to_js __tags_to_js x2373
    let (get_algorithm : 'tags this -> KeyAlgorithm.t) =
      fun (x2377 : 'tags this) ->
        KeyAlgorithm.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2377) "algorithm")
    let (get_extractable : 'tags this -> bool) =
      fun (x2379 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2379) "extractable")
    let (get_type : 'tags this -> KeyType.t) =
      fun (x2381 : 'tags this) ->
        KeyType.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2381) "type")
    let (get_usages : 'tags this -> KeyUsage.t list) =
      fun (x2383 : 'tags this) ->
        Ojs.list_of_js KeyUsage.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2383) "usages")
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "CryptoKey")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "CryptoKey") [||])
  end
module EcdhKeyDeriveParams =
  struct
    type t = [ `Algorithm  | `EcdhKeyDeriveParams ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2387 : Ojs.t) -> t_of_js x2387
    and t_0_to_js : t_0 -> Ojs.t = fun (x2386 : t) -> t_to_js x2386
    type tags = [ `Algorithm  | `EcdhKeyDeriveParams ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `EcdhKeyDeriveParams ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x2390 : Ojs.t) -> intf_of_js __tags_of_js x2390
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x2388 : __tags intf) -> intf_to_js __tags_to_js x2388
    let (get_public : 'tags this -> CryptoKey.t) =
      fun (x2392 : 'tags this) ->
        CryptoKey.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2392) "public")
    let (set_public : 'tags this -> CryptoKey.t -> unit) =
      fun (x2394 : 'tags this) ->
        fun (x2395 : CryptoKey.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2394) "public"
            (CryptoKey.t_to_js x2395)
    let cast_from = Obj.magic
  end
module NamedCurve =
  struct
    type t = string
    let rec t_of_js : Ojs.t -> t =
      fun (x2398 : Ojs.t) -> Ojs.string_of_js x2398
    and t_to_js : t -> Ojs.t = fun (x2397 : string) -> Ojs.string_to_js x2397
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2400 : Ojs.t) -> t_of_js x2400
    and t_0_to_js : t_0 -> Ojs.t = fun (x2399 : t) -> t_to_js x2399
  end
module EcKeyImportParams =
  struct
    type t = [ `Algorithm  | `EcKeyImportParams ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2402 : Ojs.t) -> t_of_js x2402
    and t_0_to_js : t_0 -> Ojs.t = fun (x2401 : t) -> t_to_js x2401
    type tags = [ `Algorithm  | `EcKeyImportParams ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `EcKeyImportParams ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x2405 : Ojs.t) -> intf_of_js __tags_of_js x2405
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x2403 : __tags intf) -> intf_to_js __tags_to_js x2403
    let (get_namedCurve : 'tags this -> NamedCurve.t) =
      fun (x2407 : 'tags this) ->
        NamedCurve.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2407) "namedCurve")
    let (set_namedCurve : 'tags this -> NamedCurve.t -> unit) =
      fun (x2409 : 'tags this) ->
        fun (x2410 : NamedCurve.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2409) "namedCurve"
            (NamedCurve.t_to_js x2410)
    let cast_from = Obj.magic
  end
module EcKeyGenParams =
  struct
    type t = [ `Algorithm  | `EcKeyGenParams ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2413 : Ojs.t) -> t_of_js x2413
    and t_0_to_js : t_0 -> Ojs.t = fun (x2412 : t) -> t_to_js x2412
    type tags = [ `Algorithm  | `EcKeyGenParams ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `EcKeyGenParams ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x2416 : Ojs.t) -> intf_of_js __tags_of_js x2416
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x2414 : __tags intf) -> intf_to_js __tags_to_js x2414
    let (get_namedCurve : 'tags this -> NamedCurve.t) =
      fun (x2418 : 'tags this) ->
        NamedCurve.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2418) "namedCurve")
    let (set_namedCurve : 'tags this -> NamedCurve.t -> unit) =
      fun (x2420 : 'tags this) ->
        fun (x2421 : NamedCurve.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2420) "namedCurve"
            (NamedCurve.t_to_js x2421)
    let cast_from = Obj.magic
  end
module CryptoKeyPair =
  struct
    type t = [ `CryptoKeyPair ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2424 : Ojs.t) -> t_of_js x2424
    and t_0_to_js : t_0 -> Ojs.t = fun (x2423 : t) -> t_to_js x2423
    type tags = [ `CryptoKeyPair ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `CryptoKeyPair ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x2427 : Ojs.t) -> intf_of_js __tags_of_js x2427
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x2425 : __tags intf) -> intf_to_js __tags_to_js x2425
    let (get_privateKey : 'tags this -> CryptoKey.t) =
      fun (x2429 : 'tags this) ->
        CryptoKey.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2429) "privateKey")
    let (set_privateKey : 'tags this -> CryptoKey.t -> unit) =
      fun (x2431 : 'tags this) ->
        fun (x2432 : CryptoKey.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2431) "privateKey"
            (CryptoKey.t_to_js x2432)
    let (get_publicKey : 'tags this -> CryptoKey.t) =
      fun (x2434 : 'tags this) ->
        CryptoKey.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2434) "publicKey")
    let (set_publicKey : 'tags this -> CryptoKey.t -> unit) =
      fun (x2436 : 'tags this) ->
        fun (x2437 : CryptoKey.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2436) "publicKey"
            (CryptoKey.t_to_js x2437)
    let cast_from = Obj.magic
  end
module AesKeyGenParams =
  struct
    type t = [ `AesKeyGenParams  | `Algorithm ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2440 : Ojs.t) -> t_of_js x2440
    and t_0_to_js : t_0 -> Ojs.t = fun (x2439 : t) -> t_to_js x2439
    type tags = [ `AesKeyGenParams  | `Algorithm ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `AesKeyGenParams ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x2443 : Ojs.t) -> intf_of_js __tags_of_js x2443
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x2441 : __tags intf) -> intf_to_js __tags_to_js x2441
    let (get_length : 'tags this -> float) =
      fun (x2445 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2445) "length")
    let (set_length : 'tags this -> float -> unit) =
      fun (x2447 : 'tags this) ->
        fun (x2448 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2447) "length"
            (Ojs.float_to_js x2448)
    let cast_from = Obj.magic
  end
module AesKeyAlgorithm =
  struct
    type t = [ `AesKeyAlgorithm  | `KeyAlgorithm ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2451 : Ojs.t) -> t_of_js x2451
    and t_0_to_js : t_0 -> Ojs.t = fun (x2450 : t) -> t_to_js x2450
    type tags = [ `AesKeyAlgorithm  | `KeyAlgorithm ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `AesKeyAlgorithm ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x2454 : Ojs.t) -> intf_of_js __tags_of_js x2454
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x2452 : __tags intf) -> intf_to_js __tags_to_js x2452
    let (get_length : 'tags this -> float) =
      fun (x2456 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2456) "length")
    let (set_length : 'tags this -> float -> unit) =
      fun (x2458 : 'tags this) ->
        fun (x2459 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2458) "length"
            (Ojs.float_to_js x2459)
    let cast_from = Obj.magic
  end
module AesGcmParams =
  struct
    type t = [ `AesGcmParams  | `Algorithm ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2462 : Ojs.t) -> t_of_js x2462
    and t_0_to_js : t_0 -> Ojs.t = fun (x2461 : t) -> t_to_js x2461
    type tags = [ `AesGcmParams  | `Algorithm ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `AesGcmParams ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x2465 : Ojs.t) -> intf_of_js __tags_of_js x2465
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x2463 : __tags intf) -> intf_to_js __tags_to_js x2463
    let (get_additionalData : 'tags this -> BufferSource.t) =
      fun (x2467 : 'tags this) ->
        BufferSource.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2467) "additionalData")
    let (set_additionalData : 'tags this -> BufferSource.t -> unit) =
      fun (x2469 : 'tags this) ->
        fun (x2470 : BufferSource.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2469) "additionalData"
            (BufferSource.t_to_js x2470)
    let (get_iv : 'tags this -> BufferSource.t) =
      fun (x2472 : 'tags this) ->
        BufferSource.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2472) "iv")
    let (set_iv : 'tags this -> BufferSource.t -> unit) =
      fun (x2474 : 'tags this) ->
        fun (x2475 : BufferSource.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2474) "iv"
            (BufferSource.t_to_js x2475)
    let (get_tagLength : 'tags this -> float) =
      fun (x2477 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2477) "tagLength")
    let (set_tagLength : 'tags this -> float -> unit) =
      fun (x2479 : 'tags this) ->
        fun (x2480 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2479) "tagLength"
            (Ojs.float_to_js x2480)
    let cast_from = Obj.magic
  end
module AesDerivedKeyParams =
  struct
    type t = [ `AesDerivedKeyParams  | `Algorithm ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2483 : Ojs.t) -> t_of_js x2483
    and t_0_to_js : t_0 -> Ojs.t = fun (x2482 : t) -> t_to_js x2482
    type tags = [ `AesDerivedKeyParams  | `Algorithm ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `AesDerivedKeyParams ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x2486 : Ojs.t) -> intf_of_js __tags_of_js x2486
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x2484 : __tags intf) -> intf_to_js __tags_to_js x2484
    let (get_length : 'tags this -> float) =
      fun (x2488 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2488) "length")
    let (set_length : 'tags this -> float -> unit) =
      fun (x2490 : 'tags this) ->
        fun (x2491 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2490) "length"
            (Ojs.float_to_js x2491)
    let cast_from = Obj.magic
  end
module AesCtrParams =
  struct
    type t = [ `AesCtrParams  | `Algorithm ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2494 : Ojs.t) -> t_of_js x2494
    and t_0_to_js : t_0 -> Ojs.t = fun (x2493 : t) -> t_to_js x2493
    type tags = [ `AesCtrParams  | `Algorithm ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `AesCtrParams ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x2497 : Ojs.t) -> intf_of_js __tags_of_js x2497
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x2495 : __tags intf) -> intf_to_js __tags_to_js x2495
    let (get_counter : 'tags this -> BufferSource.t) =
      fun (x2499 : 'tags this) ->
        BufferSource.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2499) "counter")
    let (set_counter : 'tags this -> BufferSource.t -> unit) =
      fun (x2501 : 'tags this) ->
        fun (x2502 : BufferSource.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2501) "counter"
            (BufferSource.t_to_js x2502)
    let (get_length : 'tags this -> float) =
      fun (x2504 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2504) "length")
    let (set_length : 'tags this -> float -> unit) =
      fun (x2506 : 'tags this) ->
        fun (x2507 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2506) "length"
            (Ojs.float_to_js x2507)
    let cast_from = Obj.magic
  end
module AesCbcParams =
  struct
    type t = [ `AesCbcParams  | `Algorithm ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2510 : Ojs.t) -> t_of_js x2510
    and t_0_to_js : t_0 -> Ojs.t = fun (x2509 : t) -> t_to_js x2509
    type tags = [ `AesCbcParams  | `Algorithm ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `AesCbcParams ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x2513 : Ojs.t) -> intf_of_js __tags_of_js x2513
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x2511 : __tags intf) -> intf_to_js __tags_to_js x2511
    let (get_iv : 'tags this -> BufferSource.t) =
      fun (x2515 : 'tags this) ->
        BufferSource.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2515) "iv")
    let (set_iv : 'tags this -> BufferSource.t -> unit) =
      fun (x2517 : 'tags this) ->
        fun (x2518 : BufferSource.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2517) "iv"
            (BufferSource.t_to_js x2518)
    let cast_from = Obj.magic
  end
module SubtleCrypto =
  struct
    type t = [ `SubtleCrypto ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2521 : Ojs.t) -> t_of_js x2521
    and t_0_to_js : t_0 -> Ojs.t = fun (x2520 : t) -> t_to_js x2520
    type tags = [ `SubtleCrypto ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `SubtleCrypto ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x2524 : Ojs.t) -> intf_of_js __tags_of_js x2524
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x2522 : __tags intf) -> intf_to_js __tags_to_js x2522
    let (deriveKey :
      'tags this ->
        algorithm:(AlgorithmIdentifier.t, EcdhKeyDeriveParams.t,
          HkdfParams.t, Pbkdf2Params.t) union4 ->
          baseKey:CryptoKey.t ->
            derivedKeyType:(AesDerivedKeyParams.t, AlgorithmIdentifier.t,
              HkdfParams.t, HmacImportParams.t, Pbkdf2Params.t) union5 ->
              extractable:bool ->
                keyUsages:KeyUsage.t Iterable.t_1 -> CryptoKey.t Promise.t_1)
      =
      fun (x2541 : 'tags this) ->
        fun
          ~algorithm:(x2526 :
                       (AlgorithmIdentifier.t, EcdhKeyDeriveParams.t,
                         HkdfParams.t, Pbkdf2Params.t) union4)
          ->
          fun ~baseKey:(x2531 : CryptoKey.t) ->
            fun
              ~derivedKeyType:(x2532 :
                                (AesDerivedKeyParams.t,
                                  AlgorithmIdentifier.t, HkdfParams.t,
                                  HmacImportParams.t, Pbkdf2Params.t) union5)
              ->
              fun ~extractable:(x2538 : bool) ->
                fun ~keyUsages:(x2539 : KeyUsage.t Iterable.t_1) ->
                  Promise.t_1_of_js CryptoKey.t_of_js
                    (Ojs.call (this_to_js Obj.magic x2541) "deriveKey"
                       [|(union4_to_js AlgorithmIdentifier.t_to_js
                            EcdhKeyDeriveParams.t_to_js HkdfParams.t_to_js
                            Pbkdf2Params.t_to_js x2526);(CryptoKey.t_to_js
                                                           x2531);(union5_to_js
                                                                    AesDerivedKeyParams.t_to_js
                                                                    AlgorithmIdentifier.t_to_js
                                                                    HkdfParams.t_to_js
                                                                    HmacImportParams.t_to_js
                                                                    Pbkdf2Params.t_to_js
                                                                    x2532);(
                         Ojs.bool_to_js x2538);(Iterable.t_1_to_js
                                                  KeyUsage.t_to_js x2539)|])
    let (generateKey :
      'tags this ->
        algorithm:(EcKeyGenParams.t, RsaHashedKeyGenParams.t) union2 ->
          extractable:bool ->
            keyUsages:KeyUsage.t list -> CryptoKeyPair.t Promise.t_1)
      =
      fun (x2550 : 'tags this) ->
        fun
          ~algorithm:(x2544 :
                       (EcKeyGenParams.t, RsaHashedKeyGenParams.t) union2)
          ->
          fun ~extractable:(x2547 : bool) ->
            fun ~keyUsages:(x2548 : KeyUsage.t list) ->
              Promise.t_1_of_js CryptoKeyPair.t_of_js
                (Ojs.call (this_to_js Obj.magic x2550) "generateKey"
                   [|(union2_to_js EcKeyGenParams.t_to_js
                        RsaHashedKeyGenParams.t_to_js x2544);(Ojs.bool_to_js
                                                                x2547);(
                     Ojs.list_to_js KeyUsage.t_to_js x2548)|])
    let (generateKey' :
      'tags this ->
        algorithm:(AesKeyGenParams.t, HmacKeyGenParams.t, Pbkdf2Params.t)
          union3 ->
          extractable:bool ->
            keyUsages:KeyUsage.t list -> CryptoKey.t Promise.t_1)
      =
      fun (x2560 : 'tags this) ->
        fun
          ~algorithm:(x2553 :
                       (AesKeyGenParams.t, HmacKeyGenParams.t,
                         Pbkdf2Params.t) union3)
          ->
          fun ~extractable:(x2557 : bool) ->
            fun ~keyUsages:(x2558 : KeyUsage.t list) ->
              Promise.t_1_of_js CryptoKey.t_of_js
                (Ojs.call (this_to_js Obj.magic x2560) "generateKey"
                   [|(union3_to_js AesKeyGenParams.t_to_js
                        HmacKeyGenParams.t_to_js Pbkdf2Params.t_to_js x2553);(
                     Ojs.bool_to_js x2557);(Ojs.list_to_js KeyUsage.t_to_js
                                              x2558)|])
    let (generateKey'' :
      'tags this ->
        algorithm:AlgorithmIdentifier.t ->
          extractable:bool ->
            keyUsages:KeyUsage.t Iterable.t_1 ->
              (CryptoKey.t, CryptoKeyPair.t) union2 Promise.t_1)
      =
      fun (x2567 : 'tags this) ->
        fun ~algorithm:(x2563 : AlgorithmIdentifier.t) ->
          fun ~extractable:(x2564 : bool) ->
            fun ~keyUsages:(x2565 : KeyUsage.t Iterable.t_1) ->
              Promise.t_1_of_js
                (fun (x2569 : Ojs.t) ->
                   union2_of_js CryptoKey.t_of_js CryptoKeyPair.t_of_js x2569)
                (Ojs.call (this_to_js Obj.magic x2567) "generateKey"
                   [|(AlgorithmIdentifier.t_to_js x2563);(Ojs.bool_to_js
                                                            x2564);(Iterable.t_1_to_js
                                                                    KeyUsage.t_to_js
                                                                    x2565)|])
    let (importKey :
      'tags this ->
        format:[ `L_s97_jwk ] ->
          keyData:JsonWebKey.t ->
            algorithm:(AesKeyAlgorithm.t, AlgorithmIdentifier.t,
              EcKeyImportParams.t, HmacImportParams.t,
              RsaHashedImportParams.t) union5 ->
              extractable:bool ->
                keyUsages:KeyUsage.t list -> CryptoKey.t Promise.t_1)
      =
      fun (x2583 : 'tags this) ->
        fun ~format:(x2572 : [ `L_s97_jwk ]) ->
          fun ~keyData:(x2573 : JsonWebKey.t) ->
            fun
              ~algorithm:(x2574 :
                           (AesKeyAlgorithm.t, AlgorithmIdentifier.t,
                             EcKeyImportParams.t, HmacImportParams.t,
                             RsaHashedImportParams.t) union5)
              ->
              fun ~extractable:(x2580 : bool) ->
                fun ~keyUsages:(x2581 : KeyUsage.t list) ->
                  Promise.t_1_of_js CryptoKey.t_of_js
                    (Ojs.call (this_to_js Obj.magic x2583) "importKey"
                       [|((match x2572 with
                           | `L_s97_jwk -> Ojs.string_to_js "jwk"));(
                         JsonWebKey.t_to_js x2573);(union5_to_js
                                                      AesKeyAlgorithm.t_to_js
                                                      AlgorithmIdentifier.t_to_js
                                                      EcKeyImportParams.t_to_js
                                                      HmacImportParams.t_to_js
                                                      RsaHashedImportParams.t_to_js
                                                      x2574);(Ojs.bool_to_js
                                                                x2580);(
                         Ojs.list_to_js KeyUsage.t_to_js x2581)|])
    let (importKey' :
      'tags this ->
        format:(KeyFormat.t, [ `L_s97_jwk ]) Exclude.t_2 ->
          keyData:BufferSource.t ->
            algorithm:(AesKeyAlgorithm.t, AlgorithmIdentifier.t,
              EcKeyImportParams.t, HmacImportParams.t,
              RsaHashedImportParams.t) union5 ->
              extractable:bool ->
                keyUsages:KeyUsage.t Iterable.t_1 -> CryptoKey.t Promise.t_1)
      =
      fun (x2599 : 'tags this) ->
        fun ~format:(x2586 : (KeyFormat.t, [ `L_s97_jwk ]) Exclude.t_2) ->
          fun ~keyData:(x2589 : BufferSource.t) ->
            fun
              ~algorithm:(x2590 :
                           (AesKeyAlgorithm.t, AlgorithmIdentifier.t,
                             EcKeyImportParams.t, HmacImportParams.t,
                             RsaHashedImportParams.t) union5)
              ->
              fun ~extractable:(x2596 : bool) ->
                fun ~keyUsages:(x2597 : KeyUsage.t Iterable.t_1) ->
                  Promise.t_1_of_js CryptoKey.t_of_js
                    (Ojs.call (this_to_js Obj.magic x2599) "importKey"
                       [|(Exclude.t_2_to_js KeyFormat.t_to_js
                            (fun (x2588 : [ `L_s97_jwk ]) ->
                               match x2588 with
                               | `L_s97_jwk -> Ojs.string_to_js "jwk") x2586);(
                         BufferSource.t_to_js x2589);(union5_to_js
                                                        AesKeyAlgorithm.t_to_js
                                                        AlgorithmIdentifier.t_to_js
                                                        EcKeyImportParams.t_to_js
                                                        HmacImportParams.t_to_js
                                                        RsaHashedImportParams.t_to_js
                                                        x2590);(Ojs.bool_to_js
                                                                  x2596);(
                         Iterable.t_1_to_js KeyUsage.t_to_js x2597)|])
    let (unwrapKey :
      'tags this ->
        format:KeyFormat.t ->
          wrappedKey:BufferSource.t ->
            unwrappingKey:CryptoKey.t ->
              unwrapAlgorithm:(AesCbcParams.t, AesCtrParams.t,
                AesGcmParams.t, AlgorithmIdentifier.t, RsaOaepParams.t)
                union5 ->
                unwrappedKeyAlgorithm:(AesKeyAlgorithm.t,
                  AlgorithmIdentifier.t, EcKeyImportParams.t,
                  HmacImportParams.t, RsaHashedImportParams.t) union5 ->
                  extractable:bool ->
                    keyUsages:KeyUsage.t Iterable.t_1 ->
                      CryptoKey.t Promise.t_1)
      =
      fun (x2620 : 'tags this) ->
        fun ~format:(x2602 : KeyFormat.t) ->
          fun ~wrappedKey:(x2603 : BufferSource.t) ->
            fun ~unwrappingKey:(x2604 : CryptoKey.t) ->
              fun
                ~unwrapAlgorithm:(x2605 :
                                   (AesCbcParams.t, AesCtrParams.t,
                                     AesGcmParams.t, AlgorithmIdentifier.t,
                                     RsaOaepParams.t) union5)
                ->
                fun
                  ~unwrappedKeyAlgorithm:(x2611 :
                                           (AesKeyAlgorithm.t,
                                             AlgorithmIdentifier.t,
                                             EcKeyImportParams.t,
                                             HmacImportParams.t,
                                             RsaHashedImportParams.t) union5)
                  ->
                  fun ~extractable:(x2617 : bool) ->
                    fun ~keyUsages:(x2618 : KeyUsage.t Iterable.t_1) ->
                      Promise.t_1_of_js CryptoKey.t_of_js
                        (Ojs.call (this_to_js Obj.magic x2620) "unwrapKey"
                           [|(KeyFormat.t_to_js x2602);(BufferSource.t_to_js
                                                          x2603);(CryptoKey.t_to_js
                                                                    x2604);(
                             union5_to_js AesCbcParams.t_to_js
                               AesCtrParams.t_to_js AesGcmParams.t_to_js
                               AlgorithmIdentifier.t_to_js
                               RsaOaepParams.t_to_js x2605);(union5_to_js
                                                               AesKeyAlgorithm.t_to_js
                                                               AlgorithmIdentifier.t_to_js
                                                               EcKeyImportParams.t_to_js
                                                               HmacImportParams.t_to_js
                                                               RsaHashedImportParams.t_to_js
                                                               x2611);(
                             Ojs.bool_to_js x2617);(Iterable.t_1_to_js
                                                      KeyUsage.t_to_js x2618)|])
    let (decrypt :
      'tags this ->
        algorithm:(AesCbcParams.t, AesCtrParams.t, AesGcmParams.t,
          AlgorithmIdentifier.t, RsaOaepParams.t) union5 ->
          key:CryptoKey.t -> data:BufferSource.t -> any Promise.t_1)
      =
      fun (x2631 : 'tags this) ->
        fun
          ~algorithm:(x2623 :
                       (AesCbcParams.t, AesCtrParams.t, AesGcmParams.t,
                         AlgorithmIdentifier.t, RsaOaepParams.t) union5)
          ->
          fun ~key:(x2629 : CryptoKey.t) ->
            fun ~data:(x2630 : BufferSource.t) ->
              Promise.t_1_of_js any_of_js
                (Ojs.call (this_to_js Obj.magic x2631) "decrypt"
                   [|(union5_to_js AesCbcParams.t_to_js AesCtrParams.t_to_js
                        AesGcmParams.t_to_js AlgorithmIdentifier.t_to_js
                        RsaOaepParams.t_to_js x2623);(CryptoKey.t_to_js x2629);(
                     BufferSource.t_to_js x2630)|])
    let (deriveBits :
      'tags this ->
        algorithm:(AlgorithmIdentifier.t, EcdhKeyDeriveParams.t,
          HkdfParams.t, Pbkdf2Params.t) union4 ->
          baseKey:CryptoKey.t -> length:float -> ArrayBuffer.t_0 Promise.t_1)
      =
      fun (x2641 : 'tags this) ->
        fun
          ~algorithm:(x2634 :
                       (AlgorithmIdentifier.t, EcdhKeyDeriveParams.t,
                         HkdfParams.t, Pbkdf2Params.t) union4)
          ->
          fun ~baseKey:(x2639 : CryptoKey.t) ->
            fun ~length:(x2640 : float) ->
              Promise.t_1_of_js ArrayBuffer.t_0_of_js
                (Ojs.call (this_to_js Obj.magic x2641) "deriveBits"
                   [|(union4_to_js AlgorithmIdentifier.t_to_js
                        EcdhKeyDeriveParams.t_to_js HkdfParams.t_to_js
                        Pbkdf2Params.t_to_js x2634);(CryptoKey.t_to_js x2639);(
                     Ojs.float_to_js x2640)|])
    let (deriveKey' :
      'tags this ->
        algorithm:(AlgorithmIdentifier.t, EcdhKeyDeriveParams.t,
          HkdfParams.t, Pbkdf2Params.t) union4 ->
          baseKey:CryptoKey.t ->
            derivedKeyType:(AesDerivedKeyParams.t, AlgorithmIdentifier.t,
              HkdfParams.t, HmacImportParams.t, Pbkdf2Params.t) union5 ->
              extractable:bool ->
                keyUsages:KeyUsage.t list -> CryptoKey.t Promise.t_1)
      =
      fun (x2659 : 'tags this) ->
        fun
          ~algorithm:(x2644 :
                       (AlgorithmIdentifier.t, EcdhKeyDeriveParams.t,
                         HkdfParams.t, Pbkdf2Params.t) union4)
          ->
          fun ~baseKey:(x2649 : CryptoKey.t) ->
            fun
              ~derivedKeyType:(x2650 :
                                (AesDerivedKeyParams.t,
                                  AlgorithmIdentifier.t, HkdfParams.t,
                                  HmacImportParams.t, Pbkdf2Params.t) union5)
              ->
              fun ~extractable:(x2656 : bool) ->
                fun ~keyUsages:(x2657 : KeyUsage.t list) ->
                  Promise.t_1_of_js CryptoKey.t_of_js
                    (Ojs.call (this_to_js Obj.magic x2659) "deriveKey"
                       [|(union4_to_js AlgorithmIdentifier.t_to_js
                            EcdhKeyDeriveParams.t_to_js HkdfParams.t_to_js
                            Pbkdf2Params.t_to_js x2644);(CryptoKey.t_to_js
                                                           x2649);(union5_to_js
                                                                    AesDerivedKeyParams.t_to_js
                                                                    AlgorithmIdentifier.t_to_js
                                                                    HkdfParams.t_to_js
                                                                    HmacImportParams.t_to_js
                                                                    Pbkdf2Params.t_to_js
                                                                    x2650);(
                         Ojs.bool_to_js x2656);(Ojs.list_to_js
                                                  KeyUsage.t_to_js x2657)|])
    let (digest :
      'tags this ->
        algorithm:AlgorithmIdentifier.t ->
          data:BufferSource.t -> ArrayBuffer.t_0 Promise.t_1)
      =
      fun (x2664 : 'tags this) ->
        fun ~algorithm:(x2662 : AlgorithmIdentifier.t) ->
          fun ~data:(x2663 : BufferSource.t) ->
            Promise.t_1_of_js ArrayBuffer.t_0_of_js
              (Ojs.call (this_to_js Obj.magic x2664) "digest"
                 [|(AlgorithmIdentifier.t_to_js x2662);(BufferSource.t_to_js
                                                          x2663)|])
    let (encrypt :
      'tags this ->
        algorithm:(AesCbcParams.t, AesCtrParams.t, AesGcmParams.t,
          AlgorithmIdentifier.t, RsaOaepParams.t) union5 ->
          key:CryptoKey.t -> data:BufferSource.t -> any Promise.t_1)
      =
      fun (x2675 : 'tags this) ->
        fun
          ~algorithm:(x2667 :
                       (AesCbcParams.t, AesCtrParams.t, AesGcmParams.t,
                         AlgorithmIdentifier.t, RsaOaepParams.t) union5)
          ->
          fun ~key:(x2673 : CryptoKey.t) ->
            fun ~data:(x2674 : BufferSource.t) ->
              Promise.t_1_of_js any_of_js
                (Ojs.call (this_to_js Obj.magic x2675) "encrypt"
                   [|(union5_to_js AesCbcParams.t_to_js AesCtrParams.t_to_js
                        AesGcmParams.t_to_js AlgorithmIdentifier.t_to_js
                        RsaOaepParams.t_to_js x2667);(CryptoKey.t_to_js x2673);(
                     BufferSource.t_to_js x2674)|])
    let (exportKey :
      'tags this ->
        format:[ `L_s97_jwk ] -> key:CryptoKey.t -> JsonWebKey.t Promise.t_1)
      =
      fun (x2680 : 'tags this) ->
        fun ~format:(x2678 : [ `L_s97_jwk ]) ->
          fun ~key:(x2679 : CryptoKey.t) ->
            Promise.t_1_of_js JsonWebKey.t_of_js
              (Ojs.call (this_to_js Obj.magic x2680) "exportKey"
                 [|((match x2678 with | `L_s97_jwk -> Ojs.string_to_js "jwk"));(
                   CryptoKey.t_to_js x2679)|])
    let (exportKey' :
      'tags this ->
        format:(KeyFormat.t, [ `L_s97_jwk ]) Exclude.t_2 ->
          key:CryptoKey.t -> ArrayBuffer.t_0 Promise.t_1)
      =
      fun (x2687 : 'tags this) ->
        fun ~format:(x2683 : (KeyFormat.t, [ `L_s97_jwk ]) Exclude.t_2) ->
          fun ~key:(x2686 : CryptoKey.t) ->
            Promise.t_1_of_js ArrayBuffer.t_0_of_js
              (Ojs.call (this_to_js Obj.magic x2687) "exportKey"
                 [|(Exclude.t_2_to_js KeyFormat.t_to_js
                      (fun (x2685 : [ `L_s97_jwk ]) ->
                         match x2685 with
                         | `L_s97_jwk -> Ojs.string_to_js "jwk") x2683);(
                   CryptoKey.t_to_js x2686)|])
    let (generateKey''' :
      'tags this ->
        algorithm:(EcKeyGenParams.t, RsaHashedKeyGenParams.t) union2 ->
          extractable:bool ->
            keyUsages:KeyUsage.t list -> CryptoKeyPair.t Promise.t_1)
      =
      fun (x2696 : 'tags this) ->
        fun
          ~algorithm:(x2690 :
                       (EcKeyGenParams.t, RsaHashedKeyGenParams.t) union2)
          ->
          fun ~extractable:(x2693 : bool) ->
            fun ~keyUsages:(x2694 : KeyUsage.t list) ->
              Promise.t_1_of_js CryptoKeyPair.t_of_js
                (Ojs.call (this_to_js Obj.magic x2696) "generateKey"
                   [|(union2_to_js EcKeyGenParams.t_to_js
                        RsaHashedKeyGenParams.t_to_js x2690);(Ojs.bool_to_js
                                                                x2693);(
                     Ojs.list_to_js KeyUsage.t_to_js x2694)|])
    let (generateKey'''' :
      'tags this ->
        algorithm:(AesKeyGenParams.t, HmacKeyGenParams.t, Pbkdf2Params.t)
          union3 ->
          extractable:bool ->
            keyUsages:KeyUsage.t list -> CryptoKey.t Promise.t_1)
      =
      fun (x2706 : 'tags this) ->
        fun
          ~algorithm:(x2699 :
                       (AesKeyGenParams.t, HmacKeyGenParams.t,
                         Pbkdf2Params.t) union3)
          ->
          fun ~extractable:(x2703 : bool) ->
            fun ~keyUsages:(x2704 : KeyUsage.t list) ->
              Promise.t_1_of_js CryptoKey.t_of_js
                (Ojs.call (this_to_js Obj.magic x2706) "generateKey"
                   [|(union3_to_js AesKeyGenParams.t_to_js
                        HmacKeyGenParams.t_to_js Pbkdf2Params.t_to_js x2699);(
                     Ojs.bool_to_js x2703);(Ojs.list_to_js KeyUsage.t_to_js
                                              x2704)|])
    let (generateKey''''' :
      'tags this ->
        algorithm:AlgorithmIdentifier.t ->
          extractable:bool ->
            keyUsages:KeyUsage.t list ->
              (CryptoKey.t, CryptoKeyPair.t) union2 Promise.t_1)
      =
      fun (x2713 : 'tags this) ->
        fun ~algorithm:(x2709 : AlgorithmIdentifier.t) ->
          fun ~extractable:(x2710 : bool) ->
            fun ~keyUsages:(x2711 : KeyUsage.t list) ->
              Promise.t_1_of_js
                (fun (x2715 : Ojs.t) ->
                   union2_of_js CryptoKey.t_of_js CryptoKeyPair.t_of_js x2715)
                (Ojs.call (this_to_js Obj.magic x2713) "generateKey"
                   [|(AlgorithmIdentifier.t_to_js x2709);(Ojs.bool_to_js
                                                            x2710);(Ojs.list_to_js
                                                                    KeyUsage.t_to_js
                                                                    x2711)|])
    let (importKey'' :
      'tags this ->
        format:[ `L_s97_jwk ] ->
          keyData:JsonWebKey.t ->
            algorithm:(AesKeyAlgorithm.t, AlgorithmIdentifier.t,
              EcKeyImportParams.t, HmacImportParams.t,
              RsaHashedImportParams.t) union5 ->
              extractable:bool ->
                keyUsages:KeyUsage.t list -> CryptoKey.t Promise.t_1)
      =
      fun (x2729 : 'tags this) ->
        fun ~format:(x2718 : [ `L_s97_jwk ]) ->
          fun ~keyData:(x2719 : JsonWebKey.t) ->
            fun
              ~algorithm:(x2720 :
                           (AesKeyAlgorithm.t, AlgorithmIdentifier.t,
                             EcKeyImportParams.t, HmacImportParams.t,
                             RsaHashedImportParams.t) union5)
              ->
              fun ~extractable:(x2726 : bool) ->
                fun ~keyUsages:(x2727 : KeyUsage.t list) ->
                  Promise.t_1_of_js CryptoKey.t_of_js
                    (Ojs.call (this_to_js Obj.magic x2729) "importKey"
                       [|((match x2718 with
                           | `L_s97_jwk -> Ojs.string_to_js "jwk"));(
                         JsonWebKey.t_to_js x2719);(union5_to_js
                                                      AesKeyAlgorithm.t_to_js
                                                      AlgorithmIdentifier.t_to_js
                                                      EcKeyImportParams.t_to_js
                                                      HmacImportParams.t_to_js
                                                      RsaHashedImportParams.t_to_js
                                                      x2720);(Ojs.bool_to_js
                                                                x2726);(
                         Ojs.list_to_js KeyUsage.t_to_js x2727)|])
    let (importKey''' :
      'tags this ->
        format:(KeyFormat.t, [ `L_s97_jwk ]) Exclude.t_2 ->
          keyData:BufferSource.t ->
            algorithm:(AesKeyAlgorithm.t, AlgorithmIdentifier.t,
              EcKeyImportParams.t, HmacImportParams.t,
              RsaHashedImportParams.t) union5 ->
              extractable:bool ->
                keyUsages:KeyUsage.t list -> CryptoKey.t Promise.t_1)
      =
      fun (x2745 : 'tags this) ->
        fun ~format:(x2732 : (KeyFormat.t, [ `L_s97_jwk ]) Exclude.t_2) ->
          fun ~keyData:(x2735 : BufferSource.t) ->
            fun
              ~algorithm:(x2736 :
                           (AesKeyAlgorithm.t, AlgorithmIdentifier.t,
                             EcKeyImportParams.t, HmacImportParams.t,
                             RsaHashedImportParams.t) union5)
              ->
              fun ~extractable:(x2742 : bool) ->
                fun ~keyUsages:(x2743 : KeyUsage.t list) ->
                  Promise.t_1_of_js CryptoKey.t_of_js
                    (Ojs.call (this_to_js Obj.magic x2745) "importKey"
                       [|(Exclude.t_2_to_js KeyFormat.t_to_js
                            (fun (x2734 : [ `L_s97_jwk ]) ->
                               match x2734 with
                               | `L_s97_jwk -> Ojs.string_to_js "jwk") x2732);(
                         BufferSource.t_to_js x2735);(union5_to_js
                                                        AesKeyAlgorithm.t_to_js
                                                        AlgorithmIdentifier.t_to_js
                                                        EcKeyImportParams.t_to_js
                                                        HmacImportParams.t_to_js
                                                        RsaHashedImportParams.t_to_js
                                                        x2736);(Ojs.bool_to_js
                                                                  x2742);(
                         Ojs.list_to_js KeyUsage.t_to_js x2743)|])
    let (sign :
      'tags this ->
        algorithm:(AlgorithmIdentifier.t, EcdsaParams.t, RsaPssParams.t)
          union3 ->
          key:CryptoKey.t ->
            data:BufferSource.t -> ArrayBuffer.t_0 Promise.t_1)
      =
      fun (x2754 : 'tags this) ->
        fun
          ~algorithm:(x2748 :
                       (AlgorithmIdentifier.t, EcdsaParams.t, RsaPssParams.t)
                         union3)
          ->
          fun ~key:(x2752 : CryptoKey.t) ->
            fun ~data:(x2753 : BufferSource.t) ->
              Promise.t_1_of_js ArrayBuffer.t_0_of_js
                (Ojs.call (this_to_js Obj.magic x2754) "sign"
                   [|(union3_to_js AlgorithmIdentifier.t_to_js
                        EcdsaParams.t_to_js RsaPssParams.t_to_js x2748);(
                     CryptoKey.t_to_js x2752);(BufferSource.t_to_js x2753)|])
    let (unwrapKey' :
      'tags this ->
        format:KeyFormat.t ->
          wrappedKey:BufferSource.t ->
            unwrappingKey:CryptoKey.t ->
              unwrapAlgorithm:(AesCbcParams.t, AesCtrParams.t,
                AesGcmParams.t, AlgorithmIdentifier.t, RsaOaepParams.t)
                union5 ->
                unwrappedKeyAlgorithm:(AesKeyAlgorithm.t,
                  AlgorithmIdentifier.t, EcKeyImportParams.t,
                  HmacImportParams.t, RsaHashedImportParams.t) union5 ->
                  extractable:bool ->
                    keyUsages:KeyUsage.t list -> CryptoKey.t Promise.t_1)
      =
      fun (x2775 : 'tags this) ->
        fun ~format:(x2757 : KeyFormat.t) ->
          fun ~wrappedKey:(x2758 : BufferSource.t) ->
            fun ~unwrappingKey:(x2759 : CryptoKey.t) ->
              fun
                ~unwrapAlgorithm:(x2760 :
                                   (AesCbcParams.t, AesCtrParams.t,
                                     AesGcmParams.t, AlgorithmIdentifier.t,
                                     RsaOaepParams.t) union5)
                ->
                fun
                  ~unwrappedKeyAlgorithm:(x2766 :
                                           (AesKeyAlgorithm.t,
                                             AlgorithmIdentifier.t,
                                             EcKeyImportParams.t,
                                             HmacImportParams.t,
                                             RsaHashedImportParams.t) union5)
                  ->
                  fun ~extractable:(x2772 : bool) ->
                    fun ~keyUsages:(x2773 : KeyUsage.t list) ->
                      Promise.t_1_of_js CryptoKey.t_of_js
                        (Ojs.call (this_to_js Obj.magic x2775) "unwrapKey"
                           [|(KeyFormat.t_to_js x2757);(BufferSource.t_to_js
                                                          x2758);(CryptoKey.t_to_js
                                                                    x2759);(
                             union5_to_js AesCbcParams.t_to_js
                               AesCtrParams.t_to_js AesGcmParams.t_to_js
                               AlgorithmIdentifier.t_to_js
                               RsaOaepParams.t_to_js x2760);(union5_to_js
                                                               AesKeyAlgorithm.t_to_js
                                                               AlgorithmIdentifier.t_to_js
                                                               EcKeyImportParams.t_to_js
                                                               HmacImportParams.t_to_js
                                                               RsaHashedImportParams.t_to_js
                                                               x2766);(
                             Ojs.bool_to_js x2772);(Ojs.list_to_js
                                                      KeyUsage.t_to_js x2773)|])
    let (verify :
      'tags this ->
        algorithm:(AlgorithmIdentifier.t, EcdsaParams.t, RsaPssParams.t)
          union3 ->
          key:CryptoKey.t ->
            signature:BufferSource.t ->
              data:BufferSource.t -> bool Promise.t_1)
      =
      fun (x2785 : 'tags this) ->
        fun
          ~algorithm:(x2778 :
                       (AlgorithmIdentifier.t, EcdsaParams.t, RsaPssParams.t)
                         union3)
          ->
          fun ~key:(x2782 : CryptoKey.t) ->
            fun ~signature:(x2783 : BufferSource.t) ->
              fun ~data:(x2784 : BufferSource.t) ->
                Promise.t_1_of_js Ojs.bool_of_js
                  (Ojs.call (this_to_js Obj.magic x2785) "verify"
                     [|(union3_to_js AlgorithmIdentifier.t_to_js
                          EcdsaParams.t_to_js RsaPssParams.t_to_js x2778);(
                       CryptoKey.t_to_js x2782);(BufferSource.t_to_js x2783);(
                       BufferSource.t_to_js x2784)|])
    let (wrapKey :
      'tags this ->
        format:KeyFormat.t ->
          key:CryptoKey.t ->
            wrappingKey:CryptoKey.t ->
              wrapAlgorithm:(AesCbcParams.t, AesCtrParams.t, AesGcmParams.t,
                AlgorithmIdentifier.t, RsaOaepParams.t) union5 ->
                ArrayBuffer.t_0 Promise.t_1)
      =
      fun (x2797 : 'tags this) ->
        fun ~format:(x2788 : KeyFormat.t) ->
          fun ~key:(x2789 : CryptoKey.t) ->
            fun ~wrappingKey:(x2790 : CryptoKey.t) ->
              fun
                ~wrapAlgorithm:(x2791 :
                                 (AesCbcParams.t, AesCtrParams.t,
                                   AesGcmParams.t, AlgorithmIdentifier.t,
                                   RsaOaepParams.t) union5)
                ->
                Promise.t_1_of_js ArrayBuffer.t_0_of_js
                  (Ojs.call (this_to_js Obj.magic x2797) "wrapKey"
                     [|(KeyFormat.t_to_js x2788);(CryptoKey.t_to_js x2789);(
                       CryptoKey.t_to_js x2790);(union5_to_js
                                                   AesCbcParams.t_to_js
                                                   AesCtrParams.t_to_js
                                                   AesGcmParams.t_to_js
                                                   AlgorithmIdentifier.t_to_js
                                                   RsaOaepParams.t_to_js
                                                   x2791)|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "SubtleCrypto")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "SubtleCrypto") [||])
  end
module CryptoStatic =
  struct
    let (subtle : unit -> SubtleCrypto.t) =
      fun () ->
        SubtleCrypto.t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "crypto")
             "subtle")
    let (getRandomValues : 'T -> 'T) =
      fun (x2800 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "crypto")
             "getRandomValues" [|(Obj.magic x2800)|])
  end
module ConsoleStatic =
  struct
    let (assert_ : ?condition:bool -> data:any list -> unit -> unit) =
      fun ?condition:(x2801 : bool option) ->
        fun ~data:(x2802 : any list) ->
          fun () ->
            ignore
              (let x2806 = Ojs.get_prop_ascii Ojs.global "console" in
               Ojs.call (Ojs.get_prop_ascii x2806 "assert") "apply"
                 [|x2806;((let x2803 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x2801 with
                            | Some x2805 ->
                                ignore
                                  (Ojs.call x2803 "push"
                                     [|(Ojs.bool_to_js x2805)|])
                            | None -> ());
                           List.iter
                             (fun (x2804 : any) ->
                                ignore
                                  (Ojs.call x2803 "push"
                                     [|(any_to_js x2804)|])) x2802;
                           x2803))|])
    let (clear : unit -> unit) =
      fun () ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "console") "clear" [||])
    let (count : ?label:string -> unit -> unit) =
      fun ?label:(x2807 : string option) ->
        fun () ->
          ignore
            (let x2810 = Ojs.get_prop_ascii Ojs.global "console" in
             Ojs.call (Ojs.get_prop_ascii x2810 "count") "apply"
               [|x2810;((let x2808 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         (match x2807 with
                          | Some x2809 ->
                              ignore
                                (Ojs.call x2808 "push"
                                   [|(Ojs.string_to_js x2809)|])
                          | None -> ());
                         x2808))|])
    let (countReset : ?label:string -> unit -> unit) =
      fun ?label:(x2811 : string option) ->
        fun () ->
          ignore
            (let x2814 = Ojs.get_prop_ascii Ojs.global "console" in
             Ojs.call (Ojs.get_prop_ascii x2814 "countReset") "apply"
               [|x2814;((let x2812 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         (match x2811 with
                          | Some x2813 ->
                              ignore
                                (Ojs.call x2812 "push"
                                   [|(Ojs.string_to_js x2813)|])
                          | None -> ());
                         x2812))|])
    let (debug : any list -> unit) =
      fun (x2815 : any list) ->
        ignore
          (let x2818 = Ojs.get_prop_ascii Ojs.global "console" in
           Ojs.call (Ojs.get_prop_ascii x2818 "debug") "apply"
             [|x2818;((let x2816 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x2817 : any) ->
                            ignore
                              (Ojs.call x2816 "push" [|(any_to_js x2817)|]))
                         x2815;
                       x2816))|])
    let (dir : ?item:any -> ?options:any -> unit -> unit) =
      fun ?item:(x2819 : any option) ->
        fun ?options:(x2820 : any option) ->
          fun () ->
            ignore
              (let x2824 = Ojs.get_prop_ascii Ojs.global "console" in
               Ojs.call (Ojs.get_prop_ascii x2824 "dir") "apply"
                 [|x2824;((let x2821 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x2819 with
                            | Some x2823 ->
                                ignore
                                  (Ojs.call x2821 "push"
                                     [|(any_to_js x2823)|])
                            | None -> ());
                           (match x2820 with
                            | Some x2822 ->
                                ignore
                                  (Ojs.call x2821 "push"
                                     [|(any_to_js x2822)|])
                            | None -> ());
                           x2821))|])
    let (dirxml : any list -> unit) =
      fun (x2825 : any list) ->
        ignore
          (let x2828 = Ojs.get_prop_ascii Ojs.global "console" in
           Ojs.call (Ojs.get_prop_ascii x2828 "dirxml") "apply"
             [|x2828;((let x2826 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x2827 : any) ->
                            ignore
                              (Ojs.call x2826 "push" [|(any_to_js x2827)|]))
                         x2825;
                       x2826))|])
    let (error : any list -> unit) =
      fun (x2829 : any list) ->
        ignore
          (let x2832 = Ojs.get_prop_ascii Ojs.global "console" in
           Ojs.call (Ojs.get_prop_ascii x2832 "error") "apply"
             [|x2832;((let x2830 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x2831 : any) ->
                            ignore
                              (Ojs.call x2830 "push" [|(any_to_js x2831)|]))
                         x2829;
                       x2830))|])
    let (group : any list -> unit) =
      fun (x2833 : any list) ->
        ignore
          (let x2836 = Ojs.get_prop_ascii Ojs.global "console" in
           Ojs.call (Ojs.get_prop_ascii x2836 "group") "apply"
             [|x2836;((let x2834 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x2835 : any) ->
                            ignore
                              (Ojs.call x2834 "push" [|(any_to_js x2835)|]))
                         x2833;
                       x2834))|])
    let (groupCollapsed : any list -> unit) =
      fun (x2837 : any list) ->
        ignore
          (let x2840 = Ojs.get_prop_ascii Ojs.global "console" in
           Ojs.call (Ojs.get_prop_ascii x2840 "groupCollapsed") "apply"
             [|x2840;((let x2838 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x2839 : any) ->
                            ignore
                              (Ojs.call x2838 "push" [|(any_to_js x2839)|]))
                         x2837;
                       x2838))|])
    let (groupEnd : unit -> unit) =
      fun () ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "console") "groupEnd" [||])
    let (info : any list -> unit) =
      fun (x2841 : any list) ->
        ignore
          (let x2844 = Ojs.get_prop_ascii Ojs.global "console" in
           Ojs.call (Ojs.get_prop_ascii x2844 "info") "apply"
             [|x2844;((let x2842 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x2843 : any) ->
                            ignore
                              (Ojs.call x2842 "push" [|(any_to_js x2843)|]))
                         x2841;
                       x2842))|])
    let (log : any list -> unit) =
      fun (x2845 : any list) ->
        ignore
          (let x2848 = Ojs.get_prop_ascii Ojs.global "console" in
           Ojs.call (Ojs.get_prop_ascii x2848 "log") "apply"
             [|x2848;((let x2846 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x2847 : any) ->
                            ignore
                              (Ojs.call x2846 "push" [|(any_to_js x2847)|]))
                         x2845;
                       x2846))|])
    let (table : ?tabularData:any -> ?properties:string list -> unit -> unit)
      =
      fun ?tabularData:(x2849 : any option) ->
        fun ?properties:(x2850 : string list option) ->
          fun () ->
            ignore
              (let x2855 = Ojs.get_prop_ascii Ojs.global "console" in
               Ojs.call (Ojs.get_prop_ascii x2855 "table") "apply"
                 [|x2855;((let x2851 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x2849 with
                            | Some x2854 ->
                                ignore
                                  (Ojs.call x2851 "push"
                                     [|(any_to_js x2854)|])
                            | None -> ());
                           (match x2850 with
                            | Some x2852 ->
                                ignore
                                  (Ojs.call x2851 "push"
                                     [|(Ojs.list_to_js Ojs.string_to_js x2852)|])
                            | None -> ());
                           x2851))|])
    let (time : ?label:string -> unit -> unit) =
      fun ?label:(x2856 : string option) ->
        fun () ->
          ignore
            (let x2859 = Ojs.get_prop_ascii Ojs.global "console" in
             Ojs.call (Ojs.get_prop_ascii x2859 "time") "apply"
               [|x2859;((let x2857 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         (match x2856 with
                          | Some x2858 ->
                              ignore
                                (Ojs.call x2857 "push"
                                   [|(Ojs.string_to_js x2858)|])
                          | None -> ());
                         x2857))|])
    let (timeEnd : ?label:string -> unit -> unit) =
      fun ?label:(x2860 : string option) ->
        fun () ->
          ignore
            (let x2863 = Ojs.get_prop_ascii Ojs.global "console" in
             Ojs.call (Ojs.get_prop_ascii x2863 "timeEnd") "apply"
               [|x2863;((let x2861 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         (match x2860 with
                          | Some x2862 ->
                              ignore
                                (Ojs.call x2861 "push"
                                   [|(Ojs.string_to_js x2862)|])
                          | None -> ());
                         x2861))|])
    let (timeLog : ?label:string -> data:any list -> unit -> unit) =
      fun ?label:(x2864 : string option) ->
        fun ~data:(x2865 : any list) ->
          fun () ->
            ignore
              (let x2869 = Ojs.get_prop_ascii Ojs.global "console" in
               Ojs.call (Ojs.get_prop_ascii x2869 "timeLog") "apply"
                 [|x2869;((let x2866 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x2864 with
                            | Some x2868 ->
                                ignore
                                  (Ojs.call x2866 "push"
                                     [|(Ojs.string_to_js x2868)|])
                            | None -> ());
                           List.iter
                             (fun (x2867 : any) ->
                                ignore
                                  (Ojs.call x2866 "push"
                                     [|(any_to_js x2867)|])) x2865;
                           x2866))|])
    let (timeStamp : ?label:string -> unit -> unit) =
      fun ?label:(x2870 : string option) ->
        fun () ->
          ignore
            (let x2873 = Ojs.get_prop_ascii Ojs.global "console" in
             Ojs.call (Ojs.get_prop_ascii x2873 "timeStamp") "apply"
               [|x2873;((let x2871 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         (match x2870 with
                          | Some x2872 ->
                              ignore
                                (Ojs.call x2871 "push"
                                   [|(Ojs.string_to_js x2872)|])
                          | None -> ());
                         x2871))|])
    let (trace : any list -> unit) =
      fun (x2874 : any list) ->
        ignore
          (let x2877 = Ojs.get_prop_ascii Ojs.global "console" in
           Ojs.call (Ojs.get_prop_ascii x2877 "trace") "apply"
             [|x2877;((let x2875 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x2876 : any) ->
                            ignore
                              (Ojs.call x2875 "push" [|(any_to_js x2876)|]))
                         x2874;
                       x2875))|])
    let (warn : any list -> unit) =
      fun (x2878 : any list) ->
        ignore
          (let x2881 = Ojs.get_prop_ascii Ojs.global "console" in
           Ojs.call (Ojs.get_prop_ascii x2881 "warn") "apply"
             [|x2881;((let x2879 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x2880 : any) ->
                            ignore
                              (Ojs.call x2879 "push" [|(any_to_js x2880)|]))
                         x2878;
                       x2879))|])
  end
module CacheQueryOptions =
  struct
    type t = [ `CacheQueryOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2883 : Ojs.t) -> t_of_js x2883
    and t_0_to_js : t_0 -> Ojs.t = fun (x2882 : t) -> t_to_js x2882
    type tags = [ `CacheQueryOptions ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `CacheQueryOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x2886 : Ojs.t) -> intf_of_js __tags_of_js x2886
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x2884 : __tags intf) -> intf_to_js __tags_to_js x2884
    let (get_ignoreMethod : 'tags this -> bool) =
      fun (x2888 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2888) "ignoreMethod")
    let (set_ignoreMethod : 'tags this -> bool -> unit) =
      fun (x2890 : 'tags this) ->
        fun (x2891 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2890) "ignoreMethod"
            (Ojs.bool_to_js x2891)
    let (get_ignoreSearch : 'tags this -> bool) =
      fun (x2893 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2893) "ignoreSearch")
    let (set_ignoreSearch : 'tags this -> bool -> unit) =
      fun (x2895 : 'tags this) ->
        fun (x2896 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2895) "ignoreSearch"
            (Ojs.bool_to_js x2896)
    let (get_ignoreVary : 'tags this -> bool) =
      fun (x2898 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2898) "ignoreVary")
    let (set_ignoreVary : 'tags this -> bool -> unit) =
      fun (x2900 : 'tags this) ->
        fun (x2901 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2900) "ignoreVary"
            (Ojs.bool_to_js x2901)
    let cast_from = Obj.magic
  end
module MultiCacheQueryOptions =
  struct
    type t = [ `CacheQueryOptions  | `MultiCacheQueryOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2904 : Ojs.t) -> t_of_js x2904
    and t_0_to_js : t_0 -> Ojs.t = fun (x2903 : t) -> t_to_js x2903
    type tags = [ `CacheQueryOptions  | `MultiCacheQueryOptions ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `MultiCacheQueryOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x2907 : Ojs.t) -> intf_of_js __tags_of_js x2907
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x2905 : __tags intf) -> intf_to_js __tags_to_js x2905
    let (get_cacheName : 'tags this -> string) =
      fun (x2909 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2909) "cacheName")
    let (set_cacheName : 'tags this -> string -> unit) =
      fun (x2911 : 'tags this) ->
        fun (x2912 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2911) "cacheName"
            (Ojs.string_to_js x2912)
    let cast_from = Obj.magic
  end
module ResponseType =
  struct
    type t =
      [ `L_s137_opaque  | `L_s138_opaqueredirect  | `L_s43_basic 
      | `L_s55_cors  | `L_s57_default  | `L_s67_error ]
    let rec t_of_js : Ojs.t -> t =
      fun (x2915 : Ojs.t) ->
        let x2916 = x2915 in
        match Ojs.string_of_js x2916 with
        | "opaque" -> `L_s137_opaque
        | "opaqueredirect" -> `L_s138_opaqueredirect
        | "basic" -> `L_s43_basic
        | "cors" -> `L_s55_cors
        | "default" -> `L_s57_default
        | "error" -> `L_s67_error
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun
        (x2914 :
          [ `L_s137_opaque  | `L_s138_opaqueredirect  | `L_s43_basic 
          | `L_s55_cors  | `L_s57_default  | `L_s67_error ])
        ->
        match x2914 with
        | `L_s137_opaque -> Ojs.string_to_js "opaque"
        | `L_s138_opaqueredirect -> Ojs.string_to_js "opaqueredirect"
        | `L_s43_basic -> Ojs.string_to_js "basic"
        | `L_s55_cors -> Ojs.string_to_js "cors"
        | `L_s57_default -> Ojs.string_to_js "default"
        | `L_s67_error -> Ojs.string_to_js "error"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2918 : Ojs.t) -> t_of_js x2918
    and t_0_to_js : t_0 -> Ojs.t = fun (x2917 : t) -> t_to_js x2917
  end
module rec
  Headers:sig
            type t =
              [ `Headers  | (string * string) IterableIterator.tags_1] intf
            type t_0 = t
            [@@@js.stop ]
            type tags =
              [ `Headers  | (string * string) IterableIterator.tags_1]
            type tags_0 = tags
            [@@@js.start ]
            [@@@js.implem
              type tags =
                [ `Headers  | (string * string) IterableIterator.tags_1]
              type tags_0 = tags]
            type 'tags this = 'tags intf constraint 'tags = [> `Headers ]
            val t_to_js : t -> Ojs.t
            val t_of_js : Ojs.t -> t
            val t_0_to_js : t_0 -> Ojs.t
            val t_0_of_js : Ojs.t -> t_0
            val entries :
              'tags this -> (string * string) IterableIterator.t_1
            val keys : 'tags this -> string IterableIterator.t_1
            val values : 'tags this -> string IterableIterator.t_1
            val append : 'tags this -> name:string -> value:string -> unit
            val delete : 'tags this -> name:string -> unit
            val get_ : 'tags this -> name:string -> string or_null
            val has : 'tags this -> name:string -> bool
            val set_ : 'tags this -> name:string -> value:string -> unit
            val forEach :
              'tags this ->
                callbackfn:(value:string -> key:string -> parent:t -> unit)
                  -> ?thisArg:any -> unit -> unit
            val cast_from : 'tags this -> t
            val prototype : unit -> t
            val create : ?init:HeadersInit.t -> unit -> t
          end =
  struct
    type t = [ `Headers  | (string * string) IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2920 : Ojs.t) -> t_of_js x2920
    and t_0_to_js : t_0 -> Ojs.t = fun (x2919 : t) -> t_to_js x2919
    type tags = [ `Headers  | (string * string) IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Headers ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x2923 : Ojs.t) -> intf_of_js __tags_of_js x2923
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x2921 : __tags intf) -> intf_to_js __tags_to_js x2921
    let (entries : 'tags this -> (string * string) IterableIterator.t_1) =
      fun (x2925 : 'tags this) ->
        IterableIterator.t_1_of_js
          (fun (x2927 : Ojs.t) ->
             let x2928 = x2927 in
             ((Ojs.string_of_js (Ojs.array_get x2928 0)),
               (Ojs.string_of_js (Ojs.array_get x2928 1))))
          (Ojs.call (this_to_js Obj.magic x2925) "entries" [||])
    let (keys : 'tags this -> string IterableIterator.t_1) =
      fun (x2929 : 'tags this) ->
        IterableIterator.t_1_of_js Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x2929) "keys" [||])
    let (values : 'tags this -> string IterableIterator.t_1) =
      fun (x2932 : 'tags this) ->
        IterableIterator.t_1_of_js Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x2932) "values" [||])
    let (append : 'tags this -> name:string -> value:string -> unit) =
      fun (x2937 : 'tags this) ->
        fun ~name:(x2935 : string) ->
          fun ~value:(x2936 : string) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x2937) "append"
                 [|(Ojs.string_to_js x2935);(Ojs.string_to_js x2936)|])
    let (delete : 'tags this -> name:string -> unit) =
      fun (x2940 : 'tags this) ->
        fun ~name:(x2939 : string) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x2940) "delete"
               [|(Ojs.string_to_js x2939)|])
    let (get_ : 'tags this -> name:string -> string or_null) =
      fun (x2943 : 'tags this) ->
        fun ~name:(x2942 : string) ->
          or_null_of_js Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x2943) "get"
               [|(Ojs.string_to_js x2942)|])
    let (has : 'tags this -> name:string -> bool) =
      fun (x2947 : 'tags this) ->
        fun ~name:(x2946 : string) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x2947) "has"
               [|(Ojs.string_to_js x2946)|])
    let (set_ : 'tags this -> name:string -> value:string -> unit) =
      fun (x2951 : 'tags this) ->
        fun ~name:(x2949 : string) ->
          fun ~value:(x2950 : string) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x2951) "set"
                 [|(Ojs.string_to_js x2949);(Ojs.string_to_js x2950)|])
    let (forEach :
      'tags this ->
        callbackfn:(value:string -> key:string -> parent:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x2960 : 'tags this) ->
        fun
          ~callbackfn:(x2953 :
                        value:string -> key:string -> parent:t -> unit)
          ->
          fun ?thisArg:(x2954 : any option) ->
            fun () ->
              ignore
                (let x2962 = this_to_js Obj.magic x2960 in
                 Ojs.call (Ojs.get_prop_ascii x2962 "forEach") "apply"
                   [|x2962;((let x2955 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2955 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x2957 : Ojs.t) ->
                                          fun (x2958 : Ojs.t) ->
                                            fun (x2959 : Ojs.t) ->
                                              x2953
                                                ~value:(Ojs.string_of_js
                                                          x2957)
                                                ~key:(Ojs.string_of_js x2958)
                                                ~parent:(t_of_js x2959)))|]);
                             (match x2954 with
                              | Some x2956 ->
                                  ignore
                                    (Ojs.call x2955 "push"
                                       [|(any_to_js x2956)|])
                              | None -> ());
                             x2955))|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Headers")
             "prototype")
    let (create : ?init:HeadersInit.t -> unit -> t) =
      fun ?init:(x2963 : HeadersInit.t option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Headers")
               (let x2964 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x2963 with
                 | Some x2965 ->
                     ignore
                       (Ojs.call x2964 "push" [|(HeadersInit.t_to_js x2965)|])
                 | None -> ());
                x2964))
  end
 and
  HeadersInit:sig
                type t = (Headers.t, string list) or_array
                type t_0 = t
                val t_to_js : t -> Ojs.t
                val t_of_js : Ojs.t -> t
                val t_0_to_js : t_0 -> Ojs.t
                val t_0_of_js : Ojs.t -> t_0
              end =
  struct
    type t = (Headers.t, string list) or_array
    let rec t_of_js : Ojs.t -> t =
      fun (x2970 : Ojs.t) ->
        or_array_of_js Headers.t_of_js
          (fun (x2972 : Ojs.t) -> Ojs.list_of_js Ojs.string_of_js x2972)
          x2970
    and t_to_js : t -> Ojs.t =
      fun (x2966 : (Headers.t, string list) or_array) ->
        or_array_to_js Headers.t_to_js
          (fun (x2968 : string list) -> Ojs.list_to_js Ojs.string_to_js x2968)
          x2966
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2975 : Ojs.t) -> t_of_js x2975
    and t_0_to_js : t_0 -> Ojs.t = fun (x2974 : t) -> t_to_js x2974
  end
module ResponseInit =
  struct
    type t = [ `ResponseInit ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2977 : Ojs.t) -> t_of_js x2977
    and t_0_to_js : t_0 -> Ojs.t = fun (x2976 : t) -> t_to_js x2976
    type tags = [ `ResponseInit ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ResponseInit ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x2980 : Ojs.t) -> intf_of_js __tags_of_js x2980
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x2978 : __tags intf) -> intf_to_js __tags_to_js x2978
    let (get_headers : 'tags this -> HeadersInit.t) =
      fun (x2982 : 'tags this) ->
        HeadersInit.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2982) "headers")
    let (set_headers : 'tags this -> HeadersInit.t -> unit) =
      fun (x2984 : 'tags this) ->
        fun (x2985 : HeadersInit.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2984) "headers"
            (HeadersInit.t_to_js x2985)
    let (get_status : 'tags this -> float) =
      fun (x2987 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2987) "status")
    let (set_status : 'tags this -> float -> unit) =
      fun (x2989 : 'tags this) ->
        fun (x2990 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2989) "status"
            (Ojs.float_to_js x2990)
    let (get_statusText : 'tags this -> string) =
      fun (x2992 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x2992) "statusText")
    let (set_statusText : 'tags this -> string -> unit) =
      fun (x2994 : 'tags this) ->
        fun (x2995 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x2994) "statusText"
            (Ojs.string_to_js x2995)
    let cast_from = Obj.magic
  end
module EndingType =
  struct
    type t = [ `L_s118_native  | `L_s194_transparent ]
    let rec t_of_js : Ojs.t -> t =
      fun (x2998 : Ojs.t) ->
        let x2999 = x2998 in
        match Ojs.string_of_js x2999 with
        | "native" -> `L_s118_native
        | "transparent" -> `L_s194_transparent
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun (x2997 : [ `L_s118_native  | `L_s194_transparent ]) ->
        match x2997 with
        | `L_s118_native -> Ojs.string_to_js "native"
        | `L_s194_transparent -> Ojs.string_to_js "transparent"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3001 : Ojs.t) -> t_of_js x3001
    and t_0_to_js : t_0 -> Ojs.t = fun (x3000 : t) -> t_to_js x3000
  end
module BlobPropertyBag =
  struct
    type t = [ `BlobPropertyBag ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3003 : Ojs.t) -> t_of_js x3003
    and t_0_to_js : t_0 -> Ojs.t = fun (x3002 : t) -> t_to_js x3002
    type tags = [ `BlobPropertyBag ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `BlobPropertyBag ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3006 : Ojs.t) -> intf_of_js __tags_of_js x3006
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3004 : __tags intf) -> intf_to_js __tags_to_js x3004
    let (get_endings : 'tags this -> EndingType.t) =
      fun (x3008 : 'tags this) ->
        EndingType.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3008) "endings")
    let (set_endings : 'tags this -> EndingType.t -> unit) =
      fun (x3010 : 'tags this) ->
        fun (x3011 : EndingType.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3010) "endings"
            (EndingType.t_to_js x3011)
    let (get_type : 'tags this -> string) =
      fun (x3013 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3013) "type")
    let (set_type : 'tags this -> string -> unit) =
      fun (x3015 : 'tags this) ->
        fun (x3016 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3015) "type"
            (Ojs.string_to_js x3016)
    let cast_from = Obj.magic
  end
module FilePropertyBag =
  struct
    type t = [ `BlobPropertyBag  | `FilePropertyBag ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3019 : Ojs.t) -> t_of_js x3019
    and t_0_to_js : t_0 -> Ojs.t = fun (x3018 : t) -> t_to_js x3018
    type tags = [ `BlobPropertyBag  | `FilePropertyBag ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `FilePropertyBag ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3022 : Ojs.t) -> intf_of_js __tags_of_js x3022
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3020 : __tags intf) -> intf_to_js __tags_to_js x3020
    let (get_lastModified : 'tags this -> float) =
      fun (x3024 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3024) "lastModified")
    let (set_lastModified : 'tags this -> float -> unit) =
      fun (x3026 : 'tags this) ->
        fun (x3027 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3026) "lastModified"
            (Ojs.float_to_js x3027)
    let cast_from = Obj.magic
  end
module ReadableStreamDefaultController =
  struct
    type 'R t = [ `ReadableStreamDefaultController of 'R ] intf
    let rec t_of_js : 'R . (Ojs.t -> 'R) -> Ojs.t -> 'R t =
      fun _R -> Obj.magic
    and t_to_js : 'R . ('R -> Ojs.t) -> 'R t -> Ojs.t = fun _R -> Obj.magic
    type 'R t_1 = 'R t
    let rec t_1_of_js : 'R . (Ojs.t -> 'R) -> Ojs.t -> 'R t_1 = fun (type
      __R) ->
      fun (__R_of_js : Ojs.t -> __R) ->
        fun (x3031 : Ojs.t) -> t_of_js __R_of_js x3031
    and t_1_to_js : 'R . ('R -> Ojs.t) -> 'R t_1 -> Ojs.t = fun (type __R) ->
      fun (__R_to_js : __R -> Ojs.t) ->
        fun (x3029 : __R t) -> t_to_js __R_to_js x3029
    type t_0 = any t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x3035 : Ojs.t) -> t_of_js any_of_js x3035
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x3033 : any t) -> t_to_js any_to_js x3033
    type 'R tags = [ `ReadableStreamDefaultController of 'R ]
    type 'R tags_1 = 'R tags
    type tags_0 = any tags
    type ('tags, 'R) this =
      'tags intf constraint 'tags =
                  [> `ReadableStreamDefaultController of 'R ]
    let rec this_of_js :
      'tags 'R .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'R) -> Ojs.t -> ('tags, 'R) this
      = fun (type __tags) -> fun (type __R) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__R_of_js : Ojs.t -> __R) ->
          fun (x3039 : Ojs.t) -> intf_of_js __tags_of_js x3039
    and this_to_js :
      'tags 'R .
        ('tags -> Ojs.t) -> ('R -> Ojs.t) -> ('tags, 'R) this -> Ojs.t
      = fun (type __tags) -> fun (type __R) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__R_to_js : __R -> Ojs.t) ->
          fun (x3037 : __tags intf) -> intf_to_js __tags_to_js x3037
    let (get_desiredSize : ('tags, 'R) this -> float or_null) =
      fun (x3041 : ('tags, 'R) this) ->
        or_null_of_js Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x3041)
             "desiredSize")
    let (close : ('tags, 'R) this -> unit) =
      fun (x3045 : ('tags, 'R) this) ->
        ignore (Ojs.call (this_to_js Obj.magic Obj.magic x3045) "close" [||])
    let (enqueue : ('tags, 'R) this -> ?chunk:'R -> unit -> unit) =
      fun (x3051 : ('tags, 'R) this) ->
        fun ?chunk:(x3048 : 'R option) ->
          fun () ->
            ignore
              (let x3054 = this_to_js Obj.magic Obj.magic x3051 in
               Ojs.call (Ojs.get_prop_ascii x3054 "enqueue") "apply"
                 [|x3054;((let x3049 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3048 with
                            | Some x3050 ->
                                ignore
                                  (Ojs.call x3049 "push"
                                     [|(Obj.magic x3050)|])
                            | None -> ());
                           x3049))|])
    let (error : ('tags, 'R) this -> ?e:any -> unit -> unit) =
      fun (x3058 : ('tags, 'R) this) ->
        fun ?e:(x3055 : any option) ->
          fun () ->
            ignore
              (let x3061 = this_to_js Obj.magic Obj.magic x3058 in
               Ojs.call (Ojs.get_prop_ascii x3061 "error") "apply"
                 [|x3061;((let x3056 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3055 with
                            | Some x3057 ->
                                ignore
                                  (Ojs.call x3056 "push"
                                     [|(any_to_js x3057)|])
                            | None -> ());
                           x3056))|])
    let cast_from = Obj.magic
    let (prototype : unit -> t_0) =
      fun () ->
        t_0_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "ReadableStreamDefaultController")
             "prototype")
    let (create : unit -> t_0) =
      fun () ->
        t_0_of_js
          (Ojs.new_obj
             (Ojs.get_prop_ascii Ojs.global "ReadableStreamDefaultController")
             [||])
  end
module ReadableStreamController =
  struct
    type 'T t = 'T ReadableStreamDefaultController.t
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3064 : Ojs.t) ->
          ReadableStreamDefaultController.t_of_js __T_of_js x3064
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x3062 : __T ReadableStreamDefaultController.t) ->
          ReadableStreamDefaultController.t_to_js __T_to_js x3062
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3068 : Ojs.t) -> t_of_js __T_of_js x3068
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x3066 : __T t) -> t_to_js __T_to_js x3066
  end
module UnderlyingSourceStartCallback =
  struct
    type 'R t = [ `UnderlyingSourceStartCallback of 'R ] intf
    let rec t_of_js : 'R . (Ojs.t -> 'R) -> Ojs.t -> 'R t =
      fun _R -> Obj.magic
    and t_to_js : 'R . ('R -> Ojs.t) -> 'R t -> Ojs.t = fun _R -> Obj.magic
    type 'R t_1 = 'R t
    let rec t_1_of_js : 'R . (Ojs.t -> 'R) -> Ojs.t -> 'R t_1 = fun (type
      __R) ->
      fun (__R_of_js : Ojs.t -> __R) ->
        fun (x3072 : Ojs.t) -> t_of_js __R_of_js x3072
    and t_1_to_js : 'R . ('R -> Ojs.t) -> 'R t_1 -> Ojs.t = fun (type __R) ->
      fun (__R_to_js : __R -> Ojs.t) ->
        fun (x3070 : __R t) -> t_to_js __R_to_js x3070
    type 'R tags = [ `UnderlyingSourceStartCallback of 'R ]
    type 'R tags_1 = 'R tags
    type ('tags, 'R) this =
      'tags intf constraint 'tags = [> `UnderlyingSourceStartCallback of 'R ]
    let rec this_of_js :
      'tags 'R .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'R) -> Ojs.t -> ('tags, 'R) this
      = fun (type __tags) -> fun (type __R) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__R_of_js : Ojs.t -> __R) ->
          fun (x3076 : Ojs.t) -> intf_of_js __tags_of_js x3076
    and this_to_js :
      'tags 'R .
        ('tags -> Ojs.t) -> ('R -> Ojs.t) -> ('tags, 'R) this -> Ojs.t
      = fun (type __tags) -> fun (type __R) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__R_to_js : __R -> Ojs.t) ->
          fun (x3074 : __tags intf) -> intf_to_js __tags_to_js x3074
    let (apply :
      ('tags, 'R) this -> controller:'R ReadableStreamController.t -> any) =
      fun (x3080 : ('tags, 'R) this) ->
        fun ~controller:(x3078 : 'R ReadableStreamController.t) ->
          any_of_js
            (Ojs.apply (this_to_js Obj.magic Obj.magic x3080)
               [|(ReadableStreamController.t_to_js Obj.magic x3078)|])
    let cast_from = Obj.magic
  end
module UnderlyingSourcePullCallback =
  struct
    type 'R t = [ `UnderlyingSourcePullCallback of 'R ] intf
    let rec t_of_js : 'R . (Ojs.t -> 'R) -> Ojs.t -> 'R t =
      fun _R -> Obj.magic
    and t_to_js : 'R . ('R -> Ojs.t) -> 'R t -> Ojs.t = fun _R -> Obj.magic
    type 'R t_1 = 'R t
    let rec t_1_of_js : 'R . (Ojs.t -> 'R) -> Ojs.t -> 'R t_1 = fun (type
      __R) ->
      fun (__R_of_js : Ojs.t -> __R) ->
        fun (x3085 : Ojs.t) -> t_of_js __R_of_js x3085
    and t_1_to_js : 'R . ('R -> Ojs.t) -> 'R t_1 -> Ojs.t = fun (type __R) ->
      fun (__R_to_js : __R -> Ojs.t) ->
        fun (x3083 : __R t) -> t_to_js __R_to_js x3083
    type 'R tags = [ `UnderlyingSourcePullCallback of 'R ]
    type 'R tags_1 = 'R tags
    type ('tags, 'R) this =
      'tags intf constraint 'tags = [> `UnderlyingSourcePullCallback of 'R ]
    let rec this_of_js :
      'tags 'R .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'R) -> Ojs.t -> ('tags, 'R) this
      = fun (type __tags) -> fun (type __R) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__R_of_js : Ojs.t -> __R) ->
          fun (x3089 : Ojs.t) -> intf_of_js __tags_of_js x3089
    and this_to_js :
      'tags 'R .
        ('tags -> Ojs.t) -> ('R -> Ojs.t) -> ('tags, 'R) this -> Ojs.t
      = fun (type __tags) -> fun (type __R) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__R_to_js : __R -> Ojs.t) ->
          fun (x3087 : __tags intf) -> intf_to_js __tags_to_js x3087
    let (apply :
      ('tags, 'R) this -> controller:'R ReadableStreamController.t -> unit) =
      fun (x3093 : ('tags, 'R) this) ->
        fun ~controller:(x3091 : 'R ReadableStreamController.t) ->
          ignore
            (Ojs.apply (this_to_js Obj.magic Obj.magic x3093)
               [|(ReadableStreamController.t_to_js Obj.magic x3091)|])
    let cast_from = Obj.magic
  end
module UnderlyingSourceCancelCallback =
  struct
    type t = [ `UnderlyingSourceCancelCallback ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3097 : Ojs.t) -> t_of_js x3097
    and t_0_to_js : t_0 -> Ojs.t = fun (x3096 : t) -> t_to_js x3096
    type tags = [ `UnderlyingSourceCancelCallback ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `UnderlyingSourceCancelCallback ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3100 : Ojs.t) -> intf_of_js __tags_of_js x3100
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3098 : __tags intf) -> intf_to_js __tags_to_js x3098
    let (apply : 'tags this -> ?reason:any -> unit -> unit) =
      fun (x3105 : 'tags this) ->
        fun ?reason:(x3102 : any option) ->
          fun () ->
            ignore
              (Ojs.call (this_to_js Obj.magic x3105) "apply"
                 [|Ojs.null;((let x3103 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x3102 with
                               | Some x3104 ->
                                   ignore
                                     (Ojs.call x3103 "push"
                                        [|(any_to_js x3104)|])
                               | None -> ());
                              x3103))|])
    let cast_from = Obj.magic
  end
module UnderlyingSource =
  struct
    type 'R t = [ `UnderlyingSource of 'R ] intf
    let rec t_of_js : 'R . (Ojs.t -> 'R) -> Ojs.t -> 'R t =
      fun _R -> Obj.magic
    and t_to_js : 'R . ('R -> Ojs.t) -> 'R t -> Ojs.t = fun _R -> Obj.magic
    type 'R t_1 = 'R t
    let rec t_1_of_js : 'R . (Ojs.t -> 'R) -> Ojs.t -> 'R t_1 = fun (type
      __R) ->
      fun (__R_of_js : Ojs.t -> __R) ->
        fun (x3109 : Ojs.t) -> t_of_js __R_of_js x3109
    and t_1_to_js : 'R . ('R -> Ojs.t) -> 'R t_1 -> Ojs.t = fun (type __R) ->
      fun (__R_to_js : __R -> Ojs.t) ->
        fun (x3107 : __R t) -> t_to_js __R_to_js x3107
    type t_0 = any t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x3113 : Ojs.t) -> t_of_js any_of_js x3113
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x3111 : any t) -> t_to_js any_to_js x3111
    type 'R tags = [ `UnderlyingSource of 'R ]
    type 'R tags_1 = 'R tags
    type tags_0 = any tags
    type ('tags, 'R) this =
      'tags intf constraint 'tags = [> `UnderlyingSource of 'R ]
    let rec this_of_js :
      'tags 'R .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'R) -> Ojs.t -> ('tags, 'R) this
      = fun (type __tags) -> fun (type __R) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__R_of_js : Ojs.t -> __R) ->
          fun (x3117 : Ojs.t) -> intf_of_js __tags_of_js x3117
    and this_to_js :
      'tags 'R .
        ('tags -> Ojs.t) -> ('R -> Ojs.t) -> ('tags, 'R) this -> Ojs.t
      = fun (type __tags) -> fun (type __R) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__R_to_js : __R -> Ojs.t) ->
          fun (x3115 : __tags intf) -> intf_to_js __tags_to_js x3115
    let (get_cancel : ('tags, 'R) this -> UnderlyingSourceCancelCallback.t) =
      fun (x3119 : ('tags, 'R) this) ->
        UnderlyingSourceCancelCallback.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x3119) "cancel")
    let (set_cancel :
      ('tags, 'R) this -> UnderlyingSourceCancelCallback.t -> unit) =
      fun (x3122 : ('tags, 'R) this) ->
        fun (x3123 : UnderlyingSourceCancelCallback.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x3122) "cancel"
            (UnderlyingSourceCancelCallback.t_to_js x3123)
    let (get_pull : ('tags, 'R) this -> 'R UnderlyingSourcePullCallback.t) =
      fun (x3126 : ('tags, 'R) this) ->
        UnderlyingSourcePullCallback.t_of_js Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x3126) "pull")
    let (set_pull :
      ('tags, 'R) this -> 'R UnderlyingSourcePullCallback.t -> unit) =
      fun (x3130 : ('tags, 'R) this) ->
        fun (x3131 : 'R UnderlyingSourcePullCallback.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x3130) "pull"
            (UnderlyingSourcePullCallback.t_to_js Obj.magic x3131)
    let (get_start : ('tags, 'R) this -> 'R UnderlyingSourceStartCallback.t)
      =
      fun (x3135 : ('tags, 'R) this) ->
        UnderlyingSourceStartCallback.t_of_js Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x3135) "start")
    let (set_start :
      ('tags, 'R) this -> 'R UnderlyingSourceStartCallback.t -> unit) =
      fun (x3139 : ('tags, 'R) this) ->
        fun (x3140 : 'R UnderlyingSourceStartCallback.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x3139) "start"
            (UnderlyingSourceStartCallback.t_to_js Obj.magic x3140)
    let (get_type : ('tags, 'R) this -> never or_undefined) =
      fun (x3144 : ('tags, 'R) this) ->
        or_undefined_of_js never_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x3144) "type")
    let (set_type : ('tags, 'R) this -> never or_undefined -> unit) =
      fun (x3148 : ('tags, 'R) this) ->
        fun (x3149 : never or_undefined) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x3148) "type"
            (or_undefined_to_js never_to_js x3149)
    let cast_from = Obj.magic
  end
module StreamPipeOptions =
  struct
    type t = [ `StreamPipeOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3154 : Ojs.t) -> t_of_js x3154
    and t_0_to_js : t_0 -> Ojs.t = fun (x3153 : t) -> t_to_js x3153
    type tags = [ `StreamPipeOptions ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `StreamPipeOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3157 : Ojs.t) -> intf_of_js __tags_of_js x3157
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3155 : __tags intf) -> intf_to_js __tags_to_js x3155
    let (get_preventAbort : 'tags this -> bool) =
      fun (x3159 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3159) "preventAbort")
    let (set_preventAbort : 'tags this -> bool -> unit) =
      fun (x3161 : 'tags this) ->
        fun (x3162 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3161) "preventAbort"
            (Ojs.bool_to_js x3162)
    let (get_preventCancel : 'tags this -> bool) =
      fun (x3164 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3164) "preventCancel")
    let (set_preventCancel : 'tags this -> bool -> unit) =
      fun (x3166 : 'tags this) ->
        fun (x3167 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3166) "preventCancel"
            (Ojs.bool_to_js x3167)
    let (get_preventClose : 'tags this -> bool) =
      fun (x3169 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3169) "preventClose")
    let (set_preventClose : 'tags this -> bool -> unit) =
      fun (x3171 : 'tags this) ->
        fun (x3172 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3171) "preventClose"
            (Ojs.bool_to_js x3172)
    let (get_signal : 'tags this -> AbortSignal.t) =
      fun (x3174 : 'tags this) ->
        AbortSignal.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3174) "signal")
    let (set_signal : 'tags this -> AbortSignal.t -> unit) =
      fun (x3176 : 'tags this) ->
        fun (x3177 : AbortSignal.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3176) "signal"
            (AbortSignal.t_to_js x3177)
    let cast_from = Obj.magic
  end
module WritableStreamDefaultController =
  struct
    type t = [ `WritableStreamDefaultController ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3180 : Ojs.t) -> t_of_js x3180
    and t_0_to_js : t_0 -> Ojs.t = fun (x3179 : t) -> t_to_js x3179
    type tags = [ `WritableStreamDefaultController ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `WritableStreamDefaultController ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3183 : Ojs.t) -> intf_of_js __tags_of_js x3183
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3181 : __tags intf) -> intf_to_js __tags_to_js x3181
    let (error : 'tags this -> ?e:any -> unit -> unit) =
      fun (x3188 : 'tags this) ->
        fun ?e:(x3185 : any option) ->
          fun () ->
            ignore
              (let x3190 = this_to_js Obj.magic x3188 in
               Ojs.call (Ojs.get_prop_ascii x3190 "error") "apply"
                 [|x3190;((let x3186 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3185 with
                            | Some x3187 ->
                                ignore
                                  (Ojs.call x3186 "push"
                                     [|(any_to_js x3187)|])
                            | None -> ());
                           x3186))|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WritableStreamDefaultController")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj
             (Ojs.get_prop_ascii Ojs.global "WritableStreamDefaultController")
             [||])
  end
module UnderlyingSinkWriteCallback =
  struct
    type 'W t = [ `UnderlyingSinkWriteCallback of 'W ] intf
    let rec t_of_js : 'W . (Ojs.t -> 'W) -> Ojs.t -> 'W t =
      fun _W -> Obj.magic
    and t_to_js : 'W . ('W -> Ojs.t) -> 'W t -> Ojs.t = fun _W -> Obj.magic
    type 'W t_1 = 'W t
    let rec t_1_of_js : 'W . (Ojs.t -> 'W) -> Ojs.t -> 'W t_1 = fun (type
      __W) ->
      fun (__W_of_js : Ojs.t -> __W) ->
        fun (x3193 : Ojs.t) -> t_of_js __W_of_js x3193
    and t_1_to_js : 'W . ('W -> Ojs.t) -> 'W t_1 -> Ojs.t = fun (type __W) ->
      fun (__W_to_js : __W -> Ojs.t) ->
        fun (x3191 : __W t) -> t_to_js __W_to_js x3191
    type 'W tags = [ `UnderlyingSinkWriteCallback of 'W ]
    type 'W tags_1 = 'W tags
    type ('tags, 'W) this =
      'tags intf constraint 'tags = [> `UnderlyingSinkWriteCallback of 'W ]
    let rec this_of_js :
      'tags 'W .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'W) -> Ojs.t -> ('tags, 'W) this
      = fun (type __tags) -> fun (type __W) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__W_of_js : Ojs.t -> __W) ->
          fun (x3197 : Ojs.t) -> intf_of_js __tags_of_js x3197
    and this_to_js :
      'tags 'W .
        ('tags -> Ojs.t) -> ('W -> Ojs.t) -> ('tags, 'W) this -> Ojs.t
      = fun (type __tags) -> fun (type __W) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__W_to_js : __W -> Ojs.t) ->
          fun (x3195 : __tags intf) -> intf_to_js __tags_to_js x3195
    let (apply :
      ('tags, 'W) this ->
        chunk:'W -> controller:WritableStreamDefaultController.t -> unit)
      =
      fun (x3201 : ('tags, 'W) this) ->
        fun ~chunk:(x3199 : 'W) ->
          fun ~controller:(x3200 : WritableStreamDefaultController.t) ->
            ignore
              (Ojs.apply (this_to_js Obj.magic Obj.magic x3201)
                 [|(Obj.magic x3199);(WritableStreamDefaultController.t_to_js
                                        x3200)|])
    let cast_from = Obj.magic
  end
module UnderlyingSinkStartCallback =
  struct
    type t = [ `UnderlyingSinkStartCallback ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3205 : Ojs.t) -> t_of_js x3205
    and t_0_to_js : t_0 -> Ojs.t = fun (x3204 : t) -> t_to_js x3204
    type tags = [ `UnderlyingSinkStartCallback ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `UnderlyingSinkStartCallback ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3208 : Ojs.t) -> intf_of_js __tags_of_js x3208
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3206 : __tags intf) -> intf_to_js __tags_to_js x3206
    let (apply :
      'tags this -> controller:WritableStreamDefaultController.t -> any) =
      fun (x3211 : 'tags this) ->
        fun ~controller:(x3210 : WritableStreamDefaultController.t) ->
          any_of_js
            (Ojs.apply (this_to_js Obj.magic x3211)
               [|(WritableStreamDefaultController.t_to_js x3210)|])
    let cast_from = Obj.magic
  end
module UnderlyingSinkCloseCallback =
  struct
    type t = [ `UnderlyingSinkCloseCallback ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3214 : Ojs.t) -> t_of_js x3214
    and t_0_to_js : t_0 -> Ojs.t = fun (x3213 : t) -> t_to_js x3213
    type tags = [ `UnderlyingSinkCloseCallback ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `UnderlyingSinkCloseCallback ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3217 : Ojs.t) -> intf_of_js __tags_of_js x3217
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3215 : __tags intf) -> intf_to_js __tags_to_js x3215
    let (apply : 'tags this -> unit) =
      fun (x3219 : 'tags this) ->
        ignore (Ojs.apply (this_to_js Obj.magic x3219) [||])
    let cast_from = Obj.magic
  end
module UnderlyingSinkAbortCallback =
  struct
    type t = [ `UnderlyingSinkAbortCallback ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3222 : Ojs.t) -> t_of_js x3222
    and t_0_to_js : t_0 -> Ojs.t = fun (x3221 : t) -> t_to_js x3221
    type tags = [ `UnderlyingSinkAbortCallback ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `UnderlyingSinkAbortCallback ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3225 : Ojs.t) -> intf_of_js __tags_of_js x3225
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3223 : __tags intf) -> intf_to_js __tags_to_js x3223
    let (apply : 'tags this -> ?reason:any -> unit -> unit) =
      fun (x3230 : 'tags this) ->
        fun ?reason:(x3227 : any option) ->
          fun () ->
            ignore
              (Ojs.call (this_to_js Obj.magic x3230) "apply"
                 [|Ojs.null;((let x3228 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x3227 with
                               | Some x3229 ->
                                   ignore
                                     (Ojs.call x3228 "push"
                                        [|(any_to_js x3229)|])
                               | None -> ());
                              x3228))|])
    let cast_from = Obj.magic
  end
module UnderlyingSink =
  struct
    type 'W t = [ `UnderlyingSink of 'W ] intf
    let rec t_of_js : 'W . (Ojs.t -> 'W) -> Ojs.t -> 'W t =
      fun _W -> Obj.magic
    and t_to_js : 'W . ('W -> Ojs.t) -> 'W t -> Ojs.t = fun _W -> Obj.magic
    type 'W t_1 = 'W t
    let rec t_1_of_js : 'W . (Ojs.t -> 'W) -> Ojs.t -> 'W t_1 = fun (type
      __W) ->
      fun (__W_of_js : Ojs.t -> __W) ->
        fun (x3234 : Ojs.t) -> t_of_js __W_of_js x3234
    and t_1_to_js : 'W . ('W -> Ojs.t) -> 'W t_1 -> Ojs.t = fun (type __W) ->
      fun (__W_to_js : __W -> Ojs.t) ->
        fun (x3232 : __W t) -> t_to_js __W_to_js x3232
    type t_0 = any t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x3238 : Ojs.t) -> t_of_js any_of_js x3238
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x3236 : any t) -> t_to_js any_to_js x3236
    type 'W tags = [ `UnderlyingSink of 'W ]
    type 'W tags_1 = 'W tags
    type tags_0 = any tags
    type ('tags, 'W) this =
      'tags intf constraint 'tags = [> `UnderlyingSink of 'W ]
    let rec this_of_js :
      'tags 'W .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'W) -> Ojs.t -> ('tags, 'W) this
      = fun (type __tags) -> fun (type __W) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__W_of_js : Ojs.t -> __W) ->
          fun (x3242 : Ojs.t) -> intf_of_js __tags_of_js x3242
    and this_to_js :
      'tags 'W .
        ('tags -> Ojs.t) -> ('W -> Ojs.t) -> ('tags, 'W) this -> Ojs.t
      = fun (type __tags) -> fun (type __W) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__W_to_js : __W -> Ojs.t) ->
          fun (x3240 : __tags intf) -> intf_to_js __tags_to_js x3240
    let (get_abort : ('tags, 'W) this -> UnderlyingSinkAbortCallback.t) =
      fun (x3244 : ('tags, 'W) this) ->
        UnderlyingSinkAbortCallback.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x3244) "abort")
    let (set_abort :
      ('tags, 'W) this -> UnderlyingSinkAbortCallback.t -> unit) =
      fun (x3247 : ('tags, 'W) this) ->
        fun (x3248 : UnderlyingSinkAbortCallback.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x3247) "abort"
            (UnderlyingSinkAbortCallback.t_to_js x3248)
    let (get_close : ('tags, 'W) this -> UnderlyingSinkCloseCallback.t) =
      fun (x3251 : ('tags, 'W) this) ->
        UnderlyingSinkCloseCallback.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x3251) "close")
    let (set_close :
      ('tags, 'W) this -> UnderlyingSinkCloseCallback.t -> unit) =
      fun (x3254 : ('tags, 'W) this) ->
        fun (x3255 : UnderlyingSinkCloseCallback.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x3254) "close"
            (UnderlyingSinkCloseCallback.t_to_js x3255)
    let (get_start : ('tags, 'W) this -> UnderlyingSinkStartCallback.t) =
      fun (x3258 : ('tags, 'W) this) ->
        UnderlyingSinkStartCallback.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x3258) "start")
    let (set_start :
      ('tags, 'W) this -> UnderlyingSinkStartCallback.t -> unit) =
      fun (x3261 : ('tags, 'W) this) ->
        fun (x3262 : UnderlyingSinkStartCallback.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x3261) "start"
            (UnderlyingSinkStartCallback.t_to_js x3262)
    let (get_type : ('tags, 'W) this -> never or_undefined) =
      fun (x3265 : ('tags, 'W) this) ->
        or_undefined_of_js never_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x3265) "type")
    let (set_type : ('tags, 'W) this -> never or_undefined -> unit) =
      fun (x3269 : ('tags, 'W) this) ->
        fun (x3270 : never or_undefined) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x3269) "type"
            (or_undefined_to_js never_to_js x3270)
    let (get_write : ('tags, 'W) this -> 'W UnderlyingSinkWriteCallback.t) =
      fun (x3274 : ('tags, 'W) this) ->
        UnderlyingSinkWriteCallback.t_of_js Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x3274) "write")
    let (set_write :
      ('tags, 'W) this -> 'W UnderlyingSinkWriteCallback.t -> unit) =
      fun (x3278 : ('tags, 'W) this) ->
        fun (x3279 : 'W UnderlyingSinkWriteCallback.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x3278) "write"
            (UnderlyingSinkWriteCallback.t_to_js Obj.magic x3279)
    let cast_from = Obj.magic
  end
module QueuingStrategySize =
  struct
    type 'T t = [ `QueuingStrategySize of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3285 : Ojs.t) -> t_of_js __T_of_js x3285
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x3283 : __T t) -> t_to_js __T_to_js x3283
    type t_0 = any t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x3289 : Ojs.t) -> t_of_js any_of_js x3289
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x3287 : any t) -> t_to_js any_to_js x3287
    type 'T tags = [ `QueuingStrategySize of 'T ]
    type 'T tags_1 = 'T tags
    type tags_0 = any tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `QueuingStrategySize of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x3293 : Ojs.t) -> intf_of_js __tags_of_js x3293
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x3291 : __tags intf) -> intf_to_js __tags_to_js x3291
    let (apply : ('tags, 'T) this -> chunk:'T -> float) =
      fun (x3296 : ('tags, 'T) this) ->
        fun ~chunk:(x3295 : 'T) ->
          Ojs.float_of_js
            (Ojs.apply (this_to_js Obj.magic Obj.magic x3296)
               [|(Obj.magic x3295)|])
    let cast_from = Obj.magic
  end
module QueuingStrategy =
  struct
    type 'T t = [ `QueuingStrategy of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3301 : Ojs.t) -> t_of_js __T_of_js x3301
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x3299 : __T t) -> t_to_js __T_to_js x3299
    type t_0 = any t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x3305 : Ojs.t) -> t_of_js any_of_js x3305
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x3303 : any t) -> t_to_js any_to_js x3303
    type 'T tags = [ `QueuingStrategy of 'T ]
    type 'T tags_1 = 'T tags
    type tags_0 = any tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `QueuingStrategy of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x3309 : Ojs.t) -> intf_of_js __tags_of_js x3309
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x3307 : __tags intf) -> intf_to_js __tags_to_js x3307
    let (get_highWaterMark : ('tags, 'T) this -> float) =
      fun (x3311 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x3311)
             "highWaterMark")
    let (set_highWaterMark : ('tags, 'T) this -> float -> unit) =
      fun (x3314 : ('tags, 'T) this) ->
        fun (x3315 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x3314)
            "highWaterMark" (Ojs.float_to_js x3315)
    let (get_size : ('tags, 'T) this -> 'T QueuingStrategySize.t) =
      fun (x3318 : ('tags, 'T) this) ->
        QueuingStrategySize.t_of_js Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x3318) "size")
    let (set_size : ('tags, 'T) this -> 'T QueuingStrategySize.t -> unit) =
      fun (x3322 : ('tags, 'T) this) ->
        fun (x3323 : 'T QueuingStrategySize.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x3322) "size"
            (QueuingStrategySize.t_to_js Obj.magic x3323)
    let cast_from = Obj.magic
  end
module rec
  WritableStream:sig
                   type 'W t = [ `WritableStream of 'W ] intf
                   type 'W t_1 = 'W t
                   type t_0 = any t
                   [@@@js.stop ]
                   type 'W tags = [ `WritableStream of 'W ]
                   type 'W tags_1 = 'W tags
                   type tags_0 = any tags
                   [@@@js.start ]
                   [@@@js.implem
                     type 'W tags = [ `WritableStream of 'W ]
                     type 'W tags_1 = 'W tags
                     type tags_0 = any tags]
                   type ('tags, 'W) this =
                     'tags intf constraint 'tags = [> `WritableStream of 'W ]
                   val t_to_js : ('W -> Ojs.t) -> 'W t -> Ojs.t
                   val t_of_js : (Ojs.t -> 'W) -> Ojs.t -> 'W t
                   val t_1_to_js : ('W -> Ojs.t) -> 'W t_1 -> Ojs.t
                   val t_1_of_js : (Ojs.t -> 'W) -> Ojs.t -> 'W t_1
                   val t_0_to_js : t_0 -> Ojs.t
                   val t_0_of_js : Ojs.t -> t_0
                   val get_locked : ('tags, 'W) this -> bool
                   val abort :
                     ('tags, 'W) this ->
                       ?reason:any -> unit -> unit Promise.t_1
                   val close : ('tags, 'W) this -> unit Promise.t_1
                   val getWriter :
                     ('tags, 'W) this -> 'W WritableStreamDefaultWriter.t
                   val cast_from : ('tags, 'W) this -> 'W t
                   val prototype : unit -> t_0
                   val create :
                     ?underlyingSink:'W UnderlyingSink.t ->
                       ?strategy:'W QueuingStrategy.t -> unit -> 'W t
                 end =
  struct
    type 'W t = [ `WritableStream of 'W ] intf
    let rec t_of_js : 'W . (Ojs.t -> 'W) -> Ojs.t -> 'W t =
      fun _W -> Obj.magic
    and t_to_js : 'W . ('W -> Ojs.t) -> 'W t -> Ojs.t = fun _W -> Obj.magic
    type 'W t_1 = 'W t
    let rec t_1_of_js : 'W . (Ojs.t -> 'W) -> Ojs.t -> 'W t_1 = fun (type
      __W) ->
      fun (__W_of_js : Ojs.t -> __W) ->
        fun (x3329 : Ojs.t) -> t_of_js __W_of_js x3329
    and t_1_to_js : 'W . ('W -> Ojs.t) -> 'W t_1 -> Ojs.t = fun (type __W) ->
      fun (__W_to_js : __W -> Ojs.t) ->
        fun (x3327 : __W t) -> t_to_js __W_to_js x3327
    type t_0 = any t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x3333 : Ojs.t) -> t_of_js any_of_js x3333
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x3331 : any t) -> t_to_js any_to_js x3331
    type 'W tags = [ `WritableStream of 'W ]
    type 'W tags_1 = 'W tags
    type tags_0 = any tags
    type ('tags, 'W) this =
      'tags intf constraint 'tags = [> `WritableStream of 'W ]
    let rec this_of_js :
      'tags 'W .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'W) -> Ojs.t -> ('tags, 'W) this
      = fun (type __tags) -> fun (type __W) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__W_of_js : Ojs.t -> __W) ->
          fun (x3337 : Ojs.t) -> intf_of_js __tags_of_js x3337
    and this_to_js :
      'tags 'W .
        ('tags -> Ojs.t) -> ('W -> Ojs.t) -> ('tags, 'W) this -> Ojs.t
      = fun (type __tags) -> fun (type __W) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__W_to_js : __W -> Ojs.t) ->
          fun (x3335 : __tags intf) -> intf_to_js __tags_to_js x3335
    let (get_locked : ('tags, 'W) this -> bool) =
      fun (x3339 : ('tags, 'W) this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x3339) "locked")
    let (abort : ('tags, 'W) this -> ?reason:any -> unit -> unit Promise.t_1)
      =
      fun (x3345 : ('tags, 'W) this) ->
        fun ?reason:(x3342 : any option) ->
          fun () ->
            Promise.t_1_of_js Ojs.unit_of_js
              (let x3348 = this_to_js Obj.magic Obj.magic x3345 in
               Ojs.call (Ojs.get_prop_ascii x3348 "abort") "apply"
                 [|x3348;((let x3343 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3342 with
                            | Some x3344 ->
                                ignore
                                  (Ojs.call x3343 "push"
                                     [|(any_to_js x3344)|])
                            | None -> ());
                           x3343))|])
    let (close : ('tags, 'W) this -> unit Promise.t_1) =
      fun (x3350 : ('tags, 'W) this) ->
        Promise.t_1_of_js Ojs.unit_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x3350) "close" [||])
    let (getWriter : ('tags, 'W) this -> 'W WritableStreamDefaultWriter.t) =
      fun (x3354 : ('tags, 'W) this) ->
        WritableStreamDefaultWriter.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x3354) "getWriter" [||])
    let cast_from = Obj.magic
    let (prototype : unit -> t_0) =
      fun () ->
        t_0_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WritableStream") "prototype")
    let (create :
      ?underlyingSink:'W UnderlyingSink.t ->
        ?strategy:'W QueuingStrategy.t -> unit -> 'W t)
      =
      fun ?underlyingSink:(x3358 : 'W UnderlyingSink.t option) ->
        fun ?strategy:(x3359 : 'W QueuingStrategy.t option) ->
          fun () ->
            t_of_js Obj.magic
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "WritableStream")
                 (let x3360 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x3358 with
                   | Some x3363 ->
                       ignore
                         (Ojs.call x3360 "push"
                            [|(UnderlyingSink.t_to_js Obj.magic x3363)|])
                   | None -> ());
                  (match x3359 with
                   | Some x3361 ->
                       ignore
                         (Ojs.call x3360 "push"
                            [|(QueuingStrategy.t_to_js Obj.magic x3361)|])
                   | None -> ());
                  x3360))
  end
 and
  WritableStreamDefaultWriter:sig
                                type 'W t =
                                  [ `WritableStreamDefaultWriter of 'W ] intf
                                type 'W t_1 = 'W t
                                type t_0 = any t
                                [@@@js.stop ]
                                type 'W tags =
                                  [ `WritableStreamDefaultWriter of 'W ]
                                type 'W tags_1 = 'W tags
                                type tags_0 = any tags
                                [@@@js.start ]
                                [@@@js.implem
                                  type 'W tags =
                                    [ `WritableStreamDefaultWriter of 'W ]
                                  type 'W tags_1 = 'W tags
                                  type tags_0 = any tags]
                                type ('tags, 'W) this =
                                  'tags intf constraint 'tags =
                                              [>
                                                `WritableStreamDefaultWriter
                                                  of 'W ]
                                val t_to_js : ('W -> Ojs.t) -> 'W t -> Ojs.t
                                val t_of_js : (Ojs.t -> 'W) -> Ojs.t -> 'W t
                                val t_1_to_js :
                                  ('W -> Ojs.t) -> 'W t_1 -> Ojs.t
                                val t_1_of_js :
                                  (Ojs.t -> 'W) -> Ojs.t -> 'W t_1
                                val t_0_to_js : t_0 -> Ojs.t
                                val t_0_of_js : Ojs.t -> t_0
                                val get_closed :
                                  ('tags, 'W) this ->
                                    never or_undefined Promise.t_1
                                val get_desiredSize :
                                  ('tags, 'W) this -> float or_null
                                val get_ready :
                                  ('tags, 'W) this ->
                                    never or_undefined Promise.t_1
                                val abort :
                                  ('tags, 'W) this ->
                                    ?reason:any -> unit -> unit Promise.t_1
                                val close :
                                  ('tags, 'W) this -> unit Promise.t_1
                                val releaseLock : ('tags, 'W) this -> unit
                                val write :
                                  ('tags, 'W) this ->
                                    ?chunk:'W -> unit -> unit Promise.t_1
                                val cast_from : ('tags, 'W) this -> 'W t
                                val prototype : unit -> t_0
                                val create : 'W WritableStream.t -> 'W t
                              end =
  struct
    type 'W t = [ `WritableStreamDefaultWriter of 'W ] intf
    let rec t_of_js : 'W . (Ojs.t -> 'W) -> Ojs.t -> 'W t =
      fun _W -> Obj.magic
    and t_to_js : 'W . ('W -> Ojs.t) -> 'W t -> Ojs.t = fun _W -> Obj.magic
    type 'W t_1 = 'W t
    let rec t_1_of_js : 'W . (Ojs.t -> 'W) -> Ojs.t -> 'W t_1 = fun (type
      __W) ->
      fun (__W_of_js : Ojs.t -> __W) ->
        fun (x3368 : Ojs.t) -> t_of_js __W_of_js x3368
    and t_1_to_js : 'W . ('W -> Ojs.t) -> 'W t_1 -> Ojs.t = fun (type __W) ->
      fun (__W_to_js : __W -> Ojs.t) ->
        fun (x3366 : __W t) -> t_to_js __W_to_js x3366
    type t_0 = any t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x3372 : Ojs.t) -> t_of_js any_of_js x3372
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x3370 : any t) -> t_to_js any_to_js x3370
    type 'W tags = [ `WritableStreamDefaultWriter of 'W ]
    type 'W tags_1 = 'W tags
    type tags_0 = any tags
    type ('tags, 'W) this =
      'tags intf constraint 'tags = [> `WritableStreamDefaultWriter of 'W ]
    let rec this_of_js :
      'tags 'W .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'W) -> Ojs.t -> ('tags, 'W) this
      = fun (type __tags) -> fun (type __W) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__W_of_js : Ojs.t -> __W) ->
          fun (x3376 : Ojs.t) -> intf_of_js __tags_of_js x3376
    and this_to_js :
      'tags 'W .
        ('tags -> Ojs.t) -> ('W -> Ojs.t) -> ('tags, 'W) this -> Ojs.t
      = fun (type __tags) -> fun (type __W) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__W_to_js : __W -> Ojs.t) ->
          fun (x3374 : __tags intf) -> intf_to_js __tags_to_js x3374
    let (get_closed : ('tags, 'W) this -> never or_undefined Promise.t_1) =
      fun (x3378 : ('tags, 'W) this) ->
        Promise.t_1_of_js
          (fun (x3381 : Ojs.t) -> or_undefined_of_js never_of_js x3381)
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x3378) "closed")
    let (get_desiredSize : ('tags, 'W) this -> float or_null) =
      fun (x3383 : ('tags, 'W) this) ->
        or_null_of_js Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x3383)
             "desiredSize")
    let (get_ready : ('tags, 'W) this -> never or_undefined Promise.t_1) =
      fun (x3387 : ('tags, 'W) this) ->
        Promise.t_1_of_js
          (fun (x3390 : Ojs.t) -> or_undefined_of_js never_of_js x3390)
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x3387) "ready")
    let (abort : ('tags, 'W) this -> ?reason:any -> unit -> unit Promise.t_1)
      =
      fun (x3395 : ('tags, 'W) this) ->
        fun ?reason:(x3392 : any option) ->
          fun () ->
            Promise.t_1_of_js Ojs.unit_of_js
              (let x3398 = this_to_js Obj.magic Obj.magic x3395 in
               Ojs.call (Ojs.get_prop_ascii x3398 "abort") "apply"
                 [|x3398;((let x3393 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3392 with
                            | Some x3394 ->
                                ignore
                                  (Ojs.call x3393 "push"
                                     [|(any_to_js x3394)|])
                            | None -> ());
                           x3393))|])
    let (close : ('tags, 'W) this -> unit Promise.t_1) =
      fun (x3400 : ('tags, 'W) this) ->
        Promise.t_1_of_js Ojs.unit_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x3400) "close" [||])
    let (releaseLock : ('tags, 'W) this -> unit) =
      fun (x3404 : ('tags, 'W) this) ->
        ignore
          (Ojs.call (this_to_js Obj.magic Obj.magic x3404) "releaseLock" [||])
    let (write : ('tags, 'W) this -> ?chunk:'W -> unit -> unit Promise.t_1) =
      fun (x3410 : ('tags, 'W) this) ->
        fun ?chunk:(x3407 : 'W option) ->
          fun () ->
            Promise.t_1_of_js Ojs.unit_of_js
              (let x3413 = this_to_js Obj.magic Obj.magic x3410 in
               Ojs.call (Ojs.get_prop_ascii x3413 "write") "apply"
                 [|x3413;((let x3408 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3407 with
                            | Some x3409 ->
                                ignore
                                  (Ojs.call x3408 "push"
                                     [|(Obj.magic x3409)|])
                            | None -> ());
                           x3408))|])
    let cast_from = Obj.magic
    let (prototype : unit -> t_0) =
      fun () ->
        t_0_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WritableStreamDefaultWriter")
             "prototype")
    let (create : 'W WritableStream.t -> 'W t) =
      fun (x3415 : 'W WritableStream.t) ->
        t_of_js Obj.magic
          (Ojs.new_obj
             (Ojs.get_prop_ascii Ojs.global "WritableStreamDefaultWriter")
             [|(WritableStream.t_to_js Obj.magic x3415)|])
  end
module ReadableStreamGenericReader =
  struct
    type t = [ `ReadableStreamGenericReader ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3419 : Ojs.t) -> t_of_js x3419
    and t_0_to_js : t_0 -> Ojs.t = fun (x3418 : t) -> t_to_js x3418
    type tags = [ `ReadableStreamGenericReader ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `ReadableStreamGenericReader ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3422 : Ojs.t) -> intf_of_js __tags_of_js x3422
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3420 : __tags intf) -> intf_to_js __tags_to_js x3420
    let (get_closed : 'tags this -> never or_undefined Promise.t_1) =
      fun (x3424 : 'tags this) ->
        Promise.t_1_of_js
          (fun (x3426 : Ojs.t) -> or_undefined_of_js never_of_js x3426)
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3424) "closed")
    let (cancel : 'tags this -> ?reason:any -> unit -> unit Promise.t_1) =
      fun (x3431 : 'tags this) ->
        fun ?reason:(x3428 : any option) ->
          fun () ->
            Promise.t_1_of_js Ojs.unit_of_js
              (let x3433 = this_to_js Obj.magic x3431 in
               Ojs.call (Ojs.get_prop_ascii x3433 "cancel") "apply"
                 [|x3433;((let x3429 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3428 with
                            | Some x3430 ->
                                ignore
                                  (Ojs.call x3429 "push"
                                     [|(any_to_js x3430)|])
                            | None -> ());
                           x3429))|])
    let cast_from = Obj.magic
  end
module ReadableStreamDefaultReadValueResult =
  struct
    type 'T t = [ `ReadableStreamDefaultReadValueResult of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3437 : Ojs.t) -> t_of_js __T_of_js x3437
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x3435 : __T t) -> t_to_js __T_to_js x3435
    type 'T tags = [ `ReadableStreamDefaultReadValueResult of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags =
                  [> `ReadableStreamDefaultReadValueResult of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x3441 : Ojs.t) -> intf_of_js __tags_of_js x3441
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x3439 : __tags intf) -> intf_to_js __tags_to_js x3439
    let (get_done : ('tags, 'T) this -> [ `L_b_false ]) =
      fun (x3443 : ('tags, 'T) this) ->
        let x3446 =
          Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x3443) "done" in
        match Ojs.bool_of_js x3446 with
        | false -> `L_b_false
        | _ -> assert false
    let (set_done : ('tags, 'T) this -> [ `L_b_false ] -> unit) =
      fun (x3447 : ('tags, 'T) this) ->
        fun (x3448 : [ `L_b_false ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x3447) "done"
            (match x3448 with | `L_b_false -> Ojs.bool_to_js false)
    let (get_value : ('tags, 'T) this -> 'T) =
      fun (x3451 : ('tags, 'T) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x3451) "value")
    let (set_value : ('tags, 'T) this -> 'T -> unit) =
      fun (x3454 : ('tags, 'T) this) ->
        fun (x3455 : 'T) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x3454) "value"
            (Obj.magic x3455)
    let cast_from = Obj.magic
  end
module ReadableStreamDefaultReadDoneResult =
  struct
    type t = [ `ReadableStreamDefaultReadDoneResult ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3459 : Ojs.t) -> t_of_js x3459
    and t_0_to_js : t_0 -> Ojs.t = fun (x3458 : t) -> t_to_js x3458
    type tags = [ `ReadableStreamDefaultReadDoneResult ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `ReadableStreamDefaultReadDoneResult ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3462 : Ojs.t) -> intf_of_js __tags_of_js x3462
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3460 : __tags intf) -> intf_to_js __tags_to_js x3460
    let (get_done : 'tags this -> [ `L_b_true ]) =
      fun (x3464 : 'tags this) ->
        let x3466 = Ojs.get_prop_ascii (this_to_js Obj.magic x3464) "done" in
        match Ojs.bool_of_js x3466 with
        | true -> `L_b_true
        | _ -> assert false
    let (set_done : 'tags this -> [ `L_b_true ] -> unit) =
      fun (x3467 : 'tags this) ->
        fun (x3468 : [ `L_b_true ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3467) "done"
            (match x3468 with | `L_b_true -> Ojs.bool_to_js true)
    let (get_value : 'tags this -> never or_undefined) =
      fun (x3470 : 'tags this) ->
        or_undefined_of_js never_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3470) "value")
    let (set_value : 'tags this -> never or_undefined -> unit) =
      fun (x3473 : 'tags this) ->
        fun (x3474 : never or_undefined) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3473) "value"
            (or_undefined_to_js never_to_js x3474)
    let cast_from = Obj.magic
  end
module ReadableStreamDefaultReadResult =
  struct
    type 'T t =
      [ `U_b_false of 'T ReadableStreamDefaultReadValueResult.t 
      | `U_b_true of ReadableStreamDefaultReadDoneResult.t ]
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3481 : Ojs.t) ->
          let x3482 = x3481 in
          match Ojs.bool_of_js (Ojs.get_prop_ascii x3482 "done") with
          | false ->
              `U_b_false
                (ReadableStreamDefaultReadValueResult.t_of_js __T_of_js x3482)
          | true ->
              `U_b_true (ReadableStreamDefaultReadDoneResult.t_of_js x3482)
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun
          (x3477 :
            [ `U_b_false of __T ReadableStreamDefaultReadValueResult.t 
            | `U_b_true of ReadableStreamDefaultReadDoneResult.t ])
          ->
          match x3477 with
          | `U_b_false x3478 ->
              ReadableStreamDefaultReadValueResult.t_to_js __T_to_js x3478
          | `U_b_true x3480 ->
              ReadableStreamDefaultReadDoneResult.t_to_js x3480
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3486 : Ojs.t) -> t_of_js __T_of_js x3486
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x3484 : __T t) -> t_to_js __T_to_js x3484
  end
module rec
  ReadableStream:sig
                   type 'R t = [ `ReadableStream of 'R ] intf
                   type 'R t_1 = 'R t
                   type t_0 = any t
                   [@@@js.stop ]
                   type 'R tags = [ `ReadableStream of 'R ]
                   type 'R tags_1 = 'R tags
                   type tags_0 = any tags
                   [@@@js.start ]
                   [@@@js.implem
                     type 'R tags = [ `ReadableStream of 'R ]
                     type 'R tags_1 = 'R tags
                     type tags_0 = any tags]
                   type ('tags, 'R) this =
                     'tags intf constraint 'tags = [> `ReadableStream of 'R ]
                   val t_to_js : ('R -> Ojs.t) -> 'R t -> Ojs.t
                   val t_of_js : (Ojs.t -> 'R) -> Ojs.t -> 'R t
                   val t_1_to_js : ('R -> Ojs.t) -> 'R t_1 -> Ojs.t
                   val t_1_of_js : (Ojs.t -> 'R) -> Ojs.t -> 'R t_1
                   val t_0_to_js : t_0 -> Ojs.t
                   val t_0_of_js : Ojs.t -> t_0
                   val get_locked : ('tags, 'R) this -> bool
                   val cancel :
                     ('tags, 'R) this ->
                       ?reason:any -> unit -> unit Promise.t_1
                   val getReader :
                     ('tags, 'R) this -> 'R ReadableStreamDefaultReader.t
                   val pipeThrough :
                     ('tags, 'R) this ->
                       transform:('T, 'R) ReadableWritablePair.t ->
                         ?options:StreamPipeOptions.t -> unit -> 'T t
                   val pipeTo :
                     ('tags, 'R) this ->
                       destination:'R WritableStream.t ->
                         ?options:StreamPipeOptions.t ->
                           unit -> unit Promise.t_1
                   val tee : ('tags, 'R) this -> ('R t * 'R t)
                   val cast_from : ('tags, 'R) this -> 'R t
                   val prototype : unit -> t_0
                   val create :
                     ?underlyingSource:'R UnderlyingSource.t ->
                       ?strategy:'R QueuingStrategy.t -> unit -> 'R t
                 end =
  struct
    type 'R t = [ `ReadableStream of 'R ] intf
    let rec t_of_js : 'R . (Ojs.t -> 'R) -> Ojs.t -> 'R t =
      fun _R -> Obj.magic
    and t_to_js : 'R . ('R -> Ojs.t) -> 'R t -> Ojs.t = fun _R -> Obj.magic
    type 'R t_1 = 'R t
    let rec t_1_of_js : 'R . (Ojs.t -> 'R) -> Ojs.t -> 'R t_1 = fun (type
      __R) ->
      fun (__R_of_js : Ojs.t -> __R) ->
        fun (x3490 : Ojs.t) -> t_of_js __R_of_js x3490
    and t_1_to_js : 'R . ('R -> Ojs.t) -> 'R t_1 -> Ojs.t = fun (type __R) ->
      fun (__R_to_js : __R -> Ojs.t) ->
        fun (x3488 : __R t) -> t_to_js __R_to_js x3488
    type t_0 = any t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x3494 : Ojs.t) -> t_of_js any_of_js x3494
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x3492 : any t) -> t_to_js any_to_js x3492
    type 'R tags = [ `ReadableStream of 'R ]
    type 'R tags_1 = 'R tags
    type tags_0 = any tags
    type ('tags, 'R) this =
      'tags intf constraint 'tags = [> `ReadableStream of 'R ]
    let rec this_of_js :
      'tags 'R .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'R) -> Ojs.t -> ('tags, 'R) this
      = fun (type __tags) -> fun (type __R) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__R_of_js : Ojs.t -> __R) ->
          fun (x3498 : Ojs.t) -> intf_of_js __tags_of_js x3498
    and this_to_js :
      'tags 'R .
        ('tags -> Ojs.t) -> ('R -> Ojs.t) -> ('tags, 'R) this -> Ojs.t
      = fun (type __tags) -> fun (type __R) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__R_to_js : __R -> Ojs.t) ->
          fun (x3496 : __tags intf) -> intf_to_js __tags_to_js x3496
    let (get_locked : ('tags, 'R) this -> bool) =
      fun (x3500 : ('tags, 'R) this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x3500) "locked")
    let (cancel :
      ('tags, 'R) this -> ?reason:any -> unit -> unit Promise.t_1) =
      fun (x3506 : ('tags, 'R) this) ->
        fun ?reason:(x3503 : any option) ->
          fun () ->
            Promise.t_1_of_js Ojs.unit_of_js
              (let x3509 = this_to_js Obj.magic Obj.magic x3506 in
               Ojs.call (Ojs.get_prop_ascii x3509 "cancel") "apply"
                 [|x3509;((let x3504 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3503 with
                            | Some x3505 ->
                                ignore
                                  (Ojs.call x3504 "push"
                                     [|(any_to_js x3505)|])
                            | None -> ());
                           x3504))|])
    let (getReader : ('tags, 'R) this -> 'R ReadableStreamDefaultReader.t) =
      fun (x3511 : ('tags, 'R) this) ->
        ReadableStreamDefaultReader.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x3511) "getReader" [||])
    let (pipeThrough :
      ('tags, 'R) this ->
        transform:('T, 'R) ReadableWritablePair.t ->
          ?options:StreamPipeOptions.t -> unit -> 'T t)
      =
      fun (x3521 : ('tags, 'R) this) ->
        fun ~transform:(x3515 : ('T, 'R) ReadableWritablePair.t) ->
          fun ?options:(x3516 : StreamPipeOptions.t option) ->
            fun () ->
              t_of_js Obj.magic
                (let x3524 = this_to_js Obj.magic Obj.magic x3521 in
                 Ojs.call (Ojs.get_prop_ascii x3524 "pipeThrough") "apply"
                   [|x3524;((let x3517 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3517 "push"
                                  [|(ReadableWritablePair.t_to_js Obj.magic
                                       Obj.magic x3515)|]);
                             (match x3516 with
                              | Some x3518 ->
                                  ignore
                                    (Ojs.call x3517 "push"
                                       [|(StreamPipeOptions.t_to_js x3518)|])
                              | None -> ());
                             x3517))|])
    let (pipeTo :
      ('tags, 'R) this ->
        destination:'R WritableStream.t ->
          ?options:StreamPipeOptions.t -> unit -> unit Promise.t_1)
      =
      fun (x3531 : ('tags, 'R) this) ->
        fun ~destination:(x3526 : 'R WritableStream.t) ->
          fun ?options:(x3527 : StreamPipeOptions.t option) ->
            fun () ->
              Promise.t_1_of_js Ojs.unit_of_js
                (let x3534 = this_to_js Obj.magic Obj.magic x3531 in
                 Ojs.call (Ojs.get_prop_ascii x3534 "pipeTo") "apply"
                   [|x3534;((let x3528 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3528 "push"
                                  [|(WritableStream.t_to_js Obj.magic x3526)|]);
                             (match x3527 with
                              | Some x3529 ->
                                  ignore
                                    (Ojs.call x3528 "push"
                                       [|(StreamPipeOptions.t_to_js x3529)|])
                              | None -> ());
                             x3528))|])
    let (tee : ('tags, 'R) this -> ('R t * 'R t)) =
      fun (x3536 : ('tags, 'R) this) ->
        let x3539 =
          Ojs.call (this_to_js Obj.magic Obj.magic x3536) "tee" [||] in
        ((t_of_js Obj.magic (Ojs.array_get x3539 0)),
          (t_of_js Obj.magic (Ojs.array_get x3539 1)))
    let cast_from = Obj.magic
    let (prototype : unit -> t_0) =
      fun () ->
        t_0_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "ReadableStream") "prototype")
    let (create :
      ?underlyingSource:'R UnderlyingSource.t ->
        ?strategy:'R QueuingStrategy.t -> unit -> 'R t)
      =
      fun ?underlyingSource:(x3542 : 'R UnderlyingSource.t option) ->
        fun ?strategy:(x3543 : 'R QueuingStrategy.t option) ->
          fun () ->
            t_of_js Obj.magic
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "ReadableStream")
                 (let x3544 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x3542 with
                   | Some x3547 ->
                       ignore
                         (Ojs.call x3544 "push"
                            [|(UnderlyingSource.t_to_js Obj.magic x3547)|])
                   | None -> ());
                  (match x3543 with
                   | Some x3545 ->
                       ignore
                         (Ojs.call x3544 "push"
                            [|(QueuingStrategy.t_to_js Obj.magic x3545)|])
                   | None -> ());
                  x3544))
  end
 and
  ReadableStreamDefaultReader:sig
                                type 'R t =
                                  [ `ReadableStreamDefaultReader of 'R 
                                  | `ReadableStreamGenericReader ] intf
                                type 'R t_1 = 'R t
                                type t_0 = any t
                                [@@@js.stop ]
                                type 'R tags =
                                  [ `ReadableStreamDefaultReader of 'R 
                                  | `ReadableStreamGenericReader ]
                                type 'R tags_1 = 'R tags
                                type tags_0 = any tags
                                [@@@js.start ]
                                [@@@js.implem
                                  type 'R tags =
                                    [ `ReadableStreamDefaultReader of 'R 
                                    | `ReadableStreamGenericReader ]
                                  type 'R tags_1 = 'R tags
                                  type tags_0 = any tags]
                                type ('tags, 'R) this =
                                  'tags intf constraint 'tags =
                                              [>
                                                `ReadableStreamDefaultReader
                                                  of 'R ]
                                val t_to_js : ('R -> Ojs.t) -> 'R t -> Ojs.t
                                val t_of_js : (Ojs.t -> 'R) -> Ojs.t -> 'R t
                                val t_1_to_js :
                                  ('R -> Ojs.t) -> 'R t_1 -> Ojs.t
                                val t_1_of_js :
                                  (Ojs.t -> 'R) -> Ojs.t -> 'R t_1
                                val t_0_to_js : t_0 -> Ojs.t
                                val t_0_of_js : Ojs.t -> t_0
                                val read :
                                  ('tags, 'R) this ->
                                    'R ReadableStreamDefaultReadResult.t
                                      Promise.t_1
                                val releaseLock : ('tags, 'R) this -> unit
                                val cast_from : ('tags, 'R) this -> 'R t
                                val prototype : unit -> t_0
                                val create : 'R ReadableStream.t -> 'R t
                              end =
  struct
    type 'R t =
      [ `ReadableStreamDefaultReader of 'R  | `ReadableStreamGenericReader ]
        intf
    let rec t_of_js : 'R . (Ojs.t -> 'R) -> Ojs.t -> 'R t =
      fun _R -> Obj.magic
    and t_to_js : 'R . ('R -> Ojs.t) -> 'R t -> Ojs.t = fun _R -> Obj.magic
    type 'R t_1 = 'R t
    let rec t_1_of_js : 'R . (Ojs.t -> 'R) -> Ojs.t -> 'R t_1 = fun (type
      __R) ->
      fun (__R_of_js : Ojs.t -> __R) ->
        fun (x3552 : Ojs.t) -> t_of_js __R_of_js x3552
    and t_1_to_js : 'R . ('R -> Ojs.t) -> 'R t_1 -> Ojs.t = fun (type __R) ->
      fun (__R_to_js : __R -> Ojs.t) ->
        fun (x3550 : __R t) -> t_to_js __R_to_js x3550
    type t_0 = any t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x3556 : Ojs.t) -> t_of_js any_of_js x3556
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x3554 : any t) -> t_to_js any_to_js x3554
    type 'R tags =
      [ `ReadableStreamDefaultReader of 'R  | `ReadableStreamGenericReader ]
    type 'R tags_1 = 'R tags
    type tags_0 = any tags
    type ('tags, 'R) this =
      'tags intf constraint 'tags = [> `ReadableStreamDefaultReader of 'R ]
    let rec this_of_js :
      'tags 'R .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'R) -> Ojs.t -> ('tags, 'R) this
      = fun (type __tags) -> fun (type __R) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__R_of_js : Ojs.t -> __R) ->
          fun (x3560 : Ojs.t) -> intf_of_js __tags_of_js x3560
    and this_to_js :
      'tags 'R .
        ('tags -> Ojs.t) -> ('R -> Ojs.t) -> ('tags, 'R) this -> Ojs.t
      = fun (type __tags) -> fun (type __R) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__R_to_js : __R -> Ojs.t) ->
          fun (x3558 : __tags intf) -> intf_to_js __tags_to_js x3558
    let (read :
      ('tags, 'R) this -> 'R ReadableStreamDefaultReadResult.t Promise.t_1) =
      fun (x3562 : ('tags, 'R) this) ->
        Promise.t_1_of_js
          (fun (x3565 : Ojs.t) ->
             ReadableStreamDefaultReadResult.t_of_js Obj.magic x3565)
          (Ojs.call (this_to_js Obj.magic Obj.magic x3562) "read" [||])
    let (releaseLock : ('tags, 'R) this -> unit) =
      fun (x3567 : ('tags, 'R) this) ->
        ignore
          (Ojs.call (this_to_js Obj.magic Obj.magic x3567) "releaseLock" [||])
    let cast_from = Obj.magic
    let (prototype : unit -> t_0) =
      fun () ->
        t_0_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "ReadableStreamDefaultReader")
             "prototype")
    let (create : 'R ReadableStream.t -> 'R t) =
      fun (x3570 : 'R ReadableStream.t) ->
        t_of_js Obj.magic
          (Ojs.new_obj
             (Ojs.get_prop_ascii Ojs.global "ReadableStreamDefaultReader")
             [|(ReadableStream.t_to_js Obj.magic x3570)|])
  end and
       ReadableWritablePair:sig
                              type ('R, 'W) t =
                                [ `ReadableWritablePair of ('R * 'W) ] intf
                              type ('R, 'W) t_2 = ('R, 'W) t
                              type 'R t_1 = ('R, any) t
                              type t_0 = (any, any) t
                              [@@@js.stop ]
                              type ('R, 'W) tags =
                                [ `ReadableWritablePair of ('R * 'W) ]
                              type ('R, 'W) tags_2 = ('R, 'W) tags
                              type 'R tags_1 = ('R, any) tags
                              type tags_0 = (any, any) tags
                              [@@@js.start ]
                              [@@@js.implem
                                type ('R, 'W) tags =
                                  [ `ReadableWritablePair of ('R * 'W) ]
                                type ('R, 'W) tags_2 = ('R, 'W) tags
                                type 'R tags_1 = ('R, any) tags
                                type tags_0 = (any, any) tags]
                              type ('tags, 'R, 'W) this =
                                'tags intf constraint 'tags =
                                            [>
                                              `ReadableWritablePair of
                                                ('R * 'W) ]
                              val t_to_js :
                                ('R -> Ojs.t) ->
                                  ('W -> Ojs.t) -> ('R, 'W) t -> Ojs.t
                              val t_of_js :
                                (Ojs.t -> 'R) ->
                                  (Ojs.t -> 'W) -> Ojs.t -> ('R, 'W) t
                              val t_2_to_js :
                                ('R -> Ojs.t) ->
                                  ('W -> Ojs.t) -> ('R, 'W) t_2 -> Ojs.t
                              val t_2_of_js :
                                (Ojs.t -> 'R) ->
                                  (Ojs.t -> 'W) -> Ojs.t -> ('R, 'W) t_2
                              val t_1_to_js :
                                ('R -> Ojs.t) -> 'R t_1 -> Ojs.t
                              val t_1_of_js :
                                (Ojs.t -> 'R) -> Ojs.t -> 'R t_1
                              val t_0_to_js : t_0 -> Ojs.t
                              val t_0_of_js : Ojs.t -> t_0
                              val get_readable :
                                ('tags, 'R, 'W) this -> 'R ReadableStream.t
                              val set_readable :
                                ('tags, 'R, 'W) this ->
                                  'R ReadableStream.t -> unit
                              val get_writable :
                                ('tags, 'R, 'W) this -> 'W WritableStream.t
                              val set_writable :
                                ('tags, 'R, 'W) this ->
                                  'W WritableStream.t -> unit
                              val cast_from :
                                ('tags, 'R, 'W) this -> ('R, 'W) t
                            end =
       struct
         type ('R, 'W) t = [ `ReadableWritablePair of ('R * 'W) ] intf
         let rec t_of_js :
           'R 'W . (Ojs.t -> 'R) -> (Ojs.t -> 'W) -> Ojs.t -> ('R, 'W) t =
           fun _R -> fun _W -> Obj.magic
         and t_to_js :
           'R 'W . ('R -> Ojs.t) -> ('W -> Ojs.t) -> ('R, 'W) t -> Ojs.t =
           fun _R -> fun _W -> Obj.magic
         type ('R, 'W) t_2 = ('R, 'W) t
         let rec t_2_of_js :
           'R 'W . (Ojs.t -> 'R) -> (Ojs.t -> 'W) -> Ojs.t -> ('R, 'W) t_2 =
           fun (type __R) -> fun (type __W) ->
           fun (__R_of_js : Ojs.t -> __R) ->
             fun (__W_of_js : Ojs.t -> __W) ->
               fun (x3576 : Ojs.t) -> t_of_js __R_of_js __W_of_js x3576
         and t_2_to_js :
           'R 'W . ('R -> Ojs.t) -> ('W -> Ojs.t) -> ('R, 'W) t_2 -> Ojs.t =
           fun (type __R) -> fun (type __W) ->
           fun (__R_to_js : __R -> Ojs.t) ->
             fun (__W_to_js : __W -> Ojs.t) ->
               fun (x3573 : (__R, __W) t) ->
                 t_to_js __R_to_js __W_to_js x3573
         type 'R t_1 = ('R, any) t
         let rec t_1_of_js : 'R . (Ojs.t -> 'R) -> Ojs.t -> 'R t_1 = fun
           (type __R) ->
           fun (__R_of_js : Ojs.t -> __R) ->
             fun (x3582 : Ojs.t) -> t_of_js __R_of_js any_of_js x3582
         and t_1_to_js : 'R . ('R -> Ojs.t) -> 'R t_1 -> Ojs.t = fun (type
           __R) ->
           fun (__R_to_js : __R -> Ojs.t) ->
             fun (x3579 : (__R, any) t) -> t_to_js __R_to_js any_to_js x3579
         type t_0 = (any, any) t
         let rec t_0_of_js : Ojs.t -> t_0 =
           fun (x3588 : Ojs.t) -> t_of_js any_of_js any_of_js x3588
         and t_0_to_js : t_0 -> Ojs.t =
           fun (x3585 : (any, any) t) -> t_to_js any_to_js any_to_js x3585
         type ('R, 'W) tags = [ `ReadableWritablePair of ('R * 'W) ]
         type ('R, 'W) tags_2 = ('R, 'W) tags
         type 'R tags_1 = ('R, any) tags
         type tags_0 = (any, any) tags
         type ('tags, 'R, 'W) this =
           'tags intf constraint 'tags =
                       [> `ReadableWritablePair of ('R * 'W) ]
         let rec this_of_js :
           'tags 'R 'W .
             (Ojs.t -> 'tags) ->
               (Ojs.t -> 'R) ->
                 (Ojs.t -> 'W) -> Ojs.t -> ('tags, 'R, 'W) this
           = fun (type __tags) -> fun (type __R) -> fun (type __W) ->
           fun (__tags_of_js : Ojs.t -> __tags) ->
             fun (__R_of_js : Ojs.t -> __R) ->
               fun (__W_of_js : Ojs.t -> __W) ->
                 fun (x3593 : Ojs.t) -> intf_of_js __tags_of_js x3593
         and this_to_js :
           'tags 'R 'W .
             ('tags -> Ojs.t) ->
               ('R -> Ojs.t) ->
                 ('W -> Ojs.t) -> ('tags, 'R, 'W) this -> Ojs.t
           = fun (type __tags) -> fun (type __R) -> fun (type __W) ->
           fun (__tags_to_js : __tags -> Ojs.t) ->
             fun (__R_to_js : __R -> Ojs.t) ->
               fun (__W_to_js : __W -> Ojs.t) ->
                 fun (x3591 : __tags intf) -> intf_to_js __tags_to_js x3591
         let (get_readable : ('tags, 'R, 'W) this -> 'R ReadableStream.t) =
           fun (x3595 : ('tags, 'R, 'W) this) ->
             ReadableStream.t_of_js Obj.magic
               (Ojs.get_prop_ascii
                  (this_to_js Obj.magic Obj.magic Obj.magic x3595) "readable")
         let (set_readable :
           ('tags, 'R, 'W) this -> 'R ReadableStream.t -> unit) =
           fun (x3600 : ('tags, 'R, 'W) this) ->
             fun (x3601 : 'R ReadableStream.t) ->
               Ojs.set_prop_ascii
                 (this_to_js Obj.magic Obj.magic Obj.magic x3600) "readable"
                 (ReadableStream.t_to_js Obj.magic x3601)
         let (get_writable : ('tags, 'R, 'W) this -> 'W WritableStream.t) =
           fun (x3606 : ('tags, 'R, 'W) this) ->
             WritableStream.t_of_js Obj.magic
               (Ojs.get_prop_ascii
                  (this_to_js Obj.magic Obj.magic Obj.magic x3606) "writable")
         let (set_writable :
           ('tags, 'R, 'W) this -> 'W WritableStream.t -> unit) =
           fun (x3611 : ('tags, 'R, 'W) this) ->
             fun (x3612 : 'W WritableStream.t) ->
               Ojs.set_prop_ascii
                 (this_to_js Obj.magic Obj.magic Obj.magic x3611) "writable"
                 (WritableStream.t_to_js Obj.magic x3612)
         let cast_from = Obj.magic
       end
module rec
  Blob:sig
         type t = [ `Blob ] intf
         type t_0 = t
         [@@@js.stop ]
         type tags = [ `Blob ]
         type tags_0 = tags
         [@@@js.start ]
         [@@@js.implem type tags = [ `Blob ]
           type tags_0 = tags]
         type 'tags this = 'tags intf constraint 'tags = [> `Blob ]
         val t_to_js : t -> Ojs.t
         val t_of_js : Ojs.t -> t
         val t_0_to_js : t_0 -> Ojs.t
         val t_0_of_js : Ojs.t -> t_0
         val get_size : 'tags this -> float
         val get_type : 'tags this -> string
         val arrayBuffer : 'tags this -> ArrayBuffer.t_0 Promise.t_1
         val slice :
           'tags this ->
             ?start:float -> ?end_:float -> ?contentType:string -> unit -> t
         val stream : 'tags this -> ReadableStream.t_0
         val text : 'tags this -> string Promise.t_1
         val cast_from : 'tags this -> t
         val prototype : unit -> t
         val create :
           ?blobParts:BlobPart.t list ->
             ?options:BlobPropertyBag.t -> unit -> t
       end =
  struct
    type t = [ `Blob ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3618 : Ojs.t) -> t_of_js x3618
    and t_0_to_js : t_0 -> Ojs.t = fun (x3617 : t) -> t_to_js x3617
    type tags = [ `Blob ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Blob ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3621 : Ojs.t) -> intf_of_js __tags_of_js x3621
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3619 : __tags intf) -> intf_to_js __tags_to_js x3619
    let (get_size : 'tags this -> float) =
      fun (x3623 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3623) "size")
    let (get_type : 'tags this -> string) =
      fun (x3625 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3625) "type")
    let (arrayBuffer : 'tags this -> ArrayBuffer.t_0 Promise.t_1) =
      fun (x3627 : 'tags this) ->
        Promise.t_1_of_js ArrayBuffer.t_0_of_js
          (Ojs.call (this_to_js Obj.magic x3627) "arrayBuffer" [||])
    let (slice :
      'tags this ->
        ?start:float -> ?end_:float -> ?contentType:string -> unit -> t)
      =
      fun (x3637 : 'tags this) ->
        fun ?start:(x3630 : float option) ->
          fun ?end_:(x3631 : float option) ->
            fun ?contentType:(x3632 : string option) ->
              fun () ->
                t_of_js
                  (let x3639 = this_to_js Obj.magic x3637 in
                   Ojs.call (Ojs.get_prop_ascii x3639 "slice") "apply"
                     [|x3639;((let x3633 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x3630 with
                                | Some x3636 ->
                                    ignore
                                      (Ojs.call x3633 "push"
                                         [|(Ojs.float_to_js x3636)|])
                                | None -> ());
                               (match x3631 with
                                | Some x3635 ->
                                    ignore
                                      (Ojs.call x3633 "push"
                                         [|(Ojs.float_to_js x3635)|])
                                | None -> ());
                               (match x3632 with
                                | Some x3634 ->
                                    ignore
                                      (Ojs.call x3633 "push"
                                         [|(Ojs.string_to_js x3634)|])
                                | None -> ());
                               x3633))|])
    let (stream : 'tags this -> ReadableStream.t_0) =
      fun (x3640 : 'tags this) ->
        ReadableStream.t_0_of_js
          (Ojs.call (this_to_js Obj.magic x3640) "stream" [||])
    let (text : 'tags this -> string Promise.t_1) =
      fun (x3642 : 'tags this) ->
        Promise.t_1_of_js Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3642) "text" [||])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Blob")
             "prototype")
    let (create :
      ?blobParts:BlobPart.t list -> ?options:BlobPropertyBag.t -> unit -> t)
      =
      fun ?blobParts:(x3645 : BlobPart.t list option) ->
        fun ?options:(x3646 : BlobPropertyBag.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Blob")
                 (let x3647 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x3645 with
                   | Some x3649 ->
                       ignore
                         (Ojs.call x3647 "push"
                            [|(Ojs.list_to_js BlobPart.t_to_js x3649)|])
                   | None -> ());
                  (match x3646 with
                   | Some x3648 ->
                       ignore
                         (Ojs.call x3647 "push"
                            [|(BlobPropertyBag.t_to_js x3648)|])
                   | None -> ());
                  x3647))
  end
 and
  BlobPart:sig
             type t = Blob.t or_string
             type t_0 = t
             val t_to_js : t -> Ojs.t
             val t_of_js : Ojs.t -> t
             val t_0_to_js : t_0 -> Ojs.t
             val t_0_of_js : Ojs.t -> t_0
           end =
  struct
    type t = Blob.t or_string
    let rec t_of_js : Ojs.t -> t =
      fun (x3653 : Ojs.t) -> or_string_of_js Blob.t_of_js x3653
    and t_to_js : t -> Ojs.t =
      fun (x3651 : Blob.t or_string) -> or_string_to_js Blob.t_to_js x3651
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3656 : Ojs.t) -> t_of_js x3656
    and t_0_to_js : t_0 -> Ojs.t = fun (x3655 : t) -> t_to_js x3655
  end
module File =
  struct
    type t = [ `Blob  | `File ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3658 : Ojs.t) -> t_of_js x3658
    and t_0_to_js : t_0 -> Ojs.t = fun (x3657 : t) -> t_to_js x3657
    type tags = [ `Blob  | `File ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `File ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3661 : Ojs.t) -> intf_of_js __tags_of_js x3661
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3659 : __tags intf) -> intf_to_js __tags_to_js x3659
    let (get_lastModified : 'tags this -> float) =
      fun (x3663 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3663) "lastModified")
    let (get_name : 'tags this -> string) =
      fun (x3665 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3665) "name")
    let (get_webkitRelativePath : 'tags this -> string) =
      fun (x3667 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3667)
             "webkitRelativePath")
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "File")
             "prototype")
    let (create :
      fileBits:BlobPart.t list ->
        fileName:string -> ?options:FilePropertyBag.t -> unit -> t)
      =
      fun ~fileBits:(x3669 : BlobPart.t list) ->
        fun ~fileName:(x3670 : string) ->
          fun ?options:(x3671 : FilePropertyBag.t option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "File")
                   (let x3672 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x3672 "push"
                         [|(Ojs.list_to_js BlobPart.t_to_js x3669)|]);
                    ignore
                      (Ojs.call x3672 "push" [|(Ojs.string_to_js x3670)|]);
                    (match x3671 with
                     | Some x3673 ->
                         ignore
                           (Ojs.call x3672 "push"
                              [|(FilePropertyBag.t_to_js x3673)|])
                     | None -> ());
                    x3672))
  end
module FormDataEntryValue =
  struct
    type t = File.t or_string
    let rec t_of_js : Ojs.t -> t =
      fun (x3677 : Ojs.t) -> or_string_of_js File.t_of_js x3677
    and t_to_js : t -> Ojs.t =
      fun (x3675 : File.t or_string) -> or_string_to_js File.t_to_js x3675
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3680 : Ojs.t) -> t_of_js x3680
    and t_0_to_js : t_0 -> Ojs.t = fun (x3679 : t) -> t_to_js x3679
  end
module FormData =
  struct
    type t =
      [ `FormData  | (string * FormDataEntryValue.t) IterableIterator.tags_1]
        intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3682 : Ojs.t) -> t_of_js x3682
    and t_0_to_js : t_0 -> Ojs.t = fun (x3681 : t) -> t_to_js x3681
    type tags =
      [ `FormData  | (string * FormDataEntryValue.t) IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `FormData ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3685 : Ojs.t) -> intf_of_js __tags_of_js x3685
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3683 : __tags intf) -> intf_to_js __tags_to_js x3683
    let (entries :
      'tags this -> (string * FormDataEntryValue.t) IterableIterator.t_1) =
      fun (x3687 : 'tags this) ->
        IterableIterator.t_1_of_js
          (fun (x3689 : Ojs.t) ->
             let x3690 = x3689 in
             ((Ojs.string_of_js (Ojs.array_get x3690 0)),
               (FormDataEntryValue.t_of_js (Ojs.array_get x3690 1))))
          (Ojs.call (this_to_js Obj.magic x3687) "entries" [||])
    let (keys : 'tags this -> string IterableIterator.t_1) =
      fun (x3691 : 'tags this) ->
        IterableIterator.t_1_of_js Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3691) "keys" [||])
    let (values : 'tags this -> FormDataEntryValue.t IterableIterator.t_1) =
      fun (x3694 : 'tags this) ->
        IterableIterator.t_1_of_js FormDataEntryValue.t_of_js
          (Ojs.call (this_to_js Obj.magic x3694) "values" [||])
    let (append :
      'tags this ->
        name:string ->
          value:Blob.t or_string -> ?fileName:string -> unit -> unit)
      =
      fun (x3703 : 'tags this) ->
        fun ~name:(x3697 : string) ->
          fun ~value:(x3698 : Blob.t or_string) ->
            fun ?fileName:(x3699 : string option) ->
              fun () ->
                ignore
                  (let x3705 = this_to_js Obj.magic x3703 in
                   Ojs.call (Ojs.get_prop_ascii x3705 "append") "apply"
                     [|x3705;((let x3700 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3700 "push"
                                    [|(Ojs.string_to_js x3697)|]);
                               ignore
                                 (Ojs.call x3700 "push"
                                    [|(or_string_to_js Blob.t_to_js x3698)|]);
                               (match x3699 with
                                | Some x3701 ->
                                    ignore
                                      (Ojs.call x3700 "push"
                                         [|(Ojs.string_to_js x3701)|])
                                | None -> ());
                               x3700))|])
    let (delete : 'tags this -> name:string -> unit) =
      fun (x3707 : 'tags this) ->
        fun ~name:(x3706 : string) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x3707) "delete"
               [|(Ojs.string_to_js x3706)|])
    let (get_ : 'tags this -> name:string -> FormDataEntryValue.t or_null) =
      fun (x3710 : 'tags this) ->
        fun ~name:(x3709 : string) ->
          or_null_of_js FormDataEntryValue.t_of_js
            (Ojs.call (this_to_js Obj.magic x3710) "get"
               [|(Ojs.string_to_js x3709)|])
    let (getAll : 'tags this -> name:string -> FormDataEntryValue.t list) =
      fun (x3714 : 'tags this) ->
        fun ~name:(x3713 : string) ->
          Ojs.list_of_js FormDataEntryValue.t_of_js
            (Ojs.call (this_to_js Obj.magic x3714) "getAll"
               [|(Ojs.string_to_js x3713)|])
    let (has : 'tags this -> name:string -> bool) =
      fun (x3718 : 'tags this) ->
        fun ~name:(x3717 : string) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x3718) "has"
               [|(Ojs.string_to_js x3717)|])
    let (set_ :
      'tags this ->
        name:string ->
          value:Blob.t or_string -> ?fileName:string -> unit -> unit)
      =
      fun (x3726 : 'tags this) ->
        fun ~name:(x3720 : string) ->
          fun ~value:(x3721 : Blob.t or_string) ->
            fun ?fileName:(x3722 : string option) ->
              fun () ->
                ignore
                  (let x3728 = this_to_js Obj.magic x3726 in
                   Ojs.call (Ojs.get_prop_ascii x3728 "set") "apply"
                     [|x3728;((let x3723 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3723 "push"
                                    [|(Ojs.string_to_js x3720)|]);
                               ignore
                                 (Ojs.call x3723 "push"
                                    [|(or_string_to_js Blob.t_to_js x3721)|]);
                               (match x3722 with
                                | Some x3724 ->
                                    ignore
                                      (Ojs.call x3723 "push"
                                         [|(Ojs.string_to_js x3724)|])
                                | None -> ());
                               x3723))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:FormDataEntryValue.t ->
                      key:string -> parent:t -> unit)
          -> ?thisArg:any -> unit -> unit)
      =
      fun (x3736 : 'tags this) ->
        fun
          ~callbackfn:(x3729 :
                        value:FormDataEntryValue.t ->
                          key:string -> parent:t -> unit)
          ->
          fun ?thisArg:(x3730 : any option) ->
            fun () ->
              ignore
                (let x3738 = this_to_js Obj.magic x3736 in
                 Ojs.call (Ojs.get_prop_ascii x3738 "forEach") "apply"
                   [|x3738;((let x3731 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3731 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3733 : Ojs.t) ->
                                          fun (x3734 : Ojs.t) ->
                                            fun (x3735 : Ojs.t) ->
                                              x3729
                                                ~value:(FormDataEntryValue.t_of_js
                                                          x3733)
                                                ~key:(Ojs.string_of_js x3734)
                                                ~parent:(t_of_js x3735)))|]);
                             (match x3730 with
                              | Some x3732 ->
                                  ignore
                                    (Ojs.call x3731 "push"
                                       [|(any_to_js x3732)|])
                              | None -> ());
                             x3731))|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "FormData")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FormData") [||])
  end
module URLSearchParams =
  struct
    type t =
      [ `URLSearchParams  | (string * string) IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3740 : Ojs.t) -> t_of_js x3740
    and t_0_to_js : t_0 -> Ojs.t = fun (x3739 : t) -> t_to_js x3739
    type tags =
      [ `URLSearchParams  | (string * string) IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `URLSearchParams ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3743 : Ojs.t) -> intf_of_js __tags_of_js x3743
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3741 : __tags intf) -> intf_to_js __tags_to_js x3741
    let (entries : 'tags this -> (string * string) IterableIterator.t_1) =
      fun (x3745 : 'tags this) ->
        IterableIterator.t_1_of_js
          (fun (x3747 : Ojs.t) ->
             let x3748 = x3747 in
             ((Ojs.string_of_js (Ojs.array_get x3748 0)),
               (Ojs.string_of_js (Ojs.array_get x3748 1))))
          (Ojs.call (this_to_js Obj.magic x3745) "entries" [||])
    let (keys : 'tags this -> string IterableIterator.t_1) =
      fun (x3749 : 'tags this) ->
        IterableIterator.t_1_of_js Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3749) "keys" [||])
    let (values : 'tags this -> string IterableIterator.t_1) =
      fun (x3752 : 'tags this) ->
        IterableIterator.t_1_of_js Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3752) "values" [||])
    let (append : 'tags this -> name:string -> value:string -> unit) =
      fun (x3757 : 'tags this) ->
        fun ~name:(x3755 : string) ->
          fun ~value:(x3756 : string) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x3757) "append"
                 [|(Ojs.string_to_js x3755);(Ojs.string_to_js x3756)|])
    let (delete : 'tags this -> name:string -> unit) =
      fun (x3760 : 'tags this) ->
        fun ~name:(x3759 : string) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x3760) "delete"
               [|(Ojs.string_to_js x3759)|])
    let (get_ : 'tags this -> name:string -> string or_null) =
      fun (x3763 : 'tags this) ->
        fun ~name:(x3762 : string) ->
          or_null_of_js Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3763) "get"
               [|(Ojs.string_to_js x3762)|])
    let (getAll : 'tags this -> name:string -> string list) =
      fun (x3767 : 'tags this) ->
        fun ~name:(x3766 : string) ->
          Ojs.list_of_js Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3767) "getAll"
               [|(Ojs.string_to_js x3766)|])
    let (has : 'tags this -> name:string -> bool) =
      fun (x3771 : 'tags this) ->
        fun ~name:(x3770 : string) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x3771) "has"
               [|(Ojs.string_to_js x3770)|])
    let (set_ : 'tags this -> name:string -> value:string -> unit) =
      fun (x3775 : 'tags this) ->
        fun ~name:(x3773 : string) ->
          fun ~value:(x3774 : string) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x3775) "set"
                 [|(Ojs.string_to_js x3773);(Ojs.string_to_js x3774)|])
    let (sort : 'tags this -> unit) =
      fun (x3777 : 'tags this) ->
        ignore (Ojs.call (this_to_js Obj.magic x3777) "sort" [||])
    let (toString : 'tags this -> string) =
      fun (x3779 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3779) "toString" [||])
    let (forEach :
      'tags this ->
        callbackfn:(value:string -> key:string -> parent:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x3788 : 'tags this) ->
        fun
          ~callbackfn:(x3781 :
                        value:string -> key:string -> parent:t -> unit)
          ->
          fun ?thisArg:(x3782 : any option) ->
            fun () ->
              ignore
                (let x3790 = this_to_js Obj.magic x3788 in
                 Ojs.call (Ojs.get_prop_ascii x3790 "forEach") "apply"
                   [|x3790;((let x3783 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3783 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3785 : Ojs.t) ->
                                          fun (x3786 : Ojs.t) ->
                                            fun (x3787 : Ojs.t) ->
                                              x3781
                                                ~value:(Ojs.string_of_js
                                                          x3785)
                                                ~key:(Ojs.string_of_js x3786)
                                                ~parent:(t_of_js x3787)))|]);
                             (match x3782 with
                              | Some x3784 ->
                                  ignore
                                    (Ojs.call x3783 "push"
                                       [|(any_to_js x3784)|])
                              | None -> ());
                             x3783))|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "URLSearchParams") "prototype")
    let (create : ?init:(t, string list) or_array or_string -> unit -> t) =
      fun ?init:(x3791 : (t, string list) or_array or_string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr
               (Ojs.get_prop_ascii Ojs.global "URLSearchParams")
               (let x3792 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x3791 with
                 | Some x3793 ->
                     ignore
                       (Ojs.call x3792 "push"
                          [|(or_string_to_js
                               (fun (x3794 : (t, string list) or_array) ->
                                  or_array_to_js t_to_js
                                    (fun (x3796 : string list) ->
                                       Ojs.list_to_js Ojs.string_to_js x3796)
                                    x3794) x3793)|])
                 | None -> ());
                x3792))
    let (toString' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "URLSearchParams")
             "toString" [||])
  end
module XMLHttpRequestBodyInit =
  struct
    type t = (Blob.t, FormData.t, URLSearchParams.t) union3 or_string
    let rec t_of_js : Ojs.t -> t =
      fun (x3803 : Ojs.t) ->
        or_string_of_js
          (fun (x3804 : Ojs.t) ->
             union3_of_js Blob.t_of_js FormData.t_of_js
               URLSearchParams.t_of_js x3804) x3803
    and t_to_js : t -> Ojs.t =
      fun (x3798 : (Blob.t, FormData.t, URLSearchParams.t) union3 or_string)
        ->
        or_string_to_js
          (fun (x3799 : (Blob.t, FormData.t, URLSearchParams.t) union3) ->
             union3_to_js Blob.t_to_js FormData.t_to_js
               URLSearchParams.t_to_js x3799) x3798
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3809 : Ojs.t) -> t_of_js x3809
    and t_0_to_js : t_0 -> Ojs.t = fun (x3808 : t) -> t_to_js x3808
  end
module BodyInit =
  struct
    type t = (ReadableStream.t_0, XMLHttpRequestBodyInit.t) union2
    let rec t_of_js : Ojs.t -> t =
      fun (x3813 : Ojs.t) ->
        union2_of_js ReadableStream.t_0_of_js XMLHttpRequestBodyInit.t_of_js
          x3813
    and t_to_js : t -> Ojs.t =
      fun (x3810 : (ReadableStream.t_0, XMLHttpRequestBodyInit.t) union2) ->
        union2_to_js ReadableStream.t_0_to_js XMLHttpRequestBodyInit.t_to_js
          x3810
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3817 : Ojs.t) -> t_of_js x3817
    and t_0_to_js : t_0 -> Ojs.t = fun (x3816 : t) -> t_to_js x3816
  end
module Body =
  struct
    type t = [ `Body ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3819 : Ojs.t) -> t_of_js x3819
    and t_0_to_js : t_0 -> Ojs.t = fun (x3818 : t) -> t_to_js x3818
    type tags = [ `Body ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Body ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3822 : Ojs.t) -> intf_of_js __tags_of_js x3822
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3820 : __tags intf) -> intf_to_js __tags_to_js x3820
    let (get_body : 'tags this -> Uint8Array.t_0 ReadableStream.t or_null) =
      fun (x3824 : 'tags this) ->
        or_null_of_js
          (fun (x3826 : Ojs.t) ->
             ReadableStream.t_of_js Uint8Array.t_0_of_js x3826)
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3824) "body")
    let (get_bodyUsed : 'tags this -> bool) =
      fun (x3828 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3828) "bodyUsed")
    let (arrayBuffer : 'tags this -> ArrayBuffer.t_0 Promise.t_1) =
      fun (x3830 : 'tags this) ->
        Promise.t_1_of_js ArrayBuffer.t_0_of_js
          (Ojs.call (this_to_js Obj.magic x3830) "arrayBuffer" [||])
    let (blob : 'tags this -> Blob.t Promise.t_1) =
      fun (x3833 : 'tags this) ->
        Promise.t_1_of_js Blob.t_of_js
          (Ojs.call (this_to_js Obj.magic x3833) "blob" [||])
    let (formData : 'tags this -> FormData.t Promise.t_1) =
      fun (x3836 : 'tags this) ->
        Promise.t_1_of_js FormData.t_of_js
          (Ojs.call (this_to_js Obj.magic x3836) "formData" [||])
    let (json : 'tags this -> any Promise.t_1) =
      fun (x3839 : 'tags this) ->
        Promise.t_1_of_js any_of_js
          (Ojs.call (this_to_js Obj.magic x3839) "json" [||])
    let (text : 'tags this -> string Promise.t_1) =
      fun (x3842 : 'tags this) ->
        Promise.t_1_of_js Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3842) "text" [||])
    let cast_from = Obj.magic
  end
module URL =
  struct
    type t = [ `URL ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3846 : Ojs.t) -> t_of_js x3846
    and t_0_to_js : t_0 -> Ojs.t = fun (x3845 : t) -> t_to_js x3845
    type tags = [ `URL ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `URL ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3849 : Ojs.t) -> intf_of_js __tags_of_js x3849
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3847 : __tags intf) -> intf_to_js __tags_to_js x3847
    let (get_hash : 'tags this -> string) =
      fun (x3851 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3851) "hash")
    let (set_hash : 'tags this -> string -> unit) =
      fun (x3853 : 'tags this) ->
        fun (x3854 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3853) "hash"
            (Ojs.string_to_js x3854)
    let (get_host : 'tags this -> string) =
      fun (x3856 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3856) "host")
    let (set_host : 'tags this -> string -> unit) =
      fun (x3858 : 'tags this) ->
        fun (x3859 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3858) "host"
            (Ojs.string_to_js x3859)
    let (get_hostname : 'tags this -> string) =
      fun (x3861 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3861) "hostname")
    let (set_hostname : 'tags this -> string -> unit) =
      fun (x3863 : 'tags this) ->
        fun (x3864 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3863) "hostname"
            (Ojs.string_to_js x3864)
    let (get_href : 'tags this -> string) =
      fun (x3866 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3866) "href")
    let (set_href : 'tags this -> string -> unit) =
      fun (x3868 : 'tags this) ->
        fun (x3869 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3868) "href"
            (Ojs.string_to_js x3869)
    let (toString : 'tags this -> string) =
      fun (x3871 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3871) "toString" [||])
    let (get_origin : 'tags this -> string) =
      fun (x3873 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3873) "origin")
    let (get_password : 'tags this -> string) =
      fun (x3875 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3875) "password")
    let (set_password : 'tags this -> string -> unit) =
      fun (x3877 : 'tags this) ->
        fun (x3878 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3877) "password"
            (Ojs.string_to_js x3878)
    let (get_pathname : 'tags this -> string) =
      fun (x3880 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3880) "pathname")
    let (set_pathname : 'tags this -> string -> unit) =
      fun (x3882 : 'tags this) ->
        fun (x3883 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3882) "pathname"
            (Ojs.string_to_js x3883)
    let (get_port : 'tags this -> string) =
      fun (x3885 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3885) "port")
    let (set_port : 'tags this -> string -> unit) =
      fun (x3887 : 'tags this) ->
        fun (x3888 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3887) "port"
            (Ojs.string_to_js x3888)
    let (get_protocol : 'tags this -> string) =
      fun (x3890 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3890) "protocol")
    let (set_protocol : 'tags this -> string -> unit) =
      fun (x3892 : 'tags this) ->
        fun (x3893 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3892) "protocol"
            (Ojs.string_to_js x3893)
    let (get_search : 'tags this -> string) =
      fun (x3895 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3895) "search")
    let (set_search : 'tags this -> string -> unit) =
      fun (x3897 : 'tags this) ->
        fun (x3898 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3897) "search"
            (Ojs.string_to_js x3898)
    let (get_searchParams : 'tags this -> URLSearchParams.t) =
      fun (x3900 : 'tags this) ->
        URLSearchParams.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3900) "searchParams")
    let (get_username : 'tags this -> string) =
      fun (x3902 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3902) "username")
    let (set_username : 'tags this -> string -> unit) =
      fun (x3904 : 'tags this) ->
        fun (x3905 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3904) "username"
            (Ojs.string_to_js x3905)
    let (toJSON : 'tags this -> string) =
      fun (x3907 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3907) "toJSON" [||])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "URL")
             "prototype")
    let (create : url:t or_string -> ?base:t or_string -> unit -> t) =
      fun ~url:(x3909 : t or_string) ->
        fun ?base:(x3910 : t or_string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "URL")
                 (let x3911 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x3911 "push"
                       [|(or_string_to_js t_to_js x3909)|]);
                  (match x3910 with
                   | Some x3912 ->
                       ignore
                         (Ojs.call x3911 "push"
                            [|(or_string_to_js t_to_js x3912)|])
                   | None -> ());
                  x3911))
    let (createObjectURL : Blob.t -> string) =
      fun (x3915 : Blob.t) ->
        Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "URL") "createObjectURL"
             [|(Blob.t_to_js x3915)|])
    let (revokeObjectURL : string -> unit) =
      fun (x3916 : string) ->
        ignore
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "URL") "revokeObjectURL"
             [|(Ojs.string_to_js x3916)|])
  end
module Response =
  struct
    type t = [ `Body  | `Response ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3918 : Ojs.t) -> t_of_js x3918
    and t_0_to_js : t_0 -> Ojs.t = fun (x3917 : t) -> t_to_js x3917
    type tags = [ `Body  | `Response ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Response ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3921 : Ojs.t) -> intf_of_js __tags_of_js x3921
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3919 : __tags intf) -> intf_to_js __tags_to_js x3919
    let (get_headers : 'tags this -> Headers.t) =
      fun (x3923 : 'tags this) ->
        Headers.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3923) "headers")
    let (get_ok : 'tags this -> bool) =
      fun (x3925 : 'tags this) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x3925) "ok")
    let (get_redirected : 'tags this -> bool) =
      fun (x3927 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3927) "redirected")
    let (get_status : 'tags this -> float) =
      fun (x3929 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3929) "status")
    let (get_statusText : 'tags this -> string) =
      fun (x3931 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3931) "statusText")
    let (get_type : 'tags this -> ResponseType.t) =
      fun (x3933 : 'tags this) ->
        ResponseType.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3933) "type")
    let (get_url : 'tags this -> string) =
      fun (x3935 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3935) "url")
    let (clone : 'tags this -> t) =
      fun (x3937 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x3937) "clone" [||])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Response")
             "prototype")
    let (create :
      ?body:BodyInit.t or_null -> ?init:ResponseInit.t -> unit -> t) =
      fun ?body:(x3939 : BodyInit.t or_null option) ->
        fun ?init:(x3940 : ResponseInit.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Response")
                 (let x3941 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x3939 with
                   | Some x3943 ->
                       ignore
                         (Ojs.call x3941 "push"
                            [|(or_null_to_js BodyInit.t_to_js x3943)|])
                   | None -> ());
                  (match x3940 with
                   | Some x3942 ->
                       ignore
                         (Ojs.call x3941 "push"
                            [|(ResponseInit.t_to_js x3942)|])
                   | None -> ());
                  x3941))
    let (error : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Response") "error" [||])
    let (redirect : url:URL.t or_string -> ?status:float -> unit -> t) =
      fun ~url:(x3945 : URL.t or_string) ->
        fun ?status:(x3946 : float option) ->
          fun () ->
            t_of_js
              (let x3950 = Ojs.get_prop_ascii Ojs.global "Response" in
               Ojs.call (Ojs.get_prop_ascii x3950 "redirect") "apply"
                 [|x3950;((let x3947 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x3947 "push"
                                [|(or_string_to_js URL.t_to_js x3945)|]);
                           (match x3946 with
                            | Some x3948 ->
                                ignore
                                  (Ojs.call x3947 "push"
                                     [|(Ojs.float_to_js x3948)|])
                            | None -> ());
                           x3947))|])
  end
module RequestRedirect =
  struct
    type t = [ `L_s110_manual  | `L_s67_error  | `L_s75_follow ]
    let rec t_of_js : Ojs.t -> t =
      fun (x3952 : Ojs.t) ->
        let x3953 = x3952 in
        match Ojs.string_of_js x3953 with
        | "manual" -> `L_s110_manual
        | "error" -> `L_s67_error
        | "follow" -> `L_s75_follow
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun (x3951 : [ `L_s110_manual  | `L_s67_error  | `L_s75_follow ]) ->
        match x3951 with
        | `L_s110_manual -> Ojs.string_to_js "manual"
        | `L_s67_error -> Ojs.string_to_js "error"
        | `L_s75_follow -> Ojs.string_to_js "follow"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3955 : Ojs.t) -> t_of_js x3955
    and t_0_to_js : t_0 -> Ojs.t = fun (x3954 : t) -> t_to_js x3954
  end
module RequestMode =
  struct
    type t =
      [ `L_s119_navigate  | `L_s124_no_cors  | `L_s172_same_origin 
      | `L_s55_cors ]
    let rec t_of_js : Ojs.t -> t =
      fun (x3957 : Ojs.t) ->
        let x3958 = x3957 in
        match Ojs.string_of_js x3958 with
        | "navigate" -> `L_s119_navigate
        | "no-cors" -> `L_s124_no_cors
        | "same-origin" -> `L_s172_same_origin
        | "cors" -> `L_s55_cors
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun
        (x3956 :
          [ `L_s119_navigate  | `L_s124_no_cors  | `L_s172_same_origin 
          | `L_s55_cors ])
        ->
        match x3956 with
        | `L_s119_navigate -> Ojs.string_to_js "navigate"
        | `L_s124_no_cors -> Ojs.string_to_js "no-cors"
        | `L_s172_same_origin -> Ojs.string_to_js "same-origin"
        | `L_s55_cors -> Ojs.string_to_js "cors"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3960 : Ojs.t) -> t_of_js x3960
    and t_0_to_js : t_0 -> Ojs.t = fun (x3959 : t) -> t_to_js x3959
  end
module RequestCache =
  struct
    type t =
      [ `L_s123_no_cache  | `L_s127_no_store  | `L_s136_only_if_cached 
      | `L_s168_reload  | `L_s57_default  | `L_s77_force_cache ]
    let rec t_of_js : Ojs.t -> t =
      fun (x3962 : Ojs.t) ->
        let x3963 = x3962 in
        match Ojs.string_of_js x3963 with
        | "no-cache" -> `L_s123_no_cache
        | "no-store" -> `L_s127_no_store
        | "only-if-cached" -> `L_s136_only_if_cached
        | "reload" -> `L_s168_reload
        | "default" -> `L_s57_default
        | "force-cache" -> `L_s77_force_cache
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun
        (x3961 :
          [ `L_s123_no_cache  | `L_s127_no_store  | `L_s136_only_if_cached 
          | `L_s168_reload  | `L_s57_default  | `L_s77_force_cache ])
        ->
        match x3961 with
        | `L_s123_no_cache -> Ojs.string_to_js "no-cache"
        | `L_s127_no_store -> Ojs.string_to_js "no-store"
        | `L_s136_only_if_cached -> Ojs.string_to_js "only-if-cached"
        | `L_s168_reload -> Ojs.string_to_js "reload"
        | `L_s57_default -> Ojs.string_to_js "default"
        | `L_s77_force_cache -> Ojs.string_to_js "force-cache"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3965 : Ojs.t) -> t_of_js x3965
    and t_0_to_js : t_0 -> Ojs.t = fun (x3964 : t) -> t_to_js x3964
  end
module ReferrerPolicy =
  struct
    type t =
      [ `L_s0  | `L_s125_no_referrer  | `L_s126_no_referrer_when_downgrade 
      | `L_s140_origin  | `L_s141_origin_when_cross_origin 
      | `L_s172_same_origin  | `L_s185_strict_origin 
      | `L_s186_strict_origin_when_cross_origin  | `L_s198_unsafe_url ]
    let rec t_of_js : Ojs.t -> t =
      fun (x3967 : Ojs.t) ->
        let x3968 = x3967 in
        match Ojs.string_of_js x3968 with
        | "" -> `L_s0
        | "no-referrer" -> `L_s125_no_referrer
        | "no-referrer-when-downgrade" -> `L_s126_no_referrer_when_downgrade
        | "origin" -> `L_s140_origin
        | "origin-when-cross-origin" -> `L_s141_origin_when_cross_origin
        | "same-origin" -> `L_s172_same_origin
        | "strict-origin" -> `L_s185_strict_origin
        | "strict-origin-when-cross-origin" ->
            `L_s186_strict_origin_when_cross_origin
        | "unsafe-url" -> `L_s198_unsafe_url
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun
        (x3966 :
          [ `L_s0  | `L_s125_no_referrer 
          | `L_s126_no_referrer_when_downgrade  | `L_s140_origin 
          | `L_s141_origin_when_cross_origin  | `L_s172_same_origin 
          | `L_s185_strict_origin  | `L_s186_strict_origin_when_cross_origin 
          | `L_s198_unsafe_url ])
        ->
        match x3966 with
        | `L_s0 -> Ojs.string_to_js ""
        | `L_s125_no_referrer -> Ojs.string_to_js "no-referrer"
        | `L_s126_no_referrer_when_downgrade ->
            Ojs.string_to_js "no-referrer-when-downgrade"
        | `L_s140_origin -> Ojs.string_to_js "origin"
        | `L_s141_origin_when_cross_origin ->
            Ojs.string_to_js "origin-when-cross-origin"
        | `L_s172_same_origin -> Ojs.string_to_js "same-origin"
        | `L_s185_strict_origin -> Ojs.string_to_js "strict-origin"
        | `L_s186_strict_origin_when_cross_origin ->
            Ojs.string_to_js "strict-origin-when-cross-origin"
        | `L_s198_unsafe_url -> Ojs.string_to_js "unsafe-url"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3970 : Ojs.t) -> t_of_js x3970
    and t_0_to_js : t_0 -> Ojs.t = fun (x3969 : t) -> t_to_js x3969
  end
module RequestCredentials =
  struct
    type t = [ `L_s134_omit  | `L_s172_same_origin  | `L_s92_include ]
    let rec t_of_js : Ojs.t -> t =
      fun (x3972 : Ojs.t) ->
        let x3973 = x3972 in
        match Ojs.string_of_js x3973 with
        | "omit" -> `L_s134_omit
        | "same-origin" -> `L_s172_same_origin
        | "include" -> `L_s92_include
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun (x3971 : [ `L_s134_omit  | `L_s172_same_origin  | `L_s92_include ])
        ->
        match x3971 with
        | `L_s134_omit -> Ojs.string_to_js "omit"
        | `L_s172_same_origin -> Ojs.string_to_js "same-origin"
        | `L_s92_include -> Ojs.string_to_js "include"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3975 : Ojs.t) -> t_of_js x3975
    and t_0_to_js : t_0 -> Ojs.t = fun (x3974 : t) -> t_to_js x3974
  end
module RequestInit =
  struct
    type t = [ `RequestInit ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3977 : Ojs.t) -> t_of_js x3977
    and t_0_to_js : t_0 -> Ojs.t = fun (x3976 : t) -> t_to_js x3976
    type tags = [ `RequestInit ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RequestInit ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3980 : Ojs.t) -> intf_of_js __tags_of_js x3980
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3978 : __tags intf) -> intf_to_js __tags_to_js x3978
    let (get_body : 'tags this -> BodyInit.t or_null) =
      fun (x3982 : 'tags this) ->
        or_null_of_js BodyInit.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3982) "body")
    let (set_body : 'tags this -> BodyInit.t or_null -> unit) =
      fun (x3985 : 'tags this) ->
        fun (x3986 : BodyInit.t or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3985) "body"
            (or_null_to_js BodyInit.t_to_js x3986)
    let (get_cache : 'tags this -> RequestCache.t) =
      fun (x3989 : 'tags this) ->
        RequestCache.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3989) "cache")
    let (set_cache : 'tags this -> RequestCache.t -> unit) =
      fun (x3991 : 'tags this) ->
        fun (x3992 : RequestCache.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3991) "cache"
            (RequestCache.t_to_js x3992)
    let (get_credentials : 'tags this -> RequestCredentials.t) =
      fun (x3994 : 'tags this) ->
        RequestCredentials.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3994) "credentials")
    let (set_credentials : 'tags this -> RequestCredentials.t -> unit) =
      fun (x3996 : 'tags this) ->
        fun (x3997 : RequestCredentials.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3996) "credentials"
            (RequestCredentials.t_to_js x3997)
    let (get_headers : 'tags this -> HeadersInit.t) =
      fun (x3999 : 'tags this) ->
        HeadersInit.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3999) "headers")
    let (set_headers : 'tags this -> HeadersInit.t -> unit) =
      fun (x4001 : 'tags this) ->
        fun (x4002 : HeadersInit.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4001) "headers"
            (HeadersInit.t_to_js x4002)
    let (get_integrity : 'tags this -> string) =
      fun (x4004 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4004) "integrity")
    let (set_integrity : 'tags this -> string -> unit) =
      fun (x4006 : 'tags this) ->
        fun (x4007 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4006) "integrity"
            (Ojs.string_to_js x4007)
    let (get_keepalive : 'tags this -> bool) =
      fun (x4009 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4009) "keepalive")
    let (set_keepalive : 'tags this -> bool -> unit) =
      fun (x4011 : 'tags this) ->
        fun (x4012 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4011) "keepalive"
            (Ojs.bool_to_js x4012)
    let (get_method : 'tags this -> string) =
      fun (x4014 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4014) "method")
    let (set_method : 'tags this -> string -> unit) =
      fun (x4016 : 'tags this) ->
        fun (x4017 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4016) "method"
            (Ojs.string_to_js x4017)
    let (get_mode : 'tags this -> RequestMode.t) =
      fun (x4019 : 'tags this) ->
        RequestMode.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4019) "mode")
    let (set_mode : 'tags this -> RequestMode.t -> unit) =
      fun (x4021 : 'tags this) ->
        fun (x4022 : RequestMode.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4021) "mode"
            (RequestMode.t_to_js x4022)
    let (get_redirect : 'tags this -> RequestRedirect.t) =
      fun (x4024 : 'tags this) ->
        RequestRedirect.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4024) "redirect")
    let (set_redirect : 'tags this -> RequestRedirect.t -> unit) =
      fun (x4026 : 'tags this) ->
        fun (x4027 : RequestRedirect.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4026) "redirect"
            (RequestRedirect.t_to_js x4027)
    let (get_referrer : 'tags this -> string) =
      fun (x4029 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4029) "referrer")
    let (set_referrer : 'tags this -> string -> unit) =
      fun (x4031 : 'tags this) ->
        fun (x4032 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4031) "referrer"
            (Ojs.string_to_js x4032)
    let (get_referrerPolicy : 'tags this -> ReferrerPolicy.t) =
      fun (x4034 : 'tags this) ->
        ReferrerPolicy.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4034) "referrerPolicy")
    let (set_referrerPolicy : 'tags this -> ReferrerPolicy.t -> unit) =
      fun (x4036 : 'tags this) ->
        fun (x4037 : ReferrerPolicy.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4036) "referrerPolicy"
            (ReferrerPolicy.t_to_js x4037)
    let (get_signal : 'tags this -> AbortSignal.t or_null) =
      fun (x4039 : 'tags this) ->
        or_null_of_js AbortSignal.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4039) "signal")
    let (set_signal : 'tags this -> AbortSignal.t or_null -> unit) =
      fun (x4042 : 'tags this) ->
        fun (x4043 : AbortSignal.t or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4042) "signal"
            (or_null_to_js AbortSignal.t_to_js x4043)
    let (get_window : 'tags this -> never or_null) =
      fun (x4046 : 'tags this) ->
        or_null_of_js never_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4046) "window")
    let (set_window : 'tags this -> never or_null -> unit) =
      fun (x4049 : 'tags this) ->
        fun (x4050 : never or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4049) "window"
            (or_null_to_js never_to_js x4050)
    let cast_from = Obj.magic
  end
module RequestDestination =
  struct
    type t =
      [ `L_s0  | `L_s109_manifest  | `L_s132_object  | `L_s145_paintworklet 
      | `L_s169_report  | `L_s174_script  | `L_s176_sharedworker 
      | `L_s187_style  | `L_s193_track  | `L_s204_video  | `L_s209_worker 
      | `L_s212_xslt  | `L_s38_audio  | `L_s39_audioworklet 
      | `L_s62_document  | `L_s64_embed  | `L_s76_font  | `L_s78_frame 
      | `L_s89_iframe  | `L_s90_image ]
    let rec t_of_js : Ojs.t -> t =
      fun (x4054 : Ojs.t) ->
        let x4055 = x4054 in
        match Ojs.string_of_js x4055 with
        | "" -> `L_s0
        | "manifest" -> `L_s109_manifest
        | "object" -> `L_s132_object
        | "paintworklet" -> `L_s145_paintworklet
        | "report" -> `L_s169_report
        | "script" -> `L_s174_script
        | "sharedworker" -> `L_s176_sharedworker
        | "style" -> `L_s187_style
        | "track" -> `L_s193_track
        | "video" -> `L_s204_video
        | "worker" -> `L_s209_worker
        | "xslt" -> `L_s212_xslt
        | "audio" -> `L_s38_audio
        | "audioworklet" -> `L_s39_audioworklet
        | "document" -> `L_s62_document
        | "embed" -> `L_s64_embed
        | "font" -> `L_s76_font
        | "frame" -> `L_s78_frame
        | "iframe" -> `L_s89_iframe
        | "image" -> `L_s90_image
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun
        (x4053 :
          [ `L_s0  | `L_s109_manifest  | `L_s132_object 
          | `L_s145_paintworklet  | `L_s169_report  | `L_s174_script 
          | `L_s176_sharedworker  | `L_s187_style  | `L_s193_track 
          | `L_s204_video  | `L_s209_worker  | `L_s212_xslt  | `L_s38_audio 
          | `L_s39_audioworklet  | `L_s62_document  | `L_s64_embed 
          | `L_s76_font  | `L_s78_frame  | `L_s89_iframe  | `L_s90_image ])
        ->
        match x4053 with
        | `L_s0 -> Ojs.string_to_js ""
        | `L_s109_manifest -> Ojs.string_to_js "manifest"
        | `L_s132_object -> Ojs.string_to_js "object"
        | `L_s145_paintworklet -> Ojs.string_to_js "paintworklet"
        | `L_s169_report -> Ojs.string_to_js "report"
        | `L_s174_script -> Ojs.string_to_js "script"
        | `L_s176_sharedworker -> Ojs.string_to_js "sharedworker"
        | `L_s187_style -> Ojs.string_to_js "style"
        | `L_s193_track -> Ojs.string_to_js "track"
        | `L_s204_video -> Ojs.string_to_js "video"
        | `L_s209_worker -> Ojs.string_to_js "worker"
        | `L_s212_xslt -> Ojs.string_to_js "xslt"
        | `L_s38_audio -> Ojs.string_to_js "audio"
        | `L_s39_audioworklet -> Ojs.string_to_js "audioworklet"
        | `L_s62_document -> Ojs.string_to_js "document"
        | `L_s64_embed -> Ojs.string_to_js "embed"
        | `L_s76_font -> Ojs.string_to_js "font"
        | `L_s78_frame -> Ojs.string_to_js "frame"
        | `L_s89_iframe -> Ojs.string_to_js "iframe"
        | `L_s90_image -> Ojs.string_to_js "image"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4057 : Ojs.t) -> t_of_js x4057
    and t_0_to_js : t_0 -> Ojs.t = fun (x4056 : t) -> t_to_js x4056
  end
module rec
  Request:sig
            type t = [ `Body  | `Request ] intf
            type t_0 = t
            [@@@js.stop ]
            type tags = [ `Body  | `Request ]
            type tags_0 = tags
            [@@@js.start ]
            [@@@js.implem
              type tags = [ `Body  | `Request ]
              type tags_0 = tags]
            type 'tags this = 'tags intf constraint 'tags = [> `Request ]
            val t_to_js : t -> Ojs.t
            val t_of_js : Ojs.t -> t
            val t_0_to_js : t_0 -> Ojs.t
            val t_0_of_js : Ojs.t -> t_0
            val get_cache : 'tags this -> RequestCache.t
            val get_credentials : 'tags this -> RequestCredentials.t
            val get_destination : 'tags this -> RequestDestination.t
            val get_headers : 'tags this -> Headers.t
            val get_integrity : 'tags this -> string
            val get_keepalive : 'tags this -> bool
            val get_method : 'tags this -> string
            val get_mode : 'tags this -> RequestMode.t
            val get_redirect : 'tags this -> RequestRedirect.t
            val get_referrer : 'tags this -> string
            val get_referrerPolicy : 'tags this -> ReferrerPolicy.t
            val get_signal : 'tags this -> AbortSignal.t
            val get_url : 'tags this -> string
            val clone : 'tags this -> t
            val cast_from : 'tags this -> t
            val prototype : unit -> t
            val create :
              input:RequestInfo.t -> ?init:RequestInit.t -> unit -> t
          end =
  struct
    type t = [ `Body  | `Request ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4059 : Ojs.t) -> t_of_js x4059
    and t_0_to_js : t_0 -> Ojs.t = fun (x4058 : t) -> t_to_js x4058
    type tags = [ `Body  | `Request ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Request ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4062 : Ojs.t) -> intf_of_js __tags_of_js x4062
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4060 : __tags intf) -> intf_to_js __tags_to_js x4060
    let (get_cache : 'tags this -> RequestCache.t) =
      fun (x4064 : 'tags this) ->
        RequestCache.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4064) "cache")
    let (get_credentials : 'tags this -> RequestCredentials.t) =
      fun (x4066 : 'tags this) ->
        RequestCredentials.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4066) "credentials")
    let (get_destination : 'tags this -> RequestDestination.t) =
      fun (x4068 : 'tags this) ->
        RequestDestination.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4068) "destination")
    let (get_headers : 'tags this -> Headers.t) =
      fun (x4070 : 'tags this) ->
        Headers.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4070) "headers")
    let (get_integrity : 'tags this -> string) =
      fun (x4072 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4072) "integrity")
    let (get_keepalive : 'tags this -> bool) =
      fun (x4074 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4074) "keepalive")
    let (get_method : 'tags this -> string) =
      fun (x4076 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4076) "method")
    let (get_mode : 'tags this -> RequestMode.t) =
      fun (x4078 : 'tags this) ->
        RequestMode.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4078) "mode")
    let (get_redirect : 'tags this -> RequestRedirect.t) =
      fun (x4080 : 'tags this) ->
        RequestRedirect.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4080) "redirect")
    let (get_referrer : 'tags this -> string) =
      fun (x4082 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4082) "referrer")
    let (get_referrerPolicy : 'tags this -> ReferrerPolicy.t) =
      fun (x4084 : 'tags this) ->
        ReferrerPolicy.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4084) "referrerPolicy")
    let (get_signal : 'tags this -> AbortSignal.t) =
      fun (x4086 : 'tags this) ->
        AbortSignal.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4086) "signal")
    let (get_url : 'tags this -> string) =
      fun (x4088 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4088) "url")
    let (clone : 'tags this -> t) =
      fun (x4090 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x4090) "clone" [||])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Request")
             "prototype")
    let (create : input:RequestInfo.t -> ?init:RequestInit.t -> unit -> t) =
      fun ~input:(x4092 : RequestInfo.t) ->
        fun ?init:(x4093 : RequestInit.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Request")
                 (let x4094 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x4094 "push" [|(RequestInfo.t_to_js x4092)|]);
                  (match x4093 with
                   | Some x4095 ->
                       ignore
                         (Ojs.call x4094 "push"
                            [|(RequestInit.t_to_js x4095)|])
                   | None -> ());
                  x4094))
  end
 and
  RequestInfo:sig
                type t = Request.t or_string
                type t_0 = t
                val t_to_js : t -> Ojs.t
                val t_of_js : Ojs.t -> t
                val t_0_to_js : t_0 -> Ojs.t
                val t_0_of_js : Ojs.t -> t_0
              end =
  struct
    type t = Request.t or_string
    let rec t_of_js : Ojs.t -> t =
      fun (x4098 : Ojs.t) -> or_string_of_js Request.t_of_js x4098
    and t_to_js : t -> Ojs.t =
      fun (x4096 : Request.t or_string) ->
        or_string_to_js Request.t_to_js x4096
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4101 : Ojs.t) -> t_of_js x4101
    and t_0_to_js : t_0 -> Ojs.t = fun (x4100 : t) -> t_to_js x4100
  end
module Cache =
  struct
    type t = [ `Cache ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4103 : Ojs.t) -> t_of_js x4103
    and t_0_to_js : t_0 -> Ojs.t = fun (x4102 : t) -> t_to_js x4102
    type tags = [ `Cache ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Cache ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4106 : Ojs.t) -> intf_of_js __tags_of_js x4106
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4104 : __tags intf) -> intf_to_js __tags_to_js x4104
    let (addAll :
      'tags this -> requests:RequestInfo.t Iterable.t_1 -> unit Promise.t_1)
      =
      fun (x4110 : 'tags this) ->
        fun ~requests:(x4108 : RequestInfo.t Iterable.t_1) ->
          Promise.t_1_of_js Ojs.unit_of_js
            (Ojs.call (this_to_js Obj.magic x4110) "addAll"
               [|(Iterable.t_1_to_js RequestInfo.t_to_js x4108)|])
    let (add : 'tags this -> request:RequestInfo.t -> unit Promise.t_1) =
      fun (x4114 : 'tags this) ->
        fun ~request:(x4113 : RequestInfo.t) ->
          Promise.t_1_of_js Ojs.unit_of_js
            (Ojs.call (this_to_js Obj.magic x4114) "add"
               [|(RequestInfo.t_to_js x4113)|])
    let (addAll' :
      'tags this -> requests:RequestInfo.t list -> unit Promise.t_1) =
      fun (x4119 : 'tags this) ->
        fun ~requests:(x4117 : RequestInfo.t list) ->
          Promise.t_1_of_js Ojs.unit_of_js
            (Ojs.call (this_to_js Obj.magic x4119) "addAll"
               [|(Ojs.list_to_js RequestInfo.t_to_js x4117)|])
    let (delete :
      'tags this ->
        request:RequestInfo.t ->
          ?options:CacheQueryOptions.t -> unit -> bool Promise.t_1)
      =
      fun (x4126 : 'tags this) ->
        fun ~request:(x4122 : RequestInfo.t) ->
          fun ?options:(x4123 : CacheQueryOptions.t option) ->
            fun () ->
              Promise.t_1_of_js Ojs.bool_of_js
                (let x4128 = this_to_js Obj.magic x4126 in
                 Ojs.call (Ojs.get_prop_ascii x4128 "delete") "apply"
                   [|x4128;((let x4124 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4124 "push"
                                  [|(RequestInfo.t_to_js x4122)|]);
                             (match x4123 with
                              | Some x4125 ->
                                  ignore
                                    (Ojs.call x4124 "push"
                                       [|(CacheQueryOptions.t_to_js x4125)|])
                              | None -> ());
                             x4124))|])
    let (keys :
      'tags this ->
        ?request:RequestInfo.t ->
          ?options:CacheQueryOptions.t -> unit -> Request.t list Promise.t_1)
      =
      fun (x4135 : 'tags this) ->
        fun ?request:(x4130 : RequestInfo.t option) ->
          fun ?options:(x4131 : CacheQueryOptions.t option) ->
            fun () ->
              Promise.t_1_of_js
                (fun (x4138 : Ojs.t) -> Ojs.list_of_js Request.t_of_js x4138)
                (let x4137 = this_to_js Obj.magic x4135 in
                 Ojs.call (Ojs.get_prop_ascii x4137 "keys") "apply"
                   [|x4137;((let x4132 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4130 with
                              | Some x4134 ->
                                  ignore
                                    (Ojs.call x4132 "push"
                                       [|(RequestInfo.t_to_js x4134)|])
                              | None -> ());
                             (match x4131 with
                              | Some x4133 ->
                                  ignore
                                    (Ojs.call x4132 "push"
                                       [|(CacheQueryOptions.t_to_js x4133)|])
                              | None -> ());
                             x4132))|])
    let (match_ :
      'tags this ->
        request:RequestInfo.t ->
          ?options:CacheQueryOptions.t ->
            unit -> Response.t or_undefined Promise.t_1)
      =
      fun (x4144 : 'tags this) ->
        fun ~request:(x4140 : RequestInfo.t) ->
          fun ?options:(x4141 : CacheQueryOptions.t option) ->
            fun () ->
              Promise.t_1_of_js
                (fun (x4147 : Ojs.t) ->
                   or_undefined_of_js Response.t_of_js x4147)
                (let x4146 = this_to_js Obj.magic x4144 in
                 Ojs.call (Ojs.get_prop_ascii x4146 "match") "apply"
                   [|x4146;((let x4142 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4142 "push"
                                  [|(RequestInfo.t_to_js x4140)|]);
                             (match x4141 with
                              | Some x4143 ->
                                  ignore
                                    (Ojs.call x4142 "push"
                                       [|(CacheQueryOptions.t_to_js x4143)|])
                              | None -> ());
                             x4142))|])
    let (matchAll :
      'tags this ->
        ?request:RequestInfo.t ->
          ?options:CacheQueryOptions.t -> unit -> Response.t list Promise.t_1)
      =
      fun (x4154 : 'tags this) ->
        fun ?request:(x4149 : RequestInfo.t option) ->
          fun ?options:(x4150 : CacheQueryOptions.t option) ->
            fun () ->
              Promise.t_1_of_js
                (fun (x4157 : Ojs.t) -> Ojs.list_of_js Response.t_of_js x4157)
                (let x4156 = this_to_js Obj.magic x4154 in
                 Ojs.call (Ojs.get_prop_ascii x4156 "matchAll") "apply"
                   [|x4156;((let x4151 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4149 with
                              | Some x4153 ->
                                  ignore
                                    (Ojs.call x4151 "push"
                                       [|(RequestInfo.t_to_js x4153)|])
                              | None -> ());
                             (match x4150 with
                              | Some x4152 ->
                                  ignore
                                    (Ojs.call x4151 "push"
                                       [|(CacheQueryOptions.t_to_js x4152)|])
                              | None -> ());
                             x4151))|])
    let (put :
      'tags this ->
        request:RequestInfo.t -> response:Response.t -> unit Promise.t_1)
      =
      fun (x4161 : 'tags this) ->
        fun ~request:(x4159 : RequestInfo.t) ->
          fun ~response:(x4160 : Response.t) ->
            Promise.t_1_of_js Ojs.unit_of_js
              (Ojs.call (this_to_js Obj.magic x4161) "put"
                 [|(RequestInfo.t_to_js x4159);(Response.t_to_js x4160)|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Cache")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Cache") [||])
  end
module CachesStatic =
  struct
    let (delete : string -> bool Promise.t_1) =
      fun (x4164 : string) ->
        Promise.t_1_of_js Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "caches") "delete"
             [|(Ojs.string_to_js x4164)|])
    let (has : string -> bool Promise.t_1) =
      fun (x4166 : string) ->
        Promise.t_1_of_js Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "caches") "has"
             [|(Ojs.string_to_js x4166)|])
    let (keys : unit -> string list Promise.t_1) =
      fun () ->
        Promise.t_1_of_js
          (fun (x4168 : Ojs.t) -> Ojs.list_of_js Ojs.string_of_js x4168)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "caches") "keys" [||])
    let (match_ :
      request:RequestInfo.t ->
        ?options:MultiCacheQueryOptions.t ->
          unit -> Response.t or_undefined Promise.t_1)
      =
      fun ~request:(x4170 : RequestInfo.t) ->
        fun ?options:(x4171 : MultiCacheQueryOptions.t option) ->
          fun () ->
            Promise.t_1_of_js
              (fun (x4175 : Ojs.t) ->
                 or_undefined_of_js Response.t_of_js x4175)
              (let x4174 = Ojs.get_prop_ascii Ojs.global "caches" in
               Ojs.call (Ojs.get_prop_ascii x4174 "match") "apply"
                 [|x4174;((let x4172 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x4172 "push"
                                [|(RequestInfo.t_to_js x4170)|]);
                           (match x4171 with
                            | Some x4173 ->
                                ignore
                                  (Ojs.call x4172 "push"
                                     [|(MultiCacheQueryOptions.t_to_js x4173)|])
                            | None -> ());
                           x4172))|])
    let (open_ : string -> Cache.t Promise.t_1) =
      fun (x4177 : string) ->
        Promise.t_1_of_js Cache.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "caches") "open"
             [|(Ojs.string_to_js x4177)|])
  end
module XMLHttpRequestResponseType =
  struct
    type t =
      [ `L_s0  | `L_s190_text  | `L_s37_arraybuffer  | `L_s44_blob 
      | `L_s62_document  | `L_s96_json ]
    let rec t_of_js : Ojs.t -> t =
      fun (x4180 : Ojs.t) ->
        let x4181 = x4180 in
        match Ojs.string_of_js x4181 with
        | "" -> `L_s0
        | "text" -> `L_s190_text
        | "arraybuffer" -> `L_s37_arraybuffer
        | "blob" -> `L_s44_blob
        | "document" -> `L_s62_document
        | "json" -> `L_s96_json
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun
        (x4179 :
          [ `L_s0  | `L_s190_text  | `L_s37_arraybuffer  | `L_s44_blob 
          | `L_s62_document  | `L_s96_json ])
        ->
        match x4179 with
        | `L_s0 -> Ojs.string_to_js ""
        | `L_s190_text -> Ojs.string_to_js "text"
        | `L_s37_arraybuffer -> Ojs.string_to_js "arraybuffer"
        | `L_s44_blob -> Ojs.string_to_js "blob"
        | `L_s62_document -> Ojs.string_to_js "document"
        | `L_s96_json -> Ojs.string_to_js "json"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4183 : Ojs.t) -> t_of_js x4183
    and t_0_to_js : t_0 -> Ojs.t = fun (x4182 : t) -> t_to_js x4182
  end
module ProgressEventInit =
  struct
    type t = [ `EventInit  | `ProgressEventInit ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4185 : Ojs.t) -> t_of_js x4185
    and t_0_to_js : t_0 -> Ojs.t = fun (x4184 : t) -> t_to_js x4184
    type tags = [ `EventInit  | `ProgressEventInit ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ProgressEventInit ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4188 : Ojs.t) -> intf_of_js __tags_of_js x4188
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4186 : __tags intf) -> intf_to_js __tags_to_js x4186
    let (get_lengthComputable : 'tags this -> bool) =
      fun (x4190 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4190) "lengthComputable")
    let (set_lengthComputable : 'tags this -> bool -> unit) =
      fun (x4192 : 'tags this) ->
        fun (x4193 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4192) "lengthComputable"
            (Ojs.bool_to_js x4193)
    let (get_loaded : 'tags this -> float) =
      fun (x4195 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4195) "loaded")
    let (set_loaded : 'tags this -> float -> unit) =
      fun (x4197 : 'tags this) ->
        fun (x4198 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4197) "loaded"
            (Ojs.float_to_js x4198)
    let (get_total : 'tags this -> float) =
      fun (x4200 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4200) "total")
    let (set_total : 'tags this -> float -> unit) =
      fun (x4202 : 'tags this) ->
        fun (x4203 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4202) "total"
            (Ojs.float_to_js x4203)
    let cast_from = Obj.magic
  end
module ProgressEvent =
  struct
    type 'T t = [ `Event  | `ProgressEvent of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4207 : Ojs.t) -> t_of_js __T_of_js x4207
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4205 : __T t) -> t_to_js __T_to_js x4205
    type t_0 = EventTarget.t t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x4211 : Ojs.t) -> t_of_js EventTarget.t_of_js x4211
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x4209 : EventTarget.t t) -> t_to_js EventTarget.t_to_js x4209
    type 'T tags = [ `Event  | `ProgressEvent of 'T ]
    type 'T tags_1 = 'T tags
    type tags_0 = EventTarget.t tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ProgressEvent of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4215 : Ojs.t) -> intf_of_js __tags_of_js x4215
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4213 : __tags intf) -> intf_to_js __tags_to_js x4213
    let (get_lengthComputable : ('tags, 'T) this -> bool) =
      fun (x4217 : ('tags, 'T) this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4217)
             "lengthComputable")
    let (get_loaded : ('tags, 'T) this -> float) =
      fun (x4220 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4220) "loaded")
    let (get_target : ('tags, 'T) this -> 'T or_null) =
      fun (x4223 : ('tags, 'T) this) ->
        or_null_of_js Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4223) "target")
    let (get_total : ('tags, 'T) this -> float) =
      fun (x4227 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4227) "total")
    let cast_from = Obj.magic
    let (prototype : unit -> t_0) =
      fun () ->
        t_0_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ProgressEvent")
             "prototype")
    let (create :
      type_:string -> ?eventInitDict:ProgressEventInit.t -> unit -> t_0) =
      fun ~type_:(x4230 : string) ->
        fun ?eventInitDict:(x4231 : ProgressEventInit.t option) ->
          fun () ->
            t_0_of_js
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "ProgressEvent")
                 (let x4232 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x4232 "push" [|(Ojs.string_to_js x4230)|]);
                  (match x4231 with
                   | Some x4233 ->
                       ignore
                         (Ojs.call x4232 "push"
                            [|(ProgressEventInit.t_to_js x4233)|])
                   | None -> ());
                  x4232))
  end
module rec
  XMLHttpRequest:sig
                   type t =
                     [ `EventTarget  | `XMLHttpRequest 
                     | `XMLHttpRequestEventTarget ] intf
                   type t_0 = t
                   [@@@js.stop ]
                   type tags =
                     [ `EventTarget  | `XMLHttpRequest 
                     | `XMLHttpRequestEventTarget ]
                   type tags_0 = tags
                   [@@@js.start ]
                   [@@@js.implem
                     type tags =
                       [ `EventTarget  | `XMLHttpRequest 
                       | `XMLHttpRequestEventTarget ]
                     type tags_0 = tags]
                   type 'tags this =
                     'tags intf constraint 'tags = [> `XMLHttpRequest ]
                   val t_to_js : t -> Ojs.t
                   val t_of_js : Ojs.t -> t
                   val t_0_to_js : t_0 -> Ojs.t
                   val t_0_of_js : Ojs.t -> t_0
                   val get_onreadystatechange :
                     'tags this -> (this:t -> ev:Event.t -> any) or_null
                   val set_onreadystatechange :
                     'tags this ->
                       (this:t -> ev:Event.t -> any) or_null -> unit
                   val get_readyState : 'tags this -> float
                   val get_response : 'tags this -> any
                   val get_responseText : 'tags this -> string
                   val get_responseType :
                     'tags this -> XMLHttpRequestResponseType.t
                   val set_responseType :
                     'tags this -> XMLHttpRequestResponseType.t -> unit
                   val get_responseURL : 'tags this -> string
                   val get_status : 'tags this -> float
                   val get_statusText : 'tags this -> string
                   val get_timeout : 'tags this -> float
                   val set_timeout : 'tags this -> float -> unit
                   val get_upload : 'tags this -> XMLHttpRequestUpload.t
                   val get_withCredentials : 'tags this -> bool
                   val set_withCredentials : 'tags this -> bool -> unit
                   val abort : 'tags this -> unit
                   val getAllResponseHeaders : 'tags this -> string
                   val getResponseHeader :
                     'tags this -> name:string -> string or_null
                   val open_ :
                     'tags this ->
                       method_:string -> url:URL.t or_string -> unit
                   val open_' :
                     'tags this ->
                       method_:string ->
                         url:URL.t or_string ->
                           async:bool ->
                             ?username:string or_null ->
                               ?password:string or_null -> unit -> unit
                   val overrideMimeType : 'tags this -> mime:string -> unit
                   val send :
                     'tags this ->
                       ?body:XMLHttpRequestBodyInit.t or_null -> unit -> unit
                   val setRequestHeader :
                     'tags this -> name:string -> value:string -> unit
                   val get_DONE : 'tags this -> float
                   val get_HEADERS_RECEIVED : 'tags this -> float
                   val get_LOADING : 'tags this -> float
                   val get_OPENED : 'tags this -> float
                   val get_UNSENT : 'tags this -> float
                   val addEventListener :
                     'tags this ->
                       type_:'K ->
                         listener:(this:t -> ev:any -> any) ->
                           ?options:AddEventListenerOptions.t or_boolean ->
                             unit -> unit
                   val addEventListener' :
                     'tags this ->
                       type_:string ->
                         listener:EventListenerOrEventListenerObject.t ->
                           ?options:AddEventListenerOptions.t or_boolean ->
                             unit -> unit
                   val removeEventListener :
                     'tags this ->
                       type_:'K ->
                         listener:(this:t -> ev:any -> any) ->
                           ?options:EventListenerOptions.t or_boolean ->
                             unit -> unit
                   val removeEventListener' :
                     'tags this ->
                       type_:string ->
                         listener:EventListenerOrEventListenerObject.t ->
                           ?options:EventListenerOptions.t or_boolean ->
                             unit -> unit
                   val cast_from : 'tags this -> t
                   val prototype : unit -> t
                   val create : unit -> t
                   val done_ : unit -> float
                   val headers_received : unit -> float
                   val loading : unit -> float
                   val opened : unit -> float
                   val unsent : unit -> float
                 end =
  struct
    type t =
      [ `EventTarget  | `XMLHttpRequest  | `XMLHttpRequestEventTarget ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4235 : Ojs.t) -> t_of_js x4235
    and t_0_to_js : t_0 -> Ojs.t = fun (x4234 : t) -> t_to_js x4234
    type tags =
      [ `EventTarget  | `XMLHttpRequest  | `XMLHttpRequestEventTarget ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `XMLHttpRequest ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4238 : Ojs.t) -> intf_of_js __tags_of_js x4238
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4236 : __tags intf) -> intf_to_js __tags_to_js x4236
    let (get_onreadystatechange :
      'tags this -> (this:t -> ev:Event.t -> any) or_null) =
      fun (x4240 : 'tags this) ->
        or_null_of_js
          (fun (x4242 : Ojs.t) ->
             fun ~this:(x4243 : t) ->
               fun ~ev:(x4244 : Event.t) ->
                 any_of_js
                   (Ojs.apply x4242 [|(t_to_js x4243);(Event.t_to_js x4244)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4240)
             "onreadystatechange")
    let (set_onreadystatechange :
      'tags this -> (this:t -> ev:Event.t -> any) or_null -> unit) =
      fun (x4245 : 'tags this) ->
        fun (x4246 : (this:t -> ev:Event.t -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4245)
            "onreadystatechange"
            (or_null_to_js
               (fun (x4247 : this:t -> ev:Event.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x4248 : Ojs.t) ->
                       fun (x4249 : Ojs.t) ->
                         any_to_js
                           (x4247 ~this:(t_of_js x4248)
                              ~ev:(Event.t_of_js x4249)))) x4246)
    let (get_readyState : 'tags this -> float) =
      fun (x4251 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4251) "readyState")
    let (get_response : 'tags this -> any) =
      fun (x4253 : 'tags this) ->
        any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4253) "response")
    let (get_responseText : 'tags this -> string) =
      fun (x4255 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4255) "responseText")
    let (get_responseType : 'tags this -> XMLHttpRequestResponseType.t) =
      fun (x4257 : 'tags this) ->
        XMLHttpRequestResponseType.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4257) "responseType")
    let (set_responseType :
      'tags this -> XMLHttpRequestResponseType.t -> unit) =
      fun (x4259 : 'tags this) ->
        fun (x4260 : XMLHttpRequestResponseType.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4259) "responseType"
            (XMLHttpRequestResponseType.t_to_js x4260)
    let (get_responseURL : 'tags this -> string) =
      fun (x4262 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4262) "responseURL")
    let (get_status : 'tags this -> float) =
      fun (x4264 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4264) "status")
    let (get_statusText : 'tags this -> string) =
      fun (x4266 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4266) "statusText")
    let (get_timeout : 'tags this -> float) =
      fun (x4268 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4268) "timeout")
    let (set_timeout : 'tags this -> float -> unit) =
      fun (x4270 : 'tags this) ->
        fun (x4271 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4270) "timeout"
            (Ojs.float_to_js x4271)
    let (get_upload : 'tags this -> XMLHttpRequestUpload.t) =
      fun (x4273 : 'tags this) ->
        XMLHttpRequestUpload.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4273) "upload")
    let (get_withCredentials : 'tags this -> bool) =
      fun (x4275 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4275) "withCredentials")
    let (set_withCredentials : 'tags this -> bool -> unit) =
      fun (x4277 : 'tags this) ->
        fun (x4278 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4277) "withCredentials"
            (Ojs.bool_to_js x4278)
    let (abort : 'tags this -> unit) =
      fun (x4280 : 'tags this) ->
        ignore (Ojs.call (this_to_js Obj.magic x4280) "abort" [||])
    let (getAllResponseHeaders : 'tags this -> string) =
      fun (x4282 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4282) "getAllResponseHeaders" [||])
    let (getResponseHeader : 'tags this -> name:string -> string or_null) =
      fun (x4285 : 'tags this) ->
        fun ~name:(x4284 : string) ->
          or_null_of_js Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x4285) "getResponseHeader"
               [|(Ojs.string_to_js x4284)|])
    let (open_ : 'tags this -> method_:string -> url:URL.t or_string -> unit)
      =
      fun (x4291 : 'tags this) ->
        fun ~method_:(x4288 : string) ->
          fun ~url:(x4289 : URL.t or_string) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x4291) "open"
                 [|(Ojs.string_to_js x4288);(or_string_to_js URL.t_to_js
                                               x4289)|])
    let (open_' :
      'tags this ->
        method_:string ->
          url:URL.t or_string ->
            async:bool ->
              ?username:string or_null ->
                ?password:string or_null -> unit -> unit)
      =
      fun (x4304 : 'tags this) ->
        fun ~method_:(x4293 : string) ->
          fun ~url:(x4294 : URL.t or_string) ->
            fun ~async:(x4295 : bool) ->
              fun ?username:(x4296 : string or_null option) ->
                fun ?password:(x4297 : string or_null option) ->
                  fun () ->
                    ignore
                      (let x4306 = this_to_js Obj.magic x4304 in
                       Ojs.call (Ojs.get_prop_ascii x4306 "open") "apply"
                         [|x4306;((let x4298 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   ignore
                                     (Ojs.call x4298 "push"
                                        [|(Ojs.string_to_js x4293)|]);
                                   ignore
                                     (Ojs.call x4298 "push"
                                        [|(or_string_to_js URL.t_to_js x4294)|]);
                                   ignore
                                     (Ojs.call x4298 "push"
                                        [|(Ojs.bool_to_js x4295)|]);
                                   (match x4296 with
                                    | Some x4301 ->
                                        ignore
                                          (Ojs.call x4298 "push"
                                             [|(or_null_to_js
                                                  Ojs.string_to_js x4301)|])
                                    | None -> ());
                                   (match x4297 with
                                    | Some x4299 ->
                                        ignore
                                          (Ojs.call x4298 "push"
                                             [|(or_null_to_js
                                                  Ojs.string_to_js x4299)|])
                                    | None -> ());
                                   x4298))|])
    let (overrideMimeType : 'tags this -> mime:string -> unit) =
      fun (x4308 : 'tags this) ->
        fun ~mime:(x4307 : string) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x4308) "overrideMimeType"
               [|(Ojs.string_to_js x4307)|])
    let (send :
      'tags this -> ?body:XMLHttpRequestBodyInit.t or_null -> unit -> unit) =
      fun (x4314 : 'tags this) ->
        fun ?body:(x4310 : XMLHttpRequestBodyInit.t or_null option) ->
          fun () ->
            ignore
              (let x4316 = this_to_js Obj.magic x4314 in
               Ojs.call (Ojs.get_prop_ascii x4316 "send") "apply"
                 [|x4316;((let x4311 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4310 with
                            | Some x4312 ->
                                ignore
                                  (Ojs.call x4311 "push"
                                     [|(or_null_to_js
                                          XMLHttpRequestBodyInit.t_to_js
                                          x4312)|])
                            | None -> ());
                           x4311))|])
    let (setRequestHeader :
      'tags this -> name:string -> value:string -> unit) =
      fun (x4319 : 'tags this) ->
        fun ~name:(x4317 : string) ->
          fun ~value:(x4318 : string) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x4319) "setRequestHeader"
                 [|(Ojs.string_to_js x4317);(Ojs.string_to_js x4318)|])
    let (get_DONE : 'tags this -> float) =
      fun (x4321 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4321) "DONE")
    let (get_HEADERS_RECEIVED : 'tags this -> float) =
      fun (x4323 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4323) "HEADERS_RECEIVED")
    let (get_LOADING : 'tags this -> float) =
      fun (x4325 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4325) "LOADING")
    let (get_OPENED : 'tags this -> float) =
      fun (x4327 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4327) "OPENED")
    let (get_UNSENT : 'tags this -> float) =
      fun (x4329 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4329) "UNSENT")
    let (addEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x4339 : 'tags this) ->
        fun ~type_:(x4331 : 'K) ->
          fun ~listener:(x4332 : this:t -> ev:any -> any) ->
            fun
              ?options:(x4333 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x4341 = this_to_js Obj.magic x4339 in
                   Ojs.call (Ojs.get_prop_ascii x4341 "addEventListener")
                     "apply"
                     [|x4341;((let x4334 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4334 "push" [|(Obj.magic x4331)|]);
                               ignore
                                 (Ojs.call x4334 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x4337 : Ojs.t) ->
                                            fun (x4338 : Ojs.t) ->
                                              any_to_js
                                                (x4332 ~this:(t_of_js x4337)
                                                   ~ev:(any_of_js x4338))))|]);
                               (match x4333 with
                                | Some x4335 ->
                                    ignore
                                      (Ojs.call x4334 "push"
                                         [|(or_boolean_to_js
                                              AddEventListenerOptions.t_to_js
                                              x4335)|])
                                | None -> ());
                               x4334))|])
    let (addEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x4348 : 'tags this) ->
        fun ~type_:(x4342 : string) ->
          fun ~listener:(x4343 : EventListenerOrEventListenerObject.t) ->
            fun
              ?options:(x4344 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x4350 = this_to_js Obj.magic x4348 in
                   Ojs.call (Ojs.get_prop_ascii x4350 "addEventListener")
                     "apply"
                     [|x4350;((let x4345 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4345 "push"
                                    [|(Ojs.string_to_js x4342)|]);
                               ignore
                                 (Ojs.call x4345 "push"
                                    [|(EventListenerOrEventListenerObject.t_to_js
                                         x4343)|]);
                               (match x4344 with
                                | Some x4346 ->
                                    ignore
                                      (Ojs.call x4345 "push"
                                         [|(or_boolean_to_js
                                              AddEventListenerOptions.t_to_js
                                              x4346)|])
                                | None -> ());
                               x4345))|])
    let (removeEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x4359 : 'tags this) ->
        fun ~type_:(x4351 : 'K) ->
          fun ~listener:(x4352 : this:t -> ev:any -> any) ->
            fun ?options:(x4353 : EventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x4361 = this_to_js Obj.magic x4359 in
                   Ojs.call (Ojs.get_prop_ascii x4361 "removeEventListener")
                     "apply"
                     [|x4361;((let x4354 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4354 "push" [|(Obj.magic x4351)|]);
                               ignore
                                 (Ojs.call x4354 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x4357 : Ojs.t) ->
                                            fun (x4358 : Ojs.t) ->
                                              any_to_js
                                                (x4352 ~this:(t_of_js x4357)
                                                   ~ev:(any_of_js x4358))))|]);
                               (match x4353 with
                                | Some x4355 ->
                                    ignore
                                      (Ojs.call x4354 "push"
                                         [|(or_boolean_to_js
                                              EventListenerOptions.t_to_js
                                              x4355)|])
                                | None -> ());
                               x4354))|])
    let (removeEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x4368 : 'tags this) ->
        fun ~type_:(x4362 : string) ->
          fun ~listener:(x4363 : EventListenerOrEventListenerObject.t) ->
            fun ?options:(x4364 : EventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x4370 = this_to_js Obj.magic x4368 in
                   Ojs.call (Ojs.get_prop_ascii x4370 "removeEventListener")
                     "apply"
                     [|x4370;((let x4365 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4365 "push"
                                    [|(Ojs.string_to_js x4362)|]);
                               ignore
                                 (Ojs.call x4365 "push"
                                    [|(EventListenerOrEventListenerObject.t_to_js
                                         x4363)|]);
                               (match x4364 with
                                | Some x4366 ->
                                    ignore
                                      (Ojs.call x4365 "push"
                                         [|(or_boolean_to_js
                                              EventListenerOptions.t_to_js
                                              x4366)|])
                                | None -> ());
                               x4365))|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "XMLHttpRequest") "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "XMLHttpRequest") [||])
    let (done_ : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "XMLHttpRequest") "DONE")
    let (headers_received : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "XMLHttpRequest")
             "HEADERS_RECEIVED")
    let (loading : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "XMLHttpRequest") "LOADING")
    let (opened : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "XMLHttpRequest") "OPENED")
    let (unsent : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "XMLHttpRequest") "UNSENT")
  end
 and
  XMLHttpRequestEventTarget:sig
                              type t =
                                [ `EventTarget 
                                | `XMLHttpRequestEventTarget ] intf
                              type t_0 = t
                              [@@@js.stop ]
                              type tags =
                                [ `EventTarget 
                                | `XMLHttpRequestEventTarget ]
                              type tags_0 = tags
                              [@@@js.start ]
                              [@@@js.implem
                                type tags =
                                  [ `EventTarget 
                                  | `XMLHttpRequestEventTarget ]
                                type tags_0 = tags]
                              type 'tags this =
                                'tags intf constraint 'tags =
                                            [> `XMLHttpRequestEventTarget ]
                              val t_to_js : t -> Ojs.t
                              val t_of_js : Ojs.t -> t
                              val t_0_to_js : t_0 -> Ojs.t
                              val t_0_of_js : Ojs.t -> t_0
                              val get_onabort :
                                'tags this ->
                                  (this:XMLHttpRequest.t ->
                                     ev:ProgressEvent.t_0 -> any)
                                    or_null
                              val set_onabort :
                                'tags this ->
                                  (this:XMLHttpRequest.t ->
                                     ev:ProgressEvent.t_0 -> any)
                                    or_null -> unit
                              val get_onerror :
                                'tags this ->
                                  (this:XMLHttpRequest.t ->
                                     ev:ProgressEvent.t_0 -> any)
                                    or_null
                              val set_onerror :
                                'tags this ->
                                  (this:XMLHttpRequest.t ->
                                     ev:ProgressEvent.t_0 -> any)
                                    or_null -> unit
                              val get_onload :
                                'tags this ->
                                  (this:XMLHttpRequest.t ->
                                     ev:ProgressEvent.t_0 -> any)
                                    or_null
                              val set_onload :
                                'tags this ->
                                  (this:XMLHttpRequest.t ->
                                     ev:ProgressEvent.t_0 -> any)
                                    or_null -> unit
                              val get_onloadend :
                                'tags this ->
                                  (this:XMLHttpRequest.t ->
                                     ev:ProgressEvent.t_0 -> any)
                                    or_null
                              val set_onloadend :
                                'tags this ->
                                  (this:XMLHttpRequest.t ->
                                     ev:ProgressEvent.t_0 -> any)
                                    or_null -> unit
                              val get_onloadstart :
                                'tags this ->
                                  (this:XMLHttpRequest.t ->
                                     ev:ProgressEvent.t_0 -> any)
                                    or_null
                              val set_onloadstart :
                                'tags this ->
                                  (this:XMLHttpRequest.t ->
                                     ev:ProgressEvent.t_0 -> any)
                                    or_null -> unit
                              val get_onprogress :
                                'tags this ->
                                  (this:XMLHttpRequest.t ->
                                     ev:ProgressEvent.t_0 -> any)
                                    or_null
                              val set_onprogress :
                                'tags this ->
                                  (this:XMLHttpRequest.t ->
                                     ev:ProgressEvent.t_0 -> any)
                                    or_null -> unit
                              val get_ontimeout :
                                'tags this ->
                                  (this:XMLHttpRequest.t ->
                                     ev:ProgressEvent.t_0 -> any)
                                    or_null
                              val set_ontimeout :
                                'tags this ->
                                  (this:XMLHttpRequest.t ->
                                     ev:ProgressEvent.t_0 -> any)
                                    or_null -> unit
                              val addEventListener :
                                'tags this ->
                                  type_:'K ->
                                    listener:(this:t -> ev:any -> any) ->
                                      ?options:AddEventListenerOptions.t
                                        or_boolean -> unit -> unit
                              val addEventListener' :
                                'tags this ->
                                  type_:string ->
                                    listener:EventListenerOrEventListenerObject.t
                                      ->
                                      ?options:AddEventListenerOptions.t
                                        or_boolean -> unit -> unit
                              val removeEventListener :
                                'tags this ->
                                  type_:'K ->
                                    listener:(this:t -> ev:any -> any) ->
                                      ?options:EventListenerOptions.t
                                        or_boolean -> unit -> unit
                              val removeEventListener' :
                                'tags this ->
                                  type_:string ->
                                    listener:EventListenerOrEventListenerObject.t
                                      ->
                                      ?options:EventListenerOptions.t
                                        or_boolean -> unit -> unit
                              val cast_from : 'tags this -> t
                              val prototype : unit -> t
                              val create : unit -> t
                            end =
  struct
    type t = [ `EventTarget  | `XMLHttpRequestEventTarget ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4372 : Ojs.t) -> t_of_js x4372
    and t_0_to_js : t_0 -> Ojs.t = fun (x4371 : t) -> t_to_js x4371
    type tags = [ `EventTarget  | `XMLHttpRequestEventTarget ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `XMLHttpRequestEventTarget ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4375 : Ojs.t) -> intf_of_js __tags_of_js x4375
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4373 : __tags intf) -> intf_to_js __tags_to_js x4373
    let (get_onabort :
      'tags this ->
        (this:XMLHttpRequest.t -> ev:ProgressEvent.t_0 -> any) or_null)
      =
      fun (x4377 : 'tags this) ->
        or_null_of_js
          (fun (x4379 : Ojs.t) ->
             fun ~this:(x4380 : XMLHttpRequest.t) ->
               fun ~ev:(x4381 : ProgressEvent.t_0) ->
                 any_of_js
                   (Ojs.apply x4379
                      [|(XMLHttpRequest.t_to_js x4380);(ProgressEvent.t_0_to_js
                                                          x4381)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4377) "onabort")
    let (set_onabort :
      'tags this ->
        (this:XMLHttpRequest.t -> ev:ProgressEvent.t_0 -> any) or_null ->
          unit)
      =
      fun (x4382 : 'tags this) ->
        fun
          (x4383 :
            (this:XMLHttpRequest.t -> ev:ProgressEvent.t_0 -> any) or_null)
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4382) "onabort"
            (or_null_to_js
               (fun
                  (x4384 :
                    this:XMLHttpRequest.t -> ev:ProgressEvent.t_0 -> any)
                  ->
                  Ojs.fun_to_js 2
                    (fun (x4385 : Ojs.t) ->
                       fun (x4386 : Ojs.t) ->
                         any_to_js
                           (x4384 ~this:(XMLHttpRequest.t_of_js x4385)
                              ~ev:(ProgressEvent.t_0_of_js x4386)))) x4383)
    let (get_onerror :
      'tags this ->
        (this:XMLHttpRequest.t -> ev:ProgressEvent.t_0 -> any) or_null)
      =
      fun (x4388 : 'tags this) ->
        or_null_of_js
          (fun (x4390 : Ojs.t) ->
             fun ~this:(x4391 : XMLHttpRequest.t) ->
               fun ~ev:(x4392 : ProgressEvent.t_0) ->
                 any_of_js
                   (Ojs.apply x4390
                      [|(XMLHttpRequest.t_to_js x4391);(ProgressEvent.t_0_to_js
                                                          x4392)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4388) "onerror")
    let (set_onerror :
      'tags this ->
        (this:XMLHttpRequest.t -> ev:ProgressEvent.t_0 -> any) or_null ->
          unit)
      =
      fun (x4393 : 'tags this) ->
        fun
          (x4394 :
            (this:XMLHttpRequest.t -> ev:ProgressEvent.t_0 -> any) or_null)
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4393) "onerror"
            (or_null_to_js
               (fun
                  (x4395 :
                    this:XMLHttpRequest.t -> ev:ProgressEvent.t_0 -> any)
                  ->
                  Ojs.fun_to_js 2
                    (fun (x4396 : Ojs.t) ->
                       fun (x4397 : Ojs.t) ->
                         any_to_js
                           (x4395 ~this:(XMLHttpRequest.t_of_js x4396)
                              ~ev:(ProgressEvent.t_0_of_js x4397)))) x4394)
    let (get_onload :
      'tags this ->
        (this:XMLHttpRequest.t -> ev:ProgressEvent.t_0 -> any) or_null)
      =
      fun (x4399 : 'tags this) ->
        or_null_of_js
          (fun (x4401 : Ojs.t) ->
             fun ~this:(x4402 : XMLHttpRequest.t) ->
               fun ~ev:(x4403 : ProgressEvent.t_0) ->
                 any_of_js
                   (Ojs.apply x4401
                      [|(XMLHttpRequest.t_to_js x4402);(ProgressEvent.t_0_to_js
                                                          x4403)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4399) "onload")
    let (set_onload :
      'tags this ->
        (this:XMLHttpRequest.t -> ev:ProgressEvent.t_0 -> any) or_null ->
          unit)
      =
      fun (x4404 : 'tags this) ->
        fun
          (x4405 :
            (this:XMLHttpRequest.t -> ev:ProgressEvent.t_0 -> any) or_null)
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4404) "onload"
            (or_null_to_js
               (fun
                  (x4406 :
                    this:XMLHttpRequest.t -> ev:ProgressEvent.t_0 -> any)
                  ->
                  Ojs.fun_to_js 2
                    (fun (x4407 : Ojs.t) ->
                       fun (x4408 : Ojs.t) ->
                         any_to_js
                           (x4406 ~this:(XMLHttpRequest.t_of_js x4407)
                              ~ev:(ProgressEvent.t_0_of_js x4408)))) x4405)
    let (get_onloadend :
      'tags this ->
        (this:XMLHttpRequest.t -> ev:ProgressEvent.t_0 -> any) or_null)
      =
      fun (x4410 : 'tags this) ->
        or_null_of_js
          (fun (x4412 : Ojs.t) ->
             fun ~this:(x4413 : XMLHttpRequest.t) ->
               fun ~ev:(x4414 : ProgressEvent.t_0) ->
                 any_of_js
                   (Ojs.apply x4412
                      [|(XMLHttpRequest.t_to_js x4413);(ProgressEvent.t_0_to_js
                                                          x4414)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4410) "onloadend")
    let (set_onloadend :
      'tags this ->
        (this:XMLHttpRequest.t -> ev:ProgressEvent.t_0 -> any) or_null ->
          unit)
      =
      fun (x4415 : 'tags this) ->
        fun
          (x4416 :
            (this:XMLHttpRequest.t -> ev:ProgressEvent.t_0 -> any) or_null)
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4415) "onloadend"
            (or_null_to_js
               (fun
                  (x4417 :
                    this:XMLHttpRequest.t -> ev:ProgressEvent.t_0 -> any)
                  ->
                  Ojs.fun_to_js 2
                    (fun (x4418 : Ojs.t) ->
                       fun (x4419 : Ojs.t) ->
                         any_to_js
                           (x4417 ~this:(XMLHttpRequest.t_of_js x4418)
                              ~ev:(ProgressEvent.t_0_of_js x4419)))) x4416)
    let (get_onloadstart :
      'tags this ->
        (this:XMLHttpRequest.t -> ev:ProgressEvent.t_0 -> any) or_null)
      =
      fun (x4421 : 'tags this) ->
        or_null_of_js
          (fun (x4423 : Ojs.t) ->
             fun ~this:(x4424 : XMLHttpRequest.t) ->
               fun ~ev:(x4425 : ProgressEvent.t_0) ->
                 any_of_js
                   (Ojs.apply x4423
                      [|(XMLHttpRequest.t_to_js x4424);(ProgressEvent.t_0_to_js
                                                          x4425)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4421) "onloadstart")
    let (set_onloadstart :
      'tags this ->
        (this:XMLHttpRequest.t -> ev:ProgressEvent.t_0 -> any) or_null ->
          unit)
      =
      fun (x4426 : 'tags this) ->
        fun
          (x4427 :
            (this:XMLHttpRequest.t -> ev:ProgressEvent.t_0 -> any) or_null)
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4426) "onloadstart"
            (or_null_to_js
               (fun
                  (x4428 :
                    this:XMLHttpRequest.t -> ev:ProgressEvent.t_0 -> any)
                  ->
                  Ojs.fun_to_js 2
                    (fun (x4429 : Ojs.t) ->
                       fun (x4430 : Ojs.t) ->
                         any_to_js
                           (x4428 ~this:(XMLHttpRequest.t_of_js x4429)
                              ~ev:(ProgressEvent.t_0_of_js x4430)))) x4427)
    let (get_onprogress :
      'tags this ->
        (this:XMLHttpRequest.t -> ev:ProgressEvent.t_0 -> any) or_null)
      =
      fun (x4432 : 'tags this) ->
        or_null_of_js
          (fun (x4434 : Ojs.t) ->
             fun ~this:(x4435 : XMLHttpRequest.t) ->
               fun ~ev:(x4436 : ProgressEvent.t_0) ->
                 any_of_js
                   (Ojs.apply x4434
                      [|(XMLHttpRequest.t_to_js x4435);(ProgressEvent.t_0_to_js
                                                          x4436)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4432) "onprogress")
    let (set_onprogress :
      'tags this ->
        (this:XMLHttpRequest.t -> ev:ProgressEvent.t_0 -> any) or_null ->
          unit)
      =
      fun (x4437 : 'tags this) ->
        fun
          (x4438 :
            (this:XMLHttpRequest.t -> ev:ProgressEvent.t_0 -> any) or_null)
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4437) "onprogress"
            (or_null_to_js
               (fun
                  (x4439 :
                    this:XMLHttpRequest.t -> ev:ProgressEvent.t_0 -> any)
                  ->
                  Ojs.fun_to_js 2
                    (fun (x4440 : Ojs.t) ->
                       fun (x4441 : Ojs.t) ->
                         any_to_js
                           (x4439 ~this:(XMLHttpRequest.t_of_js x4440)
                              ~ev:(ProgressEvent.t_0_of_js x4441)))) x4438)
    let (get_ontimeout :
      'tags this ->
        (this:XMLHttpRequest.t -> ev:ProgressEvent.t_0 -> any) or_null)
      =
      fun (x4443 : 'tags this) ->
        or_null_of_js
          (fun (x4445 : Ojs.t) ->
             fun ~this:(x4446 : XMLHttpRequest.t) ->
               fun ~ev:(x4447 : ProgressEvent.t_0) ->
                 any_of_js
                   (Ojs.apply x4445
                      [|(XMLHttpRequest.t_to_js x4446);(ProgressEvent.t_0_to_js
                                                          x4447)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4443) "ontimeout")
    let (set_ontimeout :
      'tags this ->
        (this:XMLHttpRequest.t -> ev:ProgressEvent.t_0 -> any) or_null ->
          unit)
      =
      fun (x4448 : 'tags this) ->
        fun
          (x4449 :
            (this:XMLHttpRequest.t -> ev:ProgressEvent.t_0 -> any) or_null)
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4448) "ontimeout"
            (or_null_to_js
               (fun
                  (x4450 :
                    this:XMLHttpRequest.t -> ev:ProgressEvent.t_0 -> any)
                  ->
                  Ojs.fun_to_js 2
                    (fun (x4451 : Ojs.t) ->
                       fun (x4452 : Ojs.t) ->
                         any_to_js
                           (x4450 ~this:(XMLHttpRequest.t_of_js x4451)
                              ~ev:(ProgressEvent.t_0_of_js x4452)))) x4449)
    let (addEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x4462 : 'tags this) ->
        fun ~type_:(x4454 : 'K) ->
          fun ~listener:(x4455 : this:t -> ev:any -> any) ->
            fun
              ?options:(x4456 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x4464 = this_to_js Obj.magic x4462 in
                   Ojs.call (Ojs.get_prop_ascii x4464 "addEventListener")
                     "apply"
                     [|x4464;((let x4457 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4457 "push" [|(Obj.magic x4454)|]);
                               ignore
                                 (Ojs.call x4457 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x4460 : Ojs.t) ->
                                            fun (x4461 : Ojs.t) ->
                                              any_to_js
                                                (x4455 ~this:(t_of_js x4460)
                                                   ~ev:(any_of_js x4461))))|]);
                               (match x4456 with
                                | Some x4458 ->
                                    ignore
                                      (Ojs.call x4457 "push"
                                         [|(or_boolean_to_js
                                              AddEventListenerOptions.t_to_js
                                              x4458)|])
                                | None -> ());
                               x4457))|])
    let (addEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x4471 : 'tags this) ->
        fun ~type_:(x4465 : string) ->
          fun ~listener:(x4466 : EventListenerOrEventListenerObject.t) ->
            fun
              ?options:(x4467 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x4473 = this_to_js Obj.magic x4471 in
                   Ojs.call (Ojs.get_prop_ascii x4473 "addEventListener")
                     "apply"
                     [|x4473;((let x4468 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4468 "push"
                                    [|(Ojs.string_to_js x4465)|]);
                               ignore
                                 (Ojs.call x4468 "push"
                                    [|(EventListenerOrEventListenerObject.t_to_js
                                         x4466)|]);
                               (match x4467 with
                                | Some x4469 ->
                                    ignore
                                      (Ojs.call x4468 "push"
                                         [|(or_boolean_to_js
                                              AddEventListenerOptions.t_to_js
                                              x4469)|])
                                | None -> ());
                               x4468))|])
    let (removeEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x4482 : 'tags this) ->
        fun ~type_:(x4474 : 'K) ->
          fun ~listener:(x4475 : this:t -> ev:any -> any) ->
            fun ?options:(x4476 : EventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x4484 = this_to_js Obj.magic x4482 in
                   Ojs.call (Ojs.get_prop_ascii x4484 "removeEventListener")
                     "apply"
                     [|x4484;((let x4477 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4477 "push" [|(Obj.magic x4474)|]);
                               ignore
                                 (Ojs.call x4477 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x4480 : Ojs.t) ->
                                            fun (x4481 : Ojs.t) ->
                                              any_to_js
                                                (x4475 ~this:(t_of_js x4480)
                                                   ~ev:(any_of_js x4481))))|]);
                               (match x4476 with
                                | Some x4478 ->
                                    ignore
                                      (Ojs.call x4477 "push"
                                         [|(or_boolean_to_js
                                              EventListenerOptions.t_to_js
                                              x4478)|])
                                | None -> ());
                               x4477))|])
    let (removeEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x4491 : 'tags this) ->
        fun ~type_:(x4485 : string) ->
          fun ~listener:(x4486 : EventListenerOrEventListenerObject.t) ->
            fun ?options:(x4487 : EventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x4493 = this_to_js Obj.magic x4491 in
                   Ojs.call (Ojs.get_prop_ascii x4493 "removeEventListener")
                     "apply"
                     [|x4493;((let x4488 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4488 "push"
                                    [|(Ojs.string_to_js x4485)|]);
                               ignore
                                 (Ojs.call x4488 "push"
                                    [|(EventListenerOrEventListenerObject.t_to_js
                                         x4486)|]);
                               (match x4487 with
                                | Some x4489 ->
                                    ignore
                                      (Ojs.call x4488 "push"
                                         [|(or_boolean_to_js
                                              EventListenerOptions.t_to_js
                                              x4489)|])
                                | None -> ());
                               x4488))|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "XMLHttpRequestEventTarget")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj
             (Ojs.get_prop_ascii Ojs.global "XMLHttpRequestEventTarget") 
             [||])
  end and
       XMLHttpRequestUpload:sig
                              type t =
                                [ `EventTarget  | `XMLHttpRequestEventTarget 
                                | `XMLHttpRequestUpload ] intf
                              type t_0 = t
                              [@@@js.stop ]
                              type tags =
                                [ `EventTarget  | `XMLHttpRequestEventTarget 
                                | `XMLHttpRequestUpload ]
                              type tags_0 = tags
                              [@@@js.start ]
                              [@@@js.implem
                                type tags =
                                  [ `EventTarget 
                                  | `XMLHttpRequestEventTarget 
                                  | `XMLHttpRequestUpload ]
                                type tags_0 = tags]
                              type 'tags this =
                                'tags intf constraint 'tags =
                                            [> `XMLHttpRequestUpload ]
                              val t_to_js : t -> Ojs.t
                              val t_of_js : Ojs.t -> t
                              val t_0_to_js : t_0 -> Ojs.t
                              val t_0_of_js : Ojs.t -> t_0
                              val addEventListener :
                                'tags this ->
                                  type_:'K ->
                                    listener:(this:t -> ev:any -> any) ->
                                      ?options:AddEventListenerOptions.t
                                        or_boolean -> unit -> unit
                              val addEventListener' :
                                'tags this ->
                                  type_:string ->
                                    listener:EventListenerOrEventListenerObject.t
                                      ->
                                      ?options:AddEventListenerOptions.t
                                        or_boolean -> unit -> unit
                              val removeEventListener :
                                'tags this ->
                                  type_:'K ->
                                    listener:(this:t -> ev:any -> any) ->
                                      ?options:EventListenerOptions.t
                                        or_boolean -> unit -> unit
                              val removeEventListener' :
                                'tags this ->
                                  type_:string ->
                                    listener:EventListenerOrEventListenerObject.t
                                      ->
                                      ?options:EventListenerOptions.t
                                        or_boolean -> unit -> unit
                              val cast_from : 'tags this -> t
                              val prototype : unit -> t
                              val create : unit -> t
                            end =
       struct
         type t =
           [ `EventTarget  | `XMLHttpRequestEventTarget 
           | `XMLHttpRequestUpload ] intf
         let rec t_of_js : Ojs.t -> t = Obj.magic
         and t_to_js : t -> Ojs.t = Obj.magic
         type t_0 = t
         let rec t_0_of_js : Ojs.t -> t_0 =
           fun (x4495 : Ojs.t) -> t_of_js x4495
         and t_0_to_js : t_0 -> Ojs.t = fun (x4494 : t) -> t_to_js x4494
         type tags =
           [ `EventTarget  | `XMLHttpRequestEventTarget 
           | `XMLHttpRequestUpload ]
         type tags_0 = tags
         type 'tags this =
           'tags intf constraint 'tags = [> `XMLHttpRequestUpload ]
         let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
           = fun (type __tags) ->
           fun (__tags_of_js : Ojs.t -> __tags) ->
             fun (x4498 : Ojs.t) -> intf_of_js __tags_of_js x4498
         and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
           fun (type __tags) ->
           fun (__tags_to_js : __tags -> Ojs.t) ->
             fun (x4496 : __tags intf) -> intf_to_js __tags_to_js x4496
         let (addEventListener :
           'tags this ->
             type_:'K ->
               listener:(this:t -> ev:any -> any) ->
                 ?options:AddEventListenerOptions.t or_boolean ->
                   unit -> unit)
           =
           fun (x4508 : 'tags this) ->
             fun ~type_:(x4500 : 'K) ->
               fun ~listener:(x4501 : this:t -> ev:any -> any) ->
                 fun
                   ?options:(x4502 :
                              AddEventListenerOptions.t or_boolean option)
                   ->
                   fun () ->
                     ignore
                       (let x4510 = this_to_js Obj.magic x4508 in
                        Ojs.call
                          (Ojs.get_prop_ascii x4510 "addEventListener")
                          "apply"
                          [|x4510;((let x4503 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    ignore
                                      (Ojs.call x4503 "push"
                                         [|(Obj.magic x4500)|]);
                                    ignore
                                      (Ojs.call x4503 "push"
                                         [|(Ojs.fun_to_js 2
                                              (fun (x4506 : Ojs.t) ->
                                                 fun (x4507 : Ojs.t) ->
                                                   any_to_js
                                                     (x4501
                                                        ~this:(t_of_js x4506)
                                                        ~ev:(any_of_js x4507))))|]);
                                    (match x4502 with
                                     | Some x4504 ->
                                         ignore
                                           (Ojs.call x4503 "push"
                                              [|(or_boolean_to_js
                                                   AddEventListenerOptions.t_to_js
                                                   x4504)|])
                                     | None -> ());
                                    x4503))|])
         let (addEventListener' :
           'tags this ->
             type_:string ->
               listener:EventListenerOrEventListenerObject.t ->
                 ?options:AddEventListenerOptions.t or_boolean ->
                   unit -> unit)
           =
           fun (x4517 : 'tags this) ->
             fun ~type_:(x4511 : string) ->
               fun ~listener:(x4512 : EventListenerOrEventListenerObject.t)
                 ->
                 fun
                   ?options:(x4513 :
                              AddEventListenerOptions.t or_boolean option)
                   ->
                   fun () ->
                     ignore
                       (let x4519 = this_to_js Obj.magic x4517 in
                        Ojs.call
                          (Ojs.get_prop_ascii x4519 "addEventListener")
                          "apply"
                          [|x4519;((let x4514 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    ignore
                                      (Ojs.call x4514 "push"
                                         [|(Ojs.string_to_js x4511)|]);
                                    ignore
                                      (Ojs.call x4514 "push"
                                         [|(EventListenerOrEventListenerObject.t_to_js
                                              x4512)|]);
                                    (match x4513 with
                                     | Some x4515 ->
                                         ignore
                                           (Ojs.call x4514 "push"
                                              [|(or_boolean_to_js
                                                   AddEventListenerOptions.t_to_js
                                                   x4515)|])
                                     | None -> ());
                                    x4514))|])
         let (removeEventListener :
           'tags this ->
             type_:'K ->
               listener:(this:t -> ev:any -> any) ->
                 ?options:EventListenerOptions.t or_boolean -> unit -> unit)
           =
           fun (x4528 : 'tags this) ->
             fun ~type_:(x4520 : 'K) ->
               fun ~listener:(x4521 : this:t -> ev:any -> any) ->
                 fun
                   ?options:(x4522 :
                              EventListenerOptions.t or_boolean option)
                   ->
                   fun () ->
                     ignore
                       (let x4530 = this_to_js Obj.magic x4528 in
                        Ojs.call
                          (Ojs.get_prop_ascii x4530 "removeEventListener")
                          "apply"
                          [|x4530;((let x4523 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    ignore
                                      (Ojs.call x4523 "push"
                                         [|(Obj.magic x4520)|]);
                                    ignore
                                      (Ojs.call x4523 "push"
                                         [|(Ojs.fun_to_js 2
                                              (fun (x4526 : Ojs.t) ->
                                                 fun (x4527 : Ojs.t) ->
                                                   any_to_js
                                                     (x4521
                                                        ~this:(t_of_js x4526)
                                                        ~ev:(any_of_js x4527))))|]);
                                    (match x4522 with
                                     | Some x4524 ->
                                         ignore
                                           (Ojs.call x4523 "push"
                                              [|(or_boolean_to_js
                                                   EventListenerOptions.t_to_js
                                                   x4524)|])
                                     | None -> ());
                                    x4523))|])
         let (removeEventListener' :
           'tags this ->
             type_:string ->
               listener:EventListenerOrEventListenerObject.t ->
                 ?options:EventListenerOptions.t or_boolean -> unit -> unit)
           =
           fun (x4537 : 'tags this) ->
             fun ~type_:(x4531 : string) ->
               fun ~listener:(x4532 : EventListenerOrEventListenerObject.t)
                 ->
                 fun
                   ?options:(x4533 :
                              EventListenerOptions.t or_boolean option)
                   ->
                   fun () ->
                     ignore
                       (let x4539 = this_to_js Obj.magic x4537 in
                        Ojs.call
                          (Ojs.get_prop_ascii x4539 "removeEventListener")
                          "apply"
                          [|x4539;((let x4534 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    ignore
                                      (Ojs.call x4534 "push"
                                         [|(Ojs.string_to_js x4531)|]);
                                    ignore
                                      (Ojs.call x4534 "push"
                                         [|(EventListenerOrEventListenerObject.t_to_js
                                              x4532)|]);
                                    (match x4533 with
                                     | Some x4535 ->
                                         ignore
                                           (Ojs.call x4534 "push"
                                              [|(or_boolean_to_js
                                                   EventListenerOptions.t_to_js
                                                   x4535)|])
                                     | None -> ());
                                    x4534))|])
         let cast_from = Obj.magic
         let (prototype : unit -> t) =
           fun () ->
             t_of_js
               (Ojs.get_prop_ascii
                  (Ojs.get_prop_ascii Ojs.global "XMLHttpRequestUpload")
                  "prototype")
         let (create : unit -> t) =
           fun () ->
             t_of_js
               (Ojs.new_obj
                  (Ojs.get_prop_ascii Ojs.global "XMLHttpRequestUpload") 
                  [||])
       end
module XMLHttpRequestEventTargetEventMap =
  struct
    type t = [ `XMLHttpRequestEventTargetEventMap ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4541 : Ojs.t) -> t_of_js x4541
    and t_0_to_js : t_0 -> Ojs.t = fun (x4540 : t) -> t_to_js x4540
    type tags = [ `XMLHttpRequestEventTargetEventMap ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `XMLHttpRequestEventTargetEventMap ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4544 : Ojs.t) -> intf_of_js __tags_of_js x4544
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4542 : __tags intf) -> intf_to_js __tags_to_js x4542
    let (get_abort :
      'tags this -> XMLHttpRequestEventTarget.t ProgressEvent.t) =
      fun (x4546 : 'tags this) ->
        ProgressEvent.t_of_js XMLHttpRequestEventTarget.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4546) "abort")
    let (set_abort :
      'tags this -> XMLHttpRequestEventTarget.t ProgressEvent.t -> unit) =
      fun (x4549 : 'tags this) ->
        fun (x4550 : XMLHttpRequestEventTarget.t ProgressEvent.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4549) "abort"
            (ProgressEvent.t_to_js XMLHttpRequestEventTarget.t_to_js x4550)
    let (get_error :
      'tags this -> XMLHttpRequestEventTarget.t ProgressEvent.t) =
      fun (x4553 : 'tags this) ->
        ProgressEvent.t_of_js XMLHttpRequestEventTarget.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4553) "error")
    let (set_error :
      'tags this -> XMLHttpRequestEventTarget.t ProgressEvent.t -> unit) =
      fun (x4556 : 'tags this) ->
        fun (x4557 : XMLHttpRequestEventTarget.t ProgressEvent.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4556) "error"
            (ProgressEvent.t_to_js XMLHttpRequestEventTarget.t_to_js x4557)
    let (get_load :
      'tags this -> XMLHttpRequestEventTarget.t ProgressEvent.t) =
      fun (x4560 : 'tags this) ->
        ProgressEvent.t_of_js XMLHttpRequestEventTarget.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4560) "load")
    let (set_load :
      'tags this -> XMLHttpRequestEventTarget.t ProgressEvent.t -> unit) =
      fun (x4563 : 'tags this) ->
        fun (x4564 : XMLHttpRequestEventTarget.t ProgressEvent.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4563) "load"
            (ProgressEvent.t_to_js XMLHttpRequestEventTarget.t_to_js x4564)
    let (get_loadend :
      'tags this -> XMLHttpRequestEventTarget.t ProgressEvent.t) =
      fun (x4567 : 'tags this) ->
        ProgressEvent.t_of_js XMLHttpRequestEventTarget.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4567) "loadend")
    let (set_loadend :
      'tags this -> XMLHttpRequestEventTarget.t ProgressEvent.t -> unit) =
      fun (x4570 : 'tags this) ->
        fun (x4571 : XMLHttpRequestEventTarget.t ProgressEvent.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4570) "loadend"
            (ProgressEvent.t_to_js XMLHttpRequestEventTarget.t_to_js x4571)
    let (get_loadstart :
      'tags this -> XMLHttpRequestEventTarget.t ProgressEvent.t) =
      fun (x4574 : 'tags this) ->
        ProgressEvent.t_of_js XMLHttpRequestEventTarget.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4574) "loadstart")
    let (set_loadstart :
      'tags this -> XMLHttpRequestEventTarget.t ProgressEvent.t -> unit) =
      fun (x4577 : 'tags this) ->
        fun (x4578 : XMLHttpRequestEventTarget.t ProgressEvent.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4577) "loadstart"
            (ProgressEvent.t_to_js XMLHttpRequestEventTarget.t_to_js x4578)
    let (get_progress :
      'tags this -> XMLHttpRequestEventTarget.t ProgressEvent.t) =
      fun (x4581 : 'tags this) ->
        ProgressEvent.t_of_js XMLHttpRequestEventTarget.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4581) "progress")
    let (set_progress :
      'tags this -> XMLHttpRequestEventTarget.t ProgressEvent.t -> unit) =
      fun (x4584 : 'tags this) ->
        fun (x4585 : XMLHttpRequestEventTarget.t ProgressEvent.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4584) "progress"
            (ProgressEvent.t_to_js XMLHttpRequestEventTarget.t_to_js x4585)
    let (get_timeout :
      'tags this -> XMLHttpRequestEventTarget.t ProgressEvent.t) =
      fun (x4588 : 'tags this) ->
        ProgressEvent.t_of_js XMLHttpRequestEventTarget.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4588) "timeout")
    let (set_timeout :
      'tags this -> XMLHttpRequestEventTarget.t ProgressEvent.t -> unit) =
      fun (x4591 : 'tags this) ->
        fun (x4592 : XMLHttpRequestEventTarget.t ProgressEvent.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4591) "timeout"
            (ProgressEvent.t_to_js XMLHttpRequestEventTarget.t_to_js x4592)
    let cast_from = Obj.magic
  end
module XMLHttpRequestEventMap =
  struct
    type t =
      [ `XMLHttpRequestEventMap  | `XMLHttpRequestEventTargetEventMap ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4596 : Ojs.t) -> t_of_js x4596
    and t_0_to_js : t_0 -> Ojs.t = fun (x4595 : t) -> t_to_js x4595
    type tags =
      [ `XMLHttpRequestEventMap  | `XMLHttpRequestEventTargetEventMap ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `XMLHttpRequestEventMap ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4599 : Ojs.t) -> intf_of_js __tags_of_js x4599
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4597 : __tags intf) -> intf_to_js __tags_to_js x4597
    let (get_readystatechange : 'tags this -> Event.t) =
      fun (x4601 : 'tags this) ->
        Event.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4601) "readystatechange")
    let (set_readystatechange : 'tags this -> Event.t -> unit) =
      fun (x4603 : 'tags this) ->
        fun (x4604 : Event.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4603) "readystatechange"
            (Event.t_to_js x4604)
    let cast_from = Obj.magic
  end
module ServiceWorkerState =
  struct
    type t =
      [ `L_s146_parsed  | `L_s166_redundant  | `L_s33_activated 
      | `L_s34_activating  | `L_s94_installed  | `L_s95_installing ]
    let rec t_of_js : Ojs.t -> t =
      fun (x4607 : Ojs.t) ->
        let x4608 = x4607 in
        match Ojs.string_of_js x4608 with
        | "parsed" -> `L_s146_parsed
        | "redundant" -> `L_s166_redundant
        | "activated" -> `L_s33_activated
        | "activating" -> `L_s34_activating
        | "installed" -> `L_s94_installed
        | "installing" -> `L_s95_installing
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun
        (x4606 :
          [ `L_s146_parsed  | `L_s166_redundant  | `L_s33_activated 
          | `L_s34_activating  | `L_s94_installed  | `L_s95_installing ])
        ->
        match x4606 with
        | `L_s146_parsed -> Ojs.string_to_js "parsed"
        | `L_s166_redundant -> Ojs.string_to_js "redundant"
        | `L_s33_activated -> Ojs.string_to_js "activated"
        | `L_s34_activating -> Ojs.string_to_js "activating"
        | `L_s94_installed -> Ojs.string_to_js "installed"
        | `L_s95_installing -> Ojs.string_to_js "installing"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4610 : Ojs.t) -> t_of_js x4610
    and t_0_to_js : t_0 -> Ojs.t = fun (x4609 : t) -> t_to_js x4609
  end
module ImageBitmap =
  struct
    type t = [ `ImageBitmap ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4612 : Ojs.t) -> t_of_js x4612
    and t_0_to_js : t_0 -> Ojs.t = fun (x4611 : t) -> t_to_js x4611
    type tags = [ `ImageBitmap ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ImageBitmap ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4615 : Ojs.t) -> intf_of_js __tags_of_js x4615
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4613 : __tags intf) -> intf_to_js __tags_to_js x4613
    let (get_height : 'tags this -> float) =
      fun (x4617 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4617) "height")
    let (get_width : 'tags this -> float) =
      fun (x4619 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4619) "width")
    let (close : 'tags this -> unit) =
      fun (x4621 : 'tags this) ->
        ignore (Ojs.call (this_to_js Obj.magic x4621) "close" [||])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ImageBitmap")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "ImageBitmap") [||])
  end
module StructuredSerializeOptions =
  struct
    type t = [ `StructuredSerializeOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4624 : Ojs.t) -> t_of_js x4624
    and t_0_to_js : t_0 -> Ojs.t = fun (x4623 : t) -> t_to_js x4623
    type tags = [ `StructuredSerializeOptions ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `StructuredSerializeOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4627 : Ojs.t) -> intf_of_js __tags_of_js x4627
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4625 : __tags intf) -> intf_to_js __tags_to_js x4625
    let (get_transfer : 'tags this -> any list) =
      fun (x4629 : 'tags this) ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4629) "transfer")
    let (set_transfer : 'tags this -> any list -> unit) =
      fun (x4632 : 'tags this) ->
        fun (x4633 : any list) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4632) "transfer"
            (Ojs.list_to_js any_to_js x4633)
    let cast_from = Obj.magic
  end
module ErrorEventInit =
  struct
    type t = [ `ErrorEventInit  | `EventInit ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4637 : Ojs.t) -> t_of_js x4637
    and t_0_to_js : t_0 -> Ojs.t = fun (x4636 : t) -> t_to_js x4636
    type tags = [ `ErrorEventInit  | `EventInit ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ErrorEventInit ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4640 : Ojs.t) -> intf_of_js __tags_of_js x4640
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4638 : __tags intf) -> intf_to_js __tags_to_js x4638
    let (get_colno : 'tags this -> float) =
      fun (x4642 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4642) "colno")
    let (set_colno : 'tags this -> float -> unit) =
      fun (x4644 : 'tags this) ->
        fun (x4645 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4644) "colno"
            (Ojs.float_to_js x4645)
    let (get_error : 'tags this -> any) =
      fun (x4647 : 'tags this) ->
        any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x4647) "error")
    let (set_error : 'tags this -> any -> unit) =
      fun (x4649 : 'tags this) ->
        fun (x4650 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4649) "error"
            (any_to_js x4650)
    let (get_filename : 'tags this -> string) =
      fun (x4652 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4652) "filename")
    let (set_filename : 'tags this -> string -> unit) =
      fun (x4654 : 'tags this) ->
        fun (x4655 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4654) "filename"
            (Ojs.string_to_js x4655)
    let (get_lineno : 'tags this -> float) =
      fun (x4657 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4657) "lineno")
    let (set_lineno : 'tags this -> float -> unit) =
      fun (x4659 : 'tags this) ->
        fun (x4660 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4659) "lineno"
            (Ojs.float_to_js x4660)
    let (get_message : 'tags this -> string) =
      fun (x4662 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4662) "message")
    let (set_message : 'tags this -> string -> unit) =
      fun (x4664 : 'tags this) ->
        fun (x4665 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4664) "message"
            (Ojs.string_to_js x4665)
    let cast_from = Obj.magic
  end
module ErrorEvent =
  struct
    type t = [ `ErrorEvent  | `Event ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4668 : Ojs.t) -> t_of_js x4668
    and t_0_to_js : t_0 -> Ojs.t = fun (x4667 : t) -> t_to_js x4667
    type tags = [ `ErrorEvent  | `Event ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ErrorEvent ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4671 : Ojs.t) -> intf_of_js __tags_of_js x4671
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4669 : __tags intf) -> intf_to_js __tags_to_js x4669
    let (get_colno : 'tags this -> float) =
      fun (x4673 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4673) "colno")
    let (get_error : 'tags this -> any) =
      fun (x4675 : 'tags this) ->
        any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x4675) "error")
    let (get_filename : 'tags this -> string) =
      fun (x4677 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4677) "filename")
    let (get_lineno : 'tags this -> float) =
      fun (x4679 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4679) "lineno")
    let (get_message : 'tags this -> string) =
      fun (x4681 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4681) "message")
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ErrorEvent")
             "prototype")
    let (create :
      type_:string -> ?eventInitDict:ErrorEventInit.t -> unit -> t) =
      fun ~type_:(x4683 : string) ->
        fun ?eventInitDict:(x4684 : ErrorEventInit.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "ErrorEvent")
                 (let x4685 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x4685 "push" [|(Ojs.string_to_js x4683)|]);
                  (match x4684 with
                   | Some x4686 ->
                       ignore
                         (Ojs.call x4685 "push"
                            [|(ErrorEventInit.t_to_js x4686)|])
                   | None -> ());
                  x4685))
  end
module AbstractWorker =
  struct
    type t = [ `AbstractWorker ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4688 : Ojs.t) -> t_of_js x4688
    and t_0_to_js : t_0 -> Ojs.t = fun (x4687 : t) -> t_to_js x4687
    type tags = [ `AbstractWorker ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `AbstractWorker ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4691 : Ojs.t) -> intf_of_js __tags_of_js x4691
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4689 : __tags intf) -> intf_to_js __tags_to_js x4689
    let (get_onerror :
      'tags this -> (this:t -> ev:ErrorEvent.t -> any) or_null) =
      fun (x4693 : 'tags this) ->
        or_null_of_js
          (fun (x4695 : Ojs.t) ->
             fun ~this:(x4696 : t) ->
               fun ~ev:(x4697 : ErrorEvent.t) ->
                 any_of_js
                   (Ojs.apply x4695
                      [|(t_to_js x4696);(ErrorEvent.t_to_js x4697)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4693) "onerror")
    let (set_onerror :
      'tags this -> (this:t -> ev:ErrorEvent.t -> any) or_null -> unit) =
      fun (x4698 : 'tags this) ->
        fun (x4699 : (this:t -> ev:ErrorEvent.t -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4698) "onerror"
            (or_null_to_js
               (fun (x4700 : this:t -> ev:ErrorEvent.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x4701 : Ojs.t) ->
                       fun (x4702 : Ojs.t) ->
                         any_to_js
                           (x4700 ~this:(t_of_js x4701)
                              ~ev:(ErrorEvent.t_of_js x4702)))) x4699)
    let (addEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x4712 : 'tags this) ->
        fun ~type_:(x4704 : 'K) ->
          fun ~listener:(x4705 : this:t -> ev:any -> any) ->
            fun
              ?options:(x4706 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x4714 = this_to_js Obj.magic x4712 in
                   Ojs.call (Ojs.get_prop_ascii x4714 "addEventListener")
                     "apply"
                     [|x4714;((let x4707 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4707 "push" [|(Obj.magic x4704)|]);
                               ignore
                                 (Ojs.call x4707 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x4710 : Ojs.t) ->
                                            fun (x4711 : Ojs.t) ->
                                              any_to_js
                                                (x4705 ~this:(t_of_js x4710)
                                                   ~ev:(any_of_js x4711))))|]);
                               (match x4706 with
                                | Some x4708 ->
                                    ignore
                                      (Ojs.call x4707 "push"
                                         [|(or_boolean_to_js
                                              AddEventListenerOptions.t_to_js
                                              x4708)|])
                                | None -> ());
                               x4707))|])
    let (addEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x4721 : 'tags this) ->
        fun ~type_:(x4715 : string) ->
          fun ~listener:(x4716 : EventListenerOrEventListenerObject.t) ->
            fun
              ?options:(x4717 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x4723 = this_to_js Obj.magic x4721 in
                   Ojs.call (Ojs.get_prop_ascii x4723 "addEventListener")
                     "apply"
                     [|x4723;((let x4718 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4718 "push"
                                    [|(Ojs.string_to_js x4715)|]);
                               ignore
                                 (Ojs.call x4718 "push"
                                    [|(EventListenerOrEventListenerObject.t_to_js
                                         x4716)|]);
                               (match x4717 with
                                | Some x4719 ->
                                    ignore
                                      (Ojs.call x4718 "push"
                                         [|(or_boolean_to_js
                                              AddEventListenerOptions.t_to_js
                                              x4719)|])
                                | None -> ());
                               x4718))|])
    let (removeEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x4732 : 'tags this) ->
        fun ~type_:(x4724 : 'K) ->
          fun ~listener:(x4725 : this:t -> ev:any -> any) ->
            fun ?options:(x4726 : EventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x4734 = this_to_js Obj.magic x4732 in
                   Ojs.call (Ojs.get_prop_ascii x4734 "removeEventListener")
                     "apply"
                     [|x4734;((let x4727 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4727 "push" [|(Obj.magic x4724)|]);
                               ignore
                                 (Ojs.call x4727 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x4730 : Ojs.t) ->
                                            fun (x4731 : Ojs.t) ->
                                              any_to_js
                                                (x4725 ~this:(t_of_js x4730)
                                                   ~ev:(any_of_js x4731))))|]);
                               (match x4726 with
                                | Some x4728 ->
                                    ignore
                                      (Ojs.call x4727 "push"
                                         [|(or_boolean_to_js
                                              EventListenerOptions.t_to_js
                                              x4728)|])
                                | None -> ());
                               x4727))|])
    let (removeEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x4741 : 'tags this) ->
        fun ~type_:(x4735 : string) ->
          fun ~listener:(x4736 : EventListenerOrEventListenerObject.t) ->
            fun ?options:(x4737 : EventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x4743 = this_to_js Obj.magic x4741 in
                   Ojs.call (Ojs.get_prop_ascii x4743 "removeEventListener")
                     "apply"
                     [|x4743;((let x4738 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4738 "push"
                                    [|(Ojs.string_to_js x4735)|]);
                               ignore
                                 (Ojs.call x4738 "push"
                                    [|(EventListenerOrEventListenerObject.t_to_js
                                         x4736)|]);
                               (match x4737 with
                                | Some x4739 ->
                                    ignore
                                      (Ojs.call x4738 "push"
                                         [|(or_boolean_to_js
                                              EventListenerOptions.t_to_js
                                              x4739)|])
                                | None -> ());
                               x4738))|])
    let cast_from = Obj.magic
  end
module rec
  MessageEvent:sig
                 type 'T t = [ `Event  | `MessageEvent of 'T ] intf
                 type 'T t_1 = 'T t
                 type t_0 = any t
                 [@@@js.stop ]
                 type 'T tags = [ `Event  | `MessageEvent of 'T ]
                 type 'T tags_1 = 'T tags
                 type tags_0 = any tags
                 [@@@js.start ]
                 [@@@js.implem
                   type 'T tags = [ `Event  | `MessageEvent of 'T ]
                   type 'T tags_1 = 'T tags
                   type tags_0 = any tags]
                 type ('tags, 'T) this =
                   'tags intf constraint 'tags = [> `MessageEvent of 'T ]
                 val t_to_js : ('T -> Ojs.t) -> 'T t -> Ojs.t
                 val t_of_js : (Ojs.t -> 'T) -> Ojs.t -> 'T t
                 val t_1_to_js : ('T -> Ojs.t) -> 'T t_1 -> Ojs.t
                 val t_1_of_js : (Ojs.t -> 'T) -> Ojs.t -> 'T t_1
                 val t_0_to_js : t_0 -> Ojs.t
                 val t_0_of_js : Ojs.t -> t_0
                 val initMessageEvent :
                   ('tags, 'T) this ->
                     type_:string ->
                       ?bubbles:bool ->
                         ?cancelable:bool ->
                           ?data:any ->
                             ?origin:string ->
                               ?lastEventId:string ->
                                 ?source:MessageEventSource.t or_null ->
                                   ?ports:MessagePort.t Iterable.t_1 ->
                                     unit -> unit
                 val get_data : ('tags, 'T) this -> 'T
                 val get_lastEventId : ('tags, 'T) this -> string
                 val get_origin : ('tags, 'T) this -> string
                 val get_ports : ('tags, 'T) this -> MessagePort.t list
                 val get_source :
                   ('tags, 'T) this -> MessageEventSource.t or_null
                 val initMessageEvent' :
                   ('tags, 'T) this ->
                     type_:string ->
                       ?bubbles:bool ->
                         ?cancelable:bool ->
                           ?data:any ->
                             ?origin:string ->
                               ?lastEventId:string ->
                                 ?source:MessageEventSource.t or_null ->
                                   ?ports:MessagePort.t list -> unit -> unit
                 val cast_from : ('tags, 'T) this -> 'T t
                 val prototype : unit -> t_0
                 val create :
                   type_:string ->
                     ?eventInitDict:'T MessageEventInit.t -> unit -> 'T t
               end =
  struct
    type 'T t = [ `Event  | `MessageEvent of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4746 : Ojs.t) -> t_of_js __T_of_js x4746
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4744 : __T t) -> t_to_js __T_to_js x4744
    type t_0 = any t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x4750 : Ojs.t) -> t_of_js any_of_js x4750
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x4748 : any t) -> t_to_js any_to_js x4748
    type 'T tags = [ `Event  | `MessageEvent of 'T ]
    type 'T tags_1 = 'T tags
    type tags_0 = any tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `MessageEvent of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4754 : Ojs.t) -> intf_of_js __tags_of_js x4754
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4752 : __tags intf) -> intf_to_js __tags_to_js x4752
    let (initMessageEvent :
      ('tags, 'T) this ->
        type_:string ->
          ?bubbles:bool ->
            ?cancelable:bool ->
              ?data:any ->
                ?origin:string ->
                  ?lastEventId:string ->
                    ?source:MessageEventSource.t or_null ->
                      ?ports:MessagePort.t Iterable.t_1 -> unit -> unit)
      =
      fun (x4774 : ('tags, 'T) this) ->
        fun ~type_:(x4756 : string) ->
          fun ?bubbles:(x4757 : bool option) ->
            fun ?cancelable:(x4758 : bool option) ->
              fun ?data:(x4759 : any option) ->
                fun ?origin:(x4760 : string option) ->
                  fun ?lastEventId:(x4761 : string option) ->
                    fun ?source:(x4762 : MessageEventSource.t or_null option)
                      ->
                      fun ?ports:(x4763 : MessagePort.t Iterable.t_1 option)
                        ->
                        fun () ->
                          ignore
                            (let x4777 = this_to_js Obj.magic Obj.magic x4774 in
                             Ojs.call
                               (Ojs.get_prop_ascii x4777 "initMessageEvent")
                               "apply"
                               [|x4777;((let x4764 =
                                           Ojs.new_obj
                                             (Ojs.get_prop_ascii Ojs.global
                                                "Array") [||] in
                                         ignore
                                           (Ojs.call x4764 "push"
                                              [|(Ojs.string_to_js x4756)|]);
                                         (match x4757 with
                                          | Some x4773 ->
                                              ignore
                                                (Ojs.call x4764 "push"
                                                   [|(Ojs.bool_to_js x4773)|])
                                          | None -> ());
                                         (match x4758 with
                                          | Some x4772 ->
                                              ignore
                                                (Ojs.call x4764 "push"
                                                   [|(Ojs.bool_to_js x4772)|])
                                          | None -> ());
                                         (match x4759 with
                                          | Some x4771 ->
                                              ignore
                                                (Ojs.call x4764 "push"
                                                   [|(any_to_js x4771)|])
                                          | None -> ());
                                         (match x4760 with
                                          | Some x4770 ->
                                              ignore
                                                (Ojs.call x4764 "push"
                                                   [|(Ojs.string_to_js x4770)|])
                                          | None -> ());
                                         (match x4761 with
                                          | Some x4769 ->
                                              ignore
                                                (Ojs.call x4764 "push"
                                                   [|(Ojs.string_to_js x4769)|])
                                          | None -> ());
                                         (match x4762 with
                                          | Some x4767 ->
                                              ignore
                                                (Ojs.call x4764 "push"
                                                   [|(or_null_to_js
                                                        MessageEventSource.t_to_js
                                                        x4767)|])
                                          | None -> ());
                                         (match x4763 with
                                          | Some x4765 ->
                                              ignore
                                                (Ojs.call x4764 "push"
                                                   [|(Iterable.t_1_to_js
                                                        MessagePort.t_to_js
                                                        x4765)|])
                                          | None -> ());
                                         x4764))|])
    let (get_data : ('tags, 'T) this -> 'T) =
      fun (x4778 : ('tags, 'T) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4778) "data")
    let (get_lastEventId : ('tags, 'T) this -> string) =
      fun (x4781 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4781)
             "lastEventId")
    let (get_origin : ('tags, 'T) this -> string) =
      fun (x4784 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4784) "origin")
    let (get_ports : ('tags, 'T) this -> MessagePort.t list) =
      fun (x4787 : ('tags, 'T) this) ->
        Ojs.list_of_js MessagePort.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4787) "ports")
    let (get_source : ('tags, 'T) this -> MessageEventSource.t or_null) =
      fun (x4791 : ('tags, 'T) this) ->
        or_null_of_js MessageEventSource.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4791) "source")
    let (initMessageEvent' :
      ('tags, 'T) this ->
        type_:string ->
          ?bubbles:bool ->
            ?cancelable:bool ->
              ?data:any ->
                ?origin:string ->
                  ?lastEventId:string ->
                    ?source:MessageEventSource.t or_null ->
                      ?ports:MessagePort.t list -> unit -> unit)
      =
      fun (x4813 : ('tags, 'T) this) ->
        fun ~type_:(x4795 : string) ->
          fun ?bubbles:(x4796 : bool option) ->
            fun ?cancelable:(x4797 : bool option) ->
              fun ?data:(x4798 : any option) ->
                fun ?origin:(x4799 : string option) ->
                  fun ?lastEventId:(x4800 : string option) ->
                    fun ?source:(x4801 : MessageEventSource.t or_null option)
                      ->
                      fun ?ports:(x4802 : MessagePort.t list option) ->
                        fun () ->
                          ignore
                            (let x4816 = this_to_js Obj.magic Obj.magic x4813 in
                             Ojs.call
                               (Ojs.get_prop_ascii x4816 "initMessageEvent")
                               "apply"
                               [|x4816;((let x4803 =
                                           Ojs.new_obj
                                             (Ojs.get_prop_ascii Ojs.global
                                                "Array") [||] in
                                         ignore
                                           (Ojs.call x4803 "push"
                                              [|(Ojs.string_to_js x4795)|]);
                                         (match x4796 with
                                          | Some x4812 ->
                                              ignore
                                                (Ojs.call x4803 "push"
                                                   [|(Ojs.bool_to_js x4812)|])
                                          | None -> ());
                                         (match x4797 with
                                          | Some x4811 ->
                                              ignore
                                                (Ojs.call x4803 "push"
                                                   [|(Ojs.bool_to_js x4811)|])
                                          | None -> ());
                                         (match x4798 with
                                          | Some x4810 ->
                                              ignore
                                                (Ojs.call x4803 "push"
                                                   [|(any_to_js x4810)|])
                                          | None -> ());
                                         (match x4799 with
                                          | Some x4809 ->
                                              ignore
                                                (Ojs.call x4803 "push"
                                                   [|(Ojs.string_to_js x4809)|])
                                          | None -> ());
                                         (match x4800 with
                                          | Some x4808 ->
                                              ignore
                                                (Ojs.call x4803 "push"
                                                   [|(Ojs.string_to_js x4808)|])
                                          | None -> ());
                                         (match x4801 with
                                          | Some x4806 ->
                                              ignore
                                                (Ojs.call x4803 "push"
                                                   [|(or_null_to_js
                                                        MessageEventSource.t_to_js
                                                        x4806)|])
                                          | None -> ());
                                         (match x4802 with
                                          | Some x4804 ->
                                              ignore
                                                (Ojs.call x4803 "push"
                                                   [|(Ojs.list_to_js
                                                        MessagePort.t_to_js
                                                        x4804)|])
                                          | None -> ());
                                         x4803))|])
    let cast_from = Obj.magic
    let (prototype : unit -> t_0) =
      fun () ->
        t_0_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "MessageEvent")
             "prototype")
    let (create :
      type_:string -> ?eventInitDict:'T MessageEventInit.t -> unit -> 'T t) =
      fun ~type_:(x4817 : string) ->
        fun ?eventInitDict:(x4818 : 'T MessageEventInit.t option) ->
          fun () ->
            t_of_js Obj.magic
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "MessageEvent")
                 (let x4819 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x4819 "push" [|(Ojs.string_to_js x4817)|]);
                  (match x4818 with
                   | Some x4820 ->
                       ignore
                         (Ojs.call x4819 "push"
                            [|(MessageEventInit.t_to_js Obj.magic x4820)|])
                   | None -> ());
                  x4819))
  end
 and
  MessageEventInit:sig
                     type 'T t =
                       [ `EventInit  | `MessageEventInit of 'T ] intf
                     type 'T t_1 = 'T t
                     type t_0 = any t
                     [@@@js.stop ]
                     type 'T tags = [ `EventInit  | `MessageEventInit of 'T ]
                     type 'T tags_1 = 'T tags
                     type tags_0 = any tags
                     [@@@js.start ]
                     [@@@js.implem
                       type 'T tags =
                         [ `EventInit  | `MessageEventInit of 'T ]
                       type 'T tags_1 = 'T tags
                       type tags_0 = any tags]
                     type ('tags, 'T) this =
                       'tags intf constraint 'tags =
                                   [> `MessageEventInit of 'T ]
                     val t_to_js : ('T -> Ojs.t) -> 'T t -> Ojs.t
                     val t_of_js : (Ojs.t -> 'T) -> Ojs.t -> 'T t
                     val t_1_to_js : ('T -> Ojs.t) -> 'T t_1 -> Ojs.t
                     val t_1_of_js : (Ojs.t -> 'T) -> Ojs.t -> 'T t_1
                     val t_0_to_js : t_0 -> Ojs.t
                     val t_0_of_js : Ojs.t -> t_0
                     val get_data : ('tags, 'T) this -> 'T
                     val set_data : ('tags, 'T) this -> 'T -> unit
                     val get_lastEventId : ('tags, 'T) this -> string
                     val set_lastEventId : ('tags, 'T) this -> string -> unit
                     val get_origin : ('tags, 'T) this -> string
                     val set_origin : ('tags, 'T) this -> string -> unit
                     val get_ports : ('tags, 'T) this -> MessagePort.t list
                     val set_ports :
                       ('tags, 'T) this -> MessagePort.t list -> unit
                     val get_source :
                       ('tags, 'T) this -> MessageEventSource.t or_null
                     val set_source :
                       ('tags, 'T) this ->
                         MessageEventSource.t or_null -> unit
                     val cast_from : ('tags, 'T) this -> 'T t
                   end =
  struct
    type 'T t = [ `EventInit  | `MessageEventInit of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4825 : Ojs.t) -> t_of_js __T_of_js x4825
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4823 : __T t) -> t_to_js __T_to_js x4823
    type t_0 = any t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x4829 : Ojs.t) -> t_of_js any_of_js x4829
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x4827 : any t) -> t_to_js any_to_js x4827
    type 'T tags = [ `EventInit  | `MessageEventInit of 'T ]
    type 'T tags_1 = 'T tags
    type tags_0 = any tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `MessageEventInit of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4833 : Ojs.t) -> intf_of_js __tags_of_js x4833
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4831 : __tags intf) -> intf_to_js __tags_to_js x4831
    let (get_data : ('tags, 'T) this -> 'T) =
      fun (x4835 : ('tags, 'T) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4835) "data")
    let (set_data : ('tags, 'T) this -> 'T -> unit) =
      fun (x4838 : ('tags, 'T) this) ->
        fun (x4839 : 'T) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x4838) "data"
            (Obj.magic x4839)
    let (get_lastEventId : ('tags, 'T) this -> string) =
      fun (x4842 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4842)
             "lastEventId")
    let (set_lastEventId : ('tags, 'T) this -> string -> unit) =
      fun (x4845 : ('tags, 'T) this) ->
        fun (x4846 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x4845)
            "lastEventId" (Ojs.string_to_js x4846)
    let (get_origin : ('tags, 'T) this -> string) =
      fun (x4849 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4849) "origin")
    let (set_origin : ('tags, 'T) this -> string -> unit) =
      fun (x4852 : ('tags, 'T) this) ->
        fun (x4853 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x4852) "origin"
            (Ojs.string_to_js x4853)
    let (get_ports : ('tags, 'T) this -> MessagePort.t list) =
      fun (x4856 : ('tags, 'T) this) ->
        Ojs.list_of_js MessagePort.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4856) "ports")
    let (set_ports : ('tags, 'T) this -> MessagePort.t list -> unit) =
      fun (x4860 : ('tags, 'T) this) ->
        fun (x4861 : MessagePort.t list) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x4860) "ports"
            (Ojs.list_to_js MessagePort.t_to_js x4861)
    let (get_source : ('tags, 'T) this -> MessageEventSource.t or_null) =
      fun (x4865 : ('tags, 'T) this) ->
        or_null_of_js MessageEventSource.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4865) "source")
    let (set_source :
      ('tags, 'T) this -> MessageEventSource.t or_null -> unit) =
      fun (x4869 : ('tags, 'T) this) ->
        fun (x4870 : MessageEventSource.t or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x4869) "source"
            (or_null_to_js MessageEventSource.t_to_js x4870)
    let cast_from = Obj.magic
  end and
       MessageEventSource:sig
                            type t = (MessagePort.t, ServiceWorker.t) union2
                            type t_0 = t
                            val t_to_js : t -> Ojs.t
                            val t_of_js : Ojs.t -> t
                            val t_0_to_js : t_0 -> Ojs.t
                            val t_0_of_js : Ojs.t -> t_0
                          end =
       struct
         type t = (MessagePort.t, ServiceWorker.t) union2
         let rec t_of_js : Ojs.t -> t =
           fun (x4877 : Ojs.t) ->
             union2_of_js MessagePort.t_of_js ServiceWorker.t_of_js x4877
         and t_to_js : t -> Ojs.t =
           fun (x4874 : (MessagePort.t, ServiceWorker.t) union2) ->
             union2_to_js MessagePort.t_to_js ServiceWorker.t_to_js x4874
         type t_0 = t
         let rec t_0_of_js : Ojs.t -> t_0 =
           fun (x4881 : Ojs.t) -> t_of_js x4881
         and t_0_to_js : t_0 -> Ojs.t = fun (x4880 : t) -> t_to_js x4880
       end and
            MessagePort:sig
                          type t = [ `EventTarget  | `MessagePort ] intf
                          type t_0 = t
                          [@@@js.stop ]
                          type tags = [ `EventTarget  | `MessagePort ]
                          type tags_0 = tags
                          [@@@js.start ]
                          [@@@js.implem
                            type tags = [ `EventTarget  | `MessagePort ]
                            type tags_0 = tags]
                          type 'tags this =
                            'tags intf constraint 'tags = [> `MessagePort ]
                          val t_to_js : t -> Ojs.t
                          val t_of_js : Ojs.t -> t
                          val t_0_to_js : t_0 -> Ojs.t
                          val t_0_of_js : Ojs.t -> t_0
                          val get_onmessage :
                            'tags this ->
                              (this:t -> ev:MessageEvent.t_0 -> any) or_null
                          val set_onmessage :
                            'tags this ->
                              (this:t -> ev:MessageEvent.t_0 -> any) or_null
                                -> unit
                          val get_onmessageerror :
                            'tags this ->
                              (this:t -> ev:MessageEvent.t_0 -> any) or_null
                          val set_onmessageerror :
                            'tags this ->
                              (this:t -> ev:MessageEvent.t_0 -> any) or_null
                                -> unit
                          val close : 'tags this -> unit
                          val postMessage :
                            'tags this ->
                              message:any ->
                                transfer:Transferable.t list -> unit
                          val postMessage' :
                            'tags this ->
                              message:any ->
                                ?options:StructuredSerializeOptions.t ->
                                  unit -> unit
                          val start : 'tags this -> unit
                          val addEventListener :
                            'tags this ->
                              type_:'K ->
                                listener:(this:t -> ev:any -> any) ->
                                  ?options:AddEventListenerOptions.t
                                    or_boolean -> unit -> unit
                          val addEventListener' :
                            'tags this ->
                              type_:string ->
                                listener:EventListenerOrEventListenerObject.t
                                  ->
                                  ?options:AddEventListenerOptions.t
                                    or_boolean -> unit -> unit
                          val removeEventListener :
                            'tags this ->
                              type_:'K ->
                                listener:(this:t -> ev:any -> any) ->
                                  ?options:EventListenerOptions.t or_boolean
                                    -> unit -> unit
                          val removeEventListener' :
                            'tags this ->
                              type_:string ->
                                listener:EventListenerOrEventListenerObject.t
                                  ->
                                  ?options:EventListenerOptions.t or_boolean
                                    -> unit -> unit
                          val cast_from : 'tags this -> t
                          val prototype : unit -> t
                          val create : unit -> t
                        end =
            struct
              type t = [ `EventTarget  | `MessagePort ] intf
              let rec t_of_js : Ojs.t -> t = Obj.magic
              and t_to_js : t -> Ojs.t = Obj.magic
              type t_0 = t
              let rec t_0_of_js : Ojs.t -> t_0 =
                fun (x4883 : Ojs.t) -> t_of_js x4883
              and t_0_to_js : t_0 -> Ojs.t = fun (x4882 : t) -> t_to_js x4882
              type tags = [ `EventTarget  | `MessagePort ]
              type tags_0 = tags
              type 'tags this =
                'tags intf constraint 'tags = [> `MessagePort ]
              let rec this_of_js :
                'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this = fun (type
                __tags) ->
                fun (__tags_of_js : Ojs.t -> __tags) ->
                  fun (x4886 : Ojs.t) -> intf_of_js __tags_of_js x4886
              and this_to_js :
                'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun (type
                __tags) ->
                fun (__tags_to_js : __tags -> Ojs.t) ->
                  fun (x4884 : __tags intf) -> intf_to_js __tags_to_js x4884
              let (get_onmessage :
                'tags this -> (this:t -> ev:MessageEvent.t_0 -> any) or_null)
                =
                fun (x4888 : 'tags this) ->
                  or_null_of_js
                    (fun (x4890 : Ojs.t) ->
                       fun ~this:(x4891 : t) ->
                         fun ~ev:(x4892 : MessageEvent.t_0) ->
                           any_of_js
                             (Ojs.apply x4890
                                [|(t_to_js x4891);(MessageEvent.t_0_to_js
                                                     x4892)|]))
                    (Ojs.get_prop_ascii (this_to_js Obj.magic x4888)
                       "onmessage")
              let (set_onmessage :
                'tags this ->
                  (this:t -> ev:MessageEvent.t_0 -> any) or_null -> unit)
                =
                fun (x4893 : 'tags this) ->
                  fun
                    (x4894 : (this:t -> ev:MessageEvent.t_0 -> any) or_null)
                    ->
                    Ojs.set_prop_ascii (this_to_js Obj.magic x4893)
                      "onmessage"
                      (or_null_to_js
                         (fun (x4895 : this:t -> ev:MessageEvent.t_0 -> any)
                            ->
                            Ojs.fun_to_js 2
                              (fun (x4896 : Ojs.t) ->
                                 fun (x4897 : Ojs.t) ->
                                   any_to_js
                                     (x4895 ~this:(t_of_js x4896)
                                        ~ev:(MessageEvent.t_0_of_js x4897))))
                         x4894)
              let (get_onmessageerror :
                'tags this -> (this:t -> ev:MessageEvent.t_0 -> any) or_null)
                =
                fun (x4899 : 'tags this) ->
                  or_null_of_js
                    (fun (x4901 : Ojs.t) ->
                       fun ~this:(x4902 : t) ->
                         fun ~ev:(x4903 : MessageEvent.t_0) ->
                           any_of_js
                             (Ojs.apply x4901
                                [|(t_to_js x4902);(MessageEvent.t_0_to_js
                                                     x4903)|]))
                    (Ojs.get_prop_ascii (this_to_js Obj.magic x4899)
                       "onmessageerror")
              let (set_onmessageerror :
                'tags this ->
                  (this:t -> ev:MessageEvent.t_0 -> any) or_null -> unit)
                =
                fun (x4904 : 'tags this) ->
                  fun
                    (x4905 : (this:t -> ev:MessageEvent.t_0 -> any) or_null)
                    ->
                    Ojs.set_prop_ascii (this_to_js Obj.magic x4904)
                      "onmessageerror"
                      (or_null_to_js
                         (fun (x4906 : this:t -> ev:MessageEvent.t_0 -> any)
                            ->
                            Ojs.fun_to_js 2
                              (fun (x4907 : Ojs.t) ->
                                 fun (x4908 : Ojs.t) ->
                                   any_to_js
                                     (x4906 ~this:(t_of_js x4907)
                                        ~ev:(MessageEvent.t_0_of_js x4908))))
                         x4905)
              let (close : 'tags this -> unit) =
                fun (x4910 : 'tags this) ->
                  ignore (Ojs.call (this_to_js Obj.magic x4910) "close" [||])
              let (postMessage :
                'tags this ->
                  message:any -> transfer:Transferable.t list -> unit)
                =
                fun (x4915 : 'tags this) ->
                  fun ~message:(x4912 : any) ->
                    fun ~transfer:(x4913 : Transferable.t list) ->
                      ignore
                        (Ojs.call (this_to_js Obj.magic x4915) "postMessage"
                           [|(any_to_js x4912);(Ojs.list_to_js
                                                  Transferable.t_to_js x4913)|])
              let (postMessage' :
                'tags this ->
                  message:any ->
                    ?options:StructuredSerializeOptions.t -> unit -> unit)
                =
                fun (x4921 : 'tags this) ->
                  fun ~message:(x4917 : any) ->
                    fun
                      ?options:(x4918 : StructuredSerializeOptions.t option)
                      ->
                      fun () ->
                        ignore
                          (let x4923 = this_to_js Obj.magic x4921 in
                           Ojs.call (Ojs.get_prop_ascii x4923 "postMessage")
                             "apply"
                             [|x4923;((let x4919 =
                                         Ojs.new_obj
                                           (Ojs.get_prop_ascii Ojs.global
                                              "Array") [||] in
                                       ignore
                                         (Ojs.call x4919 "push"
                                            [|(any_to_js x4917)|]);
                                       (match x4918 with
                                        | Some x4920 ->
                                            ignore
                                              (Ojs.call x4919 "push"
                                                 [|(StructuredSerializeOptions.t_to_js
                                                      x4920)|])
                                        | None -> ());
                                       x4919))|])
              let (start : 'tags this -> unit) =
                fun (x4924 : 'tags this) ->
                  ignore (Ojs.call (this_to_js Obj.magic x4924) "start" [||])
              let (addEventListener :
                'tags this ->
                  type_:'K ->
                    listener:(this:t -> ev:any -> any) ->
                      ?options:AddEventListenerOptions.t or_boolean ->
                        unit -> unit)
                =
                fun (x4934 : 'tags this) ->
                  fun ~type_:(x4926 : 'K) ->
                    fun ~listener:(x4927 : this:t -> ev:any -> any) ->
                      fun
                        ?options:(x4928 :
                                   AddEventListenerOptions.t or_boolean
                                     option)
                        ->
                        fun () ->
                          ignore
                            (let x4936 = this_to_js Obj.magic x4934 in
                             Ojs.call
                               (Ojs.get_prop_ascii x4936 "addEventListener")
                               "apply"
                               [|x4936;((let x4929 =
                                           Ojs.new_obj
                                             (Ojs.get_prop_ascii Ojs.global
                                                "Array") [||] in
                                         ignore
                                           (Ojs.call x4929 "push"
                                              [|(Obj.magic x4926)|]);
                                         ignore
                                           (Ojs.call x4929 "push"
                                              [|(Ojs.fun_to_js 2
                                                   (fun (x4932 : Ojs.t) ->
                                                      fun (x4933 : Ojs.t) ->
                                                        any_to_js
                                                          (x4927
                                                             ~this:(t_of_js
                                                                    x4932)
                                                             ~ev:(any_of_js
                                                                    x4933))))|]);
                                         (match x4928 with
                                          | Some x4930 ->
                                              ignore
                                                (Ojs.call x4929 "push"
                                                   [|(or_boolean_to_js
                                                        AddEventListenerOptions.t_to_js
                                                        x4930)|])
                                          | None -> ());
                                         x4929))|])
              let (addEventListener' :
                'tags this ->
                  type_:string ->
                    listener:EventListenerOrEventListenerObject.t ->
                      ?options:AddEventListenerOptions.t or_boolean ->
                        unit -> unit)
                =
                fun (x4943 : 'tags this) ->
                  fun ~type_:(x4937 : string) ->
                    fun
                      ~listener:(x4938 :
                                  EventListenerOrEventListenerObject.t)
                      ->
                      fun
                        ?options:(x4939 :
                                   AddEventListenerOptions.t or_boolean
                                     option)
                        ->
                        fun () ->
                          ignore
                            (let x4945 = this_to_js Obj.magic x4943 in
                             Ojs.call
                               (Ojs.get_prop_ascii x4945 "addEventListener")
                               "apply"
                               [|x4945;((let x4940 =
                                           Ojs.new_obj
                                             (Ojs.get_prop_ascii Ojs.global
                                                "Array") [||] in
                                         ignore
                                           (Ojs.call x4940 "push"
                                              [|(Ojs.string_to_js x4937)|]);
                                         ignore
                                           (Ojs.call x4940 "push"
                                              [|(EventListenerOrEventListenerObject.t_to_js
                                                   x4938)|]);
                                         (match x4939 with
                                          | Some x4941 ->
                                              ignore
                                                (Ojs.call x4940 "push"
                                                   [|(or_boolean_to_js
                                                        AddEventListenerOptions.t_to_js
                                                        x4941)|])
                                          | None -> ());
                                         x4940))|])
              let (removeEventListener :
                'tags this ->
                  type_:'K ->
                    listener:(this:t -> ev:any -> any) ->
                      ?options:EventListenerOptions.t or_boolean ->
                        unit -> unit)
                =
                fun (x4954 : 'tags this) ->
                  fun ~type_:(x4946 : 'K) ->
                    fun ~listener:(x4947 : this:t -> ev:any -> any) ->
                      fun
                        ?options:(x4948 :
                                   EventListenerOptions.t or_boolean option)
                        ->
                        fun () ->
                          ignore
                            (let x4956 = this_to_js Obj.magic x4954 in
                             Ojs.call
                               (Ojs.get_prop_ascii x4956
                                  "removeEventListener") "apply"
                               [|x4956;((let x4949 =
                                           Ojs.new_obj
                                             (Ojs.get_prop_ascii Ojs.global
                                                "Array") [||] in
                                         ignore
                                           (Ojs.call x4949 "push"
                                              [|(Obj.magic x4946)|]);
                                         ignore
                                           (Ojs.call x4949 "push"
                                              [|(Ojs.fun_to_js 2
                                                   (fun (x4952 : Ojs.t) ->
                                                      fun (x4953 : Ojs.t) ->
                                                        any_to_js
                                                          (x4947
                                                             ~this:(t_of_js
                                                                    x4952)
                                                             ~ev:(any_of_js
                                                                    x4953))))|]);
                                         (match x4948 with
                                          | Some x4950 ->
                                              ignore
                                                (Ojs.call x4949 "push"
                                                   [|(or_boolean_to_js
                                                        EventListenerOptions.t_to_js
                                                        x4950)|])
                                          | None -> ());
                                         x4949))|])
              let (removeEventListener' :
                'tags this ->
                  type_:string ->
                    listener:EventListenerOrEventListenerObject.t ->
                      ?options:EventListenerOptions.t or_boolean ->
                        unit -> unit)
                =
                fun (x4963 : 'tags this) ->
                  fun ~type_:(x4957 : string) ->
                    fun
                      ~listener:(x4958 :
                                  EventListenerOrEventListenerObject.t)
                      ->
                      fun
                        ?options:(x4959 :
                                   EventListenerOptions.t or_boolean option)
                        ->
                        fun () ->
                          ignore
                            (let x4965 = this_to_js Obj.magic x4963 in
                             Ojs.call
                               (Ojs.get_prop_ascii x4965
                                  "removeEventListener") "apply"
                               [|x4965;((let x4960 =
                                           Ojs.new_obj
                                             (Ojs.get_prop_ascii Ojs.global
                                                "Array") [||] in
                                         ignore
                                           (Ojs.call x4960 "push"
                                              [|(Ojs.string_to_js x4957)|]);
                                         ignore
                                           (Ojs.call x4960 "push"
                                              [|(EventListenerOrEventListenerObject.t_to_js
                                                   x4958)|]);
                                         (match x4959 with
                                          | Some x4961 ->
                                              ignore
                                                (Ojs.call x4960 "push"
                                                   [|(or_boolean_to_js
                                                        EventListenerOptions.t_to_js
                                                        x4961)|])
                                          | None -> ());
                                         x4960))|])
              let cast_from = Obj.magic
              let (prototype : unit -> t) =
                fun () ->
                  t_of_js
                    (Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "MessagePort")
                       "prototype")
              let (create : unit -> t) =
                fun () ->
                  t_of_js
                    (Ojs.new_obj
                       (Ojs.get_prop_ascii Ojs.global "MessagePort") 
                       [||])
            end and
                 ServiceWorker:sig
                                 type t =
                                   [ `AbstractWorker  | `EventTarget 
                                   | `ServiceWorker ] intf
                                 type t_0 = t
                                 [@@@js.stop ]
                                 type tags =
                                   [ `AbstractWorker  | `EventTarget 
                                   | `ServiceWorker ]
                                 type tags_0 = tags
                                 [@@@js.start ]
                                 [@@@js.implem
                                   type tags =
                                     [ `AbstractWorker  | `EventTarget 
                                     | `ServiceWorker ]
                                   type tags_0 = tags]
                                 type 'tags this =
                                   'tags intf constraint 'tags =
                                               [> `ServiceWorker ]
                                 val t_to_js : t -> Ojs.t
                                 val t_of_js : Ojs.t -> t
                                 val t_0_to_js : t_0 -> Ojs.t
                                 val t_0_of_js : Ojs.t -> t_0
                                 val get_onstatechange :
                                   'tags this ->
                                     (this:t -> ev:Event.t -> any) or_null
                                 val set_onstatechange :
                                   'tags this ->
                                     (this:t -> ev:Event.t -> any) or_null ->
                                       unit
                                 val get_scriptURL : 'tags this -> string
                                 val get_state :
                                   'tags this -> ServiceWorkerState.t
                                 val postMessage :
                                   'tags this ->
                                     message:any ->
                                       transfer:Transferable.t list -> unit
                                 val postMessage' :
                                   'tags this ->
                                     message:any ->
                                       ?options:StructuredSerializeOptions.t
                                         -> unit -> unit
                                 val addEventListener :
                                   'tags this ->
                                     type_:'K ->
                                       listener:(this:t -> ev:any -> any) ->
                                         ?options:AddEventListenerOptions.t
                                           or_boolean -> unit -> unit
                                 val addEventListener' :
                                   'tags this ->
                                     type_:string ->
                                       listener:EventListenerOrEventListenerObject.t
                                         ->
                                         ?options:AddEventListenerOptions.t
                                           or_boolean -> unit -> unit
                                 val removeEventListener :
                                   'tags this ->
                                     type_:'K ->
                                       listener:(this:t -> ev:any -> any) ->
                                         ?options:EventListenerOptions.t
                                           or_boolean -> unit -> unit
                                 val removeEventListener' :
                                   'tags this ->
                                     type_:string ->
                                       listener:EventListenerOrEventListenerObject.t
                                         ->
                                         ?options:EventListenerOptions.t
                                           or_boolean -> unit -> unit
                                 val cast_from : 'tags this -> t
                                 val prototype : unit -> t
                                 val create : unit -> t
                               end =
                 struct
                   type t =
                     [ `AbstractWorker  | `EventTarget  | `ServiceWorker ]
                       intf
                   let rec t_of_js : Ojs.t -> t = Obj.magic
                   and t_to_js : t -> Ojs.t = Obj.magic
                   type t_0 = t
                   let rec t_0_of_js : Ojs.t -> t_0 =
                     fun (x4967 : Ojs.t) -> t_of_js x4967
                   and t_0_to_js : t_0 -> Ojs.t =
                     fun (x4966 : t) -> t_to_js x4966
                   type tags =
                     [ `AbstractWorker  | `EventTarget  | `ServiceWorker ]
                   type tags_0 = tags
                   type 'tags this =
                     'tags intf constraint 'tags = [> `ServiceWorker ]
                   let rec this_of_js :
                     'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this = fun
                     (type __tags) ->
                     fun (__tags_of_js : Ojs.t -> __tags) ->
                       fun (x4970 : Ojs.t) -> intf_of_js __tags_of_js x4970
                   and this_to_js :
                     'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
                     (type __tags) ->
                     fun (__tags_to_js : __tags -> Ojs.t) ->
                       fun (x4968 : __tags intf) ->
                         intf_to_js __tags_to_js x4968
                   let (get_onstatechange :
                     'tags this -> (this:t -> ev:Event.t -> any) or_null) =
                     fun (x4972 : 'tags this) ->
                       or_null_of_js
                         (fun (x4974 : Ojs.t) ->
                            fun ~this:(x4975 : t) ->
                              fun ~ev:(x4976 : Event.t) ->
                                any_of_js
                                  (Ojs.apply x4974
                                     [|(t_to_js x4975);(Event.t_to_js x4976)|]))
                         (Ojs.get_prop_ascii (this_to_js Obj.magic x4972)
                            "onstatechange")
                   let (set_onstatechange :
                     'tags this ->
                       (this:t -> ev:Event.t -> any) or_null -> unit)
                     =
                     fun (x4977 : 'tags this) ->
                       fun (x4978 : (this:t -> ev:Event.t -> any) or_null) ->
                         Ojs.set_prop_ascii (this_to_js Obj.magic x4977)
                           "onstatechange"
                           (or_null_to_js
                              (fun (x4979 : this:t -> ev:Event.t -> any) ->
                                 Ojs.fun_to_js 2
                                   (fun (x4980 : Ojs.t) ->
                                      fun (x4981 : Ojs.t) ->
                                        any_to_js
                                          (x4979 ~this:(t_of_js x4980)
                                             ~ev:(Event.t_of_js x4981))))
                              x4978)
                   let (get_scriptURL : 'tags this -> string) =
                     fun (x4983 : 'tags this) ->
                       Ojs.string_of_js
                         (Ojs.get_prop_ascii (this_to_js Obj.magic x4983)
                            "scriptURL")
                   let (get_state : 'tags this -> ServiceWorkerState.t) =
                     fun (x4985 : 'tags this) ->
                       ServiceWorkerState.t_of_js
                         (Ojs.get_prop_ascii (this_to_js Obj.magic x4985)
                            "state")
                   let (postMessage :
                     'tags this ->
                       message:any -> transfer:Transferable.t list -> unit)
                     =
                     fun (x4990 : 'tags this) ->
                       fun ~message:(x4987 : any) ->
                         fun ~transfer:(x4988 : Transferable.t list) ->
                           ignore
                             (Ojs.call (this_to_js Obj.magic x4990)
                                "postMessage"
                                [|(any_to_js x4987);(Ojs.list_to_js
                                                       Transferable.t_to_js
                                                       x4988)|])
                   let (postMessage' :
                     'tags this ->
                       message:any ->
                         ?options:StructuredSerializeOptions.t ->
                           unit -> unit)
                     =
                     fun (x4996 : 'tags this) ->
                       fun ~message:(x4992 : any) ->
                         fun
                           ?options:(x4993 :
                                      StructuredSerializeOptions.t option)
                           ->
                           fun () ->
                             ignore
                               (let x4998 = this_to_js Obj.magic x4996 in
                                Ojs.call
                                  (Ojs.get_prop_ascii x4998 "postMessage")
                                  "apply"
                                  [|x4998;((let x4994 =
                                              Ojs.new_obj
                                                (Ojs.get_prop_ascii
                                                   Ojs.global "Array") 
                                                [||] in
                                            ignore
                                              (Ojs.call x4994 "push"
                                                 [|(any_to_js x4992)|]);
                                            (match x4993 with
                                             | Some x4995 ->
                                                 ignore
                                                   (Ojs.call x4994 "push"
                                                      [|(StructuredSerializeOptions.t_to_js
                                                           x4995)|])
                                             | None -> ());
                                            x4994))|])
                   let (addEventListener :
                     'tags this ->
                       type_:'K ->
                         listener:(this:t -> ev:any -> any) ->
                           ?options:AddEventListenerOptions.t or_boolean ->
                             unit -> unit)
                     =
                     fun (x5007 : 'tags this) ->
                       fun ~type_:(x4999 : 'K) ->
                         fun ~listener:(x5000 : this:t -> ev:any -> any) ->
                           fun
                             ?options:(x5001 :
                                        AddEventListenerOptions.t or_boolean
                                          option)
                             ->
                             fun () ->
                               ignore
                                 (let x5009 = this_to_js Obj.magic x5007 in
                                  Ojs.call
                                    (Ojs.get_prop_ascii x5009
                                       "addEventListener") "apply"
                                    [|x5009;((let x5002 =
                                                Ojs.new_obj
                                                  (Ojs.get_prop_ascii
                                                     Ojs.global "Array") 
                                                  [||] in
                                              ignore
                                                (Ojs.call x5002 "push"
                                                   [|(Obj.magic x4999)|]);
                                              ignore
                                                (Ojs.call x5002 "push"
                                                   [|(Ojs.fun_to_js 2
                                                        (fun (x5005 : Ojs.t)
                                                           ->
                                                           fun
                                                             (x5006 : Ojs.t)
                                                             ->
                                                             any_to_js
                                                               (x5000
                                                                  ~this:(
                                                                  t_of_js
                                                                    x5005)
                                                                  ~ev:(
                                                                  any_of_js
                                                                    x5006))))|]);
                                              (match x5001 with
                                               | Some x5003 ->
                                                   ignore
                                                     (Ojs.call x5002 "push"
                                                        [|(or_boolean_to_js
                                                             AddEventListenerOptions.t_to_js
                                                             x5003)|])
                                               | None -> ());
                                              x5002))|])
                   let (addEventListener' :
                     'tags this ->
                       type_:string ->
                         listener:EventListenerOrEventListenerObject.t ->
                           ?options:AddEventListenerOptions.t or_boolean ->
                             unit -> unit)
                     =
                     fun (x5016 : 'tags this) ->
                       fun ~type_:(x5010 : string) ->
                         fun
                           ~listener:(x5011 :
                                       EventListenerOrEventListenerObject.t)
                           ->
                           fun
                             ?options:(x5012 :
                                        AddEventListenerOptions.t or_boolean
                                          option)
                             ->
                             fun () ->
                               ignore
                                 (let x5018 = this_to_js Obj.magic x5016 in
                                  Ojs.call
                                    (Ojs.get_prop_ascii x5018
                                       "addEventListener") "apply"
                                    [|x5018;((let x5013 =
                                                Ojs.new_obj
                                                  (Ojs.get_prop_ascii
                                                     Ojs.global "Array") 
                                                  [||] in
                                              ignore
                                                (Ojs.call x5013 "push"
                                                   [|(Ojs.string_to_js x5010)|]);
                                              ignore
                                                (Ojs.call x5013 "push"
                                                   [|(EventListenerOrEventListenerObject.t_to_js
                                                        x5011)|]);
                                              (match x5012 with
                                               | Some x5014 ->
                                                   ignore
                                                     (Ojs.call x5013 "push"
                                                        [|(or_boolean_to_js
                                                             AddEventListenerOptions.t_to_js
                                                             x5014)|])
                                               | None -> ());
                                              x5013))|])
                   let (removeEventListener :
                     'tags this ->
                       type_:'K ->
                         listener:(this:t -> ev:any -> any) ->
                           ?options:EventListenerOptions.t or_boolean ->
                             unit -> unit)
                     =
                     fun (x5027 : 'tags this) ->
                       fun ~type_:(x5019 : 'K) ->
                         fun ~listener:(x5020 : this:t -> ev:any -> any) ->
                           fun
                             ?options:(x5021 :
                                        EventListenerOptions.t or_boolean
                                          option)
                             ->
                             fun () ->
                               ignore
                                 (let x5029 = this_to_js Obj.magic x5027 in
                                  Ojs.call
                                    (Ojs.get_prop_ascii x5029
                                       "removeEventListener") "apply"
                                    [|x5029;((let x5022 =
                                                Ojs.new_obj
                                                  (Ojs.get_prop_ascii
                                                     Ojs.global "Array") 
                                                  [||] in
                                              ignore
                                                (Ojs.call x5022 "push"
                                                   [|(Obj.magic x5019)|]);
                                              ignore
                                                (Ojs.call x5022 "push"
                                                   [|(Ojs.fun_to_js 2
                                                        (fun (x5025 : Ojs.t)
                                                           ->
                                                           fun
                                                             (x5026 : Ojs.t)
                                                             ->
                                                             any_to_js
                                                               (x5020
                                                                  ~this:(
                                                                  t_of_js
                                                                    x5025)
                                                                  ~ev:(
                                                                  any_of_js
                                                                    x5026))))|]);
                                              (match x5021 with
                                               | Some x5023 ->
                                                   ignore
                                                     (Ojs.call x5022 "push"
                                                        [|(or_boolean_to_js
                                                             EventListenerOptions.t_to_js
                                                             x5023)|])
                                               | None -> ());
                                              x5022))|])
                   let (removeEventListener' :
                     'tags this ->
                       type_:string ->
                         listener:EventListenerOrEventListenerObject.t ->
                           ?options:EventListenerOptions.t or_boolean ->
                             unit -> unit)
                     =
                     fun (x5036 : 'tags this) ->
                       fun ~type_:(x5030 : string) ->
                         fun
                           ~listener:(x5031 :
                                       EventListenerOrEventListenerObject.t)
                           ->
                           fun
                             ?options:(x5032 :
                                        EventListenerOptions.t or_boolean
                                          option)
                             ->
                             fun () ->
                               ignore
                                 (let x5038 = this_to_js Obj.magic x5036 in
                                  Ojs.call
                                    (Ojs.get_prop_ascii x5038
                                       "removeEventListener") "apply"
                                    [|x5038;((let x5033 =
                                                Ojs.new_obj
                                                  (Ojs.get_prop_ascii
                                                     Ojs.global "Array") 
                                                  [||] in
                                              ignore
                                                (Ojs.call x5033 "push"
                                                   [|(Ojs.string_to_js x5030)|]);
                                              ignore
                                                (Ojs.call x5033 "push"
                                                   [|(EventListenerOrEventListenerObject.t_to_js
                                                        x5031)|]);
                                              (match x5032 with
                                               | Some x5034 ->
                                                   ignore
                                                     (Ojs.call x5033 "push"
                                                        [|(or_boolean_to_js
                                                             EventListenerOptions.t_to_js
                                                             x5034)|])
                                               | None -> ());
                                              x5033))|])
                   let cast_from = Obj.magic
                   let (prototype : unit -> t) =
                     fun () ->
                       t_of_js
                         (Ojs.get_prop_ascii
                            (Ojs.get_prop_ascii Ojs.global "ServiceWorker")
                            "prototype")
                   let (create : unit -> t) =
                     fun () ->
                       t_of_js
                         (Ojs.new_obj
                            (Ojs.get_prop_ascii Ojs.global "ServiceWorker")
                            [||])
                 end and
                      Transferable:sig
                                     type t =
                                       (ImageBitmap.t, MessagePort.t) union2
                                     type t_0 = t
                                     val t_to_js : t -> Ojs.t
                                     val t_of_js : Ojs.t -> t
                                     val t_0_to_js : t_0 -> Ojs.t
                                     val t_0_of_js : Ojs.t -> t_0
                                   end =
                      struct
                        type t = (ImageBitmap.t, MessagePort.t) union2
                        let rec t_of_js : Ojs.t -> t =
                          fun (x5042 : Ojs.t) ->
                            union2_of_js ImageBitmap.t_of_js
                              MessagePort.t_of_js x5042
                        and t_to_js : t -> Ojs.t =
                          fun (x5039 : (ImageBitmap.t, MessagePort.t) union2)
                            ->
                            union2_to_js ImageBitmap.t_to_js
                              MessagePort.t_to_js x5039
                        type t_0 = t
                        let rec t_0_of_js : Ojs.t -> t_0 =
                          fun (x5046 : Ojs.t) -> t_of_js x5046
                        and t_0_to_js : t_0 -> Ojs.t =
                          fun (x5045 : t) -> t_to_js x5045
                      end
module AbstractWorkerEventMap =
  struct
    type t = [ `AbstractWorkerEventMap ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5048 : Ojs.t) -> t_of_js x5048
    and t_0_to_js : t_0 -> Ojs.t = fun (x5047 : t) -> t_to_js x5047
    type tags = [ `AbstractWorkerEventMap ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `AbstractWorkerEventMap ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5051 : Ojs.t) -> intf_of_js __tags_of_js x5051
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5049 : __tags intf) -> intf_to_js __tags_to_js x5049
    let (get_error : 'tags this -> ErrorEvent.t) =
      fun (x5053 : 'tags this) ->
        ErrorEvent.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5053) "error")
    let (set_error : 'tags this -> ErrorEvent.t -> unit) =
      fun (x5055 : 'tags this) ->
        fun (x5056 : ErrorEvent.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5055) "error"
            (ErrorEvent.t_to_js x5056)
    let cast_from = Obj.magic
  end
module WorkerEventMap =
  struct
    type t = [ `AbstractWorkerEventMap  | `WorkerEventMap ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5059 : Ojs.t) -> t_of_js x5059
    and t_0_to_js : t_0 -> Ojs.t = fun (x5058 : t) -> t_to_js x5058
    type tags = [ `AbstractWorkerEventMap  | `WorkerEventMap ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `WorkerEventMap ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5062 : Ojs.t) -> intf_of_js __tags_of_js x5062
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5060 : __tags intf) -> intf_to_js __tags_to_js x5060
    let (get_message : 'tags this -> MessageEvent.t_0) =
      fun (x5064 : 'tags this) ->
        MessageEvent.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5064) "message")
    let (set_message : 'tags this -> MessageEvent.t_0 -> unit) =
      fun (x5066 : 'tags this) ->
        fun (x5067 : MessageEvent.t_0) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5066) "message"
            (MessageEvent.t_0_to_js x5067)
    let (get_messageerror : 'tags this -> MessageEvent.t_0) =
      fun (x5069 : 'tags this) ->
        MessageEvent.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5069) "messageerror")
    let (set_messageerror : 'tags this -> MessageEvent.t_0 -> unit) =
      fun (x5071 : 'tags this) ->
        fun (x5072 : MessageEvent.t_0) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5071) "messageerror"
            (MessageEvent.t_0_to_js x5072)
    let cast_from = Obj.magic
  end
module CloseEventInit =
  struct
    type t = [ `CloseEventInit  | `EventInit ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5075 : Ojs.t) -> t_of_js x5075
    and t_0_to_js : t_0 -> Ojs.t = fun (x5074 : t) -> t_to_js x5074
    type tags = [ `CloseEventInit  | `EventInit ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `CloseEventInit ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5078 : Ojs.t) -> intf_of_js __tags_of_js x5078
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5076 : __tags intf) -> intf_to_js __tags_to_js x5076
    let (get_code : 'tags this -> float) =
      fun (x5080 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5080) "code")
    let (set_code : 'tags this -> float -> unit) =
      fun (x5082 : 'tags this) ->
        fun (x5083 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5082) "code"
            (Ojs.float_to_js x5083)
    let (get_reason : 'tags this -> string) =
      fun (x5085 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5085) "reason")
    let (set_reason : 'tags this -> string -> unit) =
      fun (x5087 : 'tags this) ->
        fun (x5088 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5087) "reason"
            (Ojs.string_to_js x5088)
    let (get_wasClean : 'tags this -> bool) =
      fun (x5090 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5090) "wasClean")
    let (set_wasClean : 'tags this -> bool -> unit) =
      fun (x5092 : 'tags this) ->
        fun (x5093 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5092) "wasClean"
            (Ojs.bool_to_js x5093)
    let cast_from = Obj.magic
  end
module CloseEvent =
  struct
    type t = [ `CloseEvent  | `Event ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5096 : Ojs.t) -> t_of_js x5096
    and t_0_to_js : t_0 -> Ojs.t = fun (x5095 : t) -> t_to_js x5095
    type tags = [ `CloseEvent  | `Event ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `CloseEvent ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5099 : Ojs.t) -> intf_of_js __tags_of_js x5099
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5097 : __tags intf) -> intf_to_js __tags_to_js x5097
    let (get_code : 'tags this -> float) =
      fun (x5101 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5101) "code")
    let (get_reason : 'tags this -> string) =
      fun (x5103 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5103) "reason")
    let (get_wasClean : 'tags this -> bool) =
      fun (x5105 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5105) "wasClean")
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "CloseEvent")
             "prototype")
    let (create :
      type_:string -> ?eventInitDict:CloseEventInit.t -> unit -> t) =
      fun ~type_:(x5107 : string) ->
        fun ?eventInitDict:(x5108 : CloseEventInit.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "CloseEvent")
                 (let x5109 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x5109 "push" [|(Ojs.string_to_js x5107)|]);
                  (match x5108 with
                   | Some x5110 ->
                       ignore
                         (Ojs.call x5109 "push"
                            [|(CloseEventInit.t_to_js x5110)|])
                   | None -> ());
                  x5109))
  end
module WebSocketEventMap =
  struct
    type t = [ `WebSocketEventMap ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5112 : Ojs.t) -> t_of_js x5112
    and t_0_to_js : t_0 -> Ojs.t = fun (x5111 : t) -> t_to_js x5111
    type tags = [ `WebSocketEventMap ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `WebSocketEventMap ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5115 : Ojs.t) -> intf_of_js __tags_of_js x5115
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5113 : __tags intf) -> intf_to_js __tags_to_js x5113
    let (get_close : 'tags this -> CloseEvent.t) =
      fun (x5117 : 'tags this) ->
        CloseEvent.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5117) "close")
    let (set_close : 'tags this -> CloseEvent.t -> unit) =
      fun (x5119 : 'tags this) ->
        fun (x5120 : CloseEvent.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5119) "close"
            (CloseEvent.t_to_js x5120)
    let (get_error : 'tags this -> Event.t) =
      fun (x5122 : 'tags this) ->
        Event.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5122) "error")
    let (set_error : 'tags this -> Event.t -> unit) =
      fun (x5124 : 'tags this) ->
        fun (x5125 : Event.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5124) "error"
            (Event.t_to_js x5125)
    let (get_message : 'tags this -> MessageEvent.t_0) =
      fun (x5127 : 'tags this) ->
        MessageEvent.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5127) "message")
    let (set_message : 'tags this -> MessageEvent.t_0 -> unit) =
      fun (x5129 : 'tags this) ->
        fun (x5130 : MessageEvent.t_0) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5129) "message"
            (MessageEvent.t_0_to_js x5130)
    let (get_open : 'tags this -> Event.t) =
      fun (x5132 : 'tags this) ->
        Event.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5132) "open")
    let (set_open : 'tags this -> Event.t -> unit) =
      fun (x5134 : 'tags this) ->
        fun (x5135 : Event.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5134) "open"
            (Event.t_to_js x5135)
    let cast_from = Obj.magic
  end
module WebAssembly =
  struct
    module ImportExportKind =
      struct
        type t =
          [ `L_s113_memory  | `L_s189_table  | `L_s79_function 
          | `L_s81_global ]
        let rec t_of_js : Ojs.t -> t =
          fun (x5138 : Ojs.t) ->
            let x5139 = x5138 in
            match Ojs.string_of_js x5139 with
            | "memory" -> `L_s113_memory
            | "table" -> `L_s189_table
            | "function" -> `L_s79_function
            | "global" -> `L_s81_global
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x5137 :
              [ `L_s113_memory  | `L_s189_table  | `L_s79_function 
              | `L_s81_global ])
            ->
            match x5137 with
            | `L_s113_memory -> Ojs.string_to_js "memory"
            | `L_s189_table -> Ojs.string_to_js "table"
            | `L_s79_function -> Ojs.string_to_js "function"
            | `L_s81_global -> Ojs.string_to_js "global"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x5141 : Ojs.t) -> t_of_js x5141
        and t_0_to_js : t_0 -> Ojs.t = fun (x5140 : t) -> t_to_js x5140
      end
    module ModuleImportDescriptor =
      struct
        type t = [ `WebAssembly_ModuleImportDescriptor ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x5143 : Ojs.t) -> t_of_js x5143
        and t_0_to_js : t_0 -> Ojs.t = fun (x5142 : t) -> t_to_js x5142
        type tags = [ `WebAssembly_ModuleImportDescriptor ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `WebAssembly_ModuleImportDescriptor ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x5146 : Ojs.t) -> intf_of_js __tags_of_js x5146
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x5144 : __tags intf) -> intf_to_js __tags_to_js x5144
        let (get_kind : 'tags this -> ImportExportKind.t) =
          fun (x5148 : 'tags this) ->
            ImportExportKind.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x5148) "kind")
        let (set_kind : 'tags this -> ImportExportKind.t -> unit) =
          fun (x5150 : 'tags this) ->
            fun (x5151 : ImportExportKind.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x5150) "kind"
                (ImportExportKind.t_to_js x5151)
        let (get_module : 'tags this -> string) =
          fun (x5153 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x5153) "module")
        let (set_module : 'tags this -> string -> unit) =
          fun (x5155 : 'tags this) ->
            fun (x5156 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x5155) "module"
                (Ojs.string_to_js x5156)
        let (get_name : 'tags this -> string) =
          fun (x5158 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x5158) "name")
        let (set_name : 'tags this -> string -> unit) =
          fun (x5160 : 'tags this) ->
            fun (x5161 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x5160) "name"
                (Ojs.string_to_js x5161)
        let cast_from = Obj.magic
      end
    module ModuleExportDescriptor =
      struct
        type t = [ `WebAssembly_ModuleExportDescriptor ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x5164 : Ojs.t) -> t_of_js x5164
        and t_0_to_js : t_0 -> Ojs.t = fun (x5163 : t) -> t_to_js x5163
        type tags = [ `WebAssembly_ModuleExportDescriptor ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `WebAssembly_ModuleExportDescriptor ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x5167 : Ojs.t) -> intf_of_js __tags_of_js x5167
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x5165 : __tags intf) -> intf_to_js __tags_to_js x5165
        let (get_kind : 'tags this -> ImportExportKind.t) =
          fun (x5169 : 'tags this) ->
            ImportExportKind.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x5169) "kind")
        let (set_kind : 'tags this -> ImportExportKind.t -> unit) =
          fun (x5171 : 'tags this) ->
            fun (x5172 : ImportExportKind.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x5171) "kind"
                (ImportExportKind.t_to_js x5172)
        let (get_name : 'tags this -> string) =
          fun (x5174 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x5174) "name")
        let (set_name : 'tags this -> string -> unit) =
          fun (x5176 : 'tags this) ->
            fun (x5177 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x5176) "name"
                (Ojs.string_to_js x5177)
        let cast_from = Obj.magic
      end
    module Module =
      struct
        type t = [ `WebAssembly_Module ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x5180 : Ojs.t) -> t_of_js x5180
        and t_0_to_js : t_0 -> Ojs.t = fun (x5179 : t) -> t_to_js x5179
        type tags = [ `WebAssembly_Module ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `WebAssembly_Module ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x5183 : Ojs.t) -> intf_of_js __tags_of_js x5183
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x5181 : __tags intf) -> intf_to_js __tags_to_js x5181
        let cast_from = Obj.magic
        let (prototype : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii
                    (Ojs.get_prop_ascii Ojs.global "WebAssembly") "Module")
                 "prototype")
        let (create : BufferSource.t -> t) =
          fun (x5185 : BufferSource.t) ->
            t_of_js
              (Ojs.new_obj
                 (Ojs.get_prop_ascii
                    (Ojs.get_prop_ascii Ojs.global "WebAssembly") "Module")
                 [|(BufferSource.t_to_js x5185)|])
        let (customSections :
          moduleObject:t -> sectionName:string -> ArrayBuffer.t_0 list) =
          fun ~moduleObject:(x5186 : t) ->
            fun ~sectionName:(x5187 : string) ->
              Ojs.list_of_js ArrayBuffer.t_0_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "WebAssembly") "Module")
                   "customSections"
                   [|(t_to_js x5186);(Ojs.string_to_js x5187)|])
        let (exports : t -> ModuleExportDescriptor.t list) =
          fun (x5189 : t) ->
            Ojs.list_of_js ModuleExportDescriptor.t_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii
                    (Ojs.get_prop_ascii Ojs.global "WebAssembly") "Module")
                 "exports" [|(t_to_js x5189)|])
        let (imports : t -> ModuleImportDescriptor.t list) =
          fun (x5191 : t) ->
            Ojs.list_of_js ModuleImportDescriptor.t_of_js
              (Ojs.call
                 (Ojs.get_prop_ascii
                    (Ojs.get_prop_ascii Ojs.global "WebAssembly") "Module")
                 "imports" [|(t_to_js x5191)|])
      end
    module MemoryDescriptor =
      struct
        type t = [ `WebAssembly_MemoryDescriptor ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x5194 : Ojs.t) -> t_of_js x5194
        and t_0_to_js : t_0 -> Ojs.t = fun (x5193 : t) -> t_to_js x5193
        type tags = [ `WebAssembly_MemoryDescriptor ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `WebAssembly_MemoryDescriptor ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x5197 : Ojs.t) -> intf_of_js __tags_of_js x5197
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x5195 : __tags intf) -> intf_to_js __tags_to_js x5195
        let (get_initial : 'tags this -> float) =
          fun (x5199 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x5199) "initial")
        let (set_initial : 'tags this -> float -> unit) =
          fun (x5201 : 'tags this) ->
            fun (x5202 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x5201) "initial"
                (Ojs.float_to_js x5202)
        let (get_maximum : 'tags this -> float) =
          fun (x5204 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x5204) "maximum")
        let (set_maximum : 'tags this -> float -> unit) =
          fun (x5206 : 'tags this) ->
            fun (x5207 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x5206) "maximum"
                (Ojs.float_to_js x5207)
        let (get_shared : 'tags this -> bool) =
          fun (x5209 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x5209) "shared")
        let (set_shared : 'tags this -> bool -> unit) =
          fun (x5211 : 'tags this) ->
            fun (x5212 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x5211) "shared"
                (Ojs.bool_to_js x5212)
        let cast_from = Obj.magic
      end
    module Memory =
      struct
        type t = [ `WebAssembly_Memory ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x5215 : Ojs.t) -> t_of_js x5215
        and t_0_to_js : t_0 -> Ojs.t = fun (x5214 : t) -> t_to_js x5214
        type tags = [ `WebAssembly_Memory ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `WebAssembly_Memory ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x5218 : Ojs.t) -> intf_of_js __tags_of_js x5218
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x5216 : __tags intf) -> intf_to_js __tags_to_js x5216
        let (get_buffer : 'tags this -> ArrayBuffer.t_0) =
          fun (x5220 : 'tags this) ->
            ArrayBuffer.t_0_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x5220) "buffer")
        let (grow : 'tags this -> delta:float -> float) =
          fun (x5223 : 'tags this) ->
            fun ~delta:(x5222 : float) ->
              Ojs.float_of_js
                (Ojs.call (this_to_js Obj.magic x5223) "grow"
                   [|(Ojs.float_to_js x5222)|])
        let cast_from = Obj.magic
        let (prototype : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii
                    (Ojs.get_prop_ascii Ojs.global "WebAssembly") "Memory")
                 "prototype")
        let (create : MemoryDescriptor.t -> t) =
          fun (x5225 : MemoryDescriptor.t) ->
            t_of_js
              (Ojs.new_obj
                 (Ojs.get_prop_ascii
                    (Ojs.get_prop_ascii Ojs.global "WebAssembly") "Memory")
                 [|(MemoryDescriptor.t_to_js x5225)|])
      end
    module ValueType =
      struct
        type t =
          [ `L_s36_anyfunc  | `L_s69_externref  | `L_s70_f32  | `L_s71_f64 
          | `L_s87_i32  | `L_s88_i64 ]
        let rec t_of_js : Ojs.t -> t =
          fun (x5227 : Ojs.t) ->
            let x5228 = x5227 in
            match Ojs.string_of_js x5228 with
            | "anyfunc" -> `L_s36_anyfunc
            | "externref" -> `L_s69_externref
            | "f32" -> `L_s70_f32
            | "f64" -> `L_s71_f64
            | "i32" -> `L_s87_i32
            | "i64" -> `L_s88_i64
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x5226 :
              [ `L_s36_anyfunc  | `L_s69_externref  | `L_s70_f32 
              | `L_s71_f64  | `L_s87_i32  | `L_s88_i64 ])
            ->
            match x5226 with
            | `L_s36_anyfunc -> Ojs.string_to_js "anyfunc"
            | `L_s69_externref -> Ojs.string_to_js "externref"
            | `L_s70_f32 -> Ojs.string_to_js "f32"
            | `L_s71_f64 -> Ojs.string_to_js "f64"
            | `L_s87_i32 -> Ojs.string_to_js "i32"
            | `L_s88_i64 -> Ojs.string_to_js "i64"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x5230 : Ojs.t) -> t_of_js x5230
        and t_0_to_js : t_0 -> Ojs.t = fun (x5229 : t) -> t_to_js x5229
      end
    module GlobalDescriptor =
      struct
        type t = [ `WebAssembly_GlobalDescriptor ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x5232 : Ojs.t) -> t_of_js x5232
        and t_0_to_js : t_0 -> Ojs.t = fun (x5231 : t) -> t_to_js x5231
        type tags = [ `WebAssembly_GlobalDescriptor ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `WebAssembly_GlobalDescriptor ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x5235 : Ojs.t) -> intf_of_js __tags_of_js x5235
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x5233 : __tags intf) -> intf_to_js __tags_to_js x5233
        let (get_mutable : 'tags this -> bool) =
          fun (x5237 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x5237) "mutable")
        let (set_mutable : 'tags this -> bool -> unit) =
          fun (x5239 : 'tags this) ->
            fun (x5240 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x5239) "mutable"
                (Ojs.bool_to_js x5240)
        let (get_value : 'tags this -> ValueType.t) =
          fun (x5242 : 'tags this) ->
            ValueType.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x5242) "value")
        let (set_value : 'tags this -> ValueType.t -> unit) =
          fun (x5244 : 'tags this) ->
            fun (x5245 : ValueType.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x5244) "value"
                (ValueType.t_to_js x5245)
        let cast_from = Obj.magic
      end
    module Global =
      struct
        type t = [ `WebAssembly_Global ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x5248 : Ojs.t) -> t_of_js x5248
        and t_0_to_js : t_0 -> Ojs.t = fun (x5247 : t) -> t_to_js x5247
        type tags = [ `WebAssembly_Global ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `WebAssembly_Global ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x5251 : Ojs.t) -> intf_of_js __tags_of_js x5251
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x5249 : __tags intf) -> intf_to_js __tags_to_js x5249
        let (get_value : 'tags this -> any) =
          fun (x5253 : 'tags this) ->
            any_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x5253) "value")
        let (set_value : 'tags this -> any -> unit) =
          fun (x5255 : 'tags this) ->
            fun (x5256 : any) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x5255) "value"
                (any_to_js x5256)
        let (valueOf : 'tags this -> any) =
          fun (x5258 : 'tags this) ->
            any_of_js (Ojs.call (this_to_js Obj.magic x5258) "valueOf" [||])
        let cast_from = Obj.magic
        let (prototype : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii
                    (Ojs.get_prop_ascii Ojs.global "WebAssembly") "Global")
                 "prototype")
        let (create : descriptor:GlobalDescriptor.t -> ?v:any -> unit -> t) =
          fun ~descriptor:(x5260 : GlobalDescriptor.t) ->
            fun ?v:(x5261 : any option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "WebAssembly")
                        "Global")
                     (let x5262 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x5262 "push"
                           [|(GlobalDescriptor.t_to_js x5260)|]);
                      (match x5261 with
                       | Some x5263 ->
                           ignore
                             (Ojs.call x5262 "push" [|(any_to_js x5263)|])
                       | None -> ());
                      x5262))
      end
    module TableKind =
      struct
        type t = [ `L_s36_anyfunc  | `L_s69_externref ]
        let rec t_of_js : Ojs.t -> t =
          fun (x5265 : Ojs.t) ->
            let x5266 = x5265 in
            match Ojs.string_of_js x5266 with
            | "anyfunc" -> `L_s36_anyfunc
            | "externref" -> `L_s69_externref
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x5264 : [ `L_s36_anyfunc  | `L_s69_externref ]) ->
            match x5264 with
            | `L_s36_anyfunc -> Ojs.string_to_js "anyfunc"
            | `L_s69_externref -> Ojs.string_to_js "externref"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x5268 : Ojs.t) -> t_of_js x5268
        and t_0_to_js : t_0 -> Ojs.t = fun (x5267 : t) -> t_to_js x5267
      end
    module TableDescriptor =
      struct
        type t = [ `WebAssembly_TableDescriptor ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x5270 : Ojs.t) -> t_of_js x5270
        and t_0_to_js : t_0 -> Ojs.t = fun (x5269 : t) -> t_to_js x5269
        type tags = [ `WebAssembly_TableDescriptor ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `WebAssembly_TableDescriptor ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x5273 : Ojs.t) -> intf_of_js __tags_of_js x5273
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x5271 : __tags intf) -> intf_to_js __tags_to_js x5271
        let (get_element : 'tags this -> TableKind.t) =
          fun (x5275 : 'tags this) ->
            TableKind.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x5275) "element")
        let (set_element : 'tags this -> TableKind.t -> unit) =
          fun (x5277 : 'tags this) ->
            fun (x5278 : TableKind.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x5277) "element"
                (TableKind.t_to_js x5278)
        let (get_initial : 'tags this -> float) =
          fun (x5280 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x5280) "initial")
        let (set_initial : 'tags this -> float -> unit) =
          fun (x5282 : 'tags this) ->
            fun (x5283 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x5282) "initial"
                (Ojs.float_to_js x5283)
        let (get_maximum : 'tags this -> float) =
          fun (x5285 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x5285) "maximum")
        let (set_maximum : 'tags this -> float -> unit) =
          fun (x5287 : 'tags this) ->
            fun (x5288 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x5287) "maximum"
                (Ojs.float_to_js x5288)
        let cast_from = Obj.magic
      end
    module Table =
      struct
        type t = [ `WebAssembly_Table ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x5291 : Ojs.t) -> t_of_js x5291
        and t_0_to_js : t_0 -> Ojs.t = fun (x5290 : t) -> t_to_js x5290
        type tags = [ `WebAssembly_Table ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `WebAssembly_Table ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x5294 : Ojs.t) -> intf_of_js __tags_of_js x5294
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x5292 : __tags intf) -> intf_to_js __tags_to_js x5292
        let (get_length : 'tags this -> float) =
          fun (x5296 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x5296) "length")
        let (get_ : 'tags this -> index:float -> any) =
          fun (x5299 : 'tags this) ->
            fun ~index:(x5298 : float) ->
              any_of_js
                (Ojs.call (this_to_js Obj.magic x5299) "get"
                   [|(Ojs.float_to_js x5298)|])
        let (grow : 'tags this -> delta:float -> ?value:any -> unit -> float)
          =
          fun (x5305 : 'tags this) ->
            fun ~delta:(x5301 : float) ->
              fun ?value:(x5302 : any option) ->
                fun () ->
                  Ojs.float_of_js
                    (let x5307 = this_to_js Obj.magic x5305 in
                     Ojs.call (Ojs.get_prop_ascii x5307 "grow") "apply"
                       [|x5307;((let x5303 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x5303 "push"
                                      [|(Ojs.float_to_js x5301)|]);
                                 (match x5302 with
                                  | Some x5304 ->
                                      ignore
                                        (Ojs.call x5303 "push"
                                           [|(any_to_js x5304)|])
                                  | None -> ());
                                 x5303))|])
        let (set_ : 'tags this -> index:float -> ?value:any -> unit -> unit)
          =
          fun (x5312 : 'tags this) ->
            fun ~index:(x5308 : float) ->
              fun ?value:(x5309 : any option) ->
                fun () ->
                  ignore
                    (let x5314 = this_to_js Obj.magic x5312 in
                     Ojs.call (Ojs.get_prop_ascii x5314 "set") "apply"
                       [|x5314;((let x5310 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x5310 "push"
                                      [|(Ojs.float_to_js x5308)|]);
                                 (match x5309 with
                                  | Some x5311 ->
                                      ignore
                                        (Ojs.call x5310 "push"
                                           [|(any_to_js x5311)|])
                                  | None -> ());
                                 x5310))|])
        let cast_from = Obj.magic
        let (prototype : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii
                    (Ojs.get_prop_ascii Ojs.global "WebAssembly") "Table")
                 "prototype")
        let (create :
          descriptor:TableDescriptor.t -> ?value:any -> unit -> t) =
          fun ~descriptor:(x5315 : TableDescriptor.t) ->
            fun ?value:(x5316 : any option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "WebAssembly") "Table")
                     (let x5317 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x5317 "push"
                           [|(TableDescriptor.t_to_js x5315)|]);
                      (match x5316 with
                       | Some x5318 ->
                           ignore
                             (Ojs.call x5317 "push" [|(any_to_js x5318)|])
                       | None -> ());
                      x5317))
      end
    module ExportValue =
      struct
        type t = (Global.t, Memory.t, Table.t) union3
        let rec t_of_js : Ojs.t -> t =
          fun (x5323 : Ojs.t) ->
            union3_of_js Global.t_of_js Memory.t_of_js Table.t_of_js x5323
        and t_to_js : t -> Ojs.t =
          fun (x5319 : (Global.t, Memory.t, Table.t) union3) ->
            union3_to_js Global.t_to_js Memory.t_to_js Table.t_to_js x5319
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x5328 : Ojs.t) -> t_of_js x5328
        and t_0_to_js : t_0 -> Ojs.t = fun (x5327 : t) -> t_to_js x5327
      end
    module Exports =
      struct
        type t = (string, ExportValue.t) Record.t_2
        let rec t_of_js : Ojs.t -> t =
          fun (x5332 : Ojs.t) ->
            Record.t_2_of_js Ojs.string_of_js ExportValue.t_of_js x5332
        and t_to_js : t -> Ojs.t =
          fun (x5329 : (string, ExportValue.t) Record.t_2) ->
            Record.t_2_to_js Ojs.string_to_js ExportValue.t_to_js x5329
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x5336 : Ojs.t) -> t_of_js x5336
        and t_0_to_js : t_0 -> Ojs.t = fun (x5335 : t) -> t_to_js x5335
      end
    module ImportValue =
      struct
        type t = ExportValue.t or_number
        let rec t_of_js : Ojs.t -> t =
          fun (x5339 : Ojs.t) -> or_number_of_js ExportValue.t_of_js x5339
        and t_to_js : t -> Ojs.t =
          fun (x5337 : ExportValue.t or_number) ->
            or_number_to_js ExportValue.t_to_js x5337
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x5342 : Ojs.t) -> t_of_js x5342
        and t_0_to_js : t_0 -> Ojs.t = fun (x5341 : t) -> t_to_js x5341
      end
    module ModuleImports =
      struct
        type t = (string, ImportValue.t) Record.t_2
        let rec t_of_js : Ojs.t -> t =
          fun (x5346 : Ojs.t) ->
            Record.t_2_of_js Ojs.string_of_js ImportValue.t_of_js x5346
        and t_to_js : t -> Ojs.t =
          fun (x5343 : (string, ImportValue.t) Record.t_2) ->
            Record.t_2_to_js Ojs.string_to_js ImportValue.t_to_js x5343
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x5350 : Ojs.t) -> t_of_js x5350
        and t_0_to_js : t_0 -> Ojs.t = fun (x5349 : t) -> t_to_js x5349
      end
    module Imports =
      struct
        type t = (string, ModuleImports.t) Record.t_2
        let rec t_of_js : Ojs.t -> t =
          fun (x5354 : Ojs.t) ->
            Record.t_2_of_js Ojs.string_of_js ModuleImports.t_of_js x5354
        and t_to_js : t -> Ojs.t =
          fun (x5351 : (string, ModuleImports.t) Record.t_2) ->
            Record.t_2_to_js Ojs.string_to_js ModuleImports.t_to_js x5351
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x5358 : Ojs.t) -> t_of_js x5358
        and t_0_to_js : t_0 -> Ojs.t = fun (x5357 : t) -> t_to_js x5357
      end
    module Instance =
      struct
        type t = [ `WebAssembly_Instance ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x5360 : Ojs.t) -> t_of_js x5360
        and t_0_to_js : t_0 -> Ojs.t = fun (x5359 : t) -> t_to_js x5359
        type tags = [ `WebAssembly_Instance ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `WebAssembly_Instance ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x5363 : Ojs.t) -> intf_of_js __tags_of_js x5363
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x5361 : __tags intf) -> intf_to_js __tags_to_js x5361
        let (get_exports : 'tags this -> Exports.t) =
          fun (x5365 : 'tags this) ->
            Exports.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x5365) "exports")
        let cast_from = Obj.magic
        let (prototype : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii
                    (Ojs.get_prop_ascii Ojs.global "WebAssembly") "Instance")
                 "prototype")
        let (create :
          module_:Module.t -> ?importObject:Imports.t -> unit -> t) =
          fun ~module_:(x5367 : Module.t) ->
            fun ?importObject:(x5368 : Imports.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "WebAssembly")
                        "Instance")
                     (let x5369 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x5369 "push" [|(Module.t_to_js x5367)|]);
                      (match x5368 with
                       | Some x5370 ->
                           ignore
                             (Ojs.call x5369 "push"
                                [|(Imports.t_to_js x5370)|])
                       | None -> ());
                      x5369))
      end
    module WebAssemblyInstantiatedSource =
      struct
        type t = [ `WebAssembly_WebAssemblyInstantiatedSource ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x5372 : Ojs.t) -> t_of_js x5372
        and t_0_to_js : t_0 -> Ojs.t = fun (x5371 : t) -> t_to_js x5371
        type tags = [ `WebAssembly_WebAssemblyInstantiatedSource ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `WebAssembly_WebAssemblyInstantiatedSource ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x5375 : Ojs.t) -> intf_of_js __tags_of_js x5375
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x5373 : __tags intf) -> intf_to_js __tags_to_js x5373
        let (get_instance : 'tags this -> Instance.t) =
          fun (x5377 : 'tags this) ->
            Instance.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x5377) "instance")
        let (set_instance : 'tags this -> Instance.t -> unit) =
          fun (x5379 : 'tags this) ->
            fun (x5380 : Instance.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x5379) "instance"
                (Instance.t_to_js x5380)
        let (get_module : 'tags this -> Module.t) =
          fun (x5382 : 'tags this) ->
            Module.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x5382) "module")
        let (set_module : 'tags this -> Module.t -> unit) =
          fun (x5384 : 'tags this) ->
            fun (x5385 : Module.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x5384) "module"
                (Module.t_to_js x5385)
        let cast_from = Obj.magic
      end
    module RuntimeError =
      struct
        type t = [ `WebAssembly_RuntimeError ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x5388 : Ojs.t) -> t_of_js x5388
        and t_0_to_js : t_0 -> Ojs.t = fun (x5387 : t) -> t_to_js x5387
        type tags = [ `WebAssembly_RuntimeError ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `WebAssembly_RuntimeError ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x5391 : Ojs.t) -> intf_of_js __tags_of_js x5391
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x5389 : __tags intf) -> intf_to_js __tags_to_js x5389
        let cast_from = Obj.magic
        let (prototype : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii
                    (Ojs.get_prop_ascii Ojs.global "WebAssembly")
                    "RuntimeError") "prototype")
        let (create : ?message:string -> unit -> t) =
          fun ?message:(x5393 : string option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "WebAssembly")
                      "RuntimeError")
                   (let x5394 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    (match x5393 with
                     | Some x5395 ->
                         ignore
                           (Ojs.call x5394 "push"
                              [|(Ojs.string_to_js x5395)|])
                     | None -> ());
                    x5394))
        let (invoke : ?message:string -> unit -> t) =
          fun ?message:(x5396 : string option) ->
            fun () ->
              t_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "WebAssembly")
                      "RuntimeError") "apply"
                   [|Ojs.null;((let x5397 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                (match x5396 with
                                 | Some x5398 ->
                                     ignore
                                       (Ojs.call x5397 "push"
                                          [|(Ojs.string_to_js x5398)|])
                                 | None -> ());
                                x5397))|])
      end
    module AnonymousInterface92 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x5400 : Ojs.t) -> x5400
        and t_to_js : t -> Ojs.t = fun (x5399 : Ojs.t) -> x5399
        let (get_prototype : t -> RuntimeError.t) =
          fun (x5401 : t) ->
            RuntimeError.t_of_js
              (Ojs.get_prop_ascii (t_to_js x5401) "prototype")
        let (set_prototype : t -> RuntimeError.t -> unit) =
          fun (x5402 : t) ->
            fun (x5403 : RuntimeError.t) ->
              Ojs.set_prop_ascii (t_to_js x5402) "prototype"
                (RuntimeError.t_to_js x5403)
        let (create : t -> ?message:string -> unit -> RuntimeError.t) =
          fun (x5407 : t) ->
            fun ?message:(x5404 : string option) ->
              fun () ->
                RuntimeError.t_of_js
                  (Ojs.new_obj_arr (t_to_js x5407)
                     (let x5405 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x5404 with
                       | Some x5406 ->
                           ignore
                             (Ojs.call x5405 "push"
                                [|(Ojs.string_to_js x5406)|])
                       | None -> ());
                      x5405))
        let (apply : t -> ?message:string -> unit -> RuntimeError.t) =
          fun (x5411 : t) ->
            fun ?message:(x5408 : string option) ->
              fun () ->
                RuntimeError.t_of_js
                  (Ojs.call (t_to_js x5411) "apply"
                     [|Ojs.null;((let x5409 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x5408 with
                                   | Some x5410 ->
                                       ignore
                                         (Ojs.call x5409 "push"
                                            [|(Ojs.string_to_js x5410)|])
                                   | None -> ());
                                  x5409))|])
      end
    module AnonymousInterface65 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x5413 : Ojs.t) -> x5413
        and t_to_js : t -> Ojs.t = fun (x5412 : Ojs.t) -> x5412
        let (get_prototype : t -> Module.t) =
          fun (x5414 : t) ->
            Module.t_of_js (Ojs.get_prop_ascii (t_to_js x5414) "prototype")
        let (set_prototype : t -> Module.t -> unit) =
          fun (x5415 : t) ->
            fun (x5416 : Module.t) ->
              Ojs.set_prop_ascii (t_to_js x5415) "prototype"
                (Module.t_to_js x5416)
        let (create : t -> bytes:BufferSource.t -> Module.t) =
          fun (x5418 : t) ->
            fun ~bytes:(x5417 : BufferSource.t) ->
              Module.t_of_js
                (Ojs.new_obj (t_to_js x5418) [|(BufferSource.t_to_js x5417)|])
        let (customSections :
          t ->
            moduleObject:Module.t ->
              sectionName:string -> ArrayBuffer.t_0 list)
          =
          fun (x5421 : t) ->
            fun ~moduleObject:(x5419 : Module.t) ->
              fun ~sectionName:(x5420 : string) ->
                Ojs.list_of_js ArrayBuffer.t_0_of_js
                  (Ojs.call (t_to_js x5421) "customSections"
                     [|(Module.t_to_js x5419);(Ojs.string_to_js x5420)|])
        let (exports :
          t -> moduleObject:Module.t -> ModuleExportDescriptor.t list) =
          fun (x5424 : t) ->
            fun ~moduleObject:(x5423 : Module.t) ->
              Ojs.list_of_js ModuleExportDescriptor.t_of_js
                (Ojs.call (t_to_js x5424) "exports"
                   [|(Module.t_to_js x5423)|])
        let (imports :
          t -> moduleObject:Module.t -> ModuleImportDescriptor.t list) =
          fun (x5427 : t) ->
            fun ~moduleObject:(x5426 : Module.t) ->
              Ojs.list_of_js ModuleImportDescriptor.t_of_js
                (Ojs.call (t_to_js x5427) "imports"
                   [|(Module.t_to_js x5426)|])
      end
    module AnonymousInterface61 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x5430 : Ojs.t) -> x5430
        and t_to_js : t -> Ojs.t = fun (x5429 : Ojs.t) -> x5429
        let (get_prototype : t -> Memory.t) =
          fun (x5431 : t) ->
            Memory.t_of_js (Ojs.get_prop_ascii (t_to_js x5431) "prototype")
        let (set_prototype : t -> Memory.t -> unit) =
          fun (x5432 : t) ->
            fun (x5433 : Memory.t) ->
              Ojs.set_prop_ascii (t_to_js x5432) "prototype"
                (Memory.t_to_js x5433)
        let (create : t -> descriptor:MemoryDescriptor.t -> Memory.t) =
          fun (x5435 : t) ->
            fun ~descriptor:(x5434 : MemoryDescriptor.t) ->
              Memory.t_of_js
                (Ojs.new_obj (t_to_js x5435)
                   [|(MemoryDescriptor.t_to_js x5434)|])
      end
    module LinkError =
      struct
        type t = [ `WebAssembly_LinkError ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x5437 : Ojs.t) -> t_of_js x5437
        and t_0_to_js : t_0 -> Ojs.t = fun (x5436 : t) -> t_to_js x5436
        type tags = [ `WebAssembly_LinkError ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `WebAssembly_LinkError ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x5440 : Ojs.t) -> intf_of_js __tags_of_js x5440
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x5438 : __tags intf) -> intf_to_js __tags_to_js x5438
        let cast_from = Obj.magic
        let (prototype : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii
                    (Ojs.get_prop_ascii Ojs.global "WebAssembly") "LinkError")
                 "prototype")
        let (create : ?message:string -> unit -> t) =
          fun ?message:(x5442 : string option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "WebAssembly")
                      "LinkError")
                   (let x5443 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    (match x5442 with
                     | Some x5444 ->
                         ignore
                           (Ojs.call x5443 "push"
                              [|(Ojs.string_to_js x5444)|])
                     | None -> ());
                    x5443))
        let (invoke : ?message:string -> unit -> t) =
          fun ?message:(x5445 : string option) ->
            fun () ->
              t_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "WebAssembly")
                      "LinkError") "apply"
                   [|Ojs.null;((let x5446 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                (match x5445 with
                                 | Some x5447 ->
                                     ignore
                                       (Ojs.call x5446 "push"
                                          [|(Ojs.string_to_js x5447)|])
                                 | None -> ());
                                x5446))|])
      end
    module AnonymousInterface59 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x5449 : Ojs.t) -> x5449
        and t_to_js : t -> Ojs.t = fun (x5448 : Ojs.t) -> x5448
        let (get_prototype : t -> LinkError.t) =
          fun (x5450 : t) ->
            LinkError.t_of_js
              (Ojs.get_prop_ascii (t_to_js x5450) "prototype")
        let (set_prototype : t -> LinkError.t -> unit) =
          fun (x5451 : t) ->
            fun (x5452 : LinkError.t) ->
              Ojs.set_prop_ascii (t_to_js x5451) "prototype"
                (LinkError.t_to_js x5452)
        let (create : t -> ?message:string -> unit -> LinkError.t) =
          fun (x5456 : t) ->
            fun ?message:(x5453 : string option) ->
              fun () ->
                LinkError.t_of_js
                  (Ojs.new_obj_arr (t_to_js x5456)
                     (let x5454 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x5453 with
                       | Some x5455 ->
                           ignore
                             (Ojs.call x5454 "push"
                                [|(Ojs.string_to_js x5455)|])
                       | None -> ());
                      x5454))
        let (apply : t -> ?message:string -> unit -> LinkError.t) =
          fun (x5460 : t) ->
            fun ?message:(x5457 : string option) ->
              fun () ->
                LinkError.t_of_js
                  (Ojs.call (t_to_js x5460) "apply"
                     [|Ojs.null;((let x5458 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x5457 with
                                   | Some x5459 ->
                                       ignore
                                         (Ojs.call x5458 "push"
                                            [|(Ojs.string_to_js x5459)|])
                                   | None -> ());
                                  x5458))|])
      end
    module AnonymousInterface58 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x5462 : Ojs.t) -> x5462
        and t_to_js : t -> Ojs.t = fun (x5461 : Ojs.t) -> x5461
        let (get_prototype : t -> Instance.t) =
          fun (x5463 : t) ->
            Instance.t_of_js (Ojs.get_prop_ascii (t_to_js x5463) "prototype")
        let (set_prototype : t -> Instance.t -> unit) =
          fun (x5464 : t) ->
            fun (x5465 : Instance.t) ->
              Ojs.set_prop_ascii (t_to_js x5464) "prototype"
                (Instance.t_to_js x5465)
        let (create :
          t ->
            module_:Module.t -> ?importObject:Imports.t -> unit -> Instance.t)
          =
          fun (x5470 : t) ->
            fun ~module_:(x5466 : Module.t) ->
              fun ?importObject:(x5467 : Imports.t option) ->
                fun () ->
                  Instance.t_of_js
                    (Ojs.new_obj_arr (t_to_js x5470)
                       (let x5468 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        ignore
                          (Ojs.call x5468 "push" [|(Module.t_to_js x5466)|]);
                        (match x5467 with
                         | Some x5469 ->
                             ignore
                               (Ojs.call x5468 "push"
                                  [|(Imports.t_to_js x5469)|])
                         | None -> ());
                        x5468))
      end
    module AnonymousInterface42 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x5472 : Ojs.t) -> x5472
        and t_to_js : t -> Ojs.t = fun (x5471 : Ojs.t) -> x5471
        let (get_prototype : t -> Global.t) =
          fun (x5473 : t) ->
            Global.t_of_js (Ojs.get_prop_ascii (t_to_js x5473) "prototype")
        let (set_prototype : t -> Global.t -> unit) =
          fun (x5474 : t) ->
            fun (x5475 : Global.t) ->
              Ojs.set_prop_ascii (t_to_js x5474) "prototype"
                (Global.t_to_js x5475)
        let (create :
          t -> descriptor:GlobalDescriptor.t -> ?v:any -> unit -> Global.t) =
          fun (x5480 : t) ->
            fun ~descriptor:(x5476 : GlobalDescriptor.t) ->
              fun ?v:(x5477 : any option) ->
                fun () ->
                  Global.t_of_js
                    (Ojs.new_obj_arr (t_to_js x5480)
                       (let x5478 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        ignore
                          (Ojs.call x5478 "push"
                             [|(GlobalDescriptor.t_to_js x5476)|]);
                        (match x5477 with
                         | Some x5479 ->
                             ignore
                               (Ojs.call x5478 "push" [|(any_to_js x5479)|])
                         | None -> ());
                        x5478))
      end
    module CompileError =
      struct
        type t = [ `WebAssembly_CompileError ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x5482 : Ojs.t) -> t_of_js x5482
        and t_0_to_js : t_0 -> Ojs.t = fun (x5481 : t) -> t_to_js x5481
        type tags = [ `WebAssembly_CompileError ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `WebAssembly_CompileError ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x5485 : Ojs.t) -> intf_of_js __tags_of_js x5485
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x5483 : __tags intf) -> intf_to_js __tags_to_js x5483
        let cast_from = Obj.magic
        let (prototype : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii
                    (Ojs.get_prop_ascii Ojs.global "WebAssembly")
                    "CompileError") "prototype")
        let (create : ?message:string -> unit -> t) =
          fun ?message:(x5487 : string option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "WebAssembly")
                      "CompileError")
                   (let x5488 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    (match x5487 with
                     | Some x5489 ->
                         ignore
                           (Ojs.call x5488 "push"
                              [|(Ojs.string_to_js x5489)|])
                     | None -> ());
                    x5488))
        let (invoke : ?message:string -> unit -> t) =
          fun ?message:(x5490 : string option) ->
            fun () ->
              t_of_js
                (Ojs.call
                   (Ojs.get_prop_ascii
                      (Ojs.get_prop_ascii Ojs.global "WebAssembly")
                      "CompileError") "apply"
                   [|Ojs.null;((let x5491 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                (match x5490 with
                                 | Some x5492 ->
                                     ignore
                                       (Ojs.call x5491 "push"
                                          [|(Ojs.string_to_js x5492)|])
                                 | None -> ());
                                x5491))|])
      end
    module AnonymousInterface12 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x5494 : Ojs.t) -> x5494
        and t_to_js : t -> Ojs.t = fun (x5493 : Ojs.t) -> x5493
        let (get_prototype : t -> CompileError.t) =
          fun (x5495 : t) ->
            CompileError.t_of_js
              (Ojs.get_prop_ascii (t_to_js x5495) "prototype")
        let (set_prototype : t -> CompileError.t -> unit) =
          fun (x5496 : t) ->
            fun (x5497 : CompileError.t) ->
              Ojs.set_prop_ascii (t_to_js x5496) "prototype"
                (CompileError.t_to_js x5497)
        let (create : t -> ?message:string -> unit -> CompileError.t) =
          fun (x5501 : t) ->
            fun ?message:(x5498 : string option) ->
              fun () ->
                CompileError.t_of_js
                  (Ojs.new_obj_arr (t_to_js x5501)
                     (let x5499 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x5498 with
                       | Some x5500 ->
                           ignore
                             (Ojs.call x5499 "push"
                                [|(Ojs.string_to_js x5500)|])
                       | None -> ());
                      x5499))
        let (apply : t -> ?message:string -> unit -> CompileError.t) =
          fun (x5505 : t) ->
            fun ?message:(x5502 : string option) ->
              fun () ->
                CompileError.t_of_js
                  (Ojs.call (t_to_js x5505) "apply"
                     [|Ojs.null;((let x5503 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x5502 with
                                   | Some x5504 ->
                                       ignore
                                         (Ojs.call x5503 "push"
                                            [|(Ojs.string_to_js x5504)|])
                                   | None -> ());
                                  x5503))|])
      end
    module AnonymousInterface101 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x5507 : Ojs.t) -> x5507
        and t_to_js : t -> Ojs.t = fun (x5506 : Ojs.t) -> x5506
        let (get_prototype : t -> Table.t) =
          fun (x5508 : t) ->
            Table.t_of_js (Ojs.get_prop_ascii (t_to_js x5508) "prototype")
        let (set_prototype : t -> Table.t -> unit) =
          fun (x5509 : t) ->
            fun (x5510 : Table.t) ->
              Ojs.set_prop_ascii (t_to_js x5509) "prototype"
                (Table.t_to_js x5510)
        let (create :
          t -> descriptor:TableDescriptor.t -> ?value:any -> unit -> Table.t)
          =
          fun (x5515 : t) ->
            fun ~descriptor:(x5511 : TableDescriptor.t) ->
              fun ?value:(x5512 : any option) ->
                fun () ->
                  Table.t_of_js
                    (Ojs.new_obj_arr (t_to_js x5515)
                       (let x5513 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        ignore
                          (Ojs.call x5513 "push"
                             [|(TableDescriptor.t_to_js x5511)|]);
                        (match x5512 with
                         | Some x5514 ->
                             ignore
                               (Ojs.call x5513 "push" [|(any_to_js x5514)|])
                         | None -> ());
                        x5513))
      end
    let (compileError : unit -> AnonymousInterface12.t) =
      fun () ->
        AnonymousInterface12.t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WebAssembly")
             "CompileError")
    let (global : unit -> AnonymousInterface42.t) =
      fun () ->
        AnonymousInterface42.t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WebAssembly")
             "Global")
    let (instance : unit -> AnonymousInterface58.t) =
      fun () ->
        AnonymousInterface58.t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WebAssembly")
             "Instance")
    let (linkError : unit -> AnonymousInterface59.t) =
      fun () ->
        AnonymousInterface59.t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WebAssembly")
             "LinkError")
    let (memory : unit -> AnonymousInterface61.t) =
      fun () ->
        AnonymousInterface61.t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WebAssembly")
             "Memory")
    let (module_ : unit -> AnonymousInterface65.t) =
      fun () ->
        AnonymousInterface65.t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WebAssembly")
             "Module")
    let (runtimeError : unit -> AnonymousInterface92.t) =
      fun () ->
        AnonymousInterface92.t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WebAssembly")
             "RuntimeError")
    let (table : unit -> AnonymousInterface101.t) =
      fun () ->
        AnonymousInterface101.t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WebAssembly")
             "Table")
    let (compile : BufferSource.t -> Module.t Promise.t_1) =
      fun (x5516 : BufferSource.t) ->
        Promise.t_1_of_js Module.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "WebAssembly") "compile"
             [|(BufferSource.t_to_js x5516)|])
    let (compileStreaming : Response.t -> Module.t Promise.t_1) =
      fun (x5518 : Response.t) ->
        Promise.t_1_of_js Module.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "WebAssembly")
             "compileStreaming" [|(Response.t_to_js x5518)|])
    let (instantiate :
      bytes:BufferSource.t ->
        ?importObject:Imports.t ->
          unit -> WebAssemblyInstantiatedSource.t Promise.t_1)
      =
      fun ~bytes:(x5520 : BufferSource.t) ->
        fun ?importObject:(x5521 : Imports.t option) ->
          fun () ->
            Promise.t_1_of_js WebAssemblyInstantiatedSource.t_of_js
              (let x5524 = Ojs.get_prop_ascii Ojs.global "WebAssembly" in
               Ojs.call (Ojs.get_prop_ascii x5524 "instantiate") "apply"
                 [|x5524;((let x5522 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x5522 "push"
                                [|(BufferSource.t_to_js x5520)|]);
                           (match x5521 with
                            | Some x5523 ->
                                ignore
                                  (Ojs.call x5522 "push"
                                     [|(Imports.t_to_js x5523)|])
                            | None -> ());
                           x5522))|])
    let (instantiate' :
      moduleObject:Module.t ->
        ?importObject:Imports.t -> unit -> Instance.t Promise.t_1)
      =
      fun ~moduleObject:(x5526 : Module.t) ->
        fun ?importObject:(x5527 : Imports.t option) ->
          fun () ->
            Promise.t_1_of_js Instance.t_of_js
              (let x5530 = Ojs.get_prop_ascii Ojs.global "WebAssembly" in
               Ojs.call (Ojs.get_prop_ascii x5530 "instantiate") "apply"
                 [|x5530;((let x5528 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x5528 "push"
                                [|(Module.t_to_js x5526)|]);
                           (match x5527 with
                            | Some x5529 ->
                                ignore
                                  (Ojs.call x5528 "push"
                                     [|(Imports.t_to_js x5529)|])
                            | None -> ());
                           x5528))|])
    let (instantiateStreaming :
      source:Response.t ->
        ?importObject:Imports.t ->
          unit -> WebAssemblyInstantiatedSource.t Promise.t_1)
      =
      fun ~source:(x5532 : Response.t) ->
        fun ?importObject:(x5533 : Imports.t option) ->
          fun () ->
            Promise.t_1_of_js WebAssemblyInstantiatedSource.t_of_js
              (let x5536 = Ojs.get_prop_ascii Ojs.global "WebAssembly" in
               Ojs.call (Ojs.get_prop_ascii x5536 "instantiateStreaming")
                 "apply"
                 [|x5536;((let x5534 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x5534 "push"
                                [|(Response.t_to_js x5532)|]);
                           (match x5533 with
                            | Some x5535 ->
                                ignore
                                  (Ojs.call x5534 "push"
                                     [|(Imports.t_to_js x5535)|])
                            | None -> ());
                           x5534))|])
    let (validate : BufferSource.t -> bool) =
      fun (x5538 : BufferSource.t) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "WebAssembly") "validate"
             [|(BufferSource.t_to_js x5538)|])
  end
module PromiseRejectionEventInit =
  struct
    type t = [ `EventInit  | `PromiseRejectionEventInit ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5540 : Ojs.t) -> t_of_js x5540
    and t_0_to_js : t_0 -> Ojs.t = fun (x5539 : t) -> t_to_js x5539
    type tags = [ `EventInit  | `PromiseRejectionEventInit ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `PromiseRejectionEventInit ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5543 : Ojs.t) -> intf_of_js __tags_of_js x5543
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5541 : __tags intf) -> intf_to_js __tags_to_js x5541
    let (get_promise : 'tags this -> any Promise.t_1) =
      fun (x5545 : 'tags this) ->
        Promise.t_1_of_js any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5545) "promise")
    let (set_promise : 'tags this -> any Promise.t_1 -> unit) =
      fun (x5548 : 'tags this) ->
        fun (x5549 : any Promise.t_1) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5548) "promise"
            (Promise.t_1_to_js any_to_js x5549)
    let (get_reason : 'tags this -> any) =
      fun (x5552 : 'tags this) ->
        any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x5552) "reason")
    let (set_reason : 'tags this -> any -> unit) =
      fun (x5554 : 'tags this) ->
        fun (x5555 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5554) "reason"
            (any_to_js x5555)
    let cast_from = Obj.magic
  end
module PromiseRejectionEvent =
  struct
    type t = [ `Event  | `PromiseRejectionEvent ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5558 : Ojs.t) -> t_of_js x5558
    and t_0_to_js : t_0 -> Ojs.t = fun (x5557 : t) -> t_to_js x5557
    type tags = [ `Event  | `PromiseRejectionEvent ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `PromiseRejectionEvent ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5561 : Ojs.t) -> intf_of_js __tags_of_js x5561
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5559 : __tags intf) -> intf_to_js __tags_to_js x5559
    let (get_promise : 'tags this -> any Promise.t_1) =
      fun (x5563 : 'tags this) ->
        Promise.t_1_of_js any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5563) "promise")
    let (get_reason : 'tags this -> any) =
      fun (x5566 : 'tags this) ->
        any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x5566) "reason")
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "PromiseRejectionEvent")
             "prototype")
    let (create :
      type_:string -> eventInitDict:PromiseRejectionEventInit.t -> t) =
      fun ~type_:(x5568 : string) ->
        fun ~eventInitDict:(x5569 : PromiseRejectionEventInit.t) ->
          t_of_js
            (Ojs.new_obj
               (Ojs.get_prop_ascii Ojs.global "PromiseRejectionEvent")
               [|(Ojs.string_to_js x5568);(PromiseRejectionEventInit.t_to_js
                                             x5569)|])
  end
module WorkerGlobalScopeEventMap =
  struct
    type t = [ `WorkerGlobalScopeEventMap ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5571 : Ojs.t) -> t_of_js x5571
    and t_0_to_js : t_0 -> Ojs.t = fun (x5570 : t) -> t_to_js x5570
    type tags = [ `WorkerGlobalScopeEventMap ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `WorkerGlobalScopeEventMap ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5574 : Ojs.t) -> intf_of_js __tags_of_js x5574
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5572 : __tags intf) -> intf_to_js __tags_to_js x5572
    let (get_error : 'tags this -> ErrorEvent.t) =
      fun (x5576 : 'tags this) ->
        ErrorEvent.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5576) "error")
    let (set_error : 'tags this -> ErrorEvent.t -> unit) =
      fun (x5578 : 'tags this) ->
        fun (x5579 : ErrorEvent.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5578) "error"
            (ErrorEvent.t_to_js x5579)
    let (get_languagechange : 'tags this -> Event.t) =
      fun (x5581 : 'tags this) ->
        Event.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5581) "languagechange")
    let (set_languagechange : 'tags this -> Event.t -> unit) =
      fun (x5583 : 'tags this) ->
        fun (x5584 : Event.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5583) "languagechange"
            (Event.t_to_js x5584)
    let (get_offline : 'tags this -> Event.t) =
      fun (x5586 : 'tags this) ->
        Event.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5586) "offline")
    let (set_offline : 'tags this -> Event.t -> unit) =
      fun (x5588 : 'tags this) ->
        fun (x5589 : Event.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5588) "offline"
            (Event.t_to_js x5589)
    let (get_online : 'tags this -> Event.t) =
      fun (x5591 : 'tags this) ->
        Event.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5591) "online")
    let (set_online : 'tags this -> Event.t -> unit) =
      fun (x5593 : 'tags this) ->
        fun (x5594 : Event.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5593) "online"
            (Event.t_to_js x5594)
    let (get_rejectionhandled : 'tags this -> PromiseRejectionEvent.t) =
      fun (x5596 : 'tags this) ->
        PromiseRejectionEvent.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5596) "rejectionhandled")
    let (set_rejectionhandled :
      'tags this -> PromiseRejectionEvent.t -> unit) =
      fun (x5598 : 'tags this) ->
        fun (x5599 : PromiseRejectionEvent.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5598) "rejectionhandled"
            (PromiseRejectionEvent.t_to_js x5599)
    let (get_unhandledrejection : 'tags this -> PromiseRejectionEvent.t) =
      fun (x5601 : 'tags this) ->
        PromiseRejectionEvent.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5601)
             "unhandledrejection")
    let (set_unhandledrejection :
      'tags this -> PromiseRejectionEvent.t -> unit) =
      fun (x5603 : 'tags this) ->
        fun (x5604 : PromiseRejectionEvent.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5603)
            "unhandledrejection" (PromiseRejectionEvent.t_to_js x5604)
    let cast_from = Obj.magic
  end
module SharedWorkerGlobalScopeEventMap =
  struct
    type t =
      [ `SharedWorkerGlobalScopeEventMap  | `WorkerGlobalScopeEventMap ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5607 : Ojs.t) -> t_of_js x5607
    and t_0_to_js : t_0 -> Ojs.t = fun (x5606 : t) -> t_to_js x5606
    type tags =
      [ `SharedWorkerGlobalScopeEventMap  | `WorkerGlobalScopeEventMap ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `SharedWorkerGlobalScopeEventMap ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5610 : Ojs.t) -> intf_of_js __tags_of_js x5610
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5608 : __tags intf) -> intf_to_js __tags_to_js x5608
    let (get_connect : 'tags this -> MessageEvent.t_0) =
      fun (x5612 : 'tags this) ->
        MessageEvent.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5612) "connect")
    let (set_connect : 'tags this -> MessageEvent.t_0 -> unit) =
      fun (x5614 : 'tags this) ->
        fun (x5615 : MessageEvent.t_0) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5614) "connect"
            (MessageEvent.t_0_to_js x5615)
    let cast_from = Obj.magic
  end
module ServiceWorkerRegistrationEventMap =
  struct
    type t = [ `ServiceWorkerRegistrationEventMap ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5618 : Ojs.t) -> t_of_js x5618
    and t_0_to_js : t_0 -> Ojs.t = fun (x5617 : t) -> t_to_js x5617
    type tags = [ `ServiceWorkerRegistrationEventMap ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `ServiceWorkerRegistrationEventMap ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5621 : Ojs.t) -> intf_of_js __tags_of_js x5621
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5619 : __tags intf) -> intf_to_js __tags_to_js x5619
    let (get_updatefound : 'tags this -> Event.t) =
      fun (x5623 : 'tags this) ->
        Event.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5623) "updatefound")
    let (set_updatefound : 'tags this -> Event.t -> unit) =
      fun (x5625 : 'tags this) ->
        fun (x5626 : Event.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5625) "updatefound"
            (Event.t_to_js x5626)
    let cast_from = Obj.magic
  end
module PushMessageData =
  struct
    type t = [ `PushMessageData ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5629 : Ojs.t) -> t_of_js x5629
    and t_0_to_js : t_0 -> Ojs.t = fun (x5628 : t) -> t_to_js x5628
    type tags = [ `PushMessageData ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `PushMessageData ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5632 : Ojs.t) -> intf_of_js __tags_of_js x5632
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5630 : __tags intf) -> intf_to_js __tags_to_js x5630
    let (arrayBuffer : 'tags this -> ArrayBuffer.t_0) =
      fun (x5634 : 'tags this) ->
        ArrayBuffer.t_0_of_js
          (Ojs.call (this_to_js Obj.magic x5634) "arrayBuffer" [||])
    let (blob : 'tags this -> Blob.t) =
      fun (x5636 : 'tags this) ->
        Blob.t_of_js (Ojs.call (this_to_js Obj.magic x5636) "blob" [||])
    let (json : 'tags this -> any) =
      fun (x5638 : 'tags this) ->
        any_of_js (Ojs.call (this_to_js Obj.magic x5638) "json" [||])
    let (text : 'tags this -> string) =
      fun (x5640 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x5640) "text" [||])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "PushMessageData") "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "PushMessageData") [||])
  end
module PushMessageDataInit =
  struct
    type t = BufferSource.t or_string
    let rec t_of_js : Ojs.t -> t =
      fun (x5644 : Ojs.t) -> or_string_of_js BufferSource.t_of_js x5644
    and t_to_js : t -> Ojs.t =
      fun (x5642 : BufferSource.t or_string) ->
        or_string_to_js BufferSource.t_to_js x5642
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5647 : Ojs.t) -> t_of_js x5647
    and t_0_to_js : t_0 -> Ojs.t = fun (x5646 : t) -> t_to_js x5646
  end
module ExtendableEventInit =
  struct
    type t = [ `EventInit  | `ExtendableEventInit ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5649 : Ojs.t) -> t_of_js x5649
    and t_0_to_js : t_0 -> Ojs.t = fun (x5648 : t) -> t_to_js x5648
    type tags = [ `EventInit  | `ExtendableEventInit ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ExtendableEventInit ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5652 : Ojs.t) -> intf_of_js __tags_of_js x5652
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5650 : __tags intf) -> intf_to_js __tags_to_js x5650
    let cast_from = Obj.magic
  end
module PushEventInit =
  struct
    type t = [ `EventInit  | `ExtendableEventInit  | `PushEventInit ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5655 : Ojs.t) -> t_of_js x5655
    and t_0_to_js : t_0 -> Ojs.t = fun (x5654 : t) -> t_to_js x5654
    type tags = [ `EventInit  | `ExtendableEventInit  | `PushEventInit ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `PushEventInit ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5658 : Ojs.t) -> intf_of_js __tags_of_js x5658
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5656 : __tags intf) -> intf_to_js __tags_to_js x5656
    let (get_data : 'tags this -> PushMessageDataInit.t) =
      fun (x5660 : 'tags this) ->
        PushMessageDataInit.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5660) "data")
    let (set_data : 'tags this -> PushMessageDataInit.t -> unit) =
      fun (x5662 : 'tags this) ->
        fun (x5663 : PushMessageDataInit.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5662) "data"
            (PushMessageDataInit.t_to_js x5663)
    let cast_from = Obj.magic
  end
module ExtendableEvent =
  struct
    type t = [ `Event  | `ExtendableEvent ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5666 : Ojs.t) -> t_of_js x5666
    and t_0_to_js : t_0 -> Ojs.t = fun (x5665 : t) -> t_to_js x5665
    type tags = [ `Event  | `ExtendableEvent ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ExtendableEvent ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5669 : Ojs.t) -> intf_of_js __tags_of_js x5669
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5667 : __tags intf) -> intf_to_js __tags_to_js x5667
    let (waitUntil : 'tags this -> f:any -> unit) =
      fun (x5672 : 'tags this) ->
        fun ~f:(x5671 : any) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x5672) "waitUntil"
               [|(any_to_js x5671)|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "ExtendableEvent") "prototype")
    let (create :
      type_:string -> ?eventInitDict:ExtendableEventInit.t -> unit -> t) =
      fun ~type_:(x5674 : string) ->
        fun ?eventInitDict:(x5675 : ExtendableEventInit.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "ExtendableEvent")
                 (let x5676 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x5676 "push" [|(Ojs.string_to_js x5674)|]);
                  (match x5675 with
                   | Some x5677 ->
                       ignore
                         (Ojs.call x5676 "push"
                            [|(ExtendableEventInit.t_to_js x5677)|])
                   | None -> ());
                  x5676))
  end
module PushEvent =
  struct
    type t = [ `Event  | `ExtendableEvent  | `PushEvent ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5679 : Ojs.t) -> t_of_js x5679
    and t_0_to_js : t_0 -> Ojs.t = fun (x5678 : t) -> t_to_js x5678
    type tags = [ `Event  | `ExtendableEvent  | `PushEvent ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `PushEvent ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5682 : Ojs.t) -> intf_of_js __tags_of_js x5682
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5680 : __tags intf) -> intf_to_js __tags_to_js x5680
    let (get_data : 'tags this -> PushMessageData.t or_null) =
      fun (x5684 : 'tags this) ->
        or_null_of_js PushMessageData.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5684) "data")
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "PushEvent")
             "prototype")
    let (create :
      type_:string -> ?eventInitDict:PushEventInit.t -> unit -> t) =
      fun ~type_:(x5687 : string) ->
        fun ?eventInitDict:(x5688 : PushEventInit.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "PushEvent")
                 (let x5689 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x5689 "push" [|(Ojs.string_to_js x5687)|]);
                  (match x5688 with
                   | Some x5690 ->
                       ignore
                         (Ojs.call x5689 "push"
                            [|(PushEventInit.t_to_js x5690)|])
                   | None -> ());
                  x5689))
  end
module NotificationPermission =
  struct
    type t = [ `L_s57_default  | `L_s58_denied  | `L_s82_granted ]
    let rec t_of_js : Ojs.t -> t =
      fun (x5692 : Ojs.t) ->
        let x5693 = x5692 in
        match Ojs.string_of_js x5693 with
        | "default" -> `L_s57_default
        | "denied" -> `L_s58_denied
        | "granted" -> `L_s82_granted
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun (x5691 : [ `L_s57_default  | `L_s58_denied  | `L_s82_granted ]) ->
        match x5691 with
        | `L_s57_default -> Ojs.string_to_js "default"
        | `L_s58_denied -> Ojs.string_to_js "denied"
        | `L_s82_granted -> Ojs.string_to_js "granted"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5695 : Ojs.t) -> t_of_js x5695
    and t_0_to_js : t_0 -> Ojs.t = fun (x5694 : t) -> t_to_js x5694
  end
module VibratePattern =
  struct
    type t = float list or_number
    let rec t_of_js : Ojs.t -> t =
      fun (x5699 : Ojs.t) ->
        or_number_of_js
          (fun (x5700 : Ojs.t) -> Ojs.list_of_js Ojs.float_of_js x5700) x5699
    and t_to_js : t -> Ojs.t =
      fun (x5696 : float list or_number) ->
        or_number_to_js
          (fun (x5697 : float list) -> Ojs.list_to_js Ojs.float_to_js x5697)
          x5696
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5703 : Ojs.t) -> t_of_js x5703
    and t_0_to_js : t_0 -> Ojs.t = fun (x5702 : t) -> t_to_js x5702
  end
module NotificationAction =
  struct
    type t = [ `NotificationAction ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5705 : Ojs.t) -> t_of_js x5705
    and t_0_to_js : t_0 -> Ojs.t = fun (x5704 : t) -> t_to_js x5704
    type tags = [ `NotificationAction ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `NotificationAction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5708 : Ojs.t) -> intf_of_js __tags_of_js x5708
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5706 : __tags intf) -> intf_to_js __tags_to_js x5706
    let (get_action : 'tags this -> string) =
      fun (x5710 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5710) "action")
    let (set_action : 'tags this -> string -> unit) =
      fun (x5712 : 'tags this) ->
        fun (x5713 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5712) "action"
            (Ojs.string_to_js x5713)
    let (get_icon : 'tags this -> string) =
      fun (x5715 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5715) "icon")
    let (set_icon : 'tags this -> string -> unit) =
      fun (x5717 : 'tags this) ->
        fun (x5718 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5717) "icon"
            (Ojs.string_to_js x5718)
    let (get_title : 'tags this -> string) =
      fun (x5720 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5720) "title")
    let (set_title : 'tags this -> string -> unit) =
      fun (x5722 : 'tags this) ->
        fun (x5723 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5722) "title"
            (Ojs.string_to_js x5723)
    let cast_from = Obj.magic
  end
module DOMTimeStamp =
  struct
    type t = float
    let rec t_of_js : Ojs.t -> t =
      fun (x5726 : Ojs.t) -> Ojs.float_of_js x5726
    and t_to_js : t -> Ojs.t = fun (x5725 : float) -> Ojs.float_to_js x5725
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5728 : Ojs.t) -> t_of_js x5728
    and t_0_to_js : t_0 -> Ojs.t = fun (x5727 : t) -> t_to_js x5727
  end
module NotificationDirection =
  struct
    type t = [ `L_s108_ltr  | `L_s171_rtl  | `L_s41_auto ]
    let rec t_of_js : Ojs.t -> t =
      fun (x5730 : Ojs.t) ->
        let x5731 = x5730 in
        match Ojs.string_of_js x5731 with
        | "ltr" -> `L_s108_ltr
        | "rtl" -> `L_s171_rtl
        | "auto" -> `L_s41_auto
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun (x5729 : [ `L_s108_ltr  | `L_s171_rtl  | `L_s41_auto ]) ->
        match x5729 with
        | `L_s108_ltr -> Ojs.string_to_js "ltr"
        | `L_s171_rtl -> Ojs.string_to_js "rtl"
        | `L_s41_auto -> Ojs.string_to_js "auto"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5733 : Ojs.t) -> t_of_js x5733
    and t_0_to_js : t_0 -> Ojs.t = fun (x5732 : t) -> t_to_js x5732
  end
module NotificationOptions =
  struct
    type t = [ `NotificationOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5735 : Ojs.t) -> t_of_js x5735
    and t_0_to_js : t_0 -> Ojs.t = fun (x5734 : t) -> t_to_js x5734
    type tags = [ `NotificationOptions ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `NotificationOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5738 : Ojs.t) -> intf_of_js __tags_of_js x5738
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5736 : __tags intf) -> intf_to_js __tags_to_js x5736
    let (get_actions : 'tags this -> NotificationAction.t list) =
      fun (x5740 : 'tags this) ->
        Ojs.list_of_js NotificationAction.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5740) "actions")
    let (set_actions : 'tags this -> NotificationAction.t list -> unit) =
      fun (x5743 : 'tags this) ->
        fun (x5744 : NotificationAction.t list) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5743) "actions"
            (Ojs.list_to_js NotificationAction.t_to_js x5744)
    let (get_badge : 'tags this -> string) =
      fun (x5747 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5747) "badge")
    let (set_badge : 'tags this -> string -> unit) =
      fun (x5749 : 'tags this) ->
        fun (x5750 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5749) "badge"
            (Ojs.string_to_js x5750)
    let (get_body : 'tags this -> string) =
      fun (x5752 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5752) "body")
    let (set_body : 'tags this -> string -> unit) =
      fun (x5754 : 'tags this) ->
        fun (x5755 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5754) "body"
            (Ojs.string_to_js x5755)
    let (get_data : 'tags this -> any) =
      fun (x5757 : 'tags this) ->
        any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x5757) "data")
    let (set_data : 'tags this -> any -> unit) =
      fun (x5759 : 'tags this) ->
        fun (x5760 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5759) "data"
            (any_to_js x5760)
    let (get_dir : 'tags this -> NotificationDirection.t) =
      fun (x5762 : 'tags this) ->
        NotificationDirection.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5762) "dir")
    let (set_dir : 'tags this -> NotificationDirection.t -> unit) =
      fun (x5764 : 'tags this) ->
        fun (x5765 : NotificationDirection.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5764) "dir"
            (NotificationDirection.t_to_js x5765)
    let (get_icon : 'tags this -> string) =
      fun (x5767 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5767) "icon")
    let (set_icon : 'tags this -> string -> unit) =
      fun (x5769 : 'tags this) ->
        fun (x5770 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5769) "icon"
            (Ojs.string_to_js x5770)
    let (get_image : 'tags this -> string) =
      fun (x5772 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5772) "image")
    let (set_image : 'tags this -> string -> unit) =
      fun (x5774 : 'tags this) ->
        fun (x5775 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5774) "image"
            (Ojs.string_to_js x5775)
    let (get_lang : 'tags this -> string) =
      fun (x5777 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5777) "lang")
    let (set_lang : 'tags this -> string -> unit) =
      fun (x5779 : 'tags this) ->
        fun (x5780 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5779) "lang"
            (Ojs.string_to_js x5780)
    let (get_renotify : 'tags this -> bool) =
      fun (x5782 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5782) "renotify")
    let (set_renotify : 'tags this -> bool -> unit) =
      fun (x5784 : 'tags this) ->
        fun (x5785 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5784) "renotify"
            (Ojs.bool_to_js x5785)
    let (get_requireInteraction : 'tags this -> bool) =
      fun (x5787 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5787)
             "requireInteraction")
    let (set_requireInteraction : 'tags this -> bool -> unit) =
      fun (x5789 : 'tags this) ->
        fun (x5790 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5789)
            "requireInteraction" (Ojs.bool_to_js x5790)
    let (get_silent : 'tags this -> bool) =
      fun (x5792 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5792) "silent")
    let (set_silent : 'tags this -> bool -> unit) =
      fun (x5794 : 'tags this) ->
        fun (x5795 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5794) "silent"
            (Ojs.bool_to_js x5795)
    let (get_tag : 'tags this -> string) =
      fun (x5797 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5797) "tag")
    let (set_tag : 'tags this -> string -> unit) =
      fun (x5799 : 'tags this) ->
        fun (x5800 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5799) "tag"
            (Ojs.string_to_js x5800)
    let (get_timestamp : 'tags this -> DOMTimeStamp.t) =
      fun (x5802 : 'tags this) ->
        DOMTimeStamp.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5802) "timestamp")
    let (set_timestamp : 'tags this -> DOMTimeStamp.t -> unit) =
      fun (x5804 : 'tags this) ->
        fun (x5805 : DOMTimeStamp.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5804) "timestamp"
            (DOMTimeStamp.t_to_js x5805)
    let (get_vibrate : 'tags this -> VibratePattern.t) =
      fun (x5807 : 'tags this) ->
        VibratePattern.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5807) "vibrate")
    let (set_vibrate : 'tags this -> VibratePattern.t -> unit) =
      fun (x5809 : 'tags this) ->
        fun (x5810 : VibratePattern.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5809) "vibrate"
            (VibratePattern.t_to_js x5810)
    let cast_from = Obj.magic
  end
module Notification =
  struct
    type t = [ `EventTarget  | `Notification ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5813 : Ojs.t) -> t_of_js x5813
    and t_0_to_js : t_0 -> Ojs.t = fun (x5812 : t) -> t_to_js x5812
    type tags = [ `EventTarget  | `Notification ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Notification ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5816 : Ojs.t) -> intf_of_js __tags_of_js x5816
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5814 : __tags intf) -> intf_to_js __tags_to_js x5814
    let (get_body : 'tags this -> string) =
      fun (x5818 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5818) "body")
    let (get_data : 'tags this -> any) =
      fun (x5820 : 'tags this) ->
        any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x5820) "data")
    let (get_dir : 'tags this -> NotificationDirection.t) =
      fun (x5822 : 'tags this) ->
        NotificationDirection.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5822) "dir")
    let (get_icon : 'tags this -> string) =
      fun (x5824 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5824) "icon")
    let (get_lang : 'tags this -> string) =
      fun (x5826 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5826) "lang")
    let (get_onclick : 'tags this -> (this:t -> ev:Event.t -> any) or_null) =
      fun (x5828 : 'tags this) ->
        or_null_of_js
          (fun (x5830 : Ojs.t) ->
             fun ~this:(x5831 : t) ->
               fun ~ev:(x5832 : Event.t) ->
                 any_of_js
                   (Ojs.apply x5830 [|(t_to_js x5831);(Event.t_to_js x5832)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5828) "onclick")
    let (set_onclick :
      'tags this -> (this:t -> ev:Event.t -> any) or_null -> unit) =
      fun (x5833 : 'tags this) ->
        fun (x5834 : (this:t -> ev:Event.t -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5833) "onclick"
            (or_null_to_js
               (fun (x5835 : this:t -> ev:Event.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x5836 : Ojs.t) ->
                       fun (x5837 : Ojs.t) ->
                         any_to_js
                           (x5835 ~this:(t_of_js x5836)
                              ~ev:(Event.t_of_js x5837)))) x5834)
    let (get_onclose : 'tags this -> (this:t -> ev:Event.t -> any) or_null) =
      fun (x5839 : 'tags this) ->
        or_null_of_js
          (fun (x5841 : Ojs.t) ->
             fun ~this:(x5842 : t) ->
               fun ~ev:(x5843 : Event.t) ->
                 any_of_js
                   (Ojs.apply x5841 [|(t_to_js x5842);(Event.t_to_js x5843)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5839) "onclose")
    let (set_onclose :
      'tags this -> (this:t -> ev:Event.t -> any) or_null -> unit) =
      fun (x5844 : 'tags this) ->
        fun (x5845 : (this:t -> ev:Event.t -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5844) "onclose"
            (or_null_to_js
               (fun (x5846 : this:t -> ev:Event.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x5847 : Ojs.t) ->
                       fun (x5848 : Ojs.t) ->
                         any_to_js
                           (x5846 ~this:(t_of_js x5847)
                              ~ev:(Event.t_of_js x5848)))) x5845)
    let (get_onerror : 'tags this -> (this:t -> ev:Event.t -> any) or_null) =
      fun (x5850 : 'tags this) ->
        or_null_of_js
          (fun (x5852 : Ojs.t) ->
             fun ~this:(x5853 : t) ->
               fun ~ev:(x5854 : Event.t) ->
                 any_of_js
                   (Ojs.apply x5852 [|(t_to_js x5853);(Event.t_to_js x5854)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5850) "onerror")
    let (set_onerror :
      'tags this -> (this:t -> ev:Event.t -> any) or_null -> unit) =
      fun (x5855 : 'tags this) ->
        fun (x5856 : (this:t -> ev:Event.t -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5855) "onerror"
            (or_null_to_js
               (fun (x5857 : this:t -> ev:Event.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x5858 : Ojs.t) ->
                       fun (x5859 : Ojs.t) ->
                         any_to_js
                           (x5857 ~this:(t_of_js x5858)
                              ~ev:(Event.t_of_js x5859)))) x5856)
    let (get_onshow : 'tags this -> (this:t -> ev:Event.t -> any) or_null) =
      fun (x5861 : 'tags this) ->
        or_null_of_js
          (fun (x5863 : Ojs.t) ->
             fun ~this:(x5864 : t) ->
               fun ~ev:(x5865 : Event.t) ->
                 any_of_js
                   (Ojs.apply x5863 [|(t_to_js x5864);(Event.t_to_js x5865)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5861) "onshow")
    let (set_onshow :
      'tags this -> (this:t -> ev:Event.t -> any) or_null -> unit) =
      fun (x5866 : 'tags this) ->
        fun (x5867 : (this:t -> ev:Event.t -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5866) "onshow"
            (or_null_to_js
               (fun (x5868 : this:t -> ev:Event.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x5869 : Ojs.t) ->
                       fun (x5870 : Ojs.t) ->
                         any_to_js
                           (x5868 ~this:(t_of_js x5869)
                              ~ev:(Event.t_of_js x5870)))) x5867)
    let (get_tag : 'tags this -> string) =
      fun (x5872 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5872) "tag")
    let (get_title : 'tags this -> string) =
      fun (x5874 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5874) "title")
    let (close : 'tags this -> unit) =
      fun (x5876 : 'tags this) ->
        ignore (Ojs.call (this_to_js Obj.magic x5876) "close" [||])
    let (addEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x5886 : 'tags this) ->
        fun ~type_:(x5878 : 'K) ->
          fun ~listener:(x5879 : this:t -> ev:any -> any) ->
            fun
              ?options:(x5880 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x5888 = this_to_js Obj.magic x5886 in
                   Ojs.call (Ojs.get_prop_ascii x5888 "addEventListener")
                     "apply"
                     [|x5888;((let x5881 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5881 "push" [|(Obj.magic x5878)|]);
                               ignore
                                 (Ojs.call x5881 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x5884 : Ojs.t) ->
                                            fun (x5885 : Ojs.t) ->
                                              any_to_js
                                                (x5879 ~this:(t_of_js x5884)
                                                   ~ev:(any_of_js x5885))))|]);
                               (match x5880 with
                                | Some x5882 ->
                                    ignore
                                      (Ojs.call x5881 "push"
                                         [|(or_boolean_to_js
                                              AddEventListenerOptions.t_to_js
                                              x5882)|])
                                | None -> ());
                               x5881))|])
    let (addEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x5895 : 'tags this) ->
        fun ~type_:(x5889 : string) ->
          fun ~listener:(x5890 : EventListenerOrEventListenerObject.t) ->
            fun
              ?options:(x5891 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x5897 = this_to_js Obj.magic x5895 in
                   Ojs.call (Ojs.get_prop_ascii x5897 "addEventListener")
                     "apply"
                     [|x5897;((let x5892 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5892 "push"
                                    [|(Ojs.string_to_js x5889)|]);
                               ignore
                                 (Ojs.call x5892 "push"
                                    [|(EventListenerOrEventListenerObject.t_to_js
                                         x5890)|]);
                               (match x5891 with
                                | Some x5893 ->
                                    ignore
                                      (Ojs.call x5892 "push"
                                         [|(or_boolean_to_js
                                              AddEventListenerOptions.t_to_js
                                              x5893)|])
                                | None -> ());
                               x5892))|])
    let (removeEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x5906 : 'tags this) ->
        fun ~type_:(x5898 : 'K) ->
          fun ~listener:(x5899 : this:t -> ev:any -> any) ->
            fun ?options:(x5900 : EventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x5908 = this_to_js Obj.magic x5906 in
                   Ojs.call (Ojs.get_prop_ascii x5908 "removeEventListener")
                     "apply"
                     [|x5908;((let x5901 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5901 "push" [|(Obj.magic x5898)|]);
                               ignore
                                 (Ojs.call x5901 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x5904 : Ojs.t) ->
                                            fun (x5905 : Ojs.t) ->
                                              any_to_js
                                                (x5899 ~this:(t_of_js x5904)
                                                   ~ev:(any_of_js x5905))))|]);
                               (match x5900 with
                                | Some x5902 ->
                                    ignore
                                      (Ojs.call x5901 "push"
                                         [|(or_boolean_to_js
                                              EventListenerOptions.t_to_js
                                              x5902)|])
                                | None -> ());
                               x5901))|])
    let (removeEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x5915 : 'tags this) ->
        fun ~type_:(x5909 : string) ->
          fun ~listener:(x5910 : EventListenerOrEventListenerObject.t) ->
            fun ?options:(x5911 : EventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x5917 = this_to_js Obj.magic x5915 in
                   Ojs.call (Ojs.get_prop_ascii x5917 "removeEventListener")
                     "apply"
                     [|x5917;((let x5912 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5912 "push"
                                    [|(Ojs.string_to_js x5909)|]);
                               ignore
                                 (Ojs.call x5912 "push"
                                    [|(EventListenerOrEventListenerObject.t_to_js
                                         x5910)|]);
                               (match x5911 with
                                | Some x5913 ->
                                    ignore
                                      (Ojs.call x5912 "push"
                                         [|(or_boolean_to_js
                                              EventListenerOptions.t_to_js
                                              x5913)|])
                                | None -> ());
                               x5912))|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Notification")
             "prototype")
    let (create :
      title:string -> ?options:NotificationOptions.t -> unit -> t) =
      fun ~title:(x5918 : string) ->
        fun ?options:(x5919 : NotificationOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Notification")
                 (let x5920 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x5920 "push" [|(Ojs.string_to_js x5918)|]);
                  (match x5919 with
                   | Some x5921 ->
                       ignore
                         (Ojs.call x5920 "push"
                            [|(NotificationOptions.t_to_js x5921)|])
                   | None -> ());
                  x5920))
    let (permission : unit -> NotificationPermission.t) =
      fun () ->
        NotificationPermission.t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Notification")
             "permission")
  end
module NotificationEventInit =
  struct
    type t =
      [ `EventInit  | `ExtendableEventInit  | `NotificationEventInit ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5923 : Ojs.t) -> t_of_js x5923
    and t_0_to_js : t_0 -> Ojs.t = fun (x5922 : t) -> t_to_js x5922
    type tags =
      [ `EventInit  | `ExtendableEventInit  | `NotificationEventInit ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `NotificationEventInit ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5926 : Ojs.t) -> intf_of_js __tags_of_js x5926
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5924 : __tags intf) -> intf_to_js __tags_to_js x5924
    let (get_action : 'tags this -> string) =
      fun (x5928 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5928) "action")
    let (set_action : 'tags this -> string -> unit) =
      fun (x5930 : 'tags this) ->
        fun (x5931 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5930) "action"
            (Ojs.string_to_js x5931)
    let (get_notification : 'tags this -> Notification.t) =
      fun (x5933 : 'tags this) ->
        Notification.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5933) "notification")
    let (set_notification : 'tags this -> Notification.t -> unit) =
      fun (x5935 : 'tags this) ->
        fun (x5936 : Notification.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5935) "notification"
            (Notification.t_to_js x5936)
    let cast_from = Obj.magic
  end
module NotificationEvent =
  struct
    type t = [ `Event  | `ExtendableEvent  | `NotificationEvent ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5939 : Ojs.t) -> t_of_js x5939
    and t_0_to_js : t_0 -> Ojs.t = fun (x5938 : t) -> t_to_js x5938
    type tags = [ `Event  | `ExtendableEvent  | `NotificationEvent ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `NotificationEvent ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5942 : Ojs.t) -> intf_of_js __tags_of_js x5942
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5940 : __tags intf) -> intf_to_js __tags_to_js x5940
    let (get_action : 'tags this -> string) =
      fun (x5944 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5944) "action")
    let (get_notification : 'tags this -> Notification.t) =
      fun (x5946 : 'tags this) ->
        Notification.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5946) "notification")
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "NotificationEvent") "prototype")
    let (create : type_:string -> eventInitDict:NotificationEventInit.t -> t)
      =
      fun ~type_:(x5948 : string) ->
        fun ~eventInitDict:(x5949 : NotificationEventInit.t) ->
          t_of_js
            (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "NotificationEvent")
               [|(Ojs.string_to_js x5948);(NotificationEventInit.t_to_js
                                             x5949)|])
  end
module FetchEventInit =
  struct
    type t = [ `EventInit  | `ExtendableEventInit  | `FetchEventInit ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5951 : Ojs.t) -> t_of_js x5951
    and t_0_to_js : t_0 -> Ojs.t = fun (x5950 : t) -> t_to_js x5950
    type tags = [ `EventInit  | `ExtendableEventInit  | `FetchEventInit ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `FetchEventInit ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5954 : Ojs.t) -> intf_of_js __tags_of_js x5954
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5952 : __tags intf) -> intf_to_js __tags_to_js x5952
    let (get_clientId : 'tags this -> string) =
      fun (x5956 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5956) "clientId")
    let (set_clientId : 'tags this -> string -> unit) =
      fun (x5958 : 'tags this) ->
        fun (x5959 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5958) "clientId"
            (Ojs.string_to_js x5959)
    let (get_handled : 'tags this -> never or_undefined Promise.t_1) =
      fun (x5961 : 'tags this) ->
        Promise.t_1_of_js
          (fun (x5963 : Ojs.t) -> or_undefined_of_js never_of_js x5963)
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5961) "handled")
    let (set_handled : 'tags this -> never or_undefined Promise.t_1 -> unit)
      =
      fun (x5965 : 'tags this) ->
        fun (x5966 : never or_undefined Promise.t_1) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5965) "handled"
            (Promise.t_1_to_js
               (fun (x5967 : never or_undefined) ->
                  or_undefined_to_js never_to_js x5967) x5966)
    let (get_preloadResponse : 'tags this -> any Promise.t_1) =
      fun (x5970 : 'tags this) ->
        Promise.t_1_of_js any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5970) "preloadResponse")
    let (set_preloadResponse : 'tags this -> any Promise.t_1 -> unit) =
      fun (x5973 : 'tags this) ->
        fun (x5974 : any Promise.t_1) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5973) "preloadResponse"
            (Promise.t_1_to_js any_to_js x5974)
    let (get_replacesClientId : 'tags this -> string) =
      fun (x5977 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5977) "replacesClientId")
    let (set_replacesClientId : 'tags this -> string -> unit) =
      fun (x5979 : 'tags this) ->
        fun (x5980 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5979) "replacesClientId"
            (Ojs.string_to_js x5980)
    let (get_request : 'tags this -> Request.t) =
      fun (x5982 : 'tags this) ->
        Request.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5982) "request")
    let (set_request : 'tags this -> Request.t -> unit) =
      fun (x5984 : 'tags this) ->
        fun (x5985 : Request.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5984) "request"
            (Request.t_to_js x5985)
    let (get_resultingClientId : 'tags this -> string) =
      fun (x5987 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5987)
             "resultingClientId")
    let (set_resultingClientId : 'tags this -> string -> unit) =
      fun (x5989 : 'tags this) ->
        fun (x5990 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5989) "resultingClientId"
            (Ojs.string_to_js x5990)
    let cast_from = Obj.magic
  end
module FetchEvent =
  struct
    type t = [ `Event  | `ExtendableEvent  | `FetchEvent ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5993 : Ojs.t) -> t_of_js x5993
    and t_0_to_js : t_0 -> Ojs.t = fun (x5992 : t) -> t_to_js x5992
    type tags = [ `Event  | `ExtendableEvent  | `FetchEvent ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `FetchEvent ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5996 : Ojs.t) -> intf_of_js __tags_of_js x5996
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5994 : __tags intf) -> intf_to_js __tags_to_js x5994
    let (get_clientId : 'tags this -> string) =
      fun (x5998 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5998) "clientId")
    let (get_handled : 'tags this -> never or_undefined Promise.t_1) =
      fun (x6000 : 'tags this) ->
        Promise.t_1_of_js
          (fun (x6002 : Ojs.t) -> or_undefined_of_js never_of_js x6002)
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6000) "handled")
    let (get_request : 'tags this -> Request.t) =
      fun (x6004 : 'tags this) ->
        Request.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6004) "request")
    let (get_resultingClientId : 'tags this -> string) =
      fun (x6006 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6006)
             "resultingClientId")
    let (respondWith : 'tags this -> r:Response.t -> unit) =
      fun (x6009 : 'tags this) ->
        fun ~r:(x6008 : Response.t) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x6009) "respondWith"
               [|(Response.t_to_js x6008)|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "FetchEvent")
             "prototype")
    let (create : type_:string -> eventInitDict:FetchEventInit.t -> t) =
      fun ~type_:(x6011 : string) ->
        fun ~eventInitDict:(x6012 : FetchEventInit.t) ->
          t_of_js
            (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FetchEvent")
               [|(Ojs.string_to_js x6011);(FetchEventInit.t_to_js x6012)|])
  end
module FrameType =
  struct
    type t =
      [ `L_s120_nested  | `L_s128_none  | `L_s192_top_level 
      | `L_s42_auxiliary ]
    let rec t_of_js : Ojs.t -> t =
      fun (x6014 : Ojs.t) ->
        let x6015 = x6014 in
        match Ojs.string_of_js x6015 with
        | "nested" -> `L_s120_nested
        | "none" -> `L_s128_none
        | "top-level" -> `L_s192_top_level
        | "auxiliary" -> `L_s42_auxiliary
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun
        (x6013 :
          [ `L_s120_nested  | `L_s128_none  | `L_s192_top_level 
          | `L_s42_auxiliary ])
        ->
        match x6013 with
        | `L_s120_nested -> Ojs.string_to_js "nested"
        | `L_s128_none -> Ojs.string_to_js "none"
        | `L_s192_top_level -> Ojs.string_to_js "top-level"
        | `L_s42_auxiliary -> Ojs.string_to_js "auxiliary"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6017 : Ojs.t) -> t_of_js x6017
    and t_0_to_js : t_0 -> Ojs.t = fun (x6016 : t) -> t_to_js x6016
  end
module ClientTypes =
  struct
    type t =
      [ `L_s176_sharedworker  | `L_s208_window  | `L_s209_worker 
      | `L_s35_all ]
    let rec t_of_js : Ojs.t -> t =
      fun (x6019 : Ojs.t) ->
        let x6020 = x6019 in
        match Ojs.string_of_js x6020 with
        | "sharedworker" -> `L_s176_sharedworker
        | "window" -> `L_s208_window
        | "worker" -> `L_s209_worker
        | "all" -> `L_s35_all
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun
        (x6018 :
          [ `L_s176_sharedworker  | `L_s208_window  | `L_s209_worker 
          | `L_s35_all ])
        ->
        match x6018 with
        | `L_s176_sharedworker -> Ojs.string_to_js "sharedworker"
        | `L_s208_window -> Ojs.string_to_js "window"
        | `L_s209_worker -> Ojs.string_to_js "worker"
        | `L_s35_all -> Ojs.string_to_js "all"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6022 : Ojs.t) -> t_of_js x6022
    and t_0_to_js : t_0 -> Ojs.t = fun (x6021 : t) -> t_to_js x6021
  end
module Client =
  struct
    type t = [ `Client ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6024 : Ojs.t) -> t_of_js x6024
    and t_0_to_js : t_0 -> Ojs.t = fun (x6023 : t) -> t_to_js x6023
    type tags = [ `Client ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Client ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6027 : Ojs.t) -> intf_of_js __tags_of_js x6027
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6025 : __tags intf) -> intf_to_js __tags_to_js x6025
    let (get_frameType : 'tags this -> FrameType.t) =
      fun (x6029 : 'tags this) ->
        FrameType.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6029) "frameType")
    let (get_id : 'tags this -> string) =
      fun (x6031 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6031) "id")
    let (get_type : 'tags this -> ClientTypes.t) =
      fun (x6033 : 'tags this) ->
        ClientTypes.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6033) "type")
    let (get_url : 'tags this -> string) =
      fun (x6035 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6035) "url")
    let (postMessage :
      'tags this -> message:any -> transfer:Transferable.t list -> unit) =
      fun (x6040 : 'tags this) ->
        fun ~message:(x6037 : any) ->
          fun ~transfer:(x6038 : Transferable.t list) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x6040) "postMessage"
                 [|(any_to_js x6037);(Ojs.list_to_js Transferable.t_to_js
                                        x6038)|])
    let (postMessage' :
      'tags this ->
        message:any -> ?options:StructuredSerializeOptions.t -> unit -> unit)
      =
      fun (x6046 : 'tags this) ->
        fun ~message:(x6042 : any) ->
          fun ?options:(x6043 : StructuredSerializeOptions.t option) ->
            fun () ->
              ignore
                (let x6048 = this_to_js Obj.magic x6046 in
                 Ojs.call (Ojs.get_prop_ascii x6048 "postMessage") "apply"
                   [|x6048;((let x6044 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6044 "push" [|(any_to_js x6042)|]);
                             (match x6043 with
                              | Some x6045 ->
                                  ignore
                                    (Ojs.call x6044 "push"
                                       [|(StructuredSerializeOptions.t_to_js
                                            x6045)|])
                              | None -> ());
                             x6044))|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Client")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Client") [||])
  end
module ExtendableMessageEventInit =
  struct
    type t =
      [ `EventInit  | `ExtendableEventInit  | `ExtendableMessageEventInit ]
        intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6050 : Ojs.t) -> t_of_js x6050
    and t_0_to_js : t_0 -> Ojs.t = fun (x6049 : t) -> t_to_js x6049
    type tags =
      [ `EventInit  | `ExtendableEventInit  | `ExtendableMessageEventInit ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `ExtendableMessageEventInit ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6053 : Ojs.t) -> intf_of_js __tags_of_js x6053
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6051 : __tags intf) -> intf_to_js __tags_to_js x6051
    let (get_data : 'tags this -> any) =
      fun (x6055 : 'tags this) ->
        any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x6055) "data")
    let (set_data : 'tags this -> any -> unit) =
      fun (x6057 : 'tags this) ->
        fun (x6058 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6057) "data"
            (any_to_js x6058)
    let (get_lastEventId : 'tags this -> string) =
      fun (x6060 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6060) "lastEventId")
    let (set_lastEventId : 'tags this -> string -> unit) =
      fun (x6062 : 'tags this) ->
        fun (x6063 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6062) "lastEventId"
            (Ojs.string_to_js x6063)
    let (get_origin : 'tags this -> string) =
      fun (x6065 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6065) "origin")
    let (set_origin : 'tags this -> string -> unit) =
      fun (x6067 : 'tags this) ->
        fun (x6068 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6067) "origin"
            (Ojs.string_to_js x6068)
    let (get_ports : 'tags this -> MessagePort.t list) =
      fun (x6070 : 'tags this) ->
        Ojs.list_of_js MessagePort.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6070) "ports")
    let (set_ports : 'tags this -> MessagePort.t list -> unit) =
      fun (x6073 : 'tags this) ->
        fun (x6074 : MessagePort.t list) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6073) "ports"
            (Ojs.list_to_js MessagePort.t_to_js x6074)
    let (get_source :
      'tags this ->
        (([ `U_s42_auxiliary of Client.t  | `U_s120_nested of Client.t 
          | `U_s128_none of Client.t  | `U_s192_top_level of Client.t ],
           [ `U_s33_activated of ServiceWorker.t 
           | `U_s34_activating of ServiceWorker.t 
           | `U_s94_installed of ServiceWorker.t 
           | `U_s95_installing of ServiceWorker.t 
           | `U_s146_parsed of ServiceWorker.t 
           | `U_s166_redundant of ServiceWorker.t ]) union2,
          MessagePort.t) or_ or_null)
      =
      fun (x6077 : 'tags this) ->
        or_null_of_js
          (fun (x6079 : Ojs.t) ->
             or__of_js
               (fun (x6080 : Ojs.t) ->
                  union2_of_js
                    (fun (x6081 : Ojs.t) ->
                       let x6082 = x6081 in
                       match Ojs.string_of_js
                               (Ojs.get_prop_ascii x6082 "frameType")
                       with
                       | "auxiliary" ->
                           `U_s42_auxiliary (Client.t_of_js x6082)
                       | "nested" -> `U_s120_nested (Client.t_of_js x6082)
                       | "none" -> `U_s128_none (Client.t_of_js x6082)
                       | "top-level" ->
                           `U_s192_top_level (Client.t_of_js x6082)
                       | _ -> assert false)
                    (fun (x6083 : Ojs.t) ->
                       let x6084 = x6083 in
                       match Ojs.string_of_js
                               (Ojs.get_prop_ascii x6084 "state")
                       with
                       | "activated" ->
                           `U_s33_activated (ServiceWorker.t_of_js x6084)
                       | "activating" ->
                           `U_s34_activating (ServiceWorker.t_of_js x6084)
                       | "installed" ->
                           `U_s94_installed (ServiceWorker.t_of_js x6084)
                       | "installing" ->
                           `U_s95_installing (ServiceWorker.t_of_js x6084)
                       | "parsed" ->
                           `U_s146_parsed (ServiceWorker.t_of_js x6084)
                       | "redundant" ->
                           `U_s166_redundant (ServiceWorker.t_of_js x6084)
                       | _ -> assert false) x6080) MessagePort.t_of_js x6079)
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6077) "source")
    let (set_source :
      'tags this ->
        (([ `U_s42_auxiliary of Client.t  | `U_s120_nested of Client.t 
          | `U_s128_none of Client.t  | `U_s192_top_level of Client.t ],
           [ `U_s33_activated of ServiceWorker.t 
           | `U_s34_activating of ServiceWorker.t 
           | `U_s94_installed of ServiceWorker.t 
           | `U_s95_installing of ServiceWorker.t 
           | `U_s146_parsed of ServiceWorker.t 
           | `U_s166_redundant of ServiceWorker.t ]) union2,
          MessagePort.t) or_ or_null -> unit)
      =
      fun (x6086 : 'tags this) ->
        fun
          (x6087 :
            (([ `U_s42_auxiliary of Client.t  | `U_s120_nested of Client.t 
              | `U_s128_none of Client.t  | `U_s192_top_level of Client.t ],
               [ `U_s33_activated of ServiceWorker.t 
               | `U_s34_activating of ServiceWorker.t 
               | `U_s94_installed of ServiceWorker.t 
               | `U_s95_installing of ServiceWorker.t 
               | `U_s146_parsed of ServiceWorker.t 
               | `U_s166_redundant of ServiceWorker.t ]) union2,
              MessagePort.t) or_ or_null)
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6086) "source"
            (or_null_to_js
               (fun
                  (x6088 :
                    (([ `U_s42_auxiliary of Client.t 
                      | `U_s120_nested of Client.t 
                      | `U_s128_none of Client.t 
                      | `U_s192_top_level of Client.t ],
                       [ `U_s33_activated of ServiceWorker.t 
                       | `U_s34_activating of ServiceWorker.t 
                       | `U_s94_installed of ServiceWorker.t 
                       | `U_s95_installing of ServiceWorker.t 
                       | `U_s146_parsed of ServiceWorker.t 
                       | `U_s166_redundant of ServiceWorker.t ]) union2,
                      MessagePort.t) or_)
                  ->
                  or__to_js
                    (fun
                       (x6089 :
                         ([ `U_s42_auxiliary of Client.t 
                          | `U_s120_nested of Client.t 
                          | `U_s128_none of Client.t 
                          | `U_s192_top_level of Client.t ],
                           [ `U_s33_activated of ServiceWorker.t 
                           | `U_s34_activating of ServiceWorker.t 
                           | `U_s94_installed of ServiceWorker.t 
                           | `U_s95_installing of ServiceWorker.t 
                           | `U_s146_parsed of ServiceWorker.t 
                           | `U_s166_redundant of ServiceWorker.t ]) union2)
                       ->
                       union2_to_js
                         (fun
                            (x6090 :
                              [ `U_s42_auxiliary of Client.t 
                              | `U_s120_nested of Client.t 
                              | `U_s128_none of Client.t 
                              | `U_s192_top_level of Client.t ])
                            ->
                            match x6090 with
                            | `U_s42_auxiliary x6091 -> Client.t_to_js x6091
                            | `U_s120_nested x6092 -> Client.t_to_js x6092
                            | `U_s128_none x6093 -> Client.t_to_js x6093
                            | `U_s192_top_level x6094 -> Client.t_to_js x6094)
                         (fun
                            (x6095 :
                              [ `U_s33_activated of ServiceWorker.t 
                              | `U_s34_activating of ServiceWorker.t 
                              | `U_s94_installed of ServiceWorker.t 
                              | `U_s95_installing of ServiceWorker.t 
                              | `U_s146_parsed of ServiceWorker.t 
                              | `U_s166_redundant of ServiceWorker.t ])
                            ->
                            match x6095 with
                            | `U_s33_activated x6096 ->
                                ServiceWorker.t_to_js x6096
                            | `U_s34_activating x6097 ->
                                ServiceWorker.t_to_js x6097
                            | `U_s94_installed x6098 ->
                                ServiceWorker.t_to_js x6098
                            | `U_s95_installing x6099 ->
                                ServiceWorker.t_to_js x6099
                            | `U_s146_parsed x6100 ->
                                ServiceWorker.t_to_js x6100
                            | `U_s166_redundant x6101 ->
                                ServiceWorker.t_to_js x6101) x6089)
                    MessagePort.t_to_js x6088) x6087)
    let cast_from = Obj.magic
  end
module ExtendableMessageEvent =
  struct
    type t = [ `Event  | `ExtendableEvent  | `ExtendableMessageEvent ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6105 : Ojs.t) -> t_of_js x6105
    and t_0_to_js : t_0 -> Ojs.t = fun (x6104 : t) -> t_to_js x6104
    type tags = [ `Event  | `ExtendableEvent  | `ExtendableMessageEvent ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `ExtendableMessageEvent ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6108 : Ojs.t) -> intf_of_js __tags_of_js x6108
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6106 : __tags intf) -> intf_to_js __tags_to_js x6106
    let (get_data : 'tags this -> any) =
      fun (x6110 : 'tags this) ->
        any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x6110) "data")
    let (get_lastEventId : 'tags this -> string) =
      fun (x6112 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6112) "lastEventId")
    let (get_origin : 'tags this -> string) =
      fun (x6114 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6114) "origin")
    let (get_ports : 'tags this -> MessagePort.t list) =
      fun (x6116 : 'tags this) ->
        Ojs.list_of_js MessagePort.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6116) "ports")
    let (get_source :
      'tags this ->
        (([ `U_s42_auxiliary of Client.t  | `U_s120_nested of Client.t 
          | `U_s128_none of Client.t  | `U_s192_top_level of Client.t ],
           [ `U_s33_activated of ServiceWorker.t 
           | `U_s34_activating of ServiceWorker.t 
           | `U_s94_installed of ServiceWorker.t 
           | `U_s95_installing of ServiceWorker.t 
           | `U_s146_parsed of ServiceWorker.t 
           | `U_s166_redundant of ServiceWorker.t ]) union2,
          MessagePort.t) or_ or_null)
      =
      fun (x6119 : 'tags this) ->
        or_null_of_js
          (fun (x6121 : Ojs.t) ->
             or__of_js
               (fun (x6122 : Ojs.t) ->
                  union2_of_js
                    (fun (x6123 : Ojs.t) ->
                       let x6124 = x6123 in
                       match Ojs.string_of_js
                               (Ojs.get_prop_ascii x6124 "frameType")
                       with
                       | "auxiliary" ->
                           `U_s42_auxiliary (Client.t_of_js x6124)
                       | "nested" -> `U_s120_nested (Client.t_of_js x6124)
                       | "none" -> `U_s128_none (Client.t_of_js x6124)
                       | "top-level" ->
                           `U_s192_top_level (Client.t_of_js x6124)
                       | _ -> assert false)
                    (fun (x6125 : Ojs.t) ->
                       let x6126 = x6125 in
                       match Ojs.string_of_js
                               (Ojs.get_prop_ascii x6126 "state")
                       with
                       | "activated" ->
                           `U_s33_activated (ServiceWorker.t_of_js x6126)
                       | "activating" ->
                           `U_s34_activating (ServiceWorker.t_of_js x6126)
                       | "installed" ->
                           `U_s94_installed (ServiceWorker.t_of_js x6126)
                       | "installing" ->
                           `U_s95_installing (ServiceWorker.t_of_js x6126)
                       | "parsed" ->
                           `U_s146_parsed (ServiceWorker.t_of_js x6126)
                       | "redundant" ->
                           `U_s166_redundant (ServiceWorker.t_of_js x6126)
                       | _ -> assert false) x6122) MessagePort.t_of_js x6121)
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6119) "source")
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "ExtendableMessageEvent")
             "prototype")
    let (create :
      type_:string ->
        ?eventInitDict:ExtendableMessageEventInit.t -> unit -> t)
      =
      fun ~type_:(x6128 : string) ->
        fun ?eventInitDict:(x6129 : ExtendableMessageEventInit.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "ExtendableMessageEvent")
                 (let x6130 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x6130 "push" [|(Ojs.string_to_js x6128)|]);
                  (match x6129 with
                   | Some x6131 ->
                       ignore
                         (Ojs.call x6130 "push"
                            [|(ExtendableMessageEventInit.t_to_js x6131)|])
                   | None -> ());
                  x6130))
  end
module ServiceWorkerGlobalScopeEventMap =
  struct
    type t =
      [ `ServiceWorkerGlobalScopeEventMap  | `WorkerGlobalScopeEventMap ]
        intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6133 : Ojs.t) -> t_of_js x6133
    and t_0_to_js : t_0 -> Ojs.t = fun (x6132 : t) -> t_to_js x6132
    type tags =
      [ `ServiceWorkerGlobalScopeEventMap  | `WorkerGlobalScopeEventMap ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `ServiceWorkerGlobalScopeEventMap ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6136 : Ojs.t) -> intf_of_js __tags_of_js x6136
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6134 : __tags intf) -> intf_to_js __tags_to_js x6134
    let (get_activate : 'tags this -> ExtendableEvent.t) =
      fun (x6138 : 'tags this) ->
        ExtendableEvent.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6138) "activate")
    let (set_activate : 'tags this -> ExtendableEvent.t -> unit) =
      fun (x6140 : 'tags this) ->
        fun (x6141 : ExtendableEvent.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6140) "activate"
            (ExtendableEvent.t_to_js x6141)
    let (get_fetch : 'tags this -> FetchEvent.t) =
      fun (x6143 : 'tags this) ->
        FetchEvent.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6143) "fetch")
    let (set_fetch : 'tags this -> FetchEvent.t -> unit) =
      fun (x6145 : 'tags this) ->
        fun (x6146 : FetchEvent.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6145) "fetch"
            (FetchEvent.t_to_js x6146)
    let (get_install : 'tags this -> ExtendableEvent.t) =
      fun (x6148 : 'tags this) ->
        ExtendableEvent.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6148) "install")
    let (set_install : 'tags this -> ExtendableEvent.t -> unit) =
      fun (x6150 : 'tags this) ->
        fun (x6151 : ExtendableEvent.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6150) "install"
            (ExtendableEvent.t_to_js x6151)
    let (get_message : 'tags this -> ExtendableMessageEvent.t) =
      fun (x6153 : 'tags this) ->
        ExtendableMessageEvent.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6153) "message")
    let (set_message : 'tags this -> ExtendableMessageEvent.t -> unit) =
      fun (x6155 : 'tags this) ->
        fun (x6156 : ExtendableMessageEvent.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6155) "message"
            (ExtendableMessageEvent.t_to_js x6156)
    let (get_messageerror : 'tags this -> MessageEvent.t_0) =
      fun (x6158 : 'tags this) ->
        MessageEvent.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6158) "messageerror")
    let (set_messageerror : 'tags this -> MessageEvent.t_0 -> unit) =
      fun (x6160 : 'tags this) ->
        fun (x6161 : MessageEvent.t_0) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6160) "messageerror"
            (MessageEvent.t_0_to_js x6161)
    let (get_notificationclick : 'tags this -> NotificationEvent.t) =
      fun (x6163 : 'tags this) ->
        NotificationEvent.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6163)
             "notificationclick")
    let (set_notificationclick : 'tags this -> NotificationEvent.t -> unit) =
      fun (x6165 : 'tags this) ->
        fun (x6166 : NotificationEvent.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6165) "notificationclick"
            (NotificationEvent.t_to_js x6166)
    let (get_notificationclose : 'tags this -> NotificationEvent.t) =
      fun (x6168 : 'tags this) ->
        NotificationEvent.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6168)
             "notificationclose")
    let (set_notificationclose : 'tags this -> NotificationEvent.t -> unit) =
      fun (x6170 : 'tags this) ->
        fun (x6171 : NotificationEvent.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6170) "notificationclose"
            (NotificationEvent.t_to_js x6171)
    let (get_push : 'tags this -> PushEvent.t) =
      fun (x6173 : 'tags this) ->
        PushEvent.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6173) "push")
    let (set_push : 'tags this -> PushEvent.t -> unit) =
      fun (x6175 : 'tags this) ->
        fun (x6176 : PushEvent.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6175) "push"
            (PushEvent.t_to_js x6176)
    let cast_from = Obj.magic
  end
module ServiceWorkerEventMap =
  struct
    type t = [ `AbstractWorkerEventMap  | `ServiceWorkerEventMap ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6179 : Ojs.t) -> t_of_js x6179
    and t_0_to_js : t_0 -> Ojs.t = fun (x6178 : t) -> t_to_js x6178
    type tags = [ `AbstractWorkerEventMap  | `ServiceWorkerEventMap ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `ServiceWorkerEventMap ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6182 : Ojs.t) -> intf_of_js __tags_of_js x6182
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6180 : __tags intf) -> intf_to_js __tags_to_js x6180
    let (get_statechange : 'tags this -> Event.t) =
      fun (x6184 : 'tags this) ->
        Event.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6184) "statechange")
    let (set_statechange : 'tags this -> Event.t -> unit) =
      fun (x6186 : 'tags this) ->
        fun (x6187 : Event.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6186) "statechange"
            (Event.t_to_js x6187)
    let cast_from = Obj.magic
  end
module ServiceWorkerContainerEventMap =
  struct
    type t = [ `ServiceWorkerContainerEventMap ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6190 : Ojs.t) -> t_of_js x6190
    and t_0_to_js : t_0 -> Ojs.t = fun (x6189 : t) -> t_to_js x6189
    type tags = [ `ServiceWorkerContainerEventMap ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `ServiceWorkerContainerEventMap ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6193 : Ojs.t) -> intf_of_js __tags_of_js x6193
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6191 : __tags intf) -> intf_to_js __tags_to_js x6191
    let (get_controllerchange : 'tags this -> Event.t) =
      fun (x6195 : 'tags this) ->
        Event.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6195) "controllerchange")
    let (set_controllerchange : 'tags this -> Event.t -> unit) =
      fun (x6197 : 'tags this) ->
        fun (x6198 : Event.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6197) "controllerchange"
            (Event.t_to_js x6198)
    let (get_message : 'tags this -> MessageEvent.t_0) =
      fun (x6200 : 'tags this) ->
        MessageEvent.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6200) "message")
    let (set_message : 'tags this -> MessageEvent.t_0 -> unit) =
      fun (x6202 : 'tags this) ->
        fun (x6203 : MessageEvent.t_0) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6202) "message"
            (MessageEvent.t_0_to_js x6203)
    let (get_messageerror : 'tags this -> MessageEvent.t_0) =
      fun (x6205 : 'tags this) ->
        MessageEvent.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6205) "messageerror")
    let (set_messageerror : 'tags this -> MessageEvent.t_0 -> unit) =
      fun (x6207 : 'tags this) ->
        fun (x6208 : MessageEvent.t_0) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6207) "messageerror"
            (MessageEvent.t_0_to_js x6208)
    let cast_from = Obj.magic
  end
module ReadableStreamReader =
  struct
    type 'T t = 'T ReadableStreamDefaultReader.t
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x6212 : Ojs.t) ->
          ReadableStreamDefaultReader.t_of_js __T_of_js x6212
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x6210 : __T ReadableStreamDefaultReader.t) ->
          ReadableStreamDefaultReader.t_to_js __T_to_js x6210
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x6216 : Ojs.t) -> t_of_js __T_of_js x6216
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x6214 : __T t) -> t_to_js __T_to_js x6214
  end
module PermissionStatusEventMap =
  struct
    type t = [ `PermissionStatusEventMap ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6219 : Ojs.t) -> t_of_js x6219
    and t_0_to_js : t_0 -> Ojs.t = fun (x6218 : t) -> t_to_js x6218
    type tags = [ `PermissionStatusEventMap ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `PermissionStatusEventMap ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6222 : Ojs.t) -> intf_of_js __tags_of_js x6222
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6220 : __tags intf) -> intf_to_js __tags_to_js x6220
    let (get_change : 'tags this -> Event.t) =
      fun (x6224 : 'tags this) ->
        Event.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6224) "change")
    let (set_change : 'tags this -> Event.t -> unit) =
      fun (x6226 : 'tags this) ->
        fun (x6227 : Event.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6226) "change"
            (Event.t_to_js x6227)
    let cast_from = Obj.magic
  end
module PerformanceEventMap =
  struct
    type t = [ `PerformanceEventMap ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6230 : Ojs.t) -> t_of_js x6230
    and t_0_to_js : t_0 -> Ojs.t = fun (x6229 : t) -> t_to_js x6229
    type tags = [ `PerformanceEventMap ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `PerformanceEventMap ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6233 : Ojs.t) -> intf_of_js __tags_of_js x6233
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6231 : __tags intf) -> intf_to_js __tags_to_js x6231
    let (get_resourcetimingbufferfull : 'tags this -> Event.t) =
      fun (x6235 : 'tags this) ->
        Event.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6235)
             "resourcetimingbufferfull")
    let (set_resourcetimingbufferfull : 'tags this -> Event.t -> unit) =
      fun (x6237 : 'tags this) ->
        fun (x6238 : Event.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6237)
            "resourcetimingbufferfull" (Event.t_to_js x6238)
    let cast_from = Obj.magic
  end
module OnErrorEventHandlerNonNull =
  struct
    type t = [ `OnErrorEventHandlerNonNull ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6241 : Ojs.t) -> t_of_js x6241
    and t_0_to_js : t_0 -> Ojs.t = fun (x6240 : t) -> t_to_js x6240
    type tags = [ `OnErrorEventHandlerNonNull ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `OnErrorEventHandlerNonNull ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6244 : Ojs.t) -> intf_of_js __tags_of_js x6244
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6242 : __tags intf) -> intf_to_js __tags_to_js x6242
    let (apply :
      'tags this ->
        event:Event.t or_string ->
          ?source:string ->
            ?lineno:float -> ?colno:float -> ?error:Error.t_0 -> unit -> any)
      =
      fun (x6257 : 'tags this) ->
        fun ~event:(x6246 : Event.t or_string) ->
          fun ?source:(x6247 : string option) ->
            fun ?lineno:(x6248 : float option) ->
              fun ?colno:(x6249 : float option) ->
                fun ?error:(x6250 : Error.t_0 option) ->
                  fun () ->
                    any_of_js
                      (Ojs.call (this_to_js Obj.magic x6257) "apply"
                         [|Ojs.null;((let x6251 =
                                        Ojs.new_obj
                                          (Ojs.get_prop_ascii Ojs.global
                                             "Array") [||] in
                                      ignore
                                        (Ojs.call x6251 "push"
                                           [|(or_string_to_js Event.t_to_js
                                                x6246)|]);
                                      (match x6247 with
                                       | Some x6255 ->
                                           ignore
                                             (Ojs.call x6251 "push"
                                                [|(Ojs.string_to_js x6255)|])
                                       | None -> ());
                                      (match x6248 with
                                       | Some x6254 ->
                                           ignore
                                             (Ojs.call x6251 "push"
                                                [|(Ojs.float_to_js x6254)|])
                                       | None -> ());
                                      (match x6249 with
                                       | Some x6253 ->
                                           ignore
                                             (Ojs.call x6251 "push"
                                                [|(Ojs.float_to_js x6253)|])
                                       | None -> ());
                                      (match x6250 with
                                       | Some x6252 ->
                                           ignore
                                             (Ojs.call x6251 "push"
                                                [|(Error.t_0_to_js x6252)|])
                                       | None -> ());
                                      x6251))|])
    let cast_from = Obj.magic
  end
module OnErrorEventHandler =
  struct
    type t = OnErrorEventHandlerNonNull.t or_null
    let rec t_of_js : Ojs.t -> t =
      fun (x6261 : Ojs.t) ->
        or_null_of_js OnErrorEventHandlerNonNull.t_of_js x6261
    and t_to_js : t -> Ojs.t =
      fun (x6259 : OnErrorEventHandlerNonNull.t or_null) ->
        or_null_to_js OnErrorEventHandlerNonNull.t_to_js x6259
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6264 : Ojs.t) -> t_of_js x6264
    and t_0_to_js : t_0 -> Ojs.t = fun (x6263 : t) -> t_to_js x6263
  end
module OES_fbo_render_mipmap =
  struct
    type t = [ `OES_fbo_render_mipmap ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6266 : Ojs.t) -> t_of_js x6266
    and t_0_to_js : t_0 -> Ojs.t = fun (x6265 : t) -> t_to_js x6265
    type tags = [ `OES_fbo_render_mipmap ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `OES_fbo_render_mipmap ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6269 : Ojs.t) -> intf_of_js __tags_of_js x6269
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6267 : __tags intf) -> intf_to_js __tags_to_js x6267
    let cast_from = Obj.magic
  end
module NotificationEventMap =
  struct
    type t = [ `NotificationEventMap ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6272 : Ojs.t) -> t_of_js x6272
    and t_0_to_js : t_0 -> Ojs.t = fun (x6271 : t) -> t_to_js x6271
    type tags = [ `NotificationEventMap ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `NotificationEventMap ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6275 : Ojs.t) -> intf_of_js __tags_of_js x6275
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6273 : __tags intf) -> intf_to_js __tags_to_js x6273
    let (get_click : 'tags this -> Event.t) =
      fun (x6277 : 'tags this) ->
        Event.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6277) "click")
    let (set_click : 'tags this -> Event.t -> unit) =
      fun (x6279 : 'tags this) ->
        fun (x6280 : Event.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6279) "click"
            (Event.t_to_js x6280)
    let (get_close : 'tags this -> Event.t) =
      fun (x6282 : 'tags this) ->
        Event.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6282) "close")
    let (set_close : 'tags this -> Event.t -> unit) =
      fun (x6284 : 'tags this) ->
        fun (x6285 : Event.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6284) "close"
            (Event.t_to_js x6285)
    let (get_error : 'tags this -> Event.t) =
      fun (x6287 : 'tags this) ->
        Event.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6287) "error")
    let (set_error : 'tags this -> Event.t -> unit) =
      fun (x6289 : 'tags this) ->
        fun (x6290 : Event.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6289) "error"
            (Event.t_to_js x6290)
    let (get_show : 'tags this -> Event.t) =
      fun (x6292 : 'tags this) ->
        Event.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6292) "show")
    let (set_show : 'tags this -> Event.t -> unit) =
      fun (x6294 : 'tags this) ->
        fun (x6295 : Event.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6294) "show"
            (Event.t_to_js x6295)
    let cast_from = Obj.magic
  end
module MessagePortEventMap =
  struct
    type t = [ `MessagePortEventMap ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6298 : Ojs.t) -> t_of_js x6298
    and t_0_to_js : t_0 -> Ojs.t = fun (x6297 : t) -> t_to_js x6297
    type tags = [ `MessagePortEventMap ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `MessagePortEventMap ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6301 : Ojs.t) -> intf_of_js __tags_of_js x6301
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6299 : __tags intf) -> intf_to_js __tags_to_js x6299
    let (get_message : 'tags this -> MessageEvent.t_0) =
      fun (x6303 : 'tags this) ->
        MessageEvent.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6303) "message")
    let (set_message : 'tags this -> MessageEvent.t_0 -> unit) =
      fun (x6305 : 'tags this) ->
        fun (x6306 : MessageEvent.t_0) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6305) "message"
            (MessageEvent.t_0_to_js x6306)
    let (get_messageerror : 'tags this -> MessageEvent.t_0) =
      fun (x6308 : 'tags this) ->
        MessageEvent.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6308) "messageerror")
    let (set_messageerror : 'tags this -> MessageEvent.t_0 -> unit) =
      fun (x6310 : 'tags this) ->
        fun (x6311 : MessageEvent.t_0) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6310) "messageerror"
            (MessageEvent.t_0_to_js x6311)
    let cast_from = Obj.magic
  end
module ImportMeta =
  struct
    type t = [ `ImportMeta ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6314 : Ojs.t) -> t_of_js x6314
    and t_0_to_js : t_0 -> Ojs.t = fun (x6313 : t) -> t_to_js x6313
    type tags = [ `ImportMeta ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ImportMeta ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6317 : Ojs.t) -> intf_of_js __tags_of_js x6317
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6315 : __tags intf) -> intf_to_js __tags_to_js x6315
    let (get_url : 'tags this -> string) =
      fun (x6319 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6319) "url")
    let (set_url : 'tags this -> string -> unit) =
      fun (x6321 : 'tags this) ->
        fun (x6322 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6321) "url"
            (Ojs.string_to_js x6322)
    let cast_from = Obj.magic
  end
module ImageBitmapRenderingContextSettings =
  struct
    type t = [ `ImageBitmapRenderingContextSettings ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6325 : Ojs.t) -> t_of_js x6325
    and t_0_to_js : t_0 -> Ojs.t = fun (x6324 : t) -> t_to_js x6324
    type tags = [ `ImageBitmapRenderingContextSettings ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `ImageBitmapRenderingContextSettings ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6328 : Ojs.t) -> intf_of_js __tags_of_js x6328
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6326 : __tags intf) -> intf_to_js __tags_to_js x6326
    let (get_alpha : 'tags this -> bool) =
      fun (x6330 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6330) "alpha")
    let (set_alpha : 'tags this -> bool -> unit) =
      fun (x6332 : 'tags this) ->
        fun (x6333 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6332) "alpha"
            (Ojs.bool_to_js x6333)
    let cast_from = Obj.magic
  end
module IDBTransactionEventMap =
  struct
    type t = [ `IDBTransactionEventMap ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6336 : Ojs.t) -> t_of_js x6336
    and t_0_to_js : t_0 -> Ojs.t = fun (x6335 : t) -> t_to_js x6335
    type tags = [ `IDBTransactionEventMap ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `IDBTransactionEventMap ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6339 : Ojs.t) -> intf_of_js __tags_of_js x6339
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6337 : __tags intf) -> intf_to_js __tags_to_js x6337
    let (get_abort : 'tags this -> Event.t) =
      fun (x6341 : 'tags this) ->
        Event.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6341) "abort")
    let (set_abort : 'tags this -> Event.t -> unit) =
      fun (x6343 : 'tags this) ->
        fun (x6344 : Event.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6343) "abort"
            (Event.t_to_js x6344)
    let (get_complete : 'tags this -> Event.t) =
      fun (x6346 : 'tags this) ->
        Event.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6346) "complete")
    let (set_complete : 'tags this -> Event.t -> unit) =
      fun (x6348 : 'tags this) ->
        fun (x6349 : Event.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6348) "complete"
            (Event.t_to_js x6349)
    let (get_error : 'tags this -> Event.t) =
      fun (x6351 : 'tags this) ->
        Event.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6351) "error")
    let (set_error : 'tags this -> Event.t -> unit) =
      fun (x6353 : 'tags this) ->
        fun (x6354 : Event.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6353) "error"
            (Event.t_to_js x6354)
    let cast_from = Obj.magic
  end
module IDBRequestEventMap =
  struct
    type t = [ `IDBRequestEventMap ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6357 : Ojs.t) -> t_of_js x6357
    and t_0_to_js : t_0 -> Ojs.t = fun (x6356 : t) -> t_to_js x6356
    type tags = [ `IDBRequestEventMap ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `IDBRequestEventMap ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6360 : Ojs.t) -> intf_of_js __tags_of_js x6360
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6358 : __tags intf) -> intf_to_js __tags_to_js x6358
    let (get_error : 'tags this -> Event.t) =
      fun (x6362 : 'tags this) ->
        Event.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6362) "error")
    let (set_error : 'tags this -> Event.t -> unit) =
      fun (x6364 : 'tags this) ->
        fun (x6365 : Event.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6364) "error"
            (Event.t_to_js x6365)
    let (get_success : 'tags this -> Event.t) =
      fun (x6367 : 'tags this) ->
        Event.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6367) "success")
    let (set_success : 'tags this -> Event.t -> unit) =
      fun (x6369 : 'tags this) ->
        fun (x6370 : Event.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6369) "success"
            (Event.t_to_js x6370)
    let cast_from = Obj.magic
  end
module IDBOpenDBRequestEventMap =
  struct
    type t = [ `IDBOpenDBRequestEventMap  | `IDBRequestEventMap ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6373 : Ojs.t) -> t_of_js x6373
    and t_0_to_js : t_0 -> Ojs.t = fun (x6372 : t) -> t_to_js x6372
    type tags = [ `IDBOpenDBRequestEventMap  | `IDBRequestEventMap ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `IDBOpenDBRequestEventMap ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6376 : Ojs.t) -> intf_of_js __tags_of_js x6376
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6374 : __tags intf) -> intf_to_js __tags_to_js x6374
    let (get_blocked : 'tags this -> Event.t) =
      fun (x6378 : 'tags this) ->
        Event.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6378) "blocked")
    let (set_blocked : 'tags this -> Event.t -> unit) =
      fun (x6380 : 'tags this) ->
        fun (x6381 : Event.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6380) "blocked"
            (Event.t_to_js x6381)
    let (get_upgradeneeded : 'tags this -> IDBVersionChangeEvent.t) =
      fun (x6383 : 'tags this) ->
        IDBVersionChangeEvent.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6383) "upgradeneeded")
    let (set_upgradeneeded : 'tags this -> IDBVersionChangeEvent.t -> unit) =
      fun (x6385 : 'tags this) ->
        fun (x6386 : IDBVersionChangeEvent.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6385) "upgradeneeded"
            (IDBVersionChangeEvent.t_to_js x6386)
    let cast_from = Obj.magic
  end
module IDBDatabaseEventMap =
  struct
    type t = [ `IDBDatabaseEventMap ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6389 : Ojs.t) -> t_of_js x6389
    and t_0_to_js : t_0 -> Ojs.t = fun (x6388 : t) -> t_to_js x6388
    type tags = [ `IDBDatabaseEventMap ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `IDBDatabaseEventMap ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6392 : Ojs.t) -> intf_of_js __tags_of_js x6392
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6390 : __tags intf) -> intf_to_js __tags_to_js x6390
    let (get_abort : 'tags this -> Event.t) =
      fun (x6394 : 'tags this) ->
        Event.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6394) "abort")
    let (set_abort : 'tags this -> Event.t -> unit) =
      fun (x6396 : 'tags this) ->
        fun (x6397 : Event.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6396) "abort"
            (Event.t_to_js x6397)
    let (get_close : 'tags this -> Event.t) =
      fun (x6399 : 'tags this) ->
        Event.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6399) "close")
    let (set_close : 'tags this -> Event.t -> unit) =
      fun (x6401 : 'tags this) ->
        fun (x6402 : Event.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6401) "close"
            (Event.t_to_js x6402)
    let (get_error : 'tags this -> Event.t) =
      fun (x6404 : 'tags this) ->
        Event.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6404) "error")
    let (set_error : 'tags this -> Event.t -> unit) =
      fun (x6406 : 'tags this) ->
        fun (x6407 : Event.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6406) "error"
            (Event.t_to_js x6407)
    let (get_versionchange : 'tags this -> IDBVersionChangeEvent.t) =
      fun (x6409 : 'tags this) ->
        IDBVersionChangeEvent.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6409) "versionchange")
    let (set_versionchange : 'tags this -> IDBVersionChangeEvent.t -> unit) =
      fun (x6411 : 'tags this) ->
        fun (x6412 : IDBVersionChangeEvent.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6411) "versionchange"
            (IDBVersionChangeEvent.t_to_js x6412)
    let cast_from = Obj.magic
  end
module FontFaceSetEventMap =
  struct
    type t = [ `FontFaceSetEventMap ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6415 : Ojs.t) -> t_of_js x6415
    and t_0_to_js : t_0 -> Ojs.t = fun (x6414 : t) -> t_to_js x6414
    type tags = [ `FontFaceSetEventMap ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `FontFaceSetEventMap ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6418 : Ojs.t) -> intf_of_js __tags_of_js x6418
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6416 : __tags intf) -> intf_to_js __tags_to_js x6416
    let (get_loading : 'tags this -> Event.t) =
      fun (x6420 : 'tags this) ->
        Event.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6420) "loading")
    let (set_loading : 'tags this -> Event.t -> unit) =
      fun (x6422 : 'tags this) ->
        fun (x6423 : Event.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6422) "loading"
            (Event.t_to_js x6423)
    let (get_loadingdone : 'tags this -> Event.t) =
      fun (x6425 : 'tags this) ->
        Event.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6425) "loadingdone")
    let (set_loadingdone : 'tags this -> Event.t -> unit) =
      fun (x6427 : 'tags this) ->
        fun (x6428 : Event.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6427) "loadingdone"
            (Event.t_to_js x6428)
    let (get_loadingerror : 'tags this -> Event.t) =
      fun (x6430 : 'tags this) ->
        Event.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6430) "loadingerror")
    let (set_loadingerror : 'tags this -> Event.t -> unit) =
      fun (x6432 : 'tags this) ->
        fun (x6433 : Event.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6432) "loadingerror"
            (Event.t_to_js x6433)
    let cast_from = Obj.magic
  end
module FileReader =
  struct
    type t = [ `EventTarget  | `FileReader ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6436 : Ojs.t) -> t_of_js x6436
    and t_0_to_js : t_0 -> Ojs.t = fun (x6435 : t) -> t_to_js x6435
    type tags = [ `EventTarget  | `FileReader ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `FileReader ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6439 : Ojs.t) -> intf_of_js __tags_of_js x6439
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6437 : __tags intf) -> intf_to_js __tags_to_js x6437
    let (get_error : 'tags this -> DOMException.t or_null) =
      fun (x6441 : 'tags this) ->
        or_null_of_js DOMException.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6441) "error")
    let (get_onabort :
      'tags this -> (this:t -> ev:t ProgressEvent.t -> any) or_null) =
      fun (x6444 : 'tags this) ->
        or_null_of_js
          (fun (x6446 : Ojs.t) ->
             fun ~this:(x6447 : t) ->
               fun ~ev:(x6448 : t ProgressEvent.t) ->
                 any_of_js
                   (Ojs.apply x6446
                      [|(t_to_js x6447);(ProgressEvent.t_to_js t_to_js x6448)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6444) "onabort")
    let (set_onabort :
      'tags this -> (this:t -> ev:t ProgressEvent.t -> any) or_null -> unit)
      =
      fun (x6450 : 'tags this) ->
        fun (x6451 : (this:t -> ev:t ProgressEvent.t -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6450) "onabort"
            (or_null_to_js
               (fun (x6452 : this:t -> ev:t ProgressEvent.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x6453 : Ojs.t) ->
                       fun (x6454 : Ojs.t) ->
                         any_to_js
                           (x6452 ~this:(t_of_js x6453)
                              ~ev:(ProgressEvent.t_of_js t_of_js x6454))))
               x6451)
    let (get_onerror :
      'tags this -> (this:t -> ev:t ProgressEvent.t -> any) or_null) =
      fun (x6457 : 'tags this) ->
        or_null_of_js
          (fun (x6459 : Ojs.t) ->
             fun ~this:(x6460 : t) ->
               fun ~ev:(x6461 : t ProgressEvent.t) ->
                 any_of_js
                   (Ojs.apply x6459
                      [|(t_to_js x6460);(ProgressEvent.t_to_js t_to_js x6461)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6457) "onerror")
    let (set_onerror :
      'tags this -> (this:t -> ev:t ProgressEvent.t -> any) or_null -> unit)
      =
      fun (x6463 : 'tags this) ->
        fun (x6464 : (this:t -> ev:t ProgressEvent.t -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6463) "onerror"
            (or_null_to_js
               (fun (x6465 : this:t -> ev:t ProgressEvent.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x6466 : Ojs.t) ->
                       fun (x6467 : Ojs.t) ->
                         any_to_js
                           (x6465 ~this:(t_of_js x6466)
                              ~ev:(ProgressEvent.t_of_js t_of_js x6467))))
               x6464)
    let (get_onload :
      'tags this -> (this:t -> ev:t ProgressEvent.t -> any) or_null) =
      fun (x6470 : 'tags this) ->
        or_null_of_js
          (fun (x6472 : Ojs.t) ->
             fun ~this:(x6473 : t) ->
               fun ~ev:(x6474 : t ProgressEvent.t) ->
                 any_of_js
                   (Ojs.apply x6472
                      [|(t_to_js x6473);(ProgressEvent.t_to_js t_to_js x6474)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6470) "onload")
    let (set_onload :
      'tags this -> (this:t -> ev:t ProgressEvent.t -> any) or_null -> unit)
      =
      fun (x6476 : 'tags this) ->
        fun (x6477 : (this:t -> ev:t ProgressEvent.t -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6476) "onload"
            (or_null_to_js
               (fun (x6478 : this:t -> ev:t ProgressEvent.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x6479 : Ojs.t) ->
                       fun (x6480 : Ojs.t) ->
                         any_to_js
                           (x6478 ~this:(t_of_js x6479)
                              ~ev:(ProgressEvent.t_of_js t_of_js x6480))))
               x6477)
    let (get_onloadend :
      'tags this -> (this:t -> ev:t ProgressEvent.t -> any) or_null) =
      fun (x6483 : 'tags this) ->
        or_null_of_js
          (fun (x6485 : Ojs.t) ->
             fun ~this:(x6486 : t) ->
               fun ~ev:(x6487 : t ProgressEvent.t) ->
                 any_of_js
                   (Ojs.apply x6485
                      [|(t_to_js x6486);(ProgressEvent.t_to_js t_to_js x6487)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6483) "onloadend")
    let (set_onloadend :
      'tags this -> (this:t -> ev:t ProgressEvent.t -> any) or_null -> unit)
      =
      fun (x6489 : 'tags this) ->
        fun (x6490 : (this:t -> ev:t ProgressEvent.t -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6489) "onloadend"
            (or_null_to_js
               (fun (x6491 : this:t -> ev:t ProgressEvent.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x6492 : Ojs.t) ->
                       fun (x6493 : Ojs.t) ->
                         any_to_js
                           (x6491 ~this:(t_of_js x6492)
                              ~ev:(ProgressEvent.t_of_js t_of_js x6493))))
               x6490)
    let (get_onloadstart :
      'tags this -> (this:t -> ev:t ProgressEvent.t -> any) or_null) =
      fun (x6496 : 'tags this) ->
        or_null_of_js
          (fun (x6498 : Ojs.t) ->
             fun ~this:(x6499 : t) ->
               fun ~ev:(x6500 : t ProgressEvent.t) ->
                 any_of_js
                   (Ojs.apply x6498
                      [|(t_to_js x6499);(ProgressEvent.t_to_js t_to_js x6500)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6496) "onloadstart")
    let (set_onloadstart :
      'tags this -> (this:t -> ev:t ProgressEvent.t -> any) or_null -> unit)
      =
      fun (x6502 : 'tags this) ->
        fun (x6503 : (this:t -> ev:t ProgressEvent.t -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6502) "onloadstart"
            (or_null_to_js
               (fun (x6504 : this:t -> ev:t ProgressEvent.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x6505 : Ojs.t) ->
                       fun (x6506 : Ojs.t) ->
                         any_to_js
                           (x6504 ~this:(t_of_js x6505)
                              ~ev:(ProgressEvent.t_of_js t_of_js x6506))))
               x6503)
    let (get_onprogress :
      'tags this -> (this:t -> ev:t ProgressEvent.t -> any) or_null) =
      fun (x6509 : 'tags this) ->
        or_null_of_js
          (fun (x6511 : Ojs.t) ->
             fun ~this:(x6512 : t) ->
               fun ~ev:(x6513 : t ProgressEvent.t) ->
                 any_of_js
                   (Ojs.apply x6511
                      [|(t_to_js x6512);(ProgressEvent.t_to_js t_to_js x6513)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6509) "onprogress")
    let (set_onprogress :
      'tags this -> (this:t -> ev:t ProgressEvent.t -> any) or_null -> unit)
      =
      fun (x6515 : 'tags this) ->
        fun (x6516 : (this:t -> ev:t ProgressEvent.t -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6515) "onprogress"
            (or_null_to_js
               (fun (x6517 : this:t -> ev:t ProgressEvent.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x6518 : Ojs.t) ->
                       fun (x6519 : Ojs.t) ->
                         any_to_js
                           (x6517 ~this:(t_of_js x6518)
                              ~ev:(ProgressEvent.t_of_js t_of_js x6519))))
               x6516)
    let (get_readyState : 'tags this -> float) =
      fun (x6522 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6522) "readyState")
    let (get_result : 'tags this -> ArrayBuffer.t_0 or_string or_null) =
      fun (x6524 : 'tags this) ->
        or_null_of_js
          (fun (x6526 : Ojs.t) -> or_string_of_js ArrayBuffer.t_0_of_js x6526)
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6524) "result")
    let (abort : 'tags this -> unit) =
      fun (x6528 : 'tags this) ->
        ignore (Ojs.call (this_to_js Obj.magic x6528) "abort" [||])
    let (readAsArrayBuffer : 'tags this -> blob:Blob.t -> unit) =
      fun (x6531 : 'tags this) ->
        fun ~blob:(x6530 : Blob.t) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x6531) "readAsArrayBuffer"
               [|(Blob.t_to_js x6530)|])
    let (readAsBinaryString : 'tags this -> blob:Blob.t -> unit) =
      fun (x6534 : 'tags this) ->
        fun ~blob:(x6533 : Blob.t) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x6534) "readAsBinaryString"
               [|(Blob.t_to_js x6533)|])
    let (readAsDataURL : 'tags this -> blob:Blob.t -> unit) =
      fun (x6537 : 'tags this) ->
        fun ~blob:(x6536 : Blob.t) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x6537) "readAsDataURL"
               [|(Blob.t_to_js x6536)|])
    let (readAsText :
      'tags this -> blob:Blob.t -> ?encoding:string -> unit -> unit) =
      fun (x6543 : 'tags this) ->
        fun ~blob:(x6539 : Blob.t) ->
          fun ?encoding:(x6540 : string option) ->
            fun () ->
              ignore
                (let x6545 = this_to_js Obj.magic x6543 in
                 Ojs.call (Ojs.get_prop_ascii x6545 "readAsText") "apply"
                   [|x6545;((let x6541 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6541 "push"
                                  [|(Blob.t_to_js x6539)|]);
                             (match x6540 with
                              | Some x6542 ->
                                  ignore
                                    (Ojs.call x6541 "push"
                                       [|(Ojs.string_to_js x6542)|])
                              | None -> ());
                             x6541))|])
    let (get_DONE : 'tags this -> float) =
      fun (x6546 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6546) "DONE")
    let (get_EMPTY : 'tags this -> float) =
      fun (x6548 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6548) "EMPTY")
    let (get_LOADING : 'tags this -> float) =
      fun (x6550 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6550) "LOADING")
    let (addEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x6560 : 'tags this) ->
        fun ~type_:(x6552 : 'K) ->
          fun ~listener:(x6553 : this:t -> ev:any -> any) ->
            fun
              ?options:(x6554 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x6562 = this_to_js Obj.magic x6560 in
                   Ojs.call (Ojs.get_prop_ascii x6562 "addEventListener")
                     "apply"
                     [|x6562;((let x6555 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6555 "push" [|(Obj.magic x6552)|]);
                               ignore
                                 (Ojs.call x6555 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x6558 : Ojs.t) ->
                                            fun (x6559 : Ojs.t) ->
                                              any_to_js
                                                (x6553 ~this:(t_of_js x6558)
                                                   ~ev:(any_of_js x6559))))|]);
                               (match x6554 with
                                | Some x6556 ->
                                    ignore
                                      (Ojs.call x6555 "push"
                                         [|(or_boolean_to_js
                                              AddEventListenerOptions.t_to_js
                                              x6556)|])
                                | None -> ());
                               x6555))|])
    let (addEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x6569 : 'tags this) ->
        fun ~type_:(x6563 : string) ->
          fun ~listener:(x6564 : EventListenerOrEventListenerObject.t) ->
            fun
              ?options:(x6565 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x6571 = this_to_js Obj.magic x6569 in
                   Ojs.call (Ojs.get_prop_ascii x6571 "addEventListener")
                     "apply"
                     [|x6571;((let x6566 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6566 "push"
                                    [|(Ojs.string_to_js x6563)|]);
                               ignore
                                 (Ojs.call x6566 "push"
                                    [|(EventListenerOrEventListenerObject.t_to_js
                                         x6564)|]);
                               (match x6565 with
                                | Some x6567 ->
                                    ignore
                                      (Ojs.call x6566 "push"
                                         [|(or_boolean_to_js
                                              AddEventListenerOptions.t_to_js
                                              x6567)|])
                                | None -> ());
                               x6566))|])
    let (removeEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x6580 : 'tags this) ->
        fun ~type_:(x6572 : 'K) ->
          fun ~listener:(x6573 : this:t -> ev:any -> any) ->
            fun ?options:(x6574 : EventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x6582 = this_to_js Obj.magic x6580 in
                   Ojs.call (Ojs.get_prop_ascii x6582 "removeEventListener")
                     "apply"
                     [|x6582;((let x6575 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6575 "push" [|(Obj.magic x6572)|]);
                               ignore
                                 (Ojs.call x6575 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x6578 : Ojs.t) ->
                                            fun (x6579 : Ojs.t) ->
                                              any_to_js
                                                (x6573 ~this:(t_of_js x6578)
                                                   ~ev:(any_of_js x6579))))|]);
                               (match x6574 with
                                | Some x6576 ->
                                    ignore
                                      (Ojs.call x6575 "push"
                                         [|(or_boolean_to_js
                                              EventListenerOptions.t_to_js
                                              x6576)|])
                                | None -> ());
                               x6575))|])
    let (removeEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x6589 : 'tags this) ->
        fun ~type_:(x6583 : string) ->
          fun ~listener:(x6584 : EventListenerOrEventListenerObject.t) ->
            fun ?options:(x6585 : EventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x6591 = this_to_js Obj.magic x6589 in
                   Ojs.call (Ojs.get_prop_ascii x6591 "removeEventListener")
                     "apply"
                     [|x6591;((let x6586 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6586 "push"
                                    [|(Ojs.string_to_js x6583)|]);
                               ignore
                                 (Ojs.call x6586 "push"
                                    [|(EventListenerOrEventListenerObject.t_to_js
                                         x6584)|]);
                               (match x6585 with
                                | Some x6587 ->
                                    ignore
                                      (Ojs.call x6586 "push"
                                         [|(or_boolean_to_js
                                              EventListenerOptions.t_to_js
                                              x6587)|])
                                | None -> ());
                               x6586))|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "FileReader")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FileReader") [||])
    let (done_ : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "FileReader")
             "DONE")
    let (empty : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "FileReader")
             "EMPTY")
    let (loading : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "FileReader")
             "LOADING")
  end
module FileReaderEventMap =
  struct
    type t = [ `FileReaderEventMap ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6593 : Ojs.t) -> t_of_js x6593
    and t_0_to_js : t_0 -> Ojs.t = fun (x6592 : t) -> t_to_js x6592
    type tags = [ `FileReaderEventMap ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `FileReaderEventMap ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6596 : Ojs.t) -> intf_of_js __tags_of_js x6596
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6594 : __tags intf) -> intf_to_js __tags_to_js x6594
    let (get_abort : 'tags this -> FileReader.t ProgressEvent.t) =
      fun (x6598 : 'tags this) ->
        ProgressEvent.t_of_js FileReader.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6598) "abort")
    let (set_abort : 'tags this -> FileReader.t ProgressEvent.t -> unit) =
      fun (x6601 : 'tags this) ->
        fun (x6602 : FileReader.t ProgressEvent.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6601) "abort"
            (ProgressEvent.t_to_js FileReader.t_to_js x6602)
    let (get_error : 'tags this -> FileReader.t ProgressEvent.t) =
      fun (x6605 : 'tags this) ->
        ProgressEvent.t_of_js FileReader.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6605) "error")
    let (set_error : 'tags this -> FileReader.t ProgressEvent.t -> unit) =
      fun (x6608 : 'tags this) ->
        fun (x6609 : FileReader.t ProgressEvent.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6608) "error"
            (ProgressEvent.t_to_js FileReader.t_to_js x6609)
    let (get_load : 'tags this -> FileReader.t ProgressEvent.t) =
      fun (x6612 : 'tags this) ->
        ProgressEvent.t_of_js FileReader.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6612) "load")
    let (set_load : 'tags this -> FileReader.t ProgressEvent.t -> unit) =
      fun (x6615 : 'tags this) ->
        fun (x6616 : FileReader.t ProgressEvent.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6615) "load"
            (ProgressEvent.t_to_js FileReader.t_to_js x6616)
    let (get_loadend : 'tags this -> FileReader.t ProgressEvent.t) =
      fun (x6619 : 'tags this) ->
        ProgressEvent.t_of_js FileReader.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6619) "loadend")
    let (set_loadend : 'tags this -> FileReader.t ProgressEvent.t -> unit) =
      fun (x6622 : 'tags this) ->
        fun (x6623 : FileReader.t ProgressEvent.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6622) "loadend"
            (ProgressEvent.t_to_js FileReader.t_to_js x6623)
    let (get_loadstart : 'tags this -> FileReader.t ProgressEvent.t) =
      fun (x6626 : 'tags this) ->
        ProgressEvent.t_of_js FileReader.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6626) "loadstart")
    let (set_loadstart : 'tags this -> FileReader.t ProgressEvent.t -> unit)
      =
      fun (x6629 : 'tags this) ->
        fun (x6630 : FileReader.t ProgressEvent.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6629) "loadstart"
            (ProgressEvent.t_to_js FileReader.t_to_js x6630)
    let (get_progress : 'tags this -> FileReader.t ProgressEvent.t) =
      fun (x6633 : 'tags this) ->
        ProgressEvent.t_of_js FileReader.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6633) "progress")
    let (set_progress : 'tags this -> FileReader.t ProgressEvent.t -> unit) =
      fun (x6636 : 'tags this) ->
        fun (x6637 : FileReader.t ProgressEvent.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6636) "progress"
            (ProgressEvent.t_to_js FileReader.t_to_js x6637)
    let cast_from = Obj.magic
  end
module EventSourceEventMap =
  struct
    type t = [ `EventSourceEventMap ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6641 : Ojs.t) -> t_of_js x6641
    and t_0_to_js : t_0 -> Ojs.t = fun (x6640 : t) -> t_to_js x6640
    type tags = [ `EventSourceEventMap ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `EventSourceEventMap ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6644 : Ojs.t) -> intf_of_js __tags_of_js x6644
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6642 : __tags intf) -> intf_to_js __tags_to_js x6642
    let (get_error : 'tags this -> Event.t) =
      fun (x6646 : 'tags this) ->
        Event.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6646) "error")
    let (set_error : 'tags this -> Event.t -> unit) =
      fun (x6648 : 'tags this) ->
        fun (x6649 : Event.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6648) "error"
            (Event.t_to_js x6649)
    let (get_message : 'tags this -> MessageEvent.t_0) =
      fun (x6651 : 'tags this) ->
        MessageEvent.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6651) "message")
    let (set_message : 'tags this -> MessageEvent.t_0 -> unit) =
      fun (x6653 : 'tags this) ->
        fun (x6654 : MessageEvent.t_0) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6653) "message"
            (MessageEvent.t_0_to_js x6654)
    let (get_open : 'tags this -> Event.t) =
      fun (x6656 : 'tags this) ->
        Event.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6656) "open")
    let (set_open : 'tags this -> Event.t -> unit) =
      fun (x6658 : 'tags this) ->
        fun (x6659 : Event.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6658) "open"
            (Event.t_to_js x6659)
    let cast_from = Obj.magic
  end
module GLenum =
  struct
    type t = float
    let rec t_of_js : Ojs.t -> t =
      fun (x6662 : Ojs.t) -> Ojs.float_of_js x6662
    and t_to_js : t -> Ojs.t = fun (x6661 : float) -> Ojs.float_to_js x6661
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6664 : Ojs.t) -> t_of_js x6664
    and t_0_to_js : t_0 -> Ojs.t = fun (x6663 : t) -> t_to_js x6663
  end
module EXT_texture_compression_rgtc =
  struct
    type t = [ `EXT_texture_compression_rgtc ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6666 : Ojs.t) -> t_of_js x6666
    and t_0_to_js : t_0 -> Ojs.t = fun (x6665 : t) -> t_to_js x6665
    type tags = [ `EXT_texture_compression_rgtc ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `EXT_texture_compression_rgtc ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6669 : Ojs.t) -> intf_of_js __tags_of_js x6669
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6667 : __tags intf) -> intf_to_js __tags_to_js x6667
    let (get_COMPRESSED_RED_GREEN_RGTC2_EXT : 'tags this -> GLenum.t) =
      fun (x6671 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6671)
             "COMPRESSED_RED_GREEN_RGTC2_EXT")
    let (get_COMPRESSED_RED_RGTC1_EXT : 'tags this -> GLenum.t) =
      fun (x6673 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6673)
             "COMPRESSED_RED_RGTC1_EXT")
    let (get_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT : 'tags this -> GLenum.t)
      =
      fun (x6675 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6675)
             "COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT")
    let (get_COMPRESSED_SIGNED_RED_RGTC1_EXT : 'tags this -> GLenum.t) =
      fun (x6677 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6677)
             "COMPRESSED_SIGNED_RED_RGTC1_EXT")
    let cast_from = Obj.magic
  end
module DedicatedWorkerGlobalScopeEventMap =
  struct
    type t =
      [ `DedicatedWorkerGlobalScopeEventMap  | `WorkerGlobalScopeEventMap ]
        intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6680 : Ojs.t) -> t_of_js x6680
    and t_0_to_js : t_0 -> Ojs.t = fun (x6679 : t) -> t_to_js x6679
    type tags =
      [ `DedicatedWorkerGlobalScopeEventMap  | `WorkerGlobalScopeEventMap ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `DedicatedWorkerGlobalScopeEventMap ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6683 : Ojs.t) -> intf_of_js __tags_of_js x6683
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6681 : __tags intf) -> intf_to_js __tags_to_js x6681
    let (get_message : 'tags this -> MessageEvent.t_0) =
      fun (x6685 : 'tags this) ->
        MessageEvent.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6685) "message")
    let (set_message : 'tags this -> MessageEvent.t_0 -> unit) =
      fun (x6687 : 'tags this) ->
        fun (x6688 : MessageEvent.t_0) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6687) "message"
            (MessageEvent.t_0_to_js x6688)
    let (get_messageerror : 'tags this -> MessageEvent.t_0) =
      fun (x6690 : 'tags this) ->
        MessageEvent.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6690) "messageerror")
    let (set_messageerror : 'tags this -> MessageEvent.t_0 -> unit) =
      fun (x6692 : 'tags this) ->
        fun (x6693 : MessageEvent.t_0) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6692) "messageerror"
            (MessageEvent.t_0_to_js x6693)
    let cast_from = Obj.magic
  end
module Console =
  struct
    type t = [ `Console ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6696 : Ojs.t) -> t_of_js x6696
    and t_0_to_js : t_0 -> Ojs.t = fun (x6695 : t) -> t_to_js x6695
    type tags = [ `Console ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Console ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6699 : Ojs.t) -> intf_of_js __tags_of_js x6699
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6697 : __tags intf) -> intf_to_js __tags_to_js x6697
    let (assert_ :
      'tags this -> ?condition:bool -> data:any list -> unit -> unit) =
      fun (x6706 : 'tags this) ->
        fun ?condition:(x6701 : bool option) ->
          fun ~data:(x6702 : any list) ->
            fun () ->
              ignore
                (let x6708 = this_to_js Obj.magic x6706 in
                 Ojs.call (Ojs.get_prop_ascii x6708 "assert") "apply"
                   [|x6708;((let x6703 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6701 with
                              | Some x6705 ->
                                  ignore
                                    (Ojs.call x6703 "push"
                                       [|(Ojs.bool_to_js x6705)|])
                              | None -> ());
                             List.iter
                               (fun (x6704 : any) ->
                                  ignore
                                    (Ojs.call x6703 "push"
                                       [|(any_to_js x6704)|])) x6702;
                             x6703))|])
    let (clear : 'tags this -> unit) =
      fun (x6709 : 'tags this) ->
        ignore (Ojs.call (this_to_js Obj.magic x6709) "clear" [||])
    let (count : 'tags this -> ?label:string -> unit -> unit) =
      fun (x6714 : 'tags this) ->
        fun ?label:(x6711 : string option) ->
          fun () ->
            ignore
              (let x6716 = this_to_js Obj.magic x6714 in
               Ojs.call (Ojs.get_prop_ascii x6716 "count") "apply"
                 [|x6716;((let x6712 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6711 with
                            | Some x6713 ->
                                ignore
                                  (Ojs.call x6712 "push"
                                     [|(Ojs.string_to_js x6713)|])
                            | None -> ());
                           x6712))|])
    let (countReset : 'tags this -> ?label:string -> unit -> unit) =
      fun (x6720 : 'tags this) ->
        fun ?label:(x6717 : string option) ->
          fun () ->
            ignore
              (let x6722 = this_to_js Obj.magic x6720 in
               Ojs.call (Ojs.get_prop_ascii x6722 "countReset") "apply"
                 [|x6722;((let x6718 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6717 with
                            | Some x6719 ->
                                ignore
                                  (Ojs.call x6718 "push"
                                     [|(Ojs.string_to_js x6719)|])
                            | None -> ());
                           x6718))|])
    let (debug : 'tags this -> data:any list -> unit) =
      fun (x6726 : 'tags this) ->
        fun ~data:(x6723 : any list) ->
          ignore
            (let x6728 = this_to_js Obj.magic x6726 in
             Ojs.call (Ojs.get_prop_ascii x6728 "debug") "apply"
               [|x6728;((let x6724 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x6725 : any) ->
                              ignore
                                (Ojs.call x6724 "push" [|(any_to_js x6725)|]))
                           x6723;
                         x6724))|])
    let (dir : 'tags this -> ?item:any -> ?options:any -> unit -> unit) =
      fun (x6734 : 'tags this) ->
        fun ?item:(x6729 : any option) ->
          fun ?options:(x6730 : any option) ->
            fun () ->
              ignore
                (let x6736 = this_to_js Obj.magic x6734 in
                 Ojs.call (Ojs.get_prop_ascii x6736 "dir") "apply"
                   [|x6736;((let x6731 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6729 with
                              | Some x6733 ->
                                  ignore
                                    (Ojs.call x6731 "push"
                                       [|(any_to_js x6733)|])
                              | None -> ());
                             (match x6730 with
                              | Some x6732 ->
                                  ignore
                                    (Ojs.call x6731 "push"
                                       [|(any_to_js x6732)|])
                              | None -> ());
                             x6731))|])
    let (dirxml : 'tags this -> data:any list -> unit) =
      fun (x6740 : 'tags this) ->
        fun ~data:(x6737 : any list) ->
          ignore
            (let x6742 = this_to_js Obj.magic x6740 in
             Ojs.call (Ojs.get_prop_ascii x6742 "dirxml") "apply"
               [|x6742;((let x6738 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x6739 : any) ->
                              ignore
                                (Ojs.call x6738 "push" [|(any_to_js x6739)|]))
                           x6737;
                         x6738))|])
    let (error : 'tags this -> data:any list -> unit) =
      fun (x6746 : 'tags this) ->
        fun ~data:(x6743 : any list) ->
          ignore
            (let x6748 = this_to_js Obj.magic x6746 in
             Ojs.call (Ojs.get_prop_ascii x6748 "error") "apply"
               [|x6748;((let x6744 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x6745 : any) ->
                              ignore
                                (Ojs.call x6744 "push" [|(any_to_js x6745)|]))
                           x6743;
                         x6744))|])
    let (group : 'tags this -> data:any list -> unit) =
      fun (x6752 : 'tags this) ->
        fun ~data:(x6749 : any list) ->
          ignore
            (let x6754 = this_to_js Obj.magic x6752 in
             Ojs.call (Ojs.get_prop_ascii x6754 "group") "apply"
               [|x6754;((let x6750 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x6751 : any) ->
                              ignore
                                (Ojs.call x6750 "push" [|(any_to_js x6751)|]))
                           x6749;
                         x6750))|])
    let (groupCollapsed : 'tags this -> data:any list -> unit) =
      fun (x6758 : 'tags this) ->
        fun ~data:(x6755 : any list) ->
          ignore
            (let x6760 = this_to_js Obj.magic x6758 in
             Ojs.call (Ojs.get_prop_ascii x6760 "groupCollapsed") "apply"
               [|x6760;((let x6756 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x6757 : any) ->
                              ignore
                                (Ojs.call x6756 "push" [|(any_to_js x6757)|]))
                           x6755;
                         x6756))|])
    let (groupEnd : 'tags this -> unit) =
      fun (x6761 : 'tags this) ->
        ignore (Ojs.call (this_to_js Obj.magic x6761) "groupEnd" [||])
    let (info : 'tags this -> data:any list -> unit) =
      fun (x6766 : 'tags this) ->
        fun ~data:(x6763 : any list) ->
          ignore
            (let x6768 = this_to_js Obj.magic x6766 in
             Ojs.call (Ojs.get_prop_ascii x6768 "info") "apply"
               [|x6768;((let x6764 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x6765 : any) ->
                              ignore
                                (Ojs.call x6764 "push" [|(any_to_js x6765)|]))
                           x6763;
                         x6764))|])
    let (log : 'tags this -> data:any list -> unit) =
      fun (x6772 : 'tags this) ->
        fun ~data:(x6769 : any list) ->
          ignore
            (let x6774 = this_to_js Obj.magic x6772 in
             Ojs.call (Ojs.get_prop_ascii x6774 "log") "apply"
               [|x6774;((let x6770 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x6771 : any) ->
                              ignore
                                (Ojs.call x6770 "push" [|(any_to_js x6771)|]))
                           x6769;
                         x6770))|])
    let (table :
      'tags this ->
        ?tabularData:any -> ?properties:string list -> unit -> unit)
      =
      fun (x6781 : 'tags this) ->
        fun ?tabularData:(x6775 : any option) ->
          fun ?properties:(x6776 : string list option) ->
            fun () ->
              ignore
                (let x6783 = this_to_js Obj.magic x6781 in
                 Ojs.call (Ojs.get_prop_ascii x6783 "table") "apply"
                   [|x6783;((let x6777 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6775 with
                              | Some x6780 ->
                                  ignore
                                    (Ojs.call x6777 "push"
                                       [|(any_to_js x6780)|])
                              | None -> ());
                             (match x6776 with
                              | Some x6778 ->
                                  ignore
                                    (Ojs.call x6777 "push"
                                       [|(Ojs.list_to_js Ojs.string_to_js
                                            x6778)|])
                              | None -> ());
                             x6777))|])
    let (time : 'tags this -> ?label:string -> unit -> unit) =
      fun (x6787 : 'tags this) ->
        fun ?label:(x6784 : string option) ->
          fun () ->
            ignore
              (let x6789 = this_to_js Obj.magic x6787 in
               Ojs.call (Ojs.get_prop_ascii x6789 "time") "apply"
                 [|x6789;((let x6785 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6784 with
                            | Some x6786 ->
                                ignore
                                  (Ojs.call x6785 "push"
                                     [|(Ojs.string_to_js x6786)|])
                            | None -> ());
                           x6785))|])
    let (timeEnd : 'tags this -> ?label:string -> unit -> unit) =
      fun (x6793 : 'tags this) ->
        fun ?label:(x6790 : string option) ->
          fun () ->
            ignore
              (let x6795 = this_to_js Obj.magic x6793 in
               Ojs.call (Ojs.get_prop_ascii x6795 "timeEnd") "apply"
                 [|x6795;((let x6791 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6790 with
                            | Some x6792 ->
                                ignore
                                  (Ojs.call x6791 "push"
                                     [|(Ojs.string_to_js x6792)|])
                            | None -> ());
                           x6791))|])
    let (timeLog :
      'tags this -> ?label:string -> data:any list -> unit -> unit) =
      fun (x6801 : 'tags this) ->
        fun ?label:(x6796 : string option) ->
          fun ~data:(x6797 : any list) ->
            fun () ->
              ignore
                (let x6803 = this_to_js Obj.magic x6801 in
                 Ojs.call (Ojs.get_prop_ascii x6803 "timeLog") "apply"
                   [|x6803;((let x6798 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6796 with
                              | Some x6800 ->
                                  ignore
                                    (Ojs.call x6798 "push"
                                       [|(Ojs.string_to_js x6800)|])
                              | None -> ());
                             List.iter
                               (fun (x6799 : any) ->
                                  ignore
                                    (Ojs.call x6798 "push"
                                       [|(any_to_js x6799)|])) x6797;
                             x6798))|])
    let (timeStamp : 'tags this -> ?label:string -> unit -> unit) =
      fun (x6807 : 'tags this) ->
        fun ?label:(x6804 : string option) ->
          fun () ->
            ignore
              (let x6809 = this_to_js Obj.magic x6807 in
               Ojs.call (Ojs.get_prop_ascii x6809 "timeStamp") "apply"
                 [|x6809;((let x6805 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6804 with
                            | Some x6806 ->
                                ignore
                                  (Ojs.call x6805 "push"
                                     [|(Ojs.string_to_js x6806)|])
                            | None -> ());
                           x6805))|])
    let (trace : 'tags this -> data:any list -> unit) =
      fun (x6813 : 'tags this) ->
        fun ~data:(x6810 : any list) ->
          ignore
            (let x6815 = this_to_js Obj.magic x6813 in
             Ojs.call (Ojs.get_prop_ascii x6815 "trace") "apply"
               [|x6815;((let x6811 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x6812 : any) ->
                              ignore
                                (Ojs.call x6811 "push" [|(any_to_js x6812)|]))
                           x6810;
                         x6811))|])
    let (warn : 'tags this -> data:any list -> unit) =
      fun (x6819 : 'tags this) ->
        fun ~data:(x6816 : any list) ->
          ignore
            (let x6821 = this_to_js Obj.magic x6819 in
             Ojs.call (Ojs.get_prop_ascii x6821 "warn") "apply"
               [|x6821;((let x6817 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x6818 : any) ->
                              ignore
                                (Ojs.call x6817 "push" [|(any_to_js x6818)|]))
                           x6816;
                         x6817))|])
    let cast_from = Obj.magic
  end
module BroadcastChannelEventMap =
  struct
    type t = [ `BroadcastChannelEventMap ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6823 : Ojs.t) -> t_of_js x6823
    and t_0_to_js : t_0 -> Ojs.t = fun (x6822 : t) -> t_to_js x6822
    type tags = [ `BroadcastChannelEventMap ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `BroadcastChannelEventMap ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6826 : Ojs.t) -> intf_of_js __tags_of_js x6826
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6824 : __tags intf) -> intf_to_js __tags_to_js x6824
    let (get_message : 'tags this -> MessageEvent.t_0) =
      fun (x6828 : 'tags this) ->
        MessageEvent.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6828) "message")
    let (set_message : 'tags this -> MessageEvent.t_0 -> unit) =
      fun (x6830 : 'tags this) ->
        fun (x6831 : MessageEvent.t_0) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6830) "message"
            (MessageEvent.t_0_to_js x6831)
    let (get_messageerror : 'tags this -> MessageEvent.t_0) =
      fun (x6833 : 'tags this) ->
        MessageEvent.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6833) "messageerror")
    let (set_messageerror : 'tags this -> MessageEvent.t_0 -> unit) =
      fun (x6835 : 'tags this) ->
        fun (x6836 : MessageEvent.t_0) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6835) "messageerror"
            (MessageEvent.t_0_to_js x6836)
    let cast_from = Obj.magic
  end
module AnonymousInterface99 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x6839 : Ojs.t) -> x6839
    and t_to_js : t -> Ojs.t = fun (x6838 : Ojs.t) -> x6838
    let (get_prototype : t -> StorageManager.t) =
      fun (x6840 : t) ->
        StorageManager.t_of_js
          (Ojs.get_prop_ascii (t_to_js x6840) "prototype")
    let (set_prototype : t -> StorageManager.t -> unit) =
      fun (x6841 : t) ->
        fun (x6842 : StorageManager.t) ->
          Ojs.set_prop_ascii (t_to_js x6841) "prototype"
            (StorageManager.t_to_js x6842)
    let (create : t -> StorageManager.t) =
      fun (x6843 : t) ->
        StorageManager.t_of_js (Ojs.new_obj (t_to_js x6843) [||])
  end
module WorkerNavigator =
  struct
    type t =
      [ `NavigatorConcurrentHardware  | `NavigatorID  | `NavigatorLanguage 
      | `NavigatorNetworkInformation  | `NavigatorOnLine 
      | `NavigatorStorage  | `WorkerNavigator ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6845 : Ojs.t) -> t_of_js x6845
    and t_0_to_js : t_0 -> Ojs.t = fun (x6844 : t) -> t_to_js x6844
    type tags =
      [ `NavigatorConcurrentHardware  | `NavigatorID  | `NavigatorLanguage 
      | `NavigatorNetworkInformation  | `NavigatorOnLine 
      | `NavigatorStorage  | `WorkerNavigator ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `WorkerNavigator ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6848 : Ojs.t) -> intf_of_js __tags_of_js x6848
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6846 : __tags intf) -> intf_to_js __tags_to_js x6846
    let (get_mediaCapabilities : 'tags this -> MediaCapabilities.t) =
      fun (x6850 : 'tags this) ->
        MediaCapabilities.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6850)
             "mediaCapabilities")
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WorkerNavigator") "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WorkerNavigator") [||])
  end
module WorkerLocation =
  struct
    type t = [ `WorkerLocation ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6853 : Ojs.t) -> t_of_js x6853
    and t_0_to_js : t_0 -> Ojs.t = fun (x6852 : t) -> t_to_js x6852
    type tags = [ `WorkerLocation ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `WorkerLocation ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6856 : Ojs.t) -> intf_of_js __tags_of_js x6856
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6854 : __tags intf) -> intf_to_js __tags_to_js x6854
    let (get_hash : 'tags this -> string) =
      fun (x6858 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6858) "hash")
    let (get_host : 'tags this -> string) =
      fun (x6860 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6860) "host")
    let (get_hostname : 'tags this -> string) =
      fun (x6862 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6862) "hostname")
    let (get_href : 'tags this -> string) =
      fun (x6864 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6864) "href")
    let (toString : 'tags this -> string) =
      fun (x6866 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6866) "toString" [||])
    let (get_origin : 'tags this -> string) =
      fun (x6868 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6868) "origin")
    let (get_pathname : 'tags this -> string) =
      fun (x6870 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6870) "pathname")
    let (get_port : 'tags this -> string) =
      fun (x6872 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6872) "port")
    let (get_protocol : 'tags this -> string) =
      fun (x6874 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6874) "protocol")
    let (get_search : 'tags this -> string) =
      fun (x6876 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6876) "search")
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WorkerLocation") "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WorkerLocation") [||])
  end
module VoidFunction =
  struct
    type t = [ `VoidFunction ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6879 : Ojs.t) -> t_of_js x6879
    and t_0_to_js : t_0 -> Ojs.t = fun (x6878 : t) -> t_to_js x6878
    type tags = [ `VoidFunction ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `VoidFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6882 : Ojs.t) -> intf_of_js __tags_of_js x6882
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6880 : __tags intf) -> intf_to_js __tags_to_js x6880
    let (apply : 'tags this -> unit) =
      fun (x6884 : 'tags this) ->
        ignore (Ojs.apply (this_to_js Obj.magic x6884) [||])
    let cast_from = Obj.magic
  end
module TimerHandler =
  struct
    type t = untyped_function or_string
    let rec t_of_js : Ojs.t -> t =
      fun (x6888 : Ojs.t) -> or_string_of_js untyped_function_of_js x6888
    and t_to_js : t -> Ojs.t =
      fun (x6886 : untyped_function or_string) ->
        or_string_to_js untyped_function_to_js x6886
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6891 : Ojs.t) -> t_of_js x6891
    and t_0_to_js : t_0 -> Ojs.t = fun (x6890 : t) -> t_to_js x6890
  end
module OffscreenCanvas =
  struct
    type t = [ `EventTarget  | `OffscreenCanvas ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6893 : Ojs.t) -> t_of_js x6893
    and t_0_to_js : t_0 -> Ojs.t = fun (x6892 : t) -> t_to_js x6892
    type tags = [ `EventTarget  | `OffscreenCanvas ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `OffscreenCanvas ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6896 : Ojs.t) -> intf_of_js __tags_of_js x6896
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6894 : __tags intf) -> intf_to_js __tags_to_js x6894
    let cast_from = Obj.magic
  end
module CanvasImageSource =
  struct
    type t = (ImageBitmap.t, OffscreenCanvas.t) union2
    let rec t_of_js : Ojs.t -> t =
      fun (x6901 : Ojs.t) ->
        union2_of_js ImageBitmap.t_of_js OffscreenCanvas.t_of_js x6901
    and t_to_js : t -> Ojs.t =
      fun (x6898 : (ImageBitmap.t, OffscreenCanvas.t) union2) ->
        union2_to_js ImageBitmap.t_to_js OffscreenCanvas.t_to_js x6898
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6905 : Ojs.t) -> t_of_js x6905
    and t_0_to_js : t_0 -> Ojs.t = fun (x6904 : t) -> t_to_js x6904
  end
module PredefinedColorSpace =
  struct
    type t = [ `L_s183_srgb  | `L_s61_display_p3 ]
    let rec t_of_js : Ojs.t -> t =
      fun (x6907 : Ojs.t) ->
        let x6908 = x6907 in
        match Ojs.string_of_js x6908 with
        | "srgb" -> `L_s183_srgb
        | "display-p3" -> `L_s61_display_p3
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun (x6906 : [ `L_s183_srgb  | `L_s61_display_p3 ]) ->
        match x6906 with
        | `L_s183_srgb -> Ojs.string_to_js "srgb"
        | `L_s61_display_p3 -> Ojs.string_to_js "display-p3"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6910 : Ojs.t) -> t_of_js x6910
    and t_0_to_js : t_0 -> Ojs.t = fun (x6909 : t) -> t_to_js x6909
  end
module ImageDataSettings =
  struct
    type t = [ `ImageDataSettings ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6912 : Ojs.t) -> t_of_js x6912
    and t_0_to_js : t_0 -> Ojs.t = fun (x6911 : t) -> t_to_js x6911
    type tags = [ `ImageDataSettings ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ImageDataSettings ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6915 : Ojs.t) -> intf_of_js __tags_of_js x6915
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6913 : __tags intf) -> intf_to_js __tags_to_js x6913
    let (get_colorSpace : 'tags this -> PredefinedColorSpace.t) =
      fun (x6917 : 'tags this) ->
        PredefinedColorSpace.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6917) "colorSpace")
    let (set_colorSpace : 'tags this -> PredefinedColorSpace.t -> unit) =
      fun (x6919 : 'tags this) ->
        fun (x6920 : PredefinedColorSpace.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6919) "colorSpace"
            (PredefinedColorSpace.t_to_js x6920)
    let cast_from = Obj.magic
  end
module ImageData =
  struct
    type t = [ `ImageData ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6923 : Ojs.t) -> t_of_js x6923
    and t_0_to_js : t_0 -> Ojs.t = fun (x6922 : t) -> t_to_js x6922
    type tags = [ `ImageData ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ImageData ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6926 : Ojs.t) -> intf_of_js __tags_of_js x6926
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6924 : __tags intf) -> intf_to_js __tags_to_js x6924
    let (get_data : 'tags this -> Uint8ClampedArray.t_0) =
      fun (x6928 : 'tags this) ->
        Uint8ClampedArray.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6928) "data")
    let (get_height : 'tags this -> float) =
      fun (x6930 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6930) "height")
    let (get_width : 'tags this -> float) =
      fun (x6932 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6932) "width")
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ImageData")
             "prototype")
    let (create :
      sw:float -> sh:float -> ?settings:ImageDataSettings.t -> unit -> t) =
      fun ~sw:(x6934 : float) ->
        fun ~sh:(x6935 : float) ->
          fun ?settings:(x6936 : ImageDataSettings.t option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "ImageData")
                   (let x6937 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x6937 "push" [|(Ojs.float_to_js x6934)|]);
                    ignore
                      (Ojs.call x6937 "push" [|(Ojs.float_to_js x6935)|]);
                    (match x6936 with
                     | Some x6938 ->
                         ignore
                           (Ojs.call x6937 "push"
                              [|(ImageDataSettings.t_to_js x6938)|])
                     | None -> ());
                    x6937))
    let (create' :
      data:Uint8ClampedArray.t_0 ->
        sw:float -> ?sh:float -> ?settings:ImageDataSettings.t -> unit -> t)
      =
      fun ~data:(x6939 : Uint8ClampedArray.t_0) ->
        fun ~sw:(x6940 : float) ->
          fun ?sh:(x6941 : float option) ->
            fun ?settings:(x6942 : ImageDataSettings.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii Ojs.global "ImageData")
                     (let x6943 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x6943 "push"
                           [|(Uint8ClampedArray.t_0_to_js x6939)|]);
                      ignore
                        (Ojs.call x6943 "push" [|(Ojs.float_to_js x6940)|]);
                      (match x6941 with
                       | Some x6945 ->
                           ignore
                             (Ojs.call x6943 "push"
                                [|(Ojs.float_to_js x6945)|])
                       | None -> ());
                      (match x6942 with
                       | Some x6944 ->
                           ignore
                             (Ojs.call x6943 "push"
                                [|(ImageDataSettings.t_to_js x6944)|])
                       | None -> ());
                      x6943))
  end
module ImageBitmapSource =
  struct
    type t = (Blob.t, CanvasImageSource.t, ImageData.t) union3
    let rec t_of_js : Ojs.t -> t =
      fun (x6950 : Ojs.t) ->
        union3_of_js Blob.t_of_js CanvasImageSource.t_of_js ImageData.t_of_js
          x6950
    and t_to_js : t -> Ojs.t =
      fun (x6946 : (Blob.t, CanvasImageSource.t, ImageData.t) union3) ->
        union3_to_js Blob.t_to_js CanvasImageSource.t_to_js ImageData.t_to_js
          x6946
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6955 : Ojs.t) -> t_of_js x6955
    and t_0_to_js : t_0 -> Ojs.t = fun (x6954 : t) -> t_to_js x6954
  end
module ResizeQuality =
  struct
    type t =
      [ `L_s106_low  | `L_s112_medium  | `L_s149_pixelated  | `L_s84_high ]
    let rec t_of_js : Ojs.t -> t =
      fun (x6957 : Ojs.t) ->
        let x6958 = x6957 in
        match Ojs.string_of_js x6958 with
        | "low" -> `L_s106_low
        | "medium" -> `L_s112_medium
        | "pixelated" -> `L_s149_pixelated
        | "high" -> `L_s84_high
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun
        (x6956 :
          [ `L_s106_low  | `L_s112_medium  | `L_s149_pixelated 
          | `L_s84_high ])
        ->
        match x6956 with
        | `L_s106_low -> Ojs.string_to_js "low"
        | `L_s112_medium -> Ojs.string_to_js "medium"
        | `L_s149_pixelated -> Ojs.string_to_js "pixelated"
        | `L_s84_high -> Ojs.string_to_js "high"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6960 : Ojs.t) -> t_of_js x6960
    and t_0_to_js : t_0 -> Ojs.t = fun (x6959 : t) -> t_to_js x6959
  end
module PremultiplyAlpha =
  struct
    type t = [ `L_s128_none  | `L_s152_premultiply  | `L_s57_default ]
    let rec t_of_js : Ojs.t -> t =
      fun (x6962 : Ojs.t) ->
        let x6963 = x6962 in
        match Ojs.string_of_js x6963 with
        | "none" -> `L_s128_none
        | "premultiply" -> `L_s152_premultiply
        | "default" -> `L_s57_default
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun (x6961 : [ `L_s128_none  | `L_s152_premultiply  | `L_s57_default ])
        ->
        match x6961 with
        | `L_s128_none -> Ojs.string_to_js "none"
        | `L_s152_premultiply -> Ojs.string_to_js "premultiply"
        | `L_s57_default -> Ojs.string_to_js "default"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6965 : Ojs.t) -> t_of_js x6965
    and t_0_to_js : t_0 -> Ojs.t = fun (x6964 : t) -> t_to_js x6964
  end
module ImageOrientation =
  struct
    type t = [ `L_s128_none  | `L_s74_flipY ]
    let rec t_of_js : Ojs.t -> t =
      fun (x6967 : Ojs.t) ->
        let x6968 = x6967 in
        match Ojs.string_of_js x6968 with
        | "none" -> `L_s128_none
        | "flipY" -> `L_s74_flipY
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun (x6966 : [ `L_s128_none  | `L_s74_flipY ]) ->
        match x6966 with
        | `L_s128_none -> Ojs.string_to_js "none"
        | `L_s74_flipY -> Ojs.string_to_js "flipY"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6970 : Ojs.t) -> t_of_js x6970
    and t_0_to_js : t_0 -> Ojs.t = fun (x6969 : t) -> t_to_js x6969
  end
module ColorSpaceConversion =
  struct
    type t = [ `L_s128_none  | `L_s57_default ]
    let rec t_of_js : Ojs.t -> t =
      fun (x6972 : Ojs.t) ->
        let x6973 = x6972 in
        match Ojs.string_of_js x6973 with
        | "none" -> `L_s128_none
        | "default" -> `L_s57_default
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun (x6971 : [ `L_s128_none  | `L_s57_default ]) ->
        match x6971 with
        | `L_s128_none -> Ojs.string_to_js "none"
        | `L_s57_default -> Ojs.string_to_js "default"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6975 : Ojs.t) -> t_of_js x6975
    and t_0_to_js : t_0 -> Ojs.t = fun (x6974 : t) -> t_to_js x6974
  end
module ImageBitmapOptions =
  struct
    type t = [ `ImageBitmapOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6977 : Ojs.t) -> t_of_js x6977
    and t_0_to_js : t_0 -> Ojs.t = fun (x6976 : t) -> t_to_js x6976
    type tags = [ `ImageBitmapOptions ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ImageBitmapOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6980 : Ojs.t) -> intf_of_js __tags_of_js x6980
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6978 : __tags intf) -> intf_to_js __tags_to_js x6978
    let (get_colorSpaceConversion : 'tags this -> ColorSpaceConversion.t) =
      fun (x6982 : 'tags this) ->
        ColorSpaceConversion.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6982)
             "colorSpaceConversion")
    let (set_colorSpaceConversion :
      'tags this -> ColorSpaceConversion.t -> unit) =
      fun (x6984 : 'tags this) ->
        fun (x6985 : ColorSpaceConversion.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6984)
            "colorSpaceConversion" (ColorSpaceConversion.t_to_js x6985)
    let (get_imageOrientation : 'tags this -> ImageOrientation.t) =
      fun (x6987 : 'tags this) ->
        ImageOrientation.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6987) "imageOrientation")
    let (set_imageOrientation : 'tags this -> ImageOrientation.t -> unit) =
      fun (x6989 : 'tags this) ->
        fun (x6990 : ImageOrientation.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6989) "imageOrientation"
            (ImageOrientation.t_to_js x6990)
    let (get_premultiplyAlpha : 'tags this -> PremultiplyAlpha.t) =
      fun (x6992 : 'tags this) ->
        PremultiplyAlpha.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6992) "premultiplyAlpha")
    let (set_premultiplyAlpha : 'tags this -> PremultiplyAlpha.t -> unit) =
      fun (x6994 : 'tags this) ->
        fun (x6995 : PremultiplyAlpha.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6994) "premultiplyAlpha"
            (PremultiplyAlpha.t_to_js x6995)
    let (get_resizeHeight : 'tags this -> float) =
      fun (x6997 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6997) "resizeHeight")
    let (set_resizeHeight : 'tags this -> float -> unit) =
      fun (x6999 : 'tags this) ->
        fun (x7000 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6999) "resizeHeight"
            (Ojs.float_to_js x7000)
    let (get_resizeQuality : 'tags this -> ResizeQuality.t) =
      fun (x7002 : 'tags this) ->
        ResizeQuality.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7002) "resizeQuality")
    let (set_resizeQuality : 'tags this -> ResizeQuality.t -> unit) =
      fun (x7004 : 'tags this) ->
        fun (x7005 : ResizeQuality.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7004) "resizeQuality"
            (ResizeQuality.t_to_js x7005)
    let (get_resizeWidth : 'tags this -> float) =
      fun (x7007 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7007) "resizeWidth")
    let (set_resizeWidth : 'tags this -> float -> unit) =
      fun (x7009 : 'tags this) ->
        fun (x7010 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7009) "resizeWidth"
            (Ojs.float_to_js x7010)
    let cast_from = Obj.magic
  end
module IDBFactory =
  struct
    type t = [ `IDBFactory ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7013 : Ojs.t) -> t_of_js x7013
    and t_0_to_js : t_0 -> Ojs.t = fun (x7012 : t) -> t_to_js x7012
    type tags = [ `IDBFactory ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `IDBFactory ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7016 : Ojs.t) -> intf_of_js __tags_of_js x7016
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7014 : __tags intf) -> intf_to_js __tags_to_js x7014
    let (cmp : 'tags this -> first:any -> second:any -> float) =
      fun (x7020 : 'tags this) ->
        fun ~first:(x7018 : any) ->
          fun ~second:(x7019 : any) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7020) "cmp"
                 [|(any_to_js x7018);(any_to_js x7019)|])
    let (databases : 'tags this -> IDBDatabaseInfo.t list Promise.t_1) =
      fun (x7022 : 'tags this) ->
        Promise.t_1_of_js
          (fun (x7024 : Ojs.t) ->
             Ojs.list_of_js IDBDatabaseInfo.t_of_js x7024)
          (Ojs.call (this_to_js Obj.magic x7022) "databases" [||])
    let (deleteDatabase : 'tags this -> name:string -> IDBOpenDBRequest.t) =
      fun (x7027 : 'tags this) ->
        fun ~name:(x7026 : string) ->
          IDBOpenDBRequest.t_of_js
            (Ojs.call (this_to_js Obj.magic x7027) "deleteDatabase"
               [|(Ojs.string_to_js x7026)|])
    let (open_ :
      'tags this ->
        name:string -> ?version:float -> unit -> IDBOpenDBRequest.t)
      =
      fun (x7033 : 'tags this) ->
        fun ~name:(x7029 : string) ->
          fun ?version:(x7030 : float option) ->
            fun () ->
              IDBOpenDBRequest.t_of_js
                (let x7035 = this_to_js Obj.magic x7033 in
                 Ojs.call (Ojs.get_prop_ascii x7035 "open") "apply"
                   [|x7035;((let x7031 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7031 "push"
                                  [|(Ojs.string_to_js x7029)|]);
                             (match x7030 with
                              | Some x7032 ->
                                  ignore
                                    (Ojs.call x7031 "push"
                                       [|(Ojs.float_to_js x7032)|])
                              | None -> ());
                             x7031))|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "IDBFactory")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "IDBFactory") [||])
  end
module Crypto =
  struct
    type t = [ `Crypto ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7037 : Ojs.t) -> t_of_js x7037
    and t_0_to_js : t_0 -> Ojs.t = fun (x7036 : t) -> t_to_js x7036
    type tags = [ `Crypto ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Crypto ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7040 : Ojs.t) -> intf_of_js __tags_of_js x7040
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7038 : __tags intf) -> intf_to_js __tags_to_js x7038
    let (get_subtle : 'tags this -> SubtleCrypto.t) =
      fun (x7042 : 'tags this) ->
        SubtleCrypto.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7042) "subtle")
    let (getRandomValues : 'tags this -> array:'T -> 'T) =
      fun (x7045 : 'tags this) ->
        fun ~array:(x7044 : 'T) ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic x7045) "getRandomValues"
               [|(Obj.magic x7044)|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Crypto")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Crypto") [||])
  end
module CacheStorage =
  struct
    type t = [ `CacheStorage ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7048 : Ojs.t) -> t_of_js x7048
    and t_0_to_js : t_0 -> Ojs.t = fun (x7047 : t) -> t_to_js x7047
    type tags = [ `CacheStorage ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `CacheStorage ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7051 : Ojs.t) -> intf_of_js __tags_of_js x7051
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7049 : __tags intf) -> intf_to_js __tags_to_js x7049
    let (delete : 'tags this -> cacheName:string -> bool Promise.t_1) =
      fun (x7054 : 'tags this) ->
        fun ~cacheName:(x7053 : string) ->
          Promise.t_1_of_js Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x7054) "delete"
               [|(Ojs.string_to_js x7053)|])
    let (has : 'tags this -> cacheName:string -> bool Promise.t_1) =
      fun (x7058 : 'tags this) ->
        fun ~cacheName:(x7057 : string) ->
          Promise.t_1_of_js Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x7058) "has"
               [|(Ojs.string_to_js x7057)|])
    let (keys : 'tags this -> string list Promise.t_1) =
      fun (x7061 : 'tags this) ->
        Promise.t_1_of_js
          (fun (x7063 : Ojs.t) -> Ojs.list_of_js Ojs.string_of_js x7063)
          (Ojs.call (this_to_js Obj.magic x7061) "keys" [||])
    let (match_ :
      'tags this ->
        request:RequestInfo.t ->
          ?options:MultiCacheQueryOptions.t ->
            unit -> Response.t or_undefined Promise.t_1)
      =
      fun (x7069 : 'tags this) ->
        fun ~request:(x7065 : RequestInfo.t) ->
          fun ?options:(x7066 : MultiCacheQueryOptions.t option) ->
            fun () ->
              Promise.t_1_of_js
                (fun (x7072 : Ojs.t) ->
                   or_undefined_of_js Response.t_of_js x7072)
                (let x7071 = this_to_js Obj.magic x7069 in
                 Ojs.call (Ojs.get_prop_ascii x7071 "match") "apply"
                   [|x7071;((let x7067 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7067 "push"
                                  [|(RequestInfo.t_to_js x7065)|]);
                             (match x7066 with
                              | Some x7068 ->
                                  ignore
                                    (Ojs.call x7067 "push"
                                       [|(MultiCacheQueryOptions.t_to_js
                                            x7068)|])
                              | None -> ());
                             x7067))|])
    let (open_ : 'tags this -> cacheName:string -> Cache.t Promise.t_1) =
      fun (x7075 : 'tags this) ->
        fun ~cacheName:(x7074 : string) ->
          Promise.t_1_of_js Cache.t_of_js
            (Ojs.call (this_to_js Obj.magic x7075) "open"
               [|(Ojs.string_to_js x7074)|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "CacheStorage")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "CacheStorage") [||])
  end
module WindowOrWorkerGlobalScope =
  struct
    type t = [ `WindowOrWorkerGlobalScope ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7079 : Ojs.t) -> t_of_js x7079
    and t_0_to_js : t_0 -> Ojs.t = fun (x7078 : t) -> t_to_js x7078
    type tags = [ `WindowOrWorkerGlobalScope ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `WindowOrWorkerGlobalScope ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7082 : Ojs.t) -> intf_of_js __tags_of_js x7082
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7080 : __tags intf) -> intf_to_js __tags_to_js x7080
    let (get_caches : 'tags this -> CacheStorage.t) =
      fun (x7084 : 'tags this) ->
        CacheStorage.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7084) "caches")
    let (get_crossOriginIsolated : 'tags this -> bool) =
      fun (x7086 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7086)
             "crossOriginIsolated")
    let (get_crypto : 'tags this -> Crypto.t) =
      fun (x7088 : 'tags this) ->
        Crypto.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7088) "crypto")
    let (get_indexedDB : 'tags this -> IDBFactory.t) =
      fun (x7090 : 'tags this) ->
        IDBFactory.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7090) "indexedDB")
    let (get_isSecureContext : 'tags this -> bool) =
      fun (x7092 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7092) "isSecureContext")
    let (get_origin : 'tags this -> string) =
      fun (x7094 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7094) "origin")
    let (get_performance : 'tags this -> Performance.t) =
      fun (x7096 : 'tags this) ->
        Performance.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7096) "performance")
    let (atob : 'tags this -> data:string -> string) =
      fun (x7099 : 'tags this) ->
        fun ~data:(x7098 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x7099) "atob"
               [|(Ojs.string_to_js x7098)|])
    let (btoa : 'tags this -> data:string -> string) =
      fun (x7102 : 'tags this) ->
        fun ~data:(x7101 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x7102) "btoa"
               [|(Ojs.string_to_js x7101)|])
    let (clearInterval : 'tags this -> ?handle:float -> unit -> unit) =
      fun (x7107 : 'tags this) ->
        fun ?handle:(x7104 : float option) ->
          fun () ->
            ignore
              (let x7109 = this_to_js Obj.magic x7107 in
               Ojs.call (Ojs.get_prop_ascii x7109 "clearInterval") "apply"
                 [|x7109;((let x7105 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7104 with
                            | Some x7106 ->
                                ignore
                                  (Ojs.call x7105 "push"
                                     [|(Ojs.float_to_js x7106)|])
                            | None -> ());
                           x7105))|])
    let (clearTimeout : 'tags this -> ?handle:float -> unit -> unit) =
      fun (x7113 : 'tags this) ->
        fun ?handle:(x7110 : float option) ->
          fun () ->
            ignore
              (let x7115 = this_to_js Obj.magic x7113 in
               Ojs.call (Ojs.get_prop_ascii x7115 "clearTimeout") "apply"
                 [|x7115;((let x7111 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7110 with
                            | Some x7112 ->
                                ignore
                                  (Ojs.call x7111 "push"
                                     [|(Ojs.float_to_js x7112)|])
                            | None -> ());
                           x7111))|])
    let (createImageBitmap :
      'tags this ->
        image:ImageBitmapSource.t ->
          ?options:ImageBitmapOptions.t -> unit -> ImageBitmap.t Promise.t_1)
      =
      fun (x7120 : 'tags this) ->
        fun ~image:(x7116 : ImageBitmapSource.t) ->
          fun ?options:(x7117 : ImageBitmapOptions.t option) ->
            fun () ->
              Promise.t_1_of_js ImageBitmap.t_of_js
                (let x7122 = this_to_js Obj.magic x7120 in
                 Ojs.call (Ojs.get_prop_ascii x7122 "createImageBitmap")
                   "apply"
                   [|x7122;((let x7118 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7118 "push"
                                  [|(ImageBitmapSource.t_to_js x7116)|]);
                             (match x7117 with
                              | Some x7119 ->
                                  ignore
                                    (Ojs.call x7118 "push"
                                       [|(ImageBitmapOptions.t_to_js x7119)|])
                              | None -> ());
                             x7118))|])
    let (createImageBitmap' :
      'tags this ->
        image:ImageBitmapSource.t ->
          sx:float ->
            sy:float ->
              sw:float ->
                sh:float ->
                  ?options:ImageBitmapOptions.t ->
                    unit -> ImageBitmap.t Promise.t_1)
      =
      fun (x7132 : 'tags this) ->
        fun ~image:(x7124 : ImageBitmapSource.t) ->
          fun ~sx:(x7125 : float) ->
            fun ~sy:(x7126 : float) ->
              fun ~sw:(x7127 : float) ->
                fun ~sh:(x7128 : float) ->
                  fun ?options:(x7129 : ImageBitmapOptions.t option) ->
                    fun () ->
                      Promise.t_1_of_js ImageBitmap.t_of_js
                        (let x7134 = this_to_js Obj.magic x7132 in
                         Ojs.call
                           (Ojs.get_prop_ascii x7134 "createImageBitmap")
                           "apply"
                           [|x7134;((let x7130 =
                                       Ojs.new_obj
                                         (Ojs.get_prop_ascii Ojs.global
                                            "Array") [||] in
                                     ignore
                                       (Ojs.call x7130 "push"
                                          [|(ImageBitmapSource.t_to_js x7124)|]);
                                     ignore
                                       (Ojs.call x7130 "push"
                                          [|(Ojs.float_to_js x7125)|]);
                                     ignore
                                       (Ojs.call x7130 "push"
                                          [|(Ojs.float_to_js x7126)|]);
                                     ignore
                                       (Ojs.call x7130 "push"
                                          [|(Ojs.float_to_js x7127)|]);
                                     ignore
                                       (Ojs.call x7130 "push"
                                          [|(Ojs.float_to_js x7128)|]);
                                     (match x7129 with
                                      | Some x7131 ->
                                          ignore
                                            (Ojs.call x7130 "push"
                                               [|(ImageBitmapOptions.t_to_js
                                                    x7131)|])
                                      | None -> ());
                                     x7130))|])
    let (fetch :
      'tags this ->
        input:RequestInfo.t ->
          ?init:RequestInit.t -> unit -> Response.t Promise.t_1)
      =
      fun (x7140 : 'tags this) ->
        fun ~input:(x7136 : RequestInfo.t) ->
          fun ?init:(x7137 : RequestInit.t option) ->
            fun () ->
              Promise.t_1_of_js Response.t_of_js
                (let x7142 = this_to_js Obj.magic x7140 in
                 Ojs.call (Ojs.get_prop_ascii x7142 "fetch") "apply"
                   [|x7142;((let x7138 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7138 "push"
                                  [|(RequestInfo.t_to_js x7136)|]);
                             (match x7137 with
                              | Some x7139 ->
                                  ignore
                                    (Ojs.call x7138 "push"
                                       [|(RequestInit.t_to_js x7139)|])
                              | None -> ());
                             x7138))|])
    let (queueMicrotask : 'tags this -> callback:VoidFunction.t -> unit) =
      fun (x7145 : 'tags this) ->
        fun ~callback:(x7144 : VoidFunction.t) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x7145) "queueMicrotask"
               [|(VoidFunction.t_to_js x7144)|])
    let (setInterval :
      'tags this ->
        handler:TimerHandler.t ->
          ?timeout:float -> arguments:any list -> unit -> float)
      =
      fun (x7153 : 'tags this) ->
        fun ~handler:(x7147 : TimerHandler.t) ->
          fun ?timeout:(x7148 : float option) ->
            fun ~arguments:(x7149 : any list) ->
              fun () ->
                Ojs.float_of_js
                  (let x7155 = this_to_js Obj.magic x7153 in
                   Ojs.call (Ojs.get_prop_ascii x7155 "setInterval") "apply"
                     [|x7155;((let x7150 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7150 "push"
                                    [|(TimerHandler.t_to_js x7147)|]);
                               (match x7148 with
                                | Some x7152 ->
                                    ignore
                                      (Ojs.call x7150 "push"
                                         [|(Ojs.float_to_js x7152)|])
                                | None -> ());
                               List.iter
                                 (fun (x7151 : any) ->
                                    ignore
                                      (Ojs.call x7150 "push"
                                         [|(any_to_js x7151)|])) x7149;
                               x7150))|])
    let (setTimeout :
      'tags this ->
        handler:TimerHandler.t ->
          ?timeout:float -> arguments:any list -> unit -> float)
      =
      fun (x7162 : 'tags this) ->
        fun ~handler:(x7156 : TimerHandler.t) ->
          fun ?timeout:(x7157 : float option) ->
            fun ~arguments:(x7158 : any list) ->
              fun () ->
                Ojs.float_of_js
                  (let x7164 = this_to_js Obj.magic x7162 in
                   Ojs.call (Ojs.get_prop_ascii x7164 "setTimeout") "apply"
                     [|x7164;((let x7159 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7159 "push"
                                    [|(TimerHandler.t_to_js x7156)|]);
                               (match x7157 with
                                | Some x7161 ->
                                    ignore
                                      (Ojs.call x7159 "push"
                                         [|(Ojs.float_to_js x7161)|])
                                | None -> ());
                               List.iter
                                 (fun (x7160 : any) ->
                                    ignore
                                      (Ojs.call x7159 "push"
                                         [|(any_to_js x7160)|])) x7158;
                               x7159))|])
    let cast_from = Obj.magic
  end
module FontFaceSource =
  struct
    type t = [ `FontFaceSource ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7166 : Ojs.t) -> t_of_js x7166
    and t_0_to_js : t_0 -> Ojs.t = fun (x7165 : t) -> t_to_js x7165
    type tags = [ `FontFaceSource ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `FontFaceSource ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7169 : Ojs.t) -> intf_of_js __tags_of_js x7169
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7167 : __tags intf) -> intf_to_js __tags_to_js x7167
    let (get_fonts : 'tags this -> FontFaceSet.t) =
      fun (x7171 : 'tags this) ->
        FontFaceSet.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7171) "fonts")
    let cast_from = Obj.magic
  end
module WorkerGlobalScope =
  struct
    type t =
      [ `EventTarget  | `FontFaceSource  | `WindowOrWorkerGlobalScope 
      | `WorkerGlobalScope ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7174 : Ojs.t) -> t_of_js x7174
    and t_0_to_js : t_0 -> Ojs.t = fun (x7173 : t) -> t_to_js x7173
    type tags =
      [ `EventTarget  | `FontFaceSource  | `WindowOrWorkerGlobalScope 
      | `WorkerGlobalScope ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `WorkerGlobalScope ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7177 : Ojs.t) -> intf_of_js __tags_of_js x7177
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7175 : __tags intf) -> intf_to_js __tags_to_js x7175
    let (get_location : 'tags this -> WorkerLocation.t) =
      fun (x7179 : 'tags this) ->
        WorkerLocation.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7179) "location")
    let (get_navigator : 'tags this -> WorkerNavigator.t) =
      fun (x7181 : 'tags this) ->
        WorkerNavigator.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7181) "navigator")
    let (get_onerror :
      'tags this -> (this:t -> ev:ErrorEvent.t -> any) or_null) =
      fun (x7183 : 'tags this) ->
        or_null_of_js
          (fun (x7185 : Ojs.t) ->
             fun ~this:(x7186 : t) ->
               fun ~ev:(x7187 : ErrorEvent.t) ->
                 any_of_js
                   (Ojs.apply x7185
                      [|(t_to_js x7186);(ErrorEvent.t_to_js x7187)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7183) "onerror")
    let (set_onerror :
      'tags this -> (this:t -> ev:ErrorEvent.t -> any) or_null -> unit) =
      fun (x7188 : 'tags this) ->
        fun (x7189 : (this:t -> ev:ErrorEvent.t -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7188) "onerror"
            (or_null_to_js
               (fun (x7190 : this:t -> ev:ErrorEvent.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x7191 : Ojs.t) ->
                       fun (x7192 : Ojs.t) ->
                         any_to_js
                           (x7190 ~this:(t_of_js x7191)
                              ~ev:(ErrorEvent.t_of_js x7192)))) x7189)
    let (get_onlanguagechange :
      'tags this -> (this:t -> ev:Event.t -> any) or_null) =
      fun (x7194 : 'tags this) ->
        or_null_of_js
          (fun (x7196 : Ojs.t) ->
             fun ~this:(x7197 : t) ->
               fun ~ev:(x7198 : Event.t) ->
                 any_of_js
                   (Ojs.apply x7196 [|(t_to_js x7197);(Event.t_to_js x7198)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7194) "onlanguagechange")
    let (set_onlanguagechange :
      'tags this -> (this:t -> ev:Event.t -> any) or_null -> unit) =
      fun (x7199 : 'tags this) ->
        fun (x7200 : (this:t -> ev:Event.t -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7199) "onlanguagechange"
            (or_null_to_js
               (fun (x7201 : this:t -> ev:Event.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x7202 : Ojs.t) ->
                       fun (x7203 : Ojs.t) ->
                         any_to_js
                           (x7201 ~this:(t_of_js x7202)
                              ~ev:(Event.t_of_js x7203)))) x7200)
    let (get_onoffline : 'tags this -> (this:t -> ev:Event.t -> any) or_null)
      =
      fun (x7205 : 'tags this) ->
        or_null_of_js
          (fun (x7207 : Ojs.t) ->
             fun ~this:(x7208 : t) ->
               fun ~ev:(x7209 : Event.t) ->
                 any_of_js
                   (Ojs.apply x7207 [|(t_to_js x7208);(Event.t_to_js x7209)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7205) "onoffline")
    let (set_onoffline :
      'tags this -> (this:t -> ev:Event.t -> any) or_null -> unit) =
      fun (x7210 : 'tags this) ->
        fun (x7211 : (this:t -> ev:Event.t -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7210) "onoffline"
            (or_null_to_js
               (fun (x7212 : this:t -> ev:Event.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x7213 : Ojs.t) ->
                       fun (x7214 : Ojs.t) ->
                         any_to_js
                           (x7212 ~this:(t_of_js x7213)
                              ~ev:(Event.t_of_js x7214)))) x7211)
    let (get_ononline : 'tags this -> (this:t -> ev:Event.t -> any) or_null)
      =
      fun (x7216 : 'tags this) ->
        or_null_of_js
          (fun (x7218 : Ojs.t) ->
             fun ~this:(x7219 : t) ->
               fun ~ev:(x7220 : Event.t) ->
                 any_of_js
                   (Ojs.apply x7218 [|(t_to_js x7219);(Event.t_to_js x7220)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7216) "ononline")
    let (set_ononline :
      'tags this -> (this:t -> ev:Event.t -> any) or_null -> unit) =
      fun (x7221 : 'tags this) ->
        fun (x7222 : (this:t -> ev:Event.t -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7221) "ononline"
            (or_null_to_js
               (fun (x7223 : this:t -> ev:Event.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x7224 : Ojs.t) ->
                       fun (x7225 : Ojs.t) ->
                         any_to_js
                           (x7223 ~this:(t_of_js x7224)
                              ~ev:(Event.t_of_js x7225)))) x7222)
    let (get_onrejectionhandled :
      'tags this -> (this:t -> ev:PromiseRejectionEvent.t -> any) or_null) =
      fun (x7227 : 'tags this) ->
        or_null_of_js
          (fun (x7229 : Ojs.t) ->
             fun ~this:(x7230 : t) ->
               fun ~ev:(x7231 : PromiseRejectionEvent.t) ->
                 any_of_js
                   (Ojs.apply x7229
                      [|(t_to_js x7230);(PromiseRejectionEvent.t_to_js x7231)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7227)
             "onrejectionhandled")
    let (set_onrejectionhandled :
      'tags this ->
        (this:t -> ev:PromiseRejectionEvent.t -> any) or_null -> unit)
      =
      fun (x7232 : 'tags this) ->
        fun (x7233 : (this:t -> ev:PromiseRejectionEvent.t -> any) or_null)
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7232)
            "onrejectionhandled"
            (or_null_to_js
               (fun (x7234 : this:t -> ev:PromiseRejectionEvent.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x7235 : Ojs.t) ->
                       fun (x7236 : Ojs.t) ->
                         any_to_js
                           (x7234 ~this:(t_of_js x7235)
                              ~ev:(PromiseRejectionEvent.t_of_js x7236))))
               x7233)
    let (get_onunhandledrejection :
      'tags this -> (this:t -> ev:PromiseRejectionEvent.t -> any) or_null) =
      fun (x7238 : 'tags this) ->
        or_null_of_js
          (fun (x7240 : Ojs.t) ->
             fun ~this:(x7241 : t) ->
               fun ~ev:(x7242 : PromiseRejectionEvent.t) ->
                 any_of_js
                   (Ojs.apply x7240
                      [|(t_to_js x7241);(PromiseRejectionEvent.t_to_js x7242)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7238)
             "onunhandledrejection")
    let (set_onunhandledrejection :
      'tags this ->
        (this:t -> ev:PromiseRejectionEvent.t -> any) or_null -> unit)
      =
      fun (x7243 : 'tags this) ->
        fun (x7244 : (this:t -> ev:PromiseRejectionEvent.t -> any) or_null)
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7243)
            "onunhandledrejection"
            (or_null_to_js
               (fun (x7245 : this:t -> ev:PromiseRejectionEvent.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x7246 : Ojs.t) ->
                       fun (x7247 : Ojs.t) ->
                         any_to_js
                           (x7245 ~this:(t_of_js x7246)
                              ~ev:(PromiseRejectionEvent.t_of_js x7247))))
               x7244)
    let (get_self : 'tags this -> (t, any) intersection2) =
      fun (x7249 : 'tags this) ->
        intersection2_of_js t_of_js any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7249) "self")
    let (importScripts : 'tags this -> urls:URL.t or_string list -> unit) =
      fun (x7257 : 'tags this) ->
        fun ~urls:(x7253 : URL.t or_string list) ->
          ignore
            (let x7259 = this_to_js Obj.magic x7257 in
             Ojs.call (Ojs.get_prop_ascii x7259 "importScripts") "apply"
               [|x7259;((let x7254 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x7255 : URL.t or_string) ->
                              ignore
                                (Ojs.call x7254 "push"
                                   [|(or_string_to_js URL.t_to_js x7255)|]))
                           x7253;
                         x7254))|])
    let (addEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x7268 : 'tags this) ->
        fun ~type_:(x7260 : 'K) ->
          fun ~listener:(x7261 : this:t -> ev:any -> any) ->
            fun
              ?options:(x7262 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x7270 = this_to_js Obj.magic x7268 in
                   Ojs.call (Ojs.get_prop_ascii x7270 "addEventListener")
                     "apply"
                     [|x7270;((let x7263 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7263 "push" [|(Obj.magic x7260)|]);
                               ignore
                                 (Ojs.call x7263 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x7266 : Ojs.t) ->
                                            fun (x7267 : Ojs.t) ->
                                              any_to_js
                                                (x7261 ~this:(t_of_js x7266)
                                                   ~ev:(any_of_js x7267))))|]);
                               (match x7262 with
                                | Some x7264 ->
                                    ignore
                                      (Ojs.call x7263 "push"
                                         [|(or_boolean_to_js
                                              AddEventListenerOptions.t_to_js
                                              x7264)|])
                                | None -> ());
                               x7263))|])
    let (addEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x7277 : 'tags this) ->
        fun ~type_:(x7271 : string) ->
          fun ~listener:(x7272 : EventListenerOrEventListenerObject.t) ->
            fun
              ?options:(x7273 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x7279 = this_to_js Obj.magic x7277 in
                   Ojs.call (Ojs.get_prop_ascii x7279 "addEventListener")
                     "apply"
                     [|x7279;((let x7274 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7274 "push"
                                    [|(Ojs.string_to_js x7271)|]);
                               ignore
                                 (Ojs.call x7274 "push"
                                    [|(EventListenerOrEventListenerObject.t_to_js
                                         x7272)|]);
                               (match x7273 with
                                | Some x7275 ->
                                    ignore
                                      (Ojs.call x7274 "push"
                                         [|(or_boolean_to_js
                                              AddEventListenerOptions.t_to_js
                                              x7275)|])
                                | None -> ());
                               x7274))|])
    let (removeEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x7288 : 'tags this) ->
        fun ~type_:(x7280 : 'K) ->
          fun ~listener:(x7281 : this:t -> ev:any -> any) ->
            fun ?options:(x7282 : EventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x7290 = this_to_js Obj.magic x7288 in
                   Ojs.call (Ojs.get_prop_ascii x7290 "removeEventListener")
                     "apply"
                     [|x7290;((let x7283 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7283 "push" [|(Obj.magic x7280)|]);
                               ignore
                                 (Ojs.call x7283 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x7286 : Ojs.t) ->
                                            fun (x7287 : Ojs.t) ->
                                              any_to_js
                                                (x7281 ~this:(t_of_js x7286)
                                                   ~ev:(any_of_js x7287))))|]);
                               (match x7282 with
                                | Some x7284 ->
                                    ignore
                                      (Ojs.call x7283 "push"
                                         [|(or_boolean_to_js
                                              EventListenerOptions.t_to_js
                                              x7284)|])
                                | None -> ());
                               x7283))|])
    let (removeEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x7297 : 'tags this) ->
        fun ~type_:(x7291 : string) ->
          fun ~listener:(x7292 : EventListenerOrEventListenerObject.t) ->
            fun ?options:(x7293 : EventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x7299 = this_to_js Obj.magic x7297 in
                   Ojs.call (Ojs.get_prop_ascii x7299 "removeEventListener")
                     "apply"
                     [|x7299;((let x7294 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7294 "push"
                                    [|(Ojs.string_to_js x7291)|]);
                               ignore
                                 (Ojs.call x7294 "push"
                                    [|(EventListenerOrEventListenerObject.t_to_js
                                         x7292)|]);
                               (match x7293 with
                                | Some x7295 ->
                                    ignore
                                      (Ojs.call x7294 "push"
                                         [|(or_boolean_to_js
                                              EventListenerOptions.t_to_js
                                              x7295)|])
                                | None -> ());
                               x7294))|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WorkerGlobalScope") "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WorkerGlobalScope")
             [||])
  end
module SharedWorkerGlobalScope =
  struct
    type t =
      [ `EventTarget  | `FontFaceSource  | `SharedWorkerGlobalScope 
      | `WindowOrWorkerGlobalScope  | `WorkerGlobalScope ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7301 : Ojs.t) -> t_of_js x7301
    and t_0_to_js : t_0 -> Ojs.t = fun (x7300 : t) -> t_to_js x7300
    type tags =
      [ `EventTarget  | `FontFaceSource  | `SharedWorkerGlobalScope 
      | `WindowOrWorkerGlobalScope  | `WorkerGlobalScope ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `SharedWorkerGlobalScope ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7304 : Ojs.t) -> intf_of_js __tags_of_js x7304
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7302 : __tags intf) -> intf_to_js __tags_to_js x7302
    let (get_name : 'tags this -> string) =
      fun (x7306 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7306) "name")
    let (get_onconnect :
      'tags this -> (this:t -> ev:MessageEvent.t_0 -> any) or_null) =
      fun (x7308 : 'tags this) ->
        or_null_of_js
          (fun (x7310 : Ojs.t) ->
             fun ~this:(x7311 : t) ->
               fun ~ev:(x7312 : MessageEvent.t_0) ->
                 any_of_js
                   (Ojs.apply x7310
                      [|(t_to_js x7311);(MessageEvent.t_0_to_js x7312)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7308) "onconnect")
    let (set_onconnect :
      'tags this -> (this:t -> ev:MessageEvent.t_0 -> any) or_null -> unit) =
      fun (x7313 : 'tags this) ->
        fun (x7314 : (this:t -> ev:MessageEvent.t_0 -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7313) "onconnect"
            (or_null_to_js
               (fun (x7315 : this:t -> ev:MessageEvent.t_0 -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x7316 : Ojs.t) ->
                       fun (x7317 : Ojs.t) ->
                         any_to_js
                           (x7315 ~this:(t_of_js x7316)
                              ~ev:(MessageEvent.t_0_of_js x7317)))) x7314)
    let (close : 'tags this -> unit) =
      fun (x7319 : 'tags this) ->
        ignore (Ojs.call (this_to_js Obj.magic x7319) "close" [||])
    let (addEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x7329 : 'tags this) ->
        fun ~type_:(x7321 : 'K) ->
          fun ~listener:(x7322 : this:t -> ev:any -> any) ->
            fun
              ?options:(x7323 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x7331 = this_to_js Obj.magic x7329 in
                   Ojs.call (Ojs.get_prop_ascii x7331 "addEventListener")
                     "apply"
                     [|x7331;((let x7324 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7324 "push" [|(Obj.magic x7321)|]);
                               ignore
                                 (Ojs.call x7324 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x7327 : Ojs.t) ->
                                            fun (x7328 : Ojs.t) ->
                                              any_to_js
                                                (x7322 ~this:(t_of_js x7327)
                                                   ~ev:(any_of_js x7328))))|]);
                               (match x7323 with
                                | Some x7325 ->
                                    ignore
                                      (Ojs.call x7324 "push"
                                         [|(or_boolean_to_js
                                              AddEventListenerOptions.t_to_js
                                              x7325)|])
                                | None -> ());
                               x7324))|])
    let (addEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x7338 : 'tags this) ->
        fun ~type_:(x7332 : string) ->
          fun ~listener:(x7333 : EventListenerOrEventListenerObject.t) ->
            fun
              ?options:(x7334 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x7340 = this_to_js Obj.magic x7338 in
                   Ojs.call (Ojs.get_prop_ascii x7340 "addEventListener")
                     "apply"
                     [|x7340;((let x7335 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7335 "push"
                                    [|(Ojs.string_to_js x7332)|]);
                               ignore
                                 (Ojs.call x7335 "push"
                                    [|(EventListenerOrEventListenerObject.t_to_js
                                         x7333)|]);
                               (match x7334 with
                                | Some x7336 ->
                                    ignore
                                      (Ojs.call x7335 "push"
                                         [|(or_boolean_to_js
                                              AddEventListenerOptions.t_to_js
                                              x7336)|])
                                | None -> ());
                               x7335))|])
    let (removeEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x7349 : 'tags this) ->
        fun ~type_:(x7341 : 'K) ->
          fun ~listener:(x7342 : this:t -> ev:any -> any) ->
            fun ?options:(x7343 : EventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x7351 = this_to_js Obj.magic x7349 in
                   Ojs.call (Ojs.get_prop_ascii x7351 "removeEventListener")
                     "apply"
                     [|x7351;((let x7344 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7344 "push" [|(Obj.magic x7341)|]);
                               ignore
                                 (Ojs.call x7344 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x7347 : Ojs.t) ->
                                            fun (x7348 : Ojs.t) ->
                                              any_to_js
                                                (x7342 ~this:(t_of_js x7347)
                                                   ~ev:(any_of_js x7348))))|]);
                               (match x7343 with
                                | Some x7345 ->
                                    ignore
                                      (Ojs.call x7344 "push"
                                         [|(or_boolean_to_js
                                              EventListenerOptions.t_to_js
                                              x7345)|])
                                | None -> ());
                               x7344))|])
    let (removeEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x7358 : 'tags this) ->
        fun ~type_:(x7352 : string) ->
          fun ~listener:(x7353 : EventListenerOrEventListenerObject.t) ->
            fun ?options:(x7354 : EventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x7360 = this_to_js Obj.magic x7358 in
                   Ojs.call (Ojs.get_prop_ascii x7360 "removeEventListener")
                     "apply"
                     [|x7360;((let x7355 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7355 "push"
                                    [|(Ojs.string_to_js x7352)|]);
                               ignore
                                 (Ojs.call x7355 "push"
                                    [|(EventListenerOrEventListenerObject.t_to_js
                                         x7353)|]);
                               (match x7354 with
                                | Some x7356 ->
                                    ignore
                                      (Ojs.call x7355 "push"
                                         [|(or_boolean_to_js
                                              EventListenerOptions.t_to_js
                                              x7356)|])
                                | None -> ());
                               x7355))|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "SharedWorkerGlobalScope")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj
             (Ojs.get_prop_ascii Ojs.global "SharedWorkerGlobalScope") 
             [||])
  end
module AnonymousInterface98 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x7362 : Ojs.t) -> x7362
    and t_to_js : t -> Ojs.t = fun (x7361 : Ojs.t) -> x7361
    let (get_prototype : t -> SharedWorkerGlobalScope.t) =
      fun (x7363 : t) ->
        SharedWorkerGlobalScope.t_of_js
          (Ojs.get_prop_ascii (t_to_js x7363) "prototype")
    let (set_prototype : t -> SharedWorkerGlobalScope.t -> unit) =
      fun (x7364 : t) ->
        fun (x7365 : SharedWorkerGlobalScope.t) ->
          Ojs.set_prop_ascii (t_to_js x7364) "prototype"
            (SharedWorkerGlobalScope.t_to_js x7365)
    let (create : t -> SharedWorkerGlobalScope.t) =
      fun (x7366 : t) ->
        SharedWorkerGlobalScope.t_of_js (Ojs.new_obj (t_to_js x7366) [||])
  end
module GetNotificationOptions =
  struct
    type t = [ `GetNotificationOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7368 : Ojs.t) -> t_of_js x7368
    and t_0_to_js : t_0 -> Ojs.t = fun (x7367 : t) -> t_to_js x7367
    type tags = [ `GetNotificationOptions ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `GetNotificationOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7371 : Ojs.t) -> intf_of_js __tags_of_js x7371
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7369 : __tags intf) -> intf_to_js __tags_to_js x7369
    let (get_tag : 'tags this -> string) =
      fun (x7373 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7373) "tag")
    let (set_tag : 'tags this -> string -> unit) =
      fun (x7375 : 'tags this) ->
        fun (x7376 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7375) "tag"
            (Ojs.string_to_js x7376)
    let cast_from = Obj.magic
  end
module ServiceWorkerUpdateViaCache =
  struct
    type t = [ `L_s128_none  | `L_s35_all  | `L_s91_imports ]
    let rec t_of_js : Ojs.t -> t =
      fun (x7379 : Ojs.t) ->
        let x7380 = x7379 in
        match Ojs.string_of_js x7380 with
        | "none" -> `L_s128_none
        | "all" -> `L_s35_all
        | "imports" -> `L_s91_imports
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun (x7378 : [ `L_s128_none  | `L_s35_all  | `L_s91_imports ]) ->
        match x7378 with
        | `L_s128_none -> Ojs.string_to_js "none"
        | `L_s35_all -> Ojs.string_to_js "all"
        | `L_s91_imports -> Ojs.string_to_js "imports"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7382 : Ojs.t) -> t_of_js x7382
    and t_0_to_js : t_0 -> Ojs.t = fun (x7381 : t) -> t_to_js x7381
  end
module PushSubscriptionOptionsInit =
  struct
    type t = [ `PushSubscriptionOptionsInit ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7384 : Ojs.t) -> t_of_js x7384
    and t_0_to_js : t_0 -> Ojs.t = fun (x7383 : t) -> t_to_js x7383
    type tags = [ `PushSubscriptionOptionsInit ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `PushSubscriptionOptionsInit ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7387 : Ojs.t) -> intf_of_js __tags_of_js x7387
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7385 : __tags intf) -> intf_to_js __tags_to_js x7385
    let (get_applicationServerKey :
      'tags this -> BufferSource.t or_string or_null) =
      fun (x7389 : 'tags this) ->
        or_null_of_js
          (fun (x7391 : Ojs.t) -> or_string_of_js BufferSource.t_of_js x7391)
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7389)
             "applicationServerKey")
    let (set_applicationServerKey :
      'tags this -> BufferSource.t or_string or_null -> unit) =
      fun (x7393 : 'tags this) ->
        fun (x7394 : BufferSource.t or_string or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7393)
            "applicationServerKey"
            (or_null_to_js
               (fun (x7395 : BufferSource.t or_string) ->
                  or_string_to_js BufferSource.t_to_js x7395) x7394)
    let (get_userVisibleOnly : 'tags this -> bool) =
      fun (x7398 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7398) "userVisibleOnly")
    let (set_userVisibleOnly : 'tags this -> bool -> unit) =
      fun (x7400 : 'tags this) ->
        fun (x7401 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7400) "userVisibleOnly"
            (Ojs.bool_to_js x7401)
    let cast_from = Obj.magic
  end
module PushSubscriptionOptions =
  struct
    type t = [ `PushSubscriptionOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7404 : Ojs.t) -> t_of_js x7404
    and t_0_to_js : t_0 -> Ojs.t = fun (x7403 : t) -> t_to_js x7403
    type tags = [ `PushSubscriptionOptions ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `PushSubscriptionOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7407 : Ojs.t) -> intf_of_js __tags_of_js x7407
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7405 : __tags intf) -> intf_to_js __tags_to_js x7405
    let (get_applicationServerKey : 'tags this -> ArrayBuffer.t_0 or_null) =
      fun (x7409 : 'tags this) ->
        or_null_of_js ArrayBuffer.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7409)
             "applicationServerKey")
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "PushSubscriptionOptions")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj
             (Ojs.get_prop_ascii Ojs.global "PushSubscriptionOptions") 
             [||])
  end
module PushSubscriptionJSON =
  struct
    type t = [ `PushSubscriptionJSON ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7413 : Ojs.t) -> t_of_js x7413
    and t_0_to_js : t_0 -> Ojs.t = fun (x7412 : t) -> t_to_js x7412
    type tags = [ `PushSubscriptionJSON ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `PushSubscriptionJSON ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7416 : Ojs.t) -> intf_of_js __tags_of_js x7416
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7414 : __tags intf) -> intf_to_js __tags_to_js x7414
    let (get_endpoint : 'tags this -> string) =
      fun (x7418 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7418) "endpoint")
    let (set_endpoint : 'tags this -> string -> unit) =
      fun (x7420 : 'tags this) ->
        fun (x7421 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7420) "endpoint"
            (Ojs.string_to_js x7421)
    let (get_expirationTime : 'tags this -> DOMTimeStamp.t or_null) =
      fun (x7423 : 'tags this) ->
        or_null_of_js DOMTimeStamp.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7423) "expirationTime")
    let (set_expirationTime : 'tags this -> DOMTimeStamp.t or_null -> unit) =
      fun (x7426 : 'tags this) ->
        fun (x7427 : DOMTimeStamp.t or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7426) "expirationTime"
            (or_null_to_js DOMTimeStamp.t_to_js x7427)
    let (get_keys : 'tags this -> (string, string) Record.t_2) =
      fun (x7430 : 'tags this) ->
        Record.t_2_of_js Ojs.string_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7430) "keys")
    let (set_keys : 'tags this -> (string, string) Record.t_2 -> unit) =
      fun (x7434 : 'tags this) ->
        fun (x7435 : (string, string) Record.t_2) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7434) "keys"
            (Record.t_2_to_js Ojs.string_to_js Ojs.string_to_js x7435)
    let cast_from = Obj.magic
  end
module PushEncryptionKeyName =
  struct
    type t = [ `L_s143_p256dh  | `L_s40_auth ]
    let rec t_of_js : Ojs.t -> t =
      fun (x7440 : Ojs.t) ->
        let x7441 = x7440 in
        match Ojs.string_of_js x7441 with
        | "p256dh" -> `L_s143_p256dh
        | "auth" -> `L_s40_auth
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun (x7439 : [ `L_s143_p256dh  | `L_s40_auth ]) ->
        match x7439 with
        | `L_s143_p256dh -> Ojs.string_to_js "p256dh"
        | `L_s40_auth -> Ojs.string_to_js "auth"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7443 : Ojs.t) -> t_of_js x7443
    and t_0_to_js : t_0 -> Ojs.t = fun (x7442 : t) -> t_to_js x7442
  end
module PushSubscription =
  struct
    type t = [ `PushSubscription ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7445 : Ojs.t) -> t_of_js x7445
    and t_0_to_js : t_0 -> Ojs.t = fun (x7444 : t) -> t_to_js x7444
    type tags = [ `PushSubscription ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `PushSubscription ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7448 : Ojs.t) -> intf_of_js __tags_of_js x7448
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7446 : __tags intf) -> intf_to_js __tags_to_js x7446
    let (get_endpoint : 'tags this -> string) =
      fun (x7450 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7450) "endpoint")
    let (get_options : 'tags this -> PushSubscriptionOptions.t) =
      fun (x7452 : 'tags this) ->
        PushSubscriptionOptions.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7452) "options")
    let (getKey :
      'tags this -> name:PushEncryptionKeyName.t -> ArrayBuffer.t_0 or_null)
      =
      fun (x7455 : 'tags this) ->
        fun ~name:(x7454 : PushEncryptionKeyName.t) ->
          or_null_of_js ArrayBuffer.t_0_of_js
            (Ojs.call (this_to_js Obj.magic x7455) "getKey"
               [|(PushEncryptionKeyName.t_to_js x7454)|])
    let (toJSON : 'tags this -> PushSubscriptionJSON.t) =
      fun (x7458 : 'tags this) ->
        PushSubscriptionJSON.t_of_js
          (Ojs.call (this_to_js Obj.magic x7458) "toJSON" [||])
    let (unsubscribe : 'tags this -> bool Promise.t_1) =
      fun (x7460 : 'tags this) ->
        Promise.t_1_of_js Ojs.bool_of_js
          (Ojs.call (this_to_js Obj.magic x7460) "unsubscribe" [||])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "PushSubscription") "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "PushSubscription")
             [||])
  end
module PushPermissionState =
  struct
    type t = [ `L_s157_prompt  | `L_s58_denied  | `L_s82_granted ]
    let rec t_of_js : Ojs.t -> t =
      fun (x7464 : Ojs.t) ->
        let x7465 = x7464 in
        match Ojs.string_of_js x7465 with
        | "prompt" -> `L_s157_prompt
        | "denied" -> `L_s58_denied
        | "granted" -> `L_s82_granted
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun (x7463 : [ `L_s157_prompt  | `L_s58_denied  | `L_s82_granted ]) ->
        match x7463 with
        | `L_s157_prompt -> Ojs.string_to_js "prompt"
        | `L_s58_denied -> Ojs.string_to_js "denied"
        | `L_s82_granted -> Ojs.string_to_js "granted"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7467 : Ojs.t) -> t_of_js x7467
    and t_0_to_js : t_0 -> Ojs.t = fun (x7466 : t) -> t_to_js x7466
  end
module PushManager =
  struct
    type t = [ `PushManager ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7469 : Ojs.t) -> t_of_js x7469
    and t_0_to_js : t_0 -> Ojs.t = fun (x7468 : t) -> t_to_js x7468
    type tags = [ `PushManager ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `PushManager ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7472 : Ojs.t) -> intf_of_js __tags_of_js x7472
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7470 : __tags intf) -> intf_to_js __tags_to_js x7470
    let (getSubscription :
      'tags this -> PushSubscription.t or_null Promise.t_1) =
      fun (x7474 : 'tags this) ->
        Promise.t_1_of_js
          (fun (x7476 : Ojs.t) ->
             or_null_of_js PushSubscription.t_of_js x7476)
          (Ojs.call (this_to_js Obj.magic x7474) "getSubscription" [||])
    let (permissionState :
      'tags this ->
        ?options:PushSubscriptionOptionsInit.t ->
          unit -> PushPermissionState.t Promise.t_1)
      =
      fun (x7481 : 'tags this) ->
        fun ?options:(x7478 : PushSubscriptionOptionsInit.t option) ->
          fun () ->
            Promise.t_1_of_js PushPermissionState.t_of_js
              (let x7483 = this_to_js Obj.magic x7481 in
               Ojs.call (Ojs.get_prop_ascii x7483 "permissionState") "apply"
                 [|x7483;((let x7479 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7478 with
                            | Some x7480 ->
                                ignore
                                  (Ojs.call x7479 "push"
                                     [|(PushSubscriptionOptionsInit.t_to_js
                                          x7480)|])
                            | None -> ());
                           x7479))|])
    let (subscribe :
      'tags this ->
        ?options:PushSubscriptionOptionsInit.t ->
          unit -> PushSubscription.t Promise.t_1)
      =
      fun (x7488 : 'tags this) ->
        fun ?options:(x7485 : PushSubscriptionOptionsInit.t option) ->
          fun () ->
            Promise.t_1_of_js PushSubscription.t_of_js
              (let x7490 = this_to_js Obj.magic x7488 in
               Ojs.call (Ojs.get_prop_ascii x7490 "subscribe") "apply"
                 [|x7490;((let x7486 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7485 with
                            | Some x7487 ->
                                ignore
                                  (Ojs.call x7486 "push"
                                     [|(PushSubscriptionOptionsInit.t_to_js
                                          x7487)|])
                            | None -> ());
                           x7486))|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "PushManager")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "PushManager") [||])
    let (supportedContentEncodings : unit -> string list) =
      fun () ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "PushManager")
             "supportedContentEncodings")
  end
module ServiceWorkerRegistration =
  struct
    type t = [ `EventTarget  | `ServiceWorkerRegistration ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7494 : Ojs.t) -> t_of_js x7494
    and t_0_to_js : t_0 -> Ojs.t = fun (x7493 : t) -> t_to_js x7493
    type tags = [ `EventTarget  | `ServiceWorkerRegistration ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `ServiceWorkerRegistration ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7497 : Ojs.t) -> intf_of_js __tags_of_js x7497
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7495 : __tags intf) -> intf_to_js __tags_to_js x7495
    let (get_active : 'tags this -> ServiceWorker.t or_null) =
      fun (x7499 : 'tags this) ->
        or_null_of_js ServiceWorker.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7499) "active")
    let (get_installing : 'tags this -> ServiceWorker.t or_null) =
      fun (x7502 : 'tags this) ->
        or_null_of_js ServiceWorker.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7502) "installing")
    let (get_onupdatefound :
      'tags this -> (this:t -> ev:Event.t -> any) or_null) =
      fun (x7505 : 'tags this) ->
        or_null_of_js
          (fun (x7507 : Ojs.t) ->
             fun ~this:(x7508 : t) ->
               fun ~ev:(x7509 : Event.t) ->
                 any_of_js
                   (Ojs.apply x7507 [|(t_to_js x7508);(Event.t_to_js x7509)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7505) "onupdatefound")
    let (set_onupdatefound :
      'tags this -> (this:t -> ev:Event.t -> any) or_null -> unit) =
      fun (x7510 : 'tags this) ->
        fun (x7511 : (this:t -> ev:Event.t -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7510) "onupdatefound"
            (or_null_to_js
               (fun (x7512 : this:t -> ev:Event.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x7513 : Ojs.t) ->
                       fun (x7514 : Ojs.t) ->
                         any_to_js
                           (x7512 ~this:(t_of_js x7513)
                              ~ev:(Event.t_of_js x7514)))) x7511)
    let (get_pushManager : 'tags this -> PushManager.t) =
      fun (x7516 : 'tags this) ->
        PushManager.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7516) "pushManager")
    let (get_scope : 'tags this -> string) =
      fun (x7518 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7518) "scope")
    let (get_updateViaCache : 'tags this -> ServiceWorkerUpdateViaCache.t) =
      fun (x7520 : 'tags this) ->
        ServiceWorkerUpdateViaCache.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7520) "updateViaCache")
    let (get_waiting : 'tags this -> ServiceWorker.t or_null) =
      fun (x7522 : 'tags this) ->
        or_null_of_js ServiceWorker.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7522) "waiting")
    let (getNotifications :
      'tags this ->
        ?filter:GetNotificationOptions.t ->
          unit -> Notification.t list Promise.t_1)
      =
      fun (x7528 : 'tags this) ->
        fun ?filter:(x7525 : GetNotificationOptions.t option) ->
          fun () ->
            Promise.t_1_of_js
              (fun (x7531 : Ojs.t) ->
                 Ojs.list_of_js Notification.t_of_js x7531)
              (let x7530 = this_to_js Obj.magic x7528 in
               Ojs.call (Ojs.get_prop_ascii x7530 "getNotifications") "apply"
                 [|x7530;((let x7526 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7525 with
                            | Some x7527 ->
                                ignore
                                  (Ojs.call x7526 "push"
                                     [|(GetNotificationOptions.t_to_js x7527)|])
                            | None -> ());
                           x7526))|])
    let (showNotification :
      'tags this ->
        title:string ->
          ?options:NotificationOptions.t -> unit -> unit Promise.t_1)
      =
      fun (x7537 : 'tags this) ->
        fun ~title:(x7533 : string) ->
          fun ?options:(x7534 : NotificationOptions.t option) ->
            fun () ->
              Promise.t_1_of_js Ojs.unit_of_js
                (let x7539 = this_to_js Obj.magic x7537 in
                 Ojs.call (Ojs.get_prop_ascii x7539 "showNotification")
                   "apply"
                   [|x7539;((let x7535 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7535 "push"
                                  [|(Ojs.string_to_js x7533)|]);
                             (match x7534 with
                              | Some x7536 ->
                                  ignore
                                    (Ojs.call x7535 "push"
                                       [|(NotificationOptions.t_to_js x7536)|])
                              | None -> ());
                             x7535))|])
    let (unregister : 'tags this -> bool Promise.t_1) =
      fun (x7541 : 'tags this) ->
        Promise.t_1_of_js Ojs.bool_of_js
          (Ojs.call (this_to_js Obj.magic x7541) "unregister" [||])
    let (update : 'tags this -> unit Promise.t_1) =
      fun (x7544 : 'tags this) ->
        Promise.t_1_of_js Ojs.unit_of_js
          (Ojs.call (this_to_js Obj.magic x7544) "update" [||])
    let (addEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x7555 : 'tags this) ->
        fun ~type_:(x7547 : 'K) ->
          fun ~listener:(x7548 : this:t -> ev:any -> any) ->
            fun
              ?options:(x7549 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x7557 = this_to_js Obj.magic x7555 in
                   Ojs.call (Ojs.get_prop_ascii x7557 "addEventListener")
                     "apply"
                     [|x7557;((let x7550 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7550 "push" [|(Obj.magic x7547)|]);
                               ignore
                                 (Ojs.call x7550 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x7553 : Ojs.t) ->
                                            fun (x7554 : Ojs.t) ->
                                              any_to_js
                                                (x7548 ~this:(t_of_js x7553)
                                                   ~ev:(any_of_js x7554))))|]);
                               (match x7549 with
                                | Some x7551 ->
                                    ignore
                                      (Ojs.call x7550 "push"
                                         [|(or_boolean_to_js
                                              AddEventListenerOptions.t_to_js
                                              x7551)|])
                                | None -> ());
                               x7550))|])
    let (addEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x7564 : 'tags this) ->
        fun ~type_:(x7558 : string) ->
          fun ~listener:(x7559 : EventListenerOrEventListenerObject.t) ->
            fun
              ?options:(x7560 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x7566 = this_to_js Obj.magic x7564 in
                   Ojs.call (Ojs.get_prop_ascii x7566 "addEventListener")
                     "apply"
                     [|x7566;((let x7561 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7561 "push"
                                    [|(Ojs.string_to_js x7558)|]);
                               ignore
                                 (Ojs.call x7561 "push"
                                    [|(EventListenerOrEventListenerObject.t_to_js
                                         x7559)|]);
                               (match x7560 with
                                | Some x7562 ->
                                    ignore
                                      (Ojs.call x7561 "push"
                                         [|(or_boolean_to_js
                                              AddEventListenerOptions.t_to_js
                                              x7562)|])
                                | None -> ());
                               x7561))|])
    let (removeEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x7575 : 'tags this) ->
        fun ~type_:(x7567 : 'K) ->
          fun ~listener:(x7568 : this:t -> ev:any -> any) ->
            fun ?options:(x7569 : EventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x7577 = this_to_js Obj.magic x7575 in
                   Ojs.call (Ojs.get_prop_ascii x7577 "removeEventListener")
                     "apply"
                     [|x7577;((let x7570 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7570 "push" [|(Obj.magic x7567)|]);
                               ignore
                                 (Ojs.call x7570 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x7573 : Ojs.t) ->
                                            fun (x7574 : Ojs.t) ->
                                              any_to_js
                                                (x7568 ~this:(t_of_js x7573)
                                                   ~ev:(any_of_js x7574))))|]);
                               (match x7569 with
                                | Some x7571 ->
                                    ignore
                                      (Ojs.call x7570 "push"
                                         [|(or_boolean_to_js
                                              EventListenerOptions.t_to_js
                                              x7571)|])
                                | None -> ());
                               x7570))|])
    let (removeEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x7584 : 'tags this) ->
        fun ~type_:(x7578 : string) ->
          fun ~listener:(x7579 : EventListenerOrEventListenerObject.t) ->
            fun ?options:(x7580 : EventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x7586 = this_to_js Obj.magic x7584 in
                   Ojs.call (Ojs.get_prop_ascii x7586 "removeEventListener")
                     "apply"
                     [|x7586;((let x7581 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7581 "push"
                                    [|(Ojs.string_to_js x7578)|]);
                               ignore
                                 (Ojs.call x7581 "push"
                                    [|(EventListenerOrEventListenerObject.t_to_js
                                         x7579)|]);
                               (match x7580 with
                                | Some x7582 ->
                                    ignore
                                      (Ojs.call x7581 "push"
                                         [|(or_boolean_to_js
                                              EventListenerOptions.t_to_js
                                              x7582)|])
                                | None -> ());
                               x7581))|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "ServiceWorkerRegistration")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj
             (Ojs.get_prop_ascii Ojs.global "ServiceWorkerRegistration") 
             [||])
  end
module AnonymousInterface97 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x7588 : Ojs.t) -> x7588
    and t_to_js : t -> Ojs.t = fun (x7587 : Ojs.t) -> x7587
    let (get_prototype : t -> ServiceWorkerRegistration.t) =
      fun (x7589 : t) ->
        ServiceWorkerRegistration.t_of_js
          (Ojs.get_prop_ascii (t_to_js x7589) "prototype")
    let (set_prototype : t -> ServiceWorkerRegistration.t -> unit) =
      fun (x7590 : t) ->
        fun (x7591 : ServiceWorkerRegistration.t) ->
          Ojs.set_prop_ascii (t_to_js x7590) "prototype"
            (ServiceWorkerRegistration.t_to_js x7591)
    let (create : t -> ServiceWorkerRegistration.t) =
      fun (x7592 : t) ->
        ServiceWorkerRegistration.t_of_js (Ojs.new_obj (t_to_js x7592) [||])
  end
module VisibilityState =
  struct
    type t = [ `L_s205_visible  | `L_s83_hidden ]
    let rec t_of_js : Ojs.t -> t =
      fun (x7594 : Ojs.t) ->
        let x7595 = x7594 in
        match Ojs.string_of_js x7595 with
        | "visible" -> `L_s205_visible
        | "hidden" -> `L_s83_hidden
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun (x7593 : [ `L_s205_visible  | `L_s83_hidden ]) ->
        match x7593 with
        | `L_s205_visible -> Ojs.string_to_js "visible"
        | `L_s83_hidden -> Ojs.string_to_js "hidden"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7597 : Ojs.t) -> t_of_js x7597
    and t_0_to_js : t_0 -> Ojs.t = fun (x7596 : t) -> t_to_js x7596
  end
module WindowClient =
  struct
    type t = [ `Client  | `WindowClient ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7599 : Ojs.t) -> t_of_js x7599
    and t_0_to_js : t_0 -> Ojs.t = fun (x7598 : t) -> t_to_js x7598
    type tags = [ `Client  | `WindowClient ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `WindowClient ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7602 : Ojs.t) -> intf_of_js __tags_of_js x7602
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7600 : __tags intf) -> intf_to_js __tags_to_js x7600
    let (get_focused : 'tags this -> bool) =
      fun (x7604 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7604) "focused")
    let (get_visibilityState : 'tags this -> VisibilityState.t) =
      fun (x7606 : 'tags this) ->
        VisibilityState.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7606) "visibilityState")
    let (focus : 'tags this -> t Promise.t_1) =
      fun (x7608 : 'tags this) ->
        Promise.t_1_of_js t_of_js
          (Ojs.call (this_to_js Obj.magic x7608) "focus" [||])
    let (navigate :
      'tags this -> url:URL.t or_string -> t or_null Promise.t_1) =
      fun (x7613 : 'tags this) ->
        fun ~url:(x7611 : URL.t or_string) ->
          Promise.t_1_of_js
            (fun (x7615 : Ojs.t) -> or_null_of_js t_of_js x7615)
            (Ojs.call (this_to_js Obj.magic x7613) "navigate"
               [|(or_string_to_js URL.t_to_js x7611)|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WindowClient")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WindowClient") [||])
  end
module ClientQueryOptions =
  struct
    type t = [ `ClientQueryOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7618 : Ojs.t) -> t_of_js x7618
    and t_0_to_js : t_0 -> Ojs.t = fun (x7617 : t) -> t_to_js x7617
    type tags = [ `ClientQueryOptions ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ClientQueryOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7621 : Ojs.t) -> intf_of_js __tags_of_js x7621
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7619 : __tags intf) -> intf_to_js __tags_to_js x7619
    let (get_includeUncontrolled : 'tags this -> bool) =
      fun (x7623 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7623)
             "includeUncontrolled")
    let (set_includeUncontrolled : 'tags this -> bool -> unit) =
      fun (x7625 : 'tags this) ->
        fun (x7626 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7625)
            "includeUncontrolled" (Ojs.bool_to_js x7626)
    let (get_type : 'tags this -> ClientTypes.t) =
      fun (x7628 : 'tags this) ->
        ClientTypes.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7628) "type")
    let (set_type : 'tags this -> ClientTypes.t -> unit) =
      fun (x7630 : 'tags this) ->
        fun (x7631 : ClientTypes.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7630) "type"
            (ClientTypes.t_to_js x7631)
    let cast_from = Obj.magic
  end
module Clients =
  struct
    type t = [ `Clients ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7634 : Ojs.t) -> t_of_js x7634
    and t_0_to_js : t_0 -> Ojs.t = fun (x7633 : t) -> t_to_js x7633
    type tags = [ `Clients ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Clients ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7637 : Ojs.t) -> intf_of_js __tags_of_js x7637
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7635 : __tags intf) -> intf_to_js __tags_to_js x7635
    let (claim : 'tags this -> unit Promise.t_1) =
      fun (x7639 : 'tags this) ->
        Promise.t_1_of_js Ojs.unit_of_js
          (Ojs.call (this_to_js Obj.magic x7639) "claim" [||])
    let (get_ : 'tags this -> id:string -> Client.t or_undefined Promise.t_1)
      =
      fun (x7643 : 'tags this) ->
        fun ~id:(x7642 : string) ->
          Promise.t_1_of_js
            (fun (x7645 : Ojs.t) -> or_undefined_of_js Client.t_of_js x7645)
            (Ojs.call (this_to_js Obj.magic x7643) "get"
               [|(Ojs.string_to_js x7642)|])
    let (matchAll :
      'tags this -> ?options:'T -> unit -> any list Promise.t_1) =
      fun (x7650 : 'tags this) ->
        fun ?options:(x7647 : 'T option) ->
          fun () ->
            Promise.t_1_of_js
              (fun (x7653 : Ojs.t) -> Ojs.list_of_js any_of_js x7653)
              (let x7652 = this_to_js Obj.magic x7650 in
               Ojs.call (Ojs.get_prop_ascii x7652 "matchAll") "apply"
                 [|x7652;((let x7648 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7647 with
                            | Some x7649 ->
                                ignore
                                  (Ojs.call x7648 "push"
                                     [|(Obj.magic x7649)|])
                            | None -> ());
                           x7648))|])
    let (openWindow :
      'tags this -> url:URL.t or_string -> WindowClient.t or_null Promise.t_1)
      =
      fun (x7657 : 'tags this) ->
        fun ~url:(x7655 : URL.t or_string) ->
          Promise.t_1_of_js
            (fun (x7659 : Ojs.t) -> or_null_of_js WindowClient.t_of_js x7659)
            (Ojs.call (this_to_js Obj.magic x7657) "openWindow"
               [|(or_string_to_js URL.t_to_js x7655)|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Clients")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Clients") [||])
  end
module ServiceWorkerGlobalScope =
  struct
    type t =
      [ `EventTarget  | `FontFaceSource  | `ServiceWorkerGlobalScope 
      | `WindowOrWorkerGlobalScope  | `WorkerGlobalScope ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7662 : Ojs.t) -> t_of_js x7662
    and t_0_to_js : t_0 -> Ojs.t = fun (x7661 : t) -> t_to_js x7661
    type tags =
      [ `EventTarget  | `FontFaceSource  | `ServiceWorkerGlobalScope 
      | `WindowOrWorkerGlobalScope  | `WorkerGlobalScope ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `ServiceWorkerGlobalScope ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7665 : Ojs.t) -> intf_of_js __tags_of_js x7665
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7663 : __tags intf) -> intf_to_js __tags_to_js x7663
    let (get_clients : 'tags this -> Clients.t) =
      fun (x7667 : 'tags this) ->
        Clients.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7667) "clients")
    let (get_onactivate :
      'tags this -> (this:t -> ev:ExtendableEvent.t -> any) or_null) =
      fun (x7669 : 'tags this) ->
        or_null_of_js
          (fun (x7671 : Ojs.t) ->
             fun ~this:(x7672 : t) ->
               fun ~ev:(x7673 : ExtendableEvent.t) ->
                 any_of_js
                   (Ojs.apply x7671
                      [|(t_to_js x7672);(ExtendableEvent.t_to_js x7673)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7669) "onactivate")
    let (set_onactivate :
      'tags this -> (this:t -> ev:ExtendableEvent.t -> any) or_null -> unit)
      =
      fun (x7674 : 'tags this) ->
        fun (x7675 : (this:t -> ev:ExtendableEvent.t -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7674) "onactivate"
            (or_null_to_js
               (fun (x7676 : this:t -> ev:ExtendableEvent.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x7677 : Ojs.t) ->
                       fun (x7678 : Ojs.t) ->
                         any_to_js
                           (x7676 ~this:(t_of_js x7677)
                              ~ev:(ExtendableEvent.t_of_js x7678)))) x7675)
    let (get_onfetch :
      'tags this -> (this:t -> ev:FetchEvent.t -> any) or_null) =
      fun (x7680 : 'tags this) ->
        or_null_of_js
          (fun (x7682 : Ojs.t) ->
             fun ~this:(x7683 : t) ->
               fun ~ev:(x7684 : FetchEvent.t) ->
                 any_of_js
                   (Ojs.apply x7682
                      [|(t_to_js x7683);(FetchEvent.t_to_js x7684)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7680) "onfetch")
    let (set_onfetch :
      'tags this -> (this:t -> ev:FetchEvent.t -> any) or_null -> unit) =
      fun (x7685 : 'tags this) ->
        fun (x7686 : (this:t -> ev:FetchEvent.t -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7685) "onfetch"
            (or_null_to_js
               (fun (x7687 : this:t -> ev:FetchEvent.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x7688 : Ojs.t) ->
                       fun (x7689 : Ojs.t) ->
                         any_to_js
                           (x7687 ~this:(t_of_js x7688)
                              ~ev:(FetchEvent.t_of_js x7689)))) x7686)
    let (get_oninstall :
      'tags this -> (this:t -> ev:ExtendableEvent.t -> any) or_null) =
      fun (x7691 : 'tags this) ->
        or_null_of_js
          (fun (x7693 : Ojs.t) ->
             fun ~this:(x7694 : t) ->
               fun ~ev:(x7695 : ExtendableEvent.t) ->
                 any_of_js
                   (Ojs.apply x7693
                      [|(t_to_js x7694);(ExtendableEvent.t_to_js x7695)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7691) "oninstall")
    let (set_oninstall :
      'tags this -> (this:t -> ev:ExtendableEvent.t -> any) or_null -> unit)
      =
      fun (x7696 : 'tags this) ->
        fun (x7697 : (this:t -> ev:ExtendableEvent.t -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7696) "oninstall"
            (or_null_to_js
               (fun (x7698 : this:t -> ev:ExtendableEvent.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x7699 : Ojs.t) ->
                       fun (x7700 : Ojs.t) ->
                         any_to_js
                           (x7698 ~this:(t_of_js x7699)
                              ~ev:(ExtendableEvent.t_of_js x7700)))) x7697)
    let (get_onmessage :
      'tags this -> (this:t -> ev:ExtendableMessageEvent.t -> any) or_null) =
      fun (x7702 : 'tags this) ->
        or_null_of_js
          (fun (x7704 : Ojs.t) ->
             fun ~this:(x7705 : t) ->
               fun ~ev:(x7706 : ExtendableMessageEvent.t) ->
                 any_of_js
                   (Ojs.apply x7704
                      [|(t_to_js x7705);(ExtendableMessageEvent.t_to_js x7706)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7702) "onmessage")
    let (set_onmessage :
      'tags this ->
        (this:t -> ev:ExtendableMessageEvent.t -> any) or_null -> unit)
      =
      fun (x7707 : 'tags this) ->
        fun (x7708 : (this:t -> ev:ExtendableMessageEvent.t -> any) or_null)
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7707) "onmessage"
            (or_null_to_js
               (fun (x7709 : this:t -> ev:ExtendableMessageEvent.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x7710 : Ojs.t) ->
                       fun (x7711 : Ojs.t) ->
                         any_to_js
                           (x7709 ~this:(t_of_js x7710)
                              ~ev:(ExtendableMessageEvent.t_of_js x7711))))
               x7708)
    let (get_onmessageerror :
      'tags this -> (this:t -> ev:MessageEvent.t_0 -> any) or_null) =
      fun (x7713 : 'tags this) ->
        or_null_of_js
          (fun (x7715 : Ojs.t) ->
             fun ~this:(x7716 : t) ->
               fun ~ev:(x7717 : MessageEvent.t_0) ->
                 any_of_js
                   (Ojs.apply x7715
                      [|(t_to_js x7716);(MessageEvent.t_0_to_js x7717)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7713) "onmessageerror")
    let (set_onmessageerror :
      'tags this -> (this:t -> ev:MessageEvent.t_0 -> any) or_null -> unit) =
      fun (x7718 : 'tags this) ->
        fun (x7719 : (this:t -> ev:MessageEvent.t_0 -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7718) "onmessageerror"
            (or_null_to_js
               (fun (x7720 : this:t -> ev:MessageEvent.t_0 -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x7721 : Ojs.t) ->
                       fun (x7722 : Ojs.t) ->
                         any_to_js
                           (x7720 ~this:(t_of_js x7721)
                              ~ev:(MessageEvent.t_0_of_js x7722)))) x7719)
    let (get_onnotificationclick :
      'tags this -> (this:t -> ev:NotificationEvent.t -> any) or_null) =
      fun (x7724 : 'tags this) ->
        or_null_of_js
          (fun (x7726 : Ojs.t) ->
             fun ~this:(x7727 : t) ->
               fun ~ev:(x7728 : NotificationEvent.t) ->
                 any_of_js
                   (Ojs.apply x7726
                      [|(t_to_js x7727);(NotificationEvent.t_to_js x7728)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7724)
             "onnotificationclick")
    let (set_onnotificationclick :
      'tags this -> (this:t -> ev:NotificationEvent.t -> any) or_null -> unit)
      =
      fun (x7729 : 'tags this) ->
        fun (x7730 : (this:t -> ev:NotificationEvent.t -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7729)
            "onnotificationclick"
            (or_null_to_js
               (fun (x7731 : this:t -> ev:NotificationEvent.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x7732 : Ojs.t) ->
                       fun (x7733 : Ojs.t) ->
                         any_to_js
                           (x7731 ~this:(t_of_js x7732)
                              ~ev:(NotificationEvent.t_of_js x7733)))) x7730)
    let (get_onnotificationclose :
      'tags this -> (this:t -> ev:NotificationEvent.t -> any) or_null) =
      fun (x7735 : 'tags this) ->
        or_null_of_js
          (fun (x7737 : Ojs.t) ->
             fun ~this:(x7738 : t) ->
               fun ~ev:(x7739 : NotificationEvent.t) ->
                 any_of_js
                   (Ojs.apply x7737
                      [|(t_to_js x7738);(NotificationEvent.t_to_js x7739)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7735)
             "onnotificationclose")
    let (set_onnotificationclose :
      'tags this -> (this:t -> ev:NotificationEvent.t -> any) or_null -> unit)
      =
      fun (x7740 : 'tags this) ->
        fun (x7741 : (this:t -> ev:NotificationEvent.t -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7740)
            "onnotificationclose"
            (or_null_to_js
               (fun (x7742 : this:t -> ev:NotificationEvent.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x7743 : Ojs.t) ->
                       fun (x7744 : Ojs.t) ->
                         any_to_js
                           (x7742 ~this:(t_of_js x7743)
                              ~ev:(NotificationEvent.t_of_js x7744)))) x7741)
    let (get_onpush :
      'tags this -> (this:t -> ev:PushEvent.t -> any) or_null) =
      fun (x7746 : 'tags this) ->
        or_null_of_js
          (fun (x7748 : Ojs.t) ->
             fun ~this:(x7749 : t) ->
               fun ~ev:(x7750 : PushEvent.t) ->
                 any_of_js
                   (Ojs.apply x7748
                      [|(t_to_js x7749);(PushEvent.t_to_js x7750)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7746) "onpush")
    let (set_onpush :
      'tags this -> (this:t -> ev:PushEvent.t -> any) or_null -> unit) =
      fun (x7751 : 'tags this) ->
        fun (x7752 : (this:t -> ev:PushEvent.t -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7751) "onpush"
            (or_null_to_js
               (fun (x7753 : this:t -> ev:PushEvent.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x7754 : Ojs.t) ->
                       fun (x7755 : Ojs.t) ->
                         any_to_js
                           (x7753 ~this:(t_of_js x7754)
                              ~ev:(PushEvent.t_of_js x7755)))) x7752)
    let (get_registration : 'tags this -> ServiceWorkerRegistration.t) =
      fun (x7757 : 'tags this) ->
        ServiceWorkerRegistration.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7757) "registration")
    let (skipWaiting : 'tags this -> unit Promise.t_1) =
      fun (x7759 : 'tags this) ->
        Promise.t_1_of_js Ojs.unit_of_js
          (Ojs.call (this_to_js Obj.magic x7759) "skipWaiting" [||])
    let (addEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x7770 : 'tags this) ->
        fun ~type_:(x7762 : 'K) ->
          fun ~listener:(x7763 : this:t -> ev:any -> any) ->
            fun
              ?options:(x7764 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x7772 = this_to_js Obj.magic x7770 in
                   Ojs.call (Ojs.get_prop_ascii x7772 "addEventListener")
                     "apply"
                     [|x7772;((let x7765 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7765 "push" [|(Obj.magic x7762)|]);
                               ignore
                                 (Ojs.call x7765 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x7768 : Ojs.t) ->
                                            fun (x7769 : Ojs.t) ->
                                              any_to_js
                                                (x7763 ~this:(t_of_js x7768)
                                                   ~ev:(any_of_js x7769))))|]);
                               (match x7764 with
                                | Some x7766 ->
                                    ignore
                                      (Ojs.call x7765 "push"
                                         [|(or_boolean_to_js
                                              AddEventListenerOptions.t_to_js
                                              x7766)|])
                                | None -> ());
                               x7765))|])
    let (addEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x7779 : 'tags this) ->
        fun ~type_:(x7773 : string) ->
          fun ~listener:(x7774 : EventListenerOrEventListenerObject.t) ->
            fun
              ?options:(x7775 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x7781 = this_to_js Obj.magic x7779 in
                   Ojs.call (Ojs.get_prop_ascii x7781 "addEventListener")
                     "apply"
                     [|x7781;((let x7776 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7776 "push"
                                    [|(Ojs.string_to_js x7773)|]);
                               ignore
                                 (Ojs.call x7776 "push"
                                    [|(EventListenerOrEventListenerObject.t_to_js
                                         x7774)|]);
                               (match x7775 with
                                | Some x7777 ->
                                    ignore
                                      (Ojs.call x7776 "push"
                                         [|(or_boolean_to_js
                                              AddEventListenerOptions.t_to_js
                                              x7777)|])
                                | None -> ());
                               x7776))|])
    let (removeEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x7790 : 'tags this) ->
        fun ~type_:(x7782 : 'K) ->
          fun ~listener:(x7783 : this:t -> ev:any -> any) ->
            fun ?options:(x7784 : EventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x7792 = this_to_js Obj.magic x7790 in
                   Ojs.call (Ojs.get_prop_ascii x7792 "removeEventListener")
                     "apply"
                     [|x7792;((let x7785 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7785 "push" [|(Obj.magic x7782)|]);
                               ignore
                                 (Ojs.call x7785 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x7788 : Ojs.t) ->
                                            fun (x7789 : Ojs.t) ->
                                              any_to_js
                                                (x7783 ~this:(t_of_js x7788)
                                                   ~ev:(any_of_js x7789))))|]);
                               (match x7784 with
                                | Some x7786 ->
                                    ignore
                                      (Ojs.call x7785 "push"
                                         [|(or_boolean_to_js
                                              EventListenerOptions.t_to_js
                                              x7786)|])
                                | None -> ());
                               x7785))|])
    let (removeEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x7799 : 'tags this) ->
        fun ~type_:(x7793 : string) ->
          fun ~listener:(x7794 : EventListenerOrEventListenerObject.t) ->
            fun ?options:(x7795 : EventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x7801 = this_to_js Obj.magic x7799 in
                   Ojs.call (Ojs.get_prop_ascii x7801 "removeEventListener")
                     "apply"
                     [|x7801;((let x7796 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7796 "push"
                                    [|(Ojs.string_to_js x7793)|]);
                               ignore
                                 (Ojs.call x7796 "push"
                                    [|(EventListenerOrEventListenerObject.t_to_js
                                         x7794)|]);
                               (match x7795 with
                                | Some x7797 ->
                                    ignore
                                      (Ojs.call x7796 "push"
                                         [|(or_boolean_to_js
                                              EventListenerOptions.t_to_js
                                              x7797)|])
                                | None -> ());
                               x7796))|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "ServiceWorkerGlobalScope")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj
             (Ojs.get_prop_ascii Ojs.global "ServiceWorkerGlobalScope") 
             [||])
  end
module AnonymousInterface96 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x7803 : Ojs.t) -> x7803
    and t_to_js : t -> Ojs.t = fun (x7802 : Ojs.t) -> x7802
    let (get_prototype : t -> ServiceWorkerGlobalScope.t) =
      fun (x7804 : t) ->
        ServiceWorkerGlobalScope.t_of_js
          (Ojs.get_prop_ascii (t_to_js x7804) "prototype")
    let (set_prototype : t -> ServiceWorkerGlobalScope.t -> unit) =
      fun (x7805 : t) ->
        fun (x7806 : ServiceWorkerGlobalScope.t) ->
          Ojs.set_prop_ascii (t_to_js x7805) "prototype"
            (ServiceWorkerGlobalScope.t_to_js x7806)
    let (create : t -> ServiceWorkerGlobalScope.t) =
      fun (x7807 : t) ->
        ServiceWorkerGlobalScope.t_of_js (Ojs.new_obj (t_to_js x7807) [||])
  end
module WorkerType =
  struct
    type t = [ `L_s117_module  | `L_s49_classic ]
    let rec t_of_js : Ojs.t -> t =
      fun (x7809 : Ojs.t) ->
        let x7810 = x7809 in
        match Ojs.string_of_js x7810 with
        | "module" -> `L_s117_module
        | "classic" -> `L_s49_classic
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun (x7808 : [ `L_s117_module  | `L_s49_classic ]) ->
        match x7808 with
        | `L_s117_module -> Ojs.string_to_js "module"
        | `L_s49_classic -> Ojs.string_to_js "classic"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7812 : Ojs.t) -> t_of_js x7812
    and t_0_to_js : t_0 -> Ojs.t = fun (x7811 : t) -> t_to_js x7811
  end
module RegistrationOptions =
  struct
    type t = [ `RegistrationOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7814 : Ojs.t) -> t_of_js x7814
    and t_0_to_js : t_0 -> Ojs.t = fun (x7813 : t) -> t_to_js x7813
    type tags = [ `RegistrationOptions ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RegistrationOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7817 : Ojs.t) -> intf_of_js __tags_of_js x7817
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7815 : __tags intf) -> intf_to_js __tags_to_js x7815
    let (get_scope : 'tags this -> string) =
      fun (x7819 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7819) "scope")
    let (set_scope : 'tags this -> string -> unit) =
      fun (x7821 : 'tags this) ->
        fun (x7822 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7821) "scope"
            (Ojs.string_to_js x7822)
    let (get_type : 'tags this -> WorkerType.t) =
      fun (x7824 : 'tags this) ->
        WorkerType.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7824) "type")
    let (set_type : 'tags this -> WorkerType.t -> unit) =
      fun (x7826 : 'tags this) ->
        fun (x7827 : WorkerType.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7826) "type"
            (WorkerType.t_to_js x7827)
    let (get_updateViaCache : 'tags this -> ServiceWorkerUpdateViaCache.t) =
      fun (x7829 : 'tags this) ->
        ServiceWorkerUpdateViaCache.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7829) "updateViaCache")
    let (set_updateViaCache :
      'tags this -> ServiceWorkerUpdateViaCache.t -> unit) =
      fun (x7831 : 'tags this) ->
        fun (x7832 : ServiceWorkerUpdateViaCache.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7831) "updateViaCache"
            (ServiceWorkerUpdateViaCache.t_to_js x7832)
    let cast_from = Obj.magic
  end
module ServiceWorkerContainer =
  struct
    type t = [ `EventTarget  | `ServiceWorkerContainer ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7835 : Ojs.t) -> t_of_js x7835
    and t_0_to_js : t_0 -> Ojs.t = fun (x7834 : t) -> t_to_js x7834
    type tags = [ `EventTarget  | `ServiceWorkerContainer ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `ServiceWorkerContainer ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7838 : Ojs.t) -> intf_of_js __tags_of_js x7838
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7836 : __tags intf) -> intf_to_js __tags_to_js x7836
    let (get_controller : 'tags this -> ServiceWorker.t or_null) =
      fun (x7840 : 'tags this) ->
        or_null_of_js ServiceWorker.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7840) "controller")
    let (get_oncontrollerchange :
      'tags this -> (this:t -> ev:Event.t -> any) or_null) =
      fun (x7843 : 'tags this) ->
        or_null_of_js
          (fun (x7845 : Ojs.t) ->
             fun ~this:(x7846 : t) ->
               fun ~ev:(x7847 : Event.t) ->
                 any_of_js
                   (Ojs.apply x7845 [|(t_to_js x7846);(Event.t_to_js x7847)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7843)
             "oncontrollerchange")
    let (set_oncontrollerchange :
      'tags this -> (this:t -> ev:Event.t -> any) or_null -> unit) =
      fun (x7848 : 'tags this) ->
        fun (x7849 : (this:t -> ev:Event.t -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7848)
            "oncontrollerchange"
            (or_null_to_js
               (fun (x7850 : this:t -> ev:Event.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x7851 : Ojs.t) ->
                       fun (x7852 : Ojs.t) ->
                         any_to_js
                           (x7850 ~this:(t_of_js x7851)
                              ~ev:(Event.t_of_js x7852)))) x7849)
    let (get_onmessage :
      'tags this -> (this:t -> ev:MessageEvent.t_0 -> any) or_null) =
      fun (x7854 : 'tags this) ->
        or_null_of_js
          (fun (x7856 : Ojs.t) ->
             fun ~this:(x7857 : t) ->
               fun ~ev:(x7858 : MessageEvent.t_0) ->
                 any_of_js
                   (Ojs.apply x7856
                      [|(t_to_js x7857);(MessageEvent.t_0_to_js x7858)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7854) "onmessage")
    let (set_onmessage :
      'tags this -> (this:t -> ev:MessageEvent.t_0 -> any) or_null -> unit) =
      fun (x7859 : 'tags this) ->
        fun (x7860 : (this:t -> ev:MessageEvent.t_0 -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7859) "onmessage"
            (or_null_to_js
               (fun (x7861 : this:t -> ev:MessageEvent.t_0 -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x7862 : Ojs.t) ->
                       fun (x7863 : Ojs.t) ->
                         any_to_js
                           (x7861 ~this:(t_of_js x7862)
                              ~ev:(MessageEvent.t_0_of_js x7863)))) x7860)
    let (get_onmessageerror :
      'tags this -> (this:t -> ev:MessageEvent.t_0 -> any) or_null) =
      fun (x7865 : 'tags this) ->
        or_null_of_js
          (fun (x7867 : Ojs.t) ->
             fun ~this:(x7868 : t) ->
               fun ~ev:(x7869 : MessageEvent.t_0) ->
                 any_of_js
                   (Ojs.apply x7867
                      [|(t_to_js x7868);(MessageEvent.t_0_to_js x7869)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7865) "onmessageerror")
    let (set_onmessageerror :
      'tags this -> (this:t -> ev:MessageEvent.t_0 -> any) or_null -> unit) =
      fun (x7870 : 'tags this) ->
        fun (x7871 : (this:t -> ev:MessageEvent.t_0 -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7870) "onmessageerror"
            (or_null_to_js
               (fun (x7872 : this:t -> ev:MessageEvent.t_0 -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x7873 : Ojs.t) ->
                       fun (x7874 : Ojs.t) ->
                         any_to_js
                           (x7872 ~this:(t_of_js x7873)
                              ~ev:(MessageEvent.t_0_of_js x7874)))) x7871)
    let (get_ready : 'tags this -> ServiceWorkerRegistration.t Promise.t_1) =
      fun (x7876 : 'tags this) ->
        Promise.t_1_of_js ServiceWorkerRegistration.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7876) "ready")
    let (getRegistration :
      'tags this ->
        ?clientURL:URL.t or_string ->
          unit -> ServiceWorkerRegistration.t or_undefined Promise.t_1)
      =
      fun (x7883 : 'tags this) ->
        fun ?clientURL:(x7879 : URL.t or_string option) ->
          fun () ->
            Promise.t_1_of_js
              (fun (x7886 : Ojs.t) ->
                 or_undefined_of_js ServiceWorkerRegistration.t_of_js x7886)
              (let x7885 = this_to_js Obj.magic x7883 in
               Ojs.call (Ojs.get_prop_ascii x7885 "getRegistration") "apply"
                 [|x7885;((let x7880 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7879 with
                            | Some x7881 ->
                                ignore
                                  (Ojs.call x7880 "push"
                                     [|(or_string_to_js URL.t_to_js x7881)|])
                            | None -> ());
                           x7880))|])
    let (getRegistrations :
      'tags this -> ServiceWorkerRegistration.t list Promise.t_1) =
      fun (x7888 : 'tags this) ->
        Promise.t_1_of_js
          (fun (x7890 : Ojs.t) ->
             Ojs.list_of_js ServiceWorkerRegistration.t_of_js x7890)
          (Ojs.call (this_to_js Obj.magic x7888) "getRegistrations" [||])
    let (register :
      'tags this ->
        scriptURL:URL.t or_string ->
          ?options:RegistrationOptions.t ->
            unit -> ServiceWorkerRegistration.t Promise.t_1)
      =
      fun (x7897 : 'tags this) ->
        fun ~scriptURL:(x7892 : URL.t or_string) ->
          fun ?options:(x7893 : RegistrationOptions.t option) ->
            fun () ->
              Promise.t_1_of_js ServiceWorkerRegistration.t_of_js
                (let x7899 = this_to_js Obj.magic x7897 in
                 Ojs.call (Ojs.get_prop_ascii x7899 "register") "apply"
                   [|x7899;((let x7894 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7894 "push"
                                  [|(or_string_to_js URL.t_to_js x7892)|]);
                             (match x7893 with
                              | Some x7895 ->
                                  ignore
                                    (Ojs.call x7894 "push"
                                       [|(RegistrationOptions.t_to_js x7895)|])
                              | None -> ());
                             x7894))|])
    let (startMessages : 'tags this -> unit) =
      fun (x7901 : 'tags this) ->
        ignore (Ojs.call (this_to_js Obj.magic x7901) "startMessages" [||])
    let (addEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x7911 : 'tags this) ->
        fun ~type_:(x7903 : 'K) ->
          fun ~listener:(x7904 : this:t -> ev:any -> any) ->
            fun
              ?options:(x7905 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x7913 = this_to_js Obj.magic x7911 in
                   Ojs.call (Ojs.get_prop_ascii x7913 "addEventListener")
                     "apply"
                     [|x7913;((let x7906 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7906 "push" [|(Obj.magic x7903)|]);
                               ignore
                                 (Ojs.call x7906 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x7909 : Ojs.t) ->
                                            fun (x7910 : Ojs.t) ->
                                              any_to_js
                                                (x7904 ~this:(t_of_js x7909)
                                                   ~ev:(any_of_js x7910))))|]);
                               (match x7905 with
                                | Some x7907 ->
                                    ignore
                                      (Ojs.call x7906 "push"
                                         [|(or_boolean_to_js
                                              AddEventListenerOptions.t_to_js
                                              x7907)|])
                                | None -> ());
                               x7906))|])
    let (addEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x7920 : 'tags this) ->
        fun ~type_:(x7914 : string) ->
          fun ~listener:(x7915 : EventListenerOrEventListenerObject.t) ->
            fun
              ?options:(x7916 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x7922 = this_to_js Obj.magic x7920 in
                   Ojs.call (Ojs.get_prop_ascii x7922 "addEventListener")
                     "apply"
                     [|x7922;((let x7917 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7917 "push"
                                    [|(Ojs.string_to_js x7914)|]);
                               ignore
                                 (Ojs.call x7917 "push"
                                    [|(EventListenerOrEventListenerObject.t_to_js
                                         x7915)|]);
                               (match x7916 with
                                | Some x7918 ->
                                    ignore
                                      (Ojs.call x7917 "push"
                                         [|(or_boolean_to_js
                                              AddEventListenerOptions.t_to_js
                                              x7918)|])
                                | None -> ());
                               x7917))|])
    let (removeEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x7931 : 'tags this) ->
        fun ~type_:(x7923 : 'K) ->
          fun ~listener:(x7924 : this:t -> ev:any -> any) ->
            fun ?options:(x7925 : EventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x7933 = this_to_js Obj.magic x7931 in
                   Ojs.call (Ojs.get_prop_ascii x7933 "removeEventListener")
                     "apply"
                     [|x7933;((let x7926 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7926 "push" [|(Obj.magic x7923)|]);
                               ignore
                                 (Ojs.call x7926 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x7929 : Ojs.t) ->
                                            fun (x7930 : Ojs.t) ->
                                              any_to_js
                                                (x7924 ~this:(t_of_js x7929)
                                                   ~ev:(any_of_js x7930))))|]);
                               (match x7925 with
                                | Some x7927 ->
                                    ignore
                                      (Ojs.call x7926 "push"
                                         [|(or_boolean_to_js
                                              EventListenerOptions.t_to_js
                                              x7927)|])
                                | None -> ());
                               x7926))|])
    let (removeEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x7940 : 'tags this) ->
        fun ~type_:(x7934 : string) ->
          fun ~listener:(x7935 : EventListenerOrEventListenerObject.t) ->
            fun ?options:(x7936 : EventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x7942 = this_to_js Obj.magic x7940 in
                   Ojs.call (Ojs.get_prop_ascii x7942 "removeEventListener")
                     "apply"
                     [|x7942;((let x7937 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7937 "push"
                                    [|(Ojs.string_to_js x7934)|]);
                               ignore
                                 (Ojs.call x7937 "push"
                                    [|(EventListenerOrEventListenerObject.t_to_js
                                         x7935)|]);
                               (match x7936 with
                                | Some x7938 ->
                                    ignore
                                      (Ojs.call x7937 "push"
                                         [|(or_boolean_to_js
                                              EventListenerOptions.t_to_js
                                              x7938)|])
                                | None -> ());
                               x7937))|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "ServiceWorkerContainer")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj
             (Ojs.get_prop_ascii Ojs.global "ServiceWorkerContainer") 
             [||])
  end
module AnonymousInterface95 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x7944 : Ojs.t) -> x7944
    and t_to_js : t -> Ojs.t = fun (x7943 : Ojs.t) -> x7943
    let (get_prototype : t -> ServiceWorkerContainer.t) =
      fun (x7945 : t) ->
        ServiceWorkerContainer.t_of_js
          (Ojs.get_prop_ascii (t_to_js x7945) "prototype")
    let (set_prototype : t -> ServiceWorkerContainer.t -> unit) =
      fun (x7946 : t) ->
        fun (x7947 : ServiceWorkerContainer.t) ->
          Ojs.set_prop_ascii (t_to_js x7946) "prototype"
            (ServiceWorkerContainer.t_to_js x7947)
    let (create : t -> ServiceWorkerContainer.t) =
      fun (x7948 : t) ->
        ServiceWorkerContainer.t_of_js (Ojs.new_obj (t_to_js x7948) [||])
  end
module AnonymousInterface94 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x7950 : Ojs.t) -> x7950
    and t_to_js : t -> Ojs.t = fun (x7949 : Ojs.t) -> x7949
    let (get_prototype : t -> ServiceWorker.t) =
      fun (x7951 : t) ->
        ServiceWorker.t_of_js
          (Ojs.get_prop_ascii (t_to_js x7951) "prototype")
    let (set_prototype : t -> ServiceWorker.t -> unit) =
      fun (x7952 : t) ->
        fun (x7953 : ServiceWorker.t) ->
          Ojs.set_prop_ascii (t_to_js x7952) "prototype"
            (ServiceWorker.t_to_js x7953)
    let (create : t -> ServiceWorker.t) =
      fun (x7954 : t) ->
        ServiceWorker.t_of_js (Ojs.new_obj (t_to_js x7954) [||])
  end
module SecurityPolicyViolationEventDisposition =
  struct
    type t = [ `L_s169_report  | `L_s66_enforce ]
    let rec t_of_js : Ojs.t -> t =
      fun (x7956 : Ojs.t) ->
        let x7957 = x7956 in
        match Ojs.string_of_js x7957 with
        | "report" -> `L_s169_report
        | "enforce" -> `L_s66_enforce
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun (x7955 : [ `L_s169_report  | `L_s66_enforce ]) ->
        match x7955 with
        | `L_s169_report -> Ojs.string_to_js "report"
        | `L_s66_enforce -> Ojs.string_to_js "enforce"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7959 : Ojs.t) -> t_of_js x7959
    and t_0_to_js : t_0 -> Ojs.t = fun (x7958 : t) -> t_to_js x7958
  end
module SecurityPolicyViolationEventInit =
  struct
    type t = [ `EventInit  | `SecurityPolicyViolationEventInit ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7961 : Ojs.t) -> t_of_js x7961
    and t_0_to_js : t_0 -> Ojs.t = fun (x7960 : t) -> t_to_js x7960
    type tags = [ `EventInit  | `SecurityPolicyViolationEventInit ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `SecurityPolicyViolationEventInit ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7964 : Ojs.t) -> intf_of_js __tags_of_js x7964
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7962 : __tags intf) -> intf_to_js __tags_to_js x7962
    let (get_blockedURI : 'tags this -> string) =
      fun (x7966 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7966) "blockedURI")
    let (set_blockedURI : 'tags this -> string -> unit) =
      fun (x7968 : 'tags this) ->
        fun (x7969 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7968) "blockedURI"
            (Ojs.string_to_js x7969)
    let (get_columnNumber : 'tags this -> float) =
      fun (x7971 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7971) "columnNumber")
    let (set_columnNumber : 'tags this -> float -> unit) =
      fun (x7973 : 'tags this) ->
        fun (x7974 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7973) "columnNumber"
            (Ojs.float_to_js x7974)
    let (get_disposition :
      'tags this -> SecurityPolicyViolationEventDisposition.t) =
      fun (x7976 : 'tags this) ->
        SecurityPolicyViolationEventDisposition.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7976) "disposition")
    let (set_disposition :
      'tags this -> SecurityPolicyViolationEventDisposition.t -> unit) =
      fun (x7978 : 'tags this) ->
        fun (x7979 : SecurityPolicyViolationEventDisposition.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7978) "disposition"
            (SecurityPolicyViolationEventDisposition.t_to_js x7979)
    let (get_documentURI : 'tags this -> string) =
      fun (x7981 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7981) "documentURI")
    let (set_documentURI : 'tags this -> string -> unit) =
      fun (x7983 : 'tags this) ->
        fun (x7984 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7983) "documentURI"
            (Ojs.string_to_js x7984)
    let (get_effectiveDirective : 'tags this -> string) =
      fun (x7986 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7986)
             "effectiveDirective")
    let (set_effectiveDirective : 'tags this -> string -> unit) =
      fun (x7988 : 'tags this) ->
        fun (x7989 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7988)
            "effectiveDirective" (Ojs.string_to_js x7989)
    let (get_lineNumber : 'tags this -> float) =
      fun (x7991 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7991) "lineNumber")
    let (set_lineNumber : 'tags this -> float -> unit) =
      fun (x7993 : 'tags this) ->
        fun (x7994 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7993) "lineNumber"
            (Ojs.float_to_js x7994)
    let (get_originalPolicy : 'tags this -> string) =
      fun (x7996 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7996) "originalPolicy")
    let (set_originalPolicy : 'tags this -> string -> unit) =
      fun (x7998 : 'tags this) ->
        fun (x7999 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7998) "originalPolicy"
            (Ojs.string_to_js x7999)
    let (get_referrer : 'tags this -> string) =
      fun (x8001 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8001) "referrer")
    let (set_referrer : 'tags this -> string -> unit) =
      fun (x8003 : 'tags this) ->
        fun (x8004 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8003) "referrer"
            (Ojs.string_to_js x8004)
    let (get_sample : 'tags this -> string) =
      fun (x8006 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8006) "sample")
    let (set_sample : 'tags this -> string -> unit) =
      fun (x8008 : 'tags this) ->
        fun (x8009 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8008) "sample"
            (Ojs.string_to_js x8009)
    let (get_sourceFile : 'tags this -> string) =
      fun (x8011 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8011) "sourceFile")
    let (set_sourceFile : 'tags this -> string -> unit) =
      fun (x8013 : 'tags this) ->
        fun (x8014 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8013) "sourceFile"
            (Ojs.string_to_js x8014)
    let (get_statusCode : 'tags this -> float) =
      fun (x8016 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8016) "statusCode")
    let (set_statusCode : 'tags this -> float -> unit) =
      fun (x8018 : 'tags this) ->
        fun (x8019 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8018) "statusCode"
            (Ojs.float_to_js x8019)
    let (get_violatedDirective : 'tags this -> string) =
      fun (x8021 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8021)
             "violatedDirective")
    let (set_violatedDirective : 'tags this -> string -> unit) =
      fun (x8023 : 'tags this) ->
        fun (x8024 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8023) "violatedDirective"
            (Ojs.string_to_js x8024)
    let cast_from = Obj.magic
  end
module SecurityPolicyViolationEvent =
  struct
    type t = [ `Event  | `SecurityPolicyViolationEvent ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8027 : Ojs.t) -> t_of_js x8027
    and t_0_to_js : t_0 -> Ojs.t = fun (x8026 : t) -> t_to_js x8026
    type tags = [ `Event  | `SecurityPolicyViolationEvent ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `SecurityPolicyViolationEvent ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8030 : Ojs.t) -> intf_of_js __tags_of_js x8030
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8028 : __tags intf) -> intf_to_js __tags_to_js x8028
    let (get_blockedURI : 'tags this -> string) =
      fun (x8032 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8032) "blockedURI")
    let (get_columnNumber : 'tags this -> float) =
      fun (x8034 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8034) "columnNumber")
    let (get_disposition :
      'tags this -> SecurityPolicyViolationEventDisposition.t) =
      fun (x8036 : 'tags this) ->
        SecurityPolicyViolationEventDisposition.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8036) "disposition")
    let (get_documentURI : 'tags this -> string) =
      fun (x8038 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8038) "documentURI")
    let (get_effectiveDirective : 'tags this -> string) =
      fun (x8040 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8040)
             "effectiveDirective")
    let (get_lineNumber : 'tags this -> float) =
      fun (x8042 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8042) "lineNumber")
    let (get_originalPolicy : 'tags this -> string) =
      fun (x8044 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8044) "originalPolicy")
    let (get_referrer : 'tags this -> string) =
      fun (x8046 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8046) "referrer")
    let (get_sample : 'tags this -> string) =
      fun (x8048 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8048) "sample")
    let (get_sourceFile : 'tags this -> string) =
      fun (x8050 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8050) "sourceFile")
    let (get_statusCode : 'tags this -> float) =
      fun (x8052 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8052) "statusCode")
    let (get_violatedDirective : 'tags this -> string) =
      fun (x8054 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8054)
             "violatedDirective")
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "SecurityPolicyViolationEvent")
             "prototype")
    let (create :
      type_:string ->
        ?eventInitDict:SecurityPolicyViolationEventInit.t -> unit -> t)
      =
      fun ~type_:(x8056 : string) ->
        fun
          ?eventInitDict:(x8057 : SecurityPolicyViolationEventInit.t option)
          ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global
                    "SecurityPolicyViolationEvent")
                 (let x8058 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x8058 "push" [|(Ojs.string_to_js x8056)|]);
                  (match x8057 with
                   | Some x8059 ->
                       ignore
                         (Ojs.call x8058 "push"
                            [|(SecurityPolicyViolationEventInit.t_to_js x8059)|])
                   | None -> ());
                  x8058))
  end
module AnonymousInterface93 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8061 : Ojs.t) -> x8061
    and t_to_js : t -> Ojs.t = fun (x8060 : Ojs.t) -> x8060
    let (get_prototype : t -> SecurityPolicyViolationEvent.t) =
      fun (x8062 : t) ->
        SecurityPolicyViolationEvent.t_of_js
          (Ojs.get_prop_ascii (t_to_js x8062) "prototype")
    let (set_prototype : t -> SecurityPolicyViolationEvent.t -> unit) =
      fun (x8063 : t) ->
        fun (x8064 : SecurityPolicyViolationEvent.t) ->
          Ojs.set_prop_ascii (t_to_js x8063) "prototype"
            (SecurityPolicyViolationEvent.t_to_js x8064)
    let (create :
      t ->
        type_:string ->
          ?eventInitDict:SecurityPolicyViolationEventInit.t ->
            unit -> SecurityPolicyViolationEvent.t)
      =
      fun (x8069 : t) ->
        fun ~type_:(x8065 : string) ->
          fun
            ?eventInitDict:(x8066 :
                             SecurityPolicyViolationEventInit.t option)
            ->
            fun () ->
              SecurityPolicyViolationEvent.t_of_js
                (Ojs.new_obj_arr (t_to_js x8069)
                   (let x8067 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8067 "push" [|(Ojs.string_to_js x8065)|]);
                    (match x8066 with
                     | Some x8068 ->
                         ignore
                           (Ojs.call x8067 "push"
                              [|(SecurityPolicyViolationEventInit.t_to_js
                                   x8068)|])
                     | None -> ());
                    x8067))
  end
module AnonymousInterface91 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8071 : Ojs.t) -> x8071
    and t_to_js : t -> Ojs.t = fun (x8070 : Ojs.t) -> x8070
    let (get_prototype : t -> Response.t) =
      fun (x8072 : t) ->
        Response.t_of_js (Ojs.get_prop_ascii (t_to_js x8072) "prototype")
    let (set_prototype : t -> Response.t -> unit) =
      fun (x8073 : t) ->
        fun (x8074 : Response.t) ->
          Ojs.set_prop_ascii (t_to_js x8073) "prototype"
            (Response.t_to_js x8074)
    let (create :
      t ->
        ?body:BodyInit.t or_null ->
          ?init:ResponseInit.t -> unit -> Response.t)
      =
      fun (x8081 : t) ->
        fun ?body:(x8075 : BodyInit.t or_null option) ->
          fun ?init:(x8076 : ResponseInit.t option) ->
            fun () ->
              Response.t_of_js
                (Ojs.new_obj_arr (t_to_js x8081)
                   (let x8077 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    (match x8075 with
                     | Some x8079 ->
                         ignore
                           (Ojs.call x8077 "push"
                              [|(or_null_to_js BodyInit.t_to_js x8079)|])
                     | None -> ());
                    (match x8076 with
                     | Some x8078 ->
                         ignore
                           (Ojs.call x8077 "push"
                              [|(ResponseInit.t_to_js x8078)|])
                     | None -> ());
                    x8077))
    let (error : t -> Response.t) =
      fun (x8082 : t) ->
        Response.t_of_js (Ojs.call (t_to_js x8082) "error" [||])
    let (redirect :
      t -> url:URL.t or_string -> ?status:float -> unit -> Response.t) =
      fun (x8088 : t) ->
        fun ~url:(x8083 : URL.t or_string) ->
          fun ?status:(x8084 : float option) ->
            fun () ->
              Response.t_of_js
                (let x8089 = t_to_js x8088 in
                 Ojs.call (Ojs.get_prop_ascii x8089 "redirect") "apply"
                   [|x8089;((let x8085 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8085 "push"
                                  [|(or_string_to_js URL.t_to_js x8083)|]);
                             (match x8084 with
                              | Some x8086 ->
                                  ignore
                                    (Ojs.call x8085 "push"
                                       [|(Ojs.float_to_js x8086)|])
                              | None -> ());
                             x8085))|])
  end
module AnonymousInterface90 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8091 : Ojs.t) -> x8091
    and t_to_js : t -> Ojs.t = fun (x8090 : Ojs.t) -> x8090
    let (get_prototype : t -> Request.t) =
      fun (x8092 : t) ->
        Request.t_of_js (Ojs.get_prop_ascii (t_to_js x8092) "prototype")
    let (set_prototype : t -> Request.t -> unit) =
      fun (x8093 : t) ->
        fun (x8094 : Request.t) ->
          Ojs.set_prop_ascii (t_to_js x8093) "prototype"
            (Request.t_to_js x8094)
    let (create :
      t -> input:RequestInfo.t -> ?init:RequestInit.t -> unit -> Request.t) =
      fun (x8099 : t) ->
        fun ~input:(x8095 : RequestInfo.t) ->
          fun ?init:(x8096 : RequestInit.t option) ->
            fun () ->
              Request.t_of_js
                (Ojs.new_obj_arr (t_to_js x8099)
                   (let x8097 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8097 "push" [|(RequestInfo.t_to_js x8095)|]);
                    (match x8096 with
                     | Some x8098 ->
                         ignore
                           (Ojs.call x8097 "push"
                              [|(RequestInit.t_to_js x8098)|])
                     | None -> ());
                    x8097))
  end
module AnonymousInterface9 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8101 : Ojs.t) -> x8101
    and t_to_js : t -> Ojs.t = fun (x8100 : Ojs.t) -> x8100
    let (get_prototype : t -> Client.t) =
      fun (x8102 : t) ->
        Client.t_of_js (Ojs.get_prop_ascii (t_to_js x8102) "prototype")
    let (set_prototype : t -> Client.t -> unit) =
      fun (x8103 : t) ->
        fun (x8104 : Client.t) ->
          Ojs.set_prop_ascii (t_to_js x8103) "prototype"
            (Client.t_to_js x8104)
    let (create : t -> Client.t) =
      fun (x8105 : t) -> Client.t_of_js (Ojs.new_obj (t_to_js x8105) [||])
  end
module AnonymousInterface89 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8107 : Ojs.t) -> x8107
    and t_to_js : t -> Ojs.t = fun (x8106 : Ojs.t) -> x8106
    let (get_prototype : t -> ReadableStreamDefaultReader.t_0) =
      fun (x8108 : t) ->
        ReadableStreamDefaultReader.t_0_of_js
          (Ojs.get_prop_ascii (t_to_js x8108) "prototype")
    let (set_prototype : t -> ReadableStreamDefaultReader.t_0 -> unit) =
      fun (x8109 : t) ->
        fun (x8110 : ReadableStreamDefaultReader.t_0) ->
          Ojs.set_prop_ascii (t_to_js x8109) "prototype"
            (ReadableStreamDefaultReader.t_0_to_js x8110)
    let (create :
      t -> stream:'R ReadableStream.t -> 'R ReadableStreamDefaultReader.t) =
      fun (x8113 : t) ->
        fun ~stream:(x8111 : 'R ReadableStream.t) ->
          ReadableStreamDefaultReader.t_of_js Obj.magic
            (Ojs.new_obj (t_to_js x8113)
               [|(ReadableStream.t_to_js Obj.magic x8111)|])
  end
module AnonymousInterface88 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8116 : Ojs.t) -> x8116
    and t_to_js : t -> Ojs.t = fun (x8115 : Ojs.t) -> x8115
    let (get_prototype : t -> ReadableStreamDefaultController.t_0) =
      fun (x8117 : t) ->
        ReadableStreamDefaultController.t_0_of_js
          (Ojs.get_prop_ascii (t_to_js x8117) "prototype")
    let (set_prototype : t -> ReadableStreamDefaultController.t_0 -> unit) =
      fun (x8118 : t) ->
        fun (x8119 : ReadableStreamDefaultController.t_0) ->
          Ojs.set_prop_ascii (t_to_js x8118) "prototype"
            (ReadableStreamDefaultController.t_0_to_js x8119)
    let (create : t -> ReadableStreamDefaultController.t_0) =
      fun (x8120 : t) ->
        ReadableStreamDefaultController.t_0_of_js
          (Ojs.new_obj (t_to_js x8120) [||])
  end
module AnonymousInterface87 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8122 : Ojs.t) -> x8122
    and t_to_js : t -> Ojs.t = fun (x8121 : Ojs.t) -> x8121
    let (get_prototype : t -> ReadableStream.t_0) =
      fun (x8123 : t) ->
        ReadableStream.t_0_of_js
          (Ojs.get_prop_ascii (t_to_js x8123) "prototype")
    let (set_prototype : t -> ReadableStream.t_0 -> unit) =
      fun (x8124 : t) ->
        fun (x8125 : ReadableStream.t_0) ->
          Ojs.set_prop_ascii (t_to_js x8124) "prototype"
            (ReadableStream.t_0_to_js x8125)
    let (create :
      t ->
        ?underlyingSource:'R UnderlyingSource.t ->
          ?strategy:'R QueuingStrategy.t -> unit -> 'R ReadableStream.t)
      =
      fun (x8133 : t) ->
        fun ?underlyingSource:(x8126 : 'R UnderlyingSource.t option) ->
          fun ?strategy:(x8127 : 'R QueuingStrategy.t option) ->
            fun () ->
              ReadableStream.t_of_js Obj.magic
                (Ojs.new_obj_arr (t_to_js x8133)
                   (let x8128 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    (match x8126 with
                     | Some x8131 ->
                         ignore
                           (Ojs.call x8128 "push"
                              [|(UnderlyingSource.t_to_js Obj.magic x8131)|])
                     | None -> ());
                    (match x8127 with
                     | Some x8129 ->
                         ignore
                           (Ojs.call x8128 "push"
                              [|(QueuingStrategy.t_to_js Obj.magic x8129)|])
                     | None -> ());
                    x8128))
  end
module AnonymousInterface86 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8136 : Ojs.t) -> x8136
    and t_to_js : t -> Ojs.t = fun (x8135 : Ojs.t) -> x8135
    let (get_prototype : t -> PushSubscriptionOptions.t) =
      fun (x8137 : t) ->
        PushSubscriptionOptions.t_of_js
          (Ojs.get_prop_ascii (t_to_js x8137) "prototype")
    let (set_prototype : t -> PushSubscriptionOptions.t -> unit) =
      fun (x8138 : t) ->
        fun (x8139 : PushSubscriptionOptions.t) ->
          Ojs.set_prop_ascii (t_to_js x8138) "prototype"
            (PushSubscriptionOptions.t_to_js x8139)
    let (create : t -> PushSubscriptionOptions.t) =
      fun (x8140 : t) ->
        PushSubscriptionOptions.t_of_js (Ojs.new_obj (t_to_js x8140) [||])
  end
module AnonymousInterface85 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8142 : Ojs.t) -> x8142
    and t_to_js : t -> Ojs.t = fun (x8141 : Ojs.t) -> x8141
    let (get_prototype : t -> PushSubscription.t) =
      fun (x8143 : t) ->
        PushSubscription.t_of_js
          (Ojs.get_prop_ascii (t_to_js x8143) "prototype")
    let (set_prototype : t -> PushSubscription.t -> unit) =
      fun (x8144 : t) ->
        fun (x8145 : PushSubscription.t) ->
          Ojs.set_prop_ascii (t_to_js x8144) "prototype"
            (PushSubscription.t_to_js x8145)
    let (create : t -> PushSubscription.t) =
      fun (x8146 : t) ->
        PushSubscription.t_of_js (Ojs.new_obj (t_to_js x8146) [||])
  end
module AnonymousInterface84 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8148 : Ojs.t) -> x8148
    and t_to_js : t -> Ojs.t = fun (x8147 : Ojs.t) -> x8147
    let (get_prototype : t -> PushMessageData.t) =
      fun (x8149 : t) ->
        PushMessageData.t_of_js
          (Ojs.get_prop_ascii (t_to_js x8149) "prototype")
    let (set_prototype : t -> PushMessageData.t -> unit) =
      fun (x8150 : t) ->
        fun (x8151 : PushMessageData.t) ->
          Ojs.set_prop_ascii (t_to_js x8150) "prototype"
            (PushMessageData.t_to_js x8151)
    let (create : t -> PushMessageData.t) =
      fun (x8152 : t) ->
        PushMessageData.t_of_js (Ojs.new_obj (t_to_js x8152) [||])
  end
module AnonymousInterface83 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8154 : Ojs.t) -> x8154
    and t_to_js : t -> Ojs.t = fun (x8153 : Ojs.t) -> x8153
    let (get_prototype : t -> PushManager.t) =
      fun (x8155 : t) ->
        PushManager.t_of_js (Ojs.get_prop_ascii (t_to_js x8155) "prototype")
    let (set_prototype : t -> PushManager.t -> unit) =
      fun (x8156 : t) ->
        fun (x8157 : PushManager.t) ->
          Ojs.set_prop_ascii (t_to_js x8156) "prototype"
            (PushManager.t_to_js x8157)
    let (create : t -> PushManager.t) =
      fun (x8158 : t) ->
        PushManager.t_of_js (Ojs.new_obj (t_to_js x8158) [||])
    let (get_supportedContentEncodings : t -> string list) =
      fun (x8159 : t) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (t_to_js x8159) "supportedContentEncodings")
  end
module AnonymousInterface82 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8162 : Ojs.t) -> x8162
    and t_to_js : t -> Ojs.t = fun (x8161 : Ojs.t) -> x8161
    let (get_prototype : t -> PushEvent.t) =
      fun (x8163 : t) ->
        PushEvent.t_of_js (Ojs.get_prop_ascii (t_to_js x8163) "prototype")
    let (set_prototype : t -> PushEvent.t -> unit) =
      fun (x8164 : t) ->
        fun (x8165 : PushEvent.t) ->
          Ojs.set_prop_ascii (t_to_js x8164) "prototype"
            (PushEvent.t_to_js x8165)
    let (create :
      t ->
        type_:string -> ?eventInitDict:PushEventInit.t -> unit -> PushEvent.t)
      =
      fun (x8170 : t) ->
        fun ~type_:(x8166 : string) ->
          fun ?eventInitDict:(x8167 : PushEventInit.t option) ->
            fun () ->
              PushEvent.t_of_js
                (Ojs.new_obj_arr (t_to_js x8170)
                   (let x8168 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8168 "push" [|(Ojs.string_to_js x8166)|]);
                    (match x8167 with
                     | Some x8169 ->
                         ignore
                           (Ojs.call x8168 "push"
                              [|(PushEventInit.t_to_js x8169)|])
                     | None -> ());
                    x8168))
  end
module AnonymousInterface81 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8172 : Ojs.t) -> x8172
    and t_to_js : t -> Ojs.t = fun (x8171 : Ojs.t) -> x8171
    let (get_prototype : t -> PromiseRejectionEvent.t) =
      fun (x8173 : t) ->
        PromiseRejectionEvent.t_of_js
          (Ojs.get_prop_ascii (t_to_js x8173) "prototype")
    let (set_prototype : t -> PromiseRejectionEvent.t -> unit) =
      fun (x8174 : t) ->
        fun (x8175 : PromiseRejectionEvent.t) ->
          Ojs.set_prop_ascii (t_to_js x8174) "prototype"
            (PromiseRejectionEvent.t_to_js x8175)
    let (create :
      t ->
        type_:string ->
          eventInitDict:PromiseRejectionEventInit.t ->
            PromiseRejectionEvent.t)
      =
      fun (x8178 : t) ->
        fun ~type_:(x8176 : string) ->
          fun ~eventInitDict:(x8177 : PromiseRejectionEventInit.t) ->
            PromiseRejectionEvent.t_of_js
              (Ojs.new_obj (t_to_js x8178)
                 [|(Ojs.string_to_js x8176);(PromiseRejectionEventInit.t_to_js
                                               x8177)|])
  end
module AnonymousInterface80 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8180 : Ojs.t) -> x8180
    and t_to_js : t -> Ojs.t = fun (x8179 : Ojs.t) -> x8179
    let (get_prototype : t -> ProgressEvent.t_0) =
      fun (x8181 : t) ->
        ProgressEvent.t_0_of_js
          (Ojs.get_prop_ascii (t_to_js x8181) "prototype")
    let (set_prototype : t -> ProgressEvent.t_0 -> unit) =
      fun (x8182 : t) ->
        fun (x8183 : ProgressEvent.t_0) ->
          Ojs.set_prop_ascii (t_to_js x8182) "prototype"
            (ProgressEvent.t_0_to_js x8183)
    let (create :
      t ->
        type_:string ->
          ?eventInitDict:ProgressEventInit.t -> unit -> ProgressEvent.t_0)
      =
      fun (x8188 : t) ->
        fun ~type_:(x8184 : string) ->
          fun ?eventInitDict:(x8185 : ProgressEventInit.t option) ->
            fun () ->
              ProgressEvent.t_0_of_js
                (Ojs.new_obj_arr (t_to_js x8188)
                   (let x8186 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8186 "push" [|(Ojs.string_to_js x8184)|]);
                    (match x8185 with
                     | Some x8187 ->
                         ignore
                           (Ojs.call x8186 "push"
                              [|(ProgressEventInit.t_to_js x8187)|])
                     | None -> ());
                    x8186))
  end
module DOMMatrix2DInit =
  struct
    type t = [ `DOMMatrix2DInit ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8190 : Ojs.t) -> t_of_js x8190
    and t_0_to_js : t_0 -> Ojs.t = fun (x8189 : t) -> t_to_js x8189
    type tags = [ `DOMMatrix2DInit ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `DOMMatrix2DInit ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8193 : Ojs.t) -> intf_of_js __tags_of_js x8193
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8191 : __tags intf) -> intf_to_js __tags_to_js x8191
    let (get_a : 'tags this -> float) =
      fun (x8195 : 'tags this) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x8195) "a")
    let (set_a : 'tags this -> float -> unit) =
      fun (x8197 : 'tags this) ->
        fun (x8198 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8197) "a"
            (Ojs.float_to_js x8198)
    let (get_b : 'tags this -> float) =
      fun (x8200 : 'tags this) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x8200) "b")
    let (set_b : 'tags this -> float -> unit) =
      fun (x8202 : 'tags this) ->
        fun (x8203 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8202) "b"
            (Ojs.float_to_js x8203)
    let (get_c : 'tags this -> float) =
      fun (x8205 : 'tags this) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x8205) "c")
    let (set_c : 'tags this -> float -> unit) =
      fun (x8207 : 'tags this) ->
        fun (x8208 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8207) "c"
            (Ojs.float_to_js x8208)
    let (get_d : 'tags this -> float) =
      fun (x8210 : 'tags this) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x8210) "d")
    let (set_d : 'tags this -> float -> unit) =
      fun (x8212 : 'tags this) ->
        fun (x8213 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8212) "d"
            (Ojs.float_to_js x8213)
    let (get_e : 'tags this -> float) =
      fun (x8215 : 'tags this) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x8215) "e")
    let (set_e : 'tags this -> float -> unit) =
      fun (x8217 : 'tags this) ->
        fun (x8218 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8217) "e"
            (Ojs.float_to_js x8218)
    let (get_f : 'tags this -> float) =
      fun (x8220 : 'tags this) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x8220) "f")
    let (set_f : 'tags this -> float -> unit) =
      fun (x8222 : 'tags this) ->
        fun (x8223 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8222) "f"
            (Ojs.float_to_js x8223)
    let (get_m11 : 'tags this -> float) =
      fun (x8225 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8225) "m11")
    let (set_m11 : 'tags this -> float -> unit) =
      fun (x8227 : 'tags this) ->
        fun (x8228 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8227) "m11"
            (Ojs.float_to_js x8228)
    let (get_m12 : 'tags this -> float) =
      fun (x8230 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8230) "m12")
    let (set_m12 : 'tags this -> float -> unit) =
      fun (x8232 : 'tags this) ->
        fun (x8233 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8232) "m12"
            (Ojs.float_to_js x8233)
    let (get_m21 : 'tags this -> float) =
      fun (x8235 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8235) "m21")
    let (set_m21 : 'tags this -> float -> unit) =
      fun (x8237 : 'tags this) ->
        fun (x8238 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8237) "m21"
            (Ojs.float_to_js x8238)
    let (get_m22 : 'tags this -> float) =
      fun (x8240 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8240) "m22")
    let (set_m22 : 'tags this -> float -> unit) =
      fun (x8242 : 'tags this) ->
        fun (x8243 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8242) "m22"
            (Ojs.float_to_js x8243)
    let (get_m41 : 'tags this -> float) =
      fun (x8245 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8245) "m41")
    let (set_m41 : 'tags this -> float -> unit) =
      fun (x8247 : 'tags this) ->
        fun (x8248 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8247) "m41"
            (Ojs.float_to_js x8248)
    let (get_m42 : 'tags this -> float) =
      fun (x8250 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8250) "m42")
    let (set_m42 : 'tags this -> float -> unit) =
      fun (x8252 : 'tags this) ->
        fun (x8253 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8252) "m42"
            (Ojs.float_to_js x8253)
    let cast_from = Obj.magic
  end
module CanvasPattern =
  struct
    type t = [ `CanvasPattern ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8256 : Ojs.t) -> t_of_js x8256
    and t_0_to_js : t_0 -> Ojs.t = fun (x8255 : t) -> t_to_js x8255
    type tags = [ `CanvasPattern ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `CanvasPattern ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8259 : Ojs.t) -> intf_of_js __tags_of_js x8259
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8257 : __tags intf) -> intf_to_js __tags_to_js x8257
    let (setTransform :
      'tags this -> ?transform:DOMMatrix2DInit.t -> unit -> unit) =
      fun (x8264 : 'tags this) ->
        fun ?transform:(x8261 : DOMMatrix2DInit.t option) ->
          fun () ->
            ignore
              (let x8266 = this_to_js Obj.magic x8264 in
               Ojs.call (Ojs.get_prop_ascii x8266 "setTransform") "apply"
                 [|x8266;((let x8262 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8261 with
                            | Some x8263 ->
                                ignore
                                  (Ojs.call x8262 "push"
                                     [|(DOMMatrix2DInit.t_to_js x8263)|])
                            | None -> ());
                           x8262))|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "CanvasPattern")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "CanvasPattern") [||])
  end
module AnonymousInterface8 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8268 : Ojs.t) -> x8268
    and t_to_js : t -> Ojs.t = fun (x8267 : Ojs.t) -> x8267
    let (get_prototype : t -> CanvasPattern.t) =
      fun (x8269 : t) ->
        CanvasPattern.t_of_js
          (Ojs.get_prop_ascii (t_to_js x8269) "prototype")
    let (set_prototype : t -> CanvasPattern.t -> unit) =
      fun (x8270 : t) ->
        fun (x8271 : CanvasPattern.t) ->
          Ojs.set_prop_ascii (t_to_js x8270) "prototype"
            (CanvasPattern.t_to_js x8271)
    let (create : t -> CanvasPattern.t) =
      fun (x8272 : t) ->
        CanvasPattern.t_of_js (Ojs.new_obj (t_to_js x8272) [||])
  end
module PermissionName =
  struct
    type t =
      [ `L_s131_notifications  | `L_s148_persistent_storage  | `L_s159_push 
      | `L_s173_screen_wake_lock  | `L_s211_xr_spatial_tracking 
      | `L_s80_geolocation ]
    let rec t_of_js : Ojs.t -> t =
      fun (x8274 : Ojs.t) ->
        let x8275 = x8274 in
        match Ojs.string_of_js x8275 with
        | "notifications" -> `L_s131_notifications
        | "persistent-storage" -> `L_s148_persistent_storage
        | "push" -> `L_s159_push
        | "screen-wake-lock" -> `L_s173_screen_wake_lock
        | "xr-spatial-tracking" -> `L_s211_xr_spatial_tracking
        | "geolocation" -> `L_s80_geolocation
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun
        (x8273 :
          [ `L_s131_notifications  | `L_s148_persistent_storage 
          | `L_s159_push  | `L_s173_screen_wake_lock 
          | `L_s211_xr_spatial_tracking  | `L_s80_geolocation ])
        ->
        match x8273 with
        | `L_s131_notifications -> Ojs.string_to_js "notifications"
        | `L_s148_persistent_storage -> Ojs.string_to_js "persistent-storage"
        | `L_s159_push -> Ojs.string_to_js "push"
        | `L_s173_screen_wake_lock -> Ojs.string_to_js "screen-wake-lock"
        | `L_s211_xr_spatial_tracking ->
            Ojs.string_to_js "xr-spatial-tracking"
        | `L_s80_geolocation -> Ojs.string_to_js "geolocation"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8277 : Ojs.t) -> t_of_js x8277
    and t_0_to_js : t_0 -> Ojs.t = fun (x8276 : t) -> t_to_js x8276
  end
module PermissionDescriptor =
  struct
    type t = [ `PermissionDescriptor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8279 : Ojs.t) -> t_of_js x8279
    and t_0_to_js : t_0 -> Ojs.t = fun (x8278 : t) -> t_to_js x8278
    type tags = [ `PermissionDescriptor ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `PermissionDescriptor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8282 : Ojs.t) -> intf_of_js __tags_of_js x8282
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8280 : __tags intf) -> intf_to_js __tags_to_js x8280
    let (get_name : 'tags this -> PermissionName.t) =
      fun (x8284 : 'tags this) ->
        PermissionName.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8284) "name")
    let (set_name : 'tags this -> PermissionName.t -> unit) =
      fun (x8286 : 'tags this) ->
        fun (x8287 : PermissionName.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8286) "name"
            (PermissionName.t_to_js x8287)
    let cast_from = Obj.magic
  end
module PermissionState =
  struct
    type t = [ `L_s157_prompt  | `L_s58_denied  | `L_s82_granted ]
    let rec t_of_js : Ojs.t -> t =
      fun (x8290 : Ojs.t) ->
        let x8291 = x8290 in
        match Ojs.string_of_js x8291 with
        | "prompt" -> `L_s157_prompt
        | "denied" -> `L_s58_denied
        | "granted" -> `L_s82_granted
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun (x8289 : [ `L_s157_prompt  | `L_s58_denied  | `L_s82_granted ]) ->
        match x8289 with
        | `L_s157_prompt -> Ojs.string_to_js "prompt"
        | `L_s58_denied -> Ojs.string_to_js "denied"
        | `L_s82_granted -> Ojs.string_to_js "granted"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8293 : Ojs.t) -> t_of_js x8293
    and t_0_to_js : t_0 -> Ojs.t = fun (x8292 : t) -> t_to_js x8292
  end
module PermissionStatus =
  struct
    type t = [ `EventTarget  | `PermissionStatus ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8295 : Ojs.t) -> t_of_js x8295
    and t_0_to_js : t_0 -> Ojs.t = fun (x8294 : t) -> t_to_js x8294
    type tags = [ `EventTarget  | `PermissionStatus ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `PermissionStatus ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8298 : Ojs.t) -> intf_of_js __tags_of_js x8298
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8296 : __tags intf) -> intf_to_js __tags_to_js x8296
    let (get_onchange : 'tags this -> (this:t -> ev:Event.t -> any) or_null)
      =
      fun (x8300 : 'tags this) ->
        or_null_of_js
          (fun (x8302 : Ojs.t) ->
             fun ~this:(x8303 : t) ->
               fun ~ev:(x8304 : Event.t) ->
                 any_of_js
                   (Ojs.apply x8302 [|(t_to_js x8303);(Event.t_to_js x8304)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8300) "onchange")
    let (set_onchange :
      'tags this -> (this:t -> ev:Event.t -> any) or_null -> unit) =
      fun (x8305 : 'tags this) ->
        fun (x8306 : (this:t -> ev:Event.t -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8305) "onchange"
            (or_null_to_js
               (fun (x8307 : this:t -> ev:Event.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x8308 : Ojs.t) ->
                       fun (x8309 : Ojs.t) ->
                         any_to_js
                           (x8307 ~this:(t_of_js x8308)
                              ~ev:(Event.t_of_js x8309)))) x8306)
    let (get_state : 'tags this -> PermissionState.t) =
      fun (x8311 : 'tags this) ->
        PermissionState.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8311) "state")
    let (addEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x8321 : 'tags this) ->
        fun ~type_:(x8313 : 'K) ->
          fun ~listener:(x8314 : this:t -> ev:any -> any) ->
            fun
              ?options:(x8315 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x8323 = this_to_js Obj.magic x8321 in
                   Ojs.call (Ojs.get_prop_ascii x8323 "addEventListener")
                     "apply"
                     [|x8323;((let x8316 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8316 "push" [|(Obj.magic x8313)|]);
                               ignore
                                 (Ojs.call x8316 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x8319 : Ojs.t) ->
                                            fun (x8320 : Ojs.t) ->
                                              any_to_js
                                                (x8314 ~this:(t_of_js x8319)
                                                   ~ev:(any_of_js x8320))))|]);
                               (match x8315 with
                                | Some x8317 ->
                                    ignore
                                      (Ojs.call x8316 "push"
                                         [|(or_boolean_to_js
                                              AddEventListenerOptions.t_to_js
                                              x8317)|])
                                | None -> ());
                               x8316))|])
    let (addEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x8330 : 'tags this) ->
        fun ~type_:(x8324 : string) ->
          fun ~listener:(x8325 : EventListenerOrEventListenerObject.t) ->
            fun
              ?options:(x8326 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x8332 = this_to_js Obj.magic x8330 in
                   Ojs.call (Ojs.get_prop_ascii x8332 "addEventListener")
                     "apply"
                     [|x8332;((let x8327 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8327 "push"
                                    [|(Ojs.string_to_js x8324)|]);
                               ignore
                                 (Ojs.call x8327 "push"
                                    [|(EventListenerOrEventListenerObject.t_to_js
                                         x8325)|]);
                               (match x8326 with
                                | Some x8328 ->
                                    ignore
                                      (Ojs.call x8327 "push"
                                         [|(or_boolean_to_js
                                              AddEventListenerOptions.t_to_js
                                              x8328)|])
                                | None -> ());
                               x8327))|])
    let (removeEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x8341 : 'tags this) ->
        fun ~type_:(x8333 : 'K) ->
          fun ~listener:(x8334 : this:t -> ev:any -> any) ->
            fun ?options:(x8335 : EventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x8343 = this_to_js Obj.magic x8341 in
                   Ojs.call (Ojs.get_prop_ascii x8343 "removeEventListener")
                     "apply"
                     [|x8343;((let x8336 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8336 "push" [|(Obj.magic x8333)|]);
                               ignore
                                 (Ojs.call x8336 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x8339 : Ojs.t) ->
                                            fun (x8340 : Ojs.t) ->
                                              any_to_js
                                                (x8334 ~this:(t_of_js x8339)
                                                   ~ev:(any_of_js x8340))))|]);
                               (match x8335 with
                                | Some x8337 ->
                                    ignore
                                      (Ojs.call x8336 "push"
                                         [|(or_boolean_to_js
                                              EventListenerOptions.t_to_js
                                              x8337)|])
                                | None -> ());
                               x8336))|])
    let (removeEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x8350 : 'tags this) ->
        fun ~type_:(x8344 : string) ->
          fun ~listener:(x8345 : EventListenerOrEventListenerObject.t) ->
            fun ?options:(x8346 : EventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x8352 = this_to_js Obj.magic x8350 in
                   Ojs.call (Ojs.get_prop_ascii x8352 "removeEventListener")
                     "apply"
                     [|x8352;((let x8347 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8347 "push"
                                    [|(Ojs.string_to_js x8344)|]);
                               ignore
                                 (Ojs.call x8347 "push"
                                    [|(EventListenerOrEventListenerObject.t_to_js
                                         x8345)|]);
                               (match x8346 with
                                | Some x8348 ->
                                    ignore
                                      (Ojs.call x8347 "push"
                                         [|(or_boolean_to_js
                                              EventListenerOptions.t_to_js
                                              x8348)|])
                                | None -> ());
                               x8347))|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "PermissionStatus") "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "PermissionStatus")
             [||])
  end
module Permissions =
  struct
    type t = [ `Permissions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8354 : Ojs.t) -> t_of_js x8354
    and t_0_to_js : t_0 -> Ojs.t = fun (x8353 : t) -> t_to_js x8353
    type tags = [ `Permissions ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Permissions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8357 : Ojs.t) -> intf_of_js __tags_of_js x8357
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8355 : __tags intf) -> intf_to_js __tags_to_js x8355
    let (query :
      'tags this ->
        permissionDesc:PermissionDescriptor.t ->
          PermissionStatus.t Promise.t_1)
      =
      fun (x8360 : 'tags this) ->
        fun ~permissionDesc:(x8359 : PermissionDescriptor.t) ->
          Promise.t_1_of_js PermissionStatus.t_of_js
            (Ojs.call (this_to_js Obj.magic x8360) "query"
               [|(PermissionDescriptor.t_to_js x8359)|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Permissions")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Permissions") [||])
  end
module AnonymousInterface79 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8364 : Ojs.t) -> x8364
    and t_to_js : t -> Ojs.t = fun (x8363 : Ojs.t) -> x8363
    let (get_prototype : t -> Permissions.t) =
      fun (x8365 : t) ->
        Permissions.t_of_js (Ojs.get_prop_ascii (t_to_js x8365) "prototype")
    let (set_prototype : t -> Permissions.t -> unit) =
      fun (x8366 : t) ->
        fun (x8367 : Permissions.t) ->
          Ojs.set_prop_ascii (t_to_js x8366) "prototype"
            (Permissions.t_to_js x8367)
    let (create : t -> Permissions.t) =
      fun (x8368 : t) ->
        Permissions.t_of_js (Ojs.new_obj (t_to_js x8368) [||])
  end
module AnonymousInterface78 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8370 : Ojs.t) -> x8370
    and t_to_js : t -> Ojs.t = fun (x8369 : Ojs.t) -> x8369
    let (get_prototype : t -> PermissionStatus.t) =
      fun (x8371 : t) ->
        PermissionStatus.t_of_js
          (Ojs.get_prop_ascii (t_to_js x8371) "prototype")
    let (set_prototype : t -> PermissionStatus.t -> unit) =
      fun (x8372 : t) ->
        fun (x8373 : PermissionStatus.t) ->
          Ojs.set_prop_ascii (t_to_js x8372) "prototype"
            (PermissionStatus.t_to_js x8373)
    let (create : t -> PermissionStatus.t) =
      fun (x8374 : t) ->
        PermissionStatus.t_of_js (Ojs.new_obj (t_to_js x8374) [||])
  end
module PerformanceServerTiming =
  struct
    type t = [ `PerformanceServerTiming ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8376 : Ojs.t) -> t_of_js x8376
    and t_0_to_js : t_0 -> Ojs.t = fun (x8375 : t) -> t_to_js x8375
    type tags = [ `PerformanceServerTiming ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `PerformanceServerTiming ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8379 : Ojs.t) -> intf_of_js __tags_of_js x8379
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8377 : __tags intf) -> intf_to_js __tags_to_js x8377
    let (get_description : 'tags this -> string) =
      fun (x8381 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8381) "description")
    let (get_duration : 'tags this -> DOMHighResTimeStamp.t) =
      fun (x8383 : 'tags this) ->
        DOMHighResTimeStamp.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8383) "duration")
    let (get_name : 'tags this -> string) =
      fun (x8385 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8385) "name")
    let (toJSON : 'tags this -> any) =
      fun (x8387 : 'tags this) ->
        any_of_js (Ojs.call (this_to_js Obj.magic x8387) "toJSON" [||])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "PerformanceServerTiming")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj
             (Ojs.get_prop_ascii Ojs.global "PerformanceServerTiming") 
             [||])
  end
module AnonymousInterface77 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8390 : Ojs.t) -> x8390
    and t_to_js : t -> Ojs.t = fun (x8389 : Ojs.t) -> x8389
    let (get_prototype : t -> PerformanceServerTiming.t) =
      fun (x8391 : t) ->
        PerformanceServerTiming.t_of_js
          (Ojs.get_prop_ascii (t_to_js x8391) "prototype")
    let (set_prototype : t -> PerformanceServerTiming.t -> unit) =
      fun (x8392 : t) ->
        fun (x8393 : PerformanceServerTiming.t) ->
          Ojs.set_prop_ascii (t_to_js x8392) "prototype"
            (PerformanceServerTiming.t_to_js x8393)
    let (create : t -> PerformanceServerTiming.t) =
      fun (x8394 : t) ->
        PerformanceServerTiming.t_of_js (Ojs.new_obj (t_to_js x8394) [||])
  end
module PerformanceResourceTiming =
  struct
    type t = [ `PerformanceEntry  | `PerformanceResourceTiming ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8396 : Ojs.t) -> t_of_js x8396
    and t_0_to_js : t_0 -> Ojs.t = fun (x8395 : t) -> t_to_js x8395
    type tags = [ `PerformanceEntry  | `PerformanceResourceTiming ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `PerformanceResourceTiming ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8399 : Ojs.t) -> intf_of_js __tags_of_js x8399
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8397 : __tags intf) -> intf_to_js __tags_to_js x8397
    let (get_connectEnd : 'tags this -> DOMHighResTimeStamp.t) =
      fun (x8401 : 'tags this) ->
        DOMHighResTimeStamp.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8401) "connectEnd")
    let (get_connectStart : 'tags this -> DOMHighResTimeStamp.t) =
      fun (x8403 : 'tags this) ->
        DOMHighResTimeStamp.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8403) "connectStart")
    let (get_decodedBodySize : 'tags this -> float) =
      fun (x8405 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8405) "decodedBodySize")
    let (get_domainLookupEnd : 'tags this -> DOMHighResTimeStamp.t) =
      fun (x8407 : 'tags this) ->
        DOMHighResTimeStamp.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8407) "domainLookupEnd")
    let (get_domainLookupStart : 'tags this -> DOMHighResTimeStamp.t) =
      fun (x8409 : 'tags this) ->
        DOMHighResTimeStamp.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8409)
             "domainLookupStart")
    let (get_encodedBodySize : 'tags this -> float) =
      fun (x8411 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8411) "encodedBodySize")
    let (get_fetchStart : 'tags this -> DOMHighResTimeStamp.t) =
      fun (x8413 : 'tags this) ->
        DOMHighResTimeStamp.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8413) "fetchStart")
    let (get_initiatorType : 'tags this -> string) =
      fun (x8415 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8415) "initiatorType")
    let (get_nextHopProtocol : 'tags this -> string) =
      fun (x8417 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8417) "nextHopProtocol")
    let (get_redirectEnd : 'tags this -> DOMHighResTimeStamp.t) =
      fun (x8419 : 'tags this) ->
        DOMHighResTimeStamp.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8419) "redirectEnd")
    let (get_redirectStart : 'tags this -> DOMHighResTimeStamp.t) =
      fun (x8421 : 'tags this) ->
        DOMHighResTimeStamp.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8421) "redirectStart")
    let (get_requestStart : 'tags this -> DOMHighResTimeStamp.t) =
      fun (x8423 : 'tags this) ->
        DOMHighResTimeStamp.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8423) "requestStart")
    let (get_responseEnd : 'tags this -> DOMHighResTimeStamp.t) =
      fun (x8425 : 'tags this) ->
        DOMHighResTimeStamp.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8425) "responseEnd")
    let (get_responseStart : 'tags this -> DOMHighResTimeStamp.t) =
      fun (x8427 : 'tags this) ->
        DOMHighResTimeStamp.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8427) "responseStart")
    let (get_secureConnectionStart : 'tags this -> DOMHighResTimeStamp.t) =
      fun (x8429 : 'tags this) ->
        DOMHighResTimeStamp.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8429)
             "secureConnectionStart")
    let (get_serverTiming : 'tags this -> PerformanceServerTiming.t list) =
      fun (x8431 : 'tags this) ->
        Ojs.list_of_js PerformanceServerTiming.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8431) "serverTiming")
    let (get_transferSize : 'tags this -> float) =
      fun (x8434 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8434) "transferSize")
    let (get_workerStart : 'tags this -> DOMHighResTimeStamp.t) =
      fun (x8436 : 'tags this) ->
        DOMHighResTimeStamp.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8436) "workerStart")
    let (toJSON : 'tags this -> any) =
      fun (x8438 : 'tags this) ->
        any_of_js (Ojs.call (this_to_js Obj.magic x8438) "toJSON" [||])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "PerformanceResourceTiming")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj
             (Ojs.get_prop_ascii Ojs.global "PerformanceResourceTiming") 
             [||])
  end
module AnonymousInterface76 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8441 : Ojs.t) -> x8441
    and t_to_js : t -> Ojs.t = fun (x8440 : Ojs.t) -> x8440
    let (get_prototype : t -> PerformanceResourceTiming.t) =
      fun (x8442 : t) ->
        PerformanceResourceTiming.t_of_js
          (Ojs.get_prop_ascii (t_to_js x8442) "prototype")
    let (set_prototype : t -> PerformanceResourceTiming.t -> unit) =
      fun (x8443 : t) ->
        fun (x8444 : PerformanceResourceTiming.t) ->
          Ojs.set_prop_ascii (t_to_js x8443) "prototype"
            (PerformanceResourceTiming.t_to_js x8444)
    let (create : t -> PerformanceResourceTiming.t) =
      fun (x8445 : t) ->
        PerformanceResourceTiming.t_of_js (Ojs.new_obj (t_to_js x8445) [||])
  end
module PerformanceObserverEntryList =
  struct
    type t = [ `PerformanceObserverEntryList ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8447 : Ojs.t) -> t_of_js x8447
    and t_0_to_js : t_0 -> Ojs.t = fun (x8446 : t) -> t_to_js x8446
    type tags = [ `PerformanceObserverEntryList ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `PerformanceObserverEntryList ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8450 : Ojs.t) -> intf_of_js __tags_of_js x8450
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8448 : __tags intf) -> intf_to_js __tags_to_js x8448
    let (getEntries : 'tags this -> PerformanceEntryList.t) =
      fun (x8452 : 'tags this) ->
        PerformanceEntryList.t_of_js
          (Ojs.call (this_to_js Obj.magic x8452) "getEntries" [||])
    let (getEntriesByName :
      'tags this ->
        name:string -> ?type_:string -> unit -> PerformanceEntryList.t)
      =
      fun (x8458 : 'tags this) ->
        fun ~name:(x8454 : string) ->
          fun ?type_:(x8455 : string option) ->
            fun () ->
              PerformanceEntryList.t_of_js
                (let x8460 = this_to_js Obj.magic x8458 in
                 Ojs.call (Ojs.get_prop_ascii x8460 "getEntriesByName")
                   "apply"
                   [|x8460;((let x8456 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8456 "push"
                                  [|(Ojs.string_to_js x8454)|]);
                             (match x8455 with
                              | Some x8457 ->
                                  ignore
                                    (Ojs.call x8456 "push"
                                       [|(Ojs.string_to_js x8457)|])
                              | None -> ());
                             x8456))|])
    let (getEntriesByType :
      'tags this -> type_:string -> PerformanceEntryList.t) =
      fun (x8462 : 'tags this) ->
        fun ~type_:(x8461 : string) ->
          PerformanceEntryList.t_of_js
            (Ojs.call (this_to_js Obj.magic x8462) "getEntriesByType"
               [|(Ojs.string_to_js x8461)|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "PerformanceObserverEntryList")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj
             (Ojs.get_prop_ascii Ojs.global "PerformanceObserverEntryList")
             [||])
  end
module AnonymousInterface75 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8465 : Ojs.t) -> x8465
    and t_to_js : t -> Ojs.t = fun (x8464 : Ojs.t) -> x8464
    let (get_prototype : t -> PerformanceObserverEntryList.t) =
      fun (x8466 : t) ->
        PerformanceObserverEntryList.t_of_js
          (Ojs.get_prop_ascii (t_to_js x8466) "prototype")
    let (set_prototype : t -> PerformanceObserverEntryList.t -> unit) =
      fun (x8467 : t) ->
        fun (x8468 : PerformanceObserverEntryList.t) ->
          Ojs.set_prop_ascii (t_to_js x8467) "prototype"
            (PerformanceObserverEntryList.t_to_js x8468)
    let (create : t -> PerformanceObserverEntryList.t) =
      fun (x8469 : t) ->
        PerformanceObserverEntryList.t_of_js
          (Ojs.new_obj (t_to_js x8469) [||])
  end
module PerformanceObserverInit =
  struct
    type t = [ `PerformanceObserverInit ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8471 : Ojs.t) -> t_of_js x8471
    and t_0_to_js : t_0 -> Ojs.t = fun (x8470 : t) -> t_to_js x8470
    type tags = [ `PerformanceObserverInit ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `PerformanceObserverInit ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8474 : Ojs.t) -> intf_of_js __tags_of_js x8474
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8472 : __tags intf) -> intf_to_js __tags_to_js x8472
    let (get_buffered : 'tags this -> bool) =
      fun (x8476 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8476) "buffered")
    let (set_buffered : 'tags this -> bool -> unit) =
      fun (x8478 : 'tags this) ->
        fun (x8479 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8478) "buffered"
            (Ojs.bool_to_js x8479)
    let (get_entryTypes : 'tags this -> string list) =
      fun (x8481 : 'tags this) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8481) "entryTypes")
    let (set_entryTypes : 'tags this -> string list -> unit) =
      fun (x8484 : 'tags this) ->
        fun (x8485 : string list) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8484) "entryTypes"
            (Ojs.list_to_js Ojs.string_to_js x8485)
    let (get_type : 'tags this -> string) =
      fun (x8488 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8488) "type")
    let (set_type : 'tags this -> string -> unit) =
      fun (x8490 : 'tags this) ->
        fun (x8491 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8490) "type"
            (Ojs.string_to_js x8491)
    let cast_from = Obj.magic
  end
module rec
  PerformanceObserver:sig
                        type t = [ `PerformanceObserver ] intf
                        type t_0 = t
                        [@@@js.stop ]
                        type tags = [ `PerformanceObserver ]
                        type tags_0 = tags
                        [@@@js.start ]
                        [@@@js.implem
                          type tags = [ `PerformanceObserver ]
                          type tags_0 = tags]
                        type 'tags this =
                          'tags intf constraint 'tags =
                                      [> `PerformanceObserver ]
                        val t_to_js : t -> Ojs.t
                        val t_of_js : Ojs.t -> t
                        val t_0_to_js : t_0 -> Ojs.t
                        val t_0_of_js : Ojs.t -> t_0
                        val disconnect : 'tags this -> unit
                        val observe :
                          'tags this ->
                            ?options:PerformanceObserverInit.t ->
                              unit -> unit
                        val takeRecords :
                          'tags this -> PerformanceEntryList.t
                        val cast_from : 'tags this -> t
                        val prototype : unit -> t
                        val create : PerformanceObserverCallback.t -> t
                        val supportedEntryTypes : unit -> string list
                      end =
  struct
    type t = [ `PerformanceObserver ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8494 : Ojs.t) -> t_of_js x8494
    and t_0_to_js : t_0 -> Ojs.t = fun (x8493 : t) -> t_to_js x8493
    type tags = [ `PerformanceObserver ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `PerformanceObserver ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8497 : Ojs.t) -> intf_of_js __tags_of_js x8497
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8495 : __tags intf) -> intf_to_js __tags_to_js x8495
    let (disconnect : 'tags this -> unit) =
      fun (x8499 : 'tags this) ->
        ignore (Ojs.call (this_to_js Obj.magic x8499) "disconnect" [||])
    let (observe :
      'tags this -> ?options:PerformanceObserverInit.t -> unit -> unit) =
      fun (x8504 : 'tags this) ->
        fun ?options:(x8501 : PerformanceObserverInit.t option) ->
          fun () ->
            ignore
              (let x8506 = this_to_js Obj.magic x8504 in
               Ojs.call (Ojs.get_prop_ascii x8506 "observe") "apply"
                 [|x8506;((let x8502 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8501 with
                            | Some x8503 ->
                                ignore
                                  (Ojs.call x8502 "push"
                                     [|(PerformanceObserverInit.t_to_js x8503)|])
                            | None -> ());
                           x8502))|])
    let (takeRecords : 'tags this -> PerformanceEntryList.t) =
      fun (x8507 : 'tags this) ->
        PerformanceEntryList.t_of_js
          (Ojs.call (this_to_js Obj.magic x8507) "takeRecords" [||])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "PerformanceObserver")
             "prototype")
    let (create : PerformanceObserverCallback.t -> t) =
      fun (x8509 : PerformanceObserverCallback.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "PerformanceObserver")
             [|(PerformanceObserverCallback.t_to_js x8509)|])
    let (supportedEntryTypes : unit -> string list) =
      fun () ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "PerformanceObserver")
             "supportedEntryTypes")
  end
 and
  PerformanceObserverCallback:sig
                                type t =
                                  [ `PerformanceObserverCallback ] intf
                                type t_0 = t
                                [@@@js.stop ]
                                type tags = [ `PerformanceObserverCallback ]
                                type tags_0 = tags
                                [@@@js.start ]
                                [@@@js.implem
                                  type tags =
                                    [ `PerformanceObserverCallback ]
                                  type tags_0 = tags]
                                type 'tags this =
                                  'tags intf constraint 'tags =
                                              [>
                                                `PerformanceObserverCallback ]
                                val t_to_js : t -> Ojs.t
                                val t_of_js : Ojs.t -> t
                                val t_0_to_js : t_0 -> Ojs.t
                                val t_0_of_js : Ojs.t -> t_0
                                val apply :
                                  'tags this ->
                                    entries:PerformanceObserverEntryList.t ->
                                      observer:PerformanceObserver.t -> unit
                                val cast_from : 'tags this -> t
                              end =
  struct
    type t = [ `PerformanceObserverCallback ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8512 : Ojs.t) -> t_of_js x8512
    and t_0_to_js : t_0 -> Ojs.t = fun (x8511 : t) -> t_to_js x8511
    type tags = [ `PerformanceObserverCallback ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `PerformanceObserverCallback ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8515 : Ojs.t) -> intf_of_js __tags_of_js x8515
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8513 : __tags intf) -> intf_to_js __tags_to_js x8513
    let (apply :
      'tags this ->
        entries:PerformanceObserverEntryList.t ->
          observer:PerformanceObserver.t -> unit)
      =
      fun (x8519 : 'tags this) ->
        fun ~entries:(x8517 : PerformanceObserverEntryList.t) ->
          fun ~observer:(x8518 : PerformanceObserver.t) ->
            ignore
              (Ojs.apply (this_to_js Obj.magic x8519)
                 [|(PerformanceObserverEntryList.t_to_js x8517);(PerformanceObserver.t_to_js
                                                                   x8518)|])
    let cast_from = Obj.magic
  end
module AnonymousInterface74 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8522 : Ojs.t) -> x8522
    and t_to_js : t -> Ojs.t = fun (x8521 : Ojs.t) -> x8521
    let (get_prototype : t -> PerformanceObserver.t) =
      fun (x8523 : t) ->
        PerformanceObserver.t_of_js
          (Ojs.get_prop_ascii (t_to_js x8523) "prototype")
    let (set_prototype : t -> PerformanceObserver.t -> unit) =
      fun (x8524 : t) ->
        fun (x8525 : PerformanceObserver.t) ->
          Ojs.set_prop_ascii (t_to_js x8524) "prototype"
            (PerformanceObserver.t_to_js x8525)
    let (create :
      t -> callback:PerformanceObserverCallback.t -> PerformanceObserver.t) =
      fun (x8527 : t) ->
        fun ~callback:(x8526 : PerformanceObserverCallback.t) ->
          PerformanceObserver.t_of_js
            (Ojs.new_obj (t_to_js x8527)
               [|(PerformanceObserverCallback.t_to_js x8526)|])
    let (get_supportedEntryTypes : t -> string list) =
      fun (x8528 : t) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (t_to_js x8528) "supportedEntryTypes")
  end
module AnonymousInterface73 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8531 : Ojs.t) -> x8531
    and t_to_js : t -> Ojs.t = fun (x8530 : Ojs.t) -> x8530
    let (get_prototype : t -> PerformanceMeasure.t) =
      fun (x8532 : t) ->
        PerformanceMeasure.t_of_js
          (Ojs.get_prop_ascii (t_to_js x8532) "prototype")
    let (set_prototype : t -> PerformanceMeasure.t -> unit) =
      fun (x8533 : t) ->
        fun (x8534 : PerformanceMeasure.t) ->
          Ojs.set_prop_ascii (t_to_js x8533) "prototype"
            (PerformanceMeasure.t_to_js x8534)
    let (create : t -> PerformanceMeasure.t) =
      fun (x8535 : t) ->
        PerformanceMeasure.t_of_js (Ojs.new_obj (t_to_js x8535) [||])
  end
module AnonymousInterface72 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8537 : Ojs.t) -> x8537
    and t_to_js : t -> Ojs.t = fun (x8536 : Ojs.t) -> x8536
    let (get_prototype : t -> PerformanceMark.t) =
      fun (x8538 : t) ->
        PerformanceMark.t_of_js
          (Ojs.get_prop_ascii (t_to_js x8538) "prototype")
    let (set_prototype : t -> PerformanceMark.t -> unit) =
      fun (x8539 : t) ->
        fun (x8540 : PerformanceMark.t) ->
          Ojs.set_prop_ascii (t_to_js x8539) "prototype"
            (PerformanceMark.t_to_js x8540)
    let (create :
      t ->
        markName:string ->
          ?markOptions:PerformanceMarkOptions.t -> unit -> PerformanceMark.t)
      =
      fun (x8545 : t) ->
        fun ~markName:(x8541 : string) ->
          fun ?markOptions:(x8542 : PerformanceMarkOptions.t option) ->
            fun () ->
              PerformanceMark.t_of_js
                (Ojs.new_obj_arr (t_to_js x8545)
                   (let x8543 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8543 "push" [|(Ojs.string_to_js x8541)|]);
                    (match x8542 with
                     | Some x8544 ->
                         ignore
                           (Ojs.call x8543 "push"
                              [|(PerformanceMarkOptions.t_to_js x8544)|])
                     | None -> ());
                    x8543))
  end
module AnonymousInterface71 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8547 : Ojs.t) -> x8547
    and t_to_js : t -> Ojs.t = fun (x8546 : Ojs.t) -> x8546
    let (get_prototype : t -> PerformanceEntry.t) =
      fun (x8548 : t) ->
        PerformanceEntry.t_of_js
          (Ojs.get_prop_ascii (t_to_js x8548) "prototype")
    let (set_prototype : t -> PerformanceEntry.t -> unit) =
      fun (x8549 : t) ->
        fun (x8550 : PerformanceEntry.t) ->
          Ojs.set_prop_ascii (t_to_js x8549) "prototype"
            (PerformanceEntry.t_to_js x8550)
    let (create : t -> PerformanceEntry.t) =
      fun (x8551 : t) ->
        PerformanceEntry.t_of_js (Ojs.new_obj (t_to_js x8551) [||])
  end
module AnonymousInterface70 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8553 : Ojs.t) -> x8553
    and t_to_js : t -> Ojs.t = fun (x8552 : Ojs.t) -> x8552
    let (get_prototype : t -> Performance.t) =
      fun (x8554 : t) ->
        Performance.t_of_js (Ojs.get_prop_ascii (t_to_js x8554) "prototype")
    let (set_prototype : t -> Performance.t -> unit) =
      fun (x8555 : t) ->
        fun (x8556 : Performance.t) ->
          Ojs.set_prop_ascii (t_to_js x8555) "prototype"
            (Performance.t_to_js x8556)
    let (create : t -> Performance.t) =
      fun (x8557 : t) ->
        Performance.t_of_js (Ojs.new_obj (t_to_js x8557) [||])
  end
module CanvasGradient =
  struct
    type t = [ `CanvasGradient ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8559 : Ojs.t) -> t_of_js x8559
    and t_0_to_js : t_0 -> Ojs.t = fun (x8558 : t) -> t_to_js x8558
    type tags = [ `CanvasGradient ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `CanvasGradient ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8562 : Ojs.t) -> intf_of_js __tags_of_js x8562
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8560 : __tags intf) -> intf_to_js __tags_to_js x8560
    let (addColorStop : 'tags this -> offset:float -> color:string -> unit) =
      fun (x8566 : 'tags this) ->
        fun ~offset:(x8564 : float) ->
          fun ~color:(x8565 : string) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x8566) "addColorStop"
                 [|(Ojs.float_to_js x8564);(Ojs.string_to_js x8565)|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "CanvasGradient") "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "CanvasGradient") [||])
  end
module AnonymousInterface7 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8569 : Ojs.t) -> x8569
    and t_to_js : t -> Ojs.t = fun (x8568 : Ojs.t) -> x8568
    let (get_prototype : t -> CanvasGradient.t) =
      fun (x8570 : t) ->
        CanvasGradient.t_of_js
          (Ojs.get_prop_ascii (t_to_js x8570) "prototype")
    let (set_prototype : t -> CanvasGradient.t -> unit) =
      fun (x8571 : t) ->
        fun (x8572 : CanvasGradient.t) ->
          Ojs.set_prop_ascii (t_to_js x8571) "prototype"
            (CanvasGradient.t_to_js x8572)
    let (create : t -> CanvasGradient.t) =
      fun (x8573 : t) ->
        CanvasGradient.t_of_js (Ojs.new_obj (t_to_js x8573) [||])
  end
module CanvasPath =
  struct
    type t = [ `CanvasPath ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8575 : Ojs.t) -> t_of_js x8575
    and t_0_to_js : t_0 -> Ojs.t = fun (x8574 : t) -> t_to_js x8574
    type tags = [ `CanvasPath ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `CanvasPath ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8578 : Ojs.t) -> intf_of_js __tags_of_js x8578
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8576 : __tags intf) -> intf_to_js __tags_to_js x8576
    let (arc :
      'tags this ->
        x:float ->
          y:float ->
            radius:float ->
              startAngle:float ->
                endAngle:float -> ?counterclockwise:bool -> unit -> unit)
      =
      fun (x8588 : 'tags this) ->
        fun ~x:(x8580 : float) ->
          fun ~y:(x8581 : float) ->
            fun ~radius:(x8582 : float) ->
              fun ~startAngle:(x8583 : float) ->
                fun ~endAngle:(x8584 : float) ->
                  fun ?counterclockwise:(x8585 : bool option) ->
                    fun () ->
                      ignore
                        (let x8590 = this_to_js Obj.magic x8588 in
                         Ojs.call (Ojs.get_prop_ascii x8590 "arc") "apply"
                           [|x8590;((let x8586 =
                                       Ojs.new_obj
                                         (Ojs.get_prop_ascii Ojs.global
                                            "Array") [||] in
                                     ignore
                                       (Ojs.call x8586 "push"
                                          [|(Ojs.float_to_js x8580)|]);
                                     ignore
                                       (Ojs.call x8586 "push"
                                          [|(Ojs.float_to_js x8581)|]);
                                     ignore
                                       (Ojs.call x8586 "push"
                                          [|(Ojs.float_to_js x8582)|]);
                                     ignore
                                       (Ojs.call x8586 "push"
                                          [|(Ojs.float_to_js x8583)|]);
                                     ignore
                                       (Ojs.call x8586 "push"
                                          [|(Ojs.float_to_js x8584)|]);
                                     (match x8585 with
                                      | Some x8587 ->
                                          ignore
                                            (Ojs.call x8586 "push"
                                               [|(Ojs.bool_to_js x8587)|])
                                      | None -> ());
                                     x8586))|])
    let (arcTo :
      'tags this ->
        x1:float -> y1:float -> x2:float -> y2:float -> radius:float -> unit)
      =
      fun (x8596 : 'tags this) ->
        fun ~x1:(x8591 : float) ->
          fun ~y1:(x8592 : float) ->
            fun ~x2:(x8593 : float) ->
              fun ~y2:(x8594 : float) ->
                fun ~radius:(x8595 : float) ->
                  ignore
                    (Ojs.call (this_to_js Obj.magic x8596) "arcTo"
                       [|(Ojs.float_to_js x8591);(Ojs.float_to_js x8592);(
                         Ojs.float_to_js x8593);(Ojs.float_to_js x8594);(
                         Ojs.float_to_js x8595)|])
    let (bezierCurveTo :
      'tags this ->
        cp1x:float ->
          cp1y:float ->
            cp2x:float -> cp2y:float -> x:float -> y:float -> unit)
      =
      fun (x8604 : 'tags this) ->
        fun ~cp1x:(x8598 : float) ->
          fun ~cp1y:(x8599 : float) ->
            fun ~cp2x:(x8600 : float) ->
              fun ~cp2y:(x8601 : float) ->
                fun ~x:(x8602 : float) ->
                  fun ~y:(x8603 : float) ->
                    ignore
                      (Ojs.call (this_to_js Obj.magic x8604) "bezierCurveTo"
                         [|(Ojs.float_to_js x8598);(Ojs.float_to_js x8599);(
                           Ojs.float_to_js x8600);(Ojs.float_to_js x8601);(
                           Ojs.float_to_js x8602);(Ojs.float_to_js x8603)|])
    let (closePath : 'tags this -> unit) =
      fun (x8606 : 'tags this) ->
        ignore (Ojs.call (this_to_js Obj.magic x8606) "closePath" [||])
    let (ellipse :
      'tags this ->
        x:float ->
          y:float ->
            radiusX:float ->
              radiusY:float ->
                rotation:float ->
                  startAngle:float ->
                    endAngle:float -> ?counterclockwise:bool -> unit -> unit)
      =
      fun (x8618 : 'tags this) ->
        fun ~x:(x8608 : float) ->
          fun ~y:(x8609 : float) ->
            fun ~radiusX:(x8610 : float) ->
              fun ~radiusY:(x8611 : float) ->
                fun ~rotation:(x8612 : float) ->
                  fun ~startAngle:(x8613 : float) ->
                    fun ~endAngle:(x8614 : float) ->
                      fun ?counterclockwise:(x8615 : bool option) ->
                        fun () ->
                          ignore
                            (let x8620 = this_to_js Obj.magic x8618 in
                             Ojs.call (Ojs.get_prop_ascii x8620 "ellipse")
                               "apply"
                               [|x8620;((let x8616 =
                                           Ojs.new_obj
                                             (Ojs.get_prop_ascii Ojs.global
                                                "Array") [||] in
                                         ignore
                                           (Ojs.call x8616 "push"
                                              [|(Ojs.float_to_js x8608)|]);
                                         ignore
                                           (Ojs.call x8616 "push"
                                              [|(Ojs.float_to_js x8609)|]);
                                         ignore
                                           (Ojs.call x8616 "push"
                                              [|(Ojs.float_to_js x8610)|]);
                                         ignore
                                           (Ojs.call x8616 "push"
                                              [|(Ojs.float_to_js x8611)|]);
                                         ignore
                                           (Ojs.call x8616 "push"
                                              [|(Ojs.float_to_js x8612)|]);
                                         ignore
                                           (Ojs.call x8616 "push"
                                              [|(Ojs.float_to_js x8613)|]);
                                         ignore
                                           (Ojs.call x8616 "push"
                                              [|(Ojs.float_to_js x8614)|]);
                                         (match x8615 with
                                          | Some x8617 ->
                                              ignore
                                                (Ojs.call x8616 "push"
                                                   [|(Ojs.bool_to_js x8617)|])
                                          | None -> ());
                                         x8616))|])
    let (lineTo : 'tags this -> x:float -> y:float -> unit) =
      fun (x8623 : 'tags this) ->
        fun ~x:(x8621 : float) ->
          fun ~y:(x8622 : float) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x8623) "lineTo"
                 [|(Ojs.float_to_js x8621);(Ojs.float_to_js x8622)|])
    let (moveTo : 'tags this -> x:float -> y:float -> unit) =
      fun (x8627 : 'tags this) ->
        fun ~x:(x8625 : float) ->
          fun ~y:(x8626 : float) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x8627) "moveTo"
                 [|(Ojs.float_to_js x8625);(Ojs.float_to_js x8626)|])
    let (quadraticCurveTo :
      'tags this -> cpx:float -> cpy:float -> x:float -> y:float -> unit) =
      fun (x8633 : 'tags this) ->
        fun ~cpx:(x8629 : float) ->
          fun ~cpy:(x8630 : float) ->
            fun ~x:(x8631 : float) ->
              fun ~y:(x8632 : float) ->
                ignore
                  (Ojs.call (this_to_js Obj.magic x8633) "quadraticCurveTo"
                     [|(Ojs.float_to_js x8629);(Ojs.float_to_js x8630);(
                       Ojs.float_to_js x8631);(Ojs.float_to_js x8632)|])
    let (rect :
      'tags this -> x:float -> y:float -> w:float -> h:float -> unit) =
      fun (x8639 : 'tags this) ->
        fun ~x:(x8635 : float) ->
          fun ~y:(x8636 : float) ->
            fun ~w:(x8637 : float) ->
              fun ~h:(x8638 : float) ->
                ignore
                  (Ojs.call (this_to_js Obj.magic x8639) "rect"
                     [|(Ojs.float_to_js x8635);(Ojs.float_to_js x8636);(
                       Ojs.float_to_js x8637);(Ojs.float_to_js x8638)|])
    let cast_from = Obj.magic
  end
module Path2D =
  struct
    type t = [ `CanvasPath  | `Path2D ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8642 : Ojs.t) -> t_of_js x8642
    and t_0_to_js : t_0 -> Ojs.t = fun (x8641 : t) -> t_to_js x8641
    type tags = [ `CanvasPath  | `Path2D ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Path2D ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8645 : Ojs.t) -> intf_of_js __tags_of_js x8645
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8643 : __tags intf) -> intf_to_js __tags_to_js x8643
    let (addPath :
      'tags this -> path:t -> ?transform:DOMMatrix2DInit.t -> unit -> unit) =
      fun (x8651 : 'tags this) ->
        fun ~path:(x8647 : t) ->
          fun ?transform:(x8648 : DOMMatrix2DInit.t option) ->
            fun () ->
              ignore
                (let x8653 = this_to_js Obj.magic x8651 in
                 Ojs.call (Ojs.get_prop_ascii x8653 "addPath") "apply"
                   [|x8653;((let x8649 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8649 "push" [|(t_to_js x8647)|]);
                             (match x8648 with
                              | Some x8650 ->
                                  ignore
                                    (Ojs.call x8649 "push"
                                       [|(DOMMatrix2DInit.t_to_js x8650)|])
                              | None -> ());
                             x8649))|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Path2D")
             "prototype")
    let (create : ?path:t or_string -> unit -> t) =
      fun ?path:(x8654 : t or_string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Path2D")
               (let x8655 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x8654 with
                 | Some x8656 ->
                     ignore
                       (Ojs.call x8655 "push"
                          [|(or_string_to_js t_to_js x8656)|])
                 | None -> ());
                x8655))
  end
module AnonymousInterface69 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8659 : Ojs.t) -> x8659
    and t_to_js : t -> Ojs.t = fun (x8658 : Ojs.t) -> x8658
    let (get_prototype : t -> Path2D.t) =
      fun (x8660 : t) ->
        Path2D.t_of_js (Ojs.get_prop_ascii (t_to_js x8660) "prototype")
    let (set_prototype : t -> Path2D.t -> unit) =
      fun (x8661 : t) ->
        fun (x8662 : Path2D.t) ->
          Ojs.set_prop_ascii (t_to_js x8661) "prototype"
            (Path2D.t_to_js x8662)
    let (create : t -> ?path:Path2D.t or_string -> unit -> Path2D.t) =
      fun (x8667 : t) ->
        fun ?path:(x8663 : Path2D.t or_string option) ->
          fun () ->
            Path2D.t_of_js
              (Ojs.new_obj_arr (t_to_js x8667)
                 (let x8664 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x8663 with
                   | Some x8665 ->
                       ignore
                         (Ojs.call x8664 "push"
                            [|(or_string_to_js Path2D.t_to_js x8665)|])
                   | None -> ());
                  x8664))
  end
module AnonymousInterface68 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8669 : Ojs.t) -> x8669
    and t_to_js : t -> Ojs.t = fun (x8668 : Ojs.t) -> x8668
    let (get_prototype : t -> NotificationEvent.t) =
      fun (x8670 : t) ->
        NotificationEvent.t_of_js
          (Ojs.get_prop_ascii (t_to_js x8670) "prototype")
    let (set_prototype : t -> NotificationEvent.t -> unit) =
      fun (x8671 : t) ->
        fun (x8672 : NotificationEvent.t) ->
          Ojs.set_prop_ascii (t_to_js x8671) "prototype"
            (NotificationEvent.t_to_js x8672)
    let (create :
      t ->
        type_:string ->
          eventInitDict:NotificationEventInit.t -> NotificationEvent.t)
      =
      fun (x8675 : t) ->
        fun ~type_:(x8673 : string) ->
          fun ~eventInitDict:(x8674 : NotificationEventInit.t) ->
            NotificationEvent.t_of_js
              (Ojs.new_obj (t_to_js x8675)
                 [|(Ojs.string_to_js x8673);(NotificationEventInit.t_to_js
                                               x8674)|])
  end
module AnonymousInterface67 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8677 : Ojs.t) -> x8677
    and t_to_js : t -> Ojs.t = fun (x8676 : Ojs.t) -> x8676
    let (get_prototype : t -> Notification.t) =
      fun (x8678 : t) ->
        Notification.t_of_js (Ojs.get_prop_ascii (t_to_js x8678) "prototype")
    let (set_prototype : t -> Notification.t -> unit) =
      fun (x8679 : t) ->
        fun (x8680 : Notification.t) ->
          Ojs.set_prop_ascii (t_to_js x8679) "prototype"
            (Notification.t_to_js x8680)
    let (create :
      t ->
        title:string ->
          ?options:NotificationOptions.t -> unit -> Notification.t)
      =
      fun (x8685 : t) ->
        fun ~title:(x8681 : string) ->
          fun ?options:(x8682 : NotificationOptions.t option) ->
            fun () ->
              Notification.t_of_js
                (Ojs.new_obj_arr (t_to_js x8685)
                   (let x8683 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8683 "push" [|(Ojs.string_to_js x8681)|]);
                    (match x8682 with
                     | Some x8684 ->
                         ignore
                           (Ojs.call x8683 "push"
                              [|(NotificationOptions.t_to_js x8684)|])
                     | None -> ());
                    x8683))
    let (get_permission : t -> NotificationPermission.t) =
      fun (x8686 : t) ->
        NotificationPermission.t_of_js
          (Ojs.get_prop_ascii (t_to_js x8686) "permission")
  end
module AnonymousInterface66 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8688 : Ojs.t) -> x8688
    and t_to_js : t -> Ojs.t = fun (x8687 : Ojs.t) -> x8687
    let (get_prototype : t -> NetworkInformation.t) =
      fun (x8689 : t) ->
        NetworkInformation.t_of_js
          (Ojs.get_prop_ascii (t_to_js x8689) "prototype")
    let (set_prototype : t -> NetworkInformation.t -> unit) =
      fun (x8690 : t) ->
        fun (x8691 : NetworkInformation.t) ->
          Ojs.set_prop_ascii (t_to_js x8690) "prototype"
            (NetworkInformation.t_to_js x8691)
    let (create : t -> NetworkInformation.t) =
      fun (x8692 : t) ->
        NetworkInformation.t_of_js (Ojs.new_obj (t_to_js x8692) [||])
  end
module AnonymousInterface64 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8694 : Ojs.t) -> x8694
    and t_to_js : t -> Ojs.t = fun (x8693 : Ojs.t) -> x8693
    let (get_prototype : t -> MessagePort.t) =
      fun (x8695 : t) ->
        MessagePort.t_of_js (Ojs.get_prop_ascii (t_to_js x8695) "prototype")
    let (set_prototype : t -> MessagePort.t -> unit) =
      fun (x8696 : t) ->
        fun (x8697 : MessagePort.t) ->
          Ojs.set_prop_ascii (t_to_js x8696) "prototype"
            (MessagePort.t_to_js x8697)
    let (create : t -> MessagePort.t) =
      fun (x8698 : t) ->
        MessagePort.t_of_js (Ojs.new_obj (t_to_js x8698) [||])
  end
module AnonymousInterface63 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8700 : Ojs.t) -> x8700
    and t_to_js : t -> Ojs.t = fun (x8699 : Ojs.t) -> x8699
    let (get_prototype : t -> MessageEvent.t_0) =
      fun (x8701 : t) ->
        MessageEvent.t_0_of_js
          (Ojs.get_prop_ascii (t_to_js x8701) "prototype")
    let (set_prototype : t -> MessageEvent.t_0 -> unit) =
      fun (x8702 : t) ->
        fun (x8703 : MessageEvent.t_0) ->
          Ojs.set_prop_ascii (t_to_js x8702) "prototype"
            (MessageEvent.t_0_to_js x8703)
    let (create :
      t ->
        type_:string ->
          ?eventInitDict:'T MessageEventInit.t -> unit -> 'T MessageEvent.t)
      =
      fun (x8709 : t) ->
        fun ~type_:(x8704 : string) ->
          fun ?eventInitDict:(x8705 : 'T MessageEventInit.t option) ->
            fun () ->
              MessageEvent.t_of_js Obj.magic
                (Ojs.new_obj_arr (t_to_js x8709)
                   (let x8706 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8706 "push" [|(Ojs.string_to_js x8704)|]);
                    (match x8705 with
                     | Some x8707 ->
                         ignore
                           (Ojs.call x8706 "push"
                              [|(MessageEventInit.t_to_js Obj.magic x8707)|])
                     | None -> ());
                    x8706))
  end
module MessageChannel =
  struct
    type t = [ `MessageChannel ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8712 : Ojs.t) -> t_of_js x8712
    and t_0_to_js : t_0 -> Ojs.t = fun (x8711 : t) -> t_to_js x8711
    type tags = [ `MessageChannel ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `MessageChannel ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8715 : Ojs.t) -> intf_of_js __tags_of_js x8715
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8713 : __tags intf) -> intf_to_js __tags_to_js x8713
    let (get_port1 : 'tags this -> MessagePort.t) =
      fun (x8717 : 'tags this) ->
        MessagePort.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8717) "port1")
    let (get_port2 : 'tags this -> MessagePort.t) =
      fun (x8719 : 'tags this) ->
        MessagePort.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8719) "port2")
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "MessageChannel") "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "MessageChannel") [||])
  end
module AnonymousInterface62 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8722 : Ojs.t) -> x8722
    and t_to_js : t -> Ojs.t = fun (x8721 : Ojs.t) -> x8721
    let (get_prototype : t -> MessageChannel.t) =
      fun (x8723 : t) ->
        MessageChannel.t_of_js
          (Ojs.get_prop_ascii (t_to_js x8723) "prototype")
    let (set_prototype : t -> MessageChannel.t -> unit) =
      fun (x8724 : t) ->
        fun (x8725 : MessageChannel.t) ->
          Ojs.set_prop_ascii (t_to_js x8724) "prototype"
            (MessageChannel.t_to_js x8725)
    let (create : t -> MessageChannel.t) =
      fun (x8726 : t) ->
        MessageChannel.t_of_js (Ojs.new_obj (t_to_js x8726) [||])
  end
module AnonymousInterface60 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8728 : Ojs.t) -> x8728
    and t_to_js : t -> Ojs.t = fun (x8727 : Ojs.t) -> x8727
    let (get_prototype : t -> MediaCapabilities.t) =
      fun (x8729 : t) ->
        MediaCapabilities.t_of_js
          (Ojs.get_prop_ascii (t_to_js x8729) "prototype")
    let (set_prototype : t -> MediaCapabilities.t -> unit) =
      fun (x8730 : t) ->
        fun (x8731 : MediaCapabilities.t) ->
          Ojs.set_prop_ascii (t_to_js x8730) "prototype"
            (MediaCapabilities.t_to_js x8731)
    let (create : t -> MediaCapabilities.t) =
      fun (x8732 : t) ->
        MediaCapabilities.t_of_js (Ojs.new_obj (t_to_js x8732) [||])
  end
module AnonymousInterface6 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8734 : Ojs.t) -> x8734
    and t_to_js : t -> Ojs.t = fun (x8733 : Ojs.t) -> x8733
    let (get_prototype : t -> CacheStorage.t) =
      fun (x8735 : t) ->
        CacheStorage.t_of_js (Ojs.get_prop_ascii (t_to_js x8735) "prototype")
    let (set_prototype : t -> CacheStorage.t -> unit) =
      fun (x8736 : t) ->
        fun (x8737 : CacheStorage.t) ->
          Ojs.set_prop_ascii (t_to_js x8736) "prototype"
            (CacheStorage.t_to_js x8737)
    let (create : t -> CacheStorage.t) =
      fun (x8738 : t) ->
        CacheStorage.t_of_js (Ojs.new_obj (t_to_js x8738) [||])
  end
module AnonymousInterface57 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8740 : Ojs.t) -> x8740
    and t_to_js : t -> Ojs.t = fun (x8739 : Ojs.t) -> x8739
    let (get_prototype : t -> ImageData.t) =
      fun (x8741 : t) ->
        ImageData.t_of_js (Ojs.get_prop_ascii (t_to_js x8741) "prototype")
    let (set_prototype : t -> ImageData.t -> unit) =
      fun (x8742 : t) ->
        fun (x8743 : ImageData.t) ->
          Ojs.set_prop_ascii (t_to_js x8742) "prototype"
            (ImageData.t_to_js x8743)
    let (create :
      t ->
        sw:float ->
          sh:float -> ?settings:ImageDataSettings.t -> unit -> ImageData.t)
      =
      fun (x8749 : t) ->
        fun ~sw:(x8744 : float) ->
          fun ~sh:(x8745 : float) ->
            fun ?settings:(x8746 : ImageDataSettings.t option) ->
              fun () ->
                ImageData.t_of_js
                  (Ojs.new_obj_arr (t_to_js x8749)
                     (let x8747 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x8747 "push" [|(Ojs.float_to_js x8744)|]);
                      ignore
                        (Ojs.call x8747 "push" [|(Ojs.float_to_js x8745)|]);
                      (match x8746 with
                       | Some x8748 ->
                           ignore
                             (Ojs.call x8747 "push"
                                [|(ImageDataSettings.t_to_js x8748)|])
                       | None -> ());
                      x8747))
    let (create' :
      t ->
        data:Uint8ClampedArray.t_0 ->
          sw:float ->
            ?sh:float -> ?settings:ImageDataSettings.t -> unit -> ImageData.t)
      =
      fun (x8757 : t) ->
        fun ~data:(x8750 : Uint8ClampedArray.t_0) ->
          fun ~sw:(x8751 : float) ->
            fun ?sh:(x8752 : float option) ->
              fun ?settings:(x8753 : ImageDataSettings.t option) ->
                fun () ->
                  ImageData.t_of_js
                    (Ojs.new_obj_arr (t_to_js x8757)
                       (let x8754 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        ignore
                          (Ojs.call x8754 "push"
                             [|(Uint8ClampedArray.t_0_to_js x8750)|]);
                        ignore
                          (Ojs.call x8754 "push" [|(Ojs.float_to_js x8751)|]);
                        (match x8752 with
                         | Some x8756 ->
                             ignore
                               (Ojs.call x8754 "push"
                                  [|(Ojs.float_to_js x8756)|])
                         | None -> ());
                        (match x8753 with
                         | Some x8755 ->
                             ignore
                               (Ojs.call x8754 "push"
                                  [|(ImageDataSettings.t_to_js x8755)|])
                         | None -> ());
                        x8754))
  end
module ImageBitmapRenderingContext =
  struct
    type t = [ `ImageBitmapRenderingContext ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8759 : Ojs.t) -> t_of_js x8759
    and t_0_to_js : t_0 -> Ojs.t = fun (x8758 : t) -> t_to_js x8758
    type tags = [ `ImageBitmapRenderingContext ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `ImageBitmapRenderingContext ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8762 : Ojs.t) -> intf_of_js __tags_of_js x8762
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8760 : __tags intf) -> intf_to_js __tags_to_js x8760
    let (transferFromImageBitmap :
      'tags this -> bitmap:ImageBitmap.t or_null -> unit) =
      fun (x8766 : 'tags this) ->
        fun ~bitmap:(x8764 : ImageBitmap.t or_null) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x8766) "transferFromImageBitmap"
               [|(or_null_to_js ImageBitmap.t_to_js x8764)|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "ImageBitmapRenderingContext")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj
             (Ojs.get_prop_ascii Ojs.global "ImageBitmapRenderingContext")
             [||])
  end
module AnonymousInterface56 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8769 : Ojs.t) -> x8769
    and t_to_js : t -> Ojs.t = fun (x8768 : Ojs.t) -> x8768
    let (get_prototype : t -> ImageBitmapRenderingContext.t) =
      fun (x8770 : t) ->
        ImageBitmapRenderingContext.t_of_js
          (Ojs.get_prop_ascii (t_to_js x8770) "prototype")
    let (set_prototype : t -> ImageBitmapRenderingContext.t -> unit) =
      fun (x8771 : t) ->
        fun (x8772 : ImageBitmapRenderingContext.t) ->
          Ojs.set_prop_ascii (t_to_js x8771) "prototype"
            (ImageBitmapRenderingContext.t_to_js x8772)
    let (create : t -> ImageBitmapRenderingContext.t) =
      fun (x8773 : t) ->
        ImageBitmapRenderingContext.t_of_js
          (Ojs.new_obj (t_to_js x8773) [||])
  end
module AnonymousInterface55 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8775 : Ojs.t) -> x8775
    and t_to_js : t -> Ojs.t = fun (x8774 : Ojs.t) -> x8774
    let (get_prototype : t -> ImageBitmap.t) =
      fun (x8776 : t) ->
        ImageBitmap.t_of_js (Ojs.get_prop_ascii (t_to_js x8776) "prototype")
    let (set_prototype : t -> ImageBitmap.t -> unit) =
      fun (x8777 : t) ->
        fun (x8778 : ImageBitmap.t) ->
          Ojs.set_prop_ascii (t_to_js x8777) "prototype"
            (ImageBitmap.t_to_js x8778)
    let (create : t -> ImageBitmap.t) =
      fun (x8779 : t) ->
        ImageBitmap.t_of_js (Ojs.new_obj (t_to_js x8779) [||])
  end
module AnonymousInterface54 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8781 : Ojs.t) -> x8781
    and t_to_js : t -> Ojs.t = fun (x8780 : Ojs.t) -> x8780
    let (get_prototype : t -> IDBVersionChangeEvent.t) =
      fun (x8782 : t) ->
        IDBVersionChangeEvent.t_of_js
          (Ojs.get_prop_ascii (t_to_js x8782) "prototype")
    let (set_prototype : t -> IDBVersionChangeEvent.t -> unit) =
      fun (x8783 : t) ->
        fun (x8784 : IDBVersionChangeEvent.t) ->
          Ojs.set_prop_ascii (t_to_js x8783) "prototype"
            (IDBVersionChangeEvent.t_to_js x8784)
    let (create :
      t ->
        type_:string ->
          ?eventInitDict:IDBVersionChangeEventInit.t ->
            unit -> IDBVersionChangeEvent.t)
      =
      fun (x8789 : t) ->
        fun ~type_:(x8785 : string) ->
          fun ?eventInitDict:(x8786 : IDBVersionChangeEventInit.t option) ->
            fun () ->
              IDBVersionChangeEvent.t_of_js
                (Ojs.new_obj_arr (t_to_js x8789)
                   (let x8787 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8787 "push" [|(Ojs.string_to_js x8785)|]);
                    (match x8786 with
                     | Some x8788 ->
                         ignore
                           (Ojs.call x8787 "push"
                              [|(IDBVersionChangeEventInit.t_to_js x8788)|])
                     | None -> ());
                    x8787))
  end
module AnonymousInterface53 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8791 : Ojs.t) -> x8791
    and t_to_js : t -> Ojs.t = fun (x8790 : Ojs.t) -> x8790
    let (get_prototype : t -> IDBTransaction.t) =
      fun (x8792 : t) ->
        IDBTransaction.t_of_js
          (Ojs.get_prop_ascii (t_to_js x8792) "prototype")
    let (set_prototype : t -> IDBTransaction.t -> unit) =
      fun (x8793 : t) ->
        fun (x8794 : IDBTransaction.t) ->
          Ojs.set_prop_ascii (t_to_js x8793) "prototype"
            (IDBTransaction.t_to_js x8794)
    let (create : t -> IDBTransaction.t) =
      fun (x8795 : t) ->
        IDBTransaction.t_of_js (Ojs.new_obj (t_to_js x8795) [||])
  end
module AnonymousInterface52 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8797 : Ojs.t) -> x8797
    and t_to_js : t -> Ojs.t = fun (x8796 : Ojs.t) -> x8796
    let (get_prototype : t -> IDBRequest.t_0) =
      fun (x8798 : t) ->
        IDBRequest.t_0_of_js (Ojs.get_prop_ascii (t_to_js x8798) "prototype")
    let (set_prototype : t -> IDBRequest.t_0 -> unit) =
      fun (x8799 : t) ->
        fun (x8800 : IDBRequest.t_0) ->
          Ojs.set_prop_ascii (t_to_js x8799) "prototype"
            (IDBRequest.t_0_to_js x8800)
    let (create : t -> IDBRequest.t_0) =
      fun (x8801 : t) ->
        IDBRequest.t_0_of_js (Ojs.new_obj (t_to_js x8801) [||])
  end
module AnonymousInterface51 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8803 : Ojs.t) -> x8803
    and t_to_js : t -> Ojs.t = fun (x8802 : Ojs.t) -> x8802
    let (get_prototype : t -> IDBOpenDBRequest.t) =
      fun (x8804 : t) ->
        IDBOpenDBRequest.t_of_js
          (Ojs.get_prop_ascii (t_to_js x8804) "prototype")
    let (set_prototype : t -> IDBOpenDBRequest.t -> unit) =
      fun (x8805 : t) ->
        fun (x8806 : IDBOpenDBRequest.t) ->
          Ojs.set_prop_ascii (t_to_js x8805) "prototype"
            (IDBOpenDBRequest.t_to_js x8806)
    let (create : t -> IDBOpenDBRequest.t) =
      fun (x8807 : t) ->
        IDBOpenDBRequest.t_of_js (Ojs.new_obj (t_to_js x8807) [||])
  end
module AnonymousInterface50 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8809 : Ojs.t) -> x8809
    and t_to_js : t -> Ojs.t = fun (x8808 : Ojs.t) -> x8808
    let (get_prototype : t -> IDBObjectStore.t) =
      fun (x8810 : t) ->
        IDBObjectStore.t_of_js
          (Ojs.get_prop_ascii (t_to_js x8810) "prototype")
    let (set_prototype : t -> IDBObjectStore.t -> unit) =
      fun (x8811 : t) ->
        fun (x8812 : IDBObjectStore.t) ->
          Ojs.set_prop_ascii (t_to_js x8811) "prototype"
            (IDBObjectStore.t_to_js x8812)
    let (create : t -> IDBObjectStore.t) =
      fun (x8813 : t) ->
        IDBObjectStore.t_of_js (Ojs.new_obj (t_to_js x8813) [||])
  end
module AnonymousInterface5 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8815 : Ojs.t) -> x8815
    and t_to_js : t -> Ojs.t = fun (x8814 : Ojs.t) -> x8814
    let (get_prototype : t -> Cache.t) =
      fun (x8816 : t) ->
        Cache.t_of_js (Ojs.get_prop_ascii (t_to_js x8816) "prototype")
    let (set_prototype : t -> Cache.t -> unit) =
      fun (x8817 : t) ->
        fun (x8818 : Cache.t) ->
          Ojs.set_prop_ascii (t_to_js x8817) "prototype"
            (Cache.t_to_js x8818)
    let (create : t -> Cache.t) =
      fun (x8819 : t) -> Cache.t_of_js (Ojs.new_obj (t_to_js x8819) [||])
  end
module AnonymousInterface49 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8821 : Ojs.t) -> x8821
    and t_to_js : t -> Ojs.t = fun (x8820 : Ojs.t) -> x8820
    let (get_prototype : t -> IDBKeyRange.t) =
      fun (x8822 : t) ->
        IDBKeyRange.t_of_js (Ojs.get_prop_ascii (t_to_js x8822) "prototype")
    let (set_prototype : t -> IDBKeyRange.t -> unit) =
      fun (x8823 : t) ->
        fun (x8824 : IDBKeyRange.t) ->
          Ojs.set_prop_ascii (t_to_js x8823) "prototype"
            (IDBKeyRange.t_to_js x8824)
    let (create : t -> IDBKeyRange.t) =
      fun (x8825 : t) ->
        IDBKeyRange.t_of_js (Ojs.new_obj (t_to_js x8825) [||])
    let (bound :
      t ->
        lower:any ->
          upper:any ->
            ?lowerOpen:bool -> ?upperOpen:bool -> unit -> IDBKeyRange.t)
      =
      fun (x8833 : t) ->
        fun ~lower:(x8826 : any) ->
          fun ~upper:(x8827 : any) ->
            fun ?lowerOpen:(x8828 : bool option) ->
              fun ?upperOpen:(x8829 : bool option) ->
                fun () ->
                  IDBKeyRange.t_of_js
                    (let x8834 = t_to_js x8833 in
                     Ojs.call (Ojs.get_prop_ascii x8834 "bound") "apply"
                       [|x8834;((let x8830 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x8830 "push"
                                      [|(any_to_js x8826)|]);
                                 ignore
                                   (Ojs.call x8830 "push"
                                      [|(any_to_js x8827)|]);
                                 (match x8828 with
                                  | Some x8832 ->
                                      ignore
                                        (Ojs.call x8830 "push"
                                           [|(Ojs.bool_to_js x8832)|])
                                  | None -> ());
                                 (match x8829 with
                                  | Some x8831 ->
                                      ignore
                                        (Ojs.call x8830 "push"
                                           [|(Ojs.bool_to_js x8831)|])
                                  | None -> ());
                                 x8830))|])
    let (lowerBound : t -> lower:any -> ?open_:bool -> unit -> IDBKeyRange.t)
      =
      fun (x8839 : t) ->
        fun ~lower:(x8835 : any) ->
          fun ?open_:(x8836 : bool option) ->
            fun () ->
              IDBKeyRange.t_of_js
                (let x8840 = t_to_js x8839 in
                 Ojs.call (Ojs.get_prop_ascii x8840 "lowerBound") "apply"
                   [|x8840;((let x8837 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8837 "push" [|(any_to_js x8835)|]);
                             (match x8836 with
                              | Some x8838 ->
                                  ignore
                                    (Ojs.call x8837 "push"
                                       [|(Ojs.bool_to_js x8838)|])
                              | None -> ());
                             x8837))|])
    let (only : t -> value:any -> IDBKeyRange.t) =
      fun (x8842 : t) ->
        fun ~value:(x8841 : any) ->
          IDBKeyRange.t_of_js
            (Ojs.call (t_to_js x8842) "only" [|(any_to_js x8841)|])
    let (upperBound : t -> upper:any -> ?open_:bool -> unit -> IDBKeyRange.t)
      =
      fun (x8847 : t) ->
        fun ~upper:(x8843 : any) ->
          fun ?open_:(x8844 : bool option) ->
            fun () ->
              IDBKeyRange.t_of_js
                (let x8848 = t_to_js x8847 in
                 Ojs.call (Ojs.get_prop_ascii x8848 "upperBound") "apply"
                   [|x8848;((let x8845 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8845 "push" [|(any_to_js x8843)|]);
                             (match x8844 with
                              | Some x8846 ->
                                  ignore
                                    (Ojs.call x8845 "push"
                                       [|(Ojs.bool_to_js x8846)|])
                              | None -> ());
                             x8845))|])
  end
module AnonymousInterface48 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8850 : Ojs.t) -> x8850
    and t_to_js : t -> Ojs.t = fun (x8849 : Ojs.t) -> x8849
    let (get_prototype : t -> IDBIndex.t) =
      fun (x8851 : t) ->
        IDBIndex.t_of_js (Ojs.get_prop_ascii (t_to_js x8851) "prototype")
    let (set_prototype : t -> IDBIndex.t -> unit) =
      fun (x8852 : t) ->
        fun (x8853 : IDBIndex.t) ->
          Ojs.set_prop_ascii (t_to_js x8852) "prototype"
            (IDBIndex.t_to_js x8853)
    let (create : t -> IDBIndex.t) =
      fun (x8854 : t) -> IDBIndex.t_of_js (Ojs.new_obj (t_to_js x8854) [||])
  end
module AnonymousInterface47 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8856 : Ojs.t) -> x8856
    and t_to_js : t -> Ojs.t = fun (x8855 : Ojs.t) -> x8855
    let (get_prototype : t -> IDBFactory.t) =
      fun (x8857 : t) ->
        IDBFactory.t_of_js (Ojs.get_prop_ascii (t_to_js x8857) "prototype")
    let (set_prototype : t -> IDBFactory.t -> unit) =
      fun (x8858 : t) ->
        fun (x8859 : IDBFactory.t) ->
          Ojs.set_prop_ascii (t_to_js x8858) "prototype"
            (IDBFactory.t_to_js x8859)
    let (create : t -> IDBFactory.t) =
      fun (x8860 : t) ->
        IDBFactory.t_of_js (Ojs.new_obj (t_to_js x8860) [||])
  end
module AnonymousInterface46 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8862 : Ojs.t) -> x8862
    and t_to_js : t -> Ojs.t = fun (x8861 : Ojs.t) -> x8861
    let (get_prototype : t -> IDBDatabase.t) =
      fun (x8863 : t) ->
        IDBDatabase.t_of_js (Ojs.get_prop_ascii (t_to_js x8863) "prototype")
    let (set_prototype : t -> IDBDatabase.t -> unit) =
      fun (x8864 : t) ->
        fun (x8865 : IDBDatabase.t) ->
          Ojs.set_prop_ascii (t_to_js x8864) "prototype"
            (IDBDatabase.t_to_js x8865)
    let (create : t -> IDBDatabase.t) =
      fun (x8866 : t) ->
        IDBDatabase.t_of_js (Ojs.new_obj (t_to_js x8866) [||])
  end
module AnonymousInterface45 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8868 : Ojs.t) -> x8868
    and t_to_js : t -> Ojs.t = fun (x8867 : Ojs.t) -> x8867
    let (get_prototype : t -> IDBCursorWithValue.t) =
      fun (x8869 : t) ->
        IDBCursorWithValue.t_of_js
          (Ojs.get_prop_ascii (t_to_js x8869) "prototype")
    let (set_prototype : t -> IDBCursorWithValue.t -> unit) =
      fun (x8870 : t) ->
        fun (x8871 : IDBCursorWithValue.t) ->
          Ojs.set_prop_ascii (t_to_js x8870) "prototype"
            (IDBCursorWithValue.t_to_js x8871)
    let (create : t -> IDBCursorWithValue.t) =
      fun (x8872 : t) ->
        IDBCursorWithValue.t_of_js (Ojs.new_obj (t_to_js x8872) [||])
  end
module AnonymousInterface44 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8874 : Ojs.t) -> x8874
    and t_to_js : t -> Ojs.t = fun (x8873 : Ojs.t) -> x8873
    let (get_prototype : t -> IDBCursor.t) =
      fun (x8875 : t) ->
        IDBCursor.t_of_js (Ojs.get_prop_ascii (t_to_js x8875) "prototype")
    let (set_prototype : t -> IDBCursor.t -> unit) =
      fun (x8876 : t) ->
        fun (x8877 : IDBCursor.t) ->
          Ojs.set_prop_ascii (t_to_js x8876) "prototype"
            (IDBCursor.t_to_js x8877)
    let (create : t -> IDBCursor.t) =
      fun (x8878 : t) -> IDBCursor.t_of_js (Ojs.new_obj (t_to_js x8878) [||])
  end
module AnonymousInterface43 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8880 : Ojs.t) -> x8880
    and t_to_js : t -> Ojs.t = fun (x8879 : Ojs.t) -> x8879
    let (get_prototype : t -> Headers.t) =
      fun (x8881 : t) ->
        Headers.t_of_js (Ojs.get_prop_ascii (t_to_js x8881) "prototype")
    let (set_prototype : t -> Headers.t -> unit) =
      fun (x8882 : t) ->
        fun (x8883 : Headers.t) ->
          Ojs.set_prop_ascii (t_to_js x8882) "prototype"
            (Headers.t_to_js x8883)
    let (create : t -> ?init:HeadersInit.t -> unit -> Headers.t) =
      fun (x8887 : t) ->
        fun ?init:(x8884 : HeadersInit.t option) ->
          fun () ->
            Headers.t_of_js
              (Ojs.new_obj_arr (t_to_js x8887)
                 (let x8885 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x8884 with
                   | Some x8886 ->
                       ignore
                         (Ojs.call x8885 "push"
                            [|(HeadersInit.t_to_js x8886)|])
                   | None -> ());
                  x8885))
  end
module AnonymousInterface41 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8889 : Ojs.t) -> x8889
    and t_to_js : t -> Ojs.t = fun (x8888 : Ojs.t) -> x8888
    let (get_prototype : t -> FormData.t) =
      fun (x8890 : t) ->
        FormData.t_of_js (Ojs.get_prop_ascii (t_to_js x8890) "prototype")
    let (set_prototype : t -> FormData.t -> unit) =
      fun (x8891 : t) ->
        fun (x8892 : FormData.t) ->
          Ojs.set_prop_ascii (t_to_js x8891) "prototype"
            (FormData.t_to_js x8892)
    let (create : t -> FormData.t) =
      fun (x8893 : t) -> FormData.t_of_js (Ojs.new_obj (t_to_js x8893) [||])
  end
module FontFaceSetLoadEventInit =
  struct
    type t = [ `EventInit  | `FontFaceSetLoadEventInit ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8895 : Ojs.t) -> t_of_js x8895
    and t_0_to_js : t_0 -> Ojs.t = fun (x8894 : t) -> t_to_js x8894
    type tags = [ `EventInit  | `FontFaceSetLoadEventInit ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `FontFaceSetLoadEventInit ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8898 : Ojs.t) -> intf_of_js __tags_of_js x8898
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8896 : __tags intf) -> intf_to_js __tags_to_js x8896
    let (get_fontfaces : 'tags this -> FontFace.t list) =
      fun (x8900 : 'tags this) ->
        Ojs.list_of_js FontFace.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8900) "fontfaces")
    let (set_fontfaces : 'tags this -> FontFace.t list -> unit) =
      fun (x8903 : 'tags this) ->
        fun (x8904 : FontFace.t list) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8903) "fontfaces"
            (Ojs.list_to_js FontFace.t_to_js x8904)
    let cast_from = Obj.magic
  end
module FontFaceSetLoadEvent =
  struct
    type t = [ `Event  | `FontFaceSetLoadEvent ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8908 : Ojs.t) -> t_of_js x8908
    and t_0_to_js : t_0 -> Ojs.t = fun (x8907 : t) -> t_to_js x8907
    type tags = [ `Event  | `FontFaceSetLoadEvent ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `FontFaceSetLoadEvent ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8911 : Ojs.t) -> intf_of_js __tags_of_js x8911
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8909 : __tags intf) -> intf_to_js __tags_to_js x8909
    let (get_fontfaces : 'tags this -> FontFace.t list) =
      fun (x8913 : 'tags this) ->
        Ojs.list_of_js FontFace.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8913) "fontfaces")
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "FontFaceSetLoadEvent")
             "prototype")
    let (create :
      type_:string -> ?eventInitDict:FontFaceSetLoadEventInit.t -> unit -> t)
      =
      fun ~type_:(x8916 : string) ->
        fun ?eventInitDict:(x8917 : FontFaceSetLoadEventInit.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "FontFaceSetLoadEvent")
                 (let x8918 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x8918 "push" [|(Ojs.string_to_js x8916)|]);
                  (match x8917 with
                   | Some x8919 ->
                       ignore
                         (Ojs.call x8918 "push"
                            [|(FontFaceSetLoadEventInit.t_to_js x8919)|])
                   | None -> ());
                  x8918))
  end
module AnonymousInterface40 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8921 : Ojs.t) -> x8921
    and t_to_js : t -> Ojs.t = fun (x8920 : Ojs.t) -> x8920
    let (get_prototype : t -> FontFaceSetLoadEvent.t) =
      fun (x8922 : t) ->
        FontFaceSetLoadEvent.t_of_js
          (Ojs.get_prop_ascii (t_to_js x8922) "prototype")
    let (set_prototype : t -> FontFaceSetLoadEvent.t -> unit) =
      fun (x8923 : t) ->
        fun (x8924 : FontFaceSetLoadEvent.t) ->
          Ojs.set_prop_ascii (t_to_js x8923) "prototype"
            (FontFaceSetLoadEvent.t_to_js x8924)
    let (create :
      t ->
        type_:string ->
          ?eventInitDict:FontFaceSetLoadEventInit.t ->
            unit -> FontFaceSetLoadEvent.t)
      =
      fun (x8929 : t) ->
        fun ~type_:(x8925 : string) ->
          fun ?eventInitDict:(x8926 : FontFaceSetLoadEventInit.t option) ->
            fun () ->
              FontFaceSetLoadEvent.t_of_js
                (Ojs.new_obj_arr (t_to_js x8929)
                   (let x8927 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8927 "push" [|(Ojs.string_to_js x8925)|]);
                    (match x8926 with
                     | Some x8928 ->
                         ignore
                           (Ojs.call x8927 "push"
                              [|(FontFaceSetLoadEventInit.t_to_js x8928)|])
                     | None -> ());
                    x8927))
  end
module QueuingStrategyInit =
  struct
    type t = [ `QueuingStrategyInit ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8931 : Ojs.t) -> t_of_js x8931
    and t_0_to_js : t_0 -> Ojs.t = fun (x8930 : t) -> t_to_js x8930
    type tags = [ `QueuingStrategyInit ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `QueuingStrategyInit ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8934 : Ojs.t) -> intf_of_js __tags_of_js x8934
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8932 : __tags intf) -> intf_to_js __tags_to_js x8932
    let (get_highWaterMark : 'tags this -> float) =
      fun (x8936 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8936) "highWaterMark")
    let (set_highWaterMark : 'tags this -> float -> unit) =
      fun (x8938 : 'tags this) ->
        fun (x8939 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8938) "highWaterMark"
            (Ojs.float_to_js x8939)
    let cast_from = Obj.magic
  end
module ByteLengthQueuingStrategy =
  struct
    type t =
      [ `ByteLengthQueuingStrategy 
      | `QueuingStrategy of ArrayBufferView.t_0 ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8942 : Ojs.t) -> t_of_js x8942
    and t_0_to_js : t_0 -> Ojs.t = fun (x8941 : t) -> t_to_js x8941
    type tags =
      [ `ByteLengthQueuingStrategy 
      | `QueuingStrategy of ArrayBufferView.t_0 ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `ByteLengthQueuingStrategy ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8945 : Ojs.t) -> intf_of_js __tags_of_js x8945
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8943 : __tags intf) -> intf_to_js __tags_to_js x8943
    let (get_highWaterMark : 'tags this -> float) =
      fun (x8947 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8947) "highWaterMark")
    let (get_size : 'tags this -> ArrayBufferView.t_0 QueuingStrategySize.t)
      =
      fun (x8949 : 'tags this) ->
        QueuingStrategySize.t_of_js ArrayBufferView.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8949) "size")
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "ByteLengthQueuingStrategy")
             "prototype")
    let (create : QueuingStrategyInit.t -> t) =
      fun (x8952 : QueuingStrategyInit.t) ->
        t_of_js
          (Ojs.new_obj
             (Ojs.get_prop_ascii Ojs.global "ByteLengthQueuingStrategy")
             [|(QueuingStrategyInit.t_to_js x8952)|])
  end
module AnonymousInterface4 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8954 : Ojs.t) -> x8954
    and t_to_js : t -> Ojs.t = fun (x8953 : Ojs.t) -> x8953
    let (get_prototype : t -> ByteLengthQueuingStrategy.t) =
      fun (x8955 : t) ->
        ByteLengthQueuingStrategy.t_of_js
          (Ojs.get_prop_ascii (t_to_js x8955) "prototype")
    let (set_prototype : t -> ByteLengthQueuingStrategy.t -> unit) =
      fun (x8956 : t) ->
        fun (x8957 : ByteLengthQueuingStrategy.t) ->
          Ojs.set_prop_ascii (t_to_js x8956) "prototype"
            (ByteLengthQueuingStrategy.t_to_js x8957)
    let (create :
      t -> init:QueuingStrategyInit.t -> ByteLengthQueuingStrategy.t) =
      fun (x8959 : t) ->
        fun ~init:(x8958 : QueuingStrategyInit.t) ->
          ByteLengthQueuingStrategy.t_of_js
            (Ojs.new_obj (t_to_js x8959)
               [|(QueuingStrategyInit.t_to_js x8958)|])
  end
module AnonymousInterface39 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8961 : Ojs.t) -> x8961
    and t_to_js : t -> Ojs.t = fun (x8960 : Ojs.t) -> x8960
    let (get_prototype : t -> FontFaceSet.t) =
      fun (x8962 : t) ->
        FontFaceSet.t_of_js (Ojs.get_prop_ascii (t_to_js x8962) "prototype")
    let (set_prototype : t -> FontFaceSet.t -> unit) =
      fun (x8963 : t) ->
        fun (x8964 : FontFaceSet.t) ->
          Ojs.set_prop_ascii (t_to_js x8963) "prototype"
            (FontFaceSet.t_to_js x8964)
    let (create : t -> initialFaces:FontFace.t list -> FontFaceSet.t) =
      fun (x8967 : t) ->
        fun ~initialFaces:(x8965 : FontFace.t list) ->
          FontFaceSet.t_of_js
            (Ojs.new_obj (t_to_js x8967)
               [|(Ojs.list_to_js FontFace.t_to_js x8965)|])
  end
module AnonymousInterface38 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x8969 : Ojs.t) -> x8969
    and t_to_js : t -> Ojs.t = fun (x8968 : Ojs.t) -> x8968
    let (get_prototype : t -> FontFace.t) =
      fun (x8970 : t) ->
        FontFace.t_of_js (Ojs.get_prop_ascii (t_to_js x8970) "prototype")
    let (set_prototype : t -> FontFace.t -> unit) =
      fun (x8971 : t) ->
        fun (x8972 : FontFace.t) ->
          Ojs.set_prop_ascii (t_to_js x8971) "prototype"
            (FontFace.t_to_js x8972)
    let (create :
      t ->
        family:string ->
          source:BinaryData.t or_string ->
            ?descriptors:FontFaceDescriptors.t -> unit -> FontFace.t)
      =
      fun (x8979 : t) ->
        fun ~family:(x8973 : string) ->
          fun ~source:(x8974 : BinaryData.t or_string) ->
            fun ?descriptors:(x8975 : FontFaceDescriptors.t option) ->
              fun () ->
                FontFace.t_of_js
                  (Ojs.new_obj_arr (t_to_js x8979)
                     (let x8976 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x8976 "push" [|(Ojs.string_to_js x8973)|]);
                      ignore
                        (Ojs.call x8976 "push"
                           [|(or_string_to_js BinaryData.t_to_js x8974)|]);
                      (match x8975 with
                       | Some x8977 ->
                           ignore
                             (Ojs.call x8976 "push"
                                [|(FontFaceDescriptors.t_to_js x8977)|])
                       | None -> ());
                      x8976))
  end
module FileReaderSync =
  struct
    type t = [ `FileReaderSync ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8981 : Ojs.t) -> t_of_js x8981
    and t_0_to_js : t_0 -> Ojs.t = fun (x8980 : t) -> t_to_js x8980
    type tags = [ `FileReaderSync ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `FileReaderSync ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8984 : Ojs.t) -> intf_of_js __tags_of_js x8984
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8982 : __tags intf) -> intf_to_js __tags_to_js x8982
    let (readAsArrayBuffer : 'tags this -> blob:Blob.t -> ArrayBuffer.t_0) =
      fun (x8987 : 'tags this) ->
        fun ~blob:(x8986 : Blob.t) ->
          ArrayBuffer.t_0_of_js
            (Ojs.call (this_to_js Obj.magic x8987) "readAsArrayBuffer"
               [|(Blob.t_to_js x8986)|])
    let (readAsBinaryString : 'tags this -> blob:Blob.t -> string) =
      fun (x8990 : 'tags this) ->
        fun ~blob:(x8989 : Blob.t) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x8990) "readAsBinaryString"
               [|(Blob.t_to_js x8989)|])
    let (readAsDataURL : 'tags this -> blob:Blob.t -> string) =
      fun (x8993 : 'tags this) ->
        fun ~blob:(x8992 : Blob.t) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x8993) "readAsDataURL"
               [|(Blob.t_to_js x8992)|])
    let (readAsText :
      'tags this -> blob:Blob.t -> ?encoding:string -> unit -> string) =
      fun (x8999 : 'tags this) ->
        fun ~blob:(x8995 : Blob.t) ->
          fun ?encoding:(x8996 : string option) ->
            fun () ->
              Ojs.string_of_js
                (let x9001 = this_to_js Obj.magic x8999 in
                 Ojs.call (Ojs.get_prop_ascii x9001 "readAsText") "apply"
                   [|x9001;((let x8997 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8997 "push"
                                  [|(Blob.t_to_js x8995)|]);
                             (match x8996 with
                              | Some x8998 ->
                                  ignore
                                    (Ojs.call x8997 "push"
                                       [|(Ojs.string_to_js x8998)|])
                              | None -> ());
                             x8997))|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "FileReaderSync") "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FileReaderSync") [||])
  end
module AnonymousInterface37 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x9003 : Ojs.t) -> x9003
    and t_to_js : t -> Ojs.t = fun (x9002 : Ojs.t) -> x9002
    let (get_prototype : t -> FileReaderSync.t) =
      fun (x9004 : t) ->
        FileReaderSync.t_of_js
          (Ojs.get_prop_ascii (t_to_js x9004) "prototype")
    let (set_prototype : t -> FileReaderSync.t -> unit) =
      fun (x9005 : t) ->
        fun (x9006 : FileReaderSync.t) ->
          Ojs.set_prop_ascii (t_to_js x9005) "prototype"
            (FileReaderSync.t_to_js x9006)
    let (create : t -> FileReaderSync.t) =
      fun (x9007 : t) ->
        FileReaderSync.t_of_js (Ojs.new_obj (t_to_js x9007) [||])
  end
module AnonymousInterface36 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x9009 : Ojs.t) -> x9009
    and t_to_js : t -> Ojs.t = fun (x9008 : Ojs.t) -> x9008
    let (get_prototype : t -> FileReader.t) =
      fun (x9010 : t) ->
        FileReader.t_of_js (Ojs.get_prop_ascii (t_to_js x9010) "prototype")
    let (set_prototype : t -> FileReader.t -> unit) =
      fun (x9011 : t) ->
        fun (x9012 : FileReader.t) ->
          Ojs.set_prop_ascii (t_to_js x9011) "prototype"
            (FileReader.t_to_js x9012)
    let (create : t -> FileReader.t) =
      fun (x9013 : t) ->
        FileReader.t_of_js (Ojs.new_obj (t_to_js x9013) [||])
    let (get_DONE : t -> float) =
      fun (x9014 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x9014) "DONE")
    let (get_EMPTY : t -> float) =
      fun (x9015 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x9015) "EMPTY")
    let (get_LOADING : t -> float) =
      fun (x9016 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x9016) "LOADING")
  end
module FileList =
  struct
    type t =
      [ `FileList  | File.t ArrayLike.tags_1
      | File.t IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9018 : Ojs.t) -> t_of_js x9018
    and t_0_to_js : t_0 -> Ojs.t = fun (x9017 : t) -> t_to_js x9017
    type tags =
      [ `FileList  | File.t ArrayLike.tags_1
      | File.t IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `FileList ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x9021 : Ojs.t) -> intf_of_js __tags_of_js x9021
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x9019 : __tags intf) -> intf_to_js __tags_to_js x9019
    let (get_length : 'tags this -> float) =
      fun (x9023 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9023) "length")
    let (item : 'tags this -> index:float -> File.t or_null) =
      fun (x9026 : 'tags this) ->
        fun ~index:(x9025 : float) ->
          or_null_of_js File.t_of_js
            (Ojs.call (this_to_js Obj.magic x9026) "item"
               [|(Ojs.float_to_js x9025)|])
    let (get : 'tags this -> float -> File.t) =
      fun (x9029 : 'tags this) ->
        fun (x9031 : float) ->
          File.t_of_js
            (Ojs.get_prop (this_to_js Obj.magic x9029)
               (Ojs.float_to_js x9031))
    let (set : 'tags this -> float -> File.t -> unit) =
      fun (x9032 : 'tags this) ->
        fun (x9034 : float) ->
          fun (x9035 : File.t) ->
            Ojs.set_prop (this_to_js Obj.magic x9032) (Ojs.float_to_js x9034)
              (File.t_to_js x9035)
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "FileList")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FileList") [||])
  end
module AnonymousInterface35 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x9037 : Ojs.t) -> x9037
    and t_to_js : t -> Ojs.t = fun (x9036 : Ojs.t) -> x9036
    let (get_prototype : t -> FileList.t) =
      fun (x9038 : t) ->
        FileList.t_of_js (Ojs.get_prop_ascii (t_to_js x9038) "prototype")
    let (set_prototype : t -> FileList.t -> unit) =
      fun (x9039 : t) ->
        fun (x9040 : FileList.t) ->
          Ojs.set_prop_ascii (t_to_js x9039) "prototype"
            (FileList.t_to_js x9040)
    let (create : t -> FileList.t) =
      fun (x9041 : t) -> FileList.t_of_js (Ojs.new_obj (t_to_js x9041) [||])
  end
module AnonymousInterface34 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x9043 : Ojs.t) -> x9043
    and t_to_js : t -> Ojs.t = fun (x9042 : Ojs.t) -> x9042
    let (get_prototype : t -> File.t) =
      fun (x9044 : t) ->
        File.t_of_js (Ojs.get_prop_ascii (t_to_js x9044) "prototype")
    let (set_prototype : t -> File.t -> unit) =
      fun (x9045 : t) ->
        fun (x9046 : File.t) ->
          Ojs.set_prop_ascii (t_to_js x9045) "prototype" (File.t_to_js x9046)
    let (create :
      t ->
        fileBits:BlobPart.t list ->
          fileName:string -> ?options:FilePropertyBag.t -> unit -> File.t)
      =
      fun (x9053 : t) ->
        fun ~fileBits:(x9047 : BlobPart.t list) ->
          fun ~fileName:(x9048 : string) ->
            fun ?options:(x9049 : FilePropertyBag.t option) ->
              fun () ->
                File.t_of_js
                  (Ojs.new_obj_arr (t_to_js x9053)
                     (let x9050 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore
                        (Ojs.call x9050 "push"
                           [|(Ojs.list_to_js BlobPart.t_to_js x9047)|]);
                      ignore
                        (Ojs.call x9050 "push" [|(Ojs.string_to_js x9048)|]);
                      (match x9049 with
                       | Some x9051 ->
                           ignore
                             (Ojs.call x9050 "push"
                                [|(FilePropertyBag.t_to_js x9051)|])
                       | None -> ());
                      x9050))
  end
module AnonymousInterface33 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x9055 : Ojs.t) -> x9055
    and t_to_js : t -> Ojs.t = fun (x9054 : Ojs.t) -> x9054
    let (get_prototype : t -> FetchEvent.t) =
      fun (x9056 : t) ->
        FetchEvent.t_of_js (Ojs.get_prop_ascii (t_to_js x9056) "prototype")
    let (set_prototype : t -> FetchEvent.t -> unit) =
      fun (x9057 : t) ->
        fun (x9058 : FetchEvent.t) ->
          Ojs.set_prop_ascii (t_to_js x9057) "prototype"
            (FetchEvent.t_to_js x9058)
    let (create :
      t -> type_:string -> eventInitDict:FetchEventInit.t -> FetchEvent.t) =
      fun (x9061 : t) ->
        fun ~type_:(x9059 : string) ->
          fun ~eventInitDict:(x9060 : FetchEventInit.t) ->
            FetchEvent.t_of_js
              (Ojs.new_obj (t_to_js x9061)
                 [|(Ojs.string_to_js x9059);(FetchEventInit.t_to_js x9060)|])
  end
module AnonymousInterface32 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x9063 : Ojs.t) -> x9063
    and t_to_js : t -> Ojs.t = fun (x9062 : Ojs.t) -> x9062
    let (get_prototype : t -> ExtendableMessageEvent.t) =
      fun (x9064 : t) ->
        ExtendableMessageEvent.t_of_js
          (Ojs.get_prop_ascii (t_to_js x9064) "prototype")
    let (set_prototype : t -> ExtendableMessageEvent.t -> unit) =
      fun (x9065 : t) ->
        fun (x9066 : ExtendableMessageEvent.t) ->
          Ojs.set_prop_ascii (t_to_js x9065) "prototype"
            (ExtendableMessageEvent.t_to_js x9066)
    let (create :
      t ->
        type_:string ->
          ?eventInitDict:ExtendableMessageEventInit.t ->
            unit -> ExtendableMessageEvent.t)
      =
      fun (x9071 : t) ->
        fun ~type_:(x9067 : string) ->
          fun ?eventInitDict:(x9068 : ExtendableMessageEventInit.t option) ->
            fun () ->
              ExtendableMessageEvent.t_of_js
                (Ojs.new_obj_arr (t_to_js x9071)
                   (let x9069 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x9069 "push" [|(Ojs.string_to_js x9067)|]);
                    (match x9068 with
                     | Some x9070 ->
                         ignore
                           (Ojs.call x9069 "push"
                              [|(ExtendableMessageEventInit.t_to_js x9070)|])
                     | None -> ());
                    x9069))
  end
module AnonymousInterface31 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x9073 : Ojs.t) -> x9073
    and t_to_js : t -> Ojs.t = fun (x9072 : Ojs.t) -> x9072
    let (get_prototype : t -> ExtendableEvent.t) =
      fun (x9074 : t) ->
        ExtendableEvent.t_of_js
          (Ojs.get_prop_ascii (t_to_js x9074) "prototype")
    let (set_prototype : t -> ExtendableEvent.t -> unit) =
      fun (x9075 : t) ->
        fun (x9076 : ExtendableEvent.t) ->
          Ojs.set_prop_ascii (t_to_js x9075) "prototype"
            (ExtendableEvent.t_to_js x9076)
    let (create :
      t ->
        type_:string ->
          ?eventInitDict:ExtendableEventInit.t -> unit -> ExtendableEvent.t)
      =
      fun (x9081 : t) ->
        fun ~type_:(x9077 : string) ->
          fun ?eventInitDict:(x9078 : ExtendableEventInit.t option) ->
            fun () ->
              ExtendableEvent.t_of_js
                (Ojs.new_obj_arr (t_to_js x9081)
                   (let x9079 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x9079 "push" [|(Ojs.string_to_js x9077)|]);
                    (match x9078 with
                     | Some x9080 ->
                         ignore
                           (Ojs.call x9079 "push"
                              [|(ExtendableEventInit.t_to_js x9080)|])
                     | None -> ());
                    x9079))
  end
module AnonymousInterface30 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x9083 : Ojs.t) -> x9083
    and t_to_js : t -> Ojs.t = fun (x9082 : Ojs.t) -> x9082
    let (get_prototype : t -> EventTarget.t) =
      fun (x9084 : t) ->
        EventTarget.t_of_js (Ojs.get_prop_ascii (t_to_js x9084) "prototype")
    let (set_prototype : t -> EventTarget.t -> unit) =
      fun (x9085 : t) ->
        fun (x9086 : EventTarget.t) ->
          Ojs.set_prop_ascii (t_to_js x9085) "prototype"
            (EventTarget.t_to_js x9086)
    let (create : t -> EventTarget.t) =
      fun (x9087 : t) ->
        EventTarget.t_of_js (Ojs.new_obj (t_to_js x9087) [||])
  end
module BroadcastChannel =
  struct
    type t = [ `BroadcastChannel  | `EventTarget ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9089 : Ojs.t) -> t_of_js x9089
    and t_0_to_js : t_0 -> Ojs.t = fun (x9088 : t) -> t_to_js x9088
    type tags = [ `BroadcastChannel  | `EventTarget ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `BroadcastChannel ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x9092 : Ojs.t) -> intf_of_js __tags_of_js x9092
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x9090 : __tags intf) -> intf_to_js __tags_to_js x9090
    let (get_name : 'tags this -> string) =
      fun (x9094 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9094) "name")
    let (get_onmessage :
      'tags this -> (this:t -> ev:MessageEvent.t_0 -> any) or_null) =
      fun (x9096 : 'tags this) ->
        or_null_of_js
          (fun (x9098 : Ojs.t) ->
             fun ~this:(x9099 : t) ->
               fun ~ev:(x9100 : MessageEvent.t_0) ->
                 any_of_js
                   (Ojs.apply x9098
                      [|(t_to_js x9099);(MessageEvent.t_0_to_js x9100)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9096) "onmessage")
    let (set_onmessage :
      'tags this -> (this:t -> ev:MessageEvent.t_0 -> any) or_null -> unit) =
      fun (x9101 : 'tags this) ->
        fun (x9102 : (this:t -> ev:MessageEvent.t_0 -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9101) "onmessage"
            (or_null_to_js
               (fun (x9103 : this:t -> ev:MessageEvent.t_0 -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x9104 : Ojs.t) ->
                       fun (x9105 : Ojs.t) ->
                         any_to_js
                           (x9103 ~this:(t_of_js x9104)
                              ~ev:(MessageEvent.t_0_of_js x9105)))) x9102)
    let (get_onmessageerror :
      'tags this -> (this:t -> ev:MessageEvent.t_0 -> any) or_null) =
      fun (x9107 : 'tags this) ->
        or_null_of_js
          (fun (x9109 : Ojs.t) ->
             fun ~this:(x9110 : t) ->
               fun ~ev:(x9111 : MessageEvent.t_0) ->
                 any_of_js
                   (Ojs.apply x9109
                      [|(t_to_js x9110);(MessageEvent.t_0_to_js x9111)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9107) "onmessageerror")
    let (set_onmessageerror :
      'tags this -> (this:t -> ev:MessageEvent.t_0 -> any) or_null -> unit) =
      fun (x9112 : 'tags this) ->
        fun (x9113 : (this:t -> ev:MessageEvent.t_0 -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9112) "onmessageerror"
            (or_null_to_js
               (fun (x9114 : this:t -> ev:MessageEvent.t_0 -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x9115 : Ojs.t) ->
                       fun (x9116 : Ojs.t) ->
                         any_to_js
                           (x9114 ~this:(t_of_js x9115)
                              ~ev:(MessageEvent.t_0_of_js x9116)))) x9113)
    let (close : 'tags this -> unit) =
      fun (x9118 : 'tags this) ->
        ignore (Ojs.call (this_to_js Obj.magic x9118) "close" [||])
    let (postMessage : 'tags this -> message:any -> unit) =
      fun (x9121 : 'tags this) ->
        fun ~message:(x9120 : any) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x9121) "postMessage"
               [|(any_to_js x9120)|])
    let (addEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x9131 : 'tags this) ->
        fun ~type_:(x9123 : 'K) ->
          fun ~listener:(x9124 : this:t -> ev:any -> any) ->
            fun
              ?options:(x9125 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x9133 = this_to_js Obj.magic x9131 in
                   Ojs.call (Ojs.get_prop_ascii x9133 "addEventListener")
                     "apply"
                     [|x9133;((let x9126 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x9126 "push" [|(Obj.magic x9123)|]);
                               ignore
                                 (Ojs.call x9126 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x9129 : Ojs.t) ->
                                            fun (x9130 : Ojs.t) ->
                                              any_to_js
                                                (x9124 ~this:(t_of_js x9129)
                                                   ~ev:(any_of_js x9130))))|]);
                               (match x9125 with
                                | Some x9127 ->
                                    ignore
                                      (Ojs.call x9126 "push"
                                         [|(or_boolean_to_js
                                              AddEventListenerOptions.t_to_js
                                              x9127)|])
                                | None -> ());
                               x9126))|])
    let (addEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x9140 : 'tags this) ->
        fun ~type_:(x9134 : string) ->
          fun ~listener:(x9135 : EventListenerOrEventListenerObject.t) ->
            fun
              ?options:(x9136 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x9142 = this_to_js Obj.magic x9140 in
                   Ojs.call (Ojs.get_prop_ascii x9142 "addEventListener")
                     "apply"
                     [|x9142;((let x9137 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x9137 "push"
                                    [|(Ojs.string_to_js x9134)|]);
                               ignore
                                 (Ojs.call x9137 "push"
                                    [|(EventListenerOrEventListenerObject.t_to_js
                                         x9135)|]);
                               (match x9136 with
                                | Some x9138 ->
                                    ignore
                                      (Ojs.call x9137 "push"
                                         [|(or_boolean_to_js
                                              AddEventListenerOptions.t_to_js
                                              x9138)|])
                                | None -> ());
                               x9137))|])
    let (removeEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x9151 : 'tags this) ->
        fun ~type_:(x9143 : 'K) ->
          fun ~listener:(x9144 : this:t -> ev:any -> any) ->
            fun ?options:(x9145 : EventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x9153 = this_to_js Obj.magic x9151 in
                   Ojs.call (Ojs.get_prop_ascii x9153 "removeEventListener")
                     "apply"
                     [|x9153;((let x9146 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x9146 "push" [|(Obj.magic x9143)|]);
                               ignore
                                 (Ojs.call x9146 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x9149 : Ojs.t) ->
                                            fun (x9150 : Ojs.t) ->
                                              any_to_js
                                                (x9144 ~this:(t_of_js x9149)
                                                   ~ev:(any_of_js x9150))))|]);
                               (match x9145 with
                                | Some x9147 ->
                                    ignore
                                      (Ojs.call x9146 "push"
                                         [|(or_boolean_to_js
                                              EventListenerOptions.t_to_js
                                              x9147)|])
                                | None -> ());
                               x9146))|])
    let (removeEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x9160 : 'tags this) ->
        fun ~type_:(x9154 : string) ->
          fun ~listener:(x9155 : EventListenerOrEventListenerObject.t) ->
            fun ?options:(x9156 : EventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x9162 = this_to_js Obj.magic x9160 in
                   Ojs.call (Ojs.get_prop_ascii x9162 "removeEventListener")
                     "apply"
                     [|x9162;((let x9157 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x9157 "push"
                                    [|(Ojs.string_to_js x9154)|]);
                               ignore
                                 (Ojs.call x9157 "push"
                                    [|(EventListenerOrEventListenerObject.t_to_js
                                         x9155)|]);
                               (match x9156 with
                                | Some x9158 ->
                                    ignore
                                      (Ojs.call x9157 "push"
                                         [|(or_boolean_to_js
                                              EventListenerOptions.t_to_js
                                              x9158)|])
                                | None -> ());
                               x9157))|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "BroadcastChannel") "prototype")
    let (create : string -> t) =
      fun (x9163 : string) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "BroadcastChannel")
             [|(Ojs.string_to_js x9163)|])
  end
module AnonymousInterface3 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x9165 : Ojs.t) -> x9165
    and t_to_js : t -> Ojs.t = fun (x9164 : Ojs.t) -> x9164
    let (get_prototype : t -> BroadcastChannel.t) =
      fun (x9166 : t) ->
        BroadcastChannel.t_of_js
          (Ojs.get_prop_ascii (t_to_js x9166) "prototype")
    let (set_prototype : t -> BroadcastChannel.t -> unit) =
      fun (x9167 : t) ->
        fun (x9168 : BroadcastChannel.t) ->
          Ojs.set_prop_ascii (t_to_js x9167) "prototype"
            (BroadcastChannel.t_to_js x9168)
    let (create : t -> name:string -> BroadcastChannel.t) =
      fun (x9170 : t) ->
        fun ~name:(x9169 : string) ->
          BroadcastChannel.t_of_js
            (Ojs.new_obj (t_to_js x9170) [|(Ojs.string_to_js x9169)|])
  end
module EventSourceInit =
  struct
    type t = [ `EventSourceInit ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9172 : Ojs.t) -> t_of_js x9172
    and t_0_to_js : t_0 -> Ojs.t = fun (x9171 : t) -> t_to_js x9171
    type tags = [ `EventSourceInit ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `EventSourceInit ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x9175 : Ojs.t) -> intf_of_js __tags_of_js x9175
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x9173 : __tags intf) -> intf_to_js __tags_to_js x9173
    let (get_withCredentials : 'tags this -> bool) =
      fun (x9177 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9177) "withCredentials")
    let (set_withCredentials : 'tags this -> bool -> unit) =
      fun (x9179 : 'tags this) ->
        fun (x9180 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9179) "withCredentials"
            (Ojs.bool_to_js x9180)
    let cast_from = Obj.magic
  end
module EventSource =
  struct
    type t = [ `EventSource  | `EventTarget ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9183 : Ojs.t) -> t_of_js x9183
    and t_0_to_js : t_0 -> Ojs.t = fun (x9182 : t) -> t_to_js x9182
    type tags = [ `EventSource  | `EventTarget ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `EventSource ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x9186 : Ojs.t) -> intf_of_js __tags_of_js x9186
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x9184 : __tags intf) -> intf_to_js __tags_to_js x9184
    let (get_onerror : 'tags this -> (this:t -> ev:Event.t -> any) or_null) =
      fun (x9188 : 'tags this) ->
        or_null_of_js
          (fun (x9190 : Ojs.t) ->
             fun ~this:(x9191 : t) ->
               fun ~ev:(x9192 : Event.t) ->
                 any_of_js
                   (Ojs.apply x9190 [|(t_to_js x9191);(Event.t_to_js x9192)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9188) "onerror")
    let (set_onerror :
      'tags this -> (this:t -> ev:Event.t -> any) or_null -> unit) =
      fun (x9193 : 'tags this) ->
        fun (x9194 : (this:t -> ev:Event.t -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9193) "onerror"
            (or_null_to_js
               (fun (x9195 : this:t -> ev:Event.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x9196 : Ojs.t) ->
                       fun (x9197 : Ojs.t) ->
                         any_to_js
                           (x9195 ~this:(t_of_js x9196)
                              ~ev:(Event.t_of_js x9197)))) x9194)
    let (get_onmessage :
      'tags this -> (this:t -> ev:MessageEvent.t_0 -> any) or_null) =
      fun (x9199 : 'tags this) ->
        or_null_of_js
          (fun (x9201 : Ojs.t) ->
             fun ~this:(x9202 : t) ->
               fun ~ev:(x9203 : MessageEvent.t_0) ->
                 any_of_js
                   (Ojs.apply x9201
                      [|(t_to_js x9202);(MessageEvent.t_0_to_js x9203)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9199) "onmessage")
    let (set_onmessage :
      'tags this -> (this:t -> ev:MessageEvent.t_0 -> any) or_null -> unit) =
      fun (x9204 : 'tags this) ->
        fun (x9205 : (this:t -> ev:MessageEvent.t_0 -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9204) "onmessage"
            (or_null_to_js
               (fun (x9206 : this:t -> ev:MessageEvent.t_0 -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x9207 : Ojs.t) ->
                       fun (x9208 : Ojs.t) ->
                         any_to_js
                           (x9206 ~this:(t_of_js x9207)
                              ~ev:(MessageEvent.t_0_of_js x9208)))) x9205)
    let (get_onopen : 'tags this -> (this:t -> ev:Event.t -> any) or_null) =
      fun (x9210 : 'tags this) ->
        or_null_of_js
          (fun (x9212 : Ojs.t) ->
             fun ~this:(x9213 : t) ->
               fun ~ev:(x9214 : Event.t) ->
                 any_of_js
                   (Ojs.apply x9212 [|(t_to_js x9213);(Event.t_to_js x9214)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9210) "onopen")
    let (set_onopen :
      'tags this -> (this:t -> ev:Event.t -> any) or_null -> unit) =
      fun (x9215 : 'tags this) ->
        fun (x9216 : (this:t -> ev:Event.t -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9215) "onopen"
            (or_null_to_js
               (fun (x9217 : this:t -> ev:Event.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x9218 : Ojs.t) ->
                       fun (x9219 : Ojs.t) ->
                         any_to_js
                           (x9217 ~this:(t_of_js x9218)
                              ~ev:(Event.t_of_js x9219)))) x9216)
    let (get_readyState : 'tags this -> float) =
      fun (x9221 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9221) "readyState")
    let (get_url : 'tags this -> string) =
      fun (x9223 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9223) "url")
    let (get_withCredentials : 'tags this -> bool) =
      fun (x9225 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9225) "withCredentials")
    let (close : 'tags this -> unit) =
      fun (x9227 : 'tags this) ->
        ignore (Ojs.call (this_to_js Obj.magic x9227) "close" [||])
    let (get_CLOSED : 'tags this -> float) =
      fun (x9229 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9229) "CLOSED")
    let (get_CONNECTING : 'tags this -> float) =
      fun (x9231 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9231) "CONNECTING")
    let (get_OPEN : 'tags this -> float) =
      fun (x9233 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9233) "OPEN")
    let (addEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x9243 : 'tags this) ->
        fun ~type_:(x9235 : 'K) ->
          fun ~listener:(x9236 : this:t -> ev:any -> any) ->
            fun
              ?options:(x9237 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x9245 = this_to_js Obj.magic x9243 in
                   Ojs.call (Ojs.get_prop_ascii x9245 "addEventListener")
                     "apply"
                     [|x9245;((let x9238 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x9238 "push" [|(Obj.magic x9235)|]);
                               ignore
                                 (Ojs.call x9238 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x9241 : Ojs.t) ->
                                            fun (x9242 : Ojs.t) ->
                                              any_to_js
                                                (x9236 ~this:(t_of_js x9241)
                                                   ~ev:(any_of_js x9242))))|]);
                               (match x9237 with
                                | Some x9239 ->
                                    ignore
                                      (Ojs.call x9238 "push"
                                         [|(or_boolean_to_js
                                              AddEventListenerOptions.t_to_js
                                              x9239)|])
                                | None -> ());
                               x9238))|])
    let (addEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x9252 : 'tags this) ->
        fun ~type_:(x9246 : string) ->
          fun ~listener:(x9247 : EventListenerOrEventListenerObject.t) ->
            fun
              ?options:(x9248 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x9254 = this_to_js Obj.magic x9252 in
                   Ojs.call (Ojs.get_prop_ascii x9254 "addEventListener")
                     "apply"
                     [|x9254;((let x9249 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x9249 "push"
                                    [|(Ojs.string_to_js x9246)|]);
                               ignore
                                 (Ojs.call x9249 "push"
                                    [|(EventListenerOrEventListenerObject.t_to_js
                                         x9247)|]);
                               (match x9248 with
                                | Some x9250 ->
                                    ignore
                                      (Ojs.call x9249 "push"
                                         [|(or_boolean_to_js
                                              AddEventListenerOptions.t_to_js
                                              x9250)|])
                                | None -> ());
                               x9249))|])
    let (removeEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x9263 : 'tags this) ->
        fun ~type_:(x9255 : 'K) ->
          fun ~listener:(x9256 : this:t -> ev:any -> any) ->
            fun ?options:(x9257 : EventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x9265 = this_to_js Obj.magic x9263 in
                   Ojs.call (Ojs.get_prop_ascii x9265 "removeEventListener")
                     "apply"
                     [|x9265;((let x9258 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x9258 "push" [|(Obj.magic x9255)|]);
                               ignore
                                 (Ojs.call x9258 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x9261 : Ojs.t) ->
                                            fun (x9262 : Ojs.t) ->
                                              any_to_js
                                                (x9256 ~this:(t_of_js x9261)
                                                   ~ev:(any_of_js x9262))))|]);
                               (match x9257 with
                                | Some x9259 ->
                                    ignore
                                      (Ojs.call x9258 "push"
                                         [|(or_boolean_to_js
                                              EventListenerOptions.t_to_js
                                              x9259)|])
                                | None -> ());
                               x9258))|])
    let (removeEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x9272 : 'tags this) ->
        fun ~type_:(x9266 : string) ->
          fun ~listener:(x9267 : EventListenerOrEventListenerObject.t) ->
            fun ?options:(x9268 : EventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x9274 = this_to_js Obj.magic x9272 in
                   Ojs.call (Ojs.get_prop_ascii x9274 "removeEventListener")
                     "apply"
                     [|x9274;((let x9269 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x9269 "push"
                                    [|(Ojs.string_to_js x9266)|]);
                               ignore
                                 (Ojs.call x9269 "push"
                                    [|(EventListenerOrEventListenerObject.t_to_js
                                         x9267)|]);
                               (match x9268 with
                                | Some x9270 ->
                                    ignore
                                      (Ojs.call x9269 "push"
                                         [|(or_boolean_to_js
                                              EventListenerOptions.t_to_js
                                              x9270)|])
                                | None -> ());
                               x9269))|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "EventSource")
             "prototype")
    let (create :
      url:URL.t or_string ->
        ?eventSourceInitDict:EventSourceInit.t -> unit -> t)
      =
      fun ~url:(x9275 : URL.t or_string) ->
        fun ?eventSourceInitDict:(x9276 : EventSourceInit.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "EventSource")
                 (let x9277 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x9277 "push"
                       [|(or_string_to_js URL.t_to_js x9275)|]);
                  (match x9276 with
                   | Some x9278 ->
                       ignore
                         (Ojs.call x9277 "push"
                            [|(EventSourceInit.t_to_js x9278)|])
                   | None -> ());
                  x9277))
    let (closed : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "EventSource")
             "CLOSED")
    let (connecting : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "EventSource")
             "CONNECTING")
    let (open_ : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "EventSource")
             "OPEN")
  end
module AnonymousInterface29 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x9281 : Ojs.t) -> x9281
    and t_to_js : t -> Ojs.t = fun (x9280 : Ojs.t) -> x9280
    let (get_prototype : t -> EventSource.t) =
      fun (x9282 : t) ->
        EventSource.t_of_js (Ojs.get_prop_ascii (t_to_js x9282) "prototype")
    let (set_prototype : t -> EventSource.t -> unit) =
      fun (x9283 : t) ->
        fun (x9284 : EventSource.t) ->
          Ojs.set_prop_ascii (t_to_js x9283) "prototype"
            (EventSource.t_to_js x9284)
    let (create :
      t ->
        url:URL.t or_string ->
          ?eventSourceInitDict:EventSourceInit.t -> unit -> EventSource.t)
      =
      fun (x9290 : t) ->
        fun ~url:(x9285 : URL.t or_string) ->
          fun ?eventSourceInitDict:(x9286 : EventSourceInit.t option) ->
            fun () ->
              EventSource.t_of_js
                (Ojs.new_obj_arr (t_to_js x9290)
                   (let x9287 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x9287 "push"
                         [|(or_string_to_js URL.t_to_js x9285)|]);
                    (match x9286 with
                     | Some x9288 ->
                         ignore
                           (Ojs.call x9287 "push"
                              [|(EventSourceInit.t_to_js x9288)|])
                     | None -> ());
                    x9287))
    let (get_CLOSED : t -> float) =
      fun (x9291 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x9291) "CLOSED")
    let (get_CONNECTING : t -> float) =
      fun (x9292 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x9292) "CONNECTING")
    let (get_OPEN : t -> float) =
      fun (x9293 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x9293) "OPEN")
  end
module AnonymousInterface28 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x9295 : Ojs.t) -> x9295
    and t_to_js : t -> Ojs.t = fun (x9294 : Ojs.t) -> x9294
    let (get_prototype : t -> Event.t) =
      fun (x9296 : t) ->
        Event.t_of_js (Ojs.get_prop_ascii (t_to_js x9296) "prototype")
    let (set_prototype : t -> Event.t -> unit) =
      fun (x9297 : t) ->
        fun (x9298 : Event.t) ->
          Ojs.set_prop_ascii (t_to_js x9297) "prototype"
            (Event.t_to_js x9298)
    let (create :
      t -> type_:string -> ?eventInitDict:EventInit.t -> unit -> Event.t) =
      fun (x9303 : t) ->
        fun ~type_:(x9299 : string) ->
          fun ?eventInitDict:(x9300 : EventInit.t option) ->
            fun () ->
              Event.t_of_js
                (Ojs.new_obj_arr (t_to_js x9303)
                   (let x9301 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x9301 "push" [|(Ojs.string_to_js x9299)|]);
                    (match x9300 with
                     | Some x9302 ->
                         ignore
                           (Ojs.call x9301 "push"
                              [|(EventInit.t_to_js x9302)|])
                     | None -> ());
                    x9301))
    let (get_AT_TARGET : t -> float) =
      fun (x9304 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x9304) "AT_TARGET")
    let (get_BUBBLING_PHASE : t -> float) =
      fun (x9305 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x9305) "BUBBLING_PHASE")
    let (get_CAPTURING_PHASE : t -> float) =
      fun (x9306 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x9306) "CAPTURING_PHASE")
    let (get_NONE : t -> float) =
      fun (x9307 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x9307) "NONE")
  end
module AnonymousInterface27 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x9309 : Ojs.t) -> x9309
    and t_to_js : t -> Ojs.t = fun (x9308 : Ojs.t) -> x9308
    let (get_prototype : t -> ErrorEvent.t) =
      fun (x9310 : t) ->
        ErrorEvent.t_of_js (Ojs.get_prop_ascii (t_to_js x9310) "prototype")
    let (set_prototype : t -> ErrorEvent.t -> unit) =
      fun (x9311 : t) ->
        fun (x9312 : ErrorEvent.t) ->
          Ojs.set_prop_ascii (t_to_js x9311) "prototype"
            (ErrorEvent.t_to_js x9312)
    let (create :
      t ->
        type_:string ->
          ?eventInitDict:ErrorEventInit.t -> unit -> ErrorEvent.t)
      =
      fun (x9317 : t) ->
        fun ~type_:(x9313 : string) ->
          fun ?eventInitDict:(x9314 : ErrorEventInit.t option) ->
            fun () ->
              ErrorEvent.t_of_js
                (Ojs.new_obj_arr (t_to_js x9317)
                   (let x9315 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x9315 "push" [|(Ojs.string_to_js x9313)|]);
                    (match x9314 with
                     | Some x9316 ->
                         ignore
                           (Ojs.call x9315 "push"
                              [|(ErrorEventInit.t_to_js x9316)|])
                     | None -> ());
                    x9315))
  end
module FrameRequestCallback =
  struct
    type t = [ `FrameRequestCallback ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9319 : Ojs.t) -> t_of_js x9319
    and t_0_to_js : t_0 -> Ojs.t = fun (x9318 : t) -> t_to_js x9318
    type tags = [ `FrameRequestCallback ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `FrameRequestCallback ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x9322 : Ojs.t) -> intf_of_js __tags_of_js x9322
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x9320 : __tags intf) -> intf_to_js __tags_to_js x9320
    let (apply : 'tags this -> time:DOMHighResTimeStamp.t -> unit) =
      fun (x9325 : 'tags this) ->
        fun ~time:(x9324 : DOMHighResTimeStamp.t) ->
          ignore
            (Ojs.apply (this_to_js Obj.magic x9325)
               [|(DOMHighResTimeStamp.t_to_js x9324)|])
    let cast_from = Obj.magic
  end
module AnimationFrameProvider =
  struct
    type t = [ `AnimationFrameProvider ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9328 : Ojs.t) -> t_of_js x9328
    and t_0_to_js : t_0 -> Ojs.t = fun (x9327 : t) -> t_to_js x9327
    type tags = [ `AnimationFrameProvider ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `AnimationFrameProvider ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x9331 : Ojs.t) -> intf_of_js __tags_of_js x9331
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x9329 : __tags intf) -> intf_to_js __tags_to_js x9329
    let (cancelAnimationFrame : 'tags this -> handle:float -> unit) =
      fun (x9334 : 'tags this) ->
        fun ~handle:(x9333 : float) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x9334) "cancelAnimationFrame"
               [|(Ojs.float_to_js x9333)|])
    let (requestAnimationFrame :
      'tags this -> callback:FrameRequestCallback.t -> float) =
      fun (x9337 : 'tags this) ->
        fun ~callback:(x9336 : FrameRequestCallback.t) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x9337) "requestAnimationFrame"
               [|(FrameRequestCallback.t_to_js x9336)|])
    let cast_from = Obj.magic
  end
module DedicatedWorkerGlobalScope =
  struct
    type t =
      [ `AnimationFrameProvider  | `DedicatedWorkerGlobalScope 
      | `EventTarget  | `FontFaceSource  | `WindowOrWorkerGlobalScope 
      | `WorkerGlobalScope ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9340 : Ojs.t) -> t_of_js x9340
    and t_0_to_js : t_0 -> Ojs.t = fun (x9339 : t) -> t_to_js x9339
    type tags =
      [ `AnimationFrameProvider  | `DedicatedWorkerGlobalScope 
      | `EventTarget  | `FontFaceSource  | `WindowOrWorkerGlobalScope 
      | `WorkerGlobalScope ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `DedicatedWorkerGlobalScope ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x9343 : Ojs.t) -> intf_of_js __tags_of_js x9343
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x9341 : __tags intf) -> intf_to_js __tags_to_js x9341
    let (get_name : 'tags this -> string) =
      fun (x9345 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9345) "name")
    let (get_onmessage :
      'tags this -> (this:t -> ev:MessageEvent.t_0 -> any) or_null) =
      fun (x9347 : 'tags this) ->
        or_null_of_js
          (fun (x9349 : Ojs.t) ->
             fun ~this:(x9350 : t) ->
               fun ~ev:(x9351 : MessageEvent.t_0) ->
                 any_of_js
                   (Ojs.apply x9349
                      [|(t_to_js x9350);(MessageEvent.t_0_to_js x9351)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9347) "onmessage")
    let (set_onmessage :
      'tags this -> (this:t -> ev:MessageEvent.t_0 -> any) or_null -> unit) =
      fun (x9352 : 'tags this) ->
        fun (x9353 : (this:t -> ev:MessageEvent.t_0 -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9352) "onmessage"
            (or_null_to_js
               (fun (x9354 : this:t -> ev:MessageEvent.t_0 -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x9355 : Ojs.t) ->
                       fun (x9356 : Ojs.t) ->
                         any_to_js
                           (x9354 ~this:(t_of_js x9355)
                              ~ev:(MessageEvent.t_0_of_js x9356)))) x9353)
    let (get_onmessageerror :
      'tags this -> (this:t -> ev:MessageEvent.t_0 -> any) or_null) =
      fun (x9358 : 'tags this) ->
        or_null_of_js
          (fun (x9360 : Ojs.t) ->
             fun ~this:(x9361 : t) ->
               fun ~ev:(x9362 : MessageEvent.t_0) ->
                 any_of_js
                   (Ojs.apply x9360
                      [|(t_to_js x9361);(MessageEvent.t_0_to_js x9362)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9358) "onmessageerror")
    let (set_onmessageerror :
      'tags this -> (this:t -> ev:MessageEvent.t_0 -> any) or_null -> unit) =
      fun (x9363 : 'tags this) ->
        fun (x9364 : (this:t -> ev:MessageEvent.t_0 -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9363) "onmessageerror"
            (or_null_to_js
               (fun (x9365 : this:t -> ev:MessageEvent.t_0 -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x9366 : Ojs.t) ->
                       fun (x9367 : Ojs.t) ->
                         any_to_js
                           (x9365 ~this:(t_of_js x9366)
                              ~ev:(MessageEvent.t_0_of_js x9367)))) x9364)
    let (close : 'tags this -> unit) =
      fun (x9369 : 'tags this) ->
        ignore (Ojs.call (this_to_js Obj.magic x9369) "close" [||])
    let (postMessage :
      'tags this -> message:any -> transfer:Transferable.t list -> unit) =
      fun (x9374 : 'tags this) ->
        fun ~message:(x9371 : any) ->
          fun ~transfer:(x9372 : Transferable.t list) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x9374) "postMessage"
                 [|(any_to_js x9371);(Ojs.list_to_js Transferable.t_to_js
                                        x9372)|])
    let (postMessage' :
      'tags this ->
        message:any -> ?options:StructuredSerializeOptions.t -> unit -> unit)
      =
      fun (x9380 : 'tags this) ->
        fun ~message:(x9376 : any) ->
          fun ?options:(x9377 : StructuredSerializeOptions.t option) ->
            fun () ->
              ignore
                (let x9382 = this_to_js Obj.magic x9380 in
                 Ojs.call (Ojs.get_prop_ascii x9382 "postMessage") "apply"
                   [|x9382;((let x9378 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9378 "push" [|(any_to_js x9376)|]);
                             (match x9377 with
                              | Some x9379 ->
                                  ignore
                                    (Ojs.call x9378 "push"
                                       [|(StructuredSerializeOptions.t_to_js
                                            x9379)|])
                              | None -> ());
                             x9378))|])
    let (addEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x9391 : 'tags this) ->
        fun ~type_:(x9383 : 'K) ->
          fun ~listener:(x9384 : this:t -> ev:any -> any) ->
            fun
              ?options:(x9385 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x9393 = this_to_js Obj.magic x9391 in
                   Ojs.call (Ojs.get_prop_ascii x9393 "addEventListener")
                     "apply"
                     [|x9393;((let x9386 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x9386 "push" [|(Obj.magic x9383)|]);
                               ignore
                                 (Ojs.call x9386 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x9389 : Ojs.t) ->
                                            fun (x9390 : Ojs.t) ->
                                              any_to_js
                                                (x9384 ~this:(t_of_js x9389)
                                                   ~ev:(any_of_js x9390))))|]);
                               (match x9385 with
                                | Some x9387 ->
                                    ignore
                                      (Ojs.call x9386 "push"
                                         [|(or_boolean_to_js
                                              AddEventListenerOptions.t_to_js
                                              x9387)|])
                                | None -> ());
                               x9386))|])
    let (addEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x9400 : 'tags this) ->
        fun ~type_:(x9394 : string) ->
          fun ~listener:(x9395 : EventListenerOrEventListenerObject.t) ->
            fun
              ?options:(x9396 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x9402 = this_to_js Obj.magic x9400 in
                   Ojs.call (Ojs.get_prop_ascii x9402 "addEventListener")
                     "apply"
                     [|x9402;((let x9397 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x9397 "push"
                                    [|(Ojs.string_to_js x9394)|]);
                               ignore
                                 (Ojs.call x9397 "push"
                                    [|(EventListenerOrEventListenerObject.t_to_js
                                         x9395)|]);
                               (match x9396 with
                                | Some x9398 ->
                                    ignore
                                      (Ojs.call x9397 "push"
                                         [|(or_boolean_to_js
                                              AddEventListenerOptions.t_to_js
                                              x9398)|])
                                | None -> ());
                               x9397))|])
    let (removeEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x9411 : 'tags this) ->
        fun ~type_:(x9403 : 'K) ->
          fun ~listener:(x9404 : this:t -> ev:any -> any) ->
            fun ?options:(x9405 : EventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x9413 = this_to_js Obj.magic x9411 in
                   Ojs.call (Ojs.get_prop_ascii x9413 "removeEventListener")
                     "apply"
                     [|x9413;((let x9406 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x9406 "push" [|(Obj.magic x9403)|]);
                               ignore
                                 (Ojs.call x9406 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x9409 : Ojs.t) ->
                                            fun (x9410 : Ojs.t) ->
                                              any_to_js
                                                (x9404 ~this:(t_of_js x9409)
                                                   ~ev:(any_of_js x9410))))|]);
                               (match x9405 with
                                | Some x9407 ->
                                    ignore
                                      (Ojs.call x9406 "push"
                                         [|(or_boolean_to_js
                                              EventListenerOptions.t_to_js
                                              x9407)|])
                                | None -> ());
                               x9406))|])
    let (removeEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x9420 : 'tags this) ->
        fun ~type_:(x9414 : string) ->
          fun ~listener:(x9415 : EventListenerOrEventListenerObject.t) ->
            fun ?options:(x9416 : EventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x9422 = this_to_js Obj.magic x9420 in
                   Ojs.call (Ojs.get_prop_ascii x9422 "removeEventListener")
                     "apply"
                     [|x9422;((let x9417 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x9417 "push"
                                    [|(Ojs.string_to_js x9414)|]);
                               ignore
                                 (Ojs.call x9417 "push"
                                    [|(EventListenerOrEventListenerObject.t_to_js
                                         x9415)|]);
                               (match x9416 with
                                | Some x9418 ->
                                    ignore
                                      (Ojs.call x9417 "push"
                                         [|(or_boolean_to_js
                                              EventListenerOptions.t_to_js
                                              x9418)|])
                                | None -> ());
                               x9417))|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "DedicatedWorkerGlobalScope")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj
             (Ojs.get_prop_ascii Ojs.global "DedicatedWorkerGlobalScope")
             [||])
  end
module AnonymousInterface26 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x9424 : Ojs.t) -> x9424
    and t_to_js : t -> Ojs.t = fun (x9423 : Ojs.t) -> x9423
    let (get_prototype : t -> DedicatedWorkerGlobalScope.t) =
      fun (x9425 : t) ->
        DedicatedWorkerGlobalScope.t_of_js
          (Ojs.get_prop_ascii (t_to_js x9425) "prototype")
    let (set_prototype : t -> DedicatedWorkerGlobalScope.t -> unit) =
      fun (x9426 : t) ->
        fun (x9427 : DedicatedWorkerGlobalScope.t) ->
          Ojs.set_prop_ascii (t_to_js x9426) "prototype"
            (DedicatedWorkerGlobalScope.t_to_js x9427)
    let (create : t -> DedicatedWorkerGlobalScope.t) =
      fun (x9428 : t) ->
        DedicatedWorkerGlobalScope.t_of_js (Ojs.new_obj (t_to_js x9428) [||])
  end
module AnonymousInterface25 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x9430 : Ojs.t) -> x9430
    and t_to_js : t -> Ojs.t = fun (x9429 : Ojs.t) -> x9429
    let (get_prototype : t -> DOMStringList.t) =
      fun (x9431 : t) ->
        DOMStringList.t_of_js
          (Ojs.get_prop_ascii (t_to_js x9431) "prototype")
    let (set_prototype : t -> DOMStringList.t -> unit) =
      fun (x9432 : t) ->
        fun (x9433 : DOMStringList.t) ->
          Ojs.set_prop_ascii (t_to_js x9432) "prototype"
            (DOMStringList.t_to_js x9433)
    let (create : t -> DOMStringList.t) =
      fun (x9434 : t) ->
        DOMStringList.t_of_js (Ojs.new_obj (t_to_js x9434) [||])
  end
module DOMRectInit =
  struct
    type t = [ `DOMRectInit ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9436 : Ojs.t) -> t_of_js x9436
    and t_0_to_js : t_0 -> Ojs.t = fun (x9435 : t) -> t_to_js x9435
    type tags = [ `DOMRectInit ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `DOMRectInit ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x9439 : Ojs.t) -> intf_of_js __tags_of_js x9439
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x9437 : __tags intf) -> intf_to_js __tags_to_js x9437
    let (get_height : 'tags this -> float) =
      fun (x9441 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9441) "height")
    let (set_height : 'tags this -> float -> unit) =
      fun (x9443 : 'tags this) ->
        fun (x9444 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9443) "height"
            (Ojs.float_to_js x9444)
    let (get_width : 'tags this -> float) =
      fun (x9446 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9446) "width")
    let (set_width : 'tags this -> float -> unit) =
      fun (x9448 : 'tags this) ->
        fun (x9449 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9448) "width"
            (Ojs.float_to_js x9449)
    let (get_x : 'tags this -> float) =
      fun (x9451 : 'tags this) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x9451) "x")
    let (set_x : 'tags this -> float -> unit) =
      fun (x9453 : 'tags this) ->
        fun (x9454 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9453) "x"
            (Ojs.float_to_js x9454)
    let (get_y : 'tags this -> float) =
      fun (x9456 : 'tags this) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x9456) "y")
    let (set_y : 'tags this -> float -> unit) =
      fun (x9458 : 'tags this) ->
        fun (x9459 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9458) "y"
            (Ojs.float_to_js x9459)
    let cast_from = Obj.magic
  end
module DOMRectReadOnly =
  struct
    type t = [ `DOMRectReadOnly ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9462 : Ojs.t) -> t_of_js x9462
    and t_0_to_js : t_0 -> Ojs.t = fun (x9461 : t) -> t_to_js x9461
    type tags = [ `DOMRectReadOnly ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `DOMRectReadOnly ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x9465 : Ojs.t) -> intf_of_js __tags_of_js x9465
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x9463 : __tags intf) -> intf_to_js __tags_to_js x9463
    let (get_bottom : 'tags this -> float) =
      fun (x9467 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9467) "bottom")
    let (get_height : 'tags this -> float) =
      fun (x9469 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9469) "height")
    let (get_left : 'tags this -> float) =
      fun (x9471 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9471) "left")
    let (get_right : 'tags this -> float) =
      fun (x9473 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9473) "right")
    let (get_top : 'tags this -> float) =
      fun (x9475 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9475) "top")
    let (get_width : 'tags this -> float) =
      fun (x9477 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9477) "width")
    let (get_x : 'tags this -> float) =
      fun (x9479 : 'tags this) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x9479) "x")
    let (get_y : 'tags this -> float) =
      fun (x9481 : 'tags this) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x9481) "y")
    let (toJSON : 'tags this -> any) =
      fun (x9483 : 'tags this) ->
        any_of_js (Ojs.call (this_to_js Obj.magic x9483) "toJSON" [||])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "DOMRectReadOnly") "prototype")
    let (create :
      ?x:float -> ?y:float -> ?width:float -> ?height:float -> unit -> t) =
      fun ?x:(x9485 : float option) ->
        fun ?y:(x9486 : float option) ->
          fun ?width:(x9487 : float option) ->
            fun ?height:(x9488 : float option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii Ojs.global "DOMRectReadOnly")
                     (let x9489 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x9485 with
                       | Some x9493 ->
                           ignore
                             (Ojs.call x9489 "push"
                                [|(Ojs.float_to_js x9493)|])
                       | None -> ());
                      (match x9486 with
                       | Some x9492 ->
                           ignore
                             (Ojs.call x9489 "push"
                                [|(Ojs.float_to_js x9492)|])
                       | None -> ());
                      (match x9487 with
                       | Some x9491 ->
                           ignore
                             (Ojs.call x9489 "push"
                                [|(Ojs.float_to_js x9491)|])
                       | None -> ());
                      (match x9488 with
                       | Some x9490 ->
                           ignore
                             (Ojs.call x9489 "push"
                                [|(Ojs.float_to_js x9490)|])
                       | None -> ());
                      x9489))
    let (fromRect : ?other:DOMRectInit.t -> unit -> t) =
      fun ?other:(x9494 : DOMRectInit.t option) ->
        fun () ->
          t_of_js
            (let x9497 = Ojs.get_prop_ascii Ojs.global "DOMRectReadOnly" in
             Ojs.call (Ojs.get_prop_ascii x9497 "fromRect") "apply"
               [|x9497;((let x9495 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         (match x9494 with
                          | Some x9496 ->
                              ignore
                                (Ojs.call x9495 "push"
                                   [|(DOMRectInit.t_to_js x9496)|])
                          | None -> ());
                         x9495))|])
  end
module AnonymousInterface24 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x9499 : Ojs.t) -> x9499
    and t_to_js : t -> Ojs.t = fun (x9498 : Ojs.t) -> x9498
    let (get_prototype : t -> DOMRectReadOnly.t) =
      fun (x9500 : t) ->
        DOMRectReadOnly.t_of_js
          (Ojs.get_prop_ascii (t_to_js x9500) "prototype")
    let (set_prototype : t -> DOMRectReadOnly.t -> unit) =
      fun (x9501 : t) ->
        fun (x9502 : DOMRectReadOnly.t) ->
          Ojs.set_prop_ascii (t_to_js x9501) "prototype"
            (DOMRectReadOnly.t_to_js x9502)
    let (create :
      t ->
        ?x:float ->
          ?y:float ->
            ?width:float -> ?height:float -> unit -> DOMRectReadOnly.t)
      =
      fun (x9512 : t) ->
        fun ?x:(x9503 : float option) ->
          fun ?y:(x9504 : float option) ->
            fun ?width:(x9505 : float option) ->
              fun ?height:(x9506 : float option) ->
                fun () ->
                  DOMRectReadOnly.t_of_js
                    (Ojs.new_obj_arr (t_to_js x9512)
                       (let x9507 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        (match x9503 with
                         | Some x9511 ->
                             ignore
                               (Ojs.call x9507 "push"
                                  [|(Ojs.float_to_js x9511)|])
                         | None -> ());
                        (match x9504 with
                         | Some x9510 ->
                             ignore
                               (Ojs.call x9507 "push"
                                  [|(Ojs.float_to_js x9510)|])
                         | None -> ());
                        (match x9505 with
                         | Some x9509 ->
                             ignore
                               (Ojs.call x9507 "push"
                                  [|(Ojs.float_to_js x9509)|])
                         | None -> ());
                        (match x9506 with
                         | Some x9508 ->
                             ignore
                               (Ojs.call x9507 "push"
                                  [|(Ojs.float_to_js x9508)|])
                         | None -> ());
                        x9507))
    let (fromRect : t -> ?other:DOMRectInit.t -> unit -> DOMRectReadOnly.t) =
      fun (x9516 : t) ->
        fun ?other:(x9513 : DOMRectInit.t option) ->
          fun () ->
            DOMRectReadOnly.t_of_js
              (let x9517 = t_to_js x9516 in
               Ojs.call (Ojs.get_prop_ascii x9517 "fromRect") "apply"
                 [|x9517;((let x9514 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9513 with
                            | Some x9515 ->
                                ignore
                                  (Ojs.call x9514 "push"
                                     [|(DOMRectInit.t_to_js x9515)|])
                            | None -> ());
                           x9514))|])
  end
module DOMRect =
  struct
    type t = [ `DOMRect  | `DOMRectReadOnly ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9519 : Ojs.t) -> t_of_js x9519
    and t_0_to_js : t_0 -> Ojs.t = fun (x9518 : t) -> t_to_js x9518
    type tags = [ `DOMRect  | `DOMRectReadOnly ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `DOMRect ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x9522 : Ojs.t) -> intf_of_js __tags_of_js x9522
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x9520 : __tags intf) -> intf_to_js __tags_to_js x9520
    let (get_height : 'tags this -> float) =
      fun (x9524 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9524) "height")
    let (set_height : 'tags this -> float -> unit) =
      fun (x9526 : 'tags this) ->
        fun (x9527 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9526) "height"
            (Ojs.float_to_js x9527)
    let (get_width : 'tags this -> float) =
      fun (x9529 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9529) "width")
    let (set_width : 'tags this -> float -> unit) =
      fun (x9531 : 'tags this) ->
        fun (x9532 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9531) "width"
            (Ojs.float_to_js x9532)
    let (get_x : 'tags this -> float) =
      fun (x9534 : 'tags this) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x9534) "x")
    let (set_x : 'tags this -> float -> unit) =
      fun (x9536 : 'tags this) ->
        fun (x9537 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9536) "x"
            (Ojs.float_to_js x9537)
    let (get_y : 'tags this -> float) =
      fun (x9539 : 'tags this) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x9539) "y")
    let (set_y : 'tags this -> float -> unit) =
      fun (x9541 : 'tags this) ->
        fun (x9542 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9541) "y"
            (Ojs.float_to_js x9542)
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DOMRect")
             "prototype")
    let (create :
      ?x:float -> ?y:float -> ?width:float -> ?height:float -> unit -> t) =
      fun ?x:(x9544 : float option) ->
        fun ?y:(x9545 : float option) ->
          fun ?width:(x9546 : float option) ->
            fun ?height:(x9547 : float option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "DOMRect")
                     (let x9548 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x9544 with
                       | Some x9552 ->
                           ignore
                             (Ojs.call x9548 "push"
                                [|(Ojs.float_to_js x9552)|])
                       | None -> ());
                      (match x9545 with
                       | Some x9551 ->
                           ignore
                             (Ojs.call x9548 "push"
                                [|(Ojs.float_to_js x9551)|])
                       | None -> ());
                      (match x9546 with
                       | Some x9550 ->
                           ignore
                             (Ojs.call x9548 "push"
                                [|(Ojs.float_to_js x9550)|])
                       | None -> ());
                      (match x9547 with
                       | Some x9549 ->
                           ignore
                             (Ojs.call x9548 "push"
                                [|(Ojs.float_to_js x9549)|])
                       | None -> ());
                      x9548))
    let (fromRect : ?other:DOMRectInit.t -> unit -> t) =
      fun ?other:(x9553 : DOMRectInit.t option) ->
        fun () ->
          t_of_js
            (let x9556 = Ojs.get_prop_ascii Ojs.global "DOMRect" in
             Ojs.call (Ojs.get_prop_ascii x9556 "fromRect") "apply"
               [|x9556;((let x9554 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         (match x9553 with
                          | Some x9555 ->
                              ignore
                                (Ojs.call x9554 "push"
                                   [|(DOMRectInit.t_to_js x9555)|])
                          | None -> ());
                         x9554))|])
  end
module AnonymousInterface23 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x9558 : Ojs.t) -> x9558
    and t_to_js : t -> Ojs.t = fun (x9557 : Ojs.t) -> x9557
    let (get_prototype : t -> DOMRect.t) =
      fun (x9559 : t) ->
        DOMRect.t_of_js (Ojs.get_prop_ascii (t_to_js x9559) "prototype")
    let (set_prototype : t -> DOMRect.t -> unit) =
      fun (x9560 : t) ->
        fun (x9561 : DOMRect.t) ->
          Ojs.set_prop_ascii (t_to_js x9560) "prototype"
            (DOMRect.t_to_js x9561)
    let (create :
      t ->
        ?x:float ->
          ?y:float -> ?width:float -> ?height:float -> unit -> DOMRect.t)
      =
      fun (x9571 : t) ->
        fun ?x:(x9562 : float option) ->
          fun ?y:(x9563 : float option) ->
            fun ?width:(x9564 : float option) ->
              fun ?height:(x9565 : float option) ->
                fun () ->
                  DOMRect.t_of_js
                    (Ojs.new_obj_arr (t_to_js x9571)
                       (let x9566 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        (match x9562 with
                         | Some x9570 ->
                             ignore
                               (Ojs.call x9566 "push"
                                  [|(Ojs.float_to_js x9570)|])
                         | None -> ());
                        (match x9563 with
                         | Some x9569 ->
                             ignore
                               (Ojs.call x9566 "push"
                                  [|(Ojs.float_to_js x9569)|])
                         | None -> ());
                        (match x9564 with
                         | Some x9568 ->
                             ignore
                               (Ojs.call x9566 "push"
                                  [|(Ojs.float_to_js x9568)|])
                         | None -> ());
                        (match x9565 with
                         | Some x9567 ->
                             ignore
                               (Ojs.call x9566 "push"
                                  [|(Ojs.float_to_js x9567)|])
                         | None -> ());
                        x9566))
    let (fromRect : t -> ?other:DOMRectInit.t -> unit -> DOMRect.t) =
      fun (x9575 : t) ->
        fun ?other:(x9572 : DOMRectInit.t option) ->
          fun () ->
            DOMRect.t_of_js
              (let x9576 = t_to_js x9575 in
               Ojs.call (Ojs.get_prop_ascii x9576 "fromRect") "apply"
                 [|x9576;((let x9573 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9572 with
                            | Some x9574 ->
                                ignore
                                  (Ojs.call x9573 "push"
                                     [|(DOMRectInit.t_to_js x9574)|])
                            | None -> ());
                           x9573))|])
  end
module DOMPointInit =
  struct
    type t = [ `DOMPointInit ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9578 : Ojs.t) -> t_of_js x9578
    and t_0_to_js : t_0 -> Ojs.t = fun (x9577 : t) -> t_to_js x9577
    type tags = [ `DOMPointInit ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `DOMPointInit ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x9581 : Ojs.t) -> intf_of_js __tags_of_js x9581
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x9579 : __tags intf) -> intf_to_js __tags_to_js x9579
    let (get_w : 'tags this -> float) =
      fun (x9583 : 'tags this) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x9583) "w")
    let (set_w : 'tags this -> float -> unit) =
      fun (x9585 : 'tags this) ->
        fun (x9586 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9585) "w"
            (Ojs.float_to_js x9586)
    let (get_x : 'tags this -> float) =
      fun (x9588 : 'tags this) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x9588) "x")
    let (set_x : 'tags this -> float -> unit) =
      fun (x9590 : 'tags this) ->
        fun (x9591 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9590) "x"
            (Ojs.float_to_js x9591)
    let (get_y : 'tags this -> float) =
      fun (x9593 : 'tags this) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x9593) "y")
    let (set_y : 'tags this -> float -> unit) =
      fun (x9595 : 'tags this) ->
        fun (x9596 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9595) "y"
            (Ojs.float_to_js x9596)
    let (get_z : 'tags this -> float) =
      fun (x9598 : 'tags this) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x9598) "z")
    let (set_z : 'tags this -> float -> unit) =
      fun (x9600 : 'tags this) ->
        fun (x9601 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9600) "z"
            (Ojs.float_to_js x9601)
    let cast_from = Obj.magic
  end
module DOMQuadInit =
  struct
    type t = [ `DOMQuadInit ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9604 : Ojs.t) -> t_of_js x9604
    and t_0_to_js : t_0 -> Ojs.t = fun (x9603 : t) -> t_to_js x9603
    type tags = [ `DOMQuadInit ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `DOMQuadInit ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x9607 : Ojs.t) -> intf_of_js __tags_of_js x9607
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x9605 : __tags intf) -> intf_to_js __tags_to_js x9605
    let (get_p1 : 'tags this -> DOMPointInit.t) =
      fun (x9609 : 'tags this) ->
        DOMPointInit.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9609) "p1")
    let (set_p1 : 'tags this -> DOMPointInit.t -> unit) =
      fun (x9611 : 'tags this) ->
        fun (x9612 : DOMPointInit.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9611) "p1"
            (DOMPointInit.t_to_js x9612)
    let (get_p2 : 'tags this -> DOMPointInit.t) =
      fun (x9614 : 'tags this) ->
        DOMPointInit.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9614) "p2")
    let (set_p2 : 'tags this -> DOMPointInit.t -> unit) =
      fun (x9616 : 'tags this) ->
        fun (x9617 : DOMPointInit.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9616) "p2"
            (DOMPointInit.t_to_js x9617)
    let (get_p3 : 'tags this -> DOMPointInit.t) =
      fun (x9619 : 'tags this) ->
        DOMPointInit.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9619) "p3")
    let (set_p3 : 'tags this -> DOMPointInit.t -> unit) =
      fun (x9621 : 'tags this) ->
        fun (x9622 : DOMPointInit.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9621) "p3"
            (DOMPointInit.t_to_js x9622)
    let (get_p4 : 'tags this -> DOMPointInit.t) =
      fun (x9624 : 'tags this) ->
        DOMPointInit.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9624) "p4")
    let (set_p4 : 'tags this -> DOMPointInit.t -> unit) =
      fun (x9626 : 'tags this) ->
        fun (x9627 : DOMPointInit.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9626) "p4"
            (DOMPointInit.t_to_js x9627)
    let cast_from = Obj.magic
  end
module DOMMatrixInit =
  struct
    type t = [ `DOMMatrix2DInit  | `DOMMatrixInit ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9630 : Ojs.t) -> t_of_js x9630
    and t_0_to_js : t_0 -> Ojs.t = fun (x9629 : t) -> t_to_js x9629
    type tags = [ `DOMMatrix2DInit  | `DOMMatrixInit ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `DOMMatrixInit ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x9633 : Ojs.t) -> intf_of_js __tags_of_js x9633
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x9631 : __tags intf) -> intf_to_js __tags_to_js x9631
    let (get_is2D : 'tags this -> bool) =
      fun (x9635 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9635) "is2D")
    let (set_is2D : 'tags this -> bool -> unit) =
      fun (x9637 : 'tags this) ->
        fun (x9638 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9637) "is2D"
            (Ojs.bool_to_js x9638)
    let (get_m13 : 'tags this -> float) =
      fun (x9640 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9640) "m13")
    let (set_m13 : 'tags this -> float -> unit) =
      fun (x9642 : 'tags this) ->
        fun (x9643 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9642) "m13"
            (Ojs.float_to_js x9643)
    let (get_m14 : 'tags this -> float) =
      fun (x9645 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9645) "m14")
    let (set_m14 : 'tags this -> float -> unit) =
      fun (x9647 : 'tags this) ->
        fun (x9648 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9647) "m14"
            (Ojs.float_to_js x9648)
    let (get_m23 : 'tags this -> float) =
      fun (x9650 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9650) "m23")
    let (set_m23 : 'tags this -> float -> unit) =
      fun (x9652 : 'tags this) ->
        fun (x9653 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9652) "m23"
            (Ojs.float_to_js x9653)
    let (get_m24 : 'tags this -> float) =
      fun (x9655 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9655) "m24")
    let (set_m24 : 'tags this -> float -> unit) =
      fun (x9657 : 'tags this) ->
        fun (x9658 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9657) "m24"
            (Ojs.float_to_js x9658)
    let (get_m31 : 'tags this -> float) =
      fun (x9660 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9660) "m31")
    let (set_m31 : 'tags this -> float -> unit) =
      fun (x9662 : 'tags this) ->
        fun (x9663 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9662) "m31"
            (Ojs.float_to_js x9663)
    let (get_m32 : 'tags this -> float) =
      fun (x9665 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9665) "m32")
    let (set_m32 : 'tags this -> float -> unit) =
      fun (x9667 : 'tags this) ->
        fun (x9668 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9667) "m32"
            (Ojs.float_to_js x9668)
    let (get_m33 : 'tags this -> float) =
      fun (x9670 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9670) "m33")
    let (set_m33 : 'tags this -> float -> unit) =
      fun (x9672 : 'tags this) ->
        fun (x9673 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9672) "m33"
            (Ojs.float_to_js x9673)
    let (get_m34 : 'tags this -> float) =
      fun (x9675 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9675) "m34")
    let (set_m34 : 'tags this -> float -> unit) =
      fun (x9677 : 'tags this) ->
        fun (x9678 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9677) "m34"
            (Ojs.float_to_js x9678)
    let (get_m43 : 'tags this -> float) =
      fun (x9680 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9680) "m43")
    let (set_m43 : 'tags this -> float -> unit) =
      fun (x9682 : 'tags this) ->
        fun (x9683 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9682) "m43"
            (Ojs.float_to_js x9683)
    let (get_m44 : 'tags this -> float) =
      fun (x9685 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9685) "m44")
    let (set_m44 : 'tags this -> float -> unit) =
      fun (x9687 : 'tags this) ->
        fun (x9688 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9687) "m44"
            (Ojs.float_to_js x9688)
    let cast_from = Obj.magic
  end
module rec
  DOMPoint:sig
             type t = [ `DOMPoint  | `DOMPointReadOnly ] intf
             type t_0 = t
             [@@@js.stop ]
             type tags = [ `DOMPoint  | `DOMPointReadOnly ]
             type tags_0 = tags
             [@@@js.start ]
             [@@@js.implem
               type tags = [ `DOMPoint  | `DOMPointReadOnly ]
               type tags_0 = tags]
             type 'tags this = 'tags intf constraint 'tags = [> `DOMPoint ]
             val t_to_js : t -> Ojs.t
             val t_of_js : Ojs.t -> t
             val t_0_to_js : t_0 -> Ojs.t
             val t_0_of_js : Ojs.t -> t_0
             val get_w : 'tags this -> float
             val set_w : 'tags this -> float -> unit
             val get_x : 'tags this -> float
             val set_x : 'tags this -> float -> unit
             val get_y : 'tags this -> float
             val set_y : 'tags this -> float -> unit
             val get_z : 'tags this -> float
             val set_z : 'tags this -> float -> unit
             val cast_from : 'tags this -> t
             val prototype : unit -> t
             val create :
               ?x:float -> ?y:float -> ?z:float -> ?w:float -> unit -> t
             val fromPoint : ?other:DOMPointInit.t -> unit -> t
           end =
  struct
    type t = [ `DOMPoint  | `DOMPointReadOnly ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9691 : Ojs.t) -> t_of_js x9691
    and t_0_to_js : t_0 -> Ojs.t = fun (x9690 : t) -> t_to_js x9690
    type tags = [ `DOMPoint  | `DOMPointReadOnly ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `DOMPoint ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x9694 : Ojs.t) -> intf_of_js __tags_of_js x9694
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x9692 : __tags intf) -> intf_to_js __tags_to_js x9692
    let (get_w : 'tags this -> float) =
      fun (x9696 : 'tags this) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x9696) "w")
    let (set_w : 'tags this -> float -> unit) =
      fun (x9698 : 'tags this) ->
        fun (x9699 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9698) "w"
            (Ojs.float_to_js x9699)
    let (get_x : 'tags this -> float) =
      fun (x9701 : 'tags this) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x9701) "x")
    let (set_x : 'tags this -> float -> unit) =
      fun (x9703 : 'tags this) ->
        fun (x9704 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9703) "x"
            (Ojs.float_to_js x9704)
    let (get_y : 'tags this -> float) =
      fun (x9706 : 'tags this) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x9706) "y")
    let (set_y : 'tags this -> float -> unit) =
      fun (x9708 : 'tags this) ->
        fun (x9709 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9708) "y"
            (Ojs.float_to_js x9709)
    let (get_z : 'tags this -> float) =
      fun (x9711 : 'tags this) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x9711) "z")
    let (set_z : 'tags this -> float -> unit) =
      fun (x9713 : 'tags this) ->
        fun (x9714 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9713) "z"
            (Ojs.float_to_js x9714)
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DOMPoint")
             "prototype")
    let (create : ?x:float -> ?y:float -> ?z:float -> ?w:float -> unit -> t)
      =
      fun ?x:(x9716 : float option) ->
        fun ?y:(x9717 : float option) ->
          fun ?z:(x9718 : float option) ->
            fun ?w:(x9719 : float option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "DOMPoint")
                     (let x9720 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x9716 with
                       | Some x9724 ->
                           ignore
                             (Ojs.call x9720 "push"
                                [|(Ojs.float_to_js x9724)|])
                       | None -> ());
                      (match x9717 with
                       | Some x9723 ->
                           ignore
                             (Ojs.call x9720 "push"
                                [|(Ojs.float_to_js x9723)|])
                       | None -> ());
                      (match x9718 with
                       | Some x9722 ->
                           ignore
                             (Ojs.call x9720 "push"
                                [|(Ojs.float_to_js x9722)|])
                       | None -> ());
                      (match x9719 with
                       | Some x9721 ->
                           ignore
                             (Ojs.call x9720 "push"
                                [|(Ojs.float_to_js x9721)|])
                       | None -> ());
                      x9720))
    let (fromPoint : ?other:DOMPointInit.t -> unit -> t) =
      fun ?other:(x9725 : DOMPointInit.t option) ->
        fun () ->
          t_of_js
            (let x9728 = Ojs.get_prop_ascii Ojs.global "DOMPoint" in
             Ojs.call (Ojs.get_prop_ascii x9728 "fromPoint") "apply"
               [|x9728;((let x9726 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         (match x9725 with
                          | Some x9727 ->
                              ignore
                                (Ojs.call x9726 "push"
                                   [|(DOMPointInit.t_to_js x9727)|])
                          | None -> ());
                         x9726))|])
  end
 and
  DOMPointReadOnly:sig
                     type t = [ `DOMPointReadOnly ] intf
                     type t_0 = t
                     [@@@js.stop ]
                     type tags = [ `DOMPointReadOnly ]
                     type tags_0 = tags
                     [@@@js.start ]
                     [@@@js.implem
                       type tags = [ `DOMPointReadOnly ]
                       type tags_0 = tags]
                     type 'tags this =
                       'tags intf constraint 'tags = [> `DOMPointReadOnly ]
                     val t_to_js : t -> Ojs.t
                     val t_of_js : Ojs.t -> t
                     val t_0_to_js : t_0 -> Ojs.t
                     val t_0_of_js : Ojs.t -> t_0
                     val get_w : 'tags this -> float
                     val get_x : 'tags this -> float
                     val get_y : 'tags this -> float
                     val get_z : 'tags this -> float
                     val matrixTransform :
                       'tags this ->
                         ?matrix:DOMMatrixInit.t -> unit -> DOMPoint.t
                     val toJSON : 'tags this -> any
                     val cast_from : 'tags this -> t
                     val prototype : unit -> t
                     val create :
                       ?x:float ->
                         ?y:float -> ?z:float -> ?w:float -> unit -> t
                     val fromPoint : ?other:DOMPointInit.t -> unit -> t
                   end =
  struct
    type t = [ `DOMPointReadOnly ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9730 : Ojs.t) -> t_of_js x9730
    and t_0_to_js : t_0 -> Ojs.t = fun (x9729 : t) -> t_to_js x9729
    type tags = [ `DOMPointReadOnly ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `DOMPointReadOnly ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x9733 : Ojs.t) -> intf_of_js __tags_of_js x9733
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x9731 : __tags intf) -> intf_to_js __tags_to_js x9731
    let (get_w : 'tags this -> float) =
      fun (x9735 : 'tags this) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x9735) "w")
    let (get_x : 'tags this -> float) =
      fun (x9737 : 'tags this) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x9737) "x")
    let (get_y : 'tags this -> float) =
      fun (x9739 : 'tags this) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x9739) "y")
    let (get_z : 'tags this -> float) =
      fun (x9741 : 'tags this) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x9741) "z")
    let (matrixTransform :
      'tags this -> ?matrix:DOMMatrixInit.t -> unit -> DOMPoint.t) =
      fun (x9746 : 'tags this) ->
        fun ?matrix:(x9743 : DOMMatrixInit.t option) ->
          fun () ->
            DOMPoint.t_of_js
              (let x9748 = this_to_js Obj.magic x9746 in
               Ojs.call (Ojs.get_prop_ascii x9748 "matrixTransform") "apply"
                 [|x9748;((let x9744 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9743 with
                            | Some x9745 ->
                                ignore
                                  (Ojs.call x9744 "push"
                                     [|(DOMMatrixInit.t_to_js x9745)|])
                            | None -> ());
                           x9744))|])
    let (toJSON : 'tags this -> any) =
      fun (x9749 : 'tags this) ->
        any_of_js (Ojs.call (this_to_js Obj.magic x9749) "toJSON" [||])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "DOMPointReadOnly") "prototype")
    let (create : ?x:float -> ?y:float -> ?z:float -> ?w:float -> unit -> t)
      =
      fun ?x:(x9751 : float option) ->
        fun ?y:(x9752 : float option) ->
          fun ?z:(x9753 : float option) ->
            fun ?w:(x9754 : float option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii Ojs.global "DOMPointReadOnly")
                     (let x9755 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x9751 with
                       | Some x9759 ->
                           ignore
                             (Ojs.call x9755 "push"
                                [|(Ojs.float_to_js x9759)|])
                       | None -> ());
                      (match x9752 with
                       | Some x9758 ->
                           ignore
                             (Ojs.call x9755 "push"
                                [|(Ojs.float_to_js x9758)|])
                       | None -> ());
                      (match x9753 with
                       | Some x9757 ->
                           ignore
                             (Ojs.call x9755 "push"
                                [|(Ojs.float_to_js x9757)|])
                       | None -> ());
                      (match x9754 with
                       | Some x9756 ->
                           ignore
                             (Ojs.call x9755 "push"
                                [|(Ojs.float_to_js x9756)|])
                       | None -> ());
                      x9755))
    let (fromPoint : ?other:DOMPointInit.t -> unit -> t) =
      fun ?other:(x9760 : DOMPointInit.t option) ->
        fun () ->
          t_of_js
            (let x9763 = Ojs.get_prop_ascii Ojs.global "DOMPointReadOnly" in
             Ojs.call (Ojs.get_prop_ascii x9763 "fromPoint") "apply"
               [|x9763;((let x9761 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         (match x9760 with
                          | Some x9762 ->
                              ignore
                                (Ojs.call x9761 "push"
                                   [|(DOMPointInit.t_to_js x9762)|])
                          | None -> ());
                         x9761))|])
  end
module DOMQuad =
  struct
    type t = [ `DOMQuad ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9765 : Ojs.t) -> t_of_js x9765
    and t_0_to_js : t_0 -> Ojs.t = fun (x9764 : t) -> t_to_js x9764
    type tags = [ `DOMQuad ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `DOMQuad ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x9768 : Ojs.t) -> intf_of_js __tags_of_js x9768
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x9766 : __tags intf) -> intf_to_js __tags_to_js x9766
    let (get_p1 : 'tags this -> DOMPoint.t) =
      fun (x9770 : 'tags this) ->
        DOMPoint.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9770) "p1")
    let (get_p2 : 'tags this -> DOMPoint.t) =
      fun (x9772 : 'tags this) ->
        DOMPoint.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9772) "p2")
    let (get_p3 : 'tags this -> DOMPoint.t) =
      fun (x9774 : 'tags this) ->
        DOMPoint.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9774) "p3")
    let (get_p4 : 'tags this -> DOMPoint.t) =
      fun (x9776 : 'tags this) ->
        DOMPoint.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9776) "p4")
    let (getBounds : 'tags this -> DOMRect.t) =
      fun (x9778 : 'tags this) ->
        DOMRect.t_of_js
          (Ojs.call (this_to_js Obj.magic x9778) "getBounds" [||])
    let (toJSON : 'tags this -> any) =
      fun (x9780 : 'tags this) ->
        any_of_js (Ojs.call (this_to_js Obj.magic x9780) "toJSON" [||])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DOMQuad")
             "prototype")
    let (create :
      ?p1:DOMPointInit.t ->
        ?p2:DOMPointInit.t ->
          ?p3:DOMPointInit.t -> ?p4:DOMPointInit.t -> unit -> t)
      =
      fun ?p1:(x9782 : DOMPointInit.t option) ->
        fun ?p2:(x9783 : DOMPointInit.t option) ->
          fun ?p3:(x9784 : DOMPointInit.t option) ->
            fun ?p4:(x9785 : DOMPointInit.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "DOMQuad")
                     (let x9786 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x9782 with
                       | Some x9790 ->
                           ignore
                             (Ojs.call x9786 "push"
                                [|(DOMPointInit.t_to_js x9790)|])
                       | None -> ());
                      (match x9783 with
                       | Some x9789 ->
                           ignore
                             (Ojs.call x9786 "push"
                                [|(DOMPointInit.t_to_js x9789)|])
                       | None -> ());
                      (match x9784 with
                       | Some x9788 ->
                           ignore
                             (Ojs.call x9786 "push"
                                [|(DOMPointInit.t_to_js x9788)|])
                       | None -> ());
                      (match x9785 with
                       | Some x9787 ->
                           ignore
                             (Ojs.call x9786 "push"
                                [|(DOMPointInit.t_to_js x9787)|])
                       | None -> ());
                      x9786))
    let (fromQuad : ?other:DOMQuadInit.t -> unit -> t) =
      fun ?other:(x9791 : DOMQuadInit.t option) ->
        fun () ->
          t_of_js
            (let x9794 = Ojs.get_prop_ascii Ojs.global "DOMQuad" in
             Ojs.call (Ojs.get_prop_ascii x9794 "fromQuad") "apply"
               [|x9794;((let x9792 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         (match x9791 with
                          | Some x9793 ->
                              ignore
                                (Ojs.call x9792 "push"
                                   [|(DOMQuadInit.t_to_js x9793)|])
                          | None -> ());
                         x9792))|])
    let (fromRect : ?other:DOMRectInit.t -> unit -> t) =
      fun ?other:(x9795 : DOMRectInit.t option) ->
        fun () ->
          t_of_js
            (let x9798 = Ojs.get_prop_ascii Ojs.global "DOMQuad" in
             Ojs.call (Ojs.get_prop_ascii x9798 "fromRect") "apply"
               [|x9798;((let x9796 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         (match x9795 with
                          | Some x9797 ->
                              ignore
                                (Ojs.call x9796 "push"
                                   [|(DOMRectInit.t_to_js x9797)|])
                          | None -> ());
                         x9796))|])
  end
module AnonymousInterface22 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x9800 : Ojs.t) -> x9800
    and t_to_js : t -> Ojs.t = fun (x9799 : Ojs.t) -> x9799
    let (get_prototype : t -> DOMQuad.t) =
      fun (x9801 : t) ->
        DOMQuad.t_of_js (Ojs.get_prop_ascii (t_to_js x9801) "prototype")
    let (set_prototype : t -> DOMQuad.t -> unit) =
      fun (x9802 : t) ->
        fun (x9803 : DOMQuad.t) ->
          Ojs.set_prop_ascii (t_to_js x9802) "prototype"
            (DOMQuad.t_to_js x9803)
    let (create :
      t ->
        ?p1:DOMPointInit.t ->
          ?p2:DOMPointInit.t ->
            ?p3:DOMPointInit.t -> ?p4:DOMPointInit.t -> unit -> DOMQuad.t)
      =
      fun (x9813 : t) ->
        fun ?p1:(x9804 : DOMPointInit.t option) ->
          fun ?p2:(x9805 : DOMPointInit.t option) ->
            fun ?p3:(x9806 : DOMPointInit.t option) ->
              fun ?p4:(x9807 : DOMPointInit.t option) ->
                fun () ->
                  DOMQuad.t_of_js
                    (Ojs.new_obj_arr (t_to_js x9813)
                       (let x9808 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        (match x9804 with
                         | Some x9812 ->
                             ignore
                               (Ojs.call x9808 "push"
                                  [|(DOMPointInit.t_to_js x9812)|])
                         | None -> ());
                        (match x9805 with
                         | Some x9811 ->
                             ignore
                               (Ojs.call x9808 "push"
                                  [|(DOMPointInit.t_to_js x9811)|])
                         | None -> ());
                        (match x9806 with
                         | Some x9810 ->
                             ignore
                               (Ojs.call x9808 "push"
                                  [|(DOMPointInit.t_to_js x9810)|])
                         | None -> ());
                        (match x9807 with
                         | Some x9809 ->
                             ignore
                               (Ojs.call x9808 "push"
                                  [|(DOMPointInit.t_to_js x9809)|])
                         | None -> ());
                        x9808))
    let (fromQuad : t -> ?other:DOMQuadInit.t -> unit -> DOMQuad.t) =
      fun (x9817 : t) ->
        fun ?other:(x9814 : DOMQuadInit.t option) ->
          fun () ->
            DOMQuad.t_of_js
              (let x9818 = t_to_js x9817 in
               Ojs.call (Ojs.get_prop_ascii x9818 "fromQuad") "apply"
                 [|x9818;((let x9815 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9814 with
                            | Some x9816 ->
                                ignore
                                  (Ojs.call x9815 "push"
                                     [|(DOMQuadInit.t_to_js x9816)|])
                            | None -> ());
                           x9815))|])
    let (fromRect : t -> ?other:DOMRectInit.t -> unit -> DOMQuad.t) =
      fun (x9822 : t) ->
        fun ?other:(x9819 : DOMRectInit.t option) ->
          fun () ->
            DOMQuad.t_of_js
              (let x9823 = t_to_js x9822 in
               Ojs.call (Ojs.get_prop_ascii x9823 "fromRect") "apply"
                 [|x9823;((let x9820 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9819 with
                            | Some x9821 ->
                                ignore
                                  (Ojs.call x9820 "push"
                                     [|(DOMRectInit.t_to_js x9821)|])
                            | None -> ());
                           x9820))|])
  end
module AnonymousInterface21 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x9825 : Ojs.t) -> x9825
    and t_to_js : t -> Ojs.t = fun (x9824 : Ojs.t) -> x9824
    let (get_prototype : t -> DOMPointReadOnly.t) =
      fun (x9826 : t) ->
        DOMPointReadOnly.t_of_js
          (Ojs.get_prop_ascii (t_to_js x9826) "prototype")
    let (set_prototype : t -> DOMPointReadOnly.t -> unit) =
      fun (x9827 : t) ->
        fun (x9828 : DOMPointReadOnly.t) ->
          Ojs.set_prop_ascii (t_to_js x9827) "prototype"
            (DOMPointReadOnly.t_to_js x9828)
    let (create :
      t ->
        ?x:float ->
          ?y:float -> ?z:float -> ?w:float -> unit -> DOMPointReadOnly.t)
      =
      fun (x9838 : t) ->
        fun ?x:(x9829 : float option) ->
          fun ?y:(x9830 : float option) ->
            fun ?z:(x9831 : float option) ->
              fun ?w:(x9832 : float option) ->
                fun () ->
                  DOMPointReadOnly.t_of_js
                    (Ojs.new_obj_arr (t_to_js x9838)
                       (let x9833 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        (match x9829 with
                         | Some x9837 ->
                             ignore
                               (Ojs.call x9833 "push"
                                  [|(Ojs.float_to_js x9837)|])
                         | None -> ());
                        (match x9830 with
                         | Some x9836 ->
                             ignore
                               (Ojs.call x9833 "push"
                                  [|(Ojs.float_to_js x9836)|])
                         | None -> ());
                        (match x9831 with
                         | Some x9835 ->
                             ignore
                               (Ojs.call x9833 "push"
                                  [|(Ojs.float_to_js x9835)|])
                         | None -> ());
                        (match x9832 with
                         | Some x9834 ->
                             ignore
                               (Ojs.call x9833 "push"
                                  [|(Ojs.float_to_js x9834)|])
                         | None -> ());
                        x9833))
    let (fromPoint :
      t -> ?other:DOMPointInit.t -> unit -> DOMPointReadOnly.t) =
      fun (x9842 : t) ->
        fun ?other:(x9839 : DOMPointInit.t option) ->
          fun () ->
            DOMPointReadOnly.t_of_js
              (let x9843 = t_to_js x9842 in
               Ojs.call (Ojs.get_prop_ascii x9843 "fromPoint") "apply"
                 [|x9843;((let x9840 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9839 with
                            | Some x9841 ->
                                ignore
                                  (Ojs.call x9840 "push"
                                     [|(DOMPointInit.t_to_js x9841)|])
                            | None -> ());
                           x9840))|])
  end
module AnonymousInterface20 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x9845 : Ojs.t) -> x9845
    and t_to_js : t -> Ojs.t = fun (x9844 : Ojs.t) -> x9844
    let (get_prototype : t -> DOMPoint.t) =
      fun (x9846 : t) ->
        DOMPoint.t_of_js (Ojs.get_prop_ascii (t_to_js x9846) "prototype")
    let (set_prototype : t -> DOMPoint.t -> unit) =
      fun (x9847 : t) ->
        fun (x9848 : DOMPoint.t) ->
          Ojs.set_prop_ascii (t_to_js x9847) "prototype"
            (DOMPoint.t_to_js x9848)
    let (create :
      t -> ?x:float -> ?y:float -> ?z:float -> ?w:float -> unit -> DOMPoint.t)
      =
      fun (x9858 : t) ->
        fun ?x:(x9849 : float option) ->
          fun ?y:(x9850 : float option) ->
            fun ?z:(x9851 : float option) ->
              fun ?w:(x9852 : float option) ->
                fun () ->
                  DOMPoint.t_of_js
                    (Ojs.new_obj_arr (t_to_js x9858)
                       (let x9853 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        (match x9849 with
                         | Some x9857 ->
                             ignore
                               (Ojs.call x9853 "push"
                                  [|(Ojs.float_to_js x9857)|])
                         | None -> ());
                        (match x9850 with
                         | Some x9856 ->
                             ignore
                               (Ojs.call x9853 "push"
                                  [|(Ojs.float_to_js x9856)|])
                         | None -> ());
                        (match x9851 with
                         | Some x9855 ->
                             ignore
                               (Ojs.call x9853 "push"
                                  [|(Ojs.float_to_js x9855)|])
                         | None -> ());
                        (match x9852 with
                         | Some x9854 ->
                             ignore
                               (Ojs.call x9853 "push"
                                  [|(Ojs.float_to_js x9854)|])
                         | None -> ());
                        x9853))
    let (fromPoint : t -> ?other:DOMPointInit.t -> unit -> DOMPoint.t) =
      fun (x9862 : t) ->
        fun ?other:(x9859 : DOMPointInit.t option) ->
          fun () ->
            DOMPoint.t_of_js
              (let x9863 = t_to_js x9862 in
               Ojs.call (Ojs.get_prop_ascii x9863 "fromPoint") "apply"
                 [|x9863;((let x9860 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9859 with
                            | Some x9861 ->
                                ignore
                                  (Ojs.call x9860 "push"
                                     [|(DOMPointInit.t_to_js x9861)|])
                            | None -> ());
                           x9860))|])
  end
module AnonymousInterface2 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x9865 : Ojs.t) -> x9865
    and t_to_js : t -> Ojs.t = fun (x9864 : Ojs.t) -> x9864
    let (get_prototype : t -> Blob.t) =
      fun (x9866 : t) ->
        Blob.t_of_js (Ojs.get_prop_ascii (t_to_js x9866) "prototype")
    let (set_prototype : t -> Blob.t -> unit) =
      fun (x9867 : t) ->
        fun (x9868 : Blob.t) ->
          Ojs.set_prop_ascii (t_to_js x9867) "prototype" (Blob.t_to_js x9868)
    let (create :
      t ->
        ?blobParts:BlobPart.t list ->
          ?options:BlobPropertyBag.t -> unit -> Blob.t)
      =
      fun (x9875 : t) ->
        fun ?blobParts:(x9869 : BlobPart.t list option) ->
          fun ?options:(x9870 : BlobPropertyBag.t option) ->
            fun () ->
              Blob.t_of_js
                (Ojs.new_obj_arr (t_to_js x9875)
                   (let x9871 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    (match x9869 with
                     | Some x9873 ->
                         ignore
                           (Ojs.call x9871 "push"
                              [|(Ojs.list_to_js BlobPart.t_to_js x9873)|])
                     | None -> ());
                    (match x9870 with
                     | Some x9872 ->
                         ignore
                           (Ojs.call x9871 "push"
                              [|(BlobPropertyBag.t_to_js x9872)|])
                     | None -> ());
                    x9871))
  end
module rec
  DOMMatrix:sig
              type t = [ `DOMMatrix  | `DOMMatrixReadOnly ] intf
              type t_0 = t
              [@@@js.stop ]
              type tags = [ `DOMMatrix  | `DOMMatrixReadOnly ]
              type tags_0 = tags
              [@@@js.start ]
              [@@@js.implem
                type tags = [ `DOMMatrix  | `DOMMatrixReadOnly ]
                type tags_0 = tags]
              type 'tags this = 'tags intf constraint 'tags = [> `DOMMatrix ]
              val t_to_js : t -> Ojs.t
              val t_of_js : Ojs.t -> t
              val t_0_to_js : t_0 -> Ojs.t
              val t_0_of_js : Ojs.t -> t_0
              val get_a : 'tags this -> float
              val set_a : 'tags this -> float -> unit
              val get_b : 'tags this -> float
              val set_b : 'tags this -> float -> unit
              val get_c : 'tags this -> float
              val set_c : 'tags this -> float -> unit
              val get_d : 'tags this -> float
              val set_d : 'tags this -> float -> unit
              val get_e : 'tags this -> float
              val set_e : 'tags this -> float -> unit
              val get_f : 'tags this -> float
              val set_f : 'tags this -> float -> unit
              val get_m11 : 'tags this -> float
              val set_m11 : 'tags this -> float -> unit
              val get_m12 : 'tags this -> float
              val set_m12 : 'tags this -> float -> unit
              val get_m13 : 'tags this -> float
              val set_m13 : 'tags this -> float -> unit
              val get_m14 : 'tags this -> float
              val set_m14 : 'tags this -> float -> unit
              val get_m21 : 'tags this -> float
              val set_m21 : 'tags this -> float -> unit
              val get_m22 : 'tags this -> float
              val set_m22 : 'tags this -> float -> unit
              val get_m23 : 'tags this -> float
              val set_m23 : 'tags this -> float -> unit
              val get_m24 : 'tags this -> float
              val set_m24 : 'tags this -> float -> unit
              val get_m31 : 'tags this -> float
              val set_m31 : 'tags this -> float -> unit
              val get_m32 : 'tags this -> float
              val set_m32 : 'tags this -> float -> unit
              val get_m33 : 'tags this -> float
              val set_m33 : 'tags this -> float -> unit
              val get_m34 : 'tags this -> float
              val set_m34 : 'tags this -> float -> unit
              val get_m41 : 'tags this -> float
              val set_m41 : 'tags this -> float -> unit
              val get_m42 : 'tags this -> float
              val set_m42 : 'tags this -> float -> unit
              val get_m43 : 'tags this -> float
              val set_m43 : 'tags this -> float -> unit
              val get_m44 : 'tags this -> float
              val set_m44 : 'tags this -> float -> unit
              val invertSelf : 'tags this -> t
              val multiplySelf :
                'tags this -> ?other:DOMMatrixInit.t -> unit -> t
              val preMultiplySelf :
                'tags this -> ?other:DOMMatrixInit.t -> unit -> t
              val rotateAxisAngleSelf :
                'tags this ->
                  ?x:float ->
                    ?y:float -> ?z:float -> ?angle:float -> unit -> t
              val rotateFromVectorSelf :
                'tags this -> ?x:float -> ?y:float -> unit -> t
              val rotateSelf :
                'tags this ->
                  ?rotX:float -> ?rotY:float -> ?rotZ:float -> unit -> t
              val scale3dSelf :
                'tags this ->
                  ?scale:float ->
                    ?originX:float ->
                      ?originY:float -> ?originZ:float -> unit -> t
              val scaleSelf :
                'tags this ->
                  ?scaleX:float ->
                    ?scaleY:float ->
                      ?scaleZ:float ->
                        ?originX:float ->
                          ?originY:float -> ?originZ:float -> unit -> t
              val skewXSelf : 'tags this -> ?sx:float -> unit -> t
              val skewYSelf : 'tags this -> ?sy:float -> unit -> t
              val translateSelf :
                'tags this ->
                  ?tx:float -> ?ty:float -> ?tz:float -> unit -> t
              val cast_from : 'tags this -> t
              val prototype : unit -> t
              val create : ?init:float list or_string -> unit -> t
              val fromFloat32Array : Float32Array.t_0 -> t
              val fromFloat64Array : Float64Array.t_0 -> t
              val fromMatrix : ?other:DOMMatrixInit.t -> unit -> t
            end =
  struct
    type t = [ `DOMMatrix  | `DOMMatrixReadOnly ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9877 : Ojs.t) -> t_of_js x9877
    and t_0_to_js : t_0 -> Ojs.t = fun (x9876 : t) -> t_to_js x9876
    type tags = [ `DOMMatrix  | `DOMMatrixReadOnly ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `DOMMatrix ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x9880 : Ojs.t) -> intf_of_js __tags_of_js x9880
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x9878 : __tags intf) -> intf_to_js __tags_to_js x9878
    let (get_a : 'tags this -> float) =
      fun (x9882 : 'tags this) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x9882) "a")
    let (set_a : 'tags this -> float -> unit) =
      fun (x9884 : 'tags this) ->
        fun (x9885 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9884) "a"
            (Ojs.float_to_js x9885)
    let (get_b : 'tags this -> float) =
      fun (x9887 : 'tags this) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x9887) "b")
    let (set_b : 'tags this -> float -> unit) =
      fun (x9889 : 'tags this) ->
        fun (x9890 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9889) "b"
            (Ojs.float_to_js x9890)
    let (get_c : 'tags this -> float) =
      fun (x9892 : 'tags this) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x9892) "c")
    let (set_c : 'tags this -> float -> unit) =
      fun (x9894 : 'tags this) ->
        fun (x9895 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9894) "c"
            (Ojs.float_to_js x9895)
    let (get_d : 'tags this -> float) =
      fun (x9897 : 'tags this) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x9897) "d")
    let (set_d : 'tags this -> float -> unit) =
      fun (x9899 : 'tags this) ->
        fun (x9900 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9899) "d"
            (Ojs.float_to_js x9900)
    let (get_e : 'tags this -> float) =
      fun (x9902 : 'tags this) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x9902) "e")
    let (set_e : 'tags this -> float -> unit) =
      fun (x9904 : 'tags this) ->
        fun (x9905 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9904) "e"
            (Ojs.float_to_js x9905)
    let (get_f : 'tags this -> float) =
      fun (x9907 : 'tags this) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x9907) "f")
    let (set_f : 'tags this -> float -> unit) =
      fun (x9909 : 'tags this) ->
        fun (x9910 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9909) "f"
            (Ojs.float_to_js x9910)
    let (get_m11 : 'tags this -> float) =
      fun (x9912 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9912) "m11")
    let (set_m11 : 'tags this -> float -> unit) =
      fun (x9914 : 'tags this) ->
        fun (x9915 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9914) "m11"
            (Ojs.float_to_js x9915)
    let (get_m12 : 'tags this -> float) =
      fun (x9917 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9917) "m12")
    let (set_m12 : 'tags this -> float -> unit) =
      fun (x9919 : 'tags this) ->
        fun (x9920 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9919) "m12"
            (Ojs.float_to_js x9920)
    let (get_m13 : 'tags this -> float) =
      fun (x9922 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9922) "m13")
    let (set_m13 : 'tags this -> float -> unit) =
      fun (x9924 : 'tags this) ->
        fun (x9925 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9924) "m13"
            (Ojs.float_to_js x9925)
    let (get_m14 : 'tags this -> float) =
      fun (x9927 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9927) "m14")
    let (set_m14 : 'tags this -> float -> unit) =
      fun (x9929 : 'tags this) ->
        fun (x9930 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9929) "m14"
            (Ojs.float_to_js x9930)
    let (get_m21 : 'tags this -> float) =
      fun (x9932 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9932) "m21")
    let (set_m21 : 'tags this -> float -> unit) =
      fun (x9934 : 'tags this) ->
        fun (x9935 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9934) "m21"
            (Ojs.float_to_js x9935)
    let (get_m22 : 'tags this -> float) =
      fun (x9937 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9937) "m22")
    let (set_m22 : 'tags this -> float -> unit) =
      fun (x9939 : 'tags this) ->
        fun (x9940 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9939) "m22"
            (Ojs.float_to_js x9940)
    let (get_m23 : 'tags this -> float) =
      fun (x9942 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9942) "m23")
    let (set_m23 : 'tags this -> float -> unit) =
      fun (x9944 : 'tags this) ->
        fun (x9945 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9944) "m23"
            (Ojs.float_to_js x9945)
    let (get_m24 : 'tags this -> float) =
      fun (x9947 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9947) "m24")
    let (set_m24 : 'tags this -> float -> unit) =
      fun (x9949 : 'tags this) ->
        fun (x9950 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9949) "m24"
            (Ojs.float_to_js x9950)
    let (get_m31 : 'tags this -> float) =
      fun (x9952 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9952) "m31")
    let (set_m31 : 'tags this -> float -> unit) =
      fun (x9954 : 'tags this) ->
        fun (x9955 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9954) "m31"
            (Ojs.float_to_js x9955)
    let (get_m32 : 'tags this -> float) =
      fun (x9957 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9957) "m32")
    let (set_m32 : 'tags this -> float -> unit) =
      fun (x9959 : 'tags this) ->
        fun (x9960 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9959) "m32"
            (Ojs.float_to_js x9960)
    let (get_m33 : 'tags this -> float) =
      fun (x9962 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9962) "m33")
    let (set_m33 : 'tags this -> float -> unit) =
      fun (x9964 : 'tags this) ->
        fun (x9965 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9964) "m33"
            (Ojs.float_to_js x9965)
    let (get_m34 : 'tags this -> float) =
      fun (x9967 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9967) "m34")
    let (set_m34 : 'tags this -> float -> unit) =
      fun (x9969 : 'tags this) ->
        fun (x9970 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9969) "m34"
            (Ojs.float_to_js x9970)
    let (get_m41 : 'tags this -> float) =
      fun (x9972 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9972) "m41")
    let (set_m41 : 'tags this -> float -> unit) =
      fun (x9974 : 'tags this) ->
        fun (x9975 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9974) "m41"
            (Ojs.float_to_js x9975)
    let (get_m42 : 'tags this -> float) =
      fun (x9977 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9977) "m42")
    let (set_m42 : 'tags this -> float -> unit) =
      fun (x9979 : 'tags this) ->
        fun (x9980 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9979) "m42"
            (Ojs.float_to_js x9980)
    let (get_m43 : 'tags this -> float) =
      fun (x9982 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9982) "m43")
    let (set_m43 : 'tags this -> float -> unit) =
      fun (x9984 : 'tags this) ->
        fun (x9985 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9984) "m43"
            (Ojs.float_to_js x9985)
    let (get_m44 : 'tags this -> float) =
      fun (x9987 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9987) "m44")
    let (set_m44 : 'tags this -> float -> unit) =
      fun (x9989 : 'tags this) ->
        fun (x9990 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9989) "m44"
            (Ojs.float_to_js x9990)
    let (invertSelf : 'tags this -> t) =
      fun (x9992 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x9992) "invertSelf" [||])
    let (multiplySelf : 'tags this -> ?other:DOMMatrixInit.t -> unit -> t) =
      fun (x9997 : 'tags this) ->
        fun ?other:(x9994 : DOMMatrixInit.t option) ->
          fun () ->
            t_of_js
              (let x9999 = this_to_js Obj.magic x9997 in
               Ojs.call (Ojs.get_prop_ascii x9999 "multiplySelf") "apply"
                 [|x9999;((let x9995 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9994 with
                            | Some x9996 ->
                                ignore
                                  (Ojs.call x9995 "push"
                                     [|(DOMMatrixInit.t_to_js x9996)|])
                            | None -> ());
                           x9995))|])
    let (preMultiplySelf : 'tags this -> ?other:DOMMatrixInit.t -> unit -> t)
      =
      fun (x10003 : 'tags this) ->
        fun ?other:(x10000 : DOMMatrixInit.t option) ->
          fun () ->
            t_of_js
              (let x10005 = this_to_js Obj.magic x10003 in
               Ojs.call (Ojs.get_prop_ascii x10005 "preMultiplySelf") "apply"
                 [|x10005;((let x10001 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10000 with
                             | Some x10002 ->
                                 ignore
                                   (Ojs.call x10001 "push"
                                      [|(DOMMatrixInit.t_to_js x10002)|])
                             | None -> ());
                            x10001))|])
    let (rotateAxisAngleSelf :
      'tags this ->
        ?x:float -> ?y:float -> ?z:float -> ?angle:float -> unit -> t)
      =
      fun (x10015 : 'tags this) ->
        fun ?x:(x10006 : float option) ->
          fun ?y:(x10007 : float option) ->
            fun ?z:(x10008 : float option) ->
              fun ?angle:(x10009 : float option) ->
                fun () ->
                  t_of_js
                    (let x10017 = this_to_js Obj.magic x10015 in
                     Ojs.call
                       (Ojs.get_prop_ascii x10017 "rotateAxisAngleSelf")
                       "apply"
                       [|x10017;((let x10010 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x10006 with
                                   | Some x10014 ->
                                       ignore
                                         (Ojs.call x10010 "push"
                                            [|(Ojs.float_to_js x10014)|])
                                   | None -> ());
                                  (match x10007 with
                                   | Some x10013 ->
                                       ignore
                                         (Ojs.call x10010 "push"
                                            [|(Ojs.float_to_js x10013)|])
                                   | None -> ());
                                  (match x10008 with
                                   | Some x10012 ->
                                       ignore
                                         (Ojs.call x10010 "push"
                                            [|(Ojs.float_to_js x10012)|])
                                   | None -> ());
                                  (match x10009 with
                                   | Some x10011 ->
                                       ignore
                                         (Ojs.call x10010 "push"
                                            [|(Ojs.float_to_js x10011)|])
                                   | None -> ());
                                  x10010))|])
    let (rotateFromVectorSelf :
      'tags this -> ?x:float -> ?y:float -> unit -> t) =
      fun (x10023 : 'tags this) ->
        fun ?x:(x10018 : float option) ->
          fun ?y:(x10019 : float option) ->
            fun () ->
              t_of_js
                (let x10025 = this_to_js Obj.magic x10023 in
                 Ojs.call (Ojs.get_prop_ascii x10025 "rotateFromVectorSelf")
                   "apply"
                   [|x10025;((let x10020 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x10018 with
                               | Some x10022 ->
                                   ignore
                                     (Ojs.call x10020 "push"
                                        [|(Ojs.float_to_js x10022)|])
                               | None -> ());
                              (match x10019 with
                               | Some x10021 ->
                                   ignore
                                     (Ojs.call x10020 "push"
                                        [|(Ojs.float_to_js x10021)|])
                               | None -> ());
                              x10020))|])
    let (rotateSelf :
      'tags this -> ?rotX:float -> ?rotY:float -> ?rotZ:float -> unit -> t) =
      fun (x10033 : 'tags this) ->
        fun ?rotX:(x10026 : float option) ->
          fun ?rotY:(x10027 : float option) ->
            fun ?rotZ:(x10028 : float option) ->
              fun () ->
                t_of_js
                  (let x10035 = this_to_js Obj.magic x10033 in
                   Ojs.call (Ojs.get_prop_ascii x10035 "rotateSelf") "apply"
                     [|x10035;((let x10029 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                (match x10026 with
                                 | Some x10032 ->
                                     ignore
                                       (Ojs.call x10029 "push"
                                          [|(Ojs.float_to_js x10032)|])
                                 | None -> ());
                                (match x10027 with
                                 | Some x10031 ->
                                     ignore
                                       (Ojs.call x10029 "push"
                                          [|(Ojs.float_to_js x10031)|])
                                 | None -> ());
                                (match x10028 with
                                 | Some x10030 ->
                                     ignore
                                       (Ojs.call x10029 "push"
                                          [|(Ojs.float_to_js x10030)|])
                                 | None -> ());
                                x10029))|])
    let (scale3dSelf :
      'tags this ->
        ?scale:float ->
          ?originX:float -> ?originY:float -> ?originZ:float -> unit -> t)
      =
      fun (x10045 : 'tags this) ->
        fun ?scale:(x10036 : float option) ->
          fun ?originX:(x10037 : float option) ->
            fun ?originY:(x10038 : float option) ->
              fun ?originZ:(x10039 : float option) ->
                fun () ->
                  t_of_js
                    (let x10047 = this_to_js Obj.magic x10045 in
                     Ojs.call (Ojs.get_prop_ascii x10047 "scale3dSelf")
                       "apply"
                       [|x10047;((let x10040 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x10036 with
                                   | Some x10044 ->
                                       ignore
                                         (Ojs.call x10040 "push"
                                            [|(Ojs.float_to_js x10044)|])
                                   | None -> ());
                                  (match x10037 with
                                   | Some x10043 ->
                                       ignore
                                         (Ojs.call x10040 "push"
                                            [|(Ojs.float_to_js x10043)|])
                                   | None -> ());
                                  (match x10038 with
                                   | Some x10042 ->
                                       ignore
                                         (Ojs.call x10040 "push"
                                            [|(Ojs.float_to_js x10042)|])
                                   | None -> ());
                                  (match x10039 with
                                   | Some x10041 ->
                                       ignore
                                         (Ojs.call x10040 "push"
                                            [|(Ojs.float_to_js x10041)|])
                                   | None -> ());
                                  x10040))|])
    let (scaleSelf :
      'tags this ->
        ?scaleX:float ->
          ?scaleY:float ->
            ?scaleZ:float ->
              ?originX:float -> ?originY:float -> ?originZ:float -> unit -> t)
      =
      fun (x10061 : 'tags this) ->
        fun ?scaleX:(x10048 : float option) ->
          fun ?scaleY:(x10049 : float option) ->
            fun ?scaleZ:(x10050 : float option) ->
              fun ?originX:(x10051 : float option) ->
                fun ?originY:(x10052 : float option) ->
                  fun ?originZ:(x10053 : float option) ->
                    fun () ->
                      t_of_js
                        (let x10063 = this_to_js Obj.magic x10061 in
                         Ojs.call (Ojs.get_prop_ascii x10063 "scaleSelf")
                           "apply"
                           [|x10063;((let x10054 =
                                        Ojs.new_obj
                                          (Ojs.get_prop_ascii Ojs.global
                                             "Array") [||] in
                                      (match x10048 with
                                       | Some x10060 ->
                                           ignore
                                             (Ojs.call x10054 "push"
                                                [|(Ojs.float_to_js x10060)|])
                                       | None -> ());
                                      (match x10049 with
                                       | Some x10059 ->
                                           ignore
                                             (Ojs.call x10054 "push"
                                                [|(Ojs.float_to_js x10059)|])
                                       | None -> ());
                                      (match x10050 with
                                       | Some x10058 ->
                                           ignore
                                             (Ojs.call x10054 "push"
                                                [|(Ojs.float_to_js x10058)|])
                                       | None -> ());
                                      (match x10051 with
                                       | Some x10057 ->
                                           ignore
                                             (Ojs.call x10054 "push"
                                                [|(Ojs.float_to_js x10057)|])
                                       | None -> ());
                                      (match x10052 with
                                       | Some x10056 ->
                                           ignore
                                             (Ojs.call x10054 "push"
                                                [|(Ojs.float_to_js x10056)|])
                                       | None -> ());
                                      (match x10053 with
                                       | Some x10055 ->
                                           ignore
                                             (Ojs.call x10054 "push"
                                                [|(Ojs.float_to_js x10055)|])
                                       | None -> ());
                                      x10054))|])
    let (skewXSelf : 'tags this -> ?sx:float -> unit -> t) =
      fun (x10067 : 'tags this) ->
        fun ?sx:(x10064 : float option) ->
          fun () ->
            t_of_js
              (let x10069 = this_to_js Obj.magic x10067 in
               Ojs.call (Ojs.get_prop_ascii x10069 "skewXSelf") "apply"
                 [|x10069;((let x10065 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10064 with
                             | Some x10066 ->
                                 ignore
                                   (Ojs.call x10065 "push"
                                      [|(Ojs.float_to_js x10066)|])
                             | None -> ());
                            x10065))|])
    let (skewYSelf : 'tags this -> ?sy:float -> unit -> t) =
      fun (x10073 : 'tags this) ->
        fun ?sy:(x10070 : float option) ->
          fun () ->
            t_of_js
              (let x10075 = this_to_js Obj.magic x10073 in
               Ojs.call (Ojs.get_prop_ascii x10075 "skewYSelf") "apply"
                 [|x10075;((let x10071 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10070 with
                             | Some x10072 ->
                                 ignore
                                   (Ojs.call x10071 "push"
                                      [|(Ojs.float_to_js x10072)|])
                             | None -> ());
                            x10071))|])
    let (translateSelf :
      'tags this -> ?tx:float -> ?ty:float -> ?tz:float -> unit -> t) =
      fun (x10083 : 'tags this) ->
        fun ?tx:(x10076 : float option) ->
          fun ?ty:(x10077 : float option) ->
            fun ?tz:(x10078 : float option) ->
              fun () ->
                t_of_js
                  (let x10085 = this_to_js Obj.magic x10083 in
                   Ojs.call (Ojs.get_prop_ascii x10085 "translateSelf")
                     "apply"
                     [|x10085;((let x10079 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                (match x10076 with
                                 | Some x10082 ->
                                     ignore
                                       (Ojs.call x10079 "push"
                                          [|(Ojs.float_to_js x10082)|])
                                 | None -> ());
                                (match x10077 with
                                 | Some x10081 ->
                                     ignore
                                       (Ojs.call x10079 "push"
                                          [|(Ojs.float_to_js x10081)|])
                                 | None -> ());
                                (match x10078 with
                                 | Some x10080 ->
                                     ignore
                                       (Ojs.call x10079 "push"
                                          [|(Ojs.float_to_js x10080)|])
                                 | None -> ());
                                x10079))|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DOMMatrix")
             "prototype")
    let (create : ?init:float list or_string -> unit -> t) =
      fun ?init:(x10086 : float list or_string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "DOMMatrix")
               (let x10087 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10086 with
                 | Some x10088 ->
                     ignore
                       (Ojs.call x10087 "push"
                          [|(or_string_to_js
                               (fun (x10089 : float list) ->
                                  Ojs.list_to_js Ojs.float_to_js x10089)
                               x10088)|])
                 | None -> ());
                x10087))
    let (fromFloat32Array : Float32Array.t_0 -> t) =
      fun (x10091 : Float32Array.t_0) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "DOMMatrix")
             "fromFloat32Array" [|(Float32Array.t_0_to_js x10091)|])
    let (fromFloat64Array : Float64Array.t_0 -> t) =
      fun (x10092 : Float64Array.t_0) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "DOMMatrix")
             "fromFloat64Array" [|(Float64Array.t_0_to_js x10092)|])
    let (fromMatrix : ?other:DOMMatrixInit.t -> unit -> t) =
      fun ?other:(x10093 : DOMMatrixInit.t option) ->
        fun () ->
          t_of_js
            (let x10096 = Ojs.get_prop_ascii Ojs.global "DOMMatrix" in
             Ojs.call (Ojs.get_prop_ascii x10096 "fromMatrix") "apply"
               [|x10096;((let x10094 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x10093 with
                           | Some x10095 ->
                               ignore
                                 (Ojs.call x10094 "push"
                                    [|(DOMMatrixInit.t_to_js x10095)|])
                           | None -> ());
                          x10094))|])
  end
 and
  DOMMatrixReadOnly:sig
                      type t = [ `DOMMatrixReadOnly ] intf
                      type t_0 = t
                      [@@@js.stop ]
                      type tags = [ `DOMMatrixReadOnly ]
                      type tags_0 = tags
                      [@@@js.start ]
                      [@@@js.implem
                        type tags = [ `DOMMatrixReadOnly ]
                        type tags_0 = tags]
                      type 'tags this =
                        'tags intf constraint 'tags = [> `DOMMatrixReadOnly ]
                      val t_to_js : t -> Ojs.t
                      val t_of_js : Ojs.t -> t
                      val t_0_to_js : t_0 -> Ojs.t
                      val t_0_of_js : Ojs.t -> t_0
                      val get_a : 'tags this -> float
                      val get_b : 'tags this -> float
                      val get_c : 'tags this -> float
                      val get_d : 'tags this -> float
                      val get_e : 'tags this -> float
                      val get_f : 'tags this -> float
                      val get_is2D : 'tags this -> bool
                      val get_isIdentity : 'tags this -> bool
                      val get_m11 : 'tags this -> float
                      val get_m12 : 'tags this -> float
                      val get_m13 : 'tags this -> float
                      val get_m14 : 'tags this -> float
                      val get_m21 : 'tags this -> float
                      val get_m22 : 'tags this -> float
                      val get_m23 : 'tags this -> float
                      val get_m24 : 'tags this -> float
                      val get_m31 : 'tags this -> float
                      val get_m32 : 'tags this -> float
                      val get_m33 : 'tags this -> float
                      val get_m34 : 'tags this -> float
                      val get_m41 : 'tags this -> float
                      val get_m42 : 'tags this -> float
                      val get_m43 : 'tags this -> float
                      val get_m44 : 'tags this -> float
                      val flipX : 'tags this -> DOMMatrix.t
                      val flipY : 'tags this -> DOMMatrix.t
                      val inverse : 'tags this -> DOMMatrix.t
                      val multiply :
                        'tags this ->
                          ?other:DOMMatrixInit.t -> unit -> DOMMatrix.t
                      val rotate :
                        'tags this ->
                          ?rotX:float ->
                            ?rotY:float -> ?rotZ:float -> unit -> DOMMatrix.t
                      val rotateAxisAngle :
                        'tags this ->
                          ?x:float ->
                            ?y:float ->
                              ?z:float -> ?angle:float -> unit -> DOMMatrix.t
                      val rotateFromVector :
                        'tags this ->
                          ?x:float -> ?y:float -> unit -> DOMMatrix.t
                      val scale :
                        'tags this ->
                          ?scaleX:float ->
                            ?scaleY:float ->
                              ?scaleZ:float ->
                                ?originX:float ->
                                  ?originY:float ->
                                    ?originZ:float -> unit -> DOMMatrix.t
                      val scale3d :
                        'tags this ->
                          ?scale:float ->
                            ?originX:float ->
                              ?originY:float ->
                                ?originZ:float -> unit -> DOMMatrix.t
                      val scaleNonUniform :
                        'tags this ->
                          ?scaleX:float ->
                            ?scaleY:float -> unit -> DOMMatrix.t
                      val skewX :
                        'tags this -> ?sx:float -> unit -> DOMMatrix.t
                      val skewY :
                        'tags this -> ?sy:float -> unit -> DOMMatrix.t
                      val toFloat32Array : 'tags this -> Float32Array.t_0
                      val toFloat64Array : 'tags this -> Float64Array.t_0
                      val toJSON : 'tags this -> any
                      val transformPoint :
                        'tags this ->
                          ?point:DOMPointInit.t -> unit -> DOMPoint.t
                      val translate :
                        'tags this ->
                          ?tx:float ->
                            ?ty:float -> ?tz:float -> unit -> DOMMatrix.t
                      val cast_from : 'tags this -> t
                      val prototype : unit -> t
                      val create : ?init:float list or_string -> unit -> t
                      val fromFloat32Array : Float32Array.t_0 -> t
                      val fromFloat64Array : Float64Array.t_0 -> t
                      val fromMatrix : ?other:DOMMatrixInit.t -> unit -> t
                    end =
  struct
    type t = [ `DOMMatrixReadOnly ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x10098 : Ojs.t) -> t_of_js x10098
    and t_0_to_js : t_0 -> Ojs.t = fun (x10097 : t) -> t_to_js x10097
    type tags = [ `DOMMatrixReadOnly ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `DOMMatrixReadOnly ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x10101 : Ojs.t) -> intf_of_js __tags_of_js x10101
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x10099 : __tags intf) -> intf_to_js __tags_to_js x10099
    let (get_a : 'tags this -> float) =
      fun (x10103 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10103) "a")
    let (get_b : 'tags this -> float) =
      fun (x10105 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10105) "b")
    let (get_c : 'tags this -> float) =
      fun (x10107 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10107) "c")
    let (get_d : 'tags this -> float) =
      fun (x10109 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10109) "d")
    let (get_e : 'tags this -> float) =
      fun (x10111 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10111) "e")
    let (get_f : 'tags this -> float) =
      fun (x10113 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10113) "f")
    let (get_is2D : 'tags this -> bool) =
      fun (x10115 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10115) "is2D")
    let (get_isIdentity : 'tags this -> bool) =
      fun (x10117 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10117) "isIdentity")
    let (get_m11 : 'tags this -> float) =
      fun (x10119 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10119) "m11")
    let (get_m12 : 'tags this -> float) =
      fun (x10121 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10121) "m12")
    let (get_m13 : 'tags this -> float) =
      fun (x10123 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10123) "m13")
    let (get_m14 : 'tags this -> float) =
      fun (x10125 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10125) "m14")
    let (get_m21 : 'tags this -> float) =
      fun (x10127 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10127) "m21")
    let (get_m22 : 'tags this -> float) =
      fun (x10129 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10129) "m22")
    let (get_m23 : 'tags this -> float) =
      fun (x10131 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10131) "m23")
    let (get_m24 : 'tags this -> float) =
      fun (x10133 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10133) "m24")
    let (get_m31 : 'tags this -> float) =
      fun (x10135 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10135) "m31")
    let (get_m32 : 'tags this -> float) =
      fun (x10137 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10137) "m32")
    let (get_m33 : 'tags this -> float) =
      fun (x10139 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10139) "m33")
    let (get_m34 : 'tags this -> float) =
      fun (x10141 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10141) "m34")
    let (get_m41 : 'tags this -> float) =
      fun (x10143 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10143) "m41")
    let (get_m42 : 'tags this -> float) =
      fun (x10145 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10145) "m42")
    let (get_m43 : 'tags this -> float) =
      fun (x10147 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10147) "m43")
    let (get_m44 : 'tags this -> float) =
      fun (x10149 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10149) "m44")
    let (flipX : 'tags this -> DOMMatrix.t) =
      fun (x10151 : 'tags this) ->
        DOMMatrix.t_of_js
          (Ojs.call (this_to_js Obj.magic x10151) "flipX" [||])
    let (flipY : 'tags this -> DOMMatrix.t) =
      fun (x10153 : 'tags this) ->
        DOMMatrix.t_of_js
          (Ojs.call (this_to_js Obj.magic x10153) "flipY" [||])
    let (inverse : 'tags this -> DOMMatrix.t) =
      fun (x10155 : 'tags this) ->
        DOMMatrix.t_of_js
          (Ojs.call (this_to_js Obj.magic x10155) "inverse" [||])
    let (multiply :
      'tags this -> ?other:DOMMatrixInit.t -> unit -> DOMMatrix.t) =
      fun (x10160 : 'tags this) ->
        fun ?other:(x10157 : DOMMatrixInit.t option) ->
          fun () ->
            DOMMatrix.t_of_js
              (let x10162 = this_to_js Obj.magic x10160 in
               Ojs.call (Ojs.get_prop_ascii x10162 "multiply") "apply"
                 [|x10162;((let x10158 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10157 with
                             | Some x10159 ->
                                 ignore
                                   (Ojs.call x10158 "push"
                                      [|(DOMMatrixInit.t_to_js x10159)|])
                             | None -> ());
                            x10158))|])
    let (rotate :
      'tags this ->
        ?rotX:float -> ?rotY:float -> ?rotZ:float -> unit -> DOMMatrix.t)
      =
      fun (x10170 : 'tags this) ->
        fun ?rotX:(x10163 : float option) ->
          fun ?rotY:(x10164 : float option) ->
            fun ?rotZ:(x10165 : float option) ->
              fun () ->
                DOMMatrix.t_of_js
                  (let x10172 = this_to_js Obj.magic x10170 in
                   Ojs.call (Ojs.get_prop_ascii x10172 "rotate") "apply"
                     [|x10172;((let x10166 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                (match x10163 with
                                 | Some x10169 ->
                                     ignore
                                       (Ojs.call x10166 "push"
                                          [|(Ojs.float_to_js x10169)|])
                                 | None -> ());
                                (match x10164 with
                                 | Some x10168 ->
                                     ignore
                                       (Ojs.call x10166 "push"
                                          [|(Ojs.float_to_js x10168)|])
                                 | None -> ());
                                (match x10165 with
                                 | Some x10167 ->
                                     ignore
                                       (Ojs.call x10166 "push"
                                          [|(Ojs.float_to_js x10167)|])
                                 | None -> ());
                                x10166))|])
    let (rotateAxisAngle :
      'tags this ->
        ?x:float ->
          ?y:float -> ?z:float -> ?angle:float -> unit -> DOMMatrix.t)
      =
      fun (x10182 : 'tags this) ->
        fun ?x:(x10173 : float option) ->
          fun ?y:(x10174 : float option) ->
            fun ?z:(x10175 : float option) ->
              fun ?angle:(x10176 : float option) ->
                fun () ->
                  DOMMatrix.t_of_js
                    (let x10184 = this_to_js Obj.magic x10182 in
                     Ojs.call (Ojs.get_prop_ascii x10184 "rotateAxisAngle")
                       "apply"
                       [|x10184;((let x10177 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x10173 with
                                   | Some x10181 ->
                                       ignore
                                         (Ojs.call x10177 "push"
                                            [|(Ojs.float_to_js x10181)|])
                                   | None -> ());
                                  (match x10174 with
                                   | Some x10180 ->
                                       ignore
                                         (Ojs.call x10177 "push"
                                            [|(Ojs.float_to_js x10180)|])
                                   | None -> ());
                                  (match x10175 with
                                   | Some x10179 ->
                                       ignore
                                         (Ojs.call x10177 "push"
                                            [|(Ojs.float_to_js x10179)|])
                                   | None -> ());
                                  (match x10176 with
                                   | Some x10178 ->
                                       ignore
                                         (Ojs.call x10177 "push"
                                            [|(Ojs.float_to_js x10178)|])
                                   | None -> ());
                                  x10177))|])
    let (rotateFromVector :
      'tags this -> ?x:float -> ?y:float -> unit -> DOMMatrix.t) =
      fun (x10190 : 'tags this) ->
        fun ?x:(x10185 : float option) ->
          fun ?y:(x10186 : float option) ->
            fun () ->
              DOMMatrix.t_of_js
                (let x10192 = this_to_js Obj.magic x10190 in
                 Ojs.call (Ojs.get_prop_ascii x10192 "rotateFromVector")
                   "apply"
                   [|x10192;((let x10187 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x10185 with
                               | Some x10189 ->
                                   ignore
                                     (Ojs.call x10187 "push"
                                        [|(Ojs.float_to_js x10189)|])
                               | None -> ());
                              (match x10186 with
                               | Some x10188 ->
                                   ignore
                                     (Ojs.call x10187 "push"
                                        [|(Ojs.float_to_js x10188)|])
                               | None -> ());
                              x10187))|])
    let (scale :
      'tags this ->
        ?scaleX:float ->
          ?scaleY:float ->
            ?scaleZ:float ->
              ?originX:float ->
                ?originY:float -> ?originZ:float -> unit -> DOMMatrix.t)
      =
      fun (x10206 : 'tags this) ->
        fun ?scaleX:(x10193 : float option) ->
          fun ?scaleY:(x10194 : float option) ->
            fun ?scaleZ:(x10195 : float option) ->
              fun ?originX:(x10196 : float option) ->
                fun ?originY:(x10197 : float option) ->
                  fun ?originZ:(x10198 : float option) ->
                    fun () ->
                      DOMMatrix.t_of_js
                        (let x10208 = this_to_js Obj.magic x10206 in
                         Ojs.call (Ojs.get_prop_ascii x10208 "scale") "apply"
                           [|x10208;((let x10199 =
                                        Ojs.new_obj
                                          (Ojs.get_prop_ascii Ojs.global
                                             "Array") [||] in
                                      (match x10193 with
                                       | Some x10205 ->
                                           ignore
                                             (Ojs.call x10199 "push"
                                                [|(Ojs.float_to_js x10205)|])
                                       | None -> ());
                                      (match x10194 with
                                       | Some x10204 ->
                                           ignore
                                             (Ojs.call x10199 "push"
                                                [|(Ojs.float_to_js x10204)|])
                                       | None -> ());
                                      (match x10195 with
                                       | Some x10203 ->
                                           ignore
                                             (Ojs.call x10199 "push"
                                                [|(Ojs.float_to_js x10203)|])
                                       | None -> ());
                                      (match x10196 with
                                       | Some x10202 ->
                                           ignore
                                             (Ojs.call x10199 "push"
                                                [|(Ojs.float_to_js x10202)|])
                                       | None -> ());
                                      (match x10197 with
                                       | Some x10201 ->
                                           ignore
                                             (Ojs.call x10199 "push"
                                                [|(Ojs.float_to_js x10201)|])
                                       | None -> ());
                                      (match x10198 with
                                       | Some x10200 ->
                                           ignore
                                             (Ojs.call x10199 "push"
                                                [|(Ojs.float_to_js x10200)|])
                                       | None -> ());
                                      x10199))|])
    let (scale3d :
      'tags this ->
        ?scale:float ->
          ?originX:float ->
            ?originY:float -> ?originZ:float -> unit -> DOMMatrix.t)
      =
      fun (x10218 : 'tags this) ->
        fun ?scale:(x10209 : float option) ->
          fun ?originX:(x10210 : float option) ->
            fun ?originY:(x10211 : float option) ->
              fun ?originZ:(x10212 : float option) ->
                fun () ->
                  DOMMatrix.t_of_js
                    (let x10220 = this_to_js Obj.magic x10218 in
                     Ojs.call (Ojs.get_prop_ascii x10220 "scale3d") "apply"
                       [|x10220;((let x10213 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x10209 with
                                   | Some x10217 ->
                                       ignore
                                         (Ojs.call x10213 "push"
                                            [|(Ojs.float_to_js x10217)|])
                                   | None -> ());
                                  (match x10210 with
                                   | Some x10216 ->
                                       ignore
                                         (Ojs.call x10213 "push"
                                            [|(Ojs.float_to_js x10216)|])
                                   | None -> ());
                                  (match x10211 with
                                   | Some x10215 ->
                                       ignore
                                         (Ojs.call x10213 "push"
                                            [|(Ojs.float_to_js x10215)|])
                                   | None -> ());
                                  (match x10212 with
                                   | Some x10214 ->
                                       ignore
                                         (Ojs.call x10213 "push"
                                            [|(Ojs.float_to_js x10214)|])
                                   | None -> ());
                                  x10213))|])
    let (scaleNonUniform :
      'tags this -> ?scaleX:float -> ?scaleY:float -> unit -> DOMMatrix.t) =
      fun (x10226 : 'tags this) ->
        fun ?scaleX:(x10221 : float option) ->
          fun ?scaleY:(x10222 : float option) ->
            fun () ->
              DOMMatrix.t_of_js
                (let x10228 = this_to_js Obj.magic x10226 in
                 Ojs.call (Ojs.get_prop_ascii x10228 "scaleNonUniform")
                   "apply"
                   [|x10228;((let x10223 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x10221 with
                               | Some x10225 ->
                                   ignore
                                     (Ojs.call x10223 "push"
                                        [|(Ojs.float_to_js x10225)|])
                               | None -> ());
                              (match x10222 with
                               | Some x10224 ->
                                   ignore
                                     (Ojs.call x10223 "push"
                                        [|(Ojs.float_to_js x10224)|])
                               | None -> ());
                              x10223))|])
    let (skewX : 'tags this -> ?sx:float -> unit -> DOMMatrix.t) =
      fun (x10232 : 'tags this) ->
        fun ?sx:(x10229 : float option) ->
          fun () ->
            DOMMatrix.t_of_js
              (let x10234 = this_to_js Obj.magic x10232 in
               Ojs.call (Ojs.get_prop_ascii x10234 "skewX") "apply"
                 [|x10234;((let x10230 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10229 with
                             | Some x10231 ->
                                 ignore
                                   (Ojs.call x10230 "push"
                                      [|(Ojs.float_to_js x10231)|])
                             | None -> ());
                            x10230))|])
    let (skewY : 'tags this -> ?sy:float -> unit -> DOMMatrix.t) =
      fun (x10238 : 'tags this) ->
        fun ?sy:(x10235 : float option) ->
          fun () ->
            DOMMatrix.t_of_js
              (let x10240 = this_to_js Obj.magic x10238 in
               Ojs.call (Ojs.get_prop_ascii x10240 "skewY") "apply"
                 [|x10240;((let x10236 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10235 with
                             | Some x10237 ->
                                 ignore
                                   (Ojs.call x10236 "push"
                                      [|(Ojs.float_to_js x10237)|])
                             | None -> ());
                            x10236))|])
    let (toFloat32Array : 'tags this -> Float32Array.t_0) =
      fun (x10241 : 'tags this) ->
        Float32Array.t_0_of_js
          (Ojs.call (this_to_js Obj.magic x10241) "toFloat32Array" [||])
    let (toFloat64Array : 'tags this -> Float64Array.t_0) =
      fun (x10243 : 'tags this) ->
        Float64Array.t_0_of_js
          (Ojs.call (this_to_js Obj.magic x10243) "toFloat64Array" [||])
    let (toJSON : 'tags this -> any) =
      fun (x10245 : 'tags this) ->
        any_of_js (Ojs.call (this_to_js Obj.magic x10245) "toJSON" [||])
    let (transformPoint :
      'tags this -> ?point:DOMPointInit.t -> unit -> DOMPoint.t) =
      fun (x10250 : 'tags this) ->
        fun ?point:(x10247 : DOMPointInit.t option) ->
          fun () ->
            DOMPoint.t_of_js
              (let x10252 = this_to_js Obj.magic x10250 in
               Ojs.call (Ojs.get_prop_ascii x10252 "transformPoint") "apply"
                 [|x10252;((let x10248 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10247 with
                             | Some x10249 ->
                                 ignore
                                   (Ojs.call x10248 "push"
                                      [|(DOMPointInit.t_to_js x10249)|])
                             | None -> ());
                            x10248))|])
    let (translate :
      'tags this ->
        ?tx:float -> ?ty:float -> ?tz:float -> unit -> DOMMatrix.t)
      =
      fun (x10260 : 'tags this) ->
        fun ?tx:(x10253 : float option) ->
          fun ?ty:(x10254 : float option) ->
            fun ?tz:(x10255 : float option) ->
              fun () ->
                DOMMatrix.t_of_js
                  (let x10262 = this_to_js Obj.magic x10260 in
                   Ojs.call (Ojs.get_prop_ascii x10262 "translate") "apply"
                     [|x10262;((let x10256 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                (match x10253 with
                                 | Some x10259 ->
                                     ignore
                                       (Ojs.call x10256 "push"
                                          [|(Ojs.float_to_js x10259)|])
                                 | None -> ());
                                (match x10254 with
                                 | Some x10258 ->
                                     ignore
                                       (Ojs.call x10256 "push"
                                          [|(Ojs.float_to_js x10258)|])
                                 | None -> ());
                                (match x10255 with
                                 | Some x10257 ->
                                     ignore
                                       (Ojs.call x10256 "push"
                                          [|(Ojs.float_to_js x10257)|])
                                 | None -> ());
                                x10256))|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "DOMMatrixReadOnly") "prototype")
    let (create : ?init:float list or_string -> unit -> t) =
      fun ?init:(x10263 : float list or_string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr
               (Ojs.get_prop_ascii Ojs.global "DOMMatrixReadOnly")
               (let x10264 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10263 with
                 | Some x10265 ->
                     ignore
                       (Ojs.call x10264 "push"
                          [|(or_string_to_js
                               (fun (x10266 : float list) ->
                                  Ojs.list_to_js Ojs.float_to_js x10266)
                               x10265)|])
                 | None -> ());
                x10264))
    let (fromFloat32Array : Float32Array.t_0 -> t) =
      fun (x10268 : Float32Array.t_0) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "DOMMatrixReadOnly")
             "fromFloat32Array" [|(Float32Array.t_0_to_js x10268)|])
    let (fromFloat64Array : Float64Array.t_0 -> t) =
      fun (x10269 : Float64Array.t_0) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "DOMMatrixReadOnly")
             "fromFloat64Array" [|(Float64Array.t_0_to_js x10269)|])
    let (fromMatrix : ?other:DOMMatrixInit.t -> unit -> t) =
      fun ?other:(x10270 : DOMMatrixInit.t option) ->
        fun () ->
          t_of_js
            (let x10273 = Ojs.get_prop_ascii Ojs.global "DOMMatrixReadOnly" in
             Ojs.call (Ojs.get_prop_ascii x10273 "fromMatrix") "apply"
               [|x10273;((let x10271 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x10270 with
                           | Some x10272 ->
                               ignore
                                 (Ojs.call x10271 "push"
                                    [|(DOMMatrixInit.t_to_js x10272)|])
                           | None -> ());
                          x10271))|])
  end
module AnonymousInterface19 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x10275 : Ojs.t) -> x10275
    and t_to_js : t -> Ojs.t = fun (x10274 : Ojs.t) -> x10274
    let (get_prototype : t -> DOMMatrixReadOnly.t) =
      fun (x10276 : t) ->
        DOMMatrixReadOnly.t_of_js
          (Ojs.get_prop_ascii (t_to_js x10276) "prototype")
    let (set_prototype : t -> DOMMatrixReadOnly.t -> unit) =
      fun (x10277 : t) ->
        fun (x10278 : DOMMatrixReadOnly.t) ->
          Ojs.set_prop_ascii (t_to_js x10277) "prototype"
            (DOMMatrixReadOnly.t_to_js x10278)
    let (create :
      t -> ?init:float list or_string -> unit -> DOMMatrixReadOnly.t) =
      fun (x10284 : t) ->
        fun ?init:(x10279 : float list or_string option) ->
          fun () ->
            DOMMatrixReadOnly.t_of_js
              (Ojs.new_obj_arr (t_to_js x10284)
                 (let x10280 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x10279 with
                   | Some x10281 ->
                       ignore
                         (Ojs.call x10280 "push"
                            [|(or_string_to_js
                                 (fun (x10282 : float list) ->
                                    Ojs.list_to_js Ojs.float_to_js x10282)
                                 x10281)|])
                   | None -> ());
                  x10280))
    let (fromFloat32Array :
      t -> array32:Float32Array.t_0 -> DOMMatrixReadOnly.t) =
      fun (x10286 : t) ->
        fun ~array32:(x10285 : Float32Array.t_0) ->
          DOMMatrixReadOnly.t_of_js
            (Ojs.call (t_to_js x10286) "fromFloat32Array"
               [|(Float32Array.t_0_to_js x10285)|])
    let (fromFloat64Array :
      t -> array64:Float64Array.t_0 -> DOMMatrixReadOnly.t) =
      fun (x10288 : t) ->
        fun ~array64:(x10287 : Float64Array.t_0) ->
          DOMMatrixReadOnly.t_of_js
            (Ojs.call (t_to_js x10288) "fromFloat64Array"
               [|(Float64Array.t_0_to_js x10287)|])
    let (fromMatrix :
      t -> ?other:DOMMatrixInit.t -> unit -> DOMMatrixReadOnly.t) =
      fun (x10292 : t) ->
        fun ?other:(x10289 : DOMMatrixInit.t option) ->
          fun () ->
            DOMMatrixReadOnly.t_of_js
              (let x10293 = t_to_js x10292 in
               Ojs.call (Ojs.get_prop_ascii x10293 "fromMatrix") "apply"
                 [|x10293;((let x10290 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10289 with
                             | Some x10291 ->
                                 ignore
                                   (Ojs.call x10290 "push"
                                      [|(DOMMatrixInit.t_to_js x10291)|])
                             | None -> ());
                            x10290))|])
  end
module AnonymousInterface18 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x10295 : Ojs.t) -> x10295
    and t_to_js : t -> Ojs.t = fun (x10294 : Ojs.t) -> x10294
    let (get_prototype : t -> DOMMatrix.t) =
      fun (x10296 : t) ->
        DOMMatrix.t_of_js (Ojs.get_prop_ascii (t_to_js x10296) "prototype")
    let (set_prototype : t -> DOMMatrix.t -> unit) =
      fun (x10297 : t) ->
        fun (x10298 : DOMMatrix.t) ->
          Ojs.set_prop_ascii (t_to_js x10297) "prototype"
            (DOMMatrix.t_to_js x10298)
    let (create : t -> ?init:float list or_string -> unit -> DOMMatrix.t) =
      fun (x10304 : t) ->
        fun ?init:(x10299 : float list or_string option) ->
          fun () ->
            DOMMatrix.t_of_js
              (Ojs.new_obj_arr (t_to_js x10304)
                 (let x10300 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x10299 with
                   | Some x10301 ->
                       ignore
                         (Ojs.call x10300 "push"
                            [|(or_string_to_js
                                 (fun (x10302 : float list) ->
                                    Ojs.list_to_js Ojs.float_to_js x10302)
                                 x10301)|])
                   | None -> ());
                  x10300))
    let (fromFloat32Array : t -> array32:Float32Array.t_0 -> DOMMatrix.t) =
      fun (x10306 : t) ->
        fun ~array32:(x10305 : Float32Array.t_0) ->
          DOMMatrix.t_of_js
            (Ojs.call (t_to_js x10306) "fromFloat32Array"
               [|(Float32Array.t_0_to_js x10305)|])
    let (fromFloat64Array : t -> array64:Float64Array.t_0 -> DOMMatrix.t) =
      fun (x10308 : t) ->
        fun ~array64:(x10307 : Float64Array.t_0) ->
          DOMMatrix.t_of_js
            (Ojs.call (t_to_js x10308) "fromFloat64Array"
               [|(Float64Array.t_0_to_js x10307)|])
    let (fromMatrix : t -> ?other:DOMMatrixInit.t -> unit -> DOMMatrix.t) =
      fun (x10312 : t) ->
        fun ?other:(x10309 : DOMMatrixInit.t option) ->
          fun () ->
            DOMMatrix.t_of_js
              (let x10313 = t_to_js x10312 in
               Ojs.call (Ojs.get_prop_ascii x10313 "fromMatrix") "apply"
                 [|x10313;((let x10310 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10309 with
                             | Some x10311 ->
                                 ignore
                                   (Ojs.call x10310 "push"
                                      [|(DOMMatrixInit.t_to_js x10311)|])
                             | None -> ());
                            x10310))|])
  end
module AnonymousInterface17 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x10315 : Ojs.t) -> x10315
    and t_to_js : t -> Ojs.t = fun (x10314 : Ojs.t) -> x10314
    let (get_prototype : t -> DOMException.t) =
      fun (x10316 : t) ->
        DOMException.t_of_js
          (Ojs.get_prop_ascii (t_to_js x10316) "prototype")
    let (set_prototype : t -> DOMException.t -> unit) =
      fun (x10317 : t) ->
        fun (x10318 : DOMException.t) ->
          Ojs.set_prop_ascii (t_to_js x10317) "prototype"
            (DOMException.t_to_js x10318)
    let (create :
      t -> ?message:string -> ?name:string -> unit -> DOMException.t) =
      fun (x10324 : t) ->
        fun ?message:(x10319 : string option) ->
          fun ?name:(x10320 : string option) ->
            fun () ->
              DOMException.t_of_js
                (Ojs.new_obj_arr (t_to_js x10324)
                   (let x10321 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    (match x10319 with
                     | Some x10323 ->
                         ignore
                           (Ojs.call x10321 "push"
                              [|(Ojs.string_to_js x10323)|])
                     | None -> ());
                    (match x10320 with
                     | Some x10322 ->
                         ignore
                           (Ojs.call x10321 "push"
                              [|(Ojs.string_to_js x10322)|])
                     | None -> ());
                    x10321))
    let (get_ABORT_ERR : t -> float) =
      fun (x10325 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10325) "ABORT_ERR")
    let (get_DATA_CLONE_ERR : t -> float) =
      fun (x10326 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x10326) "DATA_CLONE_ERR")
    let (get_DOMSTRING_SIZE_ERR : t -> float) =
      fun (x10327 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x10327) "DOMSTRING_SIZE_ERR")
    let (get_HIERARCHY_REQUEST_ERR : t -> float) =
      fun (x10328 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x10328) "HIERARCHY_REQUEST_ERR")
    let (get_INDEX_SIZE_ERR : t -> float) =
      fun (x10329 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x10329) "INDEX_SIZE_ERR")
    let (get_INUSE_ATTRIBUTE_ERR : t -> float) =
      fun (x10330 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x10330) "INUSE_ATTRIBUTE_ERR")
    let (get_INVALID_ACCESS_ERR : t -> float) =
      fun (x10331 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x10331) "INVALID_ACCESS_ERR")
    let (get_INVALID_CHARACTER_ERR : t -> float) =
      fun (x10332 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x10332) "INVALID_CHARACTER_ERR")
    let (get_INVALID_MODIFICATION_ERR : t -> float) =
      fun (x10333 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x10333) "INVALID_MODIFICATION_ERR")
    let (get_INVALID_NODE_TYPE_ERR : t -> float) =
      fun (x10334 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x10334) "INVALID_NODE_TYPE_ERR")
    let (get_INVALID_STATE_ERR : t -> float) =
      fun (x10335 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x10335) "INVALID_STATE_ERR")
    let (get_NAMESPACE_ERR : t -> float) =
      fun (x10336 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10336) "NAMESPACE_ERR")
    let (get_NETWORK_ERR : t -> float) =
      fun (x10337 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10337) "NETWORK_ERR")
    let (get_NOT_FOUND_ERR : t -> float) =
      fun (x10338 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10338) "NOT_FOUND_ERR")
    let (get_NOT_SUPPORTED_ERR : t -> float) =
      fun (x10339 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x10339) "NOT_SUPPORTED_ERR")
    let (get_NO_DATA_ALLOWED_ERR : t -> float) =
      fun (x10340 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x10340) "NO_DATA_ALLOWED_ERR")
    let (get_NO_MODIFICATION_ALLOWED_ERR : t -> float) =
      fun (x10341 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x10341) "NO_MODIFICATION_ALLOWED_ERR")
    let (get_QUOTA_EXCEEDED_ERR : t -> float) =
      fun (x10342 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x10342) "QUOTA_EXCEEDED_ERR")
    let (get_SECURITY_ERR : t -> float) =
      fun (x10343 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10343) "SECURITY_ERR")
    let (get_SYNTAX_ERR : t -> float) =
      fun (x10344 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10344) "SYNTAX_ERR")
    let (get_TIMEOUT_ERR : t -> float) =
      fun (x10345 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10345) "TIMEOUT_ERR")
    let (get_TYPE_MISMATCH_ERR : t -> float) =
      fun (x10346 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x10346) "TYPE_MISMATCH_ERR")
    let (get_URL_MISMATCH_ERR : t -> float) =
      fun (x10347 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x10347) "URL_MISMATCH_ERR")
    let (get_VALIDATION_ERR : t -> float) =
      fun (x10348 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x10348) "VALIDATION_ERR")
    let (get_WRONG_DOCUMENT_ERR : t -> float) =
      fun (x10349 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x10349) "WRONG_DOCUMENT_ERR")
  end
module CustomEventInit =
  struct
    type 'T t = [ `CustomEventInit of 'T  | `EventInit ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x10352 : Ojs.t) -> t_of_js __T_of_js x10352
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x10350 : __T t) -> t_to_js __T_to_js x10350
    type t_0 = any t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x10356 : Ojs.t) -> t_of_js any_of_js x10356
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x10354 : any t) -> t_to_js any_to_js x10354
    type 'T tags = [ `CustomEventInit of 'T  | `EventInit ]
    type 'T tags_1 = 'T tags
    type tags_0 = any tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `CustomEventInit of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10360 : Ojs.t) -> intf_of_js __tags_of_js x10360
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10358 : __tags intf) -> intf_to_js __tags_to_js x10358
    let (get_detail : ('tags, 'T) this -> 'T) =
      fun (x10362 : ('tags, 'T) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x10362)
             "detail")
    let (set_detail : ('tags, 'T) this -> 'T -> unit) =
      fun (x10365 : ('tags, 'T) this) ->
        fun (x10366 : 'T) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x10365) "detail"
            (Obj.magic x10366)
    let cast_from = Obj.magic
  end
module CustomEvent =
  struct
    type 'T t = [ `CustomEvent of 'T  | `Event ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x10371 : Ojs.t) -> t_of_js __T_of_js x10371
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x10369 : __T t) -> t_to_js __T_to_js x10369
    type t_0 = any t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x10375 : Ojs.t) -> t_of_js any_of_js x10375
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x10373 : any t) -> t_to_js any_to_js x10373
    type 'T tags = [ `CustomEvent of 'T  | `Event ]
    type 'T tags_1 = 'T tags
    type tags_0 = any tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `CustomEvent of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10379 : Ojs.t) -> intf_of_js __tags_of_js x10379
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10377 : __tags intf) -> intf_to_js __tags_to_js x10377
    let (get_detail : ('tags, 'T) this -> 'T) =
      fun (x10381 : ('tags, 'T) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x10381)
             "detail")
    let (initCustomEvent :
      ('tags, 'T) this ->
        type_:string ->
          ?bubbles:bool -> ?cancelable:bool -> ?detail:'T -> unit -> unit)
      =
      fun (x10392 : ('tags, 'T) this) ->
        fun ~type_:(x10384 : string) ->
          fun ?bubbles:(x10385 : bool option) ->
            fun ?cancelable:(x10386 : bool option) ->
              fun ?detail:(x10387 : 'T option) ->
                fun () ->
                  ignore
                    (let x10395 = this_to_js Obj.magic Obj.magic x10392 in
                     Ojs.call (Ojs.get_prop_ascii x10395 "initCustomEvent")
                       "apply"
                       [|x10395;((let x10388 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x10388 "push"
                                       [|(Ojs.string_to_js x10384)|]);
                                  (match x10385 with
                                   | Some x10391 ->
                                       ignore
                                         (Ojs.call x10388 "push"
                                            [|(Ojs.bool_to_js x10391)|])
                                   | None -> ());
                                  (match x10386 with
                                   | Some x10390 ->
                                       ignore
                                         (Ojs.call x10388 "push"
                                            [|(Ojs.bool_to_js x10390)|])
                                   | None -> ());
                                  (match x10387 with
                                   | Some x10389 ->
                                       ignore
                                         (Ojs.call x10388 "push"
                                            [|(Obj.magic x10389)|])
                                   | None -> ());
                                  x10388))|])
    let cast_from = Obj.magic
    let (prototype : unit -> t_0) =
      fun () ->
        t_0_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "CustomEvent")
             "prototype")
    let (create :
      type_:string -> ?eventInitDict:'T CustomEventInit.t -> unit -> 'T t) =
      fun ~type_:(x10396 : string) ->
        fun ?eventInitDict:(x10397 : 'T CustomEventInit.t option) ->
          fun () ->
            t_of_js Obj.magic
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "CustomEvent")
                 (let x10398 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x10398 "push" [|(Ojs.string_to_js x10396)|]);
                  (match x10397 with
                   | Some x10399 ->
                       ignore
                         (Ojs.call x10398 "push"
                            [|(CustomEventInit.t_to_js Obj.magic x10399)|])
                   | None -> ());
                  x10398))
  end
module AnonymousInterface16 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x10403 : Ojs.t) -> x10403
    and t_to_js : t -> Ojs.t = fun (x10402 : Ojs.t) -> x10402
    let (get_prototype : t -> CustomEvent.t_0) =
      fun (x10404 : t) ->
        CustomEvent.t_0_of_js
          (Ojs.get_prop_ascii (t_to_js x10404) "prototype")
    let (set_prototype : t -> CustomEvent.t_0 -> unit) =
      fun (x10405 : t) ->
        fun (x10406 : CustomEvent.t_0) ->
          Ojs.set_prop_ascii (t_to_js x10405) "prototype"
            (CustomEvent.t_0_to_js x10406)
    let (create :
      t ->
        type_:string ->
          ?eventInitDict:'T CustomEventInit.t -> unit -> 'T CustomEvent.t)
      =
      fun (x10412 : t) ->
        fun ~type_:(x10407 : string) ->
          fun ?eventInitDict:(x10408 : 'T CustomEventInit.t option) ->
            fun () ->
              CustomEvent.t_of_js Obj.magic
                (Ojs.new_obj_arr (t_to_js x10412)
                   (let x10409 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x10409 "push" [|(Ojs.string_to_js x10407)|]);
                    (match x10408 with
                     | Some x10410 ->
                         ignore
                           (Ojs.call x10409 "push"
                              [|(CustomEventInit.t_to_js Obj.magic x10410)|])
                     | None -> ());
                    x10409))
  end
module AnonymousInterface15 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x10415 : Ojs.t) -> x10415
    and t_to_js : t -> Ojs.t = fun (x10414 : Ojs.t) -> x10414
    let (get_prototype : t -> CryptoKey.t) =
      fun (x10416 : t) ->
        CryptoKey.t_of_js (Ojs.get_prop_ascii (t_to_js x10416) "prototype")
    let (set_prototype : t -> CryptoKey.t -> unit) =
      fun (x10417 : t) ->
        fun (x10418 : CryptoKey.t) ->
          Ojs.set_prop_ascii (t_to_js x10417) "prototype"
            (CryptoKey.t_to_js x10418)
    let (create : t -> CryptoKey.t) =
      fun (x10419 : t) ->
        CryptoKey.t_of_js (Ojs.new_obj (t_to_js x10419) [||])
  end
module AnonymousInterface14 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x10421 : Ojs.t) -> x10421
    and t_to_js : t -> Ojs.t = fun (x10420 : Ojs.t) -> x10420
    let (get_prototype : t -> Crypto.t) =
      fun (x10422 : t) ->
        Crypto.t_of_js (Ojs.get_prop_ascii (t_to_js x10422) "prototype")
    let (set_prototype : t -> Crypto.t -> unit) =
      fun (x10423 : t) ->
        fun (x10424 : Crypto.t) ->
          Ojs.set_prop_ascii (t_to_js x10423) "prototype"
            (Crypto.t_to_js x10424)
    let (create : t -> Crypto.t) =
      fun (x10425 : t) -> Crypto.t_of_js (Ojs.new_obj (t_to_js x10425) [||])
  end
module AnonymousInterface139 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x10427 : Ojs.t) -> x10427
    and t_to_js : t -> Ojs.t = fun (x10426 : Ojs.t) -> x10426
    let (get_prototype : t -> XMLHttpRequestUpload.t) =
      fun (x10428 : t) ->
        XMLHttpRequestUpload.t_of_js
          (Ojs.get_prop_ascii (t_to_js x10428) "prototype")
    let (set_prototype : t -> XMLHttpRequestUpload.t -> unit) =
      fun (x10429 : t) ->
        fun (x10430 : XMLHttpRequestUpload.t) ->
          Ojs.set_prop_ascii (t_to_js x10429) "prototype"
            (XMLHttpRequestUpload.t_to_js x10430)
    let (create : t -> XMLHttpRequestUpload.t) =
      fun (x10431 : t) ->
        XMLHttpRequestUpload.t_of_js (Ojs.new_obj (t_to_js x10431) [||])
  end
module AnonymousInterface138 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x10433 : Ojs.t) -> x10433
    and t_to_js : t -> Ojs.t = fun (x10432 : Ojs.t) -> x10432
    let (get_prototype : t -> XMLHttpRequestEventTarget.t) =
      fun (x10434 : t) ->
        XMLHttpRequestEventTarget.t_of_js
          (Ojs.get_prop_ascii (t_to_js x10434) "prototype")
    let (set_prototype : t -> XMLHttpRequestEventTarget.t -> unit) =
      fun (x10435 : t) ->
        fun (x10436 : XMLHttpRequestEventTarget.t) ->
          Ojs.set_prop_ascii (t_to_js x10435) "prototype"
            (XMLHttpRequestEventTarget.t_to_js x10436)
    let (create : t -> XMLHttpRequestEventTarget.t) =
      fun (x10437 : t) ->
        XMLHttpRequestEventTarget.t_of_js (Ojs.new_obj (t_to_js x10437) [||])
  end
module AnonymousInterface137 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x10439 : Ojs.t) -> x10439
    and t_to_js : t -> Ojs.t = fun (x10438 : Ojs.t) -> x10438
    let (get_prototype : t -> XMLHttpRequest.t) =
      fun (x10440 : t) ->
        XMLHttpRequest.t_of_js
          (Ojs.get_prop_ascii (t_to_js x10440) "prototype")
    let (set_prototype : t -> XMLHttpRequest.t -> unit) =
      fun (x10441 : t) ->
        fun (x10442 : XMLHttpRequest.t) ->
          Ojs.set_prop_ascii (t_to_js x10441) "prototype"
            (XMLHttpRequest.t_to_js x10442)
    let (create : t -> XMLHttpRequest.t) =
      fun (x10443 : t) ->
        XMLHttpRequest.t_of_js (Ojs.new_obj (t_to_js x10443) [||])
    let (get_DONE : t -> float) =
      fun (x10444 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10444) "DONE")
    let (get_HEADERS_RECEIVED : t -> float) =
      fun (x10445 : t) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (t_to_js x10445) "HEADERS_RECEIVED")
    let (get_LOADING : t -> float) =
      fun (x10446 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10446) "LOADING")
    let (get_OPENED : t -> float) =
      fun (x10447 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10447) "OPENED")
    let (get_UNSENT : t -> float) =
      fun (x10448 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10448) "UNSENT")
  end
module AnonymousInterface136 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x10450 : Ojs.t) -> x10450
    and t_to_js : t -> Ojs.t = fun (x10449 : Ojs.t) -> x10449
    let (get_prototype : t -> WritableStreamDefaultWriter.t_0) =
      fun (x10451 : t) ->
        WritableStreamDefaultWriter.t_0_of_js
          (Ojs.get_prop_ascii (t_to_js x10451) "prototype")
    let (set_prototype : t -> WritableStreamDefaultWriter.t_0 -> unit) =
      fun (x10452 : t) ->
        fun (x10453 : WritableStreamDefaultWriter.t_0) ->
          Ojs.set_prop_ascii (t_to_js x10452) "prototype"
            (WritableStreamDefaultWriter.t_0_to_js x10453)
    let (create :
      t -> stream:'W WritableStream.t -> 'W WritableStreamDefaultWriter.t) =
      fun (x10456 : t) ->
        fun ~stream:(x10454 : 'W WritableStream.t) ->
          WritableStreamDefaultWriter.t_of_js Obj.magic
            (Ojs.new_obj (t_to_js x10456)
               [|(WritableStream.t_to_js Obj.magic x10454)|])
  end
module AnonymousInterface135 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x10459 : Ojs.t) -> x10459
    and t_to_js : t -> Ojs.t = fun (x10458 : Ojs.t) -> x10458
    let (get_prototype : t -> WritableStreamDefaultController.t) =
      fun (x10460 : t) ->
        WritableStreamDefaultController.t_of_js
          (Ojs.get_prop_ascii (t_to_js x10460) "prototype")
    let (set_prototype : t -> WritableStreamDefaultController.t -> unit) =
      fun (x10461 : t) ->
        fun (x10462 : WritableStreamDefaultController.t) ->
          Ojs.set_prop_ascii (t_to_js x10461) "prototype"
            (WritableStreamDefaultController.t_to_js x10462)
    let (create : t -> WritableStreamDefaultController.t) =
      fun (x10463 : t) ->
        WritableStreamDefaultController.t_of_js
          (Ojs.new_obj (t_to_js x10463) [||])
  end
module AnonymousInterface134 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x10465 : Ojs.t) -> x10465
    and t_to_js : t -> Ojs.t = fun (x10464 : Ojs.t) -> x10464
    let (get_prototype : t -> WritableStream.t_0) =
      fun (x10466 : t) ->
        WritableStream.t_0_of_js
          (Ojs.get_prop_ascii (t_to_js x10466) "prototype")
    let (set_prototype : t -> WritableStream.t_0 -> unit) =
      fun (x10467 : t) ->
        fun (x10468 : WritableStream.t_0) ->
          Ojs.set_prop_ascii (t_to_js x10467) "prototype"
            (WritableStream.t_0_to_js x10468)
    let (create :
      t ->
        ?underlyingSink:'W UnderlyingSink.t ->
          ?strategy:'W QueuingStrategy.t -> unit -> 'W WritableStream.t)
      =
      fun (x10476 : t) ->
        fun ?underlyingSink:(x10469 : 'W UnderlyingSink.t option) ->
          fun ?strategy:(x10470 : 'W QueuingStrategy.t option) ->
            fun () ->
              WritableStream.t_of_js Obj.magic
                (Ojs.new_obj_arr (t_to_js x10476)
                   (let x10471 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    (match x10469 with
                     | Some x10474 ->
                         ignore
                           (Ojs.call x10471 "push"
                              [|(UnderlyingSink.t_to_js Obj.magic x10474)|])
                     | None -> ());
                    (match x10470 with
                     | Some x10472 ->
                         ignore
                           (Ojs.call x10471 "push"
                              [|(QueuingStrategy.t_to_js Obj.magic x10472)|])
                     | None -> ());
                    x10471))
  end
module AnonymousInterface133 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x10479 : Ojs.t) -> x10479
    and t_to_js : t -> Ojs.t = fun (x10478 : Ojs.t) -> x10478
    let (get_prototype : t -> WorkerNavigator.t) =
      fun (x10480 : t) ->
        WorkerNavigator.t_of_js
          (Ojs.get_prop_ascii (t_to_js x10480) "prototype")
    let (set_prototype : t -> WorkerNavigator.t -> unit) =
      fun (x10481 : t) ->
        fun (x10482 : WorkerNavigator.t) ->
          Ojs.set_prop_ascii (t_to_js x10481) "prototype"
            (WorkerNavigator.t_to_js x10482)
    let (create : t -> WorkerNavigator.t) =
      fun (x10483 : t) ->
        WorkerNavigator.t_of_js (Ojs.new_obj (t_to_js x10483) [||])
  end
module AnonymousInterface132 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x10485 : Ojs.t) -> x10485
    and t_to_js : t -> Ojs.t = fun (x10484 : Ojs.t) -> x10484
    let (get_prototype : t -> WorkerLocation.t) =
      fun (x10486 : t) ->
        WorkerLocation.t_of_js
          (Ojs.get_prop_ascii (t_to_js x10486) "prototype")
    let (set_prototype : t -> WorkerLocation.t -> unit) =
      fun (x10487 : t) ->
        fun (x10488 : WorkerLocation.t) ->
          Ojs.set_prop_ascii (t_to_js x10487) "prototype"
            (WorkerLocation.t_to_js x10488)
    let (create : t -> WorkerLocation.t) =
      fun (x10489 : t) ->
        WorkerLocation.t_of_js (Ojs.new_obj (t_to_js x10489) [||])
  end
module AnonymousInterface131 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x10491 : Ojs.t) -> x10491
    and t_to_js : t -> Ojs.t = fun (x10490 : Ojs.t) -> x10490
    let (get_prototype : t -> WorkerGlobalScope.t) =
      fun (x10492 : t) ->
        WorkerGlobalScope.t_of_js
          (Ojs.get_prop_ascii (t_to_js x10492) "prototype")
    let (set_prototype : t -> WorkerGlobalScope.t -> unit) =
      fun (x10493 : t) ->
        fun (x10494 : WorkerGlobalScope.t) ->
          Ojs.set_prop_ascii (t_to_js x10493) "prototype"
            (WorkerGlobalScope.t_to_js x10494)
    let (create : t -> WorkerGlobalScope.t) =
      fun (x10495 : t) ->
        WorkerGlobalScope.t_of_js (Ojs.new_obj (t_to_js x10495) [||])
  end
module WorkerOptions =
  struct
    type t = [ `WorkerOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x10497 : Ojs.t) -> t_of_js x10497
    and t_0_to_js : t_0 -> Ojs.t = fun (x10496 : t) -> t_to_js x10496
    type tags = [ `WorkerOptions ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `WorkerOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x10500 : Ojs.t) -> intf_of_js __tags_of_js x10500
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x10498 : __tags intf) -> intf_to_js __tags_to_js x10498
    let (get_credentials : 'tags this -> RequestCredentials.t) =
      fun (x10502 : 'tags this) ->
        RequestCredentials.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10502) "credentials")
    let (set_credentials : 'tags this -> RequestCredentials.t -> unit) =
      fun (x10504 : 'tags this) ->
        fun (x10505 : RequestCredentials.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x10504) "credentials"
            (RequestCredentials.t_to_js x10505)
    let (get_name : 'tags this -> string) =
      fun (x10507 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10507) "name")
    let (set_name : 'tags this -> string -> unit) =
      fun (x10509 : 'tags this) ->
        fun (x10510 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x10509) "name"
            (Ojs.string_to_js x10510)
    let (get_type : 'tags this -> WorkerType.t) =
      fun (x10512 : 'tags this) ->
        WorkerType.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10512) "type")
    let (set_type : 'tags this -> WorkerType.t -> unit) =
      fun (x10514 : 'tags this) ->
        fun (x10515 : WorkerType.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x10514) "type"
            (WorkerType.t_to_js x10515)
    let cast_from = Obj.magic
  end
module Worker =
  struct
    type t = [ `AbstractWorker  | `EventTarget  | `Worker ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x10518 : Ojs.t) -> t_of_js x10518
    and t_0_to_js : t_0 -> Ojs.t = fun (x10517 : t) -> t_to_js x10517
    type tags = [ `AbstractWorker  | `EventTarget  | `Worker ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Worker ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x10521 : Ojs.t) -> intf_of_js __tags_of_js x10521
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x10519 : __tags intf) -> intf_to_js __tags_to_js x10519
    let (get_onmessage :
      'tags this -> (this:t -> ev:MessageEvent.t_0 -> any) or_null) =
      fun (x10523 : 'tags this) ->
        or_null_of_js
          (fun (x10525 : Ojs.t) ->
             fun ~this:(x10526 : t) ->
               fun ~ev:(x10527 : MessageEvent.t_0) ->
                 any_of_js
                   (Ojs.apply x10525
                      [|(t_to_js x10526);(MessageEvent.t_0_to_js x10527)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10523) "onmessage")
    let (set_onmessage :
      'tags this -> (this:t -> ev:MessageEvent.t_0 -> any) or_null -> unit) =
      fun (x10528 : 'tags this) ->
        fun (x10529 : (this:t -> ev:MessageEvent.t_0 -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x10528) "onmessage"
            (or_null_to_js
               (fun (x10530 : this:t -> ev:MessageEvent.t_0 -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x10531 : Ojs.t) ->
                       fun (x10532 : Ojs.t) ->
                         any_to_js
                           (x10530 ~this:(t_of_js x10531)
                              ~ev:(MessageEvent.t_0_of_js x10532)))) x10529)
    let (get_onmessageerror :
      'tags this -> (this:t -> ev:MessageEvent.t_0 -> any) or_null) =
      fun (x10534 : 'tags this) ->
        or_null_of_js
          (fun (x10536 : Ojs.t) ->
             fun ~this:(x10537 : t) ->
               fun ~ev:(x10538 : MessageEvent.t_0) ->
                 any_of_js
                   (Ojs.apply x10536
                      [|(t_to_js x10537);(MessageEvent.t_0_to_js x10538)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10534) "onmessageerror")
    let (set_onmessageerror :
      'tags this -> (this:t -> ev:MessageEvent.t_0 -> any) or_null -> unit) =
      fun (x10539 : 'tags this) ->
        fun (x10540 : (this:t -> ev:MessageEvent.t_0 -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x10539) "onmessageerror"
            (or_null_to_js
               (fun (x10541 : this:t -> ev:MessageEvent.t_0 -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x10542 : Ojs.t) ->
                       fun (x10543 : Ojs.t) ->
                         any_to_js
                           (x10541 ~this:(t_of_js x10542)
                              ~ev:(MessageEvent.t_0_of_js x10543)))) x10540)
    let (postMessage :
      'tags this -> message:any -> transfer:Transferable.t list -> unit) =
      fun (x10548 : 'tags this) ->
        fun ~message:(x10545 : any) ->
          fun ~transfer:(x10546 : Transferable.t list) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x10548) "postMessage"
                 [|(any_to_js x10545);(Ojs.list_to_js Transferable.t_to_js
                                         x10546)|])
    let (postMessage' :
      'tags this ->
        message:any -> ?options:StructuredSerializeOptions.t -> unit -> unit)
      =
      fun (x10554 : 'tags this) ->
        fun ~message:(x10550 : any) ->
          fun ?options:(x10551 : StructuredSerializeOptions.t option) ->
            fun () ->
              ignore
                (let x10556 = this_to_js Obj.magic x10554 in
                 Ojs.call (Ojs.get_prop_ascii x10556 "postMessage") "apply"
                   [|x10556;((let x10552 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10552 "push"
                                   [|(any_to_js x10550)|]);
                              (match x10551 with
                               | Some x10553 ->
                                   ignore
                                     (Ojs.call x10552 "push"
                                        [|(StructuredSerializeOptions.t_to_js
                                             x10553)|])
                               | None -> ());
                              x10552))|])
    let (terminate : 'tags this -> unit) =
      fun (x10557 : 'tags this) ->
        ignore (Ojs.call (this_to_js Obj.magic x10557) "terminate" [||])
    let (addEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x10567 : 'tags this) ->
        fun ~type_:(x10559 : 'K) ->
          fun ~listener:(x10560 : this:t -> ev:any -> any) ->
            fun
              ?options:(x10561 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x10569 = this_to_js Obj.magic x10567 in
                   Ojs.call (Ojs.get_prop_ascii x10569 "addEventListener")
                     "apply"
                     [|x10569;((let x10562 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x10562 "push"
                                     [|(Obj.magic x10559)|]);
                                ignore
                                  (Ojs.call x10562 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x10565 : Ojs.t) ->
                                             fun (x10566 : Ojs.t) ->
                                               any_to_js
                                                 (x10560
                                                    ~this:(t_of_js x10565)
                                                    ~ev:(any_of_js x10566))))|]);
                                (match x10561 with
                                 | Some x10563 ->
                                     ignore
                                       (Ojs.call x10562 "push"
                                          [|(or_boolean_to_js
                                               AddEventListenerOptions.t_to_js
                                               x10563)|])
                                 | None -> ());
                                x10562))|])
    let (addEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x10576 : 'tags this) ->
        fun ~type_:(x10570 : string) ->
          fun ~listener:(x10571 : EventListenerOrEventListenerObject.t) ->
            fun
              ?options:(x10572 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x10578 = this_to_js Obj.magic x10576 in
                   Ojs.call (Ojs.get_prop_ascii x10578 "addEventListener")
                     "apply"
                     [|x10578;((let x10573 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x10573 "push"
                                     [|(Ojs.string_to_js x10570)|]);
                                ignore
                                  (Ojs.call x10573 "push"
                                     [|(EventListenerOrEventListenerObject.t_to_js
                                          x10571)|]);
                                (match x10572 with
                                 | Some x10574 ->
                                     ignore
                                       (Ojs.call x10573 "push"
                                          [|(or_boolean_to_js
                                               AddEventListenerOptions.t_to_js
                                               x10574)|])
                                 | None -> ());
                                x10573))|])
    let (removeEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x10587 : 'tags this) ->
        fun ~type_:(x10579 : 'K) ->
          fun ~listener:(x10580 : this:t -> ev:any -> any) ->
            fun ?options:(x10581 : EventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x10589 = this_to_js Obj.magic x10587 in
                   Ojs.call (Ojs.get_prop_ascii x10589 "removeEventListener")
                     "apply"
                     [|x10589;((let x10582 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x10582 "push"
                                     [|(Obj.magic x10579)|]);
                                ignore
                                  (Ojs.call x10582 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x10585 : Ojs.t) ->
                                             fun (x10586 : Ojs.t) ->
                                               any_to_js
                                                 (x10580
                                                    ~this:(t_of_js x10585)
                                                    ~ev:(any_of_js x10586))))|]);
                                (match x10581 with
                                 | Some x10583 ->
                                     ignore
                                       (Ojs.call x10582 "push"
                                          [|(or_boolean_to_js
                                               EventListenerOptions.t_to_js
                                               x10583)|])
                                 | None -> ());
                                x10582))|])
    let (removeEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x10596 : 'tags this) ->
        fun ~type_:(x10590 : string) ->
          fun ~listener:(x10591 : EventListenerOrEventListenerObject.t) ->
            fun ?options:(x10592 : EventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x10598 = this_to_js Obj.magic x10596 in
                   Ojs.call (Ojs.get_prop_ascii x10598 "removeEventListener")
                     "apply"
                     [|x10598;((let x10593 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x10593 "push"
                                     [|(Ojs.string_to_js x10590)|]);
                                ignore
                                  (Ojs.call x10593 "push"
                                     [|(EventListenerOrEventListenerObject.t_to_js
                                          x10591)|]);
                                (match x10592 with
                                 | Some x10594 ->
                                     ignore
                                       (Ojs.call x10593 "push"
                                          [|(or_boolean_to_js
                                               EventListenerOptions.t_to_js
                                               x10594)|])
                                 | None -> ());
                                x10593))|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Worker")
             "prototype")
    let (create :
      scriptURL:URL.t or_string -> ?options:WorkerOptions.t -> unit -> t) =
      fun ~scriptURL:(x10599 : URL.t or_string) ->
        fun ?options:(x10600 : WorkerOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Worker")
                 (let x10601 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x10601 "push"
                       [|(or_string_to_js URL.t_to_js x10599)|]);
                  (match x10600 with
                   | Some x10602 ->
                       ignore
                         (Ojs.call x10601 "push"
                            [|(WorkerOptions.t_to_js x10602)|])
                   | None -> ());
                  x10601))
  end
module AnonymousInterface130 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x10605 : Ojs.t) -> x10605
    and t_to_js : t -> Ojs.t = fun (x10604 : Ojs.t) -> x10604
    let (get_prototype : t -> Worker.t) =
      fun (x10606 : t) ->
        Worker.t_of_js (Ojs.get_prop_ascii (t_to_js x10606) "prototype")
    let (set_prototype : t -> Worker.t -> unit) =
      fun (x10607 : t) ->
        fun (x10608 : Worker.t) ->
          Ojs.set_prop_ascii (t_to_js x10607) "prototype"
            (Worker.t_to_js x10608)
    let (create :
      t ->
        scriptURL:URL.t or_string ->
          ?options:WorkerOptions.t -> unit -> Worker.t)
      =
      fun (x10614 : t) ->
        fun ~scriptURL:(x10609 : URL.t or_string) ->
          fun ?options:(x10610 : WorkerOptions.t option) ->
            fun () ->
              Worker.t_of_js
                (Ojs.new_obj_arr (t_to_js x10614)
                   (let x10611 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x10611 "push"
                         [|(or_string_to_js URL.t_to_js x10609)|]);
                    (match x10610 with
                     | Some x10612 ->
                         ignore
                           (Ojs.call x10611 "push"
                              [|(WorkerOptions.t_to_js x10612)|])
                     | None -> ());
                    x10611))
  end
module CountQueuingStrategy =
  struct
    type t = [ `CountQueuingStrategy  | `QueuingStrategy of any ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x10616 : Ojs.t) -> t_of_js x10616
    and t_0_to_js : t_0 -> Ojs.t = fun (x10615 : t) -> t_to_js x10615
    type tags = [ `CountQueuingStrategy  | `QueuingStrategy of any ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `CountQueuingStrategy ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x10619 : Ojs.t) -> intf_of_js __tags_of_js x10619
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x10617 : __tags intf) -> intf_to_js __tags_to_js x10617
    let (get_highWaterMark : 'tags this -> float) =
      fun (x10621 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10621) "highWaterMark")
    let (get_size : 'tags this -> QueuingStrategySize.t_0) =
      fun (x10623 : 'tags this) ->
        QueuingStrategySize.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10623) "size")
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "CountQueuingStrategy")
             "prototype")
    let (create : QueuingStrategyInit.t -> t) =
      fun (x10625 : QueuingStrategyInit.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "CountQueuingStrategy")
             [|(QueuingStrategyInit.t_to_js x10625)|])
  end
module AnonymousInterface13 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x10627 : Ojs.t) -> x10627
    and t_to_js : t -> Ojs.t = fun (x10626 : Ojs.t) -> x10626
    let (get_prototype : t -> CountQueuingStrategy.t) =
      fun (x10628 : t) ->
        CountQueuingStrategy.t_of_js
          (Ojs.get_prop_ascii (t_to_js x10628) "prototype")
    let (set_prototype : t -> CountQueuingStrategy.t -> unit) =
      fun (x10629 : t) ->
        fun (x10630 : CountQueuingStrategy.t) ->
          Ojs.set_prop_ascii (t_to_js x10629) "prototype"
            (CountQueuingStrategy.t_to_js x10630)
    let (create : t -> init:QueuingStrategyInit.t -> CountQueuingStrategy.t)
      =
      fun (x10632 : t) ->
        fun ~init:(x10631 : QueuingStrategyInit.t) ->
          CountQueuingStrategy.t_of_js
            (Ojs.new_obj (t_to_js x10632)
               [|(QueuingStrategyInit.t_to_js x10631)|])
  end
module AnonymousInterface129 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x10634 : Ojs.t) -> x10634
    and t_to_js : t -> Ojs.t = fun (x10633 : Ojs.t) -> x10633
    let (get_prototype : t -> WindowClient.t) =
      fun (x10635 : t) ->
        WindowClient.t_of_js
          (Ojs.get_prop_ascii (t_to_js x10635) "prototype")
    let (set_prototype : t -> WindowClient.t -> unit) =
      fun (x10636 : t) ->
        fun (x10637 : WindowClient.t) ->
          Ojs.set_prop_ascii (t_to_js x10636) "prototype"
            (WindowClient.t_to_js x10637)
    let (create : t -> WindowClient.t) =
      fun (x10638 : t) ->
        WindowClient.t_of_js (Ojs.new_obj (t_to_js x10638) [||])
  end
module BinaryType =
  struct
    type t = [ `L_s37_arraybuffer  | `L_s44_blob ]
    let rec t_of_js : Ojs.t -> t =
      fun (x10640 : Ojs.t) ->
        let x10641 = x10640 in
        match Ojs.string_of_js x10641 with
        | "arraybuffer" -> `L_s37_arraybuffer
        | "blob" -> `L_s44_blob
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun (x10639 : [ `L_s37_arraybuffer  | `L_s44_blob ]) ->
        match x10639 with
        | `L_s37_arraybuffer -> Ojs.string_to_js "arraybuffer"
        | `L_s44_blob -> Ojs.string_to_js "blob"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x10643 : Ojs.t) -> t_of_js x10643
    and t_0_to_js : t_0 -> Ojs.t = fun (x10642 : t) -> t_to_js x10642
  end
module WebSocket =
  struct
    type t = [ `EventTarget  | `WebSocket ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x10645 : Ojs.t) -> t_of_js x10645
    and t_0_to_js : t_0 -> Ojs.t = fun (x10644 : t) -> t_to_js x10644
    type tags = [ `EventTarget  | `WebSocket ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `WebSocket ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x10648 : Ojs.t) -> intf_of_js __tags_of_js x10648
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x10646 : __tags intf) -> intf_to_js __tags_to_js x10646
    let (get_binaryType : 'tags this -> BinaryType.t) =
      fun (x10650 : 'tags this) ->
        BinaryType.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10650) "binaryType")
    let (set_binaryType : 'tags this -> BinaryType.t -> unit) =
      fun (x10652 : 'tags this) ->
        fun (x10653 : BinaryType.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x10652) "binaryType"
            (BinaryType.t_to_js x10653)
    let (get_bufferedAmount : 'tags this -> float) =
      fun (x10655 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10655) "bufferedAmount")
    let (get_extensions : 'tags this -> string) =
      fun (x10657 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10657) "extensions")
    let (get_onclose :
      'tags this -> (this:t -> ev:CloseEvent.t -> any) or_null) =
      fun (x10659 : 'tags this) ->
        or_null_of_js
          (fun (x10661 : Ojs.t) ->
             fun ~this:(x10662 : t) ->
               fun ~ev:(x10663 : CloseEvent.t) ->
                 any_of_js
                   (Ojs.apply x10661
                      [|(t_to_js x10662);(CloseEvent.t_to_js x10663)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10659) "onclose")
    let (set_onclose :
      'tags this -> (this:t -> ev:CloseEvent.t -> any) or_null -> unit) =
      fun (x10664 : 'tags this) ->
        fun (x10665 : (this:t -> ev:CloseEvent.t -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x10664) "onclose"
            (or_null_to_js
               (fun (x10666 : this:t -> ev:CloseEvent.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x10667 : Ojs.t) ->
                       fun (x10668 : Ojs.t) ->
                         any_to_js
                           (x10666 ~this:(t_of_js x10667)
                              ~ev:(CloseEvent.t_of_js x10668)))) x10665)
    let (get_onerror : 'tags this -> (this:t -> ev:Event.t -> any) or_null) =
      fun (x10670 : 'tags this) ->
        or_null_of_js
          (fun (x10672 : Ojs.t) ->
             fun ~this:(x10673 : t) ->
               fun ~ev:(x10674 : Event.t) ->
                 any_of_js
                   (Ojs.apply x10672
                      [|(t_to_js x10673);(Event.t_to_js x10674)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10670) "onerror")
    let (set_onerror :
      'tags this -> (this:t -> ev:Event.t -> any) or_null -> unit) =
      fun (x10675 : 'tags this) ->
        fun (x10676 : (this:t -> ev:Event.t -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x10675) "onerror"
            (or_null_to_js
               (fun (x10677 : this:t -> ev:Event.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x10678 : Ojs.t) ->
                       fun (x10679 : Ojs.t) ->
                         any_to_js
                           (x10677 ~this:(t_of_js x10678)
                              ~ev:(Event.t_of_js x10679)))) x10676)
    let (get_onmessage :
      'tags this -> (this:t -> ev:MessageEvent.t_0 -> any) or_null) =
      fun (x10681 : 'tags this) ->
        or_null_of_js
          (fun (x10683 : Ojs.t) ->
             fun ~this:(x10684 : t) ->
               fun ~ev:(x10685 : MessageEvent.t_0) ->
                 any_of_js
                   (Ojs.apply x10683
                      [|(t_to_js x10684);(MessageEvent.t_0_to_js x10685)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10681) "onmessage")
    let (set_onmessage :
      'tags this -> (this:t -> ev:MessageEvent.t_0 -> any) or_null -> unit) =
      fun (x10686 : 'tags this) ->
        fun (x10687 : (this:t -> ev:MessageEvent.t_0 -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x10686) "onmessage"
            (or_null_to_js
               (fun (x10688 : this:t -> ev:MessageEvent.t_0 -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x10689 : Ojs.t) ->
                       fun (x10690 : Ojs.t) ->
                         any_to_js
                           (x10688 ~this:(t_of_js x10689)
                              ~ev:(MessageEvent.t_0_of_js x10690)))) x10687)
    let (get_onopen : 'tags this -> (this:t -> ev:Event.t -> any) or_null) =
      fun (x10692 : 'tags this) ->
        or_null_of_js
          (fun (x10694 : Ojs.t) ->
             fun ~this:(x10695 : t) ->
               fun ~ev:(x10696 : Event.t) ->
                 any_of_js
                   (Ojs.apply x10694
                      [|(t_to_js x10695);(Event.t_to_js x10696)|]))
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10692) "onopen")
    let (set_onopen :
      'tags this -> (this:t -> ev:Event.t -> any) or_null -> unit) =
      fun (x10697 : 'tags this) ->
        fun (x10698 : (this:t -> ev:Event.t -> any) or_null) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x10697) "onopen"
            (or_null_to_js
               (fun (x10699 : this:t -> ev:Event.t -> any) ->
                  Ojs.fun_to_js 2
                    (fun (x10700 : Ojs.t) ->
                       fun (x10701 : Ojs.t) ->
                         any_to_js
                           (x10699 ~this:(t_of_js x10700)
                              ~ev:(Event.t_of_js x10701)))) x10698)
    let (get_protocol : 'tags this -> string) =
      fun (x10703 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10703) "protocol")
    let (get_readyState : 'tags this -> float) =
      fun (x10705 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10705) "readyState")
    let (get_url : 'tags this -> string) =
      fun (x10707 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10707) "url")
    let (close : 'tags this -> ?code:float -> ?reason:string -> unit -> unit)
      =
      fun (x10714 : 'tags this) ->
        fun ?code:(x10709 : float option) ->
          fun ?reason:(x10710 : string option) ->
            fun () ->
              ignore
                (let x10716 = this_to_js Obj.magic x10714 in
                 Ojs.call (Ojs.get_prop_ascii x10716 "close") "apply"
                   [|x10716;((let x10711 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x10709 with
                               | Some x10713 ->
                                   ignore
                                     (Ojs.call x10711 "push"
                                        [|(Ojs.float_to_js x10713)|])
                               | None -> ());
                              (match x10710 with
                               | Some x10712 ->
                                   ignore
                                     (Ojs.call x10711 "push"
                                        [|(Ojs.string_to_js x10712)|])
                               | None -> ());
                              x10711))|])
    let (send : 'tags this -> data:Blob.t or_string -> unit) =
      fun (x10719 : 'tags this) ->
        fun ~data:(x10717 : Blob.t or_string) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x10719) "send"
               [|(or_string_to_js Blob.t_to_js x10717)|])
    let (get_CLOSED : 'tags this -> float) =
      fun (x10721 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10721) "CLOSED")
    let (get_CLOSING : 'tags this -> float) =
      fun (x10723 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10723) "CLOSING")
    let (get_CONNECTING : 'tags this -> float) =
      fun (x10725 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10725) "CONNECTING")
    let (get_OPEN : 'tags this -> float) =
      fun (x10727 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10727) "OPEN")
    let (addEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x10737 : 'tags this) ->
        fun ~type_:(x10729 : 'K) ->
          fun ~listener:(x10730 : this:t -> ev:any -> any) ->
            fun
              ?options:(x10731 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x10739 = this_to_js Obj.magic x10737 in
                   Ojs.call (Ojs.get_prop_ascii x10739 "addEventListener")
                     "apply"
                     [|x10739;((let x10732 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x10732 "push"
                                     [|(Obj.magic x10729)|]);
                                ignore
                                  (Ojs.call x10732 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x10735 : Ojs.t) ->
                                             fun (x10736 : Ojs.t) ->
                                               any_to_js
                                                 (x10730
                                                    ~this:(t_of_js x10735)
                                                    ~ev:(any_of_js x10736))))|]);
                                (match x10731 with
                                 | Some x10733 ->
                                     ignore
                                       (Ojs.call x10732 "push"
                                          [|(or_boolean_to_js
                                               AddEventListenerOptions.t_to_js
                                               x10733)|])
                                 | None -> ());
                                x10732))|])
    let (addEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x10746 : 'tags this) ->
        fun ~type_:(x10740 : string) ->
          fun ~listener:(x10741 : EventListenerOrEventListenerObject.t) ->
            fun
              ?options:(x10742 : AddEventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x10748 = this_to_js Obj.magic x10746 in
                   Ojs.call (Ojs.get_prop_ascii x10748 "addEventListener")
                     "apply"
                     [|x10748;((let x10743 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x10743 "push"
                                     [|(Ojs.string_to_js x10740)|]);
                                ignore
                                  (Ojs.call x10743 "push"
                                     [|(EventListenerOrEventListenerObject.t_to_js
                                          x10741)|]);
                                (match x10742 with
                                 | Some x10744 ->
                                     ignore
                                       (Ojs.call x10743 "push"
                                          [|(or_boolean_to_js
                                               AddEventListenerOptions.t_to_js
                                               x10744)|])
                                 | None -> ());
                                x10743))|])
    let (removeEventListener :
      'tags this ->
        type_:'K ->
          listener:(this:t -> ev:any -> any) ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x10757 : 'tags this) ->
        fun ~type_:(x10749 : 'K) ->
          fun ~listener:(x10750 : this:t -> ev:any -> any) ->
            fun ?options:(x10751 : EventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x10759 = this_to_js Obj.magic x10757 in
                   Ojs.call (Ojs.get_prop_ascii x10759 "removeEventListener")
                     "apply"
                     [|x10759;((let x10752 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x10752 "push"
                                     [|(Obj.magic x10749)|]);
                                ignore
                                  (Ojs.call x10752 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x10755 : Ojs.t) ->
                                             fun (x10756 : Ojs.t) ->
                                               any_to_js
                                                 (x10750
                                                    ~this:(t_of_js x10755)
                                                    ~ev:(any_of_js x10756))))|]);
                                (match x10751 with
                                 | Some x10753 ->
                                     ignore
                                       (Ojs.call x10752 "push"
                                          [|(or_boolean_to_js
                                               EventListenerOptions.t_to_js
                                               x10753)|])
                                 | None -> ());
                                x10752))|])
    let (removeEventListener' :
      'tags this ->
        type_:string ->
          listener:EventListenerOrEventListenerObject.t ->
            ?options:EventListenerOptions.t or_boolean -> unit -> unit)
      =
      fun (x10766 : 'tags this) ->
        fun ~type_:(x10760 : string) ->
          fun ~listener:(x10761 : EventListenerOrEventListenerObject.t) ->
            fun ?options:(x10762 : EventListenerOptions.t or_boolean option)
              ->
              fun () ->
                ignore
                  (let x10768 = this_to_js Obj.magic x10766 in
                   Ojs.call (Ojs.get_prop_ascii x10768 "removeEventListener")
                     "apply"
                     [|x10768;((let x10763 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x10763 "push"
                                     [|(Ojs.string_to_js x10760)|]);
                                ignore
                                  (Ojs.call x10763 "push"
                                     [|(EventListenerOrEventListenerObject.t_to_js
                                          x10761)|]);
                                (match x10762 with
                                 | Some x10764 ->
                                     ignore
                                       (Ojs.call x10763 "push"
                                          [|(or_boolean_to_js
                                               EventListenerOptions.t_to_js
                                               x10764)|])
                                 | None -> ());
                                x10763))|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WebSocket")
             "prototype")
    let (create :
      url:URL.t or_string -> ?protocols:string list or_string -> unit -> t) =
      fun ~url:(x10769 : URL.t or_string) ->
        fun ?protocols:(x10770 : string list or_string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WebSocket")
                 (let x10771 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x10771 "push"
                       [|(or_string_to_js URL.t_to_js x10769)|]);
                  (match x10770 with
                   | Some x10772 ->
                       ignore
                         (Ojs.call x10771 "push"
                            [|(or_string_to_js
                                 (fun (x10773 : string list) ->
                                    Ojs.list_to_js Ojs.string_to_js x10773)
                                 x10772)|])
                   | None -> ());
                  x10771))
    let (closed : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WebSocket")
             "CLOSED")
    let (closing : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WebSocket")
             "CLOSING")
    let (connecting : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WebSocket")
             "CONNECTING")
    let (open_ : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WebSocket")
             "OPEN")
  end
module AnonymousInterface128 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x10777 : Ojs.t) -> x10777
    and t_to_js : t -> Ojs.t = fun (x10776 : Ojs.t) -> x10776
    let (get_prototype : t -> WebSocket.t) =
      fun (x10778 : t) ->
        WebSocket.t_of_js (Ojs.get_prop_ascii (t_to_js x10778) "prototype")
    let (set_prototype : t -> WebSocket.t -> unit) =
      fun (x10779 : t) ->
        fun (x10780 : WebSocket.t) ->
          Ojs.set_prop_ascii (t_to_js x10779) "prototype"
            (WebSocket.t_to_js x10780)
    let (create :
      t ->
        url:URL.t or_string ->
          ?protocols:string list or_string -> unit -> WebSocket.t)
      =
      fun (x10788 : t) ->
        fun ~url:(x10781 : URL.t or_string) ->
          fun ?protocols:(x10782 : string list or_string option) ->
            fun () ->
              WebSocket.t_of_js
                (Ojs.new_obj_arr (t_to_js x10788)
                   (let x10783 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x10783 "push"
                         [|(or_string_to_js URL.t_to_js x10781)|]);
                    (match x10782 with
                     | Some x10784 ->
                         ignore
                           (Ojs.call x10783 "push"
                              [|(or_string_to_js
                                   (fun (x10785 : string list) ->
                                      Ojs.list_to_js Ojs.string_to_js x10785)
                                   x10784)|])
                     | None -> ());
                    x10783))
    let (get_CLOSED : t -> float) =
      fun (x10789 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10789) "CLOSED")
    let (get_CLOSING : t -> float) =
      fun (x10790 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10790) "CLOSING")
    let (get_CONNECTING : t -> float) =
      fun (x10791 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10791) "CONNECTING")
    let (get_OPEN : t -> float) =
      fun (x10792 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10792) "OPEN")
  end
module WebGLVertexArrayObject =
  struct
    type t = [ `WebGLVertexArrayObject ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x10794 : Ojs.t) -> t_of_js x10794
    and t_0_to_js : t_0 -> Ojs.t = fun (x10793 : t) -> t_to_js x10793
    type tags = [ `WebGLVertexArrayObject ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `WebGLVertexArrayObject ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x10797 : Ojs.t) -> intf_of_js __tags_of_js x10797
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x10795 : __tags intf) -> intf_to_js __tags_to_js x10795
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLVertexArrayObject")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj
             (Ojs.get_prop_ascii Ojs.global "WebGLVertexArrayObject") 
             [||])
  end
module AnonymousInterface127 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x10800 : Ojs.t) -> x10800
    and t_to_js : t -> Ojs.t = fun (x10799 : Ojs.t) -> x10799
    let (get_prototype : t -> WebGLVertexArrayObject.t) =
      fun (x10801 : t) ->
        WebGLVertexArrayObject.t_of_js
          (Ojs.get_prop_ascii (t_to_js x10801) "prototype")
    let (set_prototype : t -> WebGLVertexArrayObject.t -> unit) =
      fun (x10802 : t) ->
        fun (x10803 : WebGLVertexArrayObject.t) ->
          Ojs.set_prop_ascii (t_to_js x10802) "prototype"
            (WebGLVertexArrayObject.t_to_js x10803)
    let (create : t -> WebGLVertexArrayObject.t) =
      fun (x10804 : t) ->
        WebGLVertexArrayObject.t_of_js (Ojs.new_obj (t_to_js x10804) [||])
  end
module WebGLUniformLocation =
  struct
    type t = [ `WebGLUniformLocation ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x10806 : Ojs.t) -> t_of_js x10806
    and t_0_to_js : t_0 -> Ojs.t = fun (x10805 : t) -> t_to_js x10805
    type tags = [ `WebGLUniformLocation ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `WebGLUniformLocation ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x10809 : Ojs.t) -> intf_of_js __tags_of_js x10809
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x10807 : __tags intf) -> intf_to_js __tags_to_js x10807
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLUniformLocation")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WebGLUniformLocation")
             [||])
  end
module AnonymousInterface126 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x10812 : Ojs.t) -> x10812
    and t_to_js : t -> Ojs.t = fun (x10811 : Ojs.t) -> x10811
    let (get_prototype : t -> WebGLUniformLocation.t) =
      fun (x10813 : t) ->
        WebGLUniformLocation.t_of_js
          (Ojs.get_prop_ascii (t_to_js x10813) "prototype")
    let (set_prototype : t -> WebGLUniformLocation.t -> unit) =
      fun (x10814 : t) ->
        fun (x10815 : WebGLUniformLocation.t) ->
          Ojs.set_prop_ascii (t_to_js x10814) "prototype"
            (WebGLUniformLocation.t_to_js x10815)
    let (create : t -> WebGLUniformLocation.t) =
      fun (x10816 : t) ->
        WebGLUniformLocation.t_of_js (Ojs.new_obj (t_to_js x10816) [||])
  end
module WebGLTransformFeedback =
  struct
    type t = [ `WebGLTransformFeedback ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x10818 : Ojs.t) -> t_of_js x10818
    and t_0_to_js : t_0 -> Ojs.t = fun (x10817 : t) -> t_to_js x10817
    type tags = [ `WebGLTransformFeedback ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `WebGLTransformFeedback ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x10821 : Ojs.t) -> intf_of_js __tags_of_js x10821
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x10819 : __tags intf) -> intf_to_js __tags_to_js x10819
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLTransformFeedback")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj
             (Ojs.get_prop_ascii Ojs.global "WebGLTransformFeedback") 
             [||])
  end
module AnonymousInterface125 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x10824 : Ojs.t) -> x10824
    and t_to_js : t -> Ojs.t = fun (x10823 : Ojs.t) -> x10823
    let (get_prototype : t -> WebGLTransformFeedback.t) =
      fun (x10825 : t) ->
        WebGLTransformFeedback.t_of_js
          (Ojs.get_prop_ascii (t_to_js x10825) "prototype")
    let (set_prototype : t -> WebGLTransformFeedback.t -> unit) =
      fun (x10826 : t) ->
        fun (x10827 : WebGLTransformFeedback.t) ->
          Ojs.set_prop_ascii (t_to_js x10826) "prototype"
            (WebGLTransformFeedback.t_to_js x10827)
    let (create : t -> WebGLTransformFeedback.t) =
      fun (x10828 : t) ->
        WebGLTransformFeedback.t_of_js (Ojs.new_obj (t_to_js x10828) [||])
  end
module WebGLTexture =
  struct
    type t = [ `WebGLTexture ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x10830 : Ojs.t) -> t_of_js x10830
    and t_0_to_js : t_0 -> Ojs.t = fun (x10829 : t) -> t_to_js x10829
    type tags = [ `WebGLTexture ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `WebGLTexture ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x10833 : Ojs.t) -> intf_of_js __tags_of_js x10833
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x10831 : __tags intf) -> intf_to_js __tags_to_js x10831
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WebGLTexture")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WebGLTexture") [||])
  end
module AnonymousInterface124 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x10836 : Ojs.t) -> x10836
    and t_to_js : t -> Ojs.t = fun (x10835 : Ojs.t) -> x10835
    let (get_prototype : t -> WebGLTexture.t) =
      fun (x10837 : t) ->
        WebGLTexture.t_of_js
          (Ojs.get_prop_ascii (t_to_js x10837) "prototype")
    let (set_prototype : t -> WebGLTexture.t -> unit) =
      fun (x10838 : t) ->
        fun (x10839 : WebGLTexture.t) ->
          Ojs.set_prop_ascii (t_to_js x10838) "prototype"
            (WebGLTexture.t_to_js x10839)
    let (create : t -> WebGLTexture.t) =
      fun (x10840 : t) ->
        WebGLTexture.t_of_js (Ojs.new_obj (t_to_js x10840) [||])
  end
module WebGLSync =
  struct
    type t = [ `WebGLSync ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x10842 : Ojs.t) -> t_of_js x10842
    and t_0_to_js : t_0 -> Ojs.t = fun (x10841 : t) -> t_to_js x10841
    type tags = [ `WebGLSync ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `WebGLSync ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x10845 : Ojs.t) -> intf_of_js __tags_of_js x10845
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x10843 : __tags intf) -> intf_to_js __tags_to_js x10843
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WebGLSync")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WebGLSync") [||])
  end
module AnonymousInterface123 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x10848 : Ojs.t) -> x10848
    and t_to_js : t -> Ojs.t = fun (x10847 : Ojs.t) -> x10847
    let (get_prototype : t -> WebGLSync.t) =
      fun (x10849 : t) ->
        WebGLSync.t_of_js (Ojs.get_prop_ascii (t_to_js x10849) "prototype")
    let (set_prototype : t -> WebGLSync.t -> unit) =
      fun (x10850 : t) ->
        fun (x10851 : WebGLSync.t) ->
          Ojs.set_prop_ascii (t_to_js x10850) "prototype"
            (WebGLSync.t_to_js x10851)
    let (create : t -> WebGLSync.t) =
      fun (x10852 : t) ->
        WebGLSync.t_of_js (Ojs.new_obj (t_to_js x10852) [||])
  end
module GLint =
  struct
    type t = float
    let rec t_of_js : Ojs.t -> t =
      fun (x10854 : Ojs.t) -> Ojs.float_of_js x10854
    and t_to_js : t -> Ojs.t = fun (x10853 : float) -> Ojs.float_to_js x10853
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x10856 : Ojs.t) -> t_of_js x10856
    and t_0_to_js : t_0 -> Ojs.t = fun (x10855 : t) -> t_to_js x10855
  end
module WebGLShaderPrecisionFormat =
  struct
    type t = [ `WebGLShaderPrecisionFormat ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x10858 : Ojs.t) -> t_of_js x10858
    and t_0_to_js : t_0 -> Ojs.t = fun (x10857 : t) -> t_to_js x10857
    type tags = [ `WebGLShaderPrecisionFormat ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `WebGLShaderPrecisionFormat ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x10861 : Ojs.t) -> intf_of_js __tags_of_js x10861
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x10859 : __tags intf) -> intf_to_js __tags_to_js x10859
    let (get_precision : 'tags this -> GLint.t) =
      fun (x10863 : 'tags this) ->
        GLint.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10863) "precision")
    let (get_rangeMax : 'tags this -> GLint.t) =
      fun (x10865 : 'tags this) ->
        GLint.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10865) "rangeMax")
    let (get_rangeMin : 'tags this -> GLint.t) =
      fun (x10867 : 'tags this) ->
        GLint.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x10867) "rangeMin")
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLShaderPrecisionFormat")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj
             (Ojs.get_prop_ascii Ojs.global "WebGLShaderPrecisionFormat")
             [||])
  end
module AnonymousInterface122 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x10870 : Ojs.t) -> x10870
    and t_to_js : t -> Ojs.t = fun (x10869 : Ojs.t) -> x10869
    let (get_prototype : t -> WebGLShaderPrecisionFormat.t) =
      fun (x10871 : t) ->
        WebGLShaderPrecisionFormat.t_of_js
          (Ojs.get_prop_ascii (t_to_js x10871) "prototype")
    let (set_prototype : t -> WebGLShaderPrecisionFormat.t -> unit) =
      fun (x10872 : t) ->
        fun (x10873 : WebGLShaderPrecisionFormat.t) ->
          Ojs.set_prop_ascii (t_to_js x10872) "prototype"
            (WebGLShaderPrecisionFormat.t_to_js x10873)
    let (create : t -> WebGLShaderPrecisionFormat.t) =
      fun (x10874 : t) ->
        WebGLShaderPrecisionFormat.t_of_js
          (Ojs.new_obj (t_to_js x10874) [||])
  end
module WebGLShader =
  struct
    type t = [ `WebGLShader ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x10876 : Ojs.t) -> t_of_js x10876
    and t_0_to_js : t_0 -> Ojs.t = fun (x10875 : t) -> t_to_js x10875
    type tags = [ `WebGLShader ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `WebGLShader ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x10879 : Ojs.t) -> intf_of_js __tags_of_js x10879
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x10877 : __tags intf) -> intf_to_js __tags_to_js x10877
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WebGLShader")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WebGLShader") [||])
  end
module AnonymousInterface121 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x10882 : Ojs.t) -> x10882
    and t_to_js : t -> Ojs.t = fun (x10881 : Ojs.t) -> x10881
    let (get_prototype : t -> WebGLShader.t) =
      fun (x10883 : t) ->
        WebGLShader.t_of_js (Ojs.get_prop_ascii (t_to_js x10883) "prototype")
    let (set_prototype : t -> WebGLShader.t -> unit) =
      fun (x10884 : t) ->
        fun (x10885 : WebGLShader.t) ->
          Ojs.set_prop_ascii (t_to_js x10884) "prototype"
            (WebGLShader.t_to_js x10885)
    let (create : t -> WebGLShader.t) =
      fun (x10886 : t) ->
        WebGLShader.t_of_js (Ojs.new_obj (t_to_js x10886) [||])
  end
module WebGLSampler =
  struct
    type t = [ `WebGLSampler ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x10888 : Ojs.t) -> t_of_js x10888
    and t_0_to_js : t_0 -> Ojs.t = fun (x10887 : t) -> t_to_js x10887
    type tags = [ `WebGLSampler ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `WebGLSampler ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x10891 : Ojs.t) -> intf_of_js __tags_of_js x10891
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x10889 : __tags intf) -> intf_to_js __tags_to_js x10889
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WebGLSampler")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WebGLSampler") [||])
  end
module AnonymousInterface120 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x10894 : Ojs.t) -> x10894
    and t_to_js : t -> Ojs.t = fun (x10893 : Ojs.t) -> x10893
    let (get_prototype : t -> WebGLSampler.t) =
      fun (x10895 : t) ->
        WebGLSampler.t_of_js
          (Ojs.get_prop_ascii (t_to_js x10895) "prototype")
    let (set_prototype : t -> WebGLSampler.t -> unit) =
      fun (x10896 : t) ->
        fun (x10897 : WebGLSampler.t) ->
          Ojs.set_prop_ascii (t_to_js x10896) "prototype"
            (WebGLSampler.t_to_js x10897)
    let (create : t -> WebGLSampler.t) =
      fun (x10898 : t) ->
        WebGLSampler.t_of_js (Ojs.new_obj (t_to_js x10898) [||])
  end
module TexImageSource =
  struct
    type t = (ImageBitmap.t, ImageData.t, OffscreenCanvas.t) union3
    let rec t_of_js : Ojs.t -> t =
      fun (x10903 : Ojs.t) ->
        union3_of_js ImageBitmap.t_of_js ImageData.t_of_js
          OffscreenCanvas.t_of_js x10903
    and t_to_js : t -> Ojs.t =
      fun (x10899 : (ImageBitmap.t, ImageData.t, OffscreenCanvas.t) union3)
        ->
        union3_to_js ImageBitmap.t_to_js ImageData.t_to_js
          OffscreenCanvas.t_to_js x10899
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x10908 : Ojs.t) -> t_of_js x10908
    and t_0_to_js : t_0 -> Ojs.t = fun (x10907 : t) -> t_to_js x10907
  end
module Int32List =
  struct
    type t = (Int32Array.t_0, GLint.t) or_array
    let rec t_of_js : Ojs.t -> t =
      fun (x10912 : Ojs.t) ->
        or_array_of_js Int32Array.t_0_of_js GLint.t_of_js x10912
    and t_to_js : t -> Ojs.t =
      fun (x10909 : (Int32Array.t_0, GLint.t) or_array) ->
        or_array_to_js Int32Array.t_0_to_js GLint.t_to_js x10909
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x10916 : Ojs.t) -> t_of_js x10916
    and t_0_to_js : t_0 -> Ojs.t = fun (x10915 : t) -> t_to_js x10915
  end
module GLsizeiptr =
  struct
    type t = float
    let rec t_of_js : Ojs.t -> t =
      fun (x10918 : Ojs.t) -> Ojs.float_of_js x10918
    and t_to_js : t -> Ojs.t = fun (x10917 : float) -> Ojs.float_to_js x10917
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x10920 : Ojs.t) -> t_of_js x10920
    and t_0_to_js : t_0 -> Ojs.t = fun (x10919 : t) -> t_to_js x10919
  end
module GLboolean =
  struct
    type t = bool
    let rec t_of_js : Ojs.t -> t =
      fun (x10922 : Ojs.t) -> Ojs.bool_of_js x10922
    and t_to_js : t -> Ojs.t = fun (x10921 : bool) -> Ojs.bool_to_js x10921
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x10924 : Ojs.t) -> t_of_js x10924
    and t_0_to_js : t_0 -> Ojs.t = fun (x10923 : t) -> t_to_js x10923
  end
module GLfloat =
  struct
    type t = float
    let rec t_of_js : Ojs.t -> t =
      fun (x10926 : Ojs.t) -> Ojs.float_of_js x10926
    and t_to_js : t -> Ojs.t = fun (x10925 : float) -> Ojs.float_to_js x10925
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x10928 : Ojs.t) -> t_of_js x10928
    and t_0_to_js : t_0 -> Ojs.t = fun (x10927 : t) -> t_to_js x10927
  end
module Float32List =
  struct
    type t = (Float32Array.t_0, GLfloat.t) or_array
    let rec t_of_js : Ojs.t -> t =
      fun (x10932 : Ojs.t) ->
        or_array_of_js Float32Array.t_0_of_js GLfloat.t_of_js x10932
    and t_to_js : t -> Ojs.t =
      fun (x10929 : (Float32Array.t_0, GLfloat.t) or_array) ->
        or_array_to_js Float32Array.t_0_to_js GLfloat.t_to_js x10929
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x10936 : Ojs.t) -> t_of_js x10936
    and t_0_to_js : t_0 -> Ojs.t = fun (x10935 : t) -> t_to_js x10935
  end
module GLsizei =
  struct
    type t = float
    let rec t_of_js : Ojs.t -> t =
      fun (x10938 : Ojs.t) -> Ojs.float_of_js x10938
    and t_to_js : t -> Ojs.t = fun (x10937 : float) -> Ojs.float_to_js x10937
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x10940 : Ojs.t) -> t_of_js x10940
    and t_0_to_js : t_0 -> Ojs.t = fun (x10939 : t) -> t_to_js x10939
  end
module GLintptr =
  struct
    type t = float
    let rec t_of_js : Ojs.t -> t =
      fun (x10942 : Ojs.t) -> Ojs.float_of_js x10942
    and t_to_js : t -> Ojs.t = fun (x10941 : float) -> Ojs.float_to_js x10941
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x10944 : Ojs.t) -> t_of_js x10944
    and t_0_to_js : t_0 -> Ojs.t = fun (x10943 : t) -> t_to_js x10943
  end
module WebGLRenderingContextOverloads =
  struct
    type t = [ `WebGLRenderingContextOverloads ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x10946 : Ojs.t) -> t_of_js x10946
    and t_0_to_js : t_0 -> Ojs.t = fun (x10945 : t) -> t_to_js x10945
    type tags = [ `WebGLRenderingContextOverloads ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `WebGLRenderingContextOverloads ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x10949 : Ojs.t) -> intf_of_js __tags_of_js x10949
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x10947 : __tags intf) -> intf_to_js __tags_to_js x10947
    let (uniform1fv :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          v:GLfloat.t Iterable.t_1 -> unit)
      =
      fun (x10955 : 'tags this) ->
        fun ~location:(x10951 : WebGLUniformLocation.t or_null) ->
          fun ~v:(x10953 : GLfloat.t Iterable.t_1) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x10955) "uniform1fv"
                 [|(or_null_to_js WebGLUniformLocation.t_to_js x10951);(
                   Iterable.t_1_to_js GLfloat.t_to_js x10953)|])
    let (uniform1iv :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          v:GLint.t Iterable.t_1 -> unit)
      =
      fun (x10961 : 'tags this) ->
        fun ~location:(x10957 : WebGLUniformLocation.t or_null) ->
          fun ~v:(x10959 : GLint.t Iterable.t_1) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x10961) "uniform1iv"
                 [|(or_null_to_js WebGLUniformLocation.t_to_js x10957);(
                   Iterable.t_1_to_js GLint.t_to_js x10959)|])
    let (uniform2fv :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          v:GLfloat.t Iterable.t_1 -> unit)
      =
      fun (x10967 : 'tags this) ->
        fun ~location:(x10963 : WebGLUniformLocation.t or_null) ->
          fun ~v:(x10965 : GLfloat.t Iterable.t_1) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x10967) "uniform2fv"
                 [|(or_null_to_js WebGLUniformLocation.t_to_js x10963);(
                   Iterable.t_1_to_js GLfloat.t_to_js x10965)|])
    let (uniform2iv :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          v:GLint.t Iterable.t_1 -> unit)
      =
      fun (x10973 : 'tags this) ->
        fun ~location:(x10969 : WebGLUniformLocation.t or_null) ->
          fun ~v:(x10971 : GLint.t Iterable.t_1) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x10973) "uniform2iv"
                 [|(or_null_to_js WebGLUniformLocation.t_to_js x10969);(
                   Iterable.t_1_to_js GLint.t_to_js x10971)|])
    let (uniform3fv :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          v:GLfloat.t Iterable.t_1 -> unit)
      =
      fun (x10979 : 'tags this) ->
        fun ~location:(x10975 : WebGLUniformLocation.t or_null) ->
          fun ~v:(x10977 : GLfloat.t Iterable.t_1) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x10979) "uniform3fv"
                 [|(or_null_to_js WebGLUniformLocation.t_to_js x10975);(
                   Iterable.t_1_to_js GLfloat.t_to_js x10977)|])
    let (uniform3iv :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          v:GLint.t Iterable.t_1 -> unit)
      =
      fun (x10985 : 'tags this) ->
        fun ~location:(x10981 : WebGLUniformLocation.t or_null) ->
          fun ~v:(x10983 : GLint.t Iterable.t_1) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x10985) "uniform3iv"
                 [|(or_null_to_js WebGLUniformLocation.t_to_js x10981);(
                   Iterable.t_1_to_js GLint.t_to_js x10983)|])
    let (uniform4fv :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          v:GLfloat.t Iterable.t_1 -> unit)
      =
      fun (x10991 : 'tags this) ->
        fun ~location:(x10987 : WebGLUniformLocation.t or_null) ->
          fun ~v:(x10989 : GLfloat.t Iterable.t_1) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x10991) "uniform4fv"
                 [|(or_null_to_js WebGLUniformLocation.t_to_js x10987);(
                   Iterable.t_1_to_js GLfloat.t_to_js x10989)|])
    let (uniform4iv :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          v:GLint.t Iterable.t_1 -> unit)
      =
      fun (x10997 : 'tags this) ->
        fun ~location:(x10993 : WebGLUniformLocation.t or_null) ->
          fun ~v:(x10995 : GLint.t Iterable.t_1) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x10997) "uniform4iv"
                 [|(or_null_to_js WebGLUniformLocation.t_to_js x10993);(
                   Iterable.t_1_to_js GLint.t_to_js x10995)|])
    let (uniformMatrix2fv :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          transpose:GLboolean.t -> value:GLfloat.t Iterable.t_1 -> unit)
      =
      fun (x11004 : 'tags this) ->
        fun ~location:(x10999 : WebGLUniformLocation.t or_null) ->
          fun ~transpose:(x11001 : GLboolean.t) ->
            fun ~value:(x11002 : GLfloat.t Iterable.t_1) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x11004) "uniformMatrix2fv"
                   [|(or_null_to_js WebGLUniformLocation.t_to_js x10999);(
                     GLboolean.t_to_js x11001);(Iterable.t_1_to_js
                                                  GLfloat.t_to_js x11002)|])
    let (uniformMatrix3fv :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          transpose:GLboolean.t -> value:GLfloat.t Iterable.t_1 -> unit)
      =
      fun (x11011 : 'tags this) ->
        fun ~location:(x11006 : WebGLUniformLocation.t or_null) ->
          fun ~transpose:(x11008 : GLboolean.t) ->
            fun ~value:(x11009 : GLfloat.t Iterable.t_1) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x11011) "uniformMatrix3fv"
                   [|(or_null_to_js WebGLUniformLocation.t_to_js x11006);(
                     GLboolean.t_to_js x11008);(Iterable.t_1_to_js
                                                  GLfloat.t_to_js x11009)|])
    let (uniformMatrix4fv :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          transpose:GLboolean.t -> value:GLfloat.t Iterable.t_1 -> unit)
      =
      fun (x11018 : 'tags this) ->
        fun ~location:(x11013 : WebGLUniformLocation.t or_null) ->
          fun ~transpose:(x11015 : GLboolean.t) ->
            fun ~value:(x11016 : GLfloat.t Iterable.t_1) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x11018) "uniformMatrix4fv"
                   [|(or_null_to_js WebGLUniformLocation.t_to_js x11013);(
                     GLboolean.t_to_js x11015);(Iterable.t_1_to_js
                                                  GLfloat.t_to_js x11016)|])
    let (bufferData :
      'tags this ->
        target:GLenum.t -> size:GLsizeiptr.t -> usage:GLenum.t -> unit)
      =
      fun (x11023 : 'tags this) ->
        fun ~target:(x11020 : GLenum.t) ->
          fun ~size:(x11021 : GLsizeiptr.t) ->
            fun ~usage:(x11022 : GLenum.t) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x11023) "bufferData"
                   [|(GLenum.t_to_js x11020);(GLsizeiptr.t_to_js x11021);(
                     GLenum.t_to_js x11022)|])
    let (bufferData' :
      'tags this ->
        target:GLenum.t ->
          data:BufferSource.t or_null -> usage:GLenum.t -> unit)
      =
      fun (x11029 : 'tags this) ->
        fun ~target:(x11025 : GLenum.t) ->
          fun ~data:(x11026 : BufferSource.t or_null) ->
            fun ~usage:(x11028 : GLenum.t) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x11029) "bufferData"
                   [|(GLenum.t_to_js x11025);(or_null_to_js
                                                BufferSource.t_to_js x11026);(
                     GLenum.t_to_js x11028)|])
    let (bufferSubData :
      'tags this ->
        target:GLenum.t -> offset:GLintptr.t -> data:BufferSource.t -> unit)
      =
      fun (x11034 : 'tags this) ->
        fun ~target:(x11031 : GLenum.t) ->
          fun ~offset:(x11032 : GLintptr.t) ->
            fun ~data:(x11033 : BufferSource.t) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x11034) "bufferSubData"
                   [|(GLenum.t_to_js x11031);(GLintptr.t_to_js x11032);(
                     BufferSource.t_to_js x11033)|])
    let (compressedTexImage2D :
      'tags this ->
        target:GLenum.t ->
          level:GLint.t ->
            internalformat:GLenum.t ->
              width:GLsizei.t ->
                height:GLsizei.t ->
                  border:GLint.t -> data:ArrayBufferView.t_0 -> unit)
      =
      fun (x11043 : 'tags this) ->
        fun ~target:(x11036 : GLenum.t) ->
          fun ~level:(x11037 : GLint.t) ->
            fun ~internalformat:(x11038 : GLenum.t) ->
              fun ~width:(x11039 : GLsizei.t) ->
                fun ~height:(x11040 : GLsizei.t) ->
                  fun ~border:(x11041 : GLint.t) ->
                    fun ~data:(x11042 : ArrayBufferView.t_0) ->
                      ignore
                        (Ojs.call (this_to_js Obj.magic x11043)
                           "compressedTexImage2D"
                           [|(GLenum.t_to_js x11036);(GLint.t_to_js x11037);(
                             GLenum.t_to_js x11038);(GLsizei.t_to_js x11039);(
                             GLsizei.t_to_js x11040);(GLint.t_to_js x11041);(
                             ArrayBufferView.t_0_to_js x11042)|])
    let (compressedTexSubImage2D :
      'tags this ->
        target:GLenum.t ->
          level:GLint.t ->
            xoffset:GLint.t ->
              yoffset:GLint.t ->
                width:GLsizei.t ->
                  height:GLsizei.t ->
                    format:GLenum.t -> data:ArrayBufferView.t_0 -> unit)
      =
      fun (x11053 : 'tags this) ->
        fun ~target:(x11045 : GLenum.t) ->
          fun ~level:(x11046 : GLint.t) ->
            fun ~xoffset:(x11047 : GLint.t) ->
              fun ~yoffset:(x11048 : GLint.t) ->
                fun ~width:(x11049 : GLsizei.t) ->
                  fun ~height:(x11050 : GLsizei.t) ->
                    fun ~format:(x11051 : GLenum.t) ->
                      fun ~data:(x11052 : ArrayBufferView.t_0) ->
                        ignore
                          (Ojs.call (this_to_js Obj.magic x11053)
                             "compressedTexSubImage2D"
                             [|(GLenum.t_to_js x11045);(GLint.t_to_js x11046);(
                               GLint.t_to_js x11047);(GLint.t_to_js x11048);(
                               GLsizei.t_to_js x11049);(GLsizei.t_to_js
                                                          x11050);(GLenum.t_to_js
                                                                    x11051);(
                               ArrayBufferView.t_0_to_js x11052)|])
    let (readPixels :
      'tags this ->
        x:GLint.t ->
          y:GLint.t ->
            width:GLsizei.t ->
              height:GLsizei.t ->
                format:GLenum.t ->
                  type_:GLenum.t ->
                    pixels:ArrayBufferView.t_0 or_null -> unit)
      =
      fun (x11063 : 'tags this) ->
        fun ~x:(x11055 : GLint.t) ->
          fun ~y:(x11056 : GLint.t) ->
            fun ~width:(x11057 : GLsizei.t) ->
              fun ~height:(x11058 : GLsizei.t) ->
                fun ~format:(x11059 : GLenum.t) ->
                  fun ~type_:(x11060 : GLenum.t) ->
                    fun ~pixels:(x11061 : ArrayBufferView.t_0 or_null) ->
                      ignore
                        (Ojs.call (this_to_js Obj.magic x11063) "readPixels"
                           [|(GLint.t_to_js x11055);(GLint.t_to_js x11056);(
                             GLsizei.t_to_js x11057);(GLsizei.t_to_js x11058);(
                             GLenum.t_to_js x11059);(GLenum.t_to_js x11060);(
                             or_null_to_js ArrayBufferView.t_0_to_js x11061)|])
    let (texImage2D :
      'tags this ->
        target:GLenum.t ->
          level:GLint.t ->
            internalformat:GLint.t ->
              width:GLsizei.t ->
                height:GLsizei.t ->
                  border:GLint.t ->
                    format:GLenum.t ->
                      type_:GLenum.t ->
                        pixels:ArrayBufferView.t_0 or_null -> unit)
      =
      fun (x11075 : 'tags this) ->
        fun ~target:(x11065 : GLenum.t) ->
          fun ~level:(x11066 : GLint.t) ->
            fun ~internalformat:(x11067 : GLint.t) ->
              fun ~width:(x11068 : GLsizei.t) ->
                fun ~height:(x11069 : GLsizei.t) ->
                  fun ~border:(x11070 : GLint.t) ->
                    fun ~format:(x11071 : GLenum.t) ->
                      fun ~type_:(x11072 : GLenum.t) ->
                        fun ~pixels:(x11073 : ArrayBufferView.t_0 or_null) ->
                          ignore
                            (Ojs.call (this_to_js Obj.magic x11075)
                               "texImage2D"
                               [|(GLenum.t_to_js x11065);(GLint.t_to_js
                                                            x11066);(
                                 GLint.t_to_js x11067);(GLsizei.t_to_js
                                                          x11068);(GLsizei.t_to_js
                                                                    x11069);(
                                 GLint.t_to_js x11070);(GLenum.t_to_js x11071);(
                                 GLenum.t_to_js x11072);(or_null_to_js
                                                           ArrayBufferView.t_0_to_js
                                                           x11073)|])
    let (texImage2D' :
      'tags this ->
        target:GLenum.t ->
          level:GLint.t ->
            internalformat:GLint.t ->
              format:GLenum.t ->
                type_:GLenum.t -> source:TexImageSource.t -> unit)
      =
      fun (x11083 : 'tags this) ->
        fun ~target:(x11077 : GLenum.t) ->
          fun ~level:(x11078 : GLint.t) ->
            fun ~internalformat:(x11079 : GLint.t) ->
              fun ~format:(x11080 : GLenum.t) ->
                fun ~type_:(x11081 : GLenum.t) ->
                  fun ~source:(x11082 : TexImageSource.t) ->
                    ignore
                      (Ojs.call (this_to_js Obj.magic x11083) "texImage2D"
                         [|(GLenum.t_to_js x11077);(GLint.t_to_js x11078);(
                           GLint.t_to_js x11079);(GLenum.t_to_js x11080);(
                           GLenum.t_to_js x11081);(TexImageSource.t_to_js
                                                     x11082)|])
    let (texSubImage2D :
      'tags this ->
        target:GLenum.t ->
          level:GLint.t ->
            xoffset:GLint.t ->
              yoffset:GLint.t ->
                width:GLsizei.t ->
                  height:GLsizei.t ->
                    format:GLenum.t ->
                      type_:GLenum.t ->
                        pixels:ArrayBufferView.t_0 or_null -> unit)
      =
      fun (x11095 : 'tags this) ->
        fun ~target:(x11085 : GLenum.t) ->
          fun ~level:(x11086 : GLint.t) ->
            fun ~xoffset:(x11087 : GLint.t) ->
              fun ~yoffset:(x11088 : GLint.t) ->
                fun ~width:(x11089 : GLsizei.t) ->
                  fun ~height:(x11090 : GLsizei.t) ->
                    fun ~format:(x11091 : GLenum.t) ->
                      fun ~type_:(x11092 : GLenum.t) ->
                        fun ~pixels:(x11093 : ArrayBufferView.t_0 or_null) ->
                          ignore
                            (Ojs.call (this_to_js Obj.magic x11095)
                               "texSubImage2D"
                               [|(GLenum.t_to_js x11085);(GLint.t_to_js
                                                            x11086);(
                                 GLint.t_to_js x11087);(GLint.t_to_js x11088);(
                                 GLsizei.t_to_js x11089);(GLsizei.t_to_js
                                                            x11090);(
                                 GLenum.t_to_js x11091);(GLenum.t_to_js
                                                           x11092);(or_null_to_js
                                                                    ArrayBufferView.t_0_to_js
                                                                    x11093)|])
    let (texSubImage2D' :
      'tags this ->
        target:GLenum.t ->
          level:GLint.t ->
            xoffset:GLint.t ->
              yoffset:GLint.t ->
                format:GLenum.t ->
                  type_:GLenum.t -> source:TexImageSource.t -> unit)
      =
      fun (x11104 : 'tags this) ->
        fun ~target:(x11097 : GLenum.t) ->
          fun ~level:(x11098 : GLint.t) ->
            fun ~xoffset:(x11099 : GLint.t) ->
              fun ~yoffset:(x11100 : GLint.t) ->
                fun ~format:(x11101 : GLenum.t) ->
                  fun ~type_:(x11102 : GLenum.t) ->
                    fun ~source:(x11103 : TexImageSource.t) ->
                      ignore
                        (Ojs.call (this_to_js Obj.magic x11104)
                           "texSubImage2D"
                           [|(GLenum.t_to_js x11097);(GLint.t_to_js x11098);(
                             GLint.t_to_js x11099);(GLint.t_to_js x11100);(
                             GLenum.t_to_js x11101);(GLenum.t_to_js x11102);(
                             TexImageSource.t_to_js x11103)|])
    let (uniform1fv' :
      'tags this ->
        location:WebGLUniformLocation.t or_null -> v:Float32List.t -> unit)
      =
      fun (x11109 : 'tags this) ->
        fun ~location:(x11106 : WebGLUniformLocation.t or_null) ->
          fun ~v:(x11108 : Float32List.t) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x11109) "uniform1fv"
                 [|(or_null_to_js WebGLUniformLocation.t_to_js x11106);(
                   Float32List.t_to_js x11108)|])
    let (uniform1iv' :
      'tags this ->
        location:WebGLUniformLocation.t or_null -> v:Int32List.t -> unit)
      =
      fun (x11114 : 'tags this) ->
        fun ~location:(x11111 : WebGLUniformLocation.t or_null) ->
          fun ~v:(x11113 : Int32List.t) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x11114) "uniform1iv"
                 [|(or_null_to_js WebGLUniformLocation.t_to_js x11111);(
                   Int32List.t_to_js x11113)|])
    let (uniform2fv' :
      'tags this ->
        location:WebGLUniformLocation.t or_null -> v:Float32List.t -> unit)
      =
      fun (x11119 : 'tags this) ->
        fun ~location:(x11116 : WebGLUniformLocation.t or_null) ->
          fun ~v:(x11118 : Float32List.t) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x11119) "uniform2fv"
                 [|(or_null_to_js WebGLUniformLocation.t_to_js x11116);(
                   Float32List.t_to_js x11118)|])
    let (uniform2iv' :
      'tags this ->
        location:WebGLUniformLocation.t or_null -> v:Int32List.t -> unit)
      =
      fun (x11124 : 'tags this) ->
        fun ~location:(x11121 : WebGLUniformLocation.t or_null) ->
          fun ~v:(x11123 : Int32List.t) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x11124) "uniform2iv"
                 [|(or_null_to_js WebGLUniformLocation.t_to_js x11121);(
                   Int32List.t_to_js x11123)|])
    let (uniform3fv' :
      'tags this ->
        location:WebGLUniformLocation.t or_null -> v:Float32List.t -> unit)
      =
      fun (x11129 : 'tags this) ->
        fun ~location:(x11126 : WebGLUniformLocation.t or_null) ->
          fun ~v:(x11128 : Float32List.t) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x11129) "uniform3fv"
                 [|(or_null_to_js WebGLUniformLocation.t_to_js x11126);(
                   Float32List.t_to_js x11128)|])
    let (uniform3iv' :
      'tags this ->
        location:WebGLUniformLocation.t or_null -> v:Int32List.t -> unit)
      =
      fun (x11134 : 'tags this) ->
        fun ~location:(x11131 : WebGLUniformLocation.t or_null) ->
          fun ~v:(x11133 : Int32List.t) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x11134) "uniform3iv"
                 [|(or_null_to_js WebGLUniformLocation.t_to_js x11131);(
                   Int32List.t_to_js x11133)|])
    let (uniform4fv' :
      'tags this ->
        location:WebGLUniformLocation.t or_null -> v:Float32List.t -> unit)
      =
      fun (x11139 : 'tags this) ->
        fun ~location:(x11136 : WebGLUniformLocation.t or_null) ->
          fun ~v:(x11138 : Float32List.t) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x11139) "uniform4fv"
                 [|(or_null_to_js WebGLUniformLocation.t_to_js x11136);(
                   Float32List.t_to_js x11138)|])
    let (uniform4iv' :
      'tags this ->
        location:WebGLUniformLocation.t or_null -> v:Int32List.t -> unit)
      =
      fun (x11144 : 'tags this) ->
        fun ~location:(x11141 : WebGLUniformLocation.t or_null) ->
          fun ~v:(x11143 : Int32List.t) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x11144) "uniform4iv"
                 [|(or_null_to_js WebGLUniformLocation.t_to_js x11141);(
                   Int32List.t_to_js x11143)|])
    let (uniformMatrix2fv' :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          transpose:GLboolean.t -> value:Float32List.t -> unit)
      =
      fun (x11150 : 'tags this) ->
        fun ~location:(x11146 : WebGLUniformLocation.t or_null) ->
          fun ~transpose:(x11148 : GLboolean.t) ->
            fun ~value:(x11149 : Float32List.t) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x11150) "uniformMatrix2fv"
                   [|(or_null_to_js WebGLUniformLocation.t_to_js x11146);(
                     GLboolean.t_to_js x11148);(Float32List.t_to_js x11149)|])
    let (uniformMatrix3fv' :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          transpose:GLboolean.t -> value:Float32List.t -> unit)
      =
      fun (x11156 : 'tags this) ->
        fun ~location:(x11152 : WebGLUniformLocation.t or_null) ->
          fun ~transpose:(x11154 : GLboolean.t) ->
            fun ~value:(x11155 : Float32List.t) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x11156) "uniformMatrix3fv"
                   [|(or_null_to_js WebGLUniformLocation.t_to_js x11152);(
                     GLboolean.t_to_js x11154);(Float32List.t_to_js x11155)|])
    let (uniformMatrix4fv' :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          transpose:GLboolean.t -> value:Float32List.t -> unit)
      =
      fun (x11162 : 'tags this) ->
        fun ~location:(x11158 : WebGLUniformLocation.t or_null) ->
          fun ~transpose:(x11160 : GLboolean.t) ->
            fun ~value:(x11161 : Float32List.t) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x11162) "uniformMatrix4fv"
                   [|(or_null_to_js WebGLUniformLocation.t_to_js x11158);(
                     GLboolean.t_to_js x11160);(Float32List.t_to_js x11161)|])
    let cast_from = Obj.magic
  end
module WebGLRenderbuffer =
  struct
    type t = [ `WebGLRenderbuffer ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11165 : Ojs.t) -> t_of_js x11165
    and t_0_to_js : t_0 -> Ojs.t = fun (x11164 : t) -> t_to_js x11164
    type tags = [ `WebGLRenderbuffer ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `WebGLRenderbuffer ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x11168 : Ojs.t) -> intf_of_js __tags_of_js x11168
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x11166 : __tags intf) -> intf_to_js __tags_to_js x11166
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderbuffer") "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WebGLRenderbuffer")
             [||])
  end
module WebGLFramebuffer =
  struct
    type t = [ `WebGLFramebuffer ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11171 : Ojs.t) -> t_of_js x11171
    and t_0_to_js : t_0 -> Ojs.t = fun (x11170 : t) -> t_to_js x11170
    type tags = [ `WebGLFramebuffer ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `WebGLFramebuffer ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x11174 : Ojs.t) -> intf_of_js __tags_of_js x11174
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x11172 : __tags intf) -> intf_to_js __tags_to_js x11172
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLFramebuffer") "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WebGLFramebuffer")
             [||])
  end
module WebGLPowerPreference =
  struct
    type t =
      [ `L_s107_low_power  | `L_s57_default  | `L_s85_high_performance ]
    let rec t_of_js : Ojs.t -> t =
      fun (x11177 : Ojs.t) ->
        let x11178 = x11177 in
        match Ojs.string_of_js x11178 with
        | "low-power" -> `L_s107_low_power
        | "default" -> `L_s57_default
        | "high-performance" -> `L_s85_high_performance
        | _ -> assert false
    and t_to_js : t -> Ojs.t =
      fun
        (x11176 :
          [ `L_s107_low_power  | `L_s57_default  | `L_s85_high_performance ])
        ->
        match x11176 with
        | `L_s107_low_power -> Ojs.string_to_js "low-power"
        | `L_s57_default -> Ojs.string_to_js "default"
        | `L_s85_high_performance -> Ojs.string_to_js "high-performance"
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11180 : Ojs.t) -> t_of_js x11180
    and t_0_to_js : t_0 -> Ojs.t = fun (x11179 : t) -> t_to_js x11179
  end
module WebGLContextAttributes =
  struct
    type t = [ `WebGLContextAttributes ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11182 : Ojs.t) -> t_of_js x11182
    and t_0_to_js : t_0 -> Ojs.t = fun (x11181 : t) -> t_to_js x11181
    type tags = [ `WebGLContextAttributes ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `WebGLContextAttributes ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x11185 : Ojs.t) -> intf_of_js __tags_of_js x11185
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x11183 : __tags intf) -> intf_to_js __tags_to_js x11183
    let (get_alpha : 'tags this -> bool) =
      fun (x11187 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11187) "alpha")
    let (set_alpha : 'tags this -> bool -> unit) =
      fun (x11189 : 'tags this) ->
        fun (x11190 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x11189) "alpha"
            (Ojs.bool_to_js x11190)
    let (get_antialias : 'tags this -> bool) =
      fun (x11192 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11192) "antialias")
    let (set_antialias : 'tags this -> bool -> unit) =
      fun (x11194 : 'tags this) ->
        fun (x11195 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x11194) "antialias"
            (Ojs.bool_to_js x11195)
    let (get_depth : 'tags this -> bool) =
      fun (x11197 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11197) "depth")
    let (set_depth : 'tags this -> bool -> unit) =
      fun (x11199 : 'tags this) ->
        fun (x11200 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x11199) "depth"
            (Ojs.bool_to_js x11200)
    let (get_desynchronized : 'tags this -> bool) =
      fun (x11202 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11202) "desynchronized")
    let (set_desynchronized : 'tags this -> bool -> unit) =
      fun (x11204 : 'tags this) ->
        fun (x11205 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x11204) "desynchronized"
            (Ojs.bool_to_js x11205)
    let (get_failIfMajorPerformanceCaveat : 'tags this -> bool) =
      fun (x11207 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11207)
             "failIfMajorPerformanceCaveat")
    let (set_failIfMajorPerformanceCaveat : 'tags this -> bool -> unit) =
      fun (x11209 : 'tags this) ->
        fun (x11210 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x11209)
            "failIfMajorPerformanceCaveat" (Ojs.bool_to_js x11210)
    let (get_powerPreference : 'tags this -> WebGLPowerPreference.t) =
      fun (x11212 : 'tags this) ->
        WebGLPowerPreference.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11212) "powerPreference")
    let (set_powerPreference : 'tags this -> WebGLPowerPreference.t -> unit)
      =
      fun (x11214 : 'tags this) ->
        fun (x11215 : WebGLPowerPreference.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x11214) "powerPreference"
            (WebGLPowerPreference.t_to_js x11215)
    let (get_premultipliedAlpha : 'tags this -> bool) =
      fun (x11217 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11217)
             "premultipliedAlpha")
    let (set_premultipliedAlpha : 'tags this -> bool -> unit) =
      fun (x11219 : 'tags this) ->
        fun (x11220 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x11219)
            "premultipliedAlpha" (Ojs.bool_to_js x11220)
    let (get_preserveDrawingBuffer : 'tags this -> bool) =
      fun (x11222 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11222)
             "preserveDrawingBuffer")
    let (set_preserveDrawingBuffer : 'tags this -> bool -> unit) =
      fun (x11224 : 'tags this) ->
        fun (x11225 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x11224)
            "preserveDrawingBuffer" (Ojs.bool_to_js x11225)
    let (get_stencil : 'tags this -> bool) =
      fun (x11227 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11227) "stencil")
    let (set_stencil : 'tags this -> bool -> unit) =
      fun (x11229 : 'tags this) ->
        fun (x11230 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x11229) "stencil"
            (Ojs.bool_to_js x11230)
    let cast_from = Obj.magic
  end
module WEBGL_lose_context =
  struct
    type t = [ `WEBGL_lose_context ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11233 : Ojs.t) -> t_of_js x11233
    and t_0_to_js : t_0 -> Ojs.t = fun (x11232 : t) -> t_to_js x11232
    type tags = [ `WEBGL_lose_context ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `WEBGL_lose_context ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x11236 : Ojs.t) -> intf_of_js __tags_of_js x11236
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x11234 : __tags intf) -> intf_to_js __tags_to_js x11234
    let (loseContext : 'tags this -> unit) =
      fun (x11238 : 'tags this) ->
        ignore (Ojs.call (this_to_js Obj.magic x11238) "loseContext" [||])
    let (restoreContext : 'tags this -> unit) =
      fun (x11240 : 'tags this) ->
        ignore (Ojs.call (this_to_js Obj.magic x11240) "restoreContext" [||])
    let cast_from = Obj.magic
  end
module WEBGL_draw_buffers =
  struct
    type t = [ `WEBGL_draw_buffers ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11243 : Ojs.t) -> t_of_js x11243
    and t_0_to_js : t_0 -> Ojs.t = fun (x11242 : t) -> t_to_js x11242
    type tags = [ `WEBGL_draw_buffers ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `WEBGL_draw_buffers ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x11246 : Ojs.t) -> intf_of_js __tags_of_js x11246
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x11244 : __tags intf) -> intf_to_js __tags_to_js x11244
    let (drawBuffersWEBGL :
      'tags this -> buffers:GLenum.t Iterable.t_1 -> unit) =
      fun (x11250 : 'tags this) ->
        fun ~buffers:(x11248 : GLenum.t Iterable.t_1) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x11250) "drawBuffersWEBGL"
               [|(Iterable.t_1_to_js GLenum.t_to_js x11248)|])
    let (drawBuffersWEBGL' : 'tags this -> buffers:GLenum.t list -> unit) =
      fun (x11254 : 'tags this) ->
        fun ~buffers:(x11252 : GLenum.t list) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x11254) "drawBuffersWEBGL"
               [|(Ojs.list_to_js GLenum.t_to_js x11252)|])
    let (get_COLOR_ATTACHMENT0_WEBGL : 'tags this -> GLenum.t) =
      fun (x11256 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11256)
             "COLOR_ATTACHMENT0_WEBGL")
    let (get_COLOR_ATTACHMENT10_WEBGL : 'tags this -> GLenum.t) =
      fun (x11258 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11258)
             "COLOR_ATTACHMENT10_WEBGL")
    let (get_COLOR_ATTACHMENT11_WEBGL : 'tags this -> GLenum.t) =
      fun (x11260 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11260)
             "COLOR_ATTACHMENT11_WEBGL")
    let (get_COLOR_ATTACHMENT12_WEBGL : 'tags this -> GLenum.t) =
      fun (x11262 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11262)
             "COLOR_ATTACHMENT12_WEBGL")
    let (get_COLOR_ATTACHMENT13_WEBGL : 'tags this -> GLenum.t) =
      fun (x11264 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11264)
             "COLOR_ATTACHMENT13_WEBGL")
    let (get_COLOR_ATTACHMENT14_WEBGL : 'tags this -> GLenum.t) =
      fun (x11266 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11266)
             "COLOR_ATTACHMENT14_WEBGL")
    let (get_COLOR_ATTACHMENT15_WEBGL : 'tags this -> GLenum.t) =
      fun (x11268 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11268)
             "COLOR_ATTACHMENT15_WEBGL")
    let (get_COLOR_ATTACHMENT1_WEBGL : 'tags this -> GLenum.t) =
      fun (x11270 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11270)
             "COLOR_ATTACHMENT1_WEBGL")
    let (get_COLOR_ATTACHMENT2_WEBGL : 'tags this -> GLenum.t) =
      fun (x11272 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11272)
             "COLOR_ATTACHMENT2_WEBGL")
    let (get_COLOR_ATTACHMENT3_WEBGL : 'tags this -> GLenum.t) =
      fun (x11274 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11274)
             "COLOR_ATTACHMENT3_WEBGL")
    let (get_COLOR_ATTACHMENT4_WEBGL : 'tags this -> GLenum.t) =
      fun (x11276 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11276)
             "COLOR_ATTACHMENT4_WEBGL")
    let (get_COLOR_ATTACHMENT5_WEBGL : 'tags this -> GLenum.t) =
      fun (x11278 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11278)
             "COLOR_ATTACHMENT5_WEBGL")
    let (get_COLOR_ATTACHMENT6_WEBGL : 'tags this -> GLenum.t) =
      fun (x11280 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11280)
             "COLOR_ATTACHMENT6_WEBGL")
    let (get_COLOR_ATTACHMENT7_WEBGL : 'tags this -> GLenum.t) =
      fun (x11282 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11282)
             "COLOR_ATTACHMENT7_WEBGL")
    let (get_COLOR_ATTACHMENT8_WEBGL : 'tags this -> GLenum.t) =
      fun (x11284 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11284)
             "COLOR_ATTACHMENT8_WEBGL")
    let (get_COLOR_ATTACHMENT9_WEBGL : 'tags this -> GLenum.t) =
      fun (x11286 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11286)
             "COLOR_ATTACHMENT9_WEBGL")
    let (get_DRAW_BUFFER0_WEBGL : 'tags this -> GLenum.t) =
      fun (x11288 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11288)
             "DRAW_BUFFER0_WEBGL")
    let (get_DRAW_BUFFER10_WEBGL : 'tags this -> GLenum.t) =
      fun (x11290 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11290)
             "DRAW_BUFFER10_WEBGL")
    let (get_DRAW_BUFFER11_WEBGL : 'tags this -> GLenum.t) =
      fun (x11292 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11292)
             "DRAW_BUFFER11_WEBGL")
    let (get_DRAW_BUFFER12_WEBGL : 'tags this -> GLenum.t) =
      fun (x11294 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11294)
             "DRAW_BUFFER12_WEBGL")
    let (get_DRAW_BUFFER13_WEBGL : 'tags this -> GLenum.t) =
      fun (x11296 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11296)
             "DRAW_BUFFER13_WEBGL")
    let (get_DRAW_BUFFER14_WEBGL : 'tags this -> GLenum.t) =
      fun (x11298 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11298)
             "DRAW_BUFFER14_WEBGL")
    let (get_DRAW_BUFFER15_WEBGL : 'tags this -> GLenum.t) =
      fun (x11300 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11300)
             "DRAW_BUFFER15_WEBGL")
    let (get_DRAW_BUFFER1_WEBGL : 'tags this -> GLenum.t) =
      fun (x11302 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11302)
             "DRAW_BUFFER1_WEBGL")
    let (get_DRAW_BUFFER2_WEBGL : 'tags this -> GLenum.t) =
      fun (x11304 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11304)
             "DRAW_BUFFER2_WEBGL")
    let (get_DRAW_BUFFER3_WEBGL : 'tags this -> GLenum.t) =
      fun (x11306 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11306)
             "DRAW_BUFFER3_WEBGL")
    let (get_DRAW_BUFFER4_WEBGL : 'tags this -> GLenum.t) =
      fun (x11308 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11308)
             "DRAW_BUFFER4_WEBGL")
    let (get_DRAW_BUFFER5_WEBGL : 'tags this -> GLenum.t) =
      fun (x11310 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11310)
             "DRAW_BUFFER5_WEBGL")
    let (get_DRAW_BUFFER6_WEBGL : 'tags this -> GLenum.t) =
      fun (x11312 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11312)
             "DRAW_BUFFER6_WEBGL")
    let (get_DRAW_BUFFER7_WEBGL : 'tags this -> GLenum.t) =
      fun (x11314 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11314)
             "DRAW_BUFFER7_WEBGL")
    let (get_DRAW_BUFFER8_WEBGL : 'tags this -> GLenum.t) =
      fun (x11316 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11316)
             "DRAW_BUFFER8_WEBGL")
    let (get_DRAW_BUFFER9_WEBGL : 'tags this -> GLenum.t) =
      fun (x11318 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11318)
             "DRAW_BUFFER9_WEBGL")
    let (get_MAX_COLOR_ATTACHMENTS_WEBGL : 'tags this -> GLenum.t) =
      fun (x11320 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11320)
             "MAX_COLOR_ATTACHMENTS_WEBGL")
    let (get_MAX_DRAW_BUFFERS_WEBGL : 'tags this -> GLenum.t) =
      fun (x11322 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11322)
             "MAX_DRAW_BUFFERS_WEBGL")
    let cast_from = Obj.magic
  end
module WEBGL_depth_texture =
  struct
    type t = [ `WEBGL_depth_texture ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11325 : Ojs.t) -> t_of_js x11325
    and t_0_to_js : t_0 -> Ojs.t = fun (x11324 : t) -> t_to_js x11324
    type tags = [ `WEBGL_depth_texture ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `WEBGL_depth_texture ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x11328 : Ojs.t) -> intf_of_js __tags_of_js x11328
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x11326 : __tags intf) -> intf_to_js __tags_to_js x11326
    let (get_UNSIGNED_INT_24_8_WEBGL : 'tags this -> GLenum.t) =
      fun (x11330 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11330)
             "UNSIGNED_INT_24_8_WEBGL")
    let cast_from = Obj.magic
  end
module WEBGL_debug_shaders =
  struct
    type t = [ `WEBGL_debug_shaders ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11333 : Ojs.t) -> t_of_js x11333
    and t_0_to_js : t_0 -> Ojs.t = fun (x11332 : t) -> t_to_js x11332
    type tags = [ `WEBGL_debug_shaders ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `WEBGL_debug_shaders ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x11336 : Ojs.t) -> intf_of_js __tags_of_js x11336
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x11334 : __tags intf) -> intf_to_js __tags_to_js x11334
    let (getTranslatedShaderSource :
      'tags this -> shader:WebGLShader.t -> string) =
      fun (x11339 : 'tags this) ->
        fun ~shader:(x11338 : WebGLShader.t) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x11339)
               "getTranslatedShaderSource" [|(WebGLShader.t_to_js x11338)|])
    let cast_from = Obj.magic
  end
module WEBGL_debug_renderer_info =
  struct
    type t = [ `WEBGL_debug_renderer_info ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11342 : Ojs.t) -> t_of_js x11342
    and t_0_to_js : t_0 -> Ojs.t = fun (x11341 : t) -> t_to_js x11341
    type tags = [ `WEBGL_debug_renderer_info ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `WEBGL_debug_renderer_info ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x11345 : Ojs.t) -> intf_of_js __tags_of_js x11345
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x11343 : __tags intf) -> intf_to_js __tags_to_js x11343
    let (get_UNMASKED_RENDERER_WEBGL : 'tags this -> GLenum.t) =
      fun (x11347 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11347)
             "UNMASKED_RENDERER_WEBGL")
    let (get_UNMASKED_VENDOR_WEBGL : 'tags this -> GLenum.t) =
      fun (x11349 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11349)
             "UNMASKED_VENDOR_WEBGL")
    let cast_from = Obj.magic
  end
module WEBGL_compressed_texture_s3tc_srgb =
  struct
    type t = [ `WEBGL_compressed_texture_s3tc_srgb ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11352 : Ojs.t) -> t_of_js x11352
    and t_0_to_js : t_0 -> Ojs.t = fun (x11351 : t) -> t_to_js x11351
    type tags = [ `WEBGL_compressed_texture_s3tc_srgb ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `WEBGL_compressed_texture_s3tc_srgb ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x11355 : Ojs.t) -> intf_of_js __tags_of_js x11355
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x11353 : __tags intf) -> intf_to_js __tags_to_js x11353
    let (get_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT : 'tags this -> GLenum.t) =
      fun (x11357 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11357)
             "COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT")
    let (get_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT : 'tags this -> GLenum.t) =
      fun (x11359 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11359)
             "COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT")
    let (get_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT : 'tags this -> GLenum.t) =
      fun (x11361 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11361)
             "COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT")
    let (get_COMPRESSED_SRGB_S3TC_DXT1_EXT : 'tags this -> GLenum.t) =
      fun (x11363 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11363)
             "COMPRESSED_SRGB_S3TC_DXT1_EXT")
    let cast_from = Obj.magic
  end
module WEBGL_compressed_texture_s3tc =
  struct
    type t = [ `WEBGL_compressed_texture_s3tc ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11366 : Ojs.t) -> t_of_js x11366
    and t_0_to_js : t_0 -> Ojs.t = fun (x11365 : t) -> t_to_js x11365
    type tags = [ `WEBGL_compressed_texture_s3tc ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `WEBGL_compressed_texture_s3tc ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x11369 : Ojs.t) -> intf_of_js __tags_of_js x11369
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x11367 : __tags intf) -> intf_to_js __tags_to_js x11367
    let (get_COMPRESSED_RGBA_S3TC_DXT1_EXT : 'tags this -> GLenum.t) =
      fun (x11371 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11371)
             "COMPRESSED_RGBA_S3TC_DXT1_EXT")
    let (get_COMPRESSED_RGBA_S3TC_DXT3_EXT : 'tags this -> GLenum.t) =
      fun (x11373 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11373)
             "COMPRESSED_RGBA_S3TC_DXT3_EXT")
    let (get_COMPRESSED_RGBA_S3TC_DXT5_EXT : 'tags this -> GLenum.t) =
      fun (x11375 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11375)
             "COMPRESSED_RGBA_S3TC_DXT5_EXT")
    let (get_COMPRESSED_RGB_S3TC_DXT1_EXT : 'tags this -> GLenum.t) =
      fun (x11377 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11377)
             "COMPRESSED_RGB_S3TC_DXT1_EXT")
    let cast_from = Obj.magic
  end
module WEBGL_compressed_texture_pvrtc =
  struct
    type t = [ `WEBGL_compressed_texture_pvrtc ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11380 : Ojs.t) -> t_of_js x11380
    and t_0_to_js : t_0 -> Ojs.t = fun (x11379 : t) -> t_to_js x11379
    type tags = [ `WEBGL_compressed_texture_pvrtc ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `WEBGL_compressed_texture_pvrtc ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x11383 : Ojs.t) -> intf_of_js __tags_of_js x11383
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x11381 : __tags intf) -> intf_to_js __tags_to_js x11381
    let (get_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG : 'tags this -> GLenum.t) =
      fun (x11385 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11385)
             "COMPRESSED_RGBA_PVRTC_2BPPV1_IMG")
    let (get_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG : 'tags this -> GLenum.t) =
      fun (x11387 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11387)
             "COMPRESSED_RGBA_PVRTC_4BPPV1_IMG")
    let (get_COMPRESSED_RGB_PVRTC_2BPPV1_IMG : 'tags this -> GLenum.t) =
      fun (x11389 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11389)
             "COMPRESSED_RGB_PVRTC_2BPPV1_IMG")
    let (get_COMPRESSED_RGB_PVRTC_4BPPV1_IMG : 'tags this -> GLenum.t) =
      fun (x11391 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11391)
             "COMPRESSED_RGB_PVRTC_4BPPV1_IMG")
    let cast_from = Obj.magic
  end
module WEBGL_compressed_texture_etc1 =
  struct
    type t = [ `WEBGL_compressed_texture_etc1 ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11394 : Ojs.t) -> t_of_js x11394
    and t_0_to_js : t_0 -> Ojs.t = fun (x11393 : t) -> t_to_js x11393
    type tags = [ `WEBGL_compressed_texture_etc1 ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `WEBGL_compressed_texture_etc1 ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x11397 : Ojs.t) -> intf_of_js __tags_of_js x11397
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x11395 : __tags intf) -> intf_to_js __tags_to_js x11395
    let (get_COMPRESSED_RGB_ETC1_WEBGL : 'tags this -> GLenum.t) =
      fun (x11399 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11399)
             "COMPRESSED_RGB_ETC1_WEBGL")
    let cast_from = Obj.magic
  end
module WEBGL_compressed_texture_etc =
  struct
    type t = [ `WEBGL_compressed_texture_etc ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11402 : Ojs.t) -> t_of_js x11402
    and t_0_to_js : t_0 -> Ojs.t = fun (x11401 : t) -> t_to_js x11401
    type tags = [ `WEBGL_compressed_texture_etc ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `WEBGL_compressed_texture_etc ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x11405 : Ojs.t) -> intf_of_js __tags_of_js x11405
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x11403 : __tags intf) -> intf_to_js __tags_to_js x11403
    let (get_COMPRESSED_R11_EAC : 'tags this -> GLenum.t) =
      fun (x11407 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11407)
             "COMPRESSED_R11_EAC")
    let (get_COMPRESSED_RG11_EAC : 'tags this -> GLenum.t) =
      fun (x11409 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11409)
             "COMPRESSED_RG11_EAC")
    let (get_COMPRESSED_RGB8_ETC2 : 'tags this -> GLenum.t) =
      fun (x11411 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11411)
             "COMPRESSED_RGB8_ETC2")
    let (get_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 :
      'tags this -> GLenum.t) =
      fun (x11413 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11413)
             "COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2")
    let (get_COMPRESSED_RGBA8_ETC2_EAC : 'tags this -> GLenum.t) =
      fun (x11415 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11415)
             "COMPRESSED_RGBA8_ETC2_EAC")
    let (get_COMPRESSED_SIGNED_R11_EAC : 'tags this -> GLenum.t) =
      fun (x11417 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11417)
             "COMPRESSED_SIGNED_R11_EAC")
    let (get_COMPRESSED_SIGNED_RG11_EAC : 'tags this -> GLenum.t) =
      fun (x11419 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11419)
             "COMPRESSED_SIGNED_RG11_EAC")
    let (get_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : 'tags this -> GLenum.t) =
      fun (x11421 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11421)
             "COMPRESSED_SRGB8_ALPHA8_ETC2_EAC")
    let (get_COMPRESSED_SRGB8_ETC2 : 'tags this -> GLenum.t) =
      fun (x11423 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11423)
             "COMPRESSED_SRGB8_ETC2")
    let (get_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 :
      'tags this -> GLenum.t) =
      fun (x11425 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11425)
             "COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2")
    let cast_from = Obj.magic
  end
module WEBGL_compressed_texture_astc =
  struct
    type t = [ `WEBGL_compressed_texture_astc ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11428 : Ojs.t) -> t_of_js x11428
    and t_0_to_js : t_0 -> Ojs.t = fun (x11427 : t) -> t_to_js x11427
    type tags = [ `WEBGL_compressed_texture_astc ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `WEBGL_compressed_texture_astc ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x11431 : Ojs.t) -> intf_of_js __tags_of_js x11431
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x11429 : __tags intf) -> intf_to_js __tags_to_js x11429
    let (getSupportedProfiles : 'tags this -> string list) =
      fun (x11433 : 'tags this) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x11433) "getSupportedProfiles" [||])
    let (get_COMPRESSED_RGBA_ASTC_10x10_KHR : 'tags this -> GLenum.t) =
      fun (x11436 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11436)
             "COMPRESSED_RGBA_ASTC_10x10_KHR")
    let (get_COMPRESSED_RGBA_ASTC_10x5_KHR : 'tags this -> GLenum.t) =
      fun (x11438 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11438)
             "COMPRESSED_RGBA_ASTC_10x5_KHR")
    let (get_COMPRESSED_RGBA_ASTC_10x6_KHR : 'tags this -> GLenum.t) =
      fun (x11440 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11440)
             "COMPRESSED_RGBA_ASTC_10x6_KHR")
    let (get_COMPRESSED_RGBA_ASTC_10x8_KHR : 'tags this -> GLenum.t) =
      fun (x11442 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11442)
             "COMPRESSED_RGBA_ASTC_10x8_KHR")
    let (get_COMPRESSED_RGBA_ASTC_12x10_KHR : 'tags this -> GLenum.t) =
      fun (x11444 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11444)
             "COMPRESSED_RGBA_ASTC_12x10_KHR")
    let (get_COMPRESSED_RGBA_ASTC_12x12_KHR : 'tags this -> GLenum.t) =
      fun (x11446 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11446)
             "COMPRESSED_RGBA_ASTC_12x12_KHR")
    let (get_COMPRESSED_RGBA_ASTC_4x4_KHR : 'tags this -> GLenum.t) =
      fun (x11448 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11448)
             "COMPRESSED_RGBA_ASTC_4x4_KHR")
    let (get_COMPRESSED_RGBA_ASTC_5x4_KHR : 'tags this -> GLenum.t) =
      fun (x11450 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11450)
             "COMPRESSED_RGBA_ASTC_5x4_KHR")
    let (get_COMPRESSED_RGBA_ASTC_5x5_KHR : 'tags this -> GLenum.t) =
      fun (x11452 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11452)
             "COMPRESSED_RGBA_ASTC_5x5_KHR")
    let (get_COMPRESSED_RGBA_ASTC_6x5_KHR : 'tags this -> GLenum.t) =
      fun (x11454 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11454)
             "COMPRESSED_RGBA_ASTC_6x5_KHR")
    let (get_COMPRESSED_RGBA_ASTC_6x6_KHR : 'tags this -> GLenum.t) =
      fun (x11456 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11456)
             "COMPRESSED_RGBA_ASTC_6x6_KHR")
    let (get_COMPRESSED_RGBA_ASTC_8x5_KHR : 'tags this -> GLenum.t) =
      fun (x11458 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11458)
             "COMPRESSED_RGBA_ASTC_8x5_KHR")
    let (get_COMPRESSED_RGBA_ASTC_8x6_KHR : 'tags this -> GLenum.t) =
      fun (x11460 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11460)
             "COMPRESSED_RGBA_ASTC_8x6_KHR")
    let (get_COMPRESSED_RGBA_ASTC_8x8_KHR : 'tags this -> GLenum.t) =
      fun (x11462 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11462)
             "COMPRESSED_RGBA_ASTC_8x8_KHR")
    let (get_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : 'tags this -> GLenum.t)
      =
      fun (x11464 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11464)
             "COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR")
    let (get_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : 'tags this -> GLenum.t)
      =
      fun (x11466 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11466)
             "COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR")
    let (get_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : 'tags this -> GLenum.t)
      =
      fun (x11468 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11468)
             "COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR")
    let (get_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : 'tags this -> GLenum.t)
      =
      fun (x11470 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11470)
             "COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR")
    let (get_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : 'tags this -> GLenum.t)
      =
      fun (x11472 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11472)
             "COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR")
    let (get_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : 'tags this -> GLenum.t)
      =
      fun (x11474 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11474)
             "COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR")
    let (get_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : 'tags this -> GLenum.t) =
      fun (x11476 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11476)
             "COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR")
    let (get_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : 'tags this -> GLenum.t) =
      fun (x11478 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11478)
             "COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR")
    let (get_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : 'tags this -> GLenum.t) =
      fun (x11480 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11480)
             "COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR")
    let (get_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : 'tags this -> GLenum.t) =
      fun (x11482 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11482)
             "COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR")
    let (get_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : 'tags this -> GLenum.t) =
      fun (x11484 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11484)
             "COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR")
    let (get_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : 'tags this -> GLenum.t) =
      fun (x11486 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11486)
             "COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR")
    let (get_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : 'tags this -> GLenum.t) =
      fun (x11488 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11488)
             "COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR")
    let (get_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : 'tags this -> GLenum.t) =
      fun (x11490 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11490)
             "COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR")
    let cast_from = Obj.magic
  end
module WEBGL_color_buffer_float =
  struct
    type t = [ `WEBGL_color_buffer_float ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11493 : Ojs.t) -> t_of_js x11493
    and t_0_to_js : t_0 -> Ojs.t = fun (x11492 : t) -> t_to_js x11492
    type tags = [ `WEBGL_color_buffer_float ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `WEBGL_color_buffer_float ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x11496 : Ojs.t) -> intf_of_js __tags_of_js x11496
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x11494 : __tags intf) -> intf_to_js __tags_to_js x11494
    let (get_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT :
      'tags this -> GLenum.t) =
      fun (x11498 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11498)
             "FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT")
    let (get_RGBA32F_EXT : 'tags this -> GLenum.t) =
      fun (x11500 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11500) "RGBA32F_EXT")
    let (get_UNSIGNED_NORMALIZED_EXT : 'tags this -> GLenum.t) =
      fun (x11502 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11502)
             "UNSIGNED_NORMALIZED_EXT")
    let cast_from = Obj.magic
  end
module OVR_multiview2 =
  struct
    type t = [ `OVR_multiview2 ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11505 : Ojs.t) -> t_of_js x11505
    and t_0_to_js : t_0 -> Ojs.t = fun (x11504 : t) -> t_to_js x11504
    type tags = [ `OVR_multiview2 ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `OVR_multiview2 ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x11508 : Ojs.t) -> intf_of_js __tags_of_js x11508
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x11506 : __tags intf) -> intf_to_js __tags_to_js x11506
    let (framebufferTextureMultiviewOVR :
      'tags this ->
        target:GLenum.t ->
          attachment:GLenum.t ->
            texture:WebGLTexture.t or_null ->
              level:GLint.t ->
                baseViewIndex:GLint.t -> numViews:GLsizei.t -> unit)
      =
      fun (x11517 : 'tags this) ->
        fun ~target:(x11510 : GLenum.t) ->
          fun ~attachment:(x11511 : GLenum.t) ->
            fun ~texture:(x11512 : WebGLTexture.t or_null) ->
              fun ~level:(x11514 : GLint.t) ->
                fun ~baseViewIndex:(x11515 : GLint.t) ->
                  fun ~numViews:(x11516 : GLsizei.t) ->
                    ignore
                      (Ojs.call (this_to_js Obj.magic x11517)
                         "framebufferTextureMultiviewOVR"
                         [|(GLenum.t_to_js x11510);(GLenum.t_to_js x11511);(
                           or_null_to_js WebGLTexture.t_to_js x11512);(
                           GLint.t_to_js x11514);(GLint.t_to_js x11515);(
                           GLsizei.t_to_js x11516)|])
    let (get_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR :
      'tags this -> GLenum.t) =
      fun (x11519 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11519)
             "FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR")
    let (get_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR :
      'tags this -> GLenum.t) =
      fun (x11521 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11521)
             "FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR")
    let (get_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR :
      'tags this -> GLenum.t) =
      fun (x11523 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11523)
             "FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR")
    let (get_MAX_VIEWS_OVR : 'tags this -> GLenum.t) =
      fun (x11525 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11525) "MAX_VIEWS_OVR")
    let cast_from = Obj.magic
  end
module WebGLVertexArrayObjectOES =
  struct
    type t = [ `WebGLVertexArrayObjectOES ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11528 : Ojs.t) -> t_of_js x11528
    and t_0_to_js : t_0 -> Ojs.t = fun (x11527 : t) -> t_to_js x11527
    type tags = [ `WebGLVertexArrayObjectOES ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `WebGLVertexArrayObjectOES ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x11531 : Ojs.t) -> intf_of_js __tags_of_js x11531
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x11529 : __tags intf) -> intf_to_js __tags_to_js x11529
    let cast_from = Obj.magic
  end
module OES_vertex_array_object =
  struct
    type t = [ `OES_vertex_array_object ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11534 : Ojs.t) -> t_of_js x11534
    and t_0_to_js : t_0 -> Ojs.t = fun (x11533 : t) -> t_to_js x11533
    type tags = [ `OES_vertex_array_object ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `OES_vertex_array_object ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x11537 : Ojs.t) -> intf_of_js __tags_of_js x11537
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x11535 : __tags intf) -> intf_to_js __tags_to_js x11535
    let (bindVertexArrayOES :
      'tags this -> arrayObject:WebGLVertexArrayObjectOES.t or_null -> unit)
      =
      fun (x11541 : 'tags this) ->
        fun ~arrayObject:(x11539 : WebGLVertexArrayObjectOES.t or_null) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x11541) "bindVertexArrayOES"
               [|(or_null_to_js WebGLVertexArrayObjectOES.t_to_js x11539)|])
    let (createVertexArrayOES :
      'tags this -> WebGLVertexArrayObjectOES.t or_null) =
      fun (x11543 : 'tags this) ->
        or_null_of_js WebGLVertexArrayObjectOES.t_of_js
          (Ojs.call (this_to_js Obj.magic x11543) "createVertexArrayOES" [||])
    let (deleteVertexArrayOES :
      'tags this -> arrayObject:WebGLVertexArrayObjectOES.t or_null -> unit)
      =
      fun (x11548 : 'tags this) ->
        fun ~arrayObject:(x11546 : WebGLVertexArrayObjectOES.t or_null) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x11548) "deleteVertexArrayOES"
               [|(or_null_to_js WebGLVertexArrayObjectOES.t_to_js x11546)|])
    let (isVertexArrayOES :
      'tags this ->
        arrayObject:WebGLVertexArrayObjectOES.t or_null -> GLboolean.t)
      =
      fun (x11552 : 'tags this) ->
        fun ~arrayObject:(x11550 : WebGLVertexArrayObjectOES.t or_null) ->
          GLboolean.t_of_js
            (Ojs.call (this_to_js Obj.magic x11552) "isVertexArrayOES"
               [|(or_null_to_js WebGLVertexArrayObjectOES.t_to_js x11550)|])
    let (get_VERTEX_ARRAY_BINDING_OES : 'tags this -> GLenum.t) =
      fun (x11554 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11554)
             "VERTEX_ARRAY_BINDING_OES")
    let cast_from = Obj.magic
  end
module OES_texture_half_float_linear =
  struct
    type t = [ `OES_texture_half_float_linear ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11557 : Ojs.t) -> t_of_js x11557
    and t_0_to_js : t_0 -> Ojs.t = fun (x11556 : t) -> t_to_js x11556
    type tags = [ `OES_texture_half_float_linear ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `OES_texture_half_float_linear ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x11560 : Ojs.t) -> intf_of_js __tags_of_js x11560
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x11558 : __tags intf) -> intf_to_js __tags_to_js x11558
    let cast_from = Obj.magic
  end
module OES_texture_half_float =
  struct
    type t = [ `OES_texture_half_float ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11563 : Ojs.t) -> t_of_js x11563
    and t_0_to_js : t_0 -> Ojs.t = fun (x11562 : t) -> t_to_js x11562
    type tags = [ `OES_texture_half_float ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `OES_texture_half_float ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x11566 : Ojs.t) -> intf_of_js __tags_of_js x11566
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x11564 : __tags intf) -> intf_to_js __tags_to_js x11564
    let (get_HALF_FLOAT_OES : 'tags this -> GLenum.t) =
      fun (x11568 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11568) "HALF_FLOAT_OES")
    let cast_from = Obj.magic
  end
module OES_texture_float_linear =
  struct
    type t = [ `OES_texture_float_linear ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11571 : Ojs.t) -> t_of_js x11571
    and t_0_to_js : t_0 -> Ojs.t = fun (x11570 : t) -> t_to_js x11570
    type tags = [ `OES_texture_float_linear ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `OES_texture_float_linear ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x11574 : Ojs.t) -> intf_of_js __tags_of_js x11574
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x11572 : __tags intf) -> intf_to_js __tags_to_js x11572
    let cast_from = Obj.magic
  end
module OES_texture_float =
  struct
    type t = [ `OES_texture_float ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11577 : Ojs.t) -> t_of_js x11577
    and t_0_to_js : t_0 -> Ojs.t = fun (x11576 : t) -> t_to_js x11576
    type tags = [ `OES_texture_float ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `OES_texture_float ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x11580 : Ojs.t) -> intf_of_js __tags_of_js x11580
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x11578 : __tags intf) -> intf_to_js __tags_to_js x11578
    let cast_from = Obj.magic
  end
module OES_standard_derivatives =
  struct
    type t = [ `OES_standard_derivatives ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11583 : Ojs.t) -> t_of_js x11583
    and t_0_to_js : t_0 -> Ojs.t = fun (x11582 : t) -> t_to_js x11582
    type tags = [ `OES_standard_derivatives ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `OES_standard_derivatives ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x11586 : Ojs.t) -> intf_of_js __tags_of_js x11586
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x11584 : __tags intf) -> intf_to_js __tags_to_js x11584
    let (get_FRAGMENT_SHADER_DERIVATIVE_HINT_OES : 'tags this -> GLenum.t) =
      fun (x11588 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11588)
             "FRAGMENT_SHADER_DERIVATIVE_HINT_OES")
    let cast_from = Obj.magic
  end
module OES_element_index_uint =
  struct
    type t = [ `OES_element_index_uint ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11591 : Ojs.t) -> t_of_js x11591
    and t_0_to_js : t_0 -> Ojs.t = fun (x11590 : t) -> t_to_js x11590
    type tags = [ `OES_element_index_uint ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `OES_element_index_uint ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x11594 : Ojs.t) -> intf_of_js __tags_of_js x11594
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x11592 : __tags intf) -> intf_to_js __tags_to_js x11592
    let cast_from = Obj.magic
  end
module KHR_parallel_shader_compile =
  struct
    type t = [ `KHR_parallel_shader_compile ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11597 : Ojs.t) -> t_of_js x11597
    and t_0_to_js : t_0 -> Ojs.t = fun (x11596 : t) -> t_to_js x11596
    type tags = [ `KHR_parallel_shader_compile ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `KHR_parallel_shader_compile ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x11600 : Ojs.t) -> intf_of_js __tags_of_js x11600
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x11598 : __tags intf) -> intf_to_js __tags_to_js x11598
    let (get_COMPLETION_STATUS_KHR : 'tags this -> GLenum.t) =
      fun (x11602 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11602)
             "COMPLETION_STATUS_KHR")
    let cast_from = Obj.magic
  end
module GLclampf =
  struct
    type t = float
    let rec t_of_js : Ojs.t -> t =
      fun (x11605 : Ojs.t) -> Ojs.float_of_js x11605
    and t_to_js : t -> Ojs.t = fun (x11604 : float) -> Ojs.float_to_js x11604
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11607 : Ojs.t) -> t_of_js x11607
    and t_0_to_js : t_0 -> Ojs.t = fun (x11606 : t) -> t_to_js x11606
  end
module EXT_texture_filter_anisotropic =
  struct
    type t = [ `EXT_texture_filter_anisotropic ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11609 : Ojs.t) -> t_of_js x11609
    and t_0_to_js : t_0 -> Ojs.t = fun (x11608 : t) -> t_to_js x11608
    type tags = [ `EXT_texture_filter_anisotropic ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `EXT_texture_filter_anisotropic ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x11612 : Ojs.t) -> intf_of_js __tags_of_js x11612
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x11610 : __tags intf) -> intf_to_js __tags_to_js x11610
    let (get_MAX_TEXTURE_MAX_ANISOTROPY_EXT : 'tags this -> GLenum.t) =
      fun (x11614 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11614)
             "MAX_TEXTURE_MAX_ANISOTROPY_EXT")
    let (get_TEXTURE_MAX_ANISOTROPY_EXT : 'tags this -> GLenum.t) =
      fun (x11616 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11616)
             "TEXTURE_MAX_ANISOTROPY_EXT")
    let cast_from = Obj.magic
  end
module EXT_shader_texture_lod =
  struct
    type t = [ `EXT_shader_texture_lod ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11619 : Ojs.t) -> t_of_js x11619
    and t_0_to_js : t_0 -> Ojs.t = fun (x11618 : t) -> t_to_js x11618
    type tags = [ `EXT_shader_texture_lod ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `EXT_shader_texture_lod ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x11622 : Ojs.t) -> intf_of_js __tags_of_js x11622
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x11620 : __tags intf) -> intf_to_js __tags_to_js x11620
    let cast_from = Obj.magic
  end
module EXT_sRGB =
  struct
    type t = [ `EXT_sRGB ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11625 : Ojs.t) -> t_of_js x11625
    and t_0_to_js : t_0 -> Ojs.t = fun (x11624 : t) -> t_to_js x11624
    type tags = [ `EXT_sRGB ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `EXT_sRGB ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x11628 : Ojs.t) -> intf_of_js __tags_of_js x11628
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x11626 : __tags intf) -> intf_to_js __tags_to_js x11626
    let (get_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT :
      'tags this -> GLenum.t) =
      fun (x11630 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11630)
             "FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT")
    let (get_SRGB8_ALPHA8_EXT : 'tags this -> GLenum.t) =
      fun (x11632 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11632)
             "SRGB8_ALPHA8_EXT")
    let (get_SRGB_ALPHA_EXT : 'tags this -> GLenum.t) =
      fun (x11634 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11634) "SRGB_ALPHA_EXT")
    let (get_SRGB_EXT : 'tags this -> GLenum.t) =
      fun (x11636 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11636) "SRGB_EXT")
    let cast_from = Obj.magic
  end
module EXT_frag_depth =
  struct
    type t = [ `EXT_frag_depth ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11639 : Ojs.t) -> t_of_js x11639
    and t_0_to_js : t_0 -> Ojs.t = fun (x11638 : t) -> t_to_js x11638
    type tags = [ `EXT_frag_depth ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `EXT_frag_depth ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x11642 : Ojs.t) -> intf_of_js __tags_of_js x11642
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x11640 : __tags intf) -> intf_to_js __tags_to_js x11640
    let cast_from = Obj.magic
  end
module EXT_float_blend =
  struct
    type t = [ `EXT_float_blend ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11645 : Ojs.t) -> t_of_js x11645
    and t_0_to_js : t_0 -> Ojs.t = fun (x11644 : t) -> t_to_js x11644
    type tags = [ `EXT_float_blend ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `EXT_float_blend ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x11648 : Ojs.t) -> intf_of_js __tags_of_js x11648
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x11646 : __tags intf) -> intf_to_js __tags_to_js x11646
    let cast_from = Obj.magic
  end
module EXT_color_buffer_half_float =
  struct
    type t = [ `EXT_color_buffer_half_float ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11651 : Ojs.t) -> t_of_js x11651
    and t_0_to_js : t_0 -> Ojs.t = fun (x11650 : t) -> t_to_js x11650
    type tags = [ `EXT_color_buffer_half_float ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `EXT_color_buffer_half_float ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x11654 : Ojs.t) -> intf_of_js __tags_of_js x11654
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x11652 : __tags intf) -> intf_to_js __tags_to_js x11652
    let (get_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT :
      'tags this -> GLenum.t) =
      fun (x11656 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11656)
             "FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT")
    let (get_RGB16F_EXT : 'tags this -> GLenum.t) =
      fun (x11658 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11658) "RGB16F_EXT")
    let (get_RGBA16F_EXT : 'tags this -> GLenum.t) =
      fun (x11660 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11660) "RGBA16F_EXT")
    let (get_UNSIGNED_NORMALIZED_EXT : 'tags this -> GLenum.t) =
      fun (x11662 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11662)
             "UNSIGNED_NORMALIZED_EXT")
    let cast_from = Obj.magic
  end
module EXT_color_buffer_float =
  struct
    type t = [ `EXT_color_buffer_float ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11665 : Ojs.t) -> t_of_js x11665
    and t_0_to_js : t_0 -> Ojs.t = fun (x11664 : t) -> t_to_js x11664
    type tags = [ `EXT_color_buffer_float ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `EXT_color_buffer_float ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x11668 : Ojs.t) -> intf_of_js __tags_of_js x11668
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x11666 : __tags intf) -> intf_to_js __tags_to_js x11666
    let cast_from = Obj.magic
  end
module EXT_blend_minmax =
  struct
    type t = [ `EXT_blend_minmax ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11671 : Ojs.t) -> t_of_js x11671
    and t_0_to_js : t_0 -> Ojs.t = fun (x11670 : t) -> t_to_js x11670
    type tags = [ `EXT_blend_minmax ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `EXT_blend_minmax ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x11674 : Ojs.t) -> intf_of_js __tags_of_js x11674
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x11672 : __tags intf) -> intf_to_js __tags_to_js x11672
    let (get_MAX_EXT : 'tags this -> GLenum.t) =
      fun (x11676 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11676) "MAX_EXT")
    let (get_MIN_EXT : 'tags this -> GLenum.t) =
      fun (x11678 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11678) "MIN_EXT")
    let cast_from = Obj.magic
  end
module WebGLProgram =
  struct
    type t = [ `WebGLProgram ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11681 : Ojs.t) -> t_of_js x11681
    and t_0_to_js : t_0 -> Ojs.t = fun (x11680 : t) -> t_to_js x11680
    type tags = [ `WebGLProgram ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `WebGLProgram ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x11684 : Ojs.t) -> intf_of_js __tags_of_js x11684
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x11682 : __tags intf) -> intf_to_js __tags_to_js x11682
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WebGLProgram")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WebGLProgram") [||])
  end
module WebGLBuffer =
  struct
    type t = [ `WebGLBuffer ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11687 : Ojs.t) -> t_of_js x11687
    and t_0_to_js : t_0 -> Ojs.t = fun (x11686 : t) -> t_to_js x11686
    type tags = [ `WebGLBuffer ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `WebGLBuffer ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x11690 : Ojs.t) -> intf_of_js __tags_of_js x11690
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x11688 : __tags intf) -> intf_to_js __tags_to_js x11688
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WebGLBuffer")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WebGLBuffer") [||])
  end
module WebGLActiveInfo =
  struct
    type t = [ `WebGLActiveInfo ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11693 : Ojs.t) -> t_of_js x11693
    and t_0_to_js : t_0 -> Ojs.t = fun (x11692 : t) -> t_to_js x11692
    type tags = [ `WebGLActiveInfo ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `WebGLActiveInfo ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x11696 : Ojs.t) -> intf_of_js __tags_of_js x11696
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x11694 : __tags intf) -> intf_to_js __tags_to_js x11694
    let (get_name : 'tags this -> string) =
      fun (x11698 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11698) "name")
    let (get_size : 'tags this -> GLint.t) =
      fun (x11700 : 'tags this) ->
        GLint.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11700) "size")
    let (get_type : 'tags this -> GLenum.t) =
      fun (x11702 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11702) "type")
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLActiveInfo") "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WebGLActiveInfo") [||])
  end
module GLbitfield =
  struct
    type t = float
    let rec t_of_js : Ojs.t -> t =
      fun (x11705 : Ojs.t) -> Ojs.float_of_js x11705
    and t_to_js : t -> Ojs.t = fun (x11704 : float) -> Ojs.float_to_js x11704
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11707 : Ojs.t) -> t_of_js x11707
    and t_0_to_js : t_0 -> Ojs.t = fun (x11706 : t) -> t_to_js x11706
  end
module GLuint =
  struct
    type t = float
    let rec t_of_js : Ojs.t -> t =
      fun (x11709 : Ojs.t) -> Ojs.float_of_js x11709
    and t_to_js : t -> Ojs.t = fun (x11708 : float) -> Ojs.float_to_js x11708
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11711 : Ojs.t) -> t_of_js x11711
    and t_0_to_js : t_0 -> Ojs.t = fun (x11710 : t) -> t_to_js x11710
  end
module ANGLE_instanced_arrays =
  struct
    type t = [ `ANGLE_instanced_arrays ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11713 : Ojs.t) -> t_of_js x11713
    and t_0_to_js : t_0 -> Ojs.t = fun (x11712 : t) -> t_to_js x11712
    type tags = [ `ANGLE_instanced_arrays ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `ANGLE_instanced_arrays ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x11716 : Ojs.t) -> intf_of_js __tags_of_js x11716
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x11714 : __tags intf) -> intf_to_js __tags_to_js x11714
    let (drawArraysInstancedANGLE :
      'tags this ->
        mode:GLenum.t ->
          first:GLint.t -> count:GLsizei.t -> primcount:GLsizei.t -> unit)
      =
      fun (x11722 : 'tags this) ->
        fun ~mode:(x11718 : GLenum.t) ->
          fun ~first:(x11719 : GLint.t) ->
            fun ~count:(x11720 : GLsizei.t) ->
              fun ~primcount:(x11721 : GLsizei.t) ->
                ignore
                  (Ojs.call (this_to_js Obj.magic x11722)
                     "drawArraysInstancedANGLE"
                     [|(GLenum.t_to_js x11718);(GLint.t_to_js x11719);(
                       GLsizei.t_to_js x11720);(GLsizei.t_to_js x11721)|])
    let (drawElementsInstancedANGLE :
      'tags this ->
        mode:GLenum.t ->
          count:GLsizei.t ->
            type_:GLenum.t ->
              offset:GLintptr.t -> primcount:GLsizei.t -> unit)
      =
      fun (x11729 : 'tags this) ->
        fun ~mode:(x11724 : GLenum.t) ->
          fun ~count:(x11725 : GLsizei.t) ->
            fun ~type_:(x11726 : GLenum.t) ->
              fun ~offset:(x11727 : GLintptr.t) ->
                fun ~primcount:(x11728 : GLsizei.t) ->
                  ignore
                    (Ojs.call (this_to_js Obj.magic x11729)
                       "drawElementsInstancedANGLE"
                       [|(GLenum.t_to_js x11724);(GLsizei.t_to_js x11725);(
                         GLenum.t_to_js x11726);(GLintptr.t_to_js x11727);(
                         GLsizei.t_to_js x11728)|])
    let (vertexAttribDivisorANGLE :
      'tags this -> index:GLuint.t -> divisor:GLuint.t -> unit) =
      fun (x11733 : 'tags this) ->
        fun ~index:(x11731 : GLuint.t) ->
          fun ~divisor:(x11732 : GLuint.t) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x11733)
                 "vertexAttribDivisorANGLE"
                 [|(GLuint.t_to_js x11731);(GLuint.t_to_js x11732)|])
    let (get_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE : 'tags this -> GLenum.t) =
      fun (x11735 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11735)
             "VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE")
    let cast_from = Obj.magic
  end
module WebGLRenderingContextBase =
  struct
    type t = [ `WebGLRenderingContextBase ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x11738 : Ojs.t) -> t_of_js x11738
    and t_0_to_js : t_0 -> Ojs.t = fun (x11737 : t) -> t_to_js x11737
    type tags = [ `WebGLRenderingContextBase ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `WebGLRenderingContextBase ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x11741 : Ojs.t) -> intf_of_js __tags_of_js x11741
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x11739 : __tags intf) -> intf_to_js __tags_to_js x11739
    let (vertexAttrib1fv :
      'tags this -> index:GLuint.t -> values:GLfloat.t Iterable.t_1 -> unit)
      =
      fun (x11746 : 'tags this) ->
        fun ~index:(x11743 : GLuint.t) ->
          fun ~values:(x11744 : GLfloat.t Iterable.t_1) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x11746) "vertexAttrib1fv"
                 [|(GLuint.t_to_js x11743);(Iterable.t_1_to_js
                                              GLfloat.t_to_js x11744)|])
    let (vertexAttrib2fv :
      'tags this -> index:GLuint.t -> values:GLfloat.t Iterable.t_1 -> unit)
      =
      fun (x11751 : 'tags this) ->
        fun ~index:(x11748 : GLuint.t) ->
          fun ~values:(x11749 : GLfloat.t Iterable.t_1) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x11751) "vertexAttrib2fv"
                 [|(GLuint.t_to_js x11748);(Iterable.t_1_to_js
                                              GLfloat.t_to_js x11749)|])
    let (vertexAttrib3fv :
      'tags this -> index:GLuint.t -> values:GLfloat.t Iterable.t_1 -> unit)
      =
      fun (x11756 : 'tags this) ->
        fun ~index:(x11753 : GLuint.t) ->
          fun ~values:(x11754 : GLfloat.t Iterable.t_1) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x11756) "vertexAttrib3fv"
                 [|(GLuint.t_to_js x11753);(Iterable.t_1_to_js
                                              GLfloat.t_to_js x11754)|])
    let (vertexAttrib4fv :
      'tags this -> index:GLuint.t -> values:GLfloat.t Iterable.t_1 -> unit)
      =
      fun (x11761 : 'tags this) ->
        fun ~index:(x11758 : GLuint.t) ->
          fun ~values:(x11759 : GLfloat.t Iterable.t_1) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x11761) "vertexAttrib4fv"
                 [|(GLuint.t_to_js x11758);(Iterable.t_1_to_js
                                              GLfloat.t_to_js x11759)|])
    let (get_drawingBufferHeight : 'tags this -> GLsizei.t) =
      fun (x11763 : 'tags this) ->
        GLsizei.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11763)
             "drawingBufferHeight")
    let (get_drawingBufferWidth : 'tags this -> GLsizei.t) =
      fun (x11765 : 'tags this) ->
        GLsizei.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x11765)
             "drawingBufferWidth")
    let (activeTexture : 'tags this -> texture:GLenum.t -> unit) =
      fun (x11768 : 'tags this) ->
        fun ~texture:(x11767 : GLenum.t) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x11768) "activeTexture"
               [|(GLenum.t_to_js x11767)|])
    let (attachShader :
      'tags this -> program:WebGLProgram.t -> shader:WebGLShader.t -> unit) =
      fun (x11772 : 'tags this) ->
        fun ~program:(x11770 : WebGLProgram.t) ->
          fun ~shader:(x11771 : WebGLShader.t) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x11772) "attachShader"
                 [|(WebGLProgram.t_to_js x11770);(WebGLShader.t_to_js x11771)|])
    let (bindAttribLocation :
      'tags this ->
        program:WebGLProgram.t -> index:GLuint.t -> name:string -> unit)
      =
      fun (x11777 : 'tags this) ->
        fun ~program:(x11774 : WebGLProgram.t) ->
          fun ~index:(x11775 : GLuint.t) ->
            fun ~name:(x11776 : string) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x11777) "bindAttribLocation"
                   [|(WebGLProgram.t_to_js x11774);(GLuint.t_to_js x11775);(
                     Ojs.string_to_js x11776)|])
    let (bindBuffer :
      'tags this -> target:GLenum.t -> buffer:WebGLBuffer.t or_null -> unit)
      =
      fun (x11782 : 'tags this) ->
        fun ~target:(x11779 : GLenum.t) ->
          fun ~buffer:(x11780 : WebGLBuffer.t or_null) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x11782) "bindBuffer"
                 [|(GLenum.t_to_js x11779);(or_null_to_js WebGLBuffer.t_to_js
                                              x11780)|])
    let (bindFramebuffer :
      'tags this ->
        target:GLenum.t -> framebuffer:WebGLFramebuffer.t or_null -> unit)
      =
      fun (x11787 : 'tags this) ->
        fun ~target:(x11784 : GLenum.t) ->
          fun ~framebuffer:(x11785 : WebGLFramebuffer.t or_null) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x11787) "bindFramebuffer"
                 [|(GLenum.t_to_js x11784);(or_null_to_js
                                              WebGLFramebuffer.t_to_js x11785)|])
    let (bindRenderbuffer :
      'tags this ->
        target:GLenum.t -> renderbuffer:WebGLRenderbuffer.t or_null -> unit)
      =
      fun (x11792 : 'tags this) ->
        fun ~target:(x11789 : GLenum.t) ->
          fun ~renderbuffer:(x11790 : WebGLRenderbuffer.t or_null) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x11792) "bindRenderbuffer"
                 [|(GLenum.t_to_js x11789);(or_null_to_js
                                              WebGLRenderbuffer.t_to_js
                                              x11790)|])
    let (bindTexture :
      'tags this -> target:GLenum.t -> texture:WebGLTexture.t or_null -> unit)
      =
      fun (x11797 : 'tags this) ->
        fun ~target:(x11794 : GLenum.t) ->
          fun ~texture:(x11795 : WebGLTexture.t or_null) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x11797) "bindTexture"
                 [|(GLenum.t_to_js x11794);(or_null_to_js
                                              WebGLTexture.t_to_js x11795)|])
    let (blendColor :
      'tags this ->
        red:GLclampf.t ->
          green:GLclampf.t -> blue:GLclampf.t -> alpha:GLclampf.t -> unit)
      =
      fun (x11803 : 'tags this) ->
        fun ~red:(x11799 : GLclampf.t) ->
          fun ~green:(x11800 : GLclampf.t) ->
            fun ~blue:(x11801 : GLclampf.t) ->
              fun ~alpha:(x11802 : GLclampf.t) ->
                ignore
                  (Ojs.call (this_to_js Obj.magic x11803) "blendColor"
                     [|(GLclampf.t_to_js x11799);(GLclampf.t_to_js x11800);(
                       GLclampf.t_to_js x11801);(GLclampf.t_to_js x11802)|])
    let (blendEquation : 'tags this -> mode:GLenum.t -> unit) =
      fun (x11806 : 'tags this) ->
        fun ~mode:(x11805 : GLenum.t) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x11806) "blendEquation"
               [|(GLenum.t_to_js x11805)|])
    let (blendEquationSeparate :
      'tags this -> modeRGB:GLenum.t -> modeAlpha:GLenum.t -> unit) =
      fun (x11810 : 'tags this) ->
        fun ~modeRGB:(x11808 : GLenum.t) ->
          fun ~modeAlpha:(x11809 : GLenum.t) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x11810) "blendEquationSeparate"
                 [|(GLenum.t_to_js x11808);(GLenum.t_to_js x11809)|])
    let (blendFunc :
      'tags this -> sfactor:GLenum.t -> dfactor:GLenum.t -> unit) =
      fun (x11814 : 'tags this) ->
        fun ~sfactor:(x11812 : GLenum.t) ->
          fun ~dfactor:(x11813 : GLenum.t) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x11814) "blendFunc"
                 [|(GLenum.t_to_js x11812);(GLenum.t_to_js x11813)|])
    let (blendFuncSeparate :
      'tags this ->
        srcRGB:GLenum.t ->
          dstRGB:GLenum.t -> srcAlpha:GLenum.t -> dstAlpha:GLenum.t -> unit)
      =
      fun (x11820 : 'tags this) ->
        fun ~srcRGB:(x11816 : GLenum.t) ->
          fun ~dstRGB:(x11817 : GLenum.t) ->
            fun ~srcAlpha:(x11818 : GLenum.t) ->
              fun ~dstAlpha:(x11819 : GLenum.t) ->
                ignore
                  (Ojs.call (this_to_js Obj.magic x11820) "blendFuncSeparate"
                     [|(GLenum.t_to_js x11816);(GLenum.t_to_js x11817);(
                       GLenum.t_to_js x11818);(GLenum.t_to_js x11819)|])
    let (checkFramebufferStatus : 'tags this -> target:GLenum.t -> GLenum.t)
      =
      fun (x11823 : 'tags this) ->
        fun ~target:(x11822 : GLenum.t) ->
          GLenum.t_of_js
            (Ojs.call (this_to_js Obj.magic x11823) "checkFramebufferStatus"
               [|(GLenum.t_to_js x11822)|])
    let (clear : 'tags this -> mask:GLbitfield.t -> unit) =
      fun (x11826 : 'tags this) ->
        fun ~mask:(x11825 : GLbitfield.t) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x11826) "clear"
               [|(GLbitfield.t_to_js x11825)|])
    let (clearColor :
      'tags this ->
        red:GLclampf.t ->
          green:GLclampf.t -> blue:GLclampf.t -> alpha:GLclampf.t -> unit)
      =
      fun (x11832 : 'tags this) ->
        fun ~red:(x11828 : GLclampf.t) ->
          fun ~green:(x11829 : GLclampf.t) ->
            fun ~blue:(x11830 : GLclampf.t) ->
              fun ~alpha:(x11831 : GLclampf.t) ->
                ignore
                  (Ojs.call (this_to_js Obj.magic x11832) "clearColor"
                     [|(GLclampf.t_to_js x11828);(GLclampf.t_to_js x11829);(
                       GLclampf.t_to_js x11830);(GLclampf.t_to_js x11831)|])
    let (clearDepth : 'tags this -> depth:GLclampf.t -> unit) =
      fun (x11835 : 'tags this) ->
        fun ~depth:(x11834 : GLclampf.t) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x11835) "clearDepth"
               [|(GLclampf.t_to_js x11834)|])
    let (clearStencil : 'tags this -> s:GLint.t -> unit) =
      fun (x11838 : 'tags this) ->
        fun ~s:(x11837 : GLint.t) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x11838) "clearStencil"
               [|(GLint.t_to_js x11837)|])
    let (colorMask :
      'tags this ->
        red:GLboolean.t ->
          green:GLboolean.t -> blue:GLboolean.t -> alpha:GLboolean.t -> unit)
      =
      fun (x11844 : 'tags this) ->
        fun ~red:(x11840 : GLboolean.t) ->
          fun ~green:(x11841 : GLboolean.t) ->
            fun ~blue:(x11842 : GLboolean.t) ->
              fun ~alpha:(x11843 : GLboolean.t) ->
                ignore
                  (Ojs.call (this_to_js Obj.magic x11844) "colorMask"
                     [|(GLboolean.t_to_js x11840);(GLboolean.t_to_js x11841);(
                       GLboolean.t_to_js x11842);(GLboolean.t_to_js x11843)|])
    let (compileShader : 'tags this -> shader:WebGLShader.t -> unit) =
      fun (x11847 : 'tags this) ->
        fun ~shader:(x11846 : WebGLShader.t) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x11847) "compileShader"
               [|(WebGLShader.t_to_js x11846)|])
    let (copyTexImage2D :
      'tags this ->
        target:GLenum.t ->
          level:GLint.t ->
            internalformat:GLenum.t ->
              x:GLint.t ->
                y:GLint.t ->
                  width:GLsizei.t ->
                    height:GLsizei.t -> border:GLint.t -> unit)
      =
      fun (x11857 : 'tags this) ->
        fun ~target:(x11849 : GLenum.t) ->
          fun ~level:(x11850 : GLint.t) ->
            fun ~internalformat:(x11851 : GLenum.t) ->
              fun ~x:(x11852 : GLint.t) ->
                fun ~y:(x11853 : GLint.t) ->
                  fun ~width:(x11854 : GLsizei.t) ->
                    fun ~height:(x11855 : GLsizei.t) ->
                      fun ~border:(x11856 : GLint.t) ->
                        ignore
                          (Ojs.call (this_to_js Obj.magic x11857)
                             "copyTexImage2D"
                             [|(GLenum.t_to_js x11849);(GLint.t_to_js x11850);(
                               GLenum.t_to_js x11851);(GLint.t_to_js x11852);(
                               GLint.t_to_js x11853);(GLsizei.t_to_js x11854);(
                               GLsizei.t_to_js x11855);(GLint.t_to_js x11856)|])
    let (copyTexSubImage2D :
      'tags this ->
        target:GLenum.t ->
          level:GLint.t ->
            xoffset:GLint.t ->
              yoffset:GLint.t ->
                x:GLint.t ->
                  y:GLint.t -> width:GLsizei.t -> height:GLsizei.t -> unit)
      =
      fun (x11867 : 'tags this) ->
        fun ~target:(x11859 : GLenum.t) ->
          fun ~level:(x11860 : GLint.t) ->
            fun ~xoffset:(x11861 : GLint.t) ->
              fun ~yoffset:(x11862 : GLint.t) ->
                fun ~x:(x11863 : GLint.t) ->
                  fun ~y:(x11864 : GLint.t) ->
                    fun ~width:(x11865 : GLsizei.t) ->
                      fun ~height:(x11866 : GLsizei.t) ->
                        ignore
                          (Ojs.call (this_to_js Obj.magic x11867)
                             "copyTexSubImage2D"
                             [|(GLenum.t_to_js x11859);(GLint.t_to_js x11860);(
                               GLint.t_to_js x11861);(GLint.t_to_js x11862);(
                               GLint.t_to_js x11863);(GLint.t_to_js x11864);(
                               GLsizei.t_to_js x11865);(GLsizei.t_to_js
                                                          x11866)|])
    let (createBuffer : 'tags this -> WebGLBuffer.t or_null) =
      fun (x11869 : 'tags this) ->
        or_null_of_js WebGLBuffer.t_of_js
          (Ojs.call (this_to_js Obj.magic x11869) "createBuffer" [||])
    let (createFramebuffer : 'tags this -> WebGLFramebuffer.t or_null) =
      fun (x11872 : 'tags this) ->
        or_null_of_js WebGLFramebuffer.t_of_js
          (Ojs.call (this_to_js Obj.magic x11872) "createFramebuffer" [||])
    let (createProgram : 'tags this -> WebGLProgram.t or_null) =
      fun (x11875 : 'tags this) ->
        or_null_of_js WebGLProgram.t_of_js
          (Ojs.call (this_to_js Obj.magic x11875) "createProgram" [||])
    let (createRenderbuffer : 'tags this -> WebGLRenderbuffer.t or_null) =
      fun (x11878 : 'tags this) ->
        or_null_of_js WebGLRenderbuffer.t_of_js
          (Ojs.call (this_to_js Obj.magic x11878) "createRenderbuffer" [||])
    let (createShader :
      'tags this -> type_:GLenum.t -> WebGLShader.t or_null) =
      fun (x11882 : 'tags this) ->
        fun ~type_:(x11881 : GLenum.t) ->
          or_null_of_js WebGLShader.t_of_js
            (Ojs.call (this_to_js Obj.magic x11882) "createShader"
               [|(GLenum.t_to_js x11881)|])
    let (createTexture : 'tags this -> WebGLTexture.t or_null) =
      fun (x11885 : 'tags this) ->
        or_null_of_js WebGLTexture.t_of_js
          (Ojs.call (this_to_js Obj.magic x11885) "createTexture" [||])
    let (cullFace : 'tags this -> mode:GLenum.t -> unit) =
      fun (x11889 : 'tags this) ->
        fun ~mode:(x11888 : GLenum.t) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x11889) "cullFace"
               [|(GLenum.t_to_js x11888)|])
    let (deleteBuffer : 'tags this -> buffer:WebGLBuffer.t or_null -> unit) =
      fun (x11893 : 'tags this) ->
        fun ~buffer:(x11891 : WebGLBuffer.t or_null) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x11893) "deleteBuffer"
               [|(or_null_to_js WebGLBuffer.t_to_js x11891)|])
    let (deleteFramebuffer :
      'tags this -> framebuffer:WebGLFramebuffer.t or_null -> unit) =
      fun (x11897 : 'tags this) ->
        fun ~framebuffer:(x11895 : WebGLFramebuffer.t or_null) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x11897) "deleteFramebuffer"
               [|(or_null_to_js WebGLFramebuffer.t_to_js x11895)|])
    let (deleteProgram :
      'tags this -> program:WebGLProgram.t or_null -> unit) =
      fun (x11901 : 'tags this) ->
        fun ~program:(x11899 : WebGLProgram.t or_null) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x11901) "deleteProgram"
               [|(or_null_to_js WebGLProgram.t_to_js x11899)|])
    let (deleteRenderbuffer :
      'tags this -> renderbuffer:WebGLRenderbuffer.t or_null -> unit) =
      fun (x11905 : 'tags this) ->
        fun ~renderbuffer:(x11903 : WebGLRenderbuffer.t or_null) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x11905) "deleteRenderbuffer"
               [|(or_null_to_js WebGLRenderbuffer.t_to_js x11903)|])
    let (deleteShader : 'tags this -> shader:WebGLShader.t or_null -> unit) =
      fun (x11909 : 'tags this) ->
        fun ~shader:(x11907 : WebGLShader.t or_null) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x11909) "deleteShader"
               [|(or_null_to_js WebGLShader.t_to_js x11907)|])
    let (deleteTexture :
      'tags this -> texture:WebGLTexture.t or_null -> unit) =
      fun (x11913 : 'tags this) ->
        fun ~texture:(x11911 : WebGLTexture.t or_null) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x11913) "deleteTexture"
               [|(or_null_to_js WebGLTexture.t_to_js x11911)|])
    let (depthFunc : 'tags this -> func:GLenum.t -> unit) =
      fun (x11916 : 'tags this) ->
        fun ~func:(x11915 : GLenum.t) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x11916) "depthFunc"
               [|(GLenum.t_to_js x11915)|])
    let (depthMask : 'tags this -> flag:GLboolean.t -> unit) =
      fun (x11919 : 'tags this) ->
        fun ~flag:(x11918 : GLboolean.t) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x11919) "depthMask"
               [|(GLboolean.t_to_js x11918)|])
    let (depthRange :
      'tags this -> zNear:GLclampf.t -> zFar:GLclampf.t -> unit) =
      fun (x11923 : 'tags this) ->
        fun ~zNear:(x11921 : GLclampf.t) ->
          fun ~zFar:(x11922 : GLclampf.t) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x11923) "depthRange"
                 [|(GLclampf.t_to_js x11921);(GLclampf.t_to_js x11922)|])
    let (detachShader :
      'tags this -> program:WebGLProgram.t -> shader:WebGLShader.t -> unit) =
      fun (x11927 : 'tags this) ->
        fun ~program:(x11925 : WebGLProgram.t) ->
          fun ~shader:(x11926 : WebGLShader.t) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x11927) "detachShader"
                 [|(WebGLProgram.t_to_js x11925);(WebGLShader.t_to_js x11926)|])
    let (disable : 'tags this -> cap:GLenum.t -> unit) =
      fun (x11930 : 'tags this) ->
        fun ~cap:(x11929 : GLenum.t) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x11930) "disable"
               [|(GLenum.t_to_js x11929)|])
    let (disableVertexAttribArray : 'tags this -> index:GLuint.t -> unit) =
      fun (x11933 : 'tags this) ->
        fun ~index:(x11932 : GLuint.t) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x11933)
               "disableVertexAttribArray" [|(GLuint.t_to_js x11932)|])
    let (drawArrays :
      'tags this -> mode:GLenum.t -> first:GLint.t -> count:GLsizei.t -> unit)
      =
      fun (x11938 : 'tags this) ->
        fun ~mode:(x11935 : GLenum.t) ->
          fun ~first:(x11936 : GLint.t) ->
            fun ~count:(x11937 : GLsizei.t) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x11938) "drawArrays"
                   [|(GLenum.t_to_js x11935);(GLint.t_to_js x11936);(
                     GLsizei.t_to_js x11937)|])
    let (drawElements :
      'tags this ->
        mode:GLenum.t ->
          count:GLsizei.t -> type_:GLenum.t -> offset:GLintptr.t -> unit)
      =
      fun (x11944 : 'tags this) ->
        fun ~mode:(x11940 : GLenum.t) ->
          fun ~count:(x11941 : GLsizei.t) ->
            fun ~type_:(x11942 : GLenum.t) ->
              fun ~offset:(x11943 : GLintptr.t) ->
                ignore
                  (Ojs.call (this_to_js Obj.magic x11944) "drawElements"
                     [|(GLenum.t_to_js x11940);(GLsizei.t_to_js x11941);(
                       GLenum.t_to_js x11942);(GLintptr.t_to_js x11943)|])
    let (enable : 'tags this -> cap:GLenum.t -> unit) =
      fun (x11947 : 'tags this) ->
        fun ~cap:(x11946 : GLenum.t) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x11947) "enable"
               [|(GLenum.t_to_js x11946)|])
    let (enableVertexAttribArray : 'tags this -> index:GLuint.t -> unit) =
      fun (x11950 : 'tags this) ->
        fun ~index:(x11949 : GLuint.t) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x11950) "enableVertexAttribArray"
               [|(GLuint.t_to_js x11949)|])
    let (finish : 'tags this -> unit) =
      fun (x11952 : 'tags this) ->
        ignore (Ojs.call (this_to_js Obj.magic x11952) "finish" [||])
    let (flush : 'tags this -> unit) =
      fun (x11954 : 'tags this) ->
        ignore (Ojs.call (this_to_js Obj.magic x11954) "flush" [||])
    let (framebufferRenderbuffer :
      'tags this ->
        target:GLenum.t ->
          attachment:GLenum.t ->
            renderbuffertarget:GLenum.t ->
              renderbuffer:WebGLRenderbuffer.t or_null -> unit)
      =
      fun (x11961 : 'tags this) ->
        fun ~target:(x11956 : GLenum.t) ->
          fun ~attachment:(x11957 : GLenum.t) ->
            fun ~renderbuffertarget:(x11958 : GLenum.t) ->
              fun ~renderbuffer:(x11959 : WebGLRenderbuffer.t or_null) ->
                ignore
                  (Ojs.call (this_to_js Obj.magic x11961)
                     "framebufferRenderbuffer"
                     [|(GLenum.t_to_js x11956);(GLenum.t_to_js x11957);(
                       GLenum.t_to_js x11958);(or_null_to_js
                                                 WebGLRenderbuffer.t_to_js
                                                 x11959)|])
    let (framebufferTexture2D :
      'tags this ->
        target:GLenum.t ->
          attachment:GLenum.t ->
            textarget:GLenum.t ->
              texture:WebGLTexture.t or_null -> level:GLint.t -> unit)
      =
      fun (x11969 : 'tags this) ->
        fun ~target:(x11963 : GLenum.t) ->
          fun ~attachment:(x11964 : GLenum.t) ->
            fun ~textarget:(x11965 : GLenum.t) ->
              fun ~texture:(x11966 : WebGLTexture.t or_null) ->
                fun ~level:(x11968 : GLint.t) ->
                  ignore
                    (Ojs.call (this_to_js Obj.magic x11969)
                       "framebufferTexture2D"
                       [|(GLenum.t_to_js x11963);(GLenum.t_to_js x11964);(
                         GLenum.t_to_js x11965);(or_null_to_js
                                                   WebGLTexture.t_to_js
                                                   x11966);(GLint.t_to_js
                                                              x11968)|])
    let (frontFace : 'tags this -> mode:GLenum.t -> unit) =
      fun (x11972 : 'tags this) ->
        fun ~mode:(x11971 : GLenum.t) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x11972) "frontFace"
               [|(GLenum.t_to_js x11971)|])
    let (generateMipmap : 'tags this -> target:GLenum.t -> unit) =
      fun (x11975 : 'tags this) ->
        fun ~target:(x11974 : GLenum.t) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x11975) "generateMipmap"
               [|(GLenum.t_to_js x11974)|])
    let (getActiveAttrib :
      'tags this ->
        program:WebGLProgram.t -> index:GLuint.t -> WebGLActiveInfo.t or_null)
      =
      fun (x11979 : 'tags this) ->
        fun ~program:(x11977 : WebGLProgram.t) ->
          fun ~index:(x11978 : GLuint.t) ->
            or_null_of_js WebGLActiveInfo.t_of_js
              (Ojs.call (this_to_js Obj.magic x11979) "getActiveAttrib"
                 [|(WebGLProgram.t_to_js x11977);(GLuint.t_to_js x11978)|])
    let (getActiveUniform :
      'tags this ->
        program:WebGLProgram.t -> index:GLuint.t -> WebGLActiveInfo.t or_null)
      =
      fun (x11984 : 'tags this) ->
        fun ~program:(x11982 : WebGLProgram.t) ->
          fun ~index:(x11983 : GLuint.t) ->
            or_null_of_js WebGLActiveInfo.t_of_js
              (Ojs.call (this_to_js Obj.magic x11984) "getActiveUniform"
                 [|(WebGLProgram.t_to_js x11982);(GLuint.t_to_js x11983)|])
    let (getAttachedShaders :
      'tags this -> program:WebGLProgram.t -> WebGLShader.t list or_null) =
      fun (x11988 : 'tags this) ->
        fun ~program:(x11987 : WebGLProgram.t) ->
          or_null_of_js
            (fun (x11990 : Ojs.t) ->
               Ojs.list_of_js WebGLShader.t_of_js x11990)
            (Ojs.call (this_to_js Obj.magic x11988) "getAttachedShaders"
               [|(WebGLProgram.t_to_js x11987)|])
    let (getAttribLocation :
      'tags this -> program:WebGLProgram.t -> name:string -> GLint.t) =
      fun (x11994 : 'tags this) ->
        fun ~program:(x11992 : WebGLProgram.t) ->
          fun ~name:(x11993 : string) ->
            GLint.t_of_js
              (Ojs.call (this_to_js Obj.magic x11994) "getAttribLocation"
                 [|(WebGLProgram.t_to_js x11992);(Ojs.string_to_js x11993)|])
    let (getBufferParameter :
      'tags this -> target:GLenum.t -> pname:GLenum.t -> any) =
      fun (x11998 : 'tags this) ->
        fun ~target:(x11996 : GLenum.t) ->
          fun ~pname:(x11997 : GLenum.t) ->
            any_of_js
              (Ojs.call (this_to_js Obj.magic x11998) "getBufferParameter"
                 [|(GLenum.t_to_js x11996);(GLenum.t_to_js x11997)|])
    let (getContextAttributes :
      'tags this -> WebGLContextAttributes.t or_null) =
      fun (x12000 : 'tags this) ->
        or_null_of_js WebGLContextAttributes.t_of_js
          (Ojs.call (this_to_js Obj.magic x12000) "getContextAttributes" [||])
    let (getError : 'tags this -> GLenum.t) =
      fun (x12003 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.call (this_to_js Obj.magic x12003) "getError" [||])
    let (getExtension :
      'tags this ->
        extensionName:[ `L_s2_EXT_blend_minmax ] ->
          EXT_blend_minmax.t or_null)
      =
      fun (x12006 : 'tags this) ->
        fun ~extensionName:(x12005 : [ `L_s2_EXT_blend_minmax ]) ->
          or_null_of_js EXT_blend_minmax.t_of_js
            (Ojs.call (this_to_js Obj.magic x12006) "getExtension"
               [|((match x12005 with
                   | `L_s2_EXT_blend_minmax ->
                       Ojs.string_to_js "EXT_blend_minmax"))|])
    let (getExtension' :
      'tags this ->
        extensionName:[ `L_s3_EXT_color_buffer_float ] ->
          EXT_color_buffer_float.t or_null)
      =
      fun (x12010 : 'tags this) ->
        fun ~extensionName:(x12009 : [ `L_s3_EXT_color_buffer_float ]) ->
          or_null_of_js EXT_color_buffer_float.t_of_js
            (Ojs.call (this_to_js Obj.magic x12010) "getExtension"
               [|((match x12009 with
                   | `L_s3_EXT_color_buffer_float ->
                       Ojs.string_to_js "EXT_color_buffer_float"))|])
    let (getExtension'' :
      'tags this ->
        extensionName:[ `L_s4_EXT_color_buffer_half_float ] ->
          EXT_color_buffer_half_float.t or_null)
      =
      fun (x12014 : 'tags this) ->
        fun ~extensionName:(x12013 : [ `L_s4_EXT_color_buffer_half_float ])
          ->
          or_null_of_js EXT_color_buffer_half_float.t_of_js
            (Ojs.call (this_to_js Obj.magic x12014) "getExtension"
               [|((match x12013 with
                   | `L_s4_EXT_color_buffer_half_float ->
                       Ojs.string_to_js "EXT_color_buffer_half_float"))|])
    let (getExtension''' :
      'tags this ->
        extensionName:[ `L_s5_EXT_float_blend ] -> EXT_float_blend.t or_null)
      =
      fun (x12018 : 'tags this) ->
        fun ~extensionName:(x12017 : [ `L_s5_EXT_float_blend ]) ->
          or_null_of_js EXT_float_blend.t_of_js
            (Ojs.call (this_to_js Obj.magic x12018) "getExtension"
               [|((match x12017 with
                   | `L_s5_EXT_float_blend ->
                       Ojs.string_to_js "EXT_float_blend"))|])
    let (getExtension'''' :
      'tags this ->
        extensionName:[ `L_s9_EXT_texture_filter_anisotropic ] ->
          EXT_texture_filter_anisotropic.t or_null)
      =
      fun (x12022 : 'tags this) ->
        fun
          ~extensionName:(x12021 : [ `L_s9_EXT_texture_filter_anisotropic ])
          ->
          or_null_of_js EXT_texture_filter_anisotropic.t_of_js
            (Ojs.call (this_to_js Obj.magic x12022) "getExtension"
               [|((match x12021 with
                   | `L_s9_EXT_texture_filter_anisotropic ->
                       Ojs.string_to_js "EXT_texture_filter_anisotropic"))|])
    let (getExtension''''' :
      'tags this ->
        extensionName:[ `L_s6_EXT_frag_depth ] -> EXT_frag_depth.t or_null)
      =
      fun (x12026 : 'tags this) ->
        fun ~extensionName:(x12025 : [ `L_s6_EXT_frag_depth ]) ->
          or_null_of_js EXT_frag_depth.t_of_js
            (Ojs.call (this_to_js Obj.magic x12026) "getExtension"
               [|((match x12025 with
                   | `L_s6_EXT_frag_depth ->
                       Ojs.string_to_js "EXT_frag_depth"))|])
    let (getExtension'''''' :
      'tags this ->
        extensionName:[ `L_s8_EXT_shader_texture_lod ] ->
          EXT_shader_texture_lod.t or_null)
      =
      fun (x12030 : 'tags this) ->
        fun ~extensionName:(x12029 : [ `L_s8_EXT_shader_texture_lod ]) ->
          or_null_of_js EXT_shader_texture_lod.t_of_js
            (Ojs.call (this_to_js Obj.magic x12030) "getExtension"
               [|((match x12029 with
                   | `L_s8_EXT_shader_texture_lod ->
                       Ojs.string_to_js "EXT_shader_texture_lod"))|])
    let (getExtension''''''' :
      'tags this -> extensionName:[ `L_s7_EXT_sRGB ] -> EXT_sRGB.t or_null) =
      fun (x12034 : 'tags this) ->
        fun ~extensionName:(x12033 : [ `L_s7_EXT_sRGB ]) ->
          or_null_of_js EXT_sRGB.t_of_js
            (Ojs.call (this_to_js Obj.magic x12034) "getExtension"
               [|((match x12033 with
                   | `L_s7_EXT_sRGB -> Ojs.string_to_js "EXT_sRGB"))|])
    let (getExtension'''''''' :
      'tags this ->
        extensionName:[ `L_s10_KHR_parallel_shader_compile ] ->
          KHR_parallel_shader_compile.t or_null)
      =
      fun (x12038 : 'tags this) ->
        fun ~extensionName:(x12037 : [ `L_s10_KHR_parallel_shader_compile ])
          ->
          or_null_of_js KHR_parallel_shader_compile.t_of_js
            (Ojs.call (this_to_js Obj.magic x12038) "getExtension"
               [|((match x12037 with
                   | `L_s10_KHR_parallel_shader_compile ->
                       Ojs.string_to_js "KHR_parallel_shader_compile"))|])
    let (getExtension''''''''' :
      'tags this ->
        extensionName:[ `L_s17_OES_vertex_array_object ] ->
          OES_vertex_array_object.t or_null)
      =
      fun (x12042 : 'tags this) ->
        fun ~extensionName:(x12041 : [ `L_s17_OES_vertex_array_object ]) ->
          or_null_of_js OES_vertex_array_object.t_of_js
            (Ojs.call (this_to_js Obj.magic x12042) "getExtension"
               [|((match x12041 with
                   | `L_s17_OES_vertex_array_object ->
                       Ojs.string_to_js "OES_vertex_array_object"))|])
    let (getExtension'''''''''' :
      'tags this ->
        extensionName:[ `L_s18_OVR_multiview2 ] -> OVR_multiview2.t or_null)
      =
      fun (x12046 : 'tags this) ->
        fun ~extensionName:(x12045 : [ `L_s18_OVR_multiview2 ]) ->
          or_null_of_js OVR_multiview2.t_of_js
            (Ojs.call (this_to_js Obj.magic x12046) "getExtension"
               [|((match x12045 with
                   | `L_s18_OVR_multiview2 ->
                       Ojs.string_to_js "OVR_multiview2"))|])
    let (getExtension''''''''''' :
      'tags this ->
        extensionName:[ `L_s19_WEBGL_color_buffer_float ] ->
          WEBGL_color_buffer_float.t or_null)
      =
      fun (x12050 : 'tags this) ->
        fun ~extensionName:(x12049 : [ `L_s19_WEBGL_color_buffer_float ]) ->
          or_null_of_js WEBGL_color_buffer_float.t_of_js
            (Ojs.call (this_to_js Obj.magic x12050) "getExtension"
               [|((match x12049 with
                   | `L_s19_WEBGL_color_buffer_float ->
                       Ojs.string_to_js "WEBGL_color_buffer_float"))|])
    let (getExtension'''''''''''' :
      'tags this ->
        extensionName:[ `L_s20_WEBGL_compressed_texture_astc ] ->
          WEBGL_compressed_texture_astc.t or_null)
      =
      fun (x12054 : 'tags this) ->
        fun
          ~extensionName:(x12053 : [ `L_s20_WEBGL_compressed_texture_astc ])
          ->
          or_null_of_js WEBGL_compressed_texture_astc.t_of_js
            (Ojs.call (this_to_js Obj.magic x12054) "getExtension"
               [|((match x12053 with
                   | `L_s20_WEBGL_compressed_texture_astc ->
                       Ojs.string_to_js "WEBGL_compressed_texture_astc"))|])
    let (getExtension''''''''''''' :
      'tags this ->
        extensionName:[ `L_s21_WEBGL_compressed_texture_etc ] ->
          WEBGL_compressed_texture_etc.t or_null)
      =
      fun (x12058 : 'tags this) ->
        fun ~extensionName:(x12057 : [ `L_s21_WEBGL_compressed_texture_etc ])
          ->
          or_null_of_js WEBGL_compressed_texture_etc.t_of_js
            (Ojs.call (this_to_js Obj.magic x12058) "getExtension"
               [|((match x12057 with
                   | `L_s21_WEBGL_compressed_texture_etc ->
                       Ojs.string_to_js "WEBGL_compressed_texture_etc"))|])
    let (getExtension'''''''''''''' :
      'tags this ->
        extensionName:[ `L_s22_WEBGL_compressed_texture_etc1 ] ->
          WEBGL_compressed_texture_etc1.t or_null)
      =
      fun (x12062 : 'tags this) ->
        fun
          ~extensionName:(x12061 : [ `L_s22_WEBGL_compressed_texture_etc1 ])
          ->
          or_null_of_js WEBGL_compressed_texture_etc1.t_of_js
            (Ojs.call (this_to_js Obj.magic x12062) "getExtension"
               [|((match x12061 with
                   | `L_s22_WEBGL_compressed_texture_etc1 ->
                       Ojs.string_to_js "WEBGL_compressed_texture_etc1"))|])
    let (getExtension''''''''''''''' :
      'tags this ->
        extensionName:[ `L_s23_WEBGL_compressed_texture_pvrtc ] ->
          WEBGL_compressed_texture_pvrtc.t or_null)
      =
      fun (x12066 : 'tags this) ->
        fun
          ~extensionName:(x12065 : [ `L_s23_WEBGL_compressed_texture_pvrtc ])
          ->
          or_null_of_js WEBGL_compressed_texture_pvrtc.t_of_js
            (Ojs.call (this_to_js Obj.magic x12066) "getExtension"
               [|((match x12065 with
                   | `L_s23_WEBGL_compressed_texture_pvrtc ->
                       Ojs.string_to_js "WEBGL_compressed_texture_pvrtc"))|])
    let (getExtension'''''''''''''''' :
      'tags this ->
        extensionName:[ `L_s25_WEBGL_compressed_texture_s3tc_srgb ] ->
          WEBGL_compressed_texture_s3tc_srgb.t or_null)
      =
      fun (x12070 : 'tags this) ->
        fun
          ~extensionName:(x12069 :
                           [ `L_s25_WEBGL_compressed_texture_s3tc_srgb ])
          ->
          or_null_of_js WEBGL_compressed_texture_s3tc_srgb.t_of_js
            (Ojs.call (this_to_js Obj.magic x12070) "getExtension"
               [|((match x12069 with
                   | `L_s25_WEBGL_compressed_texture_s3tc_srgb ->
                       Ojs.string_to_js "WEBGL_compressed_texture_s3tc_srgb"))|])
    let (getExtension''''''''''''''''' :
      'tags this ->
        extensionName:[ `L_s27_WEBGL_debug_shaders ] ->
          WEBGL_debug_shaders.t or_null)
      =
      fun (x12074 : 'tags this) ->
        fun ~extensionName:(x12073 : [ `L_s27_WEBGL_debug_shaders ]) ->
          or_null_of_js WEBGL_debug_shaders.t_of_js
            (Ojs.call (this_to_js Obj.magic x12074) "getExtension"
               [|((match x12073 with
                   | `L_s27_WEBGL_debug_shaders ->
                       Ojs.string_to_js "WEBGL_debug_shaders"))|])
    let (getExtension'''''''''''''''''' :
      'tags this ->
        extensionName:[ `L_s29_WEBGL_draw_buffers ] ->
          WEBGL_draw_buffers.t or_null)
      =
      fun (x12078 : 'tags this) ->
        fun ~extensionName:(x12077 : [ `L_s29_WEBGL_draw_buffers ]) ->
          or_null_of_js WEBGL_draw_buffers.t_of_js
            (Ojs.call (this_to_js Obj.magic x12078) "getExtension"
               [|((match x12077 with
                   | `L_s29_WEBGL_draw_buffers ->
                       Ojs.string_to_js "WEBGL_draw_buffers"))|])
    let (getExtension''''''''''''''''''' :
      'tags this ->
        extensionName:[ `L_s30_WEBGL_lose_context ] ->
          WEBGL_lose_context.t or_null)
      =
      fun (x12082 : 'tags this) ->
        fun ~extensionName:(x12081 : [ `L_s30_WEBGL_lose_context ]) ->
          or_null_of_js WEBGL_lose_context.t_of_js
            (Ojs.call (this_to_js Obj.magic x12082) "getExtension"
               [|((match x12081 with
                   | `L_s30_WEBGL_lose_context ->
                       Ojs.string_to_js "WEBGL_lose_context"))|])
    let (getExtension'''''''''''''''''''' :
      'tags this ->
        extensionName:[ `L_s28_WEBGL_depth_texture ] ->
          WEBGL_depth_texture.t or_null)
      =
      fun (x12086 : 'tags this) ->
        fun ~extensionName:(x12085 : [ `L_s28_WEBGL_depth_texture ]) ->
          or_null_of_js WEBGL_depth_texture.t_of_js
            (Ojs.call (this_to_js Obj.magic x12086) "getExtension"
               [|((match x12085 with
                   | `L_s28_WEBGL_depth_texture ->
                       Ojs.string_to_js "WEBGL_depth_texture"))|])
    let (getExtension''''''''''''''''''''' :
      'tags this ->
        extensionName:[ `L_s26_WEBGL_debug_renderer_info ] ->
          WEBGL_debug_renderer_info.t or_null)
      =
      fun (x12090 : 'tags this) ->
        fun ~extensionName:(x12089 : [ `L_s26_WEBGL_debug_renderer_info ]) ->
          or_null_of_js WEBGL_debug_renderer_info.t_of_js
            (Ojs.call (this_to_js Obj.magic x12090) "getExtension"
               [|((match x12089 with
                   | `L_s26_WEBGL_debug_renderer_info ->
                       Ojs.string_to_js "WEBGL_debug_renderer_info"))|])
    let (getExtension'''''''''''''''''''''' :
      'tags this ->
        extensionName:[ `L_s24_WEBGL_compressed_texture_s3tc ] ->
          WEBGL_compressed_texture_s3tc.t or_null)
      =
      fun (x12094 : 'tags this) ->
        fun
          ~extensionName:(x12093 : [ `L_s24_WEBGL_compressed_texture_s3tc ])
          ->
          or_null_of_js WEBGL_compressed_texture_s3tc.t_of_js
            (Ojs.call (this_to_js Obj.magic x12094) "getExtension"
               [|((match x12093 with
                   | `L_s24_WEBGL_compressed_texture_s3tc ->
                       Ojs.string_to_js "WEBGL_compressed_texture_s3tc"))|])
    let (getExtension''''''''''''''''''''''' :
      'tags this ->
        extensionName:[ `L_s16_OES_texture_half_float_linear ] ->
          OES_texture_half_float_linear.t or_null)
      =
      fun (x12098 : 'tags this) ->
        fun
          ~extensionName:(x12097 : [ `L_s16_OES_texture_half_float_linear ])
          ->
          or_null_of_js OES_texture_half_float_linear.t_of_js
            (Ojs.call (this_to_js Obj.magic x12098) "getExtension"
               [|((match x12097 with
                   | `L_s16_OES_texture_half_float_linear ->
                       Ojs.string_to_js "OES_texture_half_float_linear"))|])
    let (getExtension'''''''''''''''''''''''' :
      'tags this ->
        extensionName:[ `L_s15_OES_texture_half_float ] ->
          OES_texture_half_float.t or_null)
      =
      fun (x12102 : 'tags this) ->
        fun ~extensionName:(x12101 : [ `L_s15_OES_texture_half_float ]) ->
          or_null_of_js OES_texture_half_float.t_of_js
            (Ojs.call (this_to_js Obj.magic x12102) "getExtension"
               [|((match x12101 with
                   | `L_s15_OES_texture_half_float ->
                       Ojs.string_to_js "OES_texture_half_float"))|])
    let (getExtension''''''''''''''''''''''''' :
      'tags this ->
        extensionName:[ `L_s14_OES_texture_float_linear ] ->
          OES_texture_float_linear.t or_null)
      =
      fun (x12106 : 'tags this) ->
        fun ~extensionName:(x12105 : [ `L_s14_OES_texture_float_linear ]) ->
          or_null_of_js OES_texture_float_linear.t_of_js
            (Ojs.call (this_to_js Obj.magic x12106) "getExtension"
               [|((match x12105 with
                   | `L_s14_OES_texture_float_linear ->
                       Ojs.string_to_js "OES_texture_float_linear"))|])
    let (getExtension'''''''''''''''''''''''''' :
      'tags this ->
        extensionName:[ `L_s13_OES_texture_float ] ->
          OES_texture_float.t or_null)
      =
      fun (x12110 : 'tags this) ->
        fun ~extensionName:(x12109 : [ `L_s13_OES_texture_float ]) ->
          or_null_of_js OES_texture_float.t_of_js
            (Ojs.call (this_to_js Obj.magic x12110) "getExtension"
               [|((match x12109 with
                   | `L_s13_OES_texture_float ->
                       Ojs.string_to_js "OES_texture_float"))|])
    let (getExtension''''''''''''''''''''''''''' :
      'tags this ->
        extensionName:[ `L_s12_OES_standard_derivatives ] ->
          OES_standard_derivatives.t or_null)
      =
      fun (x12114 : 'tags this) ->
        fun ~extensionName:(x12113 : [ `L_s12_OES_standard_derivatives ]) ->
          or_null_of_js OES_standard_derivatives.t_of_js
            (Ojs.call (this_to_js Obj.magic x12114) "getExtension"
               [|((match x12113 with
                   | `L_s12_OES_standard_derivatives ->
                       Ojs.string_to_js "OES_standard_derivatives"))|])
    let (getExtension'''''''''''''''''''''''''''' :
      'tags this ->
        extensionName:[ `L_s11_OES_element_index_uint ] ->
          OES_element_index_uint.t or_null)
      =
      fun (x12118 : 'tags this) ->
        fun ~extensionName:(x12117 : [ `L_s11_OES_element_index_uint ]) ->
          or_null_of_js OES_element_index_uint.t_of_js
            (Ojs.call (this_to_js Obj.magic x12118) "getExtension"
               [|((match x12117 with
                   | `L_s11_OES_element_index_uint ->
                       Ojs.string_to_js "OES_element_index_uint"))|])
    let (getExtension''''''''''''''''''''''''''''' :
      'tags this ->
        extensionName:[ `L_s1_ANGLE_instanced_arrays ] ->
          ANGLE_instanced_arrays.t or_null)
      =
      fun (x12122 : 'tags this) ->
        fun ~extensionName:(x12121 : [ `L_s1_ANGLE_instanced_arrays ]) ->
          or_null_of_js ANGLE_instanced_arrays.t_of_js
            (Ojs.call (this_to_js Obj.magic x12122) "getExtension"
               [|((match x12121 with
                   | `L_s1_ANGLE_instanced_arrays ->
                       Ojs.string_to_js "ANGLE_instanced_arrays"))|])
    let (getExtension'''''''''''''''''''''''''''''' :
      'tags this -> name:string -> any) =
      fun (x12126 : 'tags this) ->
        fun ~name:(x12125 : string) ->
          any_of_js
            (Ojs.call (this_to_js Obj.magic x12126) "getExtension"
               [|(Ojs.string_to_js x12125)|])
    let (getFramebufferAttachmentParameter :
      'tags this ->
        target:GLenum.t -> attachment:GLenum.t -> pname:GLenum.t -> any)
      =
      fun (x12131 : 'tags this) ->
        fun ~target:(x12128 : GLenum.t) ->
          fun ~attachment:(x12129 : GLenum.t) ->
            fun ~pname:(x12130 : GLenum.t) ->
              any_of_js
                (Ojs.call (this_to_js Obj.magic x12131)
                   "getFramebufferAttachmentParameter"
                   [|(GLenum.t_to_js x12128);(GLenum.t_to_js x12129);(
                     GLenum.t_to_js x12130)|])
    let (getParameter : 'tags this -> pname:GLenum.t -> any) =
      fun (x12134 : 'tags this) ->
        fun ~pname:(x12133 : GLenum.t) ->
          any_of_js
            (Ojs.call (this_to_js Obj.magic x12134) "getParameter"
               [|(GLenum.t_to_js x12133)|])
    let (getProgramInfoLog :
      'tags this -> program:WebGLProgram.t -> string or_null) =
      fun (x12137 : 'tags this) ->
        fun ~program:(x12136 : WebGLProgram.t) ->
          or_null_of_js Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x12137) "getProgramInfoLog"
               [|(WebGLProgram.t_to_js x12136)|])
    let (getProgramParameter :
      'tags this -> program:WebGLProgram.t -> pname:GLenum.t -> any) =
      fun (x12142 : 'tags this) ->
        fun ~program:(x12140 : WebGLProgram.t) ->
          fun ~pname:(x12141 : GLenum.t) ->
            any_of_js
              (Ojs.call (this_to_js Obj.magic x12142) "getProgramParameter"
                 [|(WebGLProgram.t_to_js x12140);(GLenum.t_to_js x12141)|])
    let (getRenderbufferParameter :
      'tags this -> target:GLenum.t -> pname:GLenum.t -> any) =
      fun (x12146 : 'tags this) ->
        fun ~target:(x12144 : GLenum.t) ->
          fun ~pname:(x12145 : GLenum.t) ->
            any_of_js
              (Ojs.call (this_to_js Obj.magic x12146)
                 "getRenderbufferParameter"
                 [|(GLenum.t_to_js x12144);(GLenum.t_to_js x12145)|])
    let (getShaderInfoLog :
      'tags this -> shader:WebGLShader.t -> string or_null) =
      fun (x12149 : 'tags this) ->
        fun ~shader:(x12148 : WebGLShader.t) ->
          or_null_of_js Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x12149) "getShaderInfoLog"
               [|(WebGLShader.t_to_js x12148)|])
    let (getShaderParameter :
      'tags this -> shader:WebGLShader.t -> pname:GLenum.t -> any) =
      fun (x12154 : 'tags this) ->
        fun ~shader:(x12152 : WebGLShader.t) ->
          fun ~pname:(x12153 : GLenum.t) ->
            any_of_js
              (Ojs.call (this_to_js Obj.magic x12154) "getShaderParameter"
                 [|(WebGLShader.t_to_js x12152);(GLenum.t_to_js x12153)|])
    let (getShaderPrecisionFormat :
      'tags this ->
        shadertype:GLenum.t ->
          precisiontype:GLenum.t -> WebGLShaderPrecisionFormat.t or_null)
      =
      fun (x12158 : 'tags this) ->
        fun ~shadertype:(x12156 : GLenum.t) ->
          fun ~precisiontype:(x12157 : GLenum.t) ->
            or_null_of_js WebGLShaderPrecisionFormat.t_of_js
              (Ojs.call (this_to_js Obj.magic x12158)
                 "getShaderPrecisionFormat"
                 [|(GLenum.t_to_js x12156);(GLenum.t_to_js x12157)|])
    let (getShaderSource :
      'tags this -> shader:WebGLShader.t -> string or_null) =
      fun (x12162 : 'tags this) ->
        fun ~shader:(x12161 : WebGLShader.t) ->
          or_null_of_js Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x12162) "getShaderSource"
               [|(WebGLShader.t_to_js x12161)|])
    let (getSupportedExtensions : 'tags this -> string list or_null) =
      fun (x12165 : 'tags this) ->
        or_null_of_js
          (fun (x12167 : Ojs.t) -> Ojs.list_of_js Ojs.string_of_js x12167)
          (Ojs.call (this_to_js Obj.magic x12165) "getSupportedExtensions"
             [||])
    let (getTexParameter :
      'tags this -> target:GLenum.t -> pname:GLenum.t -> any) =
      fun (x12171 : 'tags this) ->
        fun ~target:(x12169 : GLenum.t) ->
          fun ~pname:(x12170 : GLenum.t) ->
            any_of_js
              (Ojs.call (this_to_js Obj.magic x12171) "getTexParameter"
                 [|(GLenum.t_to_js x12169);(GLenum.t_to_js x12170)|])
    let (getUniform :
      'tags this ->
        program:WebGLProgram.t -> location:WebGLUniformLocation.t -> any)
      =
      fun (x12175 : 'tags this) ->
        fun ~program:(x12173 : WebGLProgram.t) ->
          fun ~location:(x12174 : WebGLUniformLocation.t) ->
            any_of_js
              (Ojs.call (this_to_js Obj.magic x12175) "getUniform"
                 [|(WebGLProgram.t_to_js x12173);(WebGLUniformLocation.t_to_js
                                                    x12174)|])
    let (getUniformLocation :
      'tags this ->
        program:WebGLProgram.t ->
          name:string -> WebGLUniformLocation.t or_null)
      =
      fun (x12179 : 'tags this) ->
        fun ~program:(x12177 : WebGLProgram.t) ->
          fun ~name:(x12178 : string) ->
            or_null_of_js WebGLUniformLocation.t_of_js
              (Ojs.call (this_to_js Obj.magic x12179) "getUniformLocation"
                 [|(WebGLProgram.t_to_js x12177);(Ojs.string_to_js x12178)|])
    let (getVertexAttrib :
      'tags this -> index:GLuint.t -> pname:GLenum.t -> any) =
      fun (x12184 : 'tags this) ->
        fun ~index:(x12182 : GLuint.t) ->
          fun ~pname:(x12183 : GLenum.t) ->
            any_of_js
              (Ojs.call (this_to_js Obj.magic x12184) "getVertexAttrib"
                 [|(GLuint.t_to_js x12182);(GLenum.t_to_js x12183)|])
    let (getVertexAttribOffset :
      'tags this -> index:GLuint.t -> pname:GLenum.t -> GLintptr.t) =
      fun (x12188 : 'tags this) ->
        fun ~index:(x12186 : GLuint.t) ->
          fun ~pname:(x12187 : GLenum.t) ->
            GLintptr.t_of_js
              (Ojs.call (this_to_js Obj.magic x12188) "getVertexAttribOffset"
                 [|(GLuint.t_to_js x12186);(GLenum.t_to_js x12187)|])
    let (hint : 'tags this -> target:GLenum.t -> mode:GLenum.t -> unit) =
      fun (x12192 : 'tags this) ->
        fun ~target:(x12190 : GLenum.t) ->
          fun ~mode:(x12191 : GLenum.t) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x12192) "hint"
                 [|(GLenum.t_to_js x12190);(GLenum.t_to_js x12191)|])
    let (isBuffer :
      'tags this -> buffer:WebGLBuffer.t or_null -> GLboolean.t) =
      fun (x12196 : 'tags this) ->
        fun ~buffer:(x12194 : WebGLBuffer.t or_null) ->
          GLboolean.t_of_js
            (Ojs.call (this_to_js Obj.magic x12196) "isBuffer"
               [|(or_null_to_js WebGLBuffer.t_to_js x12194)|])
    let (isContextLost : 'tags this -> bool) =
      fun (x12198 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.call (this_to_js Obj.magic x12198) "isContextLost" [||])
    let (isEnabled : 'tags this -> cap:GLenum.t -> GLboolean.t) =
      fun (x12201 : 'tags this) ->
        fun ~cap:(x12200 : GLenum.t) ->
          GLboolean.t_of_js
            (Ojs.call (this_to_js Obj.magic x12201) "isEnabled"
               [|(GLenum.t_to_js x12200)|])
    let (isFramebuffer :
      'tags this -> framebuffer:WebGLFramebuffer.t or_null -> GLboolean.t) =
      fun (x12205 : 'tags this) ->
        fun ~framebuffer:(x12203 : WebGLFramebuffer.t or_null) ->
          GLboolean.t_of_js
            (Ojs.call (this_to_js Obj.magic x12205) "isFramebuffer"
               [|(or_null_to_js WebGLFramebuffer.t_to_js x12203)|])
    let (isProgram :
      'tags this -> program:WebGLProgram.t or_null -> GLboolean.t) =
      fun (x12209 : 'tags this) ->
        fun ~program:(x12207 : WebGLProgram.t or_null) ->
          GLboolean.t_of_js
            (Ojs.call (this_to_js Obj.magic x12209) "isProgram"
               [|(or_null_to_js WebGLProgram.t_to_js x12207)|])
    let (isRenderbuffer :
      'tags this -> renderbuffer:WebGLRenderbuffer.t or_null -> GLboolean.t)
      =
      fun (x12213 : 'tags this) ->
        fun ~renderbuffer:(x12211 : WebGLRenderbuffer.t or_null) ->
          GLboolean.t_of_js
            (Ojs.call (this_to_js Obj.magic x12213) "isRenderbuffer"
               [|(or_null_to_js WebGLRenderbuffer.t_to_js x12211)|])
    let (isShader :
      'tags this -> shader:WebGLShader.t or_null -> GLboolean.t) =
      fun (x12217 : 'tags this) ->
        fun ~shader:(x12215 : WebGLShader.t or_null) ->
          GLboolean.t_of_js
            (Ojs.call (this_to_js Obj.magic x12217) "isShader"
               [|(or_null_to_js WebGLShader.t_to_js x12215)|])
    let (isTexture :
      'tags this -> texture:WebGLTexture.t or_null -> GLboolean.t) =
      fun (x12221 : 'tags this) ->
        fun ~texture:(x12219 : WebGLTexture.t or_null) ->
          GLboolean.t_of_js
            (Ojs.call (this_to_js Obj.magic x12221) "isTexture"
               [|(or_null_to_js WebGLTexture.t_to_js x12219)|])
    let (lineWidth : 'tags this -> width:GLfloat.t -> unit) =
      fun (x12224 : 'tags this) ->
        fun ~width:(x12223 : GLfloat.t) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x12224) "lineWidth"
               [|(GLfloat.t_to_js x12223)|])
    let (linkProgram : 'tags this -> program:WebGLProgram.t -> unit) =
      fun (x12227 : 'tags this) ->
        fun ~program:(x12226 : WebGLProgram.t) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x12227) "linkProgram"
               [|(WebGLProgram.t_to_js x12226)|])
    let (pixelStorei :
      'tags this ->
        pname:GLenum.t -> param:(GLboolean.t, GLint.t) union2 -> unit)
      =
      fun (x12233 : 'tags this) ->
        fun ~pname:(x12229 : GLenum.t) ->
          fun ~param:(x12230 : (GLboolean.t, GLint.t) union2) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x12233) "pixelStorei"
                 [|(GLenum.t_to_js x12229);(union2_to_js GLboolean.t_to_js
                                              GLint.t_to_js x12230)|])
    let (polygonOffset :
      'tags this -> factor:GLfloat.t -> units:GLfloat.t -> unit) =
      fun (x12237 : 'tags this) ->
        fun ~factor:(x12235 : GLfloat.t) ->
          fun ~units:(x12236 : GLfloat.t) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x12237) "polygonOffset"
                 [|(GLfloat.t_to_js x12235);(GLfloat.t_to_js x12236)|])
    let (renderbufferStorage :
      'tags this ->
        target:GLenum.t ->
          internalformat:GLenum.t ->
            width:GLsizei.t -> height:GLsizei.t -> unit)
      =
      fun (x12243 : 'tags this) ->
        fun ~target:(x12239 : GLenum.t) ->
          fun ~internalformat:(x12240 : GLenum.t) ->
            fun ~width:(x12241 : GLsizei.t) ->
              fun ~height:(x12242 : GLsizei.t) ->
                ignore
                  (Ojs.call (this_to_js Obj.magic x12243)
                     "renderbufferStorage"
                     [|(GLenum.t_to_js x12239);(GLenum.t_to_js x12240);(
                       GLsizei.t_to_js x12241);(GLsizei.t_to_js x12242)|])
    let (sampleCoverage :
      'tags this -> value:GLclampf.t -> invert:GLboolean.t -> unit) =
      fun (x12247 : 'tags this) ->
        fun ~value:(x12245 : GLclampf.t) ->
          fun ~invert:(x12246 : GLboolean.t) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x12247) "sampleCoverage"
                 [|(GLclampf.t_to_js x12245);(GLboolean.t_to_js x12246)|])
    let (scissor :
      'tags this ->
        x:GLint.t -> y:GLint.t -> width:GLsizei.t -> height:GLsizei.t -> unit)
      =
      fun (x12253 : 'tags this) ->
        fun ~x:(x12249 : GLint.t) ->
          fun ~y:(x12250 : GLint.t) ->
            fun ~width:(x12251 : GLsizei.t) ->
              fun ~height:(x12252 : GLsizei.t) ->
                ignore
                  (Ojs.call (this_to_js Obj.magic x12253) "scissor"
                     [|(GLint.t_to_js x12249);(GLint.t_to_js x12250);(
                       GLsizei.t_to_js x12251);(GLsizei.t_to_js x12252)|])
    let (shaderSource :
      'tags this -> shader:WebGLShader.t -> source:string -> unit) =
      fun (x12257 : 'tags this) ->
        fun ~shader:(x12255 : WebGLShader.t) ->
          fun ~source:(x12256 : string) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x12257) "shaderSource"
                 [|(WebGLShader.t_to_js x12255);(Ojs.string_to_js x12256)|])
    let (stencilFunc :
      'tags this -> func:GLenum.t -> ref:GLint.t -> mask:GLuint.t -> unit) =
      fun (x12262 : 'tags this) ->
        fun ~func:(x12259 : GLenum.t) ->
          fun ~ref:(x12260 : GLint.t) ->
            fun ~mask:(x12261 : GLuint.t) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x12262) "stencilFunc"
                   [|(GLenum.t_to_js x12259);(GLint.t_to_js x12260);(
                     GLuint.t_to_js x12261)|])
    let (stencilFuncSeparate :
      'tags this ->
        face:GLenum.t ->
          func:GLenum.t -> ref:GLint.t -> mask:GLuint.t -> unit)
      =
      fun (x12268 : 'tags this) ->
        fun ~face:(x12264 : GLenum.t) ->
          fun ~func:(x12265 : GLenum.t) ->
            fun ~ref:(x12266 : GLint.t) ->
              fun ~mask:(x12267 : GLuint.t) ->
                ignore
                  (Ojs.call (this_to_js Obj.magic x12268)
                     "stencilFuncSeparate"
                     [|(GLenum.t_to_js x12264);(GLenum.t_to_js x12265);(
                       GLint.t_to_js x12266);(GLuint.t_to_js x12267)|])
    let (stencilMask : 'tags this -> mask:GLuint.t -> unit) =
      fun (x12271 : 'tags this) ->
        fun ~mask:(x12270 : GLuint.t) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x12271) "stencilMask"
               [|(GLuint.t_to_js x12270)|])
    let (stencilMaskSeparate :
      'tags this -> face:GLenum.t -> mask:GLuint.t -> unit) =
      fun (x12275 : 'tags this) ->
        fun ~face:(x12273 : GLenum.t) ->
          fun ~mask:(x12274 : GLuint.t) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x12275) "stencilMaskSeparate"
                 [|(GLenum.t_to_js x12273);(GLuint.t_to_js x12274)|])
    let (stencilOp :
      'tags this -> fail:GLenum.t -> zfail:GLenum.t -> zpass:GLenum.t -> unit)
      =
      fun (x12280 : 'tags this) ->
        fun ~fail:(x12277 : GLenum.t) ->
          fun ~zfail:(x12278 : GLenum.t) ->
            fun ~zpass:(x12279 : GLenum.t) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x12280) "stencilOp"
                   [|(GLenum.t_to_js x12277);(GLenum.t_to_js x12278);(
                     GLenum.t_to_js x12279)|])
    let (stencilOpSeparate :
      'tags this ->
        face:GLenum.t ->
          fail:GLenum.t -> zfail:GLenum.t -> zpass:GLenum.t -> unit)
      =
      fun (x12286 : 'tags this) ->
        fun ~face:(x12282 : GLenum.t) ->
          fun ~fail:(x12283 : GLenum.t) ->
            fun ~zfail:(x12284 : GLenum.t) ->
              fun ~zpass:(x12285 : GLenum.t) ->
                ignore
                  (Ojs.call (this_to_js Obj.magic x12286) "stencilOpSeparate"
                     [|(GLenum.t_to_js x12282);(GLenum.t_to_js x12283);(
                       GLenum.t_to_js x12284);(GLenum.t_to_js x12285)|])
    let (texParameterf :
      'tags this ->
        target:GLenum.t -> pname:GLenum.t -> param:GLfloat.t -> unit)
      =
      fun (x12291 : 'tags this) ->
        fun ~target:(x12288 : GLenum.t) ->
          fun ~pname:(x12289 : GLenum.t) ->
            fun ~param:(x12290 : GLfloat.t) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x12291) "texParameterf"
                   [|(GLenum.t_to_js x12288);(GLenum.t_to_js x12289);(
                     GLfloat.t_to_js x12290)|])
    let (texParameteri :
      'tags this ->
        target:GLenum.t -> pname:GLenum.t -> param:GLint.t -> unit)
      =
      fun (x12296 : 'tags this) ->
        fun ~target:(x12293 : GLenum.t) ->
          fun ~pname:(x12294 : GLenum.t) ->
            fun ~param:(x12295 : GLint.t) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x12296) "texParameteri"
                   [|(GLenum.t_to_js x12293);(GLenum.t_to_js x12294);(
                     GLint.t_to_js x12295)|])
    let (uniform1f :
      'tags this ->
        location:WebGLUniformLocation.t or_null -> x:GLfloat.t -> unit)
      =
      fun (x12301 : 'tags this) ->
        fun ~location:(x12298 : WebGLUniformLocation.t or_null) ->
          fun ~x:(x12300 : GLfloat.t) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x12301) "uniform1f"
                 [|(or_null_to_js WebGLUniformLocation.t_to_js x12298);(
                   GLfloat.t_to_js x12300)|])
    let (uniform1i :
      'tags this ->
        location:WebGLUniformLocation.t or_null -> x:GLint.t -> unit)
      =
      fun (x12306 : 'tags this) ->
        fun ~location:(x12303 : WebGLUniformLocation.t or_null) ->
          fun ~x:(x12305 : GLint.t) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x12306) "uniform1i"
                 [|(or_null_to_js WebGLUniformLocation.t_to_js x12303);(
                   GLint.t_to_js x12305)|])
    let (uniform2f :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          x:GLfloat.t -> y:GLfloat.t -> unit)
      =
      fun (x12312 : 'tags this) ->
        fun ~location:(x12308 : WebGLUniformLocation.t or_null) ->
          fun ~x:(x12310 : GLfloat.t) ->
            fun ~y:(x12311 : GLfloat.t) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x12312) "uniform2f"
                   [|(or_null_to_js WebGLUniformLocation.t_to_js x12308);(
                     GLfloat.t_to_js x12310);(GLfloat.t_to_js x12311)|])
    let (uniform2i :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          x:GLint.t -> y:GLint.t -> unit)
      =
      fun (x12318 : 'tags this) ->
        fun ~location:(x12314 : WebGLUniformLocation.t or_null) ->
          fun ~x:(x12316 : GLint.t) ->
            fun ~y:(x12317 : GLint.t) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x12318) "uniform2i"
                   [|(or_null_to_js WebGLUniformLocation.t_to_js x12314);(
                     GLint.t_to_js x12316);(GLint.t_to_js x12317)|])
    let (uniform3f :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          x:GLfloat.t -> y:GLfloat.t -> z:GLfloat.t -> unit)
      =
      fun (x12325 : 'tags this) ->
        fun ~location:(x12320 : WebGLUniformLocation.t or_null) ->
          fun ~x:(x12322 : GLfloat.t) ->
            fun ~y:(x12323 : GLfloat.t) ->
              fun ~z:(x12324 : GLfloat.t) ->
                ignore
                  (Ojs.call (this_to_js Obj.magic x12325) "uniform3f"
                     [|(or_null_to_js WebGLUniformLocation.t_to_js x12320);(
                       GLfloat.t_to_js x12322);(GLfloat.t_to_js x12323);(
                       GLfloat.t_to_js x12324)|])
    let (uniform3i :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          x:GLint.t -> y:GLint.t -> z:GLint.t -> unit)
      =
      fun (x12332 : 'tags this) ->
        fun ~location:(x12327 : WebGLUniformLocation.t or_null) ->
          fun ~x:(x12329 : GLint.t) ->
            fun ~y:(x12330 : GLint.t) ->
              fun ~z:(x12331 : GLint.t) ->
                ignore
                  (Ojs.call (this_to_js Obj.magic x12332) "uniform3i"
                     [|(or_null_to_js WebGLUniformLocation.t_to_js x12327);(
                       GLint.t_to_js x12329);(GLint.t_to_js x12330);(
                       GLint.t_to_js x12331)|])
    let (uniform4f :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          x:GLfloat.t -> y:GLfloat.t -> z:GLfloat.t -> w:GLfloat.t -> unit)
      =
      fun (x12340 : 'tags this) ->
        fun ~location:(x12334 : WebGLUniformLocation.t or_null) ->
          fun ~x:(x12336 : GLfloat.t) ->
            fun ~y:(x12337 : GLfloat.t) ->
              fun ~z:(x12338 : GLfloat.t) ->
                fun ~w:(x12339 : GLfloat.t) ->
                  ignore
                    (Ojs.call (this_to_js Obj.magic x12340) "uniform4f"
                       [|(or_null_to_js WebGLUniformLocation.t_to_js x12334);(
                         GLfloat.t_to_js x12336);(GLfloat.t_to_js x12337);(
                         GLfloat.t_to_js x12338);(GLfloat.t_to_js x12339)|])
    let (uniform4i :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          x:GLint.t -> y:GLint.t -> z:GLint.t -> w:GLint.t -> unit)
      =
      fun (x12348 : 'tags this) ->
        fun ~location:(x12342 : WebGLUniformLocation.t or_null) ->
          fun ~x:(x12344 : GLint.t) ->
            fun ~y:(x12345 : GLint.t) ->
              fun ~z:(x12346 : GLint.t) ->
                fun ~w:(x12347 : GLint.t) ->
                  ignore
                    (Ojs.call (this_to_js Obj.magic x12348) "uniform4i"
                       [|(or_null_to_js WebGLUniformLocation.t_to_js x12342);(
                         GLint.t_to_js x12344);(GLint.t_to_js x12345);(
                         GLint.t_to_js x12346);(GLint.t_to_js x12347)|])
    let (useProgram : 'tags this -> program:WebGLProgram.t or_null -> unit) =
      fun (x12352 : 'tags this) ->
        fun ~program:(x12350 : WebGLProgram.t or_null) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x12352) "useProgram"
               [|(or_null_to_js WebGLProgram.t_to_js x12350)|])
    let (validateProgram : 'tags this -> program:WebGLProgram.t -> unit) =
      fun (x12355 : 'tags this) ->
        fun ~program:(x12354 : WebGLProgram.t) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x12355) "validateProgram"
               [|(WebGLProgram.t_to_js x12354)|])
    let (vertexAttrib1f :
      'tags this -> index:GLuint.t -> x:GLfloat.t -> unit) =
      fun (x12359 : 'tags this) ->
        fun ~index:(x12357 : GLuint.t) ->
          fun ~x:(x12358 : GLfloat.t) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x12359) "vertexAttrib1f"
                 [|(GLuint.t_to_js x12357);(GLfloat.t_to_js x12358)|])
    let (vertexAttrib1fv' :
      'tags this -> index:GLuint.t -> values:Float32List.t -> unit) =
      fun (x12363 : 'tags this) ->
        fun ~index:(x12361 : GLuint.t) ->
          fun ~values:(x12362 : Float32List.t) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x12363) "vertexAttrib1fv"
                 [|(GLuint.t_to_js x12361);(Float32List.t_to_js x12362)|])
    let (vertexAttrib2f :
      'tags this -> index:GLuint.t -> x:GLfloat.t -> y:GLfloat.t -> unit) =
      fun (x12368 : 'tags this) ->
        fun ~index:(x12365 : GLuint.t) ->
          fun ~x:(x12366 : GLfloat.t) ->
            fun ~y:(x12367 : GLfloat.t) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x12368) "vertexAttrib2f"
                   [|(GLuint.t_to_js x12365);(GLfloat.t_to_js x12366);(
                     GLfloat.t_to_js x12367)|])
    let (vertexAttrib2fv' :
      'tags this -> index:GLuint.t -> values:Float32List.t -> unit) =
      fun (x12372 : 'tags this) ->
        fun ~index:(x12370 : GLuint.t) ->
          fun ~values:(x12371 : Float32List.t) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x12372) "vertexAttrib2fv"
                 [|(GLuint.t_to_js x12370);(Float32List.t_to_js x12371)|])
    let (vertexAttrib3f :
      'tags this ->
        index:GLuint.t -> x:GLfloat.t -> y:GLfloat.t -> z:GLfloat.t -> unit)
      =
      fun (x12378 : 'tags this) ->
        fun ~index:(x12374 : GLuint.t) ->
          fun ~x:(x12375 : GLfloat.t) ->
            fun ~y:(x12376 : GLfloat.t) ->
              fun ~z:(x12377 : GLfloat.t) ->
                ignore
                  (Ojs.call (this_to_js Obj.magic x12378) "vertexAttrib3f"
                     [|(GLuint.t_to_js x12374);(GLfloat.t_to_js x12375);(
                       GLfloat.t_to_js x12376);(GLfloat.t_to_js x12377)|])
    let (vertexAttrib3fv' :
      'tags this -> index:GLuint.t -> values:Float32List.t -> unit) =
      fun (x12382 : 'tags this) ->
        fun ~index:(x12380 : GLuint.t) ->
          fun ~values:(x12381 : Float32List.t) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x12382) "vertexAttrib3fv"
                 [|(GLuint.t_to_js x12380);(Float32List.t_to_js x12381)|])
    let (vertexAttrib4f :
      'tags this ->
        index:GLuint.t ->
          x:GLfloat.t -> y:GLfloat.t -> z:GLfloat.t -> w:GLfloat.t -> unit)
      =
      fun (x12389 : 'tags this) ->
        fun ~index:(x12384 : GLuint.t) ->
          fun ~x:(x12385 : GLfloat.t) ->
            fun ~y:(x12386 : GLfloat.t) ->
              fun ~z:(x12387 : GLfloat.t) ->
                fun ~w:(x12388 : GLfloat.t) ->
                  ignore
                    (Ojs.call (this_to_js Obj.magic x12389) "vertexAttrib4f"
                       [|(GLuint.t_to_js x12384);(GLfloat.t_to_js x12385);(
                         GLfloat.t_to_js x12386);(GLfloat.t_to_js x12387);(
                         GLfloat.t_to_js x12388)|])
    let (vertexAttrib4fv' :
      'tags this -> index:GLuint.t -> values:Float32List.t -> unit) =
      fun (x12393 : 'tags this) ->
        fun ~index:(x12391 : GLuint.t) ->
          fun ~values:(x12392 : Float32List.t) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x12393) "vertexAttrib4fv"
                 [|(GLuint.t_to_js x12391);(Float32List.t_to_js x12392)|])
    let (vertexAttribPointer :
      'tags this ->
        index:GLuint.t ->
          size:GLint.t ->
            type_:GLenum.t ->
              normalized:GLboolean.t ->
                stride:GLsizei.t -> offset:GLintptr.t -> unit)
      =
      fun (x12401 : 'tags this) ->
        fun ~index:(x12395 : GLuint.t) ->
          fun ~size:(x12396 : GLint.t) ->
            fun ~type_:(x12397 : GLenum.t) ->
              fun ~normalized:(x12398 : GLboolean.t) ->
                fun ~stride:(x12399 : GLsizei.t) ->
                  fun ~offset:(x12400 : GLintptr.t) ->
                    ignore
                      (Ojs.call (this_to_js Obj.magic x12401)
                         "vertexAttribPointer"
                         [|(GLuint.t_to_js x12395);(GLint.t_to_js x12396);(
                           GLenum.t_to_js x12397);(GLboolean.t_to_js x12398);(
                           GLsizei.t_to_js x12399);(GLintptr.t_to_js x12400)|])
    let (viewport :
      'tags this ->
        x:GLint.t -> y:GLint.t -> width:GLsizei.t -> height:GLsizei.t -> unit)
      =
      fun (x12407 : 'tags this) ->
        fun ~x:(x12403 : GLint.t) ->
          fun ~y:(x12404 : GLint.t) ->
            fun ~width:(x12405 : GLsizei.t) ->
              fun ~height:(x12406 : GLsizei.t) ->
                ignore
                  (Ojs.call (this_to_js Obj.magic x12407) "viewport"
                     [|(GLint.t_to_js x12403);(GLint.t_to_js x12404);(
                       GLsizei.t_to_js x12405);(GLsizei.t_to_js x12406)|])
    let (get_ACTIVE_ATTRIBUTES : 'tags this -> GLenum.t) =
      fun (x12409 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12409)
             "ACTIVE_ATTRIBUTES")
    let (get_ACTIVE_TEXTURE : 'tags this -> GLenum.t) =
      fun (x12411 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12411) "ACTIVE_TEXTURE")
    let (get_ACTIVE_UNIFORMS : 'tags this -> GLenum.t) =
      fun (x12413 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12413) "ACTIVE_UNIFORMS")
    let (get_ALIASED_LINE_WIDTH_RANGE : 'tags this -> GLenum.t) =
      fun (x12415 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12415)
             "ALIASED_LINE_WIDTH_RANGE")
    let (get_ALIASED_POINT_SIZE_RANGE : 'tags this -> GLenum.t) =
      fun (x12417 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12417)
             "ALIASED_POINT_SIZE_RANGE")
    let (get_ALPHA : 'tags this -> GLenum.t) =
      fun (x12419 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12419) "ALPHA")
    let (get_ALPHA_BITS : 'tags this -> GLenum.t) =
      fun (x12421 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12421) "ALPHA_BITS")
    let (get_ALWAYS : 'tags this -> GLenum.t) =
      fun (x12423 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12423) "ALWAYS")
    let (get_ARRAY_BUFFER : 'tags this -> GLenum.t) =
      fun (x12425 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12425) "ARRAY_BUFFER")
    let (get_ARRAY_BUFFER_BINDING : 'tags this -> GLenum.t) =
      fun (x12427 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12427)
             "ARRAY_BUFFER_BINDING")
    let (get_ATTACHED_SHADERS : 'tags this -> GLenum.t) =
      fun (x12429 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12429)
             "ATTACHED_SHADERS")
    let (get_BACK : 'tags this -> GLenum.t) =
      fun (x12431 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12431) "BACK")
    let (get_BLEND : 'tags this -> GLenum.t) =
      fun (x12433 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12433) "BLEND")
    let (get_BLEND_COLOR : 'tags this -> GLenum.t) =
      fun (x12435 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12435) "BLEND_COLOR")
    let (get_BLEND_DST_ALPHA : 'tags this -> GLenum.t) =
      fun (x12437 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12437) "BLEND_DST_ALPHA")
    let (get_BLEND_DST_RGB : 'tags this -> GLenum.t) =
      fun (x12439 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12439) "BLEND_DST_RGB")
    let (get_BLEND_EQUATION : 'tags this -> GLenum.t) =
      fun (x12441 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12441) "BLEND_EQUATION")
    let (get_BLEND_EQUATION_ALPHA : 'tags this -> GLenum.t) =
      fun (x12443 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12443)
             "BLEND_EQUATION_ALPHA")
    let (get_BLEND_EQUATION_RGB : 'tags this -> GLenum.t) =
      fun (x12445 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12445)
             "BLEND_EQUATION_RGB")
    let (get_BLEND_SRC_ALPHA : 'tags this -> GLenum.t) =
      fun (x12447 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12447) "BLEND_SRC_ALPHA")
    let (get_BLEND_SRC_RGB : 'tags this -> GLenum.t) =
      fun (x12449 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12449) "BLEND_SRC_RGB")
    let (get_BLUE_BITS : 'tags this -> GLenum.t) =
      fun (x12451 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12451) "BLUE_BITS")
    let (get_BOOL : 'tags this -> GLenum.t) =
      fun (x12453 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12453) "BOOL")
    let (get_BOOL_VEC2 : 'tags this -> GLenum.t) =
      fun (x12455 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12455) "BOOL_VEC2")
    let (get_BOOL_VEC3 : 'tags this -> GLenum.t) =
      fun (x12457 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12457) "BOOL_VEC3")
    let (get_BOOL_VEC4 : 'tags this -> GLenum.t) =
      fun (x12459 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12459) "BOOL_VEC4")
    let (get_BROWSER_DEFAULT_WEBGL : 'tags this -> GLenum.t) =
      fun (x12461 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12461)
             "BROWSER_DEFAULT_WEBGL")
    let (get_BUFFER_SIZE : 'tags this -> GLenum.t) =
      fun (x12463 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12463) "BUFFER_SIZE")
    let (get_BUFFER_USAGE : 'tags this -> GLenum.t) =
      fun (x12465 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12465) "BUFFER_USAGE")
    let (get_BYTE : 'tags this -> GLenum.t) =
      fun (x12467 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12467) "BYTE")
    let (get_CCW : 'tags this -> GLenum.t) =
      fun (x12469 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12469) "CCW")
    let (get_CLAMP_TO_EDGE : 'tags this -> GLenum.t) =
      fun (x12471 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12471) "CLAMP_TO_EDGE")
    let (get_COLOR_ATTACHMENT0 : 'tags this -> GLenum.t) =
      fun (x12473 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12473)
             "COLOR_ATTACHMENT0")
    let (get_COLOR_BUFFER_BIT : 'tags this -> GLenum.t) =
      fun (x12475 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12475)
             "COLOR_BUFFER_BIT")
    let (get_COLOR_CLEAR_VALUE : 'tags this -> GLenum.t) =
      fun (x12477 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12477)
             "COLOR_CLEAR_VALUE")
    let (get_COLOR_WRITEMASK : 'tags this -> GLenum.t) =
      fun (x12479 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12479) "COLOR_WRITEMASK")
    let (get_COMPILE_STATUS : 'tags this -> GLenum.t) =
      fun (x12481 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12481) "COMPILE_STATUS")
    let (get_COMPRESSED_TEXTURE_FORMATS : 'tags this -> GLenum.t) =
      fun (x12483 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12483)
             "COMPRESSED_TEXTURE_FORMATS")
    let (get_CONSTANT_ALPHA : 'tags this -> GLenum.t) =
      fun (x12485 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12485) "CONSTANT_ALPHA")
    let (get_CONSTANT_COLOR : 'tags this -> GLenum.t) =
      fun (x12487 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12487) "CONSTANT_COLOR")
    let (get_CONTEXT_LOST_WEBGL : 'tags this -> GLenum.t) =
      fun (x12489 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12489)
             "CONTEXT_LOST_WEBGL")
    let (get_CULL_FACE : 'tags this -> GLenum.t) =
      fun (x12491 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12491) "CULL_FACE")
    let (get_CULL_FACE_MODE : 'tags this -> GLenum.t) =
      fun (x12493 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12493) "CULL_FACE_MODE")
    let (get_CURRENT_PROGRAM : 'tags this -> GLenum.t) =
      fun (x12495 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12495) "CURRENT_PROGRAM")
    let (get_CURRENT_VERTEX_ATTRIB : 'tags this -> GLenum.t) =
      fun (x12497 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12497)
             "CURRENT_VERTEX_ATTRIB")
    let (get_CW : 'tags this -> GLenum.t) =
      fun (x12499 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12499) "CW")
    let (get_DECR : 'tags this -> GLenum.t) =
      fun (x12501 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12501) "DECR")
    let (get_DECR_WRAP : 'tags this -> GLenum.t) =
      fun (x12503 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12503) "DECR_WRAP")
    let (get_DELETE_STATUS : 'tags this -> GLenum.t) =
      fun (x12505 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12505) "DELETE_STATUS")
    let (get_DEPTH_ATTACHMENT : 'tags this -> GLenum.t) =
      fun (x12507 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12507)
             "DEPTH_ATTACHMENT")
    let (get_DEPTH_BITS : 'tags this -> GLenum.t) =
      fun (x12509 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12509) "DEPTH_BITS")
    let (get_DEPTH_BUFFER_BIT : 'tags this -> GLenum.t) =
      fun (x12511 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12511)
             "DEPTH_BUFFER_BIT")
    let (get_DEPTH_CLEAR_VALUE : 'tags this -> GLenum.t) =
      fun (x12513 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12513)
             "DEPTH_CLEAR_VALUE")
    let (get_DEPTH_COMPONENT : 'tags this -> GLenum.t) =
      fun (x12515 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12515) "DEPTH_COMPONENT")
    let (get_DEPTH_COMPONENT16 : 'tags this -> GLenum.t) =
      fun (x12517 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12517)
             "DEPTH_COMPONENT16")
    let (get_DEPTH_FUNC : 'tags this -> GLenum.t) =
      fun (x12519 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12519) "DEPTH_FUNC")
    let (get_DEPTH_RANGE : 'tags this -> GLenum.t) =
      fun (x12521 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12521) "DEPTH_RANGE")
    let (get_DEPTH_STENCIL : 'tags this -> GLenum.t) =
      fun (x12523 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12523) "DEPTH_STENCIL")
    let (get_DEPTH_STENCIL_ATTACHMENT : 'tags this -> GLenum.t) =
      fun (x12525 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12525)
             "DEPTH_STENCIL_ATTACHMENT")
    let (get_DEPTH_TEST : 'tags this -> GLenum.t) =
      fun (x12527 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12527) "DEPTH_TEST")
    let (get_DEPTH_WRITEMASK : 'tags this -> GLenum.t) =
      fun (x12529 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12529) "DEPTH_WRITEMASK")
    let (get_DITHER : 'tags this -> GLenum.t) =
      fun (x12531 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12531) "DITHER")
    let (get_DONT_CARE : 'tags this -> GLenum.t) =
      fun (x12533 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12533) "DONT_CARE")
    let (get_DST_ALPHA : 'tags this -> GLenum.t) =
      fun (x12535 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12535) "DST_ALPHA")
    let (get_DST_COLOR : 'tags this -> GLenum.t) =
      fun (x12537 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12537) "DST_COLOR")
    let (get_DYNAMIC_DRAW : 'tags this -> GLenum.t) =
      fun (x12539 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12539) "DYNAMIC_DRAW")
    let (get_ELEMENT_ARRAY_BUFFER : 'tags this -> GLenum.t) =
      fun (x12541 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12541)
             "ELEMENT_ARRAY_BUFFER")
    let (get_ELEMENT_ARRAY_BUFFER_BINDING : 'tags this -> GLenum.t) =
      fun (x12543 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12543)
             "ELEMENT_ARRAY_BUFFER_BINDING")
    let (get_EQUAL : 'tags this -> GLenum.t) =
      fun (x12545 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12545) "EQUAL")
    let (get_FASTEST : 'tags this -> GLenum.t) =
      fun (x12547 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12547) "FASTEST")
    let (get_FLOAT : 'tags this -> GLenum.t) =
      fun (x12549 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12549) "FLOAT")
    let (get_FLOAT_MAT2 : 'tags this -> GLenum.t) =
      fun (x12551 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12551) "FLOAT_MAT2")
    let (get_FLOAT_MAT3 : 'tags this -> GLenum.t) =
      fun (x12553 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12553) "FLOAT_MAT3")
    let (get_FLOAT_MAT4 : 'tags this -> GLenum.t) =
      fun (x12555 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12555) "FLOAT_MAT4")
    let (get_FLOAT_VEC2 : 'tags this -> GLenum.t) =
      fun (x12557 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12557) "FLOAT_VEC2")
    let (get_FLOAT_VEC3 : 'tags this -> GLenum.t) =
      fun (x12559 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12559) "FLOAT_VEC3")
    let (get_FLOAT_VEC4 : 'tags this -> GLenum.t) =
      fun (x12561 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12561) "FLOAT_VEC4")
    let (get_FRAGMENT_SHADER : 'tags this -> GLenum.t) =
      fun (x12563 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12563) "FRAGMENT_SHADER")
    let (get_FRAMEBUFFER : 'tags this -> GLenum.t) =
      fun (x12565 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12565) "FRAMEBUFFER")
    let (get_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME : 'tags this -> GLenum.t) =
      fun (x12567 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12567)
             "FRAMEBUFFER_ATTACHMENT_OBJECT_NAME")
    let (get_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE : 'tags this -> GLenum.t) =
      fun (x12569 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12569)
             "FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE")
    let (get_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE :
      'tags this -> GLenum.t) =
      fun (x12571 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12571)
             "FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE")
    let (get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL : 'tags this -> GLenum.t) =
      fun (x12573 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12573)
             "FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL")
    let (get_FRAMEBUFFER_BINDING : 'tags this -> GLenum.t) =
      fun (x12575 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12575)
             "FRAMEBUFFER_BINDING")
    let (get_FRAMEBUFFER_COMPLETE : 'tags this -> GLenum.t) =
      fun (x12577 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12577)
             "FRAMEBUFFER_COMPLETE")
    let (get_FRAMEBUFFER_INCOMPLETE_ATTACHMENT : 'tags this -> GLenum.t) =
      fun (x12579 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12579)
             "FRAMEBUFFER_INCOMPLETE_ATTACHMENT")
    let (get_FRAMEBUFFER_INCOMPLETE_DIMENSIONS : 'tags this -> GLenum.t) =
      fun (x12581 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12581)
             "FRAMEBUFFER_INCOMPLETE_DIMENSIONS")
    let (get_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT :
      'tags this -> GLenum.t) =
      fun (x12583 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12583)
             "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT")
    let (get_FRAMEBUFFER_UNSUPPORTED : 'tags this -> GLenum.t) =
      fun (x12585 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12585)
             "FRAMEBUFFER_UNSUPPORTED")
    let (get_FRONT : 'tags this -> GLenum.t) =
      fun (x12587 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12587) "FRONT")
    let (get_FRONT_AND_BACK : 'tags this -> GLenum.t) =
      fun (x12589 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12589) "FRONT_AND_BACK")
    let (get_FRONT_FACE : 'tags this -> GLenum.t) =
      fun (x12591 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12591) "FRONT_FACE")
    let (get_FUNC_ADD : 'tags this -> GLenum.t) =
      fun (x12593 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12593) "FUNC_ADD")
    let (get_FUNC_REVERSE_SUBTRACT : 'tags this -> GLenum.t) =
      fun (x12595 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12595)
             "FUNC_REVERSE_SUBTRACT")
    let (get_FUNC_SUBTRACT : 'tags this -> GLenum.t) =
      fun (x12597 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12597) "FUNC_SUBTRACT")
    let (get_GENERATE_MIPMAP_HINT : 'tags this -> GLenum.t) =
      fun (x12599 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12599)
             "GENERATE_MIPMAP_HINT")
    let (get_GEQUAL : 'tags this -> GLenum.t) =
      fun (x12601 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12601) "GEQUAL")
    let (get_GREATER : 'tags this -> GLenum.t) =
      fun (x12603 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12603) "GREATER")
    let (get_GREEN_BITS : 'tags this -> GLenum.t) =
      fun (x12605 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12605) "GREEN_BITS")
    let (get_HIGH_FLOAT : 'tags this -> GLenum.t) =
      fun (x12607 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12607) "HIGH_FLOAT")
    let (get_HIGH_INT : 'tags this -> GLenum.t) =
      fun (x12609 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12609) "HIGH_INT")
    let (get_IMPLEMENTATION_COLOR_READ_FORMAT : 'tags this -> GLenum.t) =
      fun (x12611 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12611)
             "IMPLEMENTATION_COLOR_READ_FORMAT")
    let (get_IMPLEMENTATION_COLOR_READ_TYPE : 'tags this -> GLenum.t) =
      fun (x12613 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12613)
             "IMPLEMENTATION_COLOR_READ_TYPE")
    let (get_INCR : 'tags this -> GLenum.t) =
      fun (x12615 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12615) "INCR")
    let (get_INCR_WRAP : 'tags this -> GLenum.t) =
      fun (x12617 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12617) "INCR_WRAP")
    let (get_INT : 'tags this -> GLenum.t) =
      fun (x12619 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12619) "INT")
    let (get_INT_VEC2 : 'tags this -> GLenum.t) =
      fun (x12621 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12621) "INT_VEC2")
    let (get_INT_VEC3 : 'tags this -> GLenum.t) =
      fun (x12623 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12623) "INT_VEC3")
    let (get_INT_VEC4 : 'tags this -> GLenum.t) =
      fun (x12625 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12625) "INT_VEC4")
    let (get_INVALID_ENUM : 'tags this -> GLenum.t) =
      fun (x12627 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12627) "INVALID_ENUM")
    let (get_INVALID_FRAMEBUFFER_OPERATION : 'tags this -> GLenum.t) =
      fun (x12629 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12629)
             "INVALID_FRAMEBUFFER_OPERATION")
    let (get_INVALID_OPERATION : 'tags this -> GLenum.t) =
      fun (x12631 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12631)
             "INVALID_OPERATION")
    let (get_INVALID_VALUE : 'tags this -> GLenum.t) =
      fun (x12633 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12633) "INVALID_VALUE")
    let (get_INVERT : 'tags this -> GLenum.t) =
      fun (x12635 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12635) "INVERT")
    let (get_KEEP : 'tags this -> GLenum.t) =
      fun (x12637 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12637) "KEEP")
    let (get_LEQUAL : 'tags this -> GLenum.t) =
      fun (x12639 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12639) "LEQUAL")
    let (get_LESS : 'tags this -> GLenum.t) =
      fun (x12641 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12641) "LESS")
    let (get_LINEAR : 'tags this -> GLenum.t) =
      fun (x12643 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12643) "LINEAR")
    let (get_LINEAR_MIPMAP_LINEAR : 'tags this -> GLenum.t) =
      fun (x12645 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12645)
             "LINEAR_MIPMAP_LINEAR")
    let (get_LINEAR_MIPMAP_NEAREST : 'tags this -> GLenum.t) =
      fun (x12647 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12647)
             "LINEAR_MIPMAP_NEAREST")
    let (get_LINES : 'tags this -> GLenum.t) =
      fun (x12649 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12649) "LINES")
    let (get_LINE_LOOP : 'tags this -> GLenum.t) =
      fun (x12651 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12651) "LINE_LOOP")
    let (get_LINE_STRIP : 'tags this -> GLenum.t) =
      fun (x12653 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12653) "LINE_STRIP")
    let (get_LINE_WIDTH : 'tags this -> GLenum.t) =
      fun (x12655 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12655) "LINE_WIDTH")
    let (get_LINK_STATUS : 'tags this -> GLenum.t) =
      fun (x12657 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12657) "LINK_STATUS")
    let (get_LOW_FLOAT : 'tags this -> GLenum.t) =
      fun (x12659 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12659) "LOW_FLOAT")
    let (get_LOW_INT : 'tags this -> GLenum.t) =
      fun (x12661 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12661) "LOW_INT")
    let (get_LUMINANCE : 'tags this -> GLenum.t) =
      fun (x12663 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12663) "LUMINANCE")
    let (get_LUMINANCE_ALPHA : 'tags this -> GLenum.t) =
      fun (x12665 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12665) "LUMINANCE_ALPHA")
    let (get_MAX_COMBINED_TEXTURE_IMAGE_UNITS : 'tags this -> GLenum.t) =
      fun (x12667 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12667)
             "MAX_COMBINED_TEXTURE_IMAGE_UNITS")
    let (get_MAX_CUBE_MAP_TEXTURE_SIZE : 'tags this -> GLenum.t) =
      fun (x12669 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12669)
             "MAX_CUBE_MAP_TEXTURE_SIZE")
    let (get_MAX_FRAGMENT_UNIFORM_VECTORS : 'tags this -> GLenum.t) =
      fun (x12671 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12671)
             "MAX_FRAGMENT_UNIFORM_VECTORS")
    let (get_MAX_RENDERBUFFER_SIZE : 'tags this -> GLenum.t) =
      fun (x12673 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12673)
             "MAX_RENDERBUFFER_SIZE")
    let (get_MAX_TEXTURE_IMAGE_UNITS : 'tags this -> GLenum.t) =
      fun (x12675 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12675)
             "MAX_TEXTURE_IMAGE_UNITS")
    let (get_MAX_TEXTURE_SIZE : 'tags this -> GLenum.t) =
      fun (x12677 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12677)
             "MAX_TEXTURE_SIZE")
    let (get_MAX_VARYING_VECTORS : 'tags this -> GLenum.t) =
      fun (x12679 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12679)
             "MAX_VARYING_VECTORS")
    let (get_MAX_VERTEX_ATTRIBS : 'tags this -> GLenum.t) =
      fun (x12681 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12681)
             "MAX_VERTEX_ATTRIBS")
    let (get_MAX_VERTEX_TEXTURE_IMAGE_UNITS : 'tags this -> GLenum.t) =
      fun (x12683 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12683)
             "MAX_VERTEX_TEXTURE_IMAGE_UNITS")
    let (get_MAX_VERTEX_UNIFORM_VECTORS : 'tags this -> GLenum.t) =
      fun (x12685 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12685)
             "MAX_VERTEX_UNIFORM_VECTORS")
    let (get_MAX_VIEWPORT_DIMS : 'tags this -> GLenum.t) =
      fun (x12687 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12687)
             "MAX_VIEWPORT_DIMS")
    let (get_MEDIUM_FLOAT : 'tags this -> GLenum.t) =
      fun (x12689 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12689) "MEDIUM_FLOAT")
    let (get_MEDIUM_INT : 'tags this -> GLenum.t) =
      fun (x12691 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12691) "MEDIUM_INT")
    let (get_MIRRORED_REPEAT : 'tags this -> GLenum.t) =
      fun (x12693 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12693) "MIRRORED_REPEAT")
    let (get_NEAREST : 'tags this -> GLenum.t) =
      fun (x12695 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12695) "NEAREST")
    let (get_NEAREST_MIPMAP_LINEAR : 'tags this -> GLenum.t) =
      fun (x12697 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12697)
             "NEAREST_MIPMAP_LINEAR")
    let (get_NEAREST_MIPMAP_NEAREST : 'tags this -> GLenum.t) =
      fun (x12699 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12699)
             "NEAREST_MIPMAP_NEAREST")
    let (get_NEVER : 'tags this -> GLenum.t) =
      fun (x12701 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12701) "NEVER")
    let (get_NICEST : 'tags this -> GLenum.t) =
      fun (x12703 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12703) "NICEST")
    let (get_NONE : 'tags this -> GLenum.t) =
      fun (x12705 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12705) "NONE")
    let (get_NOTEQUAL : 'tags this -> GLenum.t) =
      fun (x12707 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12707) "NOTEQUAL")
    let (get_NO_ERROR : 'tags this -> GLenum.t) =
      fun (x12709 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12709) "NO_ERROR")
    let (get_ONE : 'tags this -> GLenum.t) =
      fun (x12711 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12711) "ONE")
    let (get_ONE_MINUS_CONSTANT_ALPHA : 'tags this -> GLenum.t) =
      fun (x12713 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12713)
             "ONE_MINUS_CONSTANT_ALPHA")
    let (get_ONE_MINUS_CONSTANT_COLOR : 'tags this -> GLenum.t) =
      fun (x12715 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12715)
             "ONE_MINUS_CONSTANT_COLOR")
    let (get_ONE_MINUS_DST_ALPHA : 'tags this -> GLenum.t) =
      fun (x12717 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12717)
             "ONE_MINUS_DST_ALPHA")
    let (get_ONE_MINUS_DST_COLOR : 'tags this -> GLenum.t) =
      fun (x12719 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12719)
             "ONE_MINUS_DST_COLOR")
    let (get_ONE_MINUS_SRC_ALPHA : 'tags this -> GLenum.t) =
      fun (x12721 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12721)
             "ONE_MINUS_SRC_ALPHA")
    let (get_ONE_MINUS_SRC_COLOR : 'tags this -> GLenum.t) =
      fun (x12723 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12723)
             "ONE_MINUS_SRC_COLOR")
    let (get_OUT_OF_MEMORY : 'tags this -> GLenum.t) =
      fun (x12725 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12725) "OUT_OF_MEMORY")
    let (get_PACK_ALIGNMENT : 'tags this -> GLenum.t) =
      fun (x12727 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12727) "PACK_ALIGNMENT")
    let (get_POINTS : 'tags this -> GLenum.t) =
      fun (x12729 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12729) "POINTS")
    let (get_POLYGON_OFFSET_FACTOR : 'tags this -> GLenum.t) =
      fun (x12731 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12731)
             "POLYGON_OFFSET_FACTOR")
    let (get_POLYGON_OFFSET_FILL : 'tags this -> GLenum.t) =
      fun (x12733 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12733)
             "POLYGON_OFFSET_FILL")
    let (get_POLYGON_OFFSET_UNITS : 'tags this -> GLenum.t) =
      fun (x12735 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12735)
             "POLYGON_OFFSET_UNITS")
    let (get_RED_BITS : 'tags this -> GLenum.t) =
      fun (x12737 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12737) "RED_BITS")
    let (get_RENDERBUFFER : 'tags this -> GLenum.t) =
      fun (x12739 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12739) "RENDERBUFFER")
    let (get_RENDERBUFFER_ALPHA_SIZE : 'tags this -> GLenum.t) =
      fun (x12741 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12741)
             "RENDERBUFFER_ALPHA_SIZE")
    let (get_RENDERBUFFER_BINDING : 'tags this -> GLenum.t) =
      fun (x12743 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12743)
             "RENDERBUFFER_BINDING")
    let (get_RENDERBUFFER_BLUE_SIZE : 'tags this -> GLenum.t) =
      fun (x12745 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12745)
             "RENDERBUFFER_BLUE_SIZE")
    let (get_RENDERBUFFER_DEPTH_SIZE : 'tags this -> GLenum.t) =
      fun (x12747 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12747)
             "RENDERBUFFER_DEPTH_SIZE")
    let (get_RENDERBUFFER_GREEN_SIZE : 'tags this -> GLenum.t) =
      fun (x12749 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12749)
             "RENDERBUFFER_GREEN_SIZE")
    let (get_RENDERBUFFER_HEIGHT : 'tags this -> GLenum.t) =
      fun (x12751 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12751)
             "RENDERBUFFER_HEIGHT")
    let (get_RENDERBUFFER_INTERNAL_FORMAT : 'tags this -> GLenum.t) =
      fun (x12753 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12753)
             "RENDERBUFFER_INTERNAL_FORMAT")
    let (get_RENDERBUFFER_RED_SIZE : 'tags this -> GLenum.t) =
      fun (x12755 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12755)
             "RENDERBUFFER_RED_SIZE")
    let (get_RENDERBUFFER_STENCIL_SIZE : 'tags this -> GLenum.t) =
      fun (x12757 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12757)
             "RENDERBUFFER_STENCIL_SIZE")
    let (get_RENDERBUFFER_WIDTH : 'tags this -> GLenum.t) =
      fun (x12759 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12759)
             "RENDERBUFFER_WIDTH")
    let (get_RENDERER : 'tags this -> GLenum.t) =
      fun (x12761 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12761) "RENDERER")
    let (get_REPEAT : 'tags this -> GLenum.t) =
      fun (x12763 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12763) "REPEAT")
    let (get_REPLACE : 'tags this -> GLenum.t) =
      fun (x12765 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12765) "REPLACE")
    let (get_RGB : 'tags this -> GLenum.t) =
      fun (x12767 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12767) "RGB")
    let (get_RGB565 : 'tags this -> GLenum.t) =
      fun (x12769 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12769) "RGB565")
    let (get_RGB5_A1 : 'tags this -> GLenum.t) =
      fun (x12771 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12771) "RGB5_A1")
    let (get_RGBA : 'tags this -> GLenum.t) =
      fun (x12773 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12773) "RGBA")
    let (get_RGBA4 : 'tags this -> GLenum.t) =
      fun (x12775 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12775) "RGBA4")
    let (get_SAMPLER_2D : 'tags this -> GLenum.t) =
      fun (x12777 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12777) "SAMPLER_2D")
    let (get_SAMPLER_CUBE : 'tags this -> GLenum.t) =
      fun (x12779 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12779) "SAMPLER_CUBE")
    let (get_SAMPLES : 'tags this -> GLenum.t) =
      fun (x12781 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12781) "SAMPLES")
    let (get_SAMPLE_ALPHA_TO_COVERAGE : 'tags this -> GLenum.t) =
      fun (x12783 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12783)
             "SAMPLE_ALPHA_TO_COVERAGE")
    let (get_SAMPLE_BUFFERS : 'tags this -> GLenum.t) =
      fun (x12785 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12785) "SAMPLE_BUFFERS")
    let (get_SAMPLE_COVERAGE : 'tags this -> GLenum.t) =
      fun (x12787 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12787) "SAMPLE_COVERAGE")
    let (get_SAMPLE_COVERAGE_INVERT : 'tags this -> GLenum.t) =
      fun (x12789 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12789)
             "SAMPLE_COVERAGE_INVERT")
    let (get_SAMPLE_COVERAGE_VALUE : 'tags this -> GLenum.t) =
      fun (x12791 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12791)
             "SAMPLE_COVERAGE_VALUE")
    let (get_SCISSOR_BOX : 'tags this -> GLenum.t) =
      fun (x12793 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12793) "SCISSOR_BOX")
    let (get_SCISSOR_TEST : 'tags this -> GLenum.t) =
      fun (x12795 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12795) "SCISSOR_TEST")
    let (get_SHADER_TYPE : 'tags this -> GLenum.t) =
      fun (x12797 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12797) "SHADER_TYPE")
    let (get_SHADING_LANGUAGE_VERSION : 'tags this -> GLenum.t) =
      fun (x12799 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12799)
             "SHADING_LANGUAGE_VERSION")
    let (get_SHORT : 'tags this -> GLenum.t) =
      fun (x12801 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12801) "SHORT")
    let (get_SRC_ALPHA : 'tags this -> GLenum.t) =
      fun (x12803 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12803) "SRC_ALPHA")
    let (get_SRC_ALPHA_SATURATE : 'tags this -> GLenum.t) =
      fun (x12805 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12805)
             "SRC_ALPHA_SATURATE")
    let (get_SRC_COLOR : 'tags this -> GLenum.t) =
      fun (x12807 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12807) "SRC_COLOR")
    let (get_STATIC_DRAW : 'tags this -> GLenum.t) =
      fun (x12809 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12809) "STATIC_DRAW")
    let (get_STENCIL_ATTACHMENT : 'tags this -> GLenum.t) =
      fun (x12811 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12811)
             "STENCIL_ATTACHMENT")
    let (get_STENCIL_BACK_FAIL : 'tags this -> GLenum.t) =
      fun (x12813 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12813)
             "STENCIL_BACK_FAIL")
    let (get_STENCIL_BACK_FUNC : 'tags this -> GLenum.t) =
      fun (x12815 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12815)
             "STENCIL_BACK_FUNC")
    let (get_STENCIL_BACK_PASS_DEPTH_FAIL : 'tags this -> GLenum.t) =
      fun (x12817 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12817)
             "STENCIL_BACK_PASS_DEPTH_FAIL")
    let (get_STENCIL_BACK_PASS_DEPTH_PASS : 'tags this -> GLenum.t) =
      fun (x12819 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12819)
             "STENCIL_BACK_PASS_DEPTH_PASS")
    let (get_STENCIL_BACK_REF : 'tags this -> GLenum.t) =
      fun (x12821 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12821)
             "STENCIL_BACK_REF")
    let (get_STENCIL_BACK_VALUE_MASK : 'tags this -> GLenum.t) =
      fun (x12823 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12823)
             "STENCIL_BACK_VALUE_MASK")
    let (get_STENCIL_BACK_WRITEMASK : 'tags this -> GLenum.t) =
      fun (x12825 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12825)
             "STENCIL_BACK_WRITEMASK")
    let (get_STENCIL_BITS : 'tags this -> GLenum.t) =
      fun (x12827 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12827) "STENCIL_BITS")
    let (get_STENCIL_BUFFER_BIT : 'tags this -> GLenum.t) =
      fun (x12829 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12829)
             "STENCIL_BUFFER_BIT")
    let (get_STENCIL_CLEAR_VALUE : 'tags this -> GLenum.t) =
      fun (x12831 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12831)
             "STENCIL_CLEAR_VALUE")
    let (get_STENCIL_FAIL : 'tags this -> GLenum.t) =
      fun (x12833 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12833) "STENCIL_FAIL")
    let (get_STENCIL_FUNC : 'tags this -> GLenum.t) =
      fun (x12835 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12835) "STENCIL_FUNC")
    let (get_STENCIL_INDEX8 : 'tags this -> GLenum.t) =
      fun (x12837 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12837) "STENCIL_INDEX8")
    let (get_STENCIL_PASS_DEPTH_FAIL : 'tags this -> GLenum.t) =
      fun (x12839 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12839)
             "STENCIL_PASS_DEPTH_FAIL")
    let (get_STENCIL_PASS_DEPTH_PASS : 'tags this -> GLenum.t) =
      fun (x12841 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12841)
             "STENCIL_PASS_DEPTH_PASS")
    let (get_STENCIL_REF : 'tags this -> GLenum.t) =
      fun (x12843 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12843) "STENCIL_REF")
    let (get_STENCIL_TEST : 'tags this -> GLenum.t) =
      fun (x12845 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12845) "STENCIL_TEST")
    let (get_STENCIL_VALUE_MASK : 'tags this -> GLenum.t) =
      fun (x12847 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12847)
             "STENCIL_VALUE_MASK")
    let (get_STENCIL_WRITEMASK : 'tags this -> GLenum.t) =
      fun (x12849 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12849)
             "STENCIL_WRITEMASK")
    let (get_STREAM_DRAW : 'tags this -> GLenum.t) =
      fun (x12851 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12851) "STREAM_DRAW")
    let (get_SUBPIXEL_BITS : 'tags this -> GLenum.t) =
      fun (x12853 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12853) "SUBPIXEL_BITS")
    let (get_TEXTURE : 'tags this -> GLenum.t) =
      fun (x12855 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12855) "TEXTURE")
    let (get_TEXTURE0 : 'tags this -> GLenum.t) =
      fun (x12857 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12857) "TEXTURE0")
    let (get_TEXTURE1 : 'tags this -> GLenum.t) =
      fun (x12859 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12859) "TEXTURE1")
    let (get_TEXTURE10 : 'tags this -> GLenum.t) =
      fun (x12861 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12861) "TEXTURE10")
    let (get_TEXTURE11 : 'tags this -> GLenum.t) =
      fun (x12863 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12863) "TEXTURE11")
    let (get_TEXTURE12 : 'tags this -> GLenum.t) =
      fun (x12865 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12865) "TEXTURE12")
    let (get_TEXTURE13 : 'tags this -> GLenum.t) =
      fun (x12867 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12867) "TEXTURE13")
    let (get_TEXTURE14 : 'tags this -> GLenum.t) =
      fun (x12869 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12869) "TEXTURE14")
    let (get_TEXTURE15 : 'tags this -> GLenum.t) =
      fun (x12871 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12871) "TEXTURE15")
    let (get_TEXTURE16 : 'tags this -> GLenum.t) =
      fun (x12873 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12873) "TEXTURE16")
    let (get_TEXTURE17 : 'tags this -> GLenum.t) =
      fun (x12875 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12875) "TEXTURE17")
    let (get_TEXTURE18 : 'tags this -> GLenum.t) =
      fun (x12877 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12877) "TEXTURE18")
    let (get_TEXTURE19 : 'tags this -> GLenum.t) =
      fun (x12879 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12879) "TEXTURE19")
    let (get_TEXTURE2 : 'tags this -> GLenum.t) =
      fun (x12881 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12881) "TEXTURE2")
    let (get_TEXTURE20 : 'tags this -> GLenum.t) =
      fun (x12883 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12883) "TEXTURE20")
    let (get_TEXTURE21 : 'tags this -> GLenum.t) =
      fun (x12885 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12885) "TEXTURE21")
    let (get_TEXTURE22 : 'tags this -> GLenum.t) =
      fun (x12887 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12887) "TEXTURE22")
    let (get_TEXTURE23 : 'tags this -> GLenum.t) =
      fun (x12889 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12889) "TEXTURE23")
    let (get_TEXTURE24 : 'tags this -> GLenum.t) =
      fun (x12891 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12891) "TEXTURE24")
    let (get_TEXTURE25 : 'tags this -> GLenum.t) =
      fun (x12893 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12893) "TEXTURE25")
    let (get_TEXTURE26 : 'tags this -> GLenum.t) =
      fun (x12895 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12895) "TEXTURE26")
    let (get_TEXTURE27 : 'tags this -> GLenum.t) =
      fun (x12897 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12897) "TEXTURE27")
    let (get_TEXTURE28 : 'tags this -> GLenum.t) =
      fun (x12899 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12899) "TEXTURE28")
    let (get_TEXTURE29 : 'tags this -> GLenum.t) =
      fun (x12901 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12901) "TEXTURE29")
    let (get_TEXTURE3 : 'tags this -> GLenum.t) =
      fun (x12903 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12903) "TEXTURE3")
    let (get_TEXTURE30 : 'tags this -> GLenum.t) =
      fun (x12905 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12905) "TEXTURE30")
    let (get_TEXTURE31 : 'tags this -> GLenum.t) =
      fun (x12907 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12907) "TEXTURE31")
    let (get_TEXTURE4 : 'tags this -> GLenum.t) =
      fun (x12909 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12909) "TEXTURE4")
    let (get_TEXTURE5 : 'tags this -> GLenum.t) =
      fun (x12911 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12911) "TEXTURE5")
    let (get_TEXTURE6 : 'tags this -> GLenum.t) =
      fun (x12913 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12913) "TEXTURE6")
    let (get_TEXTURE7 : 'tags this -> GLenum.t) =
      fun (x12915 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12915) "TEXTURE7")
    let (get_TEXTURE8 : 'tags this -> GLenum.t) =
      fun (x12917 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12917) "TEXTURE8")
    let (get_TEXTURE9 : 'tags this -> GLenum.t) =
      fun (x12919 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12919) "TEXTURE9")
    let (get_TEXTURE_2D : 'tags this -> GLenum.t) =
      fun (x12921 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12921) "TEXTURE_2D")
    let (get_TEXTURE_BINDING_2D : 'tags this -> GLenum.t) =
      fun (x12923 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12923)
             "TEXTURE_BINDING_2D")
    let (get_TEXTURE_BINDING_CUBE_MAP : 'tags this -> GLenum.t) =
      fun (x12925 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12925)
             "TEXTURE_BINDING_CUBE_MAP")
    let (get_TEXTURE_CUBE_MAP : 'tags this -> GLenum.t) =
      fun (x12927 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12927)
             "TEXTURE_CUBE_MAP")
    let (get_TEXTURE_CUBE_MAP_NEGATIVE_X : 'tags this -> GLenum.t) =
      fun (x12929 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12929)
             "TEXTURE_CUBE_MAP_NEGATIVE_X")
    let (get_TEXTURE_CUBE_MAP_NEGATIVE_Y : 'tags this -> GLenum.t) =
      fun (x12931 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12931)
             "TEXTURE_CUBE_MAP_NEGATIVE_Y")
    let (get_TEXTURE_CUBE_MAP_NEGATIVE_Z : 'tags this -> GLenum.t) =
      fun (x12933 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12933)
             "TEXTURE_CUBE_MAP_NEGATIVE_Z")
    let (get_TEXTURE_CUBE_MAP_POSITIVE_X : 'tags this -> GLenum.t) =
      fun (x12935 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12935)
             "TEXTURE_CUBE_MAP_POSITIVE_X")
    let (get_TEXTURE_CUBE_MAP_POSITIVE_Y : 'tags this -> GLenum.t) =
      fun (x12937 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12937)
             "TEXTURE_CUBE_MAP_POSITIVE_Y")
    let (get_TEXTURE_CUBE_MAP_POSITIVE_Z : 'tags this -> GLenum.t) =
      fun (x12939 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12939)
             "TEXTURE_CUBE_MAP_POSITIVE_Z")
    let (get_TEXTURE_MAG_FILTER : 'tags this -> GLenum.t) =
      fun (x12941 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12941)
             "TEXTURE_MAG_FILTER")
    let (get_TEXTURE_MIN_FILTER : 'tags this -> GLenum.t) =
      fun (x12943 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12943)
             "TEXTURE_MIN_FILTER")
    let (get_TEXTURE_WRAP_S : 'tags this -> GLenum.t) =
      fun (x12945 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12945) "TEXTURE_WRAP_S")
    let (get_TEXTURE_WRAP_T : 'tags this -> GLenum.t) =
      fun (x12947 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12947) "TEXTURE_WRAP_T")
    let (get_TRIANGLES : 'tags this -> GLenum.t) =
      fun (x12949 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12949) "TRIANGLES")
    let (get_TRIANGLE_FAN : 'tags this -> GLenum.t) =
      fun (x12951 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12951) "TRIANGLE_FAN")
    let (get_TRIANGLE_STRIP : 'tags this -> GLenum.t) =
      fun (x12953 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12953) "TRIANGLE_STRIP")
    let (get_UNPACK_ALIGNMENT : 'tags this -> GLenum.t) =
      fun (x12955 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12955)
             "UNPACK_ALIGNMENT")
    let (get_UNPACK_COLORSPACE_CONVERSION_WEBGL : 'tags this -> GLenum.t) =
      fun (x12957 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12957)
             "UNPACK_COLORSPACE_CONVERSION_WEBGL")
    let (get_UNPACK_FLIP_Y_WEBGL : 'tags this -> GLenum.t) =
      fun (x12959 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12959)
             "UNPACK_FLIP_Y_WEBGL")
    let (get_UNPACK_PREMULTIPLY_ALPHA_WEBGL : 'tags this -> GLenum.t) =
      fun (x12961 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12961)
             "UNPACK_PREMULTIPLY_ALPHA_WEBGL")
    let (get_UNSIGNED_BYTE : 'tags this -> GLenum.t) =
      fun (x12963 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12963) "UNSIGNED_BYTE")
    let (get_UNSIGNED_INT : 'tags this -> GLenum.t) =
      fun (x12965 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12965) "UNSIGNED_INT")
    let (get_UNSIGNED_SHORT : 'tags this -> GLenum.t) =
      fun (x12967 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12967) "UNSIGNED_SHORT")
    let (get_UNSIGNED_SHORT_4_4_4_4 : 'tags this -> GLenum.t) =
      fun (x12969 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12969)
             "UNSIGNED_SHORT_4_4_4_4")
    let (get_UNSIGNED_SHORT_5_5_5_1 : 'tags this -> GLenum.t) =
      fun (x12971 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12971)
             "UNSIGNED_SHORT_5_5_5_1")
    let (get_UNSIGNED_SHORT_5_6_5 : 'tags this -> GLenum.t) =
      fun (x12973 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12973)
             "UNSIGNED_SHORT_5_6_5")
    let (get_VALIDATE_STATUS : 'tags this -> GLenum.t) =
      fun (x12975 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12975) "VALIDATE_STATUS")
    let (get_VENDOR : 'tags this -> GLenum.t) =
      fun (x12977 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12977) "VENDOR")
    let (get_VERSION : 'tags this -> GLenum.t) =
      fun (x12979 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12979) "VERSION")
    let (get_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING : 'tags this -> GLenum.t) =
      fun (x12981 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12981)
             "VERTEX_ATTRIB_ARRAY_BUFFER_BINDING")
    let (get_VERTEX_ATTRIB_ARRAY_ENABLED : 'tags this -> GLenum.t) =
      fun (x12983 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12983)
             "VERTEX_ATTRIB_ARRAY_ENABLED")
    let (get_VERTEX_ATTRIB_ARRAY_NORMALIZED : 'tags this -> GLenum.t) =
      fun (x12985 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12985)
             "VERTEX_ATTRIB_ARRAY_NORMALIZED")
    let (get_VERTEX_ATTRIB_ARRAY_POINTER : 'tags this -> GLenum.t) =
      fun (x12987 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12987)
             "VERTEX_ATTRIB_ARRAY_POINTER")
    let (get_VERTEX_ATTRIB_ARRAY_SIZE : 'tags this -> GLenum.t) =
      fun (x12989 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12989)
             "VERTEX_ATTRIB_ARRAY_SIZE")
    let (get_VERTEX_ATTRIB_ARRAY_STRIDE : 'tags this -> GLenum.t) =
      fun (x12991 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12991)
             "VERTEX_ATTRIB_ARRAY_STRIDE")
    let (get_VERTEX_ATTRIB_ARRAY_TYPE : 'tags this -> GLenum.t) =
      fun (x12993 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12993)
             "VERTEX_ATTRIB_ARRAY_TYPE")
    let (get_VERTEX_SHADER : 'tags this -> GLenum.t) =
      fun (x12995 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12995) "VERTEX_SHADER")
    let (get_VIEWPORT : 'tags this -> GLenum.t) =
      fun (x12997 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12997) "VIEWPORT")
    let (get_ZERO : 'tags this -> GLenum.t) =
      fun (x12999 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x12999) "ZERO")
    let cast_from = Obj.magic
  end
module WebGLRenderingContext =
  struct
    type t =
      [ `WebGLRenderingContext  | `WebGLRenderingContextBase 
      | `WebGLRenderingContextOverloads ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x13002 : Ojs.t) -> t_of_js x13002
    and t_0_to_js : t_0 -> Ojs.t = fun (x13001 : t) -> t_to_js x13001
    type tags =
      [ `WebGLRenderingContext  | `WebGLRenderingContextBase 
      | `WebGLRenderingContextOverloads ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `WebGLRenderingContext ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x13005 : Ojs.t) -> intf_of_js __tags_of_js x13005
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x13003 : __tags intf) -> intf_to_js __tags_to_js x13003
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext") 
             [||])
    let (active_attributes : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "ACTIVE_ATTRIBUTES")
    let (active_texture : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "ACTIVE_TEXTURE")
    let (active_uniforms : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "ACTIVE_UNIFORMS")
    let (aliased_line_width_range : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "ALIASED_LINE_WIDTH_RANGE")
    let (aliased_point_size_range : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "ALIASED_POINT_SIZE_RANGE")
    let (alpha : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext") "ALPHA")
    let (alpha_bits : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "ALPHA_BITS")
    let (always : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext") "ALWAYS")
    let (array_buffer : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "ARRAY_BUFFER")
    let (array_buffer_binding : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "ARRAY_BUFFER_BINDING")
    let (attached_shaders : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "ATTACHED_SHADERS")
    let (back : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext") "BACK")
    let (blend : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext") "BLEND")
    let (blend_color : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "BLEND_COLOR")
    let (blend_dst_alpha : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "BLEND_DST_ALPHA")
    let (blend_dst_rgb : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "BLEND_DST_RGB")
    let (blend_equation : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "BLEND_EQUATION")
    let (blend_equation_alpha : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "BLEND_EQUATION_ALPHA")
    let (blend_equation_rgb : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "BLEND_EQUATION_RGB")
    let (blend_src_alpha : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "BLEND_SRC_ALPHA")
    let (blend_src_rgb : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "BLEND_SRC_RGB")
    let (blue_bits : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "BLUE_BITS")
    let (bool : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext") "BOOL")
    let (bool_vec2 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "BOOL_VEC2")
    let (bool_vec3 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "BOOL_VEC3")
    let (bool_vec4 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "BOOL_VEC4")
    let (browser_default_webgl : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "BROWSER_DEFAULT_WEBGL")
    let (buffer_size : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "BUFFER_SIZE")
    let (buffer_usage : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "BUFFER_USAGE")
    let (byte : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext") "BYTE")
    let (ccw : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext") "CCW")
    let (clamp_to_edge : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "CLAMP_TO_EDGE")
    let (color_attachment0 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "COLOR_ATTACHMENT0")
    let (color_buffer_bit : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "COLOR_BUFFER_BIT")
    let (color_clear_value : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "COLOR_CLEAR_VALUE")
    let (color_writemask : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "COLOR_WRITEMASK")
    let (compile_status : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "COMPILE_STATUS")
    let (compressed_texture_formats : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "COMPRESSED_TEXTURE_FORMATS")
    let (constant_alpha : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "CONSTANT_ALPHA")
    let (constant_color : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "CONSTANT_COLOR")
    let (context_lost_webgl : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "CONTEXT_LOST_WEBGL")
    let (cull_face : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "CULL_FACE")
    let (cull_face_mode : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "CULL_FACE_MODE")
    let (current_program : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "CURRENT_PROGRAM")
    let (current_vertex_attrib : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "CURRENT_VERTEX_ATTRIB")
    let (cw : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext") "CW")
    let (decr : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext") "DECR")
    let (decr_wrap : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "DECR_WRAP")
    let (delete_status : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "DELETE_STATUS")
    let (depth_attachment : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "DEPTH_ATTACHMENT")
    let (depth_bits : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "DEPTH_BITS")
    let (depth_buffer_bit : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "DEPTH_BUFFER_BIT")
    let (depth_clear_value : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "DEPTH_CLEAR_VALUE")
    let (depth_component : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "DEPTH_COMPONENT")
    let (depth_component16 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "DEPTH_COMPONENT16")
    let (depth_func : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "DEPTH_FUNC")
    let (depth_range : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "DEPTH_RANGE")
    let (depth_stencil : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "DEPTH_STENCIL")
    let (depth_stencil_attachment : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "DEPTH_STENCIL_ATTACHMENT")
    let (depth_test : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "DEPTH_TEST")
    let (depth_writemask : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "DEPTH_WRITEMASK")
    let (dither : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext") "DITHER")
    let (dont_care : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "DONT_CARE")
    let (dst_alpha : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "DST_ALPHA")
    let (dst_color : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "DST_COLOR")
    let (dynamic_draw : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "DYNAMIC_DRAW")
    let (element_array_buffer : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "ELEMENT_ARRAY_BUFFER")
    let (element_array_buffer_binding : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "ELEMENT_ARRAY_BUFFER_BINDING")
    let (equal : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext") "EQUAL")
    let (fastest : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "FASTEST")
    let (float : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext") "FLOAT")
    let (float_mat2 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "FLOAT_MAT2")
    let (float_mat3 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "FLOAT_MAT3")
    let (float_mat4 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "FLOAT_MAT4")
    let (float_vec2 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "FLOAT_VEC2")
    let (float_vec3 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "FLOAT_VEC3")
    let (float_vec4 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "FLOAT_VEC4")
    let (fragment_shader : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "FRAGMENT_SHADER")
    let (framebuffer : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "FRAMEBUFFER")
    let (framebuffer_attachment_object_name : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "FRAMEBUFFER_ATTACHMENT_OBJECT_NAME")
    let (framebuffer_attachment_object_type : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE")
    let (framebuffer_attachment_texture_cube_map_face : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE")
    let (framebuffer_attachment_texture_level : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL")
    let (framebuffer_binding : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "FRAMEBUFFER_BINDING")
    let (framebuffer_complete : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "FRAMEBUFFER_COMPLETE")
    let (framebuffer_incomplete_attachment : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "FRAMEBUFFER_INCOMPLETE_ATTACHMENT")
    let (framebuffer_incomplete_dimensions : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "FRAMEBUFFER_INCOMPLETE_DIMENSIONS")
    let (framebuffer_incomplete_missing_attachment : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT")
    let (framebuffer_unsupported : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "FRAMEBUFFER_UNSUPPORTED")
    let (front : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext") "FRONT")
    let (front_and_back : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "FRONT_AND_BACK")
    let (front_face : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "FRONT_FACE")
    let (func_add : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "FUNC_ADD")
    let (func_reverse_subtract : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "FUNC_REVERSE_SUBTRACT")
    let (func_subtract : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "FUNC_SUBTRACT")
    let (generate_mipmap_hint : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "GENERATE_MIPMAP_HINT")
    let (gequal : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext") "GEQUAL")
    let (greater : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "GREATER")
    let (green_bits : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "GREEN_BITS")
    let (high_float : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "HIGH_FLOAT")
    let (high_int : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "HIGH_INT")
    let (implementation_color_read_format : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "IMPLEMENTATION_COLOR_READ_FORMAT")
    let (implementation_color_read_type : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "IMPLEMENTATION_COLOR_READ_TYPE")
    let (incr : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext") "INCR")
    let (incr_wrap : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "INCR_WRAP")
    let (int : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext") "INT")
    let (int_vec2 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "INT_VEC2")
    let (int_vec3 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "INT_VEC3")
    let (int_vec4 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "INT_VEC4")
    let (invalid_enum : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "INVALID_ENUM")
    let (invalid_framebuffer_operation : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "INVALID_FRAMEBUFFER_OPERATION")
    let (invalid_operation : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "INVALID_OPERATION")
    let (invalid_value : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "INVALID_VALUE")
    let (invert : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext") "INVERT")
    let (keep : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext") "KEEP")
    let (lequal : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext") "LEQUAL")
    let (less : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext") "LESS")
    let (linear : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext") "LINEAR")
    let (linear_mipmap_linear : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "LINEAR_MIPMAP_LINEAR")
    let (linear_mipmap_nearest : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "LINEAR_MIPMAP_NEAREST")
    let (lines : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext") "LINES")
    let (line_loop : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "LINE_LOOP")
    let (line_strip : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "LINE_STRIP")
    let (line_width : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "LINE_WIDTH")
    let (link_status : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "LINK_STATUS")
    let (low_float : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "LOW_FLOAT")
    let (low_int : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "LOW_INT")
    let (luminance : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "LUMINANCE")
    let (luminance_alpha : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "LUMINANCE_ALPHA")
    let (max_combined_texture_image_units : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "MAX_COMBINED_TEXTURE_IMAGE_UNITS")
    let (max_cube_map_texture_size : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "MAX_CUBE_MAP_TEXTURE_SIZE")
    let (max_fragment_uniform_vectors : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "MAX_FRAGMENT_UNIFORM_VECTORS")
    let (max_renderbuffer_size : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "MAX_RENDERBUFFER_SIZE")
    let (max_texture_image_units : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "MAX_TEXTURE_IMAGE_UNITS")
    let (max_texture_size : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "MAX_TEXTURE_SIZE")
    let (max_varying_vectors : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "MAX_VARYING_VECTORS")
    let (max_vertex_attribs : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "MAX_VERTEX_ATTRIBS")
    let (max_vertex_texture_image_units : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "MAX_VERTEX_TEXTURE_IMAGE_UNITS")
    let (max_vertex_uniform_vectors : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "MAX_VERTEX_UNIFORM_VECTORS")
    let (max_viewport_dims : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "MAX_VIEWPORT_DIMS")
    let (medium_float : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "MEDIUM_FLOAT")
    let (medium_int : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "MEDIUM_INT")
    let (mirrored_repeat : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "MIRRORED_REPEAT")
    let (nearest : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "NEAREST")
    let (nearest_mipmap_linear : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "NEAREST_MIPMAP_LINEAR")
    let (nearest_mipmap_nearest : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "NEAREST_MIPMAP_NEAREST")
    let (never : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext") "NEVER")
    let (nicest : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext") "NICEST")
    let (none : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext") "NONE")
    let (notequal : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "NOTEQUAL")
    let (no_error : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "NO_ERROR")
    let (one : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext") "ONE")
    let (one_minus_constant_alpha : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "ONE_MINUS_CONSTANT_ALPHA")
    let (one_minus_constant_color : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "ONE_MINUS_CONSTANT_COLOR")
    let (one_minus_dst_alpha : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "ONE_MINUS_DST_ALPHA")
    let (one_minus_dst_color : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "ONE_MINUS_DST_COLOR")
    let (one_minus_src_alpha : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "ONE_MINUS_SRC_ALPHA")
    let (one_minus_src_color : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "ONE_MINUS_SRC_COLOR")
    let (out_of_memory : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "OUT_OF_MEMORY")
    let (pack_alignment : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "PACK_ALIGNMENT")
    let (points : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext") "POINTS")
    let (polygon_offset_factor : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "POLYGON_OFFSET_FACTOR")
    let (polygon_offset_fill : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "POLYGON_OFFSET_FILL")
    let (polygon_offset_units : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "POLYGON_OFFSET_UNITS")
    let (red_bits : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "RED_BITS")
    let (renderbuffer : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "RENDERBUFFER")
    let (renderbuffer_alpha_size : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "RENDERBUFFER_ALPHA_SIZE")
    let (renderbuffer_binding : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "RENDERBUFFER_BINDING")
    let (renderbuffer_blue_size : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "RENDERBUFFER_BLUE_SIZE")
    let (renderbuffer_depth_size : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "RENDERBUFFER_DEPTH_SIZE")
    let (renderbuffer_green_size : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "RENDERBUFFER_GREEN_SIZE")
    let (renderbuffer_height : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "RENDERBUFFER_HEIGHT")
    let (renderbuffer_internal_format : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "RENDERBUFFER_INTERNAL_FORMAT")
    let (renderbuffer_red_size : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "RENDERBUFFER_RED_SIZE")
    let (renderbuffer_stencil_size : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "RENDERBUFFER_STENCIL_SIZE")
    let (renderbuffer_width : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "RENDERBUFFER_WIDTH")
    let (renderer : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "RENDERER")
    let (repeat : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext") "REPEAT")
    let (replace : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "REPLACE")
    let (rgb : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext") "RGB")
    let (rgb565 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext") "RGB565")
    let (rgb5_a1 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "RGB5_A1")
    let (rgba : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext") "RGBA")
    let (rgba4 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext") "RGBA4")
    let (sampler_2d : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "SAMPLER_2D")
    let (sampler_cube : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "SAMPLER_CUBE")
    let (samples : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "SAMPLES")
    let (sample_alpha_to_coverage : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "SAMPLE_ALPHA_TO_COVERAGE")
    let (sample_buffers : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "SAMPLE_BUFFERS")
    let (sample_coverage : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "SAMPLE_COVERAGE")
    let (sample_coverage_invert : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "SAMPLE_COVERAGE_INVERT")
    let (sample_coverage_value : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "SAMPLE_COVERAGE_VALUE")
    let (scissor_box : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "SCISSOR_BOX")
    let (scissor_test : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "SCISSOR_TEST")
    let (shader_type : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "SHADER_TYPE")
    let (shading_language_version : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "SHADING_LANGUAGE_VERSION")
    let (short : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext") "SHORT")
    let (src_alpha : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "SRC_ALPHA")
    let (src_alpha_saturate : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "SRC_ALPHA_SATURATE")
    let (src_color : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "SRC_COLOR")
    let (static_draw : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "STATIC_DRAW")
    let (stencil_attachment : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "STENCIL_ATTACHMENT")
    let (stencil_back_fail : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "STENCIL_BACK_FAIL")
    let (stencil_back_func : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "STENCIL_BACK_FUNC")
    let (stencil_back_pass_depth_fail : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "STENCIL_BACK_PASS_DEPTH_FAIL")
    let (stencil_back_pass_depth_pass : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "STENCIL_BACK_PASS_DEPTH_PASS")
    let (stencil_back_ref : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "STENCIL_BACK_REF")
    let (stencil_back_value_mask : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "STENCIL_BACK_VALUE_MASK")
    let (stencil_back_writemask : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "STENCIL_BACK_WRITEMASK")
    let (stencil_bits : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "STENCIL_BITS")
    let (stencil_buffer_bit : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "STENCIL_BUFFER_BIT")
    let (stencil_clear_value : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "STENCIL_CLEAR_VALUE")
    let (stencil_fail : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "STENCIL_FAIL")
    let (stencil_func : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "STENCIL_FUNC")
    let (stencil_index8 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "STENCIL_INDEX8")
    let (stencil_pass_depth_fail : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "STENCIL_PASS_DEPTH_FAIL")
    let (stencil_pass_depth_pass : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "STENCIL_PASS_DEPTH_PASS")
    let (stencil_ref : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "STENCIL_REF")
    let (stencil_test : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "STENCIL_TEST")
    let (stencil_value_mask : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "STENCIL_VALUE_MASK")
    let (stencil_writemask : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "STENCIL_WRITEMASK")
    let (stream_draw : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "STREAM_DRAW")
    let (subpixel_bits : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "SUBPIXEL_BITS")
    let (texture : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE")
    let (texture0 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE0")
    let (texture1 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE1")
    let (texture10 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE10")
    let (texture11 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE11")
    let (texture12 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE12")
    let (texture13 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE13")
    let (texture14 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE14")
    let (texture15 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE15")
    let (texture16 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE16")
    let (texture17 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE17")
    let (texture18 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE18")
    let (texture19 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE19")
    let (texture2 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE2")
    let (texture20 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE20")
    let (texture21 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE21")
    let (texture22 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE22")
    let (texture23 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE23")
    let (texture24 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE24")
    let (texture25 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE25")
    let (texture26 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE26")
    let (texture27 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE27")
    let (texture28 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE28")
    let (texture29 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE29")
    let (texture3 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE3")
    let (texture30 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE30")
    let (texture31 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE31")
    let (texture4 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE4")
    let (texture5 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE5")
    let (texture6 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE6")
    let (texture7 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE7")
    let (texture8 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE8")
    let (texture9 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE9")
    let (texture_2d : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE_2D")
    let (texture_binding_2d : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE_BINDING_2D")
    let (texture_binding_cube_map : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE_BINDING_CUBE_MAP")
    let (texture_cube_map : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE_CUBE_MAP")
    let (texture_cube_map_negative_x : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE_CUBE_MAP_NEGATIVE_X")
    let (texture_cube_map_negative_y : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE_CUBE_MAP_NEGATIVE_Y")
    let (texture_cube_map_negative_z : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE_CUBE_MAP_NEGATIVE_Z")
    let (texture_cube_map_positive_x : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE_CUBE_MAP_POSITIVE_X")
    let (texture_cube_map_positive_y : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE_CUBE_MAP_POSITIVE_Y")
    let (texture_cube_map_positive_z : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE_CUBE_MAP_POSITIVE_Z")
    let (texture_mag_filter : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE_MAG_FILTER")
    let (texture_min_filter : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE_MIN_FILTER")
    let (texture_wrap_s : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE_WRAP_S")
    let (texture_wrap_t : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TEXTURE_WRAP_T")
    let (triangles : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TRIANGLES")
    let (triangle_fan : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TRIANGLE_FAN")
    let (triangle_strip : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "TRIANGLE_STRIP")
    let (unpack_alignment : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "UNPACK_ALIGNMENT")
    let (unpack_colorspace_conversion_webgl : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "UNPACK_COLORSPACE_CONVERSION_WEBGL")
    let (unpack_flip_y_webgl : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "UNPACK_FLIP_Y_WEBGL")
    let (unpack_premultiply_alpha_webgl : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "UNPACK_PREMULTIPLY_ALPHA_WEBGL")
    let (unsigned_byte : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "UNSIGNED_BYTE")
    let (unsigned_int : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "UNSIGNED_INT")
    let (unsigned_short : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "UNSIGNED_SHORT")
    let (unsigned_short_4_4_4_4 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "UNSIGNED_SHORT_4_4_4_4")
    let (unsigned_short_5_5_5_1 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "UNSIGNED_SHORT_5_5_5_1")
    let (unsigned_short_5_6_5 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "UNSIGNED_SHORT_5_6_5")
    let (validate_status : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "VALIDATE_STATUS")
    let (vendor : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext") "VENDOR")
    let (version : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "VERSION")
    let (vertex_attrib_array_buffer_binding : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "VERTEX_ATTRIB_ARRAY_BUFFER_BINDING")
    let (vertex_attrib_array_enabled : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "VERTEX_ATTRIB_ARRAY_ENABLED")
    let (vertex_attrib_array_normalized : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "VERTEX_ATTRIB_ARRAY_NORMALIZED")
    let (vertex_attrib_array_pointer : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "VERTEX_ATTRIB_ARRAY_POINTER")
    let (vertex_attrib_array_size : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "VERTEX_ATTRIB_ARRAY_SIZE")
    let (vertex_attrib_array_stride : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "VERTEX_ATTRIB_ARRAY_STRIDE")
    let (vertex_attrib_array_type : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "VERTEX_ATTRIB_ARRAY_TYPE")
    let (vertex_shader : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "VERTEX_SHADER")
    let (viewport : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
             "VIEWPORT")
    let (zero : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext") "ZERO")
  end
module AnonymousInterface119 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x13008 : Ojs.t) -> x13008
    and t_to_js : t -> Ojs.t = fun (x13007 : Ojs.t) -> x13007
    let (get_prototype : t -> WebGLRenderingContext.t) =
      fun (x13009 : t) ->
        WebGLRenderingContext.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13009) "prototype")
    let (set_prototype : t -> WebGLRenderingContext.t -> unit) =
      fun (x13010 : t) ->
        fun (x13011 : WebGLRenderingContext.t) ->
          Ojs.set_prop_ascii (t_to_js x13010) "prototype"
            (WebGLRenderingContext.t_to_js x13011)
    let (create : t -> WebGLRenderingContext.t) =
      fun (x13012 : t) ->
        WebGLRenderingContext.t_of_js (Ojs.new_obj (t_to_js x13012) [||])
    let (get_ACTIVE_ATTRIBUTES : t -> GLenum.t) =
      fun (x13013 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13013) "ACTIVE_ATTRIBUTES")
    let (get_ACTIVE_TEXTURE : t -> GLenum.t) =
      fun (x13014 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13014) "ACTIVE_TEXTURE")
    let (get_ACTIVE_UNIFORMS : t -> GLenum.t) =
      fun (x13015 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13015) "ACTIVE_UNIFORMS")
    let (get_ALIASED_LINE_WIDTH_RANGE : t -> GLenum.t) =
      fun (x13016 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13016) "ALIASED_LINE_WIDTH_RANGE")
    let (get_ALIASED_POINT_SIZE_RANGE : t -> GLenum.t) =
      fun (x13017 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13017) "ALIASED_POINT_SIZE_RANGE")
    let (get_ALPHA : t -> GLenum.t) =
      fun (x13018 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13018) "ALPHA")
    let (get_ALPHA_BITS : t -> GLenum.t) =
      fun (x13019 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13019) "ALPHA_BITS")
    let (get_ALWAYS : t -> GLenum.t) =
      fun (x13020 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13020) "ALWAYS")
    let (get_ARRAY_BUFFER : t -> GLenum.t) =
      fun (x13021 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13021) "ARRAY_BUFFER")
    let (get_ARRAY_BUFFER_BINDING : t -> GLenum.t) =
      fun (x13022 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13022) "ARRAY_BUFFER_BINDING")
    let (get_ATTACHED_SHADERS : t -> GLenum.t) =
      fun (x13023 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13023) "ATTACHED_SHADERS")
    let (get_BACK : t -> GLenum.t) =
      fun (x13024 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13024) "BACK")
    let (get_BLEND : t -> GLenum.t) =
      fun (x13025 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13025) "BLEND")
    let (get_BLEND_COLOR : t -> GLenum.t) =
      fun (x13026 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13026) "BLEND_COLOR")
    let (get_BLEND_DST_ALPHA : t -> GLenum.t) =
      fun (x13027 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13027) "BLEND_DST_ALPHA")
    let (get_BLEND_DST_RGB : t -> GLenum.t) =
      fun (x13028 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13028) "BLEND_DST_RGB")
    let (get_BLEND_EQUATION : t -> GLenum.t) =
      fun (x13029 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13029) "BLEND_EQUATION")
    let (get_BLEND_EQUATION_ALPHA : t -> GLenum.t) =
      fun (x13030 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13030) "BLEND_EQUATION_ALPHA")
    let (get_BLEND_EQUATION_RGB : t -> GLenum.t) =
      fun (x13031 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13031) "BLEND_EQUATION_RGB")
    let (get_BLEND_SRC_ALPHA : t -> GLenum.t) =
      fun (x13032 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13032) "BLEND_SRC_ALPHA")
    let (get_BLEND_SRC_RGB : t -> GLenum.t) =
      fun (x13033 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13033) "BLEND_SRC_RGB")
    let (get_BLUE_BITS : t -> GLenum.t) =
      fun (x13034 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13034) "BLUE_BITS")
    let (get_BOOL : t -> GLenum.t) =
      fun (x13035 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13035) "BOOL")
    let (get_BOOL_VEC2 : t -> GLenum.t) =
      fun (x13036 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13036) "BOOL_VEC2")
    let (get_BOOL_VEC3 : t -> GLenum.t) =
      fun (x13037 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13037) "BOOL_VEC3")
    let (get_BOOL_VEC4 : t -> GLenum.t) =
      fun (x13038 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13038) "BOOL_VEC4")
    let (get_BROWSER_DEFAULT_WEBGL : t -> GLenum.t) =
      fun (x13039 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13039) "BROWSER_DEFAULT_WEBGL")
    let (get_BUFFER_SIZE : t -> GLenum.t) =
      fun (x13040 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13040) "BUFFER_SIZE")
    let (get_BUFFER_USAGE : t -> GLenum.t) =
      fun (x13041 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13041) "BUFFER_USAGE")
    let (get_BYTE : t -> GLenum.t) =
      fun (x13042 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13042) "BYTE")
    let (get_CCW : t -> GLenum.t) =
      fun (x13043 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13043) "CCW")
    let (get_CLAMP_TO_EDGE : t -> GLenum.t) =
      fun (x13044 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13044) "CLAMP_TO_EDGE")
    let (get_COLOR_ATTACHMENT0 : t -> GLenum.t) =
      fun (x13045 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13045) "COLOR_ATTACHMENT0")
    let (get_COLOR_BUFFER_BIT : t -> GLenum.t) =
      fun (x13046 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13046) "COLOR_BUFFER_BIT")
    let (get_COLOR_CLEAR_VALUE : t -> GLenum.t) =
      fun (x13047 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13047) "COLOR_CLEAR_VALUE")
    let (get_COLOR_WRITEMASK : t -> GLenum.t) =
      fun (x13048 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13048) "COLOR_WRITEMASK")
    let (get_COMPILE_STATUS : t -> GLenum.t) =
      fun (x13049 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13049) "COMPILE_STATUS")
    let (get_COMPRESSED_TEXTURE_FORMATS : t -> GLenum.t) =
      fun (x13050 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13050) "COMPRESSED_TEXTURE_FORMATS")
    let (get_CONSTANT_ALPHA : t -> GLenum.t) =
      fun (x13051 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13051) "CONSTANT_ALPHA")
    let (get_CONSTANT_COLOR : t -> GLenum.t) =
      fun (x13052 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13052) "CONSTANT_COLOR")
    let (get_CONTEXT_LOST_WEBGL : t -> GLenum.t) =
      fun (x13053 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13053) "CONTEXT_LOST_WEBGL")
    let (get_CULL_FACE : t -> GLenum.t) =
      fun (x13054 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13054) "CULL_FACE")
    let (get_CULL_FACE_MODE : t -> GLenum.t) =
      fun (x13055 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13055) "CULL_FACE_MODE")
    let (get_CURRENT_PROGRAM : t -> GLenum.t) =
      fun (x13056 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13056) "CURRENT_PROGRAM")
    let (get_CURRENT_VERTEX_ATTRIB : t -> GLenum.t) =
      fun (x13057 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13057) "CURRENT_VERTEX_ATTRIB")
    let (get_CW : t -> GLenum.t) =
      fun (x13058 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13058) "CW")
    let (get_DECR : t -> GLenum.t) =
      fun (x13059 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13059) "DECR")
    let (get_DECR_WRAP : t -> GLenum.t) =
      fun (x13060 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13060) "DECR_WRAP")
    let (get_DELETE_STATUS : t -> GLenum.t) =
      fun (x13061 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13061) "DELETE_STATUS")
    let (get_DEPTH_ATTACHMENT : t -> GLenum.t) =
      fun (x13062 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13062) "DEPTH_ATTACHMENT")
    let (get_DEPTH_BITS : t -> GLenum.t) =
      fun (x13063 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13063) "DEPTH_BITS")
    let (get_DEPTH_BUFFER_BIT : t -> GLenum.t) =
      fun (x13064 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13064) "DEPTH_BUFFER_BIT")
    let (get_DEPTH_CLEAR_VALUE : t -> GLenum.t) =
      fun (x13065 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13065) "DEPTH_CLEAR_VALUE")
    let (get_DEPTH_COMPONENT : t -> GLenum.t) =
      fun (x13066 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13066) "DEPTH_COMPONENT")
    let (get_DEPTH_COMPONENT16 : t -> GLenum.t) =
      fun (x13067 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13067) "DEPTH_COMPONENT16")
    let (get_DEPTH_FUNC : t -> GLenum.t) =
      fun (x13068 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13068) "DEPTH_FUNC")
    let (get_DEPTH_RANGE : t -> GLenum.t) =
      fun (x13069 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13069) "DEPTH_RANGE")
    let (get_DEPTH_STENCIL : t -> GLenum.t) =
      fun (x13070 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13070) "DEPTH_STENCIL")
    let (get_DEPTH_STENCIL_ATTACHMENT : t -> GLenum.t) =
      fun (x13071 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13071) "DEPTH_STENCIL_ATTACHMENT")
    let (get_DEPTH_TEST : t -> GLenum.t) =
      fun (x13072 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13072) "DEPTH_TEST")
    let (get_DEPTH_WRITEMASK : t -> GLenum.t) =
      fun (x13073 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13073) "DEPTH_WRITEMASK")
    let (get_DITHER : t -> GLenum.t) =
      fun (x13074 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13074) "DITHER")
    let (get_DONT_CARE : t -> GLenum.t) =
      fun (x13075 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13075) "DONT_CARE")
    let (get_DST_ALPHA : t -> GLenum.t) =
      fun (x13076 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13076) "DST_ALPHA")
    let (get_DST_COLOR : t -> GLenum.t) =
      fun (x13077 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13077) "DST_COLOR")
    let (get_DYNAMIC_DRAW : t -> GLenum.t) =
      fun (x13078 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13078) "DYNAMIC_DRAW")
    let (get_ELEMENT_ARRAY_BUFFER : t -> GLenum.t) =
      fun (x13079 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13079) "ELEMENT_ARRAY_BUFFER")
    let (get_ELEMENT_ARRAY_BUFFER_BINDING : t -> GLenum.t) =
      fun (x13080 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13080) "ELEMENT_ARRAY_BUFFER_BINDING")
    let (get_EQUAL : t -> GLenum.t) =
      fun (x13081 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13081) "EQUAL")
    let (get_FASTEST : t -> GLenum.t) =
      fun (x13082 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13082) "FASTEST")
    let (get_FLOAT : t -> GLenum.t) =
      fun (x13083 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13083) "FLOAT")
    let (get_FLOAT_MAT2 : t -> GLenum.t) =
      fun (x13084 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13084) "FLOAT_MAT2")
    let (get_FLOAT_MAT3 : t -> GLenum.t) =
      fun (x13085 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13085) "FLOAT_MAT3")
    let (get_FLOAT_MAT4 : t -> GLenum.t) =
      fun (x13086 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13086) "FLOAT_MAT4")
    let (get_FLOAT_VEC2 : t -> GLenum.t) =
      fun (x13087 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13087) "FLOAT_VEC2")
    let (get_FLOAT_VEC3 : t -> GLenum.t) =
      fun (x13088 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13088) "FLOAT_VEC3")
    let (get_FLOAT_VEC4 : t -> GLenum.t) =
      fun (x13089 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13089) "FLOAT_VEC4")
    let (get_FRAGMENT_SHADER : t -> GLenum.t) =
      fun (x13090 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13090) "FRAGMENT_SHADER")
    let (get_FRAMEBUFFER : t -> GLenum.t) =
      fun (x13091 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13091) "FRAMEBUFFER")
    let (get_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME : t -> GLenum.t) =
      fun (x13092 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13092)
             "FRAMEBUFFER_ATTACHMENT_OBJECT_NAME")
    let (get_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE : t -> GLenum.t) =
      fun (x13093 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13093)
             "FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE")
    let (get_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE : t -> GLenum.t) =
      fun (x13094 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13094)
             "FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE")
    let (get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL : t -> GLenum.t) =
      fun (x13095 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13095)
             "FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL")
    let (get_FRAMEBUFFER_BINDING : t -> GLenum.t) =
      fun (x13096 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13096) "FRAMEBUFFER_BINDING")
    let (get_FRAMEBUFFER_COMPLETE : t -> GLenum.t) =
      fun (x13097 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13097) "FRAMEBUFFER_COMPLETE")
    let (get_FRAMEBUFFER_INCOMPLETE_ATTACHMENT : t -> GLenum.t) =
      fun (x13098 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13098)
             "FRAMEBUFFER_INCOMPLETE_ATTACHMENT")
    let (get_FRAMEBUFFER_INCOMPLETE_DIMENSIONS : t -> GLenum.t) =
      fun (x13099 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13099)
             "FRAMEBUFFER_INCOMPLETE_DIMENSIONS")
    let (get_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT : t -> GLenum.t) =
      fun (x13100 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13100)
             "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT")
    let (get_FRAMEBUFFER_UNSUPPORTED : t -> GLenum.t) =
      fun (x13101 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13101) "FRAMEBUFFER_UNSUPPORTED")
    let (get_FRONT : t -> GLenum.t) =
      fun (x13102 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13102) "FRONT")
    let (get_FRONT_AND_BACK : t -> GLenum.t) =
      fun (x13103 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13103) "FRONT_AND_BACK")
    let (get_FRONT_FACE : t -> GLenum.t) =
      fun (x13104 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13104) "FRONT_FACE")
    let (get_FUNC_ADD : t -> GLenum.t) =
      fun (x13105 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13105) "FUNC_ADD")
    let (get_FUNC_REVERSE_SUBTRACT : t -> GLenum.t) =
      fun (x13106 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13106) "FUNC_REVERSE_SUBTRACT")
    let (get_FUNC_SUBTRACT : t -> GLenum.t) =
      fun (x13107 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13107) "FUNC_SUBTRACT")
    let (get_GENERATE_MIPMAP_HINT : t -> GLenum.t) =
      fun (x13108 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13108) "GENERATE_MIPMAP_HINT")
    let (get_GEQUAL : t -> GLenum.t) =
      fun (x13109 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13109) "GEQUAL")
    let (get_GREATER : t -> GLenum.t) =
      fun (x13110 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13110) "GREATER")
    let (get_GREEN_BITS : t -> GLenum.t) =
      fun (x13111 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13111) "GREEN_BITS")
    let (get_HIGH_FLOAT : t -> GLenum.t) =
      fun (x13112 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13112) "HIGH_FLOAT")
    let (get_HIGH_INT : t -> GLenum.t) =
      fun (x13113 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13113) "HIGH_INT")
    let (get_IMPLEMENTATION_COLOR_READ_FORMAT : t -> GLenum.t) =
      fun (x13114 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13114)
             "IMPLEMENTATION_COLOR_READ_FORMAT")
    let (get_IMPLEMENTATION_COLOR_READ_TYPE : t -> GLenum.t) =
      fun (x13115 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13115)
             "IMPLEMENTATION_COLOR_READ_TYPE")
    let (get_INCR : t -> GLenum.t) =
      fun (x13116 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13116) "INCR")
    let (get_INCR_WRAP : t -> GLenum.t) =
      fun (x13117 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13117) "INCR_WRAP")
    let (get_INT : t -> GLenum.t) =
      fun (x13118 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13118) "INT")
    let (get_INT_VEC2 : t -> GLenum.t) =
      fun (x13119 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13119) "INT_VEC2")
    let (get_INT_VEC3 : t -> GLenum.t) =
      fun (x13120 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13120) "INT_VEC3")
    let (get_INT_VEC4 : t -> GLenum.t) =
      fun (x13121 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13121) "INT_VEC4")
    let (get_INVALID_ENUM : t -> GLenum.t) =
      fun (x13122 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13122) "INVALID_ENUM")
    let (get_INVALID_FRAMEBUFFER_OPERATION : t -> GLenum.t) =
      fun (x13123 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13123)
             "INVALID_FRAMEBUFFER_OPERATION")
    let (get_INVALID_OPERATION : t -> GLenum.t) =
      fun (x13124 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13124) "INVALID_OPERATION")
    let (get_INVALID_VALUE : t -> GLenum.t) =
      fun (x13125 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13125) "INVALID_VALUE")
    let (get_INVERT : t -> GLenum.t) =
      fun (x13126 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13126) "INVERT")
    let (get_KEEP : t -> GLenum.t) =
      fun (x13127 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13127) "KEEP")
    let (get_LEQUAL : t -> GLenum.t) =
      fun (x13128 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13128) "LEQUAL")
    let (get_LESS : t -> GLenum.t) =
      fun (x13129 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13129) "LESS")
    let (get_LINEAR : t -> GLenum.t) =
      fun (x13130 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13130) "LINEAR")
    let (get_LINEAR_MIPMAP_LINEAR : t -> GLenum.t) =
      fun (x13131 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13131) "LINEAR_MIPMAP_LINEAR")
    let (get_LINEAR_MIPMAP_NEAREST : t -> GLenum.t) =
      fun (x13132 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13132) "LINEAR_MIPMAP_NEAREST")
    let (get_LINES : t -> GLenum.t) =
      fun (x13133 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13133) "LINES")
    let (get_LINE_LOOP : t -> GLenum.t) =
      fun (x13134 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13134) "LINE_LOOP")
    let (get_LINE_STRIP : t -> GLenum.t) =
      fun (x13135 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13135) "LINE_STRIP")
    let (get_LINE_WIDTH : t -> GLenum.t) =
      fun (x13136 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13136) "LINE_WIDTH")
    let (get_LINK_STATUS : t -> GLenum.t) =
      fun (x13137 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13137) "LINK_STATUS")
    let (get_LOW_FLOAT : t -> GLenum.t) =
      fun (x13138 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13138) "LOW_FLOAT")
    let (get_LOW_INT : t -> GLenum.t) =
      fun (x13139 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13139) "LOW_INT")
    let (get_LUMINANCE : t -> GLenum.t) =
      fun (x13140 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13140) "LUMINANCE")
    let (get_LUMINANCE_ALPHA : t -> GLenum.t) =
      fun (x13141 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13141) "LUMINANCE_ALPHA")
    let (get_MAX_COMBINED_TEXTURE_IMAGE_UNITS : t -> GLenum.t) =
      fun (x13142 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13142)
             "MAX_COMBINED_TEXTURE_IMAGE_UNITS")
    let (get_MAX_CUBE_MAP_TEXTURE_SIZE : t -> GLenum.t) =
      fun (x13143 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13143) "MAX_CUBE_MAP_TEXTURE_SIZE")
    let (get_MAX_FRAGMENT_UNIFORM_VECTORS : t -> GLenum.t) =
      fun (x13144 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13144) "MAX_FRAGMENT_UNIFORM_VECTORS")
    let (get_MAX_RENDERBUFFER_SIZE : t -> GLenum.t) =
      fun (x13145 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13145) "MAX_RENDERBUFFER_SIZE")
    let (get_MAX_TEXTURE_IMAGE_UNITS : t -> GLenum.t) =
      fun (x13146 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13146) "MAX_TEXTURE_IMAGE_UNITS")
    let (get_MAX_TEXTURE_SIZE : t -> GLenum.t) =
      fun (x13147 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13147) "MAX_TEXTURE_SIZE")
    let (get_MAX_VARYING_VECTORS : t -> GLenum.t) =
      fun (x13148 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13148) "MAX_VARYING_VECTORS")
    let (get_MAX_VERTEX_ATTRIBS : t -> GLenum.t) =
      fun (x13149 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13149) "MAX_VERTEX_ATTRIBS")
    let (get_MAX_VERTEX_TEXTURE_IMAGE_UNITS : t -> GLenum.t) =
      fun (x13150 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13150)
             "MAX_VERTEX_TEXTURE_IMAGE_UNITS")
    let (get_MAX_VERTEX_UNIFORM_VECTORS : t -> GLenum.t) =
      fun (x13151 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13151) "MAX_VERTEX_UNIFORM_VECTORS")
    let (get_MAX_VIEWPORT_DIMS : t -> GLenum.t) =
      fun (x13152 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13152) "MAX_VIEWPORT_DIMS")
    let (get_MEDIUM_FLOAT : t -> GLenum.t) =
      fun (x13153 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13153) "MEDIUM_FLOAT")
    let (get_MEDIUM_INT : t -> GLenum.t) =
      fun (x13154 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13154) "MEDIUM_INT")
    let (get_MIRRORED_REPEAT : t -> GLenum.t) =
      fun (x13155 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13155) "MIRRORED_REPEAT")
    let (get_NEAREST : t -> GLenum.t) =
      fun (x13156 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13156) "NEAREST")
    let (get_NEAREST_MIPMAP_LINEAR : t -> GLenum.t) =
      fun (x13157 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13157) "NEAREST_MIPMAP_LINEAR")
    let (get_NEAREST_MIPMAP_NEAREST : t -> GLenum.t) =
      fun (x13158 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13158) "NEAREST_MIPMAP_NEAREST")
    let (get_NEVER : t -> GLenum.t) =
      fun (x13159 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13159) "NEVER")
    let (get_NICEST : t -> GLenum.t) =
      fun (x13160 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13160) "NICEST")
    let (get_NONE : t -> GLenum.t) =
      fun (x13161 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13161) "NONE")
    let (get_NOTEQUAL : t -> GLenum.t) =
      fun (x13162 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13162) "NOTEQUAL")
    let (get_NO_ERROR : t -> GLenum.t) =
      fun (x13163 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13163) "NO_ERROR")
    let (get_ONE : t -> GLenum.t) =
      fun (x13164 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13164) "ONE")
    let (get_ONE_MINUS_CONSTANT_ALPHA : t -> GLenum.t) =
      fun (x13165 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13165) "ONE_MINUS_CONSTANT_ALPHA")
    let (get_ONE_MINUS_CONSTANT_COLOR : t -> GLenum.t) =
      fun (x13166 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13166) "ONE_MINUS_CONSTANT_COLOR")
    let (get_ONE_MINUS_DST_ALPHA : t -> GLenum.t) =
      fun (x13167 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13167) "ONE_MINUS_DST_ALPHA")
    let (get_ONE_MINUS_DST_COLOR : t -> GLenum.t) =
      fun (x13168 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13168) "ONE_MINUS_DST_COLOR")
    let (get_ONE_MINUS_SRC_ALPHA : t -> GLenum.t) =
      fun (x13169 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13169) "ONE_MINUS_SRC_ALPHA")
    let (get_ONE_MINUS_SRC_COLOR : t -> GLenum.t) =
      fun (x13170 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13170) "ONE_MINUS_SRC_COLOR")
    let (get_OUT_OF_MEMORY : t -> GLenum.t) =
      fun (x13171 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13171) "OUT_OF_MEMORY")
    let (get_PACK_ALIGNMENT : t -> GLenum.t) =
      fun (x13172 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13172) "PACK_ALIGNMENT")
    let (get_POINTS : t -> GLenum.t) =
      fun (x13173 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13173) "POINTS")
    let (get_POLYGON_OFFSET_FACTOR : t -> GLenum.t) =
      fun (x13174 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13174) "POLYGON_OFFSET_FACTOR")
    let (get_POLYGON_OFFSET_FILL : t -> GLenum.t) =
      fun (x13175 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13175) "POLYGON_OFFSET_FILL")
    let (get_POLYGON_OFFSET_UNITS : t -> GLenum.t) =
      fun (x13176 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13176) "POLYGON_OFFSET_UNITS")
    let (get_RED_BITS : t -> GLenum.t) =
      fun (x13177 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13177) "RED_BITS")
    let (get_RENDERBUFFER : t -> GLenum.t) =
      fun (x13178 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13178) "RENDERBUFFER")
    let (get_RENDERBUFFER_ALPHA_SIZE : t -> GLenum.t) =
      fun (x13179 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13179) "RENDERBUFFER_ALPHA_SIZE")
    let (get_RENDERBUFFER_BINDING : t -> GLenum.t) =
      fun (x13180 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13180) "RENDERBUFFER_BINDING")
    let (get_RENDERBUFFER_BLUE_SIZE : t -> GLenum.t) =
      fun (x13181 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13181) "RENDERBUFFER_BLUE_SIZE")
    let (get_RENDERBUFFER_DEPTH_SIZE : t -> GLenum.t) =
      fun (x13182 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13182) "RENDERBUFFER_DEPTH_SIZE")
    let (get_RENDERBUFFER_GREEN_SIZE : t -> GLenum.t) =
      fun (x13183 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13183) "RENDERBUFFER_GREEN_SIZE")
    let (get_RENDERBUFFER_HEIGHT : t -> GLenum.t) =
      fun (x13184 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13184) "RENDERBUFFER_HEIGHT")
    let (get_RENDERBUFFER_INTERNAL_FORMAT : t -> GLenum.t) =
      fun (x13185 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13185) "RENDERBUFFER_INTERNAL_FORMAT")
    let (get_RENDERBUFFER_RED_SIZE : t -> GLenum.t) =
      fun (x13186 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13186) "RENDERBUFFER_RED_SIZE")
    let (get_RENDERBUFFER_STENCIL_SIZE : t -> GLenum.t) =
      fun (x13187 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13187) "RENDERBUFFER_STENCIL_SIZE")
    let (get_RENDERBUFFER_WIDTH : t -> GLenum.t) =
      fun (x13188 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13188) "RENDERBUFFER_WIDTH")
    let (get_RENDERER : t -> GLenum.t) =
      fun (x13189 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13189) "RENDERER")
    let (get_REPEAT : t -> GLenum.t) =
      fun (x13190 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13190) "REPEAT")
    let (get_REPLACE : t -> GLenum.t) =
      fun (x13191 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13191) "REPLACE")
    let (get_RGB : t -> GLenum.t) =
      fun (x13192 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13192) "RGB")
    let (get_RGB565 : t -> GLenum.t) =
      fun (x13193 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13193) "RGB565")
    let (get_RGB5_A1 : t -> GLenum.t) =
      fun (x13194 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13194) "RGB5_A1")
    let (get_RGBA : t -> GLenum.t) =
      fun (x13195 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13195) "RGBA")
    let (get_RGBA4 : t -> GLenum.t) =
      fun (x13196 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13196) "RGBA4")
    let (get_SAMPLER_2D : t -> GLenum.t) =
      fun (x13197 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13197) "SAMPLER_2D")
    let (get_SAMPLER_CUBE : t -> GLenum.t) =
      fun (x13198 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13198) "SAMPLER_CUBE")
    let (get_SAMPLES : t -> GLenum.t) =
      fun (x13199 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13199) "SAMPLES")
    let (get_SAMPLE_ALPHA_TO_COVERAGE : t -> GLenum.t) =
      fun (x13200 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13200) "SAMPLE_ALPHA_TO_COVERAGE")
    let (get_SAMPLE_BUFFERS : t -> GLenum.t) =
      fun (x13201 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13201) "SAMPLE_BUFFERS")
    let (get_SAMPLE_COVERAGE : t -> GLenum.t) =
      fun (x13202 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13202) "SAMPLE_COVERAGE")
    let (get_SAMPLE_COVERAGE_INVERT : t -> GLenum.t) =
      fun (x13203 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13203) "SAMPLE_COVERAGE_INVERT")
    let (get_SAMPLE_COVERAGE_VALUE : t -> GLenum.t) =
      fun (x13204 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13204) "SAMPLE_COVERAGE_VALUE")
    let (get_SCISSOR_BOX : t -> GLenum.t) =
      fun (x13205 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13205) "SCISSOR_BOX")
    let (get_SCISSOR_TEST : t -> GLenum.t) =
      fun (x13206 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13206) "SCISSOR_TEST")
    let (get_SHADER_TYPE : t -> GLenum.t) =
      fun (x13207 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13207) "SHADER_TYPE")
    let (get_SHADING_LANGUAGE_VERSION : t -> GLenum.t) =
      fun (x13208 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13208) "SHADING_LANGUAGE_VERSION")
    let (get_SHORT : t -> GLenum.t) =
      fun (x13209 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13209) "SHORT")
    let (get_SRC_ALPHA : t -> GLenum.t) =
      fun (x13210 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13210) "SRC_ALPHA")
    let (get_SRC_ALPHA_SATURATE : t -> GLenum.t) =
      fun (x13211 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13211) "SRC_ALPHA_SATURATE")
    let (get_SRC_COLOR : t -> GLenum.t) =
      fun (x13212 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13212) "SRC_COLOR")
    let (get_STATIC_DRAW : t -> GLenum.t) =
      fun (x13213 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13213) "STATIC_DRAW")
    let (get_STENCIL_ATTACHMENT : t -> GLenum.t) =
      fun (x13214 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13214) "STENCIL_ATTACHMENT")
    let (get_STENCIL_BACK_FAIL : t -> GLenum.t) =
      fun (x13215 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13215) "STENCIL_BACK_FAIL")
    let (get_STENCIL_BACK_FUNC : t -> GLenum.t) =
      fun (x13216 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13216) "STENCIL_BACK_FUNC")
    let (get_STENCIL_BACK_PASS_DEPTH_FAIL : t -> GLenum.t) =
      fun (x13217 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13217) "STENCIL_BACK_PASS_DEPTH_FAIL")
    let (get_STENCIL_BACK_PASS_DEPTH_PASS : t -> GLenum.t) =
      fun (x13218 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13218) "STENCIL_BACK_PASS_DEPTH_PASS")
    let (get_STENCIL_BACK_REF : t -> GLenum.t) =
      fun (x13219 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13219) "STENCIL_BACK_REF")
    let (get_STENCIL_BACK_VALUE_MASK : t -> GLenum.t) =
      fun (x13220 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13220) "STENCIL_BACK_VALUE_MASK")
    let (get_STENCIL_BACK_WRITEMASK : t -> GLenum.t) =
      fun (x13221 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13221) "STENCIL_BACK_WRITEMASK")
    let (get_STENCIL_BITS : t -> GLenum.t) =
      fun (x13222 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13222) "STENCIL_BITS")
    let (get_STENCIL_BUFFER_BIT : t -> GLenum.t) =
      fun (x13223 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13223) "STENCIL_BUFFER_BIT")
    let (get_STENCIL_CLEAR_VALUE : t -> GLenum.t) =
      fun (x13224 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13224) "STENCIL_CLEAR_VALUE")
    let (get_STENCIL_FAIL : t -> GLenum.t) =
      fun (x13225 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13225) "STENCIL_FAIL")
    let (get_STENCIL_FUNC : t -> GLenum.t) =
      fun (x13226 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13226) "STENCIL_FUNC")
    let (get_STENCIL_INDEX8 : t -> GLenum.t) =
      fun (x13227 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13227) "STENCIL_INDEX8")
    let (get_STENCIL_PASS_DEPTH_FAIL : t -> GLenum.t) =
      fun (x13228 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13228) "STENCIL_PASS_DEPTH_FAIL")
    let (get_STENCIL_PASS_DEPTH_PASS : t -> GLenum.t) =
      fun (x13229 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13229) "STENCIL_PASS_DEPTH_PASS")
    let (get_STENCIL_REF : t -> GLenum.t) =
      fun (x13230 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13230) "STENCIL_REF")
    let (get_STENCIL_TEST : t -> GLenum.t) =
      fun (x13231 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13231) "STENCIL_TEST")
    let (get_STENCIL_VALUE_MASK : t -> GLenum.t) =
      fun (x13232 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13232) "STENCIL_VALUE_MASK")
    let (get_STENCIL_WRITEMASK : t -> GLenum.t) =
      fun (x13233 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13233) "STENCIL_WRITEMASK")
    let (get_STREAM_DRAW : t -> GLenum.t) =
      fun (x13234 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13234) "STREAM_DRAW")
    let (get_SUBPIXEL_BITS : t -> GLenum.t) =
      fun (x13235 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13235) "SUBPIXEL_BITS")
    let (get_TEXTURE : t -> GLenum.t) =
      fun (x13236 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13236) "TEXTURE")
    let (get_TEXTURE0 : t -> GLenum.t) =
      fun (x13237 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13237) "TEXTURE0")
    let (get_TEXTURE1 : t -> GLenum.t) =
      fun (x13238 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13238) "TEXTURE1")
    let (get_TEXTURE10 : t -> GLenum.t) =
      fun (x13239 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13239) "TEXTURE10")
    let (get_TEXTURE11 : t -> GLenum.t) =
      fun (x13240 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13240) "TEXTURE11")
    let (get_TEXTURE12 : t -> GLenum.t) =
      fun (x13241 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13241) "TEXTURE12")
    let (get_TEXTURE13 : t -> GLenum.t) =
      fun (x13242 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13242) "TEXTURE13")
    let (get_TEXTURE14 : t -> GLenum.t) =
      fun (x13243 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13243) "TEXTURE14")
    let (get_TEXTURE15 : t -> GLenum.t) =
      fun (x13244 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13244) "TEXTURE15")
    let (get_TEXTURE16 : t -> GLenum.t) =
      fun (x13245 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13245) "TEXTURE16")
    let (get_TEXTURE17 : t -> GLenum.t) =
      fun (x13246 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13246) "TEXTURE17")
    let (get_TEXTURE18 : t -> GLenum.t) =
      fun (x13247 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13247) "TEXTURE18")
    let (get_TEXTURE19 : t -> GLenum.t) =
      fun (x13248 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13248) "TEXTURE19")
    let (get_TEXTURE2 : t -> GLenum.t) =
      fun (x13249 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13249) "TEXTURE2")
    let (get_TEXTURE20 : t -> GLenum.t) =
      fun (x13250 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13250) "TEXTURE20")
    let (get_TEXTURE21 : t -> GLenum.t) =
      fun (x13251 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13251) "TEXTURE21")
    let (get_TEXTURE22 : t -> GLenum.t) =
      fun (x13252 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13252) "TEXTURE22")
    let (get_TEXTURE23 : t -> GLenum.t) =
      fun (x13253 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13253) "TEXTURE23")
    let (get_TEXTURE24 : t -> GLenum.t) =
      fun (x13254 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13254) "TEXTURE24")
    let (get_TEXTURE25 : t -> GLenum.t) =
      fun (x13255 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13255) "TEXTURE25")
    let (get_TEXTURE26 : t -> GLenum.t) =
      fun (x13256 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13256) "TEXTURE26")
    let (get_TEXTURE27 : t -> GLenum.t) =
      fun (x13257 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13257) "TEXTURE27")
    let (get_TEXTURE28 : t -> GLenum.t) =
      fun (x13258 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13258) "TEXTURE28")
    let (get_TEXTURE29 : t -> GLenum.t) =
      fun (x13259 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13259) "TEXTURE29")
    let (get_TEXTURE3 : t -> GLenum.t) =
      fun (x13260 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13260) "TEXTURE3")
    let (get_TEXTURE30 : t -> GLenum.t) =
      fun (x13261 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13261) "TEXTURE30")
    let (get_TEXTURE31 : t -> GLenum.t) =
      fun (x13262 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13262) "TEXTURE31")
    let (get_TEXTURE4 : t -> GLenum.t) =
      fun (x13263 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13263) "TEXTURE4")
    let (get_TEXTURE5 : t -> GLenum.t) =
      fun (x13264 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13264) "TEXTURE5")
    let (get_TEXTURE6 : t -> GLenum.t) =
      fun (x13265 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13265) "TEXTURE6")
    let (get_TEXTURE7 : t -> GLenum.t) =
      fun (x13266 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13266) "TEXTURE7")
    let (get_TEXTURE8 : t -> GLenum.t) =
      fun (x13267 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13267) "TEXTURE8")
    let (get_TEXTURE9 : t -> GLenum.t) =
      fun (x13268 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13268) "TEXTURE9")
    let (get_TEXTURE_2D : t -> GLenum.t) =
      fun (x13269 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13269) "TEXTURE_2D")
    let (get_TEXTURE_BINDING_2D : t -> GLenum.t) =
      fun (x13270 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13270) "TEXTURE_BINDING_2D")
    let (get_TEXTURE_BINDING_CUBE_MAP : t -> GLenum.t) =
      fun (x13271 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13271) "TEXTURE_BINDING_CUBE_MAP")
    let (get_TEXTURE_CUBE_MAP : t -> GLenum.t) =
      fun (x13272 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13272) "TEXTURE_CUBE_MAP")
    let (get_TEXTURE_CUBE_MAP_NEGATIVE_X : t -> GLenum.t) =
      fun (x13273 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13273) "TEXTURE_CUBE_MAP_NEGATIVE_X")
    let (get_TEXTURE_CUBE_MAP_NEGATIVE_Y : t -> GLenum.t) =
      fun (x13274 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13274) "TEXTURE_CUBE_MAP_NEGATIVE_Y")
    let (get_TEXTURE_CUBE_MAP_NEGATIVE_Z : t -> GLenum.t) =
      fun (x13275 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13275) "TEXTURE_CUBE_MAP_NEGATIVE_Z")
    let (get_TEXTURE_CUBE_MAP_POSITIVE_X : t -> GLenum.t) =
      fun (x13276 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13276) "TEXTURE_CUBE_MAP_POSITIVE_X")
    let (get_TEXTURE_CUBE_MAP_POSITIVE_Y : t -> GLenum.t) =
      fun (x13277 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13277) "TEXTURE_CUBE_MAP_POSITIVE_Y")
    let (get_TEXTURE_CUBE_MAP_POSITIVE_Z : t -> GLenum.t) =
      fun (x13278 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13278) "TEXTURE_CUBE_MAP_POSITIVE_Z")
    let (get_TEXTURE_MAG_FILTER : t -> GLenum.t) =
      fun (x13279 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13279) "TEXTURE_MAG_FILTER")
    let (get_TEXTURE_MIN_FILTER : t -> GLenum.t) =
      fun (x13280 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13280) "TEXTURE_MIN_FILTER")
    let (get_TEXTURE_WRAP_S : t -> GLenum.t) =
      fun (x13281 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13281) "TEXTURE_WRAP_S")
    let (get_TEXTURE_WRAP_T : t -> GLenum.t) =
      fun (x13282 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13282) "TEXTURE_WRAP_T")
    let (get_TRIANGLES : t -> GLenum.t) =
      fun (x13283 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13283) "TRIANGLES")
    let (get_TRIANGLE_FAN : t -> GLenum.t) =
      fun (x13284 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13284) "TRIANGLE_FAN")
    let (get_TRIANGLE_STRIP : t -> GLenum.t) =
      fun (x13285 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13285) "TRIANGLE_STRIP")
    let (get_UNPACK_ALIGNMENT : t -> GLenum.t) =
      fun (x13286 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13286) "UNPACK_ALIGNMENT")
    let (get_UNPACK_COLORSPACE_CONVERSION_WEBGL : t -> GLenum.t) =
      fun (x13287 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13287)
             "UNPACK_COLORSPACE_CONVERSION_WEBGL")
    let (get_UNPACK_FLIP_Y_WEBGL : t -> GLenum.t) =
      fun (x13288 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13288) "UNPACK_FLIP_Y_WEBGL")
    let (get_UNPACK_PREMULTIPLY_ALPHA_WEBGL : t -> GLenum.t) =
      fun (x13289 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13289)
             "UNPACK_PREMULTIPLY_ALPHA_WEBGL")
    let (get_UNSIGNED_BYTE : t -> GLenum.t) =
      fun (x13290 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13290) "UNSIGNED_BYTE")
    let (get_UNSIGNED_INT : t -> GLenum.t) =
      fun (x13291 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13291) "UNSIGNED_INT")
    let (get_UNSIGNED_SHORT : t -> GLenum.t) =
      fun (x13292 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13292) "UNSIGNED_SHORT")
    let (get_UNSIGNED_SHORT_4_4_4_4 : t -> GLenum.t) =
      fun (x13293 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13293) "UNSIGNED_SHORT_4_4_4_4")
    let (get_UNSIGNED_SHORT_5_5_5_1 : t -> GLenum.t) =
      fun (x13294 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13294) "UNSIGNED_SHORT_5_5_5_1")
    let (get_UNSIGNED_SHORT_5_6_5 : t -> GLenum.t) =
      fun (x13295 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13295) "UNSIGNED_SHORT_5_6_5")
    let (get_VALIDATE_STATUS : t -> GLenum.t) =
      fun (x13296 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13296) "VALIDATE_STATUS")
    let (get_VENDOR : t -> GLenum.t) =
      fun (x13297 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13297) "VENDOR")
    let (get_VERSION : t -> GLenum.t) =
      fun (x13298 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13298) "VERSION")
    let (get_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING : t -> GLenum.t) =
      fun (x13299 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13299)
             "VERTEX_ATTRIB_ARRAY_BUFFER_BINDING")
    let (get_VERTEX_ATTRIB_ARRAY_ENABLED : t -> GLenum.t) =
      fun (x13300 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13300) "VERTEX_ATTRIB_ARRAY_ENABLED")
    let (get_VERTEX_ATTRIB_ARRAY_NORMALIZED : t -> GLenum.t) =
      fun (x13301 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13301)
             "VERTEX_ATTRIB_ARRAY_NORMALIZED")
    let (get_VERTEX_ATTRIB_ARRAY_POINTER : t -> GLenum.t) =
      fun (x13302 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13302) "VERTEX_ATTRIB_ARRAY_POINTER")
    let (get_VERTEX_ATTRIB_ARRAY_SIZE : t -> GLenum.t) =
      fun (x13303 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13303) "VERTEX_ATTRIB_ARRAY_SIZE")
    let (get_VERTEX_ATTRIB_ARRAY_STRIDE : t -> GLenum.t) =
      fun (x13304 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13304) "VERTEX_ATTRIB_ARRAY_STRIDE")
    let (get_VERTEX_ATTRIB_ARRAY_TYPE : t -> GLenum.t) =
      fun (x13305 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13305) "VERTEX_ATTRIB_ARRAY_TYPE")
    let (get_VERTEX_SHADER : t -> GLenum.t) =
      fun (x13306 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13306) "VERTEX_SHADER")
    let (get_VIEWPORT : t -> GLenum.t) =
      fun (x13307 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13307) "VIEWPORT")
    let (get_ZERO : t -> GLenum.t) =
      fun (x13308 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x13308) "ZERO")
  end
module AnonymousInterface118 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x13310 : Ojs.t) -> x13310
    and t_to_js : t -> Ojs.t = fun (x13309 : Ojs.t) -> x13309
    let (get_prototype : t -> WebGLRenderbuffer.t) =
      fun (x13311 : t) ->
        WebGLRenderbuffer.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13311) "prototype")
    let (set_prototype : t -> WebGLRenderbuffer.t -> unit) =
      fun (x13312 : t) ->
        fun (x13313 : WebGLRenderbuffer.t) ->
          Ojs.set_prop_ascii (t_to_js x13312) "prototype"
            (WebGLRenderbuffer.t_to_js x13313)
    let (create : t -> WebGLRenderbuffer.t) =
      fun (x13314 : t) ->
        WebGLRenderbuffer.t_of_js (Ojs.new_obj (t_to_js x13314) [||])
  end
module WebGLQuery =
  struct
    type t = [ `WebGLQuery ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x13316 : Ojs.t) -> t_of_js x13316
    and t_0_to_js : t_0 -> Ojs.t = fun (x13315 : t) -> t_to_js x13315
    type tags = [ `WebGLQuery ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `WebGLQuery ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x13319 : Ojs.t) -> intf_of_js __tags_of_js x13319
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x13317 : __tags intf) -> intf_to_js __tags_to_js x13317
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WebGLQuery")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WebGLQuery") [||])
  end
module AnonymousInterface117 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x13322 : Ojs.t) -> x13322
    and t_to_js : t -> Ojs.t = fun (x13321 : Ojs.t) -> x13321
    let (get_prototype : t -> WebGLQuery.t) =
      fun (x13323 : t) ->
        WebGLQuery.t_of_js (Ojs.get_prop_ascii (t_to_js x13323) "prototype")
    let (set_prototype : t -> WebGLQuery.t -> unit) =
      fun (x13324 : t) ->
        fun (x13325 : WebGLQuery.t) ->
          Ojs.set_prop_ascii (t_to_js x13324) "prototype"
            (WebGLQuery.t_to_js x13325)
    let (create : t -> WebGLQuery.t) =
      fun (x13326 : t) ->
        WebGLQuery.t_of_js (Ojs.new_obj (t_to_js x13326) [||])
  end
module AnonymousInterface116 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x13328 : Ojs.t) -> x13328
    and t_to_js : t -> Ojs.t = fun (x13327 : Ojs.t) -> x13327
    let (get_prototype : t -> WebGLProgram.t) =
      fun (x13329 : t) ->
        WebGLProgram.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13329) "prototype")
    let (set_prototype : t -> WebGLProgram.t -> unit) =
      fun (x13330 : t) ->
        fun (x13331 : WebGLProgram.t) ->
          Ojs.set_prop_ascii (t_to_js x13330) "prototype"
            (WebGLProgram.t_to_js x13331)
    let (create : t -> WebGLProgram.t) =
      fun (x13332 : t) ->
        WebGLProgram.t_of_js (Ojs.new_obj (t_to_js x13332) [||])
  end
module AnonymousInterface115 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x13334 : Ojs.t) -> x13334
    and t_to_js : t -> Ojs.t = fun (x13333 : Ojs.t) -> x13333
    let (get_prototype : t -> WebGLFramebuffer.t) =
      fun (x13335 : t) ->
        WebGLFramebuffer.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13335) "prototype")
    let (set_prototype : t -> WebGLFramebuffer.t -> unit) =
      fun (x13336 : t) ->
        fun (x13337 : WebGLFramebuffer.t) ->
          Ojs.set_prop_ascii (t_to_js x13336) "prototype"
            (WebGLFramebuffer.t_to_js x13337)
    let (create : t -> WebGLFramebuffer.t) =
      fun (x13338 : t) ->
        WebGLFramebuffer.t_of_js (Ojs.new_obj (t_to_js x13338) [||])
  end
module WebGLContextEventInit =
  struct
    type t = [ `EventInit  | `WebGLContextEventInit ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x13340 : Ojs.t) -> t_of_js x13340
    and t_0_to_js : t_0 -> Ojs.t = fun (x13339 : t) -> t_to_js x13339
    type tags = [ `EventInit  | `WebGLContextEventInit ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `WebGLContextEventInit ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x13343 : Ojs.t) -> intf_of_js __tags_of_js x13343
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x13341 : __tags intf) -> intf_to_js __tags_to_js x13341
    let (get_statusMessage : 'tags this -> string) =
      fun (x13345 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x13345) "statusMessage")
    let (set_statusMessage : 'tags this -> string -> unit) =
      fun (x13347 : 'tags this) ->
        fun (x13348 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x13347) "statusMessage"
            (Ojs.string_to_js x13348)
    let cast_from = Obj.magic
  end
module WebGLContextEvent =
  struct
    type t = [ `Event  | `WebGLContextEvent ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x13351 : Ojs.t) -> t_of_js x13351
    and t_0_to_js : t_0 -> Ojs.t = fun (x13350 : t) -> t_to_js x13350
    type tags = [ `Event  | `WebGLContextEvent ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `WebGLContextEvent ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x13354 : Ojs.t) -> intf_of_js __tags_of_js x13354
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x13352 : __tags intf) -> intf_to_js __tags_to_js x13352
    let (get_statusMessage : 'tags this -> string) =
      fun (x13356 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x13356) "statusMessage")
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGLContextEvent") "prototype")
    let (create :
      type_:string -> ?eventInit:WebGLContextEventInit.t -> unit -> t) =
      fun ~type_:(x13358 : string) ->
        fun ?eventInit:(x13359 : WebGLContextEventInit.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "WebGLContextEvent")
                 (let x13360 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x13360 "push" [|(Ojs.string_to_js x13358)|]);
                  (match x13359 with
                   | Some x13361 ->
                       ignore
                         (Ojs.call x13360 "push"
                            [|(WebGLContextEventInit.t_to_js x13361)|])
                   | None -> ());
                  x13360))
  end
module AnonymousInterface114 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x13363 : Ojs.t) -> x13363
    and t_to_js : t -> Ojs.t = fun (x13362 : Ojs.t) -> x13362
    let (get_prototype : t -> WebGLContextEvent.t) =
      fun (x13364 : t) ->
        WebGLContextEvent.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13364) "prototype")
    let (set_prototype : t -> WebGLContextEvent.t -> unit) =
      fun (x13365 : t) ->
        fun (x13366 : WebGLContextEvent.t) ->
          Ojs.set_prop_ascii (t_to_js x13365) "prototype"
            (WebGLContextEvent.t_to_js x13366)
    let (create :
      t ->
        type_:string ->
          ?eventInit:WebGLContextEventInit.t -> unit -> WebGLContextEvent.t)
      =
      fun (x13371 : t) ->
        fun ~type_:(x13367 : string) ->
          fun ?eventInit:(x13368 : WebGLContextEventInit.t option) ->
            fun () ->
              WebGLContextEvent.t_of_js
                (Ojs.new_obj_arr (t_to_js x13371)
                   (let x13369 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x13369 "push" [|(Ojs.string_to_js x13367)|]);
                    (match x13368 with
                     | Some x13370 ->
                         ignore
                           (Ojs.call x13369 "push"
                              [|(WebGLContextEventInit.t_to_js x13370)|])
                     | None -> ());
                    x13369))
  end
module AnonymousInterface113 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x13373 : Ojs.t) -> x13373
    and t_to_js : t -> Ojs.t = fun (x13372 : Ojs.t) -> x13372
    let (get_prototype : t -> WebGLBuffer.t) =
      fun (x13374 : t) ->
        WebGLBuffer.t_of_js (Ojs.get_prop_ascii (t_to_js x13374) "prototype")
    let (set_prototype : t -> WebGLBuffer.t -> unit) =
      fun (x13375 : t) ->
        fun (x13376 : WebGLBuffer.t) ->
          Ojs.set_prop_ascii (t_to_js x13375) "prototype"
            (WebGLBuffer.t_to_js x13376)
    let (create : t -> WebGLBuffer.t) =
      fun (x13377 : t) ->
        WebGLBuffer.t_of_js (Ojs.new_obj (t_to_js x13377) [||])
  end
module AnonymousInterface112 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x13379 : Ojs.t) -> x13379
    and t_to_js : t -> Ojs.t = fun (x13378 : Ojs.t) -> x13378
    let (get_prototype : t -> WebGLActiveInfo.t) =
      fun (x13380 : t) ->
        WebGLActiveInfo.t_of_js
          (Ojs.get_prop_ascii (t_to_js x13380) "prototype")
    let (set_prototype : t -> WebGLActiveInfo.t -> unit) =
      fun (x13381 : t) ->
        fun (x13382 : WebGLActiveInfo.t) ->
          Ojs.set_prop_ascii (t_to_js x13381) "prototype"
            (WebGLActiveInfo.t_to_js x13382)
    let (create : t -> WebGLActiveInfo.t) =
      fun (x13383 : t) ->
        WebGLActiveInfo.t_of_js (Ojs.new_obj (t_to_js x13383) [||])
  end
module WebGL2RenderingContextOverloads =
  struct
    type t = [ `WebGL2RenderingContextOverloads ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x13385 : Ojs.t) -> t_of_js x13385
    and t_0_to_js : t_0 -> Ojs.t = fun (x13384 : t) -> t_to_js x13384
    type tags = [ `WebGL2RenderingContextOverloads ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `WebGL2RenderingContextOverloads ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x13388 : Ojs.t) -> intf_of_js __tags_of_js x13388
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x13386 : __tags intf) -> intf_to_js __tags_to_js x13386
    let (uniform1fv :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          data:GLfloat.t Iterable.t_1 ->
            ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x13399 : 'tags this) ->
        fun ~location:(x13390 : WebGLUniformLocation.t or_null) ->
          fun ~data:(x13391 : GLfloat.t Iterable.t_1) ->
            fun ?srcOffset:(x13392 : GLuint.t option) ->
              fun ?srcLength:(x13393 : GLuint.t option) ->
                fun () ->
                  ignore
                    (let x13401 = this_to_js Obj.magic x13399 in
                     Ojs.call (Ojs.get_prop_ascii x13401 "uniform1fv")
                       "apply"
                       [|x13401;((let x13394 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x13394 "push"
                                       [|(or_null_to_js
                                            WebGLUniformLocation.t_to_js
                                            x13390)|]);
                                  ignore
                                    (Ojs.call x13394 "push"
                                       [|(Iterable.t_1_to_js GLfloat.t_to_js
                                            x13391)|]);
                                  (match x13392 with
                                   | Some x13396 ->
                                       ignore
                                         (Ojs.call x13394 "push"
                                            [|(GLuint.t_to_js x13396)|])
                                   | None -> ());
                                  (match x13393 with
                                   | Some x13395 ->
                                       ignore
                                         (Ojs.call x13394 "push"
                                            [|(GLuint.t_to_js x13395)|])
                                   | None -> ());
                                  x13394))|])
    let (uniform1iv :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          data:GLint.t Iterable.t_1 ->
            ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x13411 : 'tags this) ->
        fun ~location:(x13402 : WebGLUniformLocation.t or_null) ->
          fun ~data:(x13403 : GLint.t Iterable.t_1) ->
            fun ?srcOffset:(x13404 : GLuint.t option) ->
              fun ?srcLength:(x13405 : GLuint.t option) ->
                fun () ->
                  ignore
                    (let x13413 = this_to_js Obj.magic x13411 in
                     Ojs.call (Ojs.get_prop_ascii x13413 "uniform1iv")
                       "apply"
                       [|x13413;((let x13406 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x13406 "push"
                                       [|(or_null_to_js
                                            WebGLUniformLocation.t_to_js
                                            x13402)|]);
                                  ignore
                                    (Ojs.call x13406 "push"
                                       [|(Iterable.t_1_to_js GLint.t_to_js
                                            x13403)|]);
                                  (match x13404 with
                                   | Some x13408 ->
                                       ignore
                                         (Ojs.call x13406 "push"
                                            [|(GLuint.t_to_js x13408)|])
                                   | None -> ());
                                  (match x13405 with
                                   | Some x13407 ->
                                       ignore
                                         (Ojs.call x13406 "push"
                                            [|(GLuint.t_to_js x13407)|])
                                   | None -> ());
                                  x13406))|])
    let (uniform2fv :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          data:GLfloat.t Iterable.t_1 ->
            ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x13423 : 'tags this) ->
        fun ~location:(x13414 : WebGLUniformLocation.t or_null) ->
          fun ~data:(x13415 : GLfloat.t Iterable.t_1) ->
            fun ?srcOffset:(x13416 : GLuint.t option) ->
              fun ?srcLength:(x13417 : GLuint.t option) ->
                fun () ->
                  ignore
                    (let x13425 = this_to_js Obj.magic x13423 in
                     Ojs.call (Ojs.get_prop_ascii x13425 "uniform2fv")
                       "apply"
                       [|x13425;((let x13418 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x13418 "push"
                                       [|(or_null_to_js
                                            WebGLUniformLocation.t_to_js
                                            x13414)|]);
                                  ignore
                                    (Ojs.call x13418 "push"
                                       [|(Iterable.t_1_to_js GLfloat.t_to_js
                                            x13415)|]);
                                  (match x13416 with
                                   | Some x13420 ->
                                       ignore
                                         (Ojs.call x13418 "push"
                                            [|(GLuint.t_to_js x13420)|])
                                   | None -> ());
                                  (match x13417 with
                                   | Some x13419 ->
                                       ignore
                                         (Ojs.call x13418 "push"
                                            [|(GLuint.t_to_js x13419)|])
                                   | None -> ());
                                  x13418))|])
    let (uniform2iv :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          data:GLint.t Iterable.t_1 ->
            ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x13435 : 'tags this) ->
        fun ~location:(x13426 : WebGLUniformLocation.t or_null) ->
          fun ~data:(x13427 : GLint.t Iterable.t_1) ->
            fun ?srcOffset:(x13428 : GLuint.t option) ->
              fun ?srcLength:(x13429 : GLuint.t option) ->
                fun () ->
                  ignore
                    (let x13437 = this_to_js Obj.magic x13435 in
                     Ojs.call (Ojs.get_prop_ascii x13437 "uniform2iv")
                       "apply"
                       [|x13437;((let x13430 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x13430 "push"
                                       [|(or_null_to_js
                                            WebGLUniformLocation.t_to_js
                                            x13426)|]);
                                  ignore
                                    (Ojs.call x13430 "push"
                                       [|(Iterable.t_1_to_js GLint.t_to_js
                                            x13427)|]);
                                  (match x13428 with
                                   | Some x13432 ->
                                       ignore
                                         (Ojs.call x13430 "push"
                                            [|(GLuint.t_to_js x13432)|])
                                   | None -> ());
                                  (match x13429 with
                                   | Some x13431 ->
                                       ignore
                                         (Ojs.call x13430 "push"
                                            [|(GLuint.t_to_js x13431)|])
                                   | None -> ());
                                  x13430))|])
    let (uniform3fv :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          data:GLfloat.t Iterable.t_1 ->
            ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x13447 : 'tags this) ->
        fun ~location:(x13438 : WebGLUniformLocation.t or_null) ->
          fun ~data:(x13439 : GLfloat.t Iterable.t_1) ->
            fun ?srcOffset:(x13440 : GLuint.t option) ->
              fun ?srcLength:(x13441 : GLuint.t option) ->
                fun () ->
                  ignore
                    (let x13449 = this_to_js Obj.magic x13447 in
                     Ojs.call (Ojs.get_prop_ascii x13449 "uniform3fv")
                       "apply"
                       [|x13449;((let x13442 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x13442 "push"
                                       [|(or_null_to_js
                                            WebGLUniformLocation.t_to_js
                                            x13438)|]);
                                  ignore
                                    (Ojs.call x13442 "push"
                                       [|(Iterable.t_1_to_js GLfloat.t_to_js
                                            x13439)|]);
                                  (match x13440 with
                                   | Some x13444 ->
                                       ignore
                                         (Ojs.call x13442 "push"
                                            [|(GLuint.t_to_js x13444)|])
                                   | None -> ());
                                  (match x13441 with
                                   | Some x13443 ->
                                       ignore
                                         (Ojs.call x13442 "push"
                                            [|(GLuint.t_to_js x13443)|])
                                   | None -> ());
                                  x13442))|])
    let (uniform3iv :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          data:GLint.t Iterable.t_1 ->
            ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x13459 : 'tags this) ->
        fun ~location:(x13450 : WebGLUniformLocation.t or_null) ->
          fun ~data:(x13451 : GLint.t Iterable.t_1) ->
            fun ?srcOffset:(x13452 : GLuint.t option) ->
              fun ?srcLength:(x13453 : GLuint.t option) ->
                fun () ->
                  ignore
                    (let x13461 = this_to_js Obj.magic x13459 in
                     Ojs.call (Ojs.get_prop_ascii x13461 "uniform3iv")
                       "apply"
                       [|x13461;((let x13454 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x13454 "push"
                                       [|(or_null_to_js
                                            WebGLUniformLocation.t_to_js
                                            x13450)|]);
                                  ignore
                                    (Ojs.call x13454 "push"
                                       [|(Iterable.t_1_to_js GLint.t_to_js
                                            x13451)|]);
                                  (match x13452 with
                                   | Some x13456 ->
                                       ignore
                                         (Ojs.call x13454 "push"
                                            [|(GLuint.t_to_js x13456)|])
                                   | None -> ());
                                  (match x13453 with
                                   | Some x13455 ->
                                       ignore
                                         (Ojs.call x13454 "push"
                                            [|(GLuint.t_to_js x13455)|])
                                   | None -> ());
                                  x13454))|])
    let (uniform4fv :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          data:GLfloat.t Iterable.t_1 ->
            ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x13471 : 'tags this) ->
        fun ~location:(x13462 : WebGLUniformLocation.t or_null) ->
          fun ~data:(x13463 : GLfloat.t Iterable.t_1) ->
            fun ?srcOffset:(x13464 : GLuint.t option) ->
              fun ?srcLength:(x13465 : GLuint.t option) ->
                fun () ->
                  ignore
                    (let x13473 = this_to_js Obj.magic x13471 in
                     Ojs.call (Ojs.get_prop_ascii x13473 "uniform4fv")
                       "apply"
                       [|x13473;((let x13466 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x13466 "push"
                                       [|(or_null_to_js
                                            WebGLUniformLocation.t_to_js
                                            x13462)|]);
                                  ignore
                                    (Ojs.call x13466 "push"
                                       [|(Iterable.t_1_to_js GLfloat.t_to_js
                                            x13463)|]);
                                  (match x13464 with
                                   | Some x13468 ->
                                       ignore
                                         (Ojs.call x13466 "push"
                                            [|(GLuint.t_to_js x13468)|])
                                   | None -> ());
                                  (match x13465 with
                                   | Some x13467 ->
                                       ignore
                                         (Ojs.call x13466 "push"
                                            [|(GLuint.t_to_js x13467)|])
                                   | None -> ());
                                  x13466))|])
    let (uniform4iv :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          data:GLint.t Iterable.t_1 ->
            ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x13483 : 'tags this) ->
        fun ~location:(x13474 : WebGLUniformLocation.t or_null) ->
          fun ~data:(x13475 : GLint.t Iterable.t_1) ->
            fun ?srcOffset:(x13476 : GLuint.t option) ->
              fun ?srcLength:(x13477 : GLuint.t option) ->
                fun () ->
                  ignore
                    (let x13485 = this_to_js Obj.magic x13483 in
                     Ojs.call (Ojs.get_prop_ascii x13485 "uniform4iv")
                       "apply"
                       [|x13485;((let x13478 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x13478 "push"
                                       [|(or_null_to_js
                                            WebGLUniformLocation.t_to_js
                                            x13474)|]);
                                  ignore
                                    (Ojs.call x13478 "push"
                                       [|(Iterable.t_1_to_js GLint.t_to_js
                                            x13475)|]);
                                  (match x13476 with
                                   | Some x13480 ->
                                       ignore
                                         (Ojs.call x13478 "push"
                                            [|(GLuint.t_to_js x13480)|])
                                   | None -> ());
                                  (match x13477 with
                                   | Some x13479 ->
                                       ignore
                                         (Ojs.call x13478 "push"
                                            [|(GLuint.t_to_js x13479)|])
                                   | None -> ());
                                  x13478))|])
    let (uniformMatrix2fv :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          transpose:GLboolean.t ->
            data:GLfloat.t Iterable.t_1 ->
              ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x13496 : 'tags this) ->
        fun ~location:(x13486 : WebGLUniformLocation.t or_null) ->
          fun ~transpose:(x13487 : GLboolean.t) ->
            fun ~data:(x13488 : GLfloat.t Iterable.t_1) ->
              fun ?srcOffset:(x13489 : GLuint.t option) ->
                fun ?srcLength:(x13490 : GLuint.t option) ->
                  fun () ->
                    ignore
                      (let x13498 = this_to_js Obj.magic x13496 in
                       Ojs.call
                         (Ojs.get_prop_ascii x13498 "uniformMatrix2fv")
                         "apply"
                         [|x13498;((let x13491 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    ignore
                                      (Ojs.call x13491 "push"
                                         [|(or_null_to_js
                                              WebGLUniformLocation.t_to_js
                                              x13486)|]);
                                    ignore
                                      (Ojs.call x13491 "push"
                                         [|(GLboolean.t_to_js x13487)|]);
                                    ignore
                                      (Ojs.call x13491 "push"
                                         [|(Iterable.t_1_to_js
                                              GLfloat.t_to_js x13488)|]);
                                    (match x13489 with
                                     | Some x13493 ->
                                         ignore
                                           (Ojs.call x13491 "push"
                                              [|(GLuint.t_to_js x13493)|])
                                     | None -> ());
                                    (match x13490 with
                                     | Some x13492 ->
                                         ignore
                                           (Ojs.call x13491 "push"
                                              [|(GLuint.t_to_js x13492)|])
                                     | None -> ());
                                    x13491))|])
    let (uniformMatrix3fv :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          transpose:GLboolean.t ->
            data:GLfloat.t Iterable.t_1 ->
              ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x13509 : 'tags this) ->
        fun ~location:(x13499 : WebGLUniformLocation.t or_null) ->
          fun ~transpose:(x13500 : GLboolean.t) ->
            fun ~data:(x13501 : GLfloat.t Iterable.t_1) ->
              fun ?srcOffset:(x13502 : GLuint.t option) ->
                fun ?srcLength:(x13503 : GLuint.t option) ->
                  fun () ->
                    ignore
                      (let x13511 = this_to_js Obj.magic x13509 in
                       Ojs.call
                         (Ojs.get_prop_ascii x13511 "uniformMatrix3fv")
                         "apply"
                         [|x13511;((let x13504 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    ignore
                                      (Ojs.call x13504 "push"
                                         [|(or_null_to_js
                                              WebGLUniformLocation.t_to_js
                                              x13499)|]);
                                    ignore
                                      (Ojs.call x13504 "push"
                                         [|(GLboolean.t_to_js x13500)|]);
                                    ignore
                                      (Ojs.call x13504 "push"
                                         [|(Iterable.t_1_to_js
                                              GLfloat.t_to_js x13501)|]);
                                    (match x13502 with
                                     | Some x13506 ->
                                         ignore
                                           (Ojs.call x13504 "push"
                                              [|(GLuint.t_to_js x13506)|])
                                     | None -> ());
                                    (match x13503 with
                                     | Some x13505 ->
                                         ignore
                                           (Ojs.call x13504 "push"
                                              [|(GLuint.t_to_js x13505)|])
                                     | None -> ());
                                    x13504))|])
    let (uniformMatrix4fv :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          transpose:GLboolean.t ->
            data:GLfloat.t Iterable.t_1 ->
              ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x13522 : 'tags this) ->
        fun ~location:(x13512 : WebGLUniformLocation.t or_null) ->
          fun ~transpose:(x13513 : GLboolean.t) ->
            fun ~data:(x13514 : GLfloat.t Iterable.t_1) ->
              fun ?srcOffset:(x13515 : GLuint.t option) ->
                fun ?srcLength:(x13516 : GLuint.t option) ->
                  fun () ->
                    ignore
                      (let x13524 = this_to_js Obj.magic x13522 in
                       Ojs.call
                         (Ojs.get_prop_ascii x13524 "uniformMatrix4fv")
                         "apply"
                         [|x13524;((let x13517 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    ignore
                                      (Ojs.call x13517 "push"
                                         [|(or_null_to_js
                                              WebGLUniformLocation.t_to_js
                                              x13512)|]);
                                    ignore
                                      (Ojs.call x13517 "push"
                                         [|(GLboolean.t_to_js x13513)|]);
                                    ignore
                                      (Ojs.call x13517 "push"
                                         [|(Iterable.t_1_to_js
                                              GLfloat.t_to_js x13514)|]);
                                    (match x13515 with
                                     | Some x13519 ->
                                         ignore
                                           (Ojs.call x13517 "push"
                                              [|(GLuint.t_to_js x13519)|])
                                     | None -> ());
                                    (match x13516 with
                                     | Some x13518 ->
                                         ignore
                                           (Ojs.call x13517 "push"
                                              [|(GLuint.t_to_js x13518)|])
                                     | None -> ());
                                    x13517))|])
    let (bufferData :
      'tags this ->
        target:GLenum.t -> size:GLsizeiptr.t -> usage:GLenum.t -> unit)
      =
      fun (x13528 : 'tags this) ->
        fun ~target:(x13525 : GLenum.t) ->
          fun ~size:(x13526 : GLsizeiptr.t) ->
            fun ~usage:(x13527 : GLenum.t) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x13528) "bufferData"
                   [|(GLenum.t_to_js x13525);(GLsizeiptr.t_to_js x13526);(
                     GLenum.t_to_js x13527)|])
    let (bufferData' :
      'tags this ->
        target:GLenum.t ->
          srcData:BufferSource.t or_null -> usage:GLenum.t -> unit)
      =
      fun (x13534 : 'tags this) ->
        fun ~target:(x13530 : GLenum.t) ->
          fun ~srcData:(x13531 : BufferSource.t or_null) ->
            fun ~usage:(x13533 : GLenum.t) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x13534) "bufferData"
                   [|(GLenum.t_to_js x13530);(or_null_to_js
                                                BufferSource.t_to_js x13531);(
                     GLenum.t_to_js x13533)|])
    let (bufferData'' :
      'tags this ->
        target:GLenum.t ->
          srcData:ArrayBufferView.t_0 ->
            usage:GLenum.t ->
              srcOffset:GLuint.t -> ?length:GLuint.t -> unit -> unit)
      =
      fun (x13543 : 'tags this) ->
        fun ~target:(x13536 : GLenum.t) ->
          fun ~srcData:(x13537 : ArrayBufferView.t_0) ->
            fun ~usage:(x13538 : GLenum.t) ->
              fun ~srcOffset:(x13539 : GLuint.t) ->
                fun ?length:(x13540 : GLuint.t option) ->
                  fun () ->
                    ignore
                      (let x13545 = this_to_js Obj.magic x13543 in
                       Ojs.call (Ojs.get_prop_ascii x13545 "bufferData")
                         "apply"
                         [|x13545;((let x13541 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    ignore
                                      (Ojs.call x13541 "push"
                                         [|(GLenum.t_to_js x13536)|]);
                                    ignore
                                      (Ojs.call x13541 "push"
                                         [|(ArrayBufferView.t_0_to_js x13537)|]);
                                    ignore
                                      (Ojs.call x13541 "push"
                                         [|(GLenum.t_to_js x13538)|]);
                                    ignore
                                      (Ojs.call x13541 "push"
                                         [|(GLuint.t_to_js x13539)|]);
                                    (match x13540 with
                                     | Some x13542 ->
                                         ignore
                                           (Ojs.call x13541 "push"
                                              [|(GLuint.t_to_js x13542)|])
                                     | None -> ());
                                    x13541))|])
    let (bufferSubData :
      'tags this ->
        target:GLenum.t ->
          dstByteOffset:GLintptr.t -> srcData:BufferSource.t -> unit)
      =
      fun (x13549 : 'tags this) ->
        fun ~target:(x13546 : GLenum.t) ->
          fun ~dstByteOffset:(x13547 : GLintptr.t) ->
            fun ~srcData:(x13548 : BufferSource.t) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x13549) "bufferSubData"
                   [|(GLenum.t_to_js x13546);(GLintptr.t_to_js x13547);(
                     BufferSource.t_to_js x13548)|])
    let (bufferSubData' :
      'tags this ->
        target:GLenum.t ->
          dstByteOffset:GLintptr.t ->
            srcData:ArrayBufferView.t_0 ->
              srcOffset:GLuint.t -> ?length:GLuint.t -> unit -> unit)
      =
      fun (x13558 : 'tags this) ->
        fun ~target:(x13551 : GLenum.t) ->
          fun ~dstByteOffset:(x13552 : GLintptr.t) ->
            fun ~srcData:(x13553 : ArrayBufferView.t_0) ->
              fun ~srcOffset:(x13554 : GLuint.t) ->
                fun ?length:(x13555 : GLuint.t option) ->
                  fun () ->
                    ignore
                      (let x13560 = this_to_js Obj.magic x13558 in
                       Ojs.call (Ojs.get_prop_ascii x13560 "bufferSubData")
                         "apply"
                         [|x13560;((let x13556 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    ignore
                                      (Ojs.call x13556 "push"
                                         [|(GLenum.t_to_js x13551)|]);
                                    ignore
                                      (Ojs.call x13556 "push"
                                         [|(GLintptr.t_to_js x13552)|]);
                                    ignore
                                      (Ojs.call x13556 "push"
                                         [|(ArrayBufferView.t_0_to_js x13553)|]);
                                    ignore
                                      (Ojs.call x13556 "push"
                                         [|(GLuint.t_to_js x13554)|]);
                                    (match x13555 with
                                     | Some x13557 ->
                                         ignore
                                           (Ojs.call x13556 "push"
                                              [|(GLuint.t_to_js x13557)|])
                                     | None -> ());
                                    x13556))|])
    let (compressedTexImage2D :
      'tags this ->
        target:GLenum.t ->
          level:GLint.t ->
            internalformat:GLenum.t ->
              width:GLsizei.t ->
                height:GLsizei.t ->
                  border:GLint.t ->
                    imageSize:GLsizei.t -> offset:GLintptr.t -> unit)
      =
      fun (x13569 : 'tags this) ->
        fun ~target:(x13561 : GLenum.t) ->
          fun ~level:(x13562 : GLint.t) ->
            fun ~internalformat:(x13563 : GLenum.t) ->
              fun ~width:(x13564 : GLsizei.t) ->
                fun ~height:(x13565 : GLsizei.t) ->
                  fun ~border:(x13566 : GLint.t) ->
                    fun ~imageSize:(x13567 : GLsizei.t) ->
                      fun ~offset:(x13568 : GLintptr.t) ->
                        ignore
                          (Ojs.call (this_to_js Obj.magic x13569)
                             "compressedTexImage2D"
                             [|(GLenum.t_to_js x13561);(GLint.t_to_js x13562);(
                               GLenum.t_to_js x13563);(GLsizei.t_to_js x13564);(
                               GLsizei.t_to_js x13565);(GLint.t_to_js x13566);(
                               GLsizei.t_to_js x13567);(GLintptr.t_to_js
                                                          x13568)|])
    let (compressedTexImage2D' :
      'tags this ->
        target:GLenum.t ->
          level:GLint.t ->
            internalformat:GLenum.t ->
              width:GLsizei.t ->
                height:GLsizei.t ->
                  border:GLint.t ->
                    srcData:ArrayBufferView.t_0 ->
                      ?srcOffset:GLuint.t ->
                        ?srcLengthOverride:GLuint.t -> unit -> unit)
      =
      fun (x13583 : 'tags this) ->
        fun ~target:(x13571 : GLenum.t) ->
          fun ~level:(x13572 : GLint.t) ->
            fun ~internalformat:(x13573 : GLenum.t) ->
              fun ~width:(x13574 : GLsizei.t) ->
                fun ~height:(x13575 : GLsizei.t) ->
                  fun ~border:(x13576 : GLint.t) ->
                    fun ~srcData:(x13577 : ArrayBufferView.t_0) ->
                      fun ?srcOffset:(x13578 : GLuint.t option) ->
                        fun ?srcLengthOverride:(x13579 : GLuint.t option) ->
                          fun () ->
                            ignore
                              (let x13585 = this_to_js Obj.magic x13583 in
                               Ojs.call
                                 (Ojs.get_prop_ascii x13585
                                    "compressedTexImage2D") "apply"
                                 [|x13585;((let x13580 =
                                              Ojs.new_obj
                                                (Ojs.get_prop_ascii
                                                   Ojs.global "Array") 
                                                [||] in
                                            ignore
                                              (Ojs.call x13580 "push"
                                                 [|(GLenum.t_to_js x13571)|]);
                                            ignore
                                              (Ojs.call x13580 "push"
                                                 [|(GLint.t_to_js x13572)|]);
                                            ignore
                                              (Ojs.call x13580 "push"
                                                 [|(GLenum.t_to_js x13573)|]);
                                            ignore
                                              (Ojs.call x13580 "push"
                                                 [|(GLsizei.t_to_js x13574)|]);
                                            ignore
                                              (Ojs.call x13580 "push"
                                                 [|(GLsizei.t_to_js x13575)|]);
                                            ignore
                                              (Ojs.call x13580 "push"
                                                 [|(GLint.t_to_js x13576)|]);
                                            ignore
                                              (Ojs.call x13580 "push"
                                                 [|(ArrayBufferView.t_0_to_js
                                                      x13577)|]);
                                            (match x13578 with
                                             | Some x13582 ->
                                                 ignore
                                                   (Ojs.call x13580 "push"
                                                      [|(GLuint.t_to_js
                                                           x13582)|])
                                             | None -> ());
                                            (match x13579 with
                                             | Some x13581 ->
                                                 ignore
                                                   (Ojs.call x13580 "push"
                                                      [|(GLuint.t_to_js
                                                           x13581)|])
                                             | None -> ());
                                            x13580))|])
    let (compressedTexSubImage2D :
      'tags this ->
        target:GLenum.t ->
          level:GLint.t ->
            xoffset:GLint.t ->
              yoffset:GLint.t ->
                width:GLsizei.t ->
                  height:GLsizei.t ->
                    format:GLenum.t ->
                      imageSize:GLsizei.t -> offset:GLintptr.t -> unit)
      =
      fun (x13595 : 'tags this) ->
        fun ~target:(x13586 : GLenum.t) ->
          fun ~level:(x13587 : GLint.t) ->
            fun ~xoffset:(x13588 : GLint.t) ->
              fun ~yoffset:(x13589 : GLint.t) ->
                fun ~width:(x13590 : GLsizei.t) ->
                  fun ~height:(x13591 : GLsizei.t) ->
                    fun ~format:(x13592 : GLenum.t) ->
                      fun ~imageSize:(x13593 : GLsizei.t) ->
                        fun ~offset:(x13594 : GLintptr.t) ->
                          ignore
                            (Ojs.call (this_to_js Obj.magic x13595)
                               "compressedTexSubImage2D"
                               [|(GLenum.t_to_js x13586);(GLint.t_to_js
                                                            x13587);(
                                 GLint.t_to_js x13588);(GLint.t_to_js x13589);(
                                 GLsizei.t_to_js x13590);(GLsizei.t_to_js
                                                            x13591);(
                                 GLenum.t_to_js x13592);(GLsizei.t_to_js
                                                           x13593);(GLintptr.t_to_js
                                                                    x13594)|])
    let (compressedTexSubImage2D' :
      'tags this ->
        target:GLenum.t ->
          level:GLint.t ->
            xoffset:GLint.t ->
              yoffset:GLint.t ->
                width:GLsizei.t ->
                  height:GLsizei.t ->
                    format:GLenum.t ->
                      srcData:ArrayBufferView.t_0 ->
                        ?srcOffset:GLuint.t ->
                          ?srcLengthOverride:GLuint.t -> unit -> unit)
      =
      fun (x13610 : 'tags this) ->
        fun ~target:(x13597 : GLenum.t) ->
          fun ~level:(x13598 : GLint.t) ->
            fun ~xoffset:(x13599 : GLint.t) ->
              fun ~yoffset:(x13600 : GLint.t) ->
                fun ~width:(x13601 : GLsizei.t) ->
                  fun ~height:(x13602 : GLsizei.t) ->
                    fun ~format:(x13603 : GLenum.t) ->
                      fun ~srcData:(x13604 : ArrayBufferView.t_0) ->
                        fun ?srcOffset:(x13605 : GLuint.t option) ->
                          fun ?srcLengthOverride:(x13606 : GLuint.t option)
                            ->
                            fun () ->
                              ignore
                                (let x13612 = this_to_js Obj.magic x13610 in
                                 Ojs.call
                                   (Ojs.get_prop_ascii x13612
                                      "compressedTexSubImage2D") "apply"
                                   [|x13612;((let x13607 =
                                                Ojs.new_obj
                                                  (Ojs.get_prop_ascii
                                                     Ojs.global "Array") 
                                                  [||] in
                                              ignore
                                                (Ojs.call x13607 "push"
                                                   [|(GLenum.t_to_js x13597)|]);
                                              ignore
                                                (Ojs.call x13607 "push"
                                                   [|(GLint.t_to_js x13598)|]);
                                              ignore
                                                (Ojs.call x13607 "push"
                                                   [|(GLint.t_to_js x13599)|]);
                                              ignore
                                                (Ojs.call x13607 "push"
                                                   [|(GLint.t_to_js x13600)|]);
                                              ignore
                                                (Ojs.call x13607 "push"
                                                   [|(GLsizei.t_to_js x13601)|]);
                                              ignore
                                                (Ojs.call x13607 "push"
                                                   [|(GLsizei.t_to_js x13602)|]);
                                              ignore
                                                (Ojs.call x13607 "push"
                                                   [|(GLenum.t_to_js x13603)|]);
                                              ignore
                                                (Ojs.call x13607 "push"
                                                   [|(ArrayBufferView.t_0_to_js
                                                        x13604)|]);
                                              (match x13605 with
                                               | Some x13609 ->
                                                   ignore
                                                     (Ojs.call x13607 "push"
                                                        [|(GLuint.t_to_js
                                                             x13609)|])
                                               | None -> ());
                                              (match x13606 with
                                               | Some x13608 ->
                                                   ignore
                                                     (Ojs.call x13607 "push"
                                                        [|(GLuint.t_to_js
                                                             x13608)|])
                                               | None -> ());
                                              x13607))|])
    let (readPixels :
      'tags this ->
        x:GLint.t ->
          y:GLint.t ->
            width:GLsizei.t ->
              height:GLsizei.t ->
                format:GLenum.t ->
                  type_:GLenum.t ->
                    dstData:ArrayBufferView.t_0 or_null -> unit)
      =
      fun (x13621 : 'tags this) ->
        fun ~x:(x13613 : GLint.t) ->
          fun ~y:(x13614 : GLint.t) ->
            fun ~width:(x13615 : GLsizei.t) ->
              fun ~height:(x13616 : GLsizei.t) ->
                fun ~format:(x13617 : GLenum.t) ->
                  fun ~type_:(x13618 : GLenum.t) ->
                    fun ~dstData:(x13619 : ArrayBufferView.t_0 or_null) ->
                      ignore
                        (Ojs.call (this_to_js Obj.magic x13621) "readPixels"
                           [|(GLint.t_to_js x13613);(GLint.t_to_js x13614);(
                             GLsizei.t_to_js x13615);(GLsizei.t_to_js x13616);(
                             GLenum.t_to_js x13617);(GLenum.t_to_js x13618);(
                             or_null_to_js ArrayBufferView.t_0_to_js x13619)|])
    let (readPixels' :
      'tags this ->
        x:GLint.t ->
          y:GLint.t ->
            width:GLsizei.t ->
              height:GLsizei.t ->
                format:GLenum.t ->
                  type_:GLenum.t -> offset:GLintptr.t -> unit)
      =
      fun (x13630 : 'tags this) ->
        fun ~x:(x13623 : GLint.t) ->
          fun ~y:(x13624 : GLint.t) ->
            fun ~width:(x13625 : GLsizei.t) ->
              fun ~height:(x13626 : GLsizei.t) ->
                fun ~format:(x13627 : GLenum.t) ->
                  fun ~type_:(x13628 : GLenum.t) ->
                    fun ~offset:(x13629 : GLintptr.t) ->
                      ignore
                        (Ojs.call (this_to_js Obj.magic x13630) "readPixels"
                           [|(GLint.t_to_js x13623);(GLint.t_to_js x13624);(
                             GLsizei.t_to_js x13625);(GLsizei.t_to_js x13626);(
                             GLenum.t_to_js x13627);(GLenum.t_to_js x13628);(
                             GLintptr.t_to_js x13629)|])
    let (readPixels'' :
      'tags this ->
        x:GLint.t ->
          y:GLint.t ->
            width:GLsizei.t ->
              height:GLsizei.t ->
                format:GLenum.t ->
                  type_:GLenum.t ->
                    dstData:ArrayBufferView.t_0 -> dstOffset:GLuint.t -> unit)
      =
      fun (x13640 : 'tags this) ->
        fun ~x:(x13632 : GLint.t) ->
          fun ~y:(x13633 : GLint.t) ->
            fun ~width:(x13634 : GLsizei.t) ->
              fun ~height:(x13635 : GLsizei.t) ->
                fun ~format:(x13636 : GLenum.t) ->
                  fun ~type_:(x13637 : GLenum.t) ->
                    fun ~dstData:(x13638 : ArrayBufferView.t_0) ->
                      fun ~dstOffset:(x13639 : GLuint.t) ->
                        ignore
                          (Ojs.call (this_to_js Obj.magic x13640)
                             "readPixels"
                             [|(GLint.t_to_js x13632);(GLint.t_to_js x13633);(
                               GLsizei.t_to_js x13634);(GLsizei.t_to_js
                                                          x13635);(GLenum.t_to_js
                                                                    x13636);(
                               GLenum.t_to_js x13637);(ArrayBufferView.t_0_to_js
                                                         x13638);(GLuint.t_to_js
                                                                    x13639)|])
    let (texImage2D :
      'tags this ->
        target:GLenum.t ->
          level:GLint.t ->
            internalformat:GLint.t ->
              width:GLsizei.t ->
                height:GLsizei.t ->
                  border:GLint.t ->
                    format:GLenum.t ->
                      type_:GLenum.t ->
                        pixels:ArrayBufferView.t_0 or_null -> unit)
      =
      fun (x13652 : 'tags this) ->
        fun ~target:(x13642 : GLenum.t) ->
          fun ~level:(x13643 : GLint.t) ->
            fun ~internalformat:(x13644 : GLint.t) ->
              fun ~width:(x13645 : GLsizei.t) ->
                fun ~height:(x13646 : GLsizei.t) ->
                  fun ~border:(x13647 : GLint.t) ->
                    fun ~format:(x13648 : GLenum.t) ->
                      fun ~type_:(x13649 : GLenum.t) ->
                        fun ~pixels:(x13650 : ArrayBufferView.t_0 or_null) ->
                          ignore
                            (Ojs.call (this_to_js Obj.magic x13652)
                               "texImage2D"
                               [|(GLenum.t_to_js x13642);(GLint.t_to_js
                                                            x13643);(
                                 GLint.t_to_js x13644);(GLsizei.t_to_js
                                                          x13645);(GLsizei.t_to_js
                                                                    x13646);(
                                 GLint.t_to_js x13647);(GLenum.t_to_js x13648);(
                                 GLenum.t_to_js x13649);(or_null_to_js
                                                           ArrayBufferView.t_0_to_js
                                                           x13650)|])
    let (texImage2D' :
      'tags this ->
        target:GLenum.t ->
          level:GLint.t ->
            internalformat:GLint.t ->
              format:GLenum.t ->
                type_:GLenum.t -> source:TexImageSource.t -> unit)
      =
      fun (x13660 : 'tags this) ->
        fun ~target:(x13654 : GLenum.t) ->
          fun ~level:(x13655 : GLint.t) ->
            fun ~internalformat:(x13656 : GLint.t) ->
              fun ~format:(x13657 : GLenum.t) ->
                fun ~type_:(x13658 : GLenum.t) ->
                  fun ~source:(x13659 : TexImageSource.t) ->
                    ignore
                      (Ojs.call (this_to_js Obj.magic x13660) "texImage2D"
                         [|(GLenum.t_to_js x13654);(GLint.t_to_js x13655);(
                           GLint.t_to_js x13656);(GLenum.t_to_js x13657);(
                           GLenum.t_to_js x13658);(TexImageSource.t_to_js
                                                     x13659)|])
    let (texImage2D'' :
      'tags this ->
        target:GLenum.t ->
          level:GLint.t ->
            internalformat:GLint.t ->
              width:GLsizei.t ->
                height:GLsizei.t ->
                  border:GLint.t ->
                    format:GLenum.t ->
                      type_:GLenum.t -> pboOffset:GLintptr.t -> unit)
      =
      fun (x13671 : 'tags this) ->
        fun ~target:(x13662 : GLenum.t) ->
          fun ~level:(x13663 : GLint.t) ->
            fun ~internalformat:(x13664 : GLint.t) ->
              fun ~width:(x13665 : GLsizei.t) ->
                fun ~height:(x13666 : GLsizei.t) ->
                  fun ~border:(x13667 : GLint.t) ->
                    fun ~format:(x13668 : GLenum.t) ->
                      fun ~type_:(x13669 : GLenum.t) ->
                        fun ~pboOffset:(x13670 : GLintptr.t) ->
                          ignore
                            (Ojs.call (this_to_js Obj.magic x13671)
                               "texImage2D"
                               [|(GLenum.t_to_js x13662);(GLint.t_to_js
                                                            x13663);(
                                 GLint.t_to_js x13664);(GLsizei.t_to_js
                                                          x13665);(GLsizei.t_to_js
                                                                    x13666);(
                                 GLint.t_to_js x13667);(GLenum.t_to_js x13668);(
                                 GLenum.t_to_js x13669);(GLintptr.t_to_js
                                                           x13670)|])
    let (texImage2D''' :
      'tags this ->
        target:GLenum.t ->
          level:GLint.t ->
            internalformat:GLint.t ->
              width:GLsizei.t ->
                height:GLsizei.t ->
                  border:GLint.t ->
                    format:GLenum.t ->
                      type_:GLenum.t -> source:TexImageSource.t -> unit)
      =
      fun (x13682 : 'tags this) ->
        fun ~target:(x13673 : GLenum.t) ->
          fun ~level:(x13674 : GLint.t) ->
            fun ~internalformat:(x13675 : GLint.t) ->
              fun ~width:(x13676 : GLsizei.t) ->
                fun ~height:(x13677 : GLsizei.t) ->
                  fun ~border:(x13678 : GLint.t) ->
                    fun ~format:(x13679 : GLenum.t) ->
                      fun ~type_:(x13680 : GLenum.t) ->
                        fun ~source:(x13681 : TexImageSource.t) ->
                          ignore
                            (Ojs.call (this_to_js Obj.magic x13682)
                               "texImage2D"
                               [|(GLenum.t_to_js x13673);(GLint.t_to_js
                                                            x13674);(
                                 GLint.t_to_js x13675);(GLsizei.t_to_js
                                                          x13676);(GLsizei.t_to_js
                                                                    x13677);(
                                 GLint.t_to_js x13678);(GLenum.t_to_js x13679);(
                                 GLenum.t_to_js x13680);(TexImageSource.t_to_js
                                                           x13681)|])
    let (texImage2D'''' :
      'tags this ->
        target:GLenum.t ->
          level:GLint.t ->
            internalformat:GLint.t ->
              width:GLsizei.t ->
                height:GLsizei.t ->
                  border:GLint.t ->
                    format:GLenum.t ->
                      type_:GLenum.t ->
                        srcData:ArrayBufferView.t_0 ->
                          srcOffset:GLuint.t -> unit)
      =
      fun (x13694 : 'tags this) ->
        fun ~target:(x13684 : GLenum.t) ->
          fun ~level:(x13685 : GLint.t) ->
            fun ~internalformat:(x13686 : GLint.t) ->
              fun ~width:(x13687 : GLsizei.t) ->
                fun ~height:(x13688 : GLsizei.t) ->
                  fun ~border:(x13689 : GLint.t) ->
                    fun ~format:(x13690 : GLenum.t) ->
                      fun ~type_:(x13691 : GLenum.t) ->
                        fun ~srcData:(x13692 : ArrayBufferView.t_0) ->
                          fun ~srcOffset:(x13693 : GLuint.t) ->
                            ignore
                              (Ojs.call (this_to_js Obj.magic x13694)
                                 "texImage2D"
                                 [|(GLenum.t_to_js x13684);(GLint.t_to_js
                                                              x13685);(
                                   GLint.t_to_js x13686);(GLsizei.t_to_js
                                                            x13687);(
                                   GLsizei.t_to_js x13688);(GLint.t_to_js
                                                              x13689);(
                                   GLenum.t_to_js x13690);(GLenum.t_to_js
                                                             x13691);(
                                   ArrayBufferView.t_0_to_js x13692);(
                                   GLuint.t_to_js x13693)|])
    let (texSubImage2D :
      'tags this ->
        target:GLenum.t ->
          level:GLint.t ->
            xoffset:GLint.t ->
              yoffset:GLint.t ->
                width:GLsizei.t ->
                  height:GLsizei.t ->
                    format:GLenum.t ->
                      type_:GLenum.t ->
                        pixels:ArrayBufferView.t_0 or_null -> unit)
      =
      fun (x13706 : 'tags this) ->
        fun ~target:(x13696 : GLenum.t) ->
          fun ~level:(x13697 : GLint.t) ->
            fun ~xoffset:(x13698 : GLint.t) ->
              fun ~yoffset:(x13699 : GLint.t) ->
                fun ~width:(x13700 : GLsizei.t) ->
                  fun ~height:(x13701 : GLsizei.t) ->
                    fun ~format:(x13702 : GLenum.t) ->
                      fun ~type_:(x13703 : GLenum.t) ->
                        fun ~pixels:(x13704 : ArrayBufferView.t_0 or_null) ->
                          ignore
                            (Ojs.call (this_to_js Obj.magic x13706)
                               "texSubImage2D"
                               [|(GLenum.t_to_js x13696);(GLint.t_to_js
                                                            x13697);(
                                 GLint.t_to_js x13698);(GLint.t_to_js x13699);(
                                 GLsizei.t_to_js x13700);(GLsizei.t_to_js
                                                            x13701);(
                                 GLenum.t_to_js x13702);(GLenum.t_to_js
                                                           x13703);(or_null_to_js
                                                                    ArrayBufferView.t_0_to_js
                                                                    x13704)|])
    let (texSubImage2D' :
      'tags this ->
        target:GLenum.t ->
          level:GLint.t ->
            xoffset:GLint.t ->
              yoffset:GLint.t ->
                format:GLenum.t ->
                  type_:GLenum.t -> source:TexImageSource.t -> unit)
      =
      fun (x13715 : 'tags this) ->
        fun ~target:(x13708 : GLenum.t) ->
          fun ~level:(x13709 : GLint.t) ->
            fun ~xoffset:(x13710 : GLint.t) ->
              fun ~yoffset:(x13711 : GLint.t) ->
                fun ~format:(x13712 : GLenum.t) ->
                  fun ~type_:(x13713 : GLenum.t) ->
                    fun ~source:(x13714 : TexImageSource.t) ->
                      ignore
                        (Ojs.call (this_to_js Obj.magic x13715)
                           "texSubImage2D"
                           [|(GLenum.t_to_js x13708);(GLint.t_to_js x13709);(
                             GLint.t_to_js x13710);(GLint.t_to_js x13711);(
                             GLenum.t_to_js x13712);(GLenum.t_to_js x13713);(
                             TexImageSource.t_to_js x13714)|])
    let (texSubImage2D'' :
      'tags this ->
        target:GLenum.t ->
          level:GLint.t ->
            xoffset:GLint.t ->
              yoffset:GLint.t ->
                width:GLsizei.t ->
                  height:GLsizei.t ->
                    format:GLenum.t ->
                      type_:GLenum.t -> pboOffset:GLintptr.t -> unit)
      =
      fun (x13726 : 'tags this) ->
        fun ~target:(x13717 : GLenum.t) ->
          fun ~level:(x13718 : GLint.t) ->
            fun ~xoffset:(x13719 : GLint.t) ->
              fun ~yoffset:(x13720 : GLint.t) ->
                fun ~width:(x13721 : GLsizei.t) ->
                  fun ~height:(x13722 : GLsizei.t) ->
                    fun ~format:(x13723 : GLenum.t) ->
                      fun ~type_:(x13724 : GLenum.t) ->
                        fun ~pboOffset:(x13725 : GLintptr.t) ->
                          ignore
                            (Ojs.call (this_to_js Obj.magic x13726)
                               "texSubImage2D"
                               [|(GLenum.t_to_js x13717);(GLint.t_to_js
                                                            x13718);(
                                 GLint.t_to_js x13719);(GLint.t_to_js x13720);(
                                 GLsizei.t_to_js x13721);(GLsizei.t_to_js
                                                            x13722);(
                                 GLenum.t_to_js x13723);(GLenum.t_to_js
                                                           x13724);(GLintptr.t_to_js
                                                                    x13725)|])
    let (texSubImage2D''' :
      'tags this ->
        target:GLenum.t ->
          level:GLint.t ->
            xoffset:GLint.t ->
              yoffset:GLint.t ->
                width:GLsizei.t ->
                  height:GLsizei.t ->
                    format:GLenum.t ->
                      type_:GLenum.t -> source:TexImageSource.t -> unit)
      =
      fun (x13737 : 'tags this) ->
        fun ~target:(x13728 : GLenum.t) ->
          fun ~level:(x13729 : GLint.t) ->
            fun ~xoffset:(x13730 : GLint.t) ->
              fun ~yoffset:(x13731 : GLint.t) ->
                fun ~width:(x13732 : GLsizei.t) ->
                  fun ~height:(x13733 : GLsizei.t) ->
                    fun ~format:(x13734 : GLenum.t) ->
                      fun ~type_:(x13735 : GLenum.t) ->
                        fun ~source:(x13736 : TexImageSource.t) ->
                          ignore
                            (Ojs.call (this_to_js Obj.magic x13737)
                               "texSubImage2D"
                               [|(GLenum.t_to_js x13728);(GLint.t_to_js
                                                            x13729);(
                                 GLint.t_to_js x13730);(GLint.t_to_js x13731);(
                                 GLsizei.t_to_js x13732);(GLsizei.t_to_js
                                                            x13733);(
                                 GLenum.t_to_js x13734);(GLenum.t_to_js
                                                           x13735);(TexImageSource.t_to_js
                                                                    x13736)|])
    let (texSubImage2D'''' :
      'tags this ->
        target:GLenum.t ->
          level:GLint.t ->
            xoffset:GLint.t ->
              yoffset:GLint.t ->
                width:GLsizei.t ->
                  height:GLsizei.t ->
                    format:GLenum.t ->
                      type_:GLenum.t ->
                        srcData:ArrayBufferView.t_0 ->
                          srcOffset:GLuint.t -> unit)
      =
      fun (x13749 : 'tags this) ->
        fun ~target:(x13739 : GLenum.t) ->
          fun ~level:(x13740 : GLint.t) ->
            fun ~xoffset:(x13741 : GLint.t) ->
              fun ~yoffset:(x13742 : GLint.t) ->
                fun ~width:(x13743 : GLsizei.t) ->
                  fun ~height:(x13744 : GLsizei.t) ->
                    fun ~format:(x13745 : GLenum.t) ->
                      fun ~type_:(x13746 : GLenum.t) ->
                        fun ~srcData:(x13747 : ArrayBufferView.t_0) ->
                          fun ~srcOffset:(x13748 : GLuint.t) ->
                            ignore
                              (Ojs.call (this_to_js Obj.magic x13749)
                                 "texSubImage2D"
                                 [|(GLenum.t_to_js x13739);(GLint.t_to_js
                                                              x13740);(
                                   GLint.t_to_js x13741);(GLint.t_to_js
                                                            x13742);(
                                   GLsizei.t_to_js x13743);(GLsizei.t_to_js
                                                              x13744);(
                                   GLenum.t_to_js x13745);(GLenum.t_to_js
                                                             x13746);(
                                   ArrayBufferView.t_0_to_js x13747);(
                                   GLuint.t_to_js x13748)|])
    let (uniform1fv' :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          data:Float32List.t ->
            ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x13759 : 'tags this) ->
        fun ~location:(x13751 : WebGLUniformLocation.t or_null) ->
          fun ~data:(x13752 : Float32List.t) ->
            fun ?srcOffset:(x13753 : GLuint.t option) ->
              fun ?srcLength:(x13754 : GLuint.t option) ->
                fun () ->
                  ignore
                    (let x13761 = this_to_js Obj.magic x13759 in
                     Ojs.call (Ojs.get_prop_ascii x13761 "uniform1fv")
                       "apply"
                       [|x13761;((let x13755 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x13755 "push"
                                       [|(or_null_to_js
                                            WebGLUniformLocation.t_to_js
                                            x13751)|]);
                                  ignore
                                    (Ojs.call x13755 "push"
                                       [|(Float32List.t_to_js x13752)|]);
                                  (match x13753 with
                                   | Some x13757 ->
                                       ignore
                                         (Ojs.call x13755 "push"
                                            [|(GLuint.t_to_js x13757)|])
                                   | None -> ());
                                  (match x13754 with
                                   | Some x13756 ->
                                       ignore
                                         (Ojs.call x13755 "push"
                                            [|(GLuint.t_to_js x13756)|])
                                   | None -> ());
                                  x13755))|])
    let (uniform1iv' :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          data:Int32List.t ->
            ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x13770 : 'tags this) ->
        fun ~location:(x13762 : WebGLUniformLocation.t or_null) ->
          fun ~data:(x13763 : Int32List.t) ->
            fun ?srcOffset:(x13764 : GLuint.t option) ->
              fun ?srcLength:(x13765 : GLuint.t option) ->
                fun () ->
                  ignore
                    (let x13772 = this_to_js Obj.magic x13770 in
                     Ojs.call (Ojs.get_prop_ascii x13772 "uniform1iv")
                       "apply"
                       [|x13772;((let x13766 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x13766 "push"
                                       [|(or_null_to_js
                                            WebGLUniformLocation.t_to_js
                                            x13762)|]);
                                  ignore
                                    (Ojs.call x13766 "push"
                                       [|(Int32List.t_to_js x13763)|]);
                                  (match x13764 with
                                   | Some x13768 ->
                                       ignore
                                         (Ojs.call x13766 "push"
                                            [|(GLuint.t_to_js x13768)|])
                                   | None -> ());
                                  (match x13765 with
                                   | Some x13767 ->
                                       ignore
                                         (Ojs.call x13766 "push"
                                            [|(GLuint.t_to_js x13767)|])
                                   | None -> ());
                                  x13766))|])
    let (uniform2fv' :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          data:Float32List.t ->
            ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x13781 : 'tags this) ->
        fun ~location:(x13773 : WebGLUniformLocation.t or_null) ->
          fun ~data:(x13774 : Float32List.t) ->
            fun ?srcOffset:(x13775 : GLuint.t option) ->
              fun ?srcLength:(x13776 : GLuint.t option) ->
                fun () ->
                  ignore
                    (let x13783 = this_to_js Obj.magic x13781 in
                     Ojs.call (Ojs.get_prop_ascii x13783 "uniform2fv")
                       "apply"
                       [|x13783;((let x13777 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x13777 "push"
                                       [|(or_null_to_js
                                            WebGLUniformLocation.t_to_js
                                            x13773)|]);
                                  ignore
                                    (Ojs.call x13777 "push"
                                       [|(Float32List.t_to_js x13774)|]);
                                  (match x13775 with
                                   | Some x13779 ->
                                       ignore
                                         (Ojs.call x13777 "push"
                                            [|(GLuint.t_to_js x13779)|])
                                   | None -> ());
                                  (match x13776 with
                                   | Some x13778 ->
                                       ignore
                                         (Ojs.call x13777 "push"
                                            [|(GLuint.t_to_js x13778)|])
                                   | None -> ());
                                  x13777))|])
    let (uniform2iv' :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          data:Int32List.t ->
            ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x13792 : 'tags this) ->
        fun ~location:(x13784 : WebGLUniformLocation.t or_null) ->
          fun ~data:(x13785 : Int32List.t) ->
            fun ?srcOffset:(x13786 : GLuint.t option) ->
              fun ?srcLength:(x13787 : GLuint.t option) ->
                fun () ->
                  ignore
                    (let x13794 = this_to_js Obj.magic x13792 in
                     Ojs.call (Ojs.get_prop_ascii x13794 "uniform2iv")
                       "apply"
                       [|x13794;((let x13788 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x13788 "push"
                                       [|(or_null_to_js
                                            WebGLUniformLocation.t_to_js
                                            x13784)|]);
                                  ignore
                                    (Ojs.call x13788 "push"
                                       [|(Int32List.t_to_js x13785)|]);
                                  (match x13786 with
                                   | Some x13790 ->
                                       ignore
                                         (Ojs.call x13788 "push"
                                            [|(GLuint.t_to_js x13790)|])
                                   | None -> ());
                                  (match x13787 with
                                   | Some x13789 ->
                                       ignore
                                         (Ojs.call x13788 "push"
                                            [|(GLuint.t_to_js x13789)|])
                                   | None -> ());
                                  x13788))|])
    let (uniform3fv' :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          data:Float32List.t ->
            ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x13803 : 'tags this) ->
        fun ~location:(x13795 : WebGLUniformLocation.t or_null) ->
          fun ~data:(x13796 : Float32List.t) ->
            fun ?srcOffset:(x13797 : GLuint.t option) ->
              fun ?srcLength:(x13798 : GLuint.t option) ->
                fun () ->
                  ignore
                    (let x13805 = this_to_js Obj.magic x13803 in
                     Ojs.call (Ojs.get_prop_ascii x13805 "uniform3fv")
                       "apply"
                       [|x13805;((let x13799 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x13799 "push"
                                       [|(or_null_to_js
                                            WebGLUniformLocation.t_to_js
                                            x13795)|]);
                                  ignore
                                    (Ojs.call x13799 "push"
                                       [|(Float32List.t_to_js x13796)|]);
                                  (match x13797 with
                                   | Some x13801 ->
                                       ignore
                                         (Ojs.call x13799 "push"
                                            [|(GLuint.t_to_js x13801)|])
                                   | None -> ());
                                  (match x13798 with
                                   | Some x13800 ->
                                       ignore
                                         (Ojs.call x13799 "push"
                                            [|(GLuint.t_to_js x13800)|])
                                   | None -> ());
                                  x13799))|])
    let (uniform3iv' :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          data:Int32List.t ->
            ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x13814 : 'tags this) ->
        fun ~location:(x13806 : WebGLUniformLocation.t or_null) ->
          fun ~data:(x13807 : Int32List.t) ->
            fun ?srcOffset:(x13808 : GLuint.t option) ->
              fun ?srcLength:(x13809 : GLuint.t option) ->
                fun () ->
                  ignore
                    (let x13816 = this_to_js Obj.magic x13814 in
                     Ojs.call (Ojs.get_prop_ascii x13816 "uniform3iv")
                       "apply"
                       [|x13816;((let x13810 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x13810 "push"
                                       [|(or_null_to_js
                                            WebGLUniformLocation.t_to_js
                                            x13806)|]);
                                  ignore
                                    (Ojs.call x13810 "push"
                                       [|(Int32List.t_to_js x13807)|]);
                                  (match x13808 with
                                   | Some x13812 ->
                                       ignore
                                         (Ojs.call x13810 "push"
                                            [|(GLuint.t_to_js x13812)|])
                                   | None -> ());
                                  (match x13809 with
                                   | Some x13811 ->
                                       ignore
                                         (Ojs.call x13810 "push"
                                            [|(GLuint.t_to_js x13811)|])
                                   | None -> ());
                                  x13810))|])
    let (uniform4fv' :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          data:Float32List.t ->
            ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x13825 : 'tags this) ->
        fun ~location:(x13817 : WebGLUniformLocation.t or_null) ->
          fun ~data:(x13818 : Float32List.t) ->
            fun ?srcOffset:(x13819 : GLuint.t option) ->
              fun ?srcLength:(x13820 : GLuint.t option) ->
                fun () ->
                  ignore
                    (let x13827 = this_to_js Obj.magic x13825 in
                     Ojs.call (Ojs.get_prop_ascii x13827 "uniform4fv")
                       "apply"
                       [|x13827;((let x13821 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x13821 "push"
                                       [|(or_null_to_js
                                            WebGLUniformLocation.t_to_js
                                            x13817)|]);
                                  ignore
                                    (Ojs.call x13821 "push"
                                       [|(Float32List.t_to_js x13818)|]);
                                  (match x13819 with
                                   | Some x13823 ->
                                       ignore
                                         (Ojs.call x13821 "push"
                                            [|(GLuint.t_to_js x13823)|])
                                   | None -> ());
                                  (match x13820 with
                                   | Some x13822 ->
                                       ignore
                                         (Ojs.call x13821 "push"
                                            [|(GLuint.t_to_js x13822)|])
                                   | None -> ());
                                  x13821))|])
    let (uniform4iv' :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          data:Int32List.t ->
            ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x13836 : 'tags this) ->
        fun ~location:(x13828 : WebGLUniformLocation.t or_null) ->
          fun ~data:(x13829 : Int32List.t) ->
            fun ?srcOffset:(x13830 : GLuint.t option) ->
              fun ?srcLength:(x13831 : GLuint.t option) ->
                fun () ->
                  ignore
                    (let x13838 = this_to_js Obj.magic x13836 in
                     Ojs.call (Ojs.get_prop_ascii x13838 "uniform4iv")
                       "apply"
                       [|x13838;((let x13832 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x13832 "push"
                                       [|(or_null_to_js
                                            WebGLUniformLocation.t_to_js
                                            x13828)|]);
                                  ignore
                                    (Ojs.call x13832 "push"
                                       [|(Int32List.t_to_js x13829)|]);
                                  (match x13830 with
                                   | Some x13834 ->
                                       ignore
                                         (Ojs.call x13832 "push"
                                            [|(GLuint.t_to_js x13834)|])
                                   | None -> ());
                                  (match x13831 with
                                   | Some x13833 ->
                                       ignore
                                         (Ojs.call x13832 "push"
                                            [|(GLuint.t_to_js x13833)|])
                                   | None -> ());
                                  x13832))|])
    let (uniformMatrix2fv' :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          transpose:GLboolean.t ->
            data:Float32List.t ->
              ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x13848 : 'tags this) ->
        fun ~location:(x13839 : WebGLUniformLocation.t or_null) ->
          fun ~transpose:(x13840 : GLboolean.t) ->
            fun ~data:(x13841 : Float32List.t) ->
              fun ?srcOffset:(x13842 : GLuint.t option) ->
                fun ?srcLength:(x13843 : GLuint.t option) ->
                  fun () ->
                    ignore
                      (let x13850 = this_to_js Obj.magic x13848 in
                       Ojs.call
                         (Ojs.get_prop_ascii x13850 "uniformMatrix2fv")
                         "apply"
                         [|x13850;((let x13844 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    ignore
                                      (Ojs.call x13844 "push"
                                         [|(or_null_to_js
                                              WebGLUniformLocation.t_to_js
                                              x13839)|]);
                                    ignore
                                      (Ojs.call x13844 "push"
                                         [|(GLboolean.t_to_js x13840)|]);
                                    ignore
                                      (Ojs.call x13844 "push"
                                         [|(Float32List.t_to_js x13841)|]);
                                    (match x13842 with
                                     | Some x13846 ->
                                         ignore
                                           (Ojs.call x13844 "push"
                                              [|(GLuint.t_to_js x13846)|])
                                     | None -> ());
                                    (match x13843 with
                                     | Some x13845 ->
                                         ignore
                                           (Ojs.call x13844 "push"
                                              [|(GLuint.t_to_js x13845)|])
                                     | None -> ());
                                    x13844))|])
    let (uniformMatrix3fv' :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          transpose:GLboolean.t ->
            data:Float32List.t ->
              ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x13860 : 'tags this) ->
        fun ~location:(x13851 : WebGLUniformLocation.t or_null) ->
          fun ~transpose:(x13852 : GLboolean.t) ->
            fun ~data:(x13853 : Float32List.t) ->
              fun ?srcOffset:(x13854 : GLuint.t option) ->
                fun ?srcLength:(x13855 : GLuint.t option) ->
                  fun () ->
                    ignore
                      (let x13862 = this_to_js Obj.magic x13860 in
                       Ojs.call
                         (Ojs.get_prop_ascii x13862 "uniformMatrix3fv")
                         "apply"
                         [|x13862;((let x13856 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    ignore
                                      (Ojs.call x13856 "push"
                                         [|(or_null_to_js
                                              WebGLUniformLocation.t_to_js
                                              x13851)|]);
                                    ignore
                                      (Ojs.call x13856 "push"
                                         [|(GLboolean.t_to_js x13852)|]);
                                    ignore
                                      (Ojs.call x13856 "push"
                                         [|(Float32List.t_to_js x13853)|]);
                                    (match x13854 with
                                     | Some x13858 ->
                                         ignore
                                           (Ojs.call x13856 "push"
                                              [|(GLuint.t_to_js x13858)|])
                                     | None -> ());
                                    (match x13855 with
                                     | Some x13857 ->
                                         ignore
                                           (Ojs.call x13856 "push"
                                              [|(GLuint.t_to_js x13857)|])
                                     | None -> ());
                                    x13856))|])
    let (uniformMatrix4fv' :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          transpose:GLboolean.t ->
            data:Float32List.t ->
              ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x13872 : 'tags this) ->
        fun ~location:(x13863 : WebGLUniformLocation.t or_null) ->
          fun ~transpose:(x13864 : GLboolean.t) ->
            fun ~data:(x13865 : Float32List.t) ->
              fun ?srcOffset:(x13866 : GLuint.t option) ->
                fun ?srcLength:(x13867 : GLuint.t option) ->
                  fun () ->
                    ignore
                      (let x13874 = this_to_js Obj.magic x13872 in
                       Ojs.call
                         (Ojs.get_prop_ascii x13874 "uniformMatrix4fv")
                         "apply"
                         [|x13874;((let x13868 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    ignore
                                      (Ojs.call x13868 "push"
                                         [|(or_null_to_js
                                              WebGLUniformLocation.t_to_js
                                              x13863)|]);
                                    ignore
                                      (Ojs.call x13868 "push"
                                         [|(GLboolean.t_to_js x13864)|]);
                                    ignore
                                      (Ojs.call x13868 "push"
                                         [|(Float32List.t_to_js x13865)|]);
                                    (match x13866 with
                                     | Some x13870 ->
                                         ignore
                                           (Ojs.call x13868 "push"
                                              [|(GLuint.t_to_js x13870)|])
                                     | None -> ());
                                    (match x13867 with
                                     | Some x13869 ->
                                         ignore
                                           (Ojs.call x13868 "push"
                                              [|(GLuint.t_to_js x13869)|])
                                     | None -> ());
                                    x13868))|])
    let cast_from = Obj.magic
  end
module Uint32List =
  struct
    type t = (Uint32Array.t_0, GLuint.t) or_array
    let rec t_of_js : Ojs.t -> t =
      fun (x13878 : Ojs.t) ->
        or_array_of_js Uint32Array.t_0_of_js GLuint.t_of_js x13878
    and t_to_js : t -> Ojs.t =
      fun (x13875 : (Uint32Array.t_0, GLuint.t) or_array) ->
        or_array_to_js Uint32Array.t_0_to_js GLuint.t_to_js x13875
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x13882 : Ojs.t) -> t_of_js x13882
    and t_0_to_js : t_0 -> Ojs.t = fun (x13881 : t) -> t_to_js x13881
  end
module GLuint64 =
  struct
    type t = float
    let rec t_of_js : Ojs.t -> t =
      fun (x13884 : Ojs.t) -> Ojs.float_of_js x13884
    and t_to_js : t -> Ojs.t = fun (x13883 : float) -> Ojs.float_to_js x13883
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x13886 : Ojs.t) -> t_of_js x13886
    and t_0_to_js : t_0 -> Ojs.t = fun (x13885 : t) -> t_to_js x13885
  end
module GLint64 =
  struct
    type t = float
    let rec t_of_js : Ojs.t -> t =
      fun (x13888 : Ojs.t) -> Ojs.float_of_js x13888
    and t_to_js : t -> Ojs.t = fun (x13887 : float) -> Ojs.float_to_js x13887
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x13890 : Ojs.t) -> t_of_js x13890
    and t_0_to_js : t_0 -> Ojs.t = fun (x13889 : t) -> t_to_js x13889
  end
module WebGL2RenderingContextBase =
  struct
    type t = [ `WebGL2RenderingContextBase ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x13892 : Ojs.t) -> t_of_js x13892
    and t_0_to_js : t_0 -> Ojs.t = fun (x13891 : t) -> t_to_js x13891
    type tags = [ `WebGL2RenderingContextBase ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `WebGL2RenderingContextBase ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x13895 : Ojs.t) -> intf_of_js __tags_of_js x13895
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x13893 : __tags intf) -> intf_to_js __tags_to_js x13893
    let (clearBufferfv :
      'tags this ->
        buffer:GLenum.t ->
          drawbuffer:GLint.t ->
            values:GLfloat.t Iterable.t_1 ->
              ?srcOffset:GLuint.t -> unit -> unit)
      =
      fun (x13904 : 'tags this) ->
        fun ~buffer:(x13897 : GLenum.t) ->
          fun ~drawbuffer:(x13898 : GLint.t) ->
            fun ~values:(x13899 : GLfloat.t Iterable.t_1) ->
              fun ?srcOffset:(x13900 : GLuint.t option) ->
                fun () ->
                  ignore
                    (let x13906 = this_to_js Obj.magic x13904 in
                     Ojs.call (Ojs.get_prop_ascii x13906 "clearBufferfv")
                       "apply"
                       [|x13906;((let x13901 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x13901 "push"
                                       [|(GLenum.t_to_js x13897)|]);
                                  ignore
                                    (Ojs.call x13901 "push"
                                       [|(GLint.t_to_js x13898)|]);
                                  ignore
                                    (Ojs.call x13901 "push"
                                       [|(Iterable.t_1_to_js GLfloat.t_to_js
                                            x13899)|]);
                                  (match x13900 with
                                   | Some x13902 ->
                                       ignore
                                         (Ojs.call x13901 "push"
                                            [|(GLuint.t_to_js x13902)|])
                                   | None -> ());
                                  x13901))|])
    let (clearBufferiv :
      'tags this ->
        buffer:GLenum.t ->
          drawbuffer:GLint.t ->
            values:GLint.t Iterable.t_1 ->
              ?srcOffset:GLuint.t -> unit -> unit)
      =
      fun (x13914 : 'tags this) ->
        fun ~buffer:(x13907 : GLenum.t) ->
          fun ~drawbuffer:(x13908 : GLint.t) ->
            fun ~values:(x13909 : GLint.t Iterable.t_1) ->
              fun ?srcOffset:(x13910 : GLuint.t option) ->
                fun () ->
                  ignore
                    (let x13916 = this_to_js Obj.magic x13914 in
                     Ojs.call (Ojs.get_prop_ascii x13916 "clearBufferiv")
                       "apply"
                       [|x13916;((let x13911 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x13911 "push"
                                       [|(GLenum.t_to_js x13907)|]);
                                  ignore
                                    (Ojs.call x13911 "push"
                                       [|(GLint.t_to_js x13908)|]);
                                  ignore
                                    (Ojs.call x13911 "push"
                                       [|(Iterable.t_1_to_js GLint.t_to_js
                                            x13909)|]);
                                  (match x13910 with
                                   | Some x13912 ->
                                       ignore
                                         (Ojs.call x13911 "push"
                                            [|(GLuint.t_to_js x13912)|])
                                   | None -> ());
                                  x13911))|])
    let (clearBufferuiv :
      'tags this ->
        buffer:GLenum.t ->
          drawbuffer:GLint.t ->
            values:GLuint.t Iterable.t_1 ->
              ?srcOffset:GLuint.t -> unit -> unit)
      =
      fun (x13924 : 'tags this) ->
        fun ~buffer:(x13917 : GLenum.t) ->
          fun ~drawbuffer:(x13918 : GLint.t) ->
            fun ~values:(x13919 : GLuint.t Iterable.t_1) ->
              fun ?srcOffset:(x13920 : GLuint.t option) ->
                fun () ->
                  ignore
                    (let x13926 = this_to_js Obj.magic x13924 in
                     Ojs.call (Ojs.get_prop_ascii x13926 "clearBufferuiv")
                       "apply"
                       [|x13926;((let x13921 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x13921 "push"
                                       [|(GLenum.t_to_js x13917)|]);
                                  ignore
                                    (Ojs.call x13921 "push"
                                       [|(GLint.t_to_js x13918)|]);
                                  ignore
                                    (Ojs.call x13921 "push"
                                       [|(Iterable.t_1_to_js GLuint.t_to_js
                                            x13919)|]);
                                  (match x13920 with
                                   | Some x13922 ->
                                       ignore
                                         (Ojs.call x13921 "push"
                                            [|(GLuint.t_to_js x13922)|])
                                   | None -> ());
                                  x13921))|])
    let (drawBuffers : 'tags this -> buffers:GLenum.t Iterable.t_1 -> unit) =
      fun (x13929 : 'tags this) ->
        fun ~buffers:(x13927 : GLenum.t Iterable.t_1) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x13929) "drawBuffers"
               [|(Iterable.t_1_to_js GLenum.t_to_js x13927)|])
    let (getActiveUniforms :
      'tags this ->
        program:WebGLProgram.t ->
          uniformIndices:GLuint.t Iterable.t_1 -> pname:GLenum.t -> any)
      =
      fun (x13935 : 'tags this) ->
        fun ~program:(x13931 : WebGLProgram.t) ->
          fun ~uniformIndices:(x13932 : GLuint.t Iterable.t_1) ->
            fun ~pname:(x13934 : GLenum.t) ->
              any_of_js
                (Ojs.call (this_to_js Obj.magic x13935) "getActiveUniforms"
                   [|(WebGLProgram.t_to_js x13931);(Iterable.t_1_to_js
                                                      GLuint.t_to_js x13932);(
                     GLenum.t_to_js x13934)|])
    let (getUniformIndices :
      'tags this ->
        program:WebGLProgram.t ->
          uniformNames:string Iterable.t_1 -> GLuint.t Iterable.t_1 or_null)
      =
      fun (x13940 : 'tags this) ->
        fun ~program:(x13937 : WebGLProgram.t) ->
          fun ~uniformNames:(x13938 : string Iterable.t_1) ->
            or_null_of_js
              (fun (x13942 : Ojs.t) ->
                 Iterable.t_1_of_js GLuint.t_of_js x13942)
              (Ojs.call (this_to_js Obj.magic x13940) "getUniformIndices"
                 [|(WebGLProgram.t_to_js x13937);(Iterable.t_1_to_js
                                                    Ojs.string_to_js x13938)|])
    let (invalidateFramebuffer :
      'tags this ->
        target:GLenum.t -> attachments:GLenum.t Iterable.t_1 -> unit)
      =
      fun (x13947 : 'tags this) ->
        fun ~target:(x13944 : GLenum.t) ->
          fun ~attachments:(x13945 : GLenum.t Iterable.t_1) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x13947) "invalidateFramebuffer"
                 [|(GLenum.t_to_js x13944);(Iterable.t_1_to_js GLenum.t_to_js
                                              x13945)|])
    let (invalidateSubFramebuffer :
      'tags this ->
        target:GLenum.t ->
          attachments:GLenum.t Iterable.t_1 ->
            x:GLint.t ->
              y:GLint.t -> width:GLsizei.t -> height:GLsizei.t -> unit)
      =
      fun (x13956 : 'tags this) ->
        fun ~target:(x13949 : GLenum.t) ->
          fun ~attachments:(x13950 : GLenum.t Iterable.t_1) ->
            fun ~x:(x13952 : GLint.t) ->
              fun ~y:(x13953 : GLint.t) ->
                fun ~width:(x13954 : GLsizei.t) ->
                  fun ~height:(x13955 : GLsizei.t) ->
                    ignore
                      (Ojs.call (this_to_js Obj.magic x13956)
                         "invalidateSubFramebuffer"
                         [|(GLenum.t_to_js x13949);(Iterable.t_1_to_js
                                                      GLenum.t_to_js x13950);(
                           GLint.t_to_js x13952);(GLint.t_to_js x13953);(
                           GLsizei.t_to_js x13954);(GLsizei.t_to_js x13955)|])
    let (transformFeedbackVaryings :
      'tags this ->
        program:WebGLProgram.t ->
          varyings:string Iterable.t_1 -> bufferMode:GLenum.t -> unit)
      =
      fun (x13962 : 'tags this) ->
        fun ~program:(x13958 : WebGLProgram.t) ->
          fun ~varyings:(x13959 : string Iterable.t_1) ->
            fun ~bufferMode:(x13961 : GLenum.t) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x13962)
                   "transformFeedbackVaryings"
                   [|(WebGLProgram.t_to_js x13958);(Iterable.t_1_to_js
                                                      Ojs.string_to_js x13959);(
                     GLenum.t_to_js x13961)|])
    let (uniform1uiv :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          data:GLuint.t Iterable.t_1 ->
            ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x13973 : 'tags this) ->
        fun ~location:(x13964 : WebGLUniformLocation.t or_null) ->
          fun ~data:(x13965 : GLuint.t Iterable.t_1) ->
            fun ?srcOffset:(x13966 : GLuint.t option) ->
              fun ?srcLength:(x13967 : GLuint.t option) ->
                fun () ->
                  ignore
                    (let x13975 = this_to_js Obj.magic x13973 in
                     Ojs.call (Ojs.get_prop_ascii x13975 "uniform1uiv")
                       "apply"
                       [|x13975;((let x13968 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x13968 "push"
                                       [|(or_null_to_js
                                            WebGLUniformLocation.t_to_js
                                            x13964)|]);
                                  ignore
                                    (Ojs.call x13968 "push"
                                       [|(Iterable.t_1_to_js GLuint.t_to_js
                                            x13965)|]);
                                  (match x13966 with
                                   | Some x13970 ->
                                       ignore
                                         (Ojs.call x13968 "push"
                                            [|(GLuint.t_to_js x13970)|])
                                   | None -> ());
                                  (match x13967 with
                                   | Some x13969 ->
                                       ignore
                                         (Ojs.call x13968 "push"
                                            [|(GLuint.t_to_js x13969)|])
                                   | None -> ());
                                  x13968))|])
    let (uniform2uiv :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          data:GLuint.t Iterable.t_1 ->
            ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x13985 : 'tags this) ->
        fun ~location:(x13976 : WebGLUniformLocation.t or_null) ->
          fun ~data:(x13977 : GLuint.t Iterable.t_1) ->
            fun ?srcOffset:(x13978 : GLuint.t option) ->
              fun ?srcLength:(x13979 : GLuint.t option) ->
                fun () ->
                  ignore
                    (let x13987 = this_to_js Obj.magic x13985 in
                     Ojs.call (Ojs.get_prop_ascii x13987 "uniform2uiv")
                       "apply"
                       [|x13987;((let x13980 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x13980 "push"
                                       [|(or_null_to_js
                                            WebGLUniformLocation.t_to_js
                                            x13976)|]);
                                  ignore
                                    (Ojs.call x13980 "push"
                                       [|(Iterable.t_1_to_js GLuint.t_to_js
                                            x13977)|]);
                                  (match x13978 with
                                   | Some x13982 ->
                                       ignore
                                         (Ojs.call x13980 "push"
                                            [|(GLuint.t_to_js x13982)|])
                                   | None -> ());
                                  (match x13979 with
                                   | Some x13981 ->
                                       ignore
                                         (Ojs.call x13980 "push"
                                            [|(GLuint.t_to_js x13981)|])
                                   | None -> ());
                                  x13980))|])
    let (uniform3uiv :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          data:GLuint.t Iterable.t_1 ->
            ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x13997 : 'tags this) ->
        fun ~location:(x13988 : WebGLUniformLocation.t or_null) ->
          fun ~data:(x13989 : GLuint.t Iterable.t_1) ->
            fun ?srcOffset:(x13990 : GLuint.t option) ->
              fun ?srcLength:(x13991 : GLuint.t option) ->
                fun () ->
                  ignore
                    (let x13999 = this_to_js Obj.magic x13997 in
                     Ojs.call (Ojs.get_prop_ascii x13999 "uniform3uiv")
                       "apply"
                       [|x13999;((let x13992 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x13992 "push"
                                       [|(or_null_to_js
                                            WebGLUniformLocation.t_to_js
                                            x13988)|]);
                                  ignore
                                    (Ojs.call x13992 "push"
                                       [|(Iterable.t_1_to_js GLuint.t_to_js
                                            x13989)|]);
                                  (match x13990 with
                                   | Some x13994 ->
                                       ignore
                                         (Ojs.call x13992 "push"
                                            [|(GLuint.t_to_js x13994)|])
                                   | None -> ());
                                  (match x13991 with
                                   | Some x13993 ->
                                       ignore
                                         (Ojs.call x13992 "push"
                                            [|(GLuint.t_to_js x13993)|])
                                   | None -> ());
                                  x13992))|])
    let (uniform4uiv :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          data:GLuint.t Iterable.t_1 ->
            ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x14009 : 'tags this) ->
        fun ~location:(x14000 : WebGLUniformLocation.t or_null) ->
          fun ~data:(x14001 : GLuint.t Iterable.t_1) ->
            fun ?srcOffset:(x14002 : GLuint.t option) ->
              fun ?srcLength:(x14003 : GLuint.t option) ->
                fun () ->
                  ignore
                    (let x14011 = this_to_js Obj.magic x14009 in
                     Ojs.call (Ojs.get_prop_ascii x14011 "uniform4uiv")
                       "apply"
                       [|x14011;((let x14004 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x14004 "push"
                                       [|(or_null_to_js
                                            WebGLUniformLocation.t_to_js
                                            x14000)|]);
                                  ignore
                                    (Ojs.call x14004 "push"
                                       [|(Iterable.t_1_to_js GLuint.t_to_js
                                            x14001)|]);
                                  (match x14002 with
                                   | Some x14006 ->
                                       ignore
                                         (Ojs.call x14004 "push"
                                            [|(GLuint.t_to_js x14006)|])
                                   | None -> ());
                                  (match x14003 with
                                   | Some x14005 ->
                                       ignore
                                         (Ojs.call x14004 "push"
                                            [|(GLuint.t_to_js x14005)|])
                                   | None -> ());
                                  x14004))|])
    let (uniformMatrix2x3fv :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          transpose:GLboolean.t ->
            data:GLfloat.t Iterable.t_1 ->
              ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x14022 : 'tags this) ->
        fun ~location:(x14012 : WebGLUniformLocation.t or_null) ->
          fun ~transpose:(x14013 : GLboolean.t) ->
            fun ~data:(x14014 : GLfloat.t Iterable.t_1) ->
              fun ?srcOffset:(x14015 : GLuint.t option) ->
                fun ?srcLength:(x14016 : GLuint.t option) ->
                  fun () ->
                    ignore
                      (let x14024 = this_to_js Obj.magic x14022 in
                       Ojs.call
                         (Ojs.get_prop_ascii x14024 "uniformMatrix2x3fv")
                         "apply"
                         [|x14024;((let x14017 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    ignore
                                      (Ojs.call x14017 "push"
                                         [|(or_null_to_js
                                              WebGLUniformLocation.t_to_js
                                              x14012)|]);
                                    ignore
                                      (Ojs.call x14017 "push"
                                         [|(GLboolean.t_to_js x14013)|]);
                                    ignore
                                      (Ojs.call x14017 "push"
                                         [|(Iterable.t_1_to_js
                                              GLfloat.t_to_js x14014)|]);
                                    (match x14015 with
                                     | Some x14019 ->
                                         ignore
                                           (Ojs.call x14017 "push"
                                              [|(GLuint.t_to_js x14019)|])
                                     | None -> ());
                                    (match x14016 with
                                     | Some x14018 ->
                                         ignore
                                           (Ojs.call x14017 "push"
                                              [|(GLuint.t_to_js x14018)|])
                                     | None -> ());
                                    x14017))|])
    let (uniformMatrix2x4fv :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          transpose:GLboolean.t ->
            data:GLfloat.t Iterable.t_1 ->
              ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x14035 : 'tags this) ->
        fun ~location:(x14025 : WebGLUniformLocation.t or_null) ->
          fun ~transpose:(x14026 : GLboolean.t) ->
            fun ~data:(x14027 : GLfloat.t Iterable.t_1) ->
              fun ?srcOffset:(x14028 : GLuint.t option) ->
                fun ?srcLength:(x14029 : GLuint.t option) ->
                  fun () ->
                    ignore
                      (let x14037 = this_to_js Obj.magic x14035 in
                       Ojs.call
                         (Ojs.get_prop_ascii x14037 "uniformMatrix2x4fv")
                         "apply"
                         [|x14037;((let x14030 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    ignore
                                      (Ojs.call x14030 "push"
                                         [|(or_null_to_js
                                              WebGLUniformLocation.t_to_js
                                              x14025)|]);
                                    ignore
                                      (Ojs.call x14030 "push"
                                         [|(GLboolean.t_to_js x14026)|]);
                                    ignore
                                      (Ojs.call x14030 "push"
                                         [|(Iterable.t_1_to_js
                                              GLfloat.t_to_js x14027)|]);
                                    (match x14028 with
                                     | Some x14032 ->
                                         ignore
                                           (Ojs.call x14030 "push"
                                              [|(GLuint.t_to_js x14032)|])
                                     | None -> ());
                                    (match x14029 with
                                     | Some x14031 ->
                                         ignore
                                           (Ojs.call x14030 "push"
                                              [|(GLuint.t_to_js x14031)|])
                                     | None -> ());
                                    x14030))|])
    let (uniformMatrix3x2fv :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          transpose:GLboolean.t ->
            data:GLfloat.t Iterable.t_1 ->
              ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x14048 : 'tags this) ->
        fun ~location:(x14038 : WebGLUniformLocation.t or_null) ->
          fun ~transpose:(x14039 : GLboolean.t) ->
            fun ~data:(x14040 : GLfloat.t Iterable.t_1) ->
              fun ?srcOffset:(x14041 : GLuint.t option) ->
                fun ?srcLength:(x14042 : GLuint.t option) ->
                  fun () ->
                    ignore
                      (let x14050 = this_to_js Obj.magic x14048 in
                       Ojs.call
                         (Ojs.get_prop_ascii x14050 "uniformMatrix3x2fv")
                         "apply"
                         [|x14050;((let x14043 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    ignore
                                      (Ojs.call x14043 "push"
                                         [|(or_null_to_js
                                              WebGLUniformLocation.t_to_js
                                              x14038)|]);
                                    ignore
                                      (Ojs.call x14043 "push"
                                         [|(GLboolean.t_to_js x14039)|]);
                                    ignore
                                      (Ojs.call x14043 "push"
                                         [|(Iterable.t_1_to_js
                                              GLfloat.t_to_js x14040)|]);
                                    (match x14041 with
                                     | Some x14045 ->
                                         ignore
                                           (Ojs.call x14043 "push"
                                              [|(GLuint.t_to_js x14045)|])
                                     | None -> ());
                                    (match x14042 with
                                     | Some x14044 ->
                                         ignore
                                           (Ojs.call x14043 "push"
                                              [|(GLuint.t_to_js x14044)|])
                                     | None -> ());
                                    x14043))|])
    let (uniformMatrix3x4fv :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          transpose:GLboolean.t ->
            data:GLfloat.t Iterable.t_1 ->
              ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x14061 : 'tags this) ->
        fun ~location:(x14051 : WebGLUniformLocation.t or_null) ->
          fun ~transpose:(x14052 : GLboolean.t) ->
            fun ~data:(x14053 : GLfloat.t Iterable.t_1) ->
              fun ?srcOffset:(x14054 : GLuint.t option) ->
                fun ?srcLength:(x14055 : GLuint.t option) ->
                  fun () ->
                    ignore
                      (let x14063 = this_to_js Obj.magic x14061 in
                       Ojs.call
                         (Ojs.get_prop_ascii x14063 "uniformMatrix3x4fv")
                         "apply"
                         [|x14063;((let x14056 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    ignore
                                      (Ojs.call x14056 "push"
                                         [|(or_null_to_js
                                              WebGLUniformLocation.t_to_js
                                              x14051)|]);
                                    ignore
                                      (Ojs.call x14056 "push"
                                         [|(GLboolean.t_to_js x14052)|]);
                                    ignore
                                      (Ojs.call x14056 "push"
                                         [|(Iterable.t_1_to_js
                                              GLfloat.t_to_js x14053)|]);
                                    (match x14054 with
                                     | Some x14058 ->
                                         ignore
                                           (Ojs.call x14056 "push"
                                              [|(GLuint.t_to_js x14058)|])
                                     | None -> ());
                                    (match x14055 with
                                     | Some x14057 ->
                                         ignore
                                           (Ojs.call x14056 "push"
                                              [|(GLuint.t_to_js x14057)|])
                                     | None -> ());
                                    x14056))|])
    let (uniformMatrix4x2fv :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          transpose:GLboolean.t ->
            data:GLfloat.t Iterable.t_1 ->
              ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x14074 : 'tags this) ->
        fun ~location:(x14064 : WebGLUniformLocation.t or_null) ->
          fun ~transpose:(x14065 : GLboolean.t) ->
            fun ~data:(x14066 : GLfloat.t Iterable.t_1) ->
              fun ?srcOffset:(x14067 : GLuint.t option) ->
                fun ?srcLength:(x14068 : GLuint.t option) ->
                  fun () ->
                    ignore
                      (let x14076 = this_to_js Obj.magic x14074 in
                       Ojs.call
                         (Ojs.get_prop_ascii x14076 "uniformMatrix4x2fv")
                         "apply"
                         [|x14076;((let x14069 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    ignore
                                      (Ojs.call x14069 "push"
                                         [|(or_null_to_js
                                              WebGLUniformLocation.t_to_js
                                              x14064)|]);
                                    ignore
                                      (Ojs.call x14069 "push"
                                         [|(GLboolean.t_to_js x14065)|]);
                                    ignore
                                      (Ojs.call x14069 "push"
                                         [|(Iterable.t_1_to_js
                                              GLfloat.t_to_js x14066)|]);
                                    (match x14067 with
                                     | Some x14071 ->
                                         ignore
                                           (Ojs.call x14069 "push"
                                              [|(GLuint.t_to_js x14071)|])
                                     | None -> ());
                                    (match x14068 with
                                     | Some x14070 ->
                                         ignore
                                           (Ojs.call x14069 "push"
                                              [|(GLuint.t_to_js x14070)|])
                                     | None -> ());
                                    x14069))|])
    let (uniformMatrix4x3fv :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          transpose:GLboolean.t ->
            data:GLfloat.t Iterable.t_1 ->
              ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x14087 : 'tags this) ->
        fun ~location:(x14077 : WebGLUniformLocation.t or_null) ->
          fun ~transpose:(x14078 : GLboolean.t) ->
            fun ~data:(x14079 : GLfloat.t Iterable.t_1) ->
              fun ?srcOffset:(x14080 : GLuint.t option) ->
                fun ?srcLength:(x14081 : GLuint.t option) ->
                  fun () ->
                    ignore
                      (let x14089 = this_to_js Obj.magic x14087 in
                       Ojs.call
                         (Ojs.get_prop_ascii x14089 "uniformMatrix4x3fv")
                         "apply"
                         [|x14089;((let x14082 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    ignore
                                      (Ojs.call x14082 "push"
                                         [|(or_null_to_js
                                              WebGLUniformLocation.t_to_js
                                              x14077)|]);
                                    ignore
                                      (Ojs.call x14082 "push"
                                         [|(GLboolean.t_to_js x14078)|]);
                                    ignore
                                      (Ojs.call x14082 "push"
                                         [|(Iterable.t_1_to_js
                                              GLfloat.t_to_js x14079)|]);
                                    (match x14080 with
                                     | Some x14084 ->
                                         ignore
                                           (Ojs.call x14082 "push"
                                              [|(GLuint.t_to_js x14084)|])
                                     | None -> ());
                                    (match x14081 with
                                     | Some x14083 ->
                                         ignore
                                           (Ojs.call x14082 "push"
                                              [|(GLuint.t_to_js x14083)|])
                                     | None -> ());
                                    x14082))|])
    let (vertexAttribI4iv :
      'tags this -> index:GLuint.t -> values:GLint.t Iterable.t_1 -> unit) =
      fun (x14093 : 'tags this) ->
        fun ~index:(x14090 : GLuint.t) ->
          fun ~values:(x14091 : GLint.t Iterable.t_1) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x14093) "vertexAttribI4iv"
                 [|(GLuint.t_to_js x14090);(Iterable.t_1_to_js GLint.t_to_js
                                              x14091)|])
    let (vertexAttribI4uiv :
      'tags this -> index:GLuint.t -> values:GLuint.t Iterable.t_1 -> unit) =
      fun (x14098 : 'tags this) ->
        fun ~index:(x14095 : GLuint.t) ->
          fun ~values:(x14096 : GLuint.t Iterable.t_1) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x14098) "vertexAttribI4uiv"
                 [|(GLuint.t_to_js x14095);(Iterable.t_1_to_js GLuint.t_to_js
                                              x14096)|])
    let (beginQuery :
      'tags this -> target:GLenum.t -> query:WebGLQuery.t -> unit) =
      fun (x14102 : 'tags this) ->
        fun ~target:(x14100 : GLenum.t) ->
          fun ~query:(x14101 : WebGLQuery.t) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x14102) "beginQuery"
                 [|(GLenum.t_to_js x14100);(WebGLQuery.t_to_js x14101)|])
    let (beginTransformFeedback :
      'tags this -> primitiveMode:GLenum.t -> unit) =
      fun (x14105 : 'tags this) ->
        fun ~primitiveMode:(x14104 : GLenum.t) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x14105) "beginTransformFeedback"
               [|(GLenum.t_to_js x14104)|])
    let (bindBufferBase :
      'tags this ->
        target:GLenum.t ->
          index:GLuint.t -> buffer:WebGLBuffer.t or_null -> unit)
      =
      fun (x14111 : 'tags this) ->
        fun ~target:(x14107 : GLenum.t) ->
          fun ~index:(x14108 : GLuint.t) ->
            fun ~buffer:(x14109 : WebGLBuffer.t or_null) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x14111) "bindBufferBase"
                   [|(GLenum.t_to_js x14107);(GLuint.t_to_js x14108);(
                     or_null_to_js WebGLBuffer.t_to_js x14109)|])
    let (bindBufferRange :
      'tags this ->
        target:GLenum.t ->
          index:GLuint.t ->
            buffer:WebGLBuffer.t or_null ->
              offset:GLintptr.t -> size:GLsizeiptr.t -> unit)
      =
      fun (x14119 : 'tags this) ->
        fun ~target:(x14113 : GLenum.t) ->
          fun ~index:(x14114 : GLuint.t) ->
            fun ~buffer:(x14115 : WebGLBuffer.t or_null) ->
              fun ~offset:(x14117 : GLintptr.t) ->
                fun ~size:(x14118 : GLsizeiptr.t) ->
                  ignore
                    (Ojs.call (this_to_js Obj.magic x14119) "bindBufferRange"
                       [|(GLenum.t_to_js x14113);(GLuint.t_to_js x14114);(
                         or_null_to_js WebGLBuffer.t_to_js x14115);(GLintptr.t_to_js
                                                                    x14117);(
                         GLsizeiptr.t_to_js x14118)|])
    let (bindSampler :
      'tags this -> unit:GLuint.t -> sampler:WebGLSampler.t or_null -> unit)
      =
      fun (x14124 : 'tags this) ->
        fun ~unit:(x14121 : GLuint.t) ->
          fun ~sampler:(x14122 : WebGLSampler.t or_null) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x14124) "bindSampler"
                 [|(GLuint.t_to_js x14121);(or_null_to_js
                                              WebGLSampler.t_to_js x14122)|])
    let (bindTransformFeedback :
      'tags this ->
        target:GLenum.t -> tf:WebGLTransformFeedback.t or_null -> unit)
      =
      fun (x14129 : 'tags this) ->
        fun ~target:(x14126 : GLenum.t) ->
          fun ~tf:(x14127 : WebGLTransformFeedback.t or_null) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x14129) "bindTransformFeedback"
                 [|(GLenum.t_to_js x14126);(or_null_to_js
                                              WebGLTransformFeedback.t_to_js
                                              x14127)|])
    let (bindVertexArray :
      'tags this -> array:WebGLVertexArrayObject.t or_null -> unit) =
      fun (x14133 : 'tags this) ->
        fun ~array:(x14131 : WebGLVertexArrayObject.t or_null) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x14133) "bindVertexArray"
               [|(or_null_to_js WebGLVertexArrayObject.t_to_js x14131)|])
    let (blitFramebuffer :
      'tags this ->
        srcX0:GLint.t ->
          srcY0:GLint.t ->
            srcX1:GLint.t ->
              srcY1:GLint.t ->
                dstX0:GLint.t ->
                  dstY0:GLint.t ->
                    dstX1:GLint.t ->
                      dstY1:GLint.t ->
                        mask:GLbitfield.t -> filter:GLenum.t -> unit)
      =
      fun (x14145 : 'tags this) ->
        fun ~srcX0:(x14135 : GLint.t) ->
          fun ~srcY0:(x14136 : GLint.t) ->
            fun ~srcX1:(x14137 : GLint.t) ->
              fun ~srcY1:(x14138 : GLint.t) ->
                fun ~dstX0:(x14139 : GLint.t) ->
                  fun ~dstY0:(x14140 : GLint.t) ->
                    fun ~dstX1:(x14141 : GLint.t) ->
                      fun ~dstY1:(x14142 : GLint.t) ->
                        fun ~mask:(x14143 : GLbitfield.t) ->
                          fun ~filter:(x14144 : GLenum.t) ->
                            ignore
                              (Ojs.call (this_to_js Obj.magic x14145)
                                 "blitFramebuffer"
                                 [|(GLint.t_to_js x14135);(GLint.t_to_js
                                                             x14136);(
                                   GLint.t_to_js x14137);(GLint.t_to_js
                                                            x14138);(
                                   GLint.t_to_js x14139);(GLint.t_to_js
                                                            x14140);(
                                   GLint.t_to_js x14141);(GLint.t_to_js
                                                            x14142);(
                                   GLbitfield.t_to_js x14143);(GLenum.t_to_js
                                                                 x14144)|])
    let (clearBufferfi :
      'tags this ->
        buffer:GLenum.t ->
          drawbuffer:GLint.t -> depth:GLfloat.t -> stencil:GLint.t -> unit)
      =
      fun (x14151 : 'tags this) ->
        fun ~buffer:(x14147 : GLenum.t) ->
          fun ~drawbuffer:(x14148 : GLint.t) ->
            fun ~depth:(x14149 : GLfloat.t) ->
              fun ~stencil:(x14150 : GLint.t) ->
                ignore
                  (Ojs.call (this_to_js Obj.magic x14151) "clearBufferfi"
                     [|(GLenum.t_to_js x14147);(GLint.t_to_js x14148);(
                       GLfloat.t_to_js x14149);(GLint.t_to_js x14150)|])
    let (clearBufferfv' :
      'tags this ->
        buffer:GLenum.t ->
          drawbuffer:GLint.t ->
            values:Float32List.t -> ?srcOffset:GLuint.t -> unit -> unit)
      =
      fun (x14159 : 'tags this) ->
        fun ~buffer:(x14153 : GLenum.t) ->
          fun ~drawbuffer:(x14154 : GLint.t) ->
            fun ~values:(x14155 : Float32List.t) ->
              fun ?srcOffset:(x14156 : GLuint.t option) ->
                fun () ->
                  ignore
                    (let x14161 = this_to_js Obj.magic x14159 in
                     Ojs.call (Ojs.get_prop_ascii x14161 "clearBufferfv")
                       "apply"
                       [|x14161;((let x14157 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x14157 "push"
                                       [|(GLenum.t_to_js x14153)|]);
                                  ignore
                                    (Ojs.call x14157 "push"
                                       [|(GLint.t_to_js x14154)|]);
                                  ignore
                                    (Ojs.call x14157 "push"
                                       [|(Float32List.t_to_js x14155)|]);
                                  (match x14156 with
                                   | Some x14158 ->
                                       ignore
                                         (Ojs.call x14157 "push"
                                            [|(GLuint.t_to_js x14158)|])
                                   | None -> ());
                                  x14157))|])
    let (clearBufferiv' :
      'tags this ->
        buffer:GLenum.t ->
          drawbuffer:GLint.t ->
            values:Int32List.t -> ?srcOffset:GLuint.t -> unit -> unit)
      =
      fun (x14168 : 'tags this) ->
        fun ~buffer:(x14162 : GLenum.t) ->
          fun ~drawbuffer:(x14163 : GLint.t) ->
            fun ~values:(x14164 : Int32List.t) ->
              fun ?srcOffset:(x14165 : GLuint.t option) ->
                fun () ->
                  ignore
                    (let x14170 = this_to_js Obj.magic x14168 in
                     Ojs.call (Ojs.get_prop_ascii x14170 "clearBufferiv")
                       "apply"
                       [|x14170;((let x14166 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x14166 "push"
                                       [|(GLenum.t_to_js x14162)|]);
                                  ignore
                                    (Ojs.call x14166 "push"
                                       [|(GLint.t_to_js x14163)|]);
                                  ignore
                                    (Ojs.call x14166 "push"
                                       [|(Int32List.t_to_js x14164)|]);
                                  (match x14165 with
                                   | Some x14167 ->
                                       ignore
                                         (Ojs.call x14166 "push"
                                            [|(GLuint.t_to_js x14167)|])
                                   | None -> ());
                                  x14166))|])
    let (clearBufferuiv' :
      'tags this ->
        buffer:GLenum.t ->
          drawbuffer:GLint.t ->
            values:Uint32List.t -> ?srcOffset:GLuint.t -> unit -> unit)
      =
      fun (x14177 : 'tags this) ->
        fun ~buffer:(x14171 : GLenum.t) ->
          fun ~drawbuffer:(x14172 : GLint.t) ->
            fun ~values:(x14173 : Uint32List.t) ->
              fun ?srcOffset:(x14174 : GLuint.t option) ->
                fun () ->
                  ignore
                    (let x14179 = this_to_js Obj.magic x14177 in
                     Ojs.call (Ojs.get_prop_ascii x14179 "clearBufferuiv")
                       "apply"
                       [|x14179;((let x14175 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x14175 "push"
                                       [|(GLenum.t_to_js x14171)|]);
                                  ignore
                                    (Ojs.call x14175 "push"
                                       [|(GLint.t_to_js x14172)|]);
                                  ignore
                                    (Ojs.call x14175 "push"
                                       [|(Uint32List.t_to_js x14173)|]);
                                  (match x14174 with
                                   | Some x14176 ->
                                       ignore
                                         (Ojs.call x14175 "push"
                                            [|(GLuint.t_to_js x14176)|])
                                   | None -> ());
                                  x14175))|])
    let (clientWaitSync :
      'tags this ->
        sync:WebGLSync.t ->
          flags:GLbitfield.t -> timeout:GLuint64.t -> GLenum.t)
      =
      fun (x14183 : 'tags this) ->
        fun ~sync:(x14180 : WebGLSync.t) ->
          fun ~flags:(x14181 : GLbitfield.t) ->
            fun ~timeout:(x14182 : GLuint64.t) ->
              GLenum.t_of_js
                (Ojs.call (this_to_js Obj.magic x14183) "clientWaitSync"
                   [|(WebGLSync.t_to_js x14180);(GLbitfield.t_to_js x14181);(
                     GLuint64.t_to_js x14182)|])
    let (compressedTexImage3D :
      'tags this ->
        target:GLenum.t ->
          level:GLint.t ->
            internalformat:GLenum.t ->
              width:GLsizei.t ->
                height:GLsizei.t ->
                  depth:GLsizei.t ->
                    border:GLint.t ->
                      imageSize:GLsizei.t -> offset:GLintptr.t -> unit)
      =
      fun (x14194 : 'tags this) ->
        fun ~target:(x14185 : GLenum.t) ->
          fun ~level:(x14186 : GLint.t) ->
            fun ~internalformat:(x14187 : GLenum.t) ->
              fun ~width:(x14188 : GLsizei.t) ->
                fun ~height:(x14189 : GLsizei.t) ->
                  fun ~depth:(x14190 : GLsizei.t) ->
                    fun ~border:(x14191 : GLint.t) ->
                      fun ~imageSize:(x14192 : GLsizei.t) ->
                        fun ~offset:(x14193 : GLintptr.t) ->
                          ignore
                            (Ojs.call (this_to_js Obj.magic x14194)
                               "compressedTexImage3D"
                               [|(GLenum.t_to_js x14185);(GLint.t_to_js
                                                            x14186);(
                                 GLenum.t_to_js x14187);(GLsizei.t_to_js
                                                           x14188);(GLsizei.t_to_js
                                                                    x14189);(
                                 GLsizei.t_to_js x14190);(GLint.t_to_js
                                                            x14191);(
                                 GLsizei.t_to_js x14192);(GLintptr.t_to_js
                                                            x14193)|])
    let (compressedTexImage3D' :
      'tags this ->
        target:GLenum.t ->
          level:GLint.t ->
            internalformat:GLenum.t ->
              width:GLsizei.t ->
                height:GLsizei.t ->
                  depth:GLsizei.t ->
                    border:GLint.t ->
                      srcData:ArrayBufferView.t_0 ->
                        ?srcOffset:GLuint.t ->
                          ?srcLengthOverride:GLuint.t -> unit -> unit)
      =
      fun (x14209 : 'tags this) ->
        fun ~target:(x14196 : GLenum.t) ->
          fun ~level:(x14197 : GLint.t) ->
            fun ~internalformat:(x14198 : GLenum.t) ->
              fun ~width:(x14199 : GLsizei.t) ->
                fun ~height:(x14200 : GLsizei.t) ->
                  fun ~depth:(x14201 : GLsizei.t) ->
                    fun ~border:(x14202 : GLint.t) ->
                      fun ~srcData:(x14203 : ArrayBufferView.t_0) ->
                        fun ?srcOffset:(x14204 : GLuint.t option) ->
                          fun ?srcLengthOverride:(x14205 : GLuint.t option)
                            ->
                            fun () ->
                              ignore
                                (let x14211 = this_to_js Obj.magic x14209 in
                                 Ojs.call
                                   (Ojs.get_prop_ascii x14211
                                      "compressedTexImage3D") "apply"
                                   [|x14211;((let x14206 =
                                                Ojs.new_obj
                                                  (Ojs.get_prop_ascii
                                                     Ojs.global "Array") 
                                                  [||] in
                                              ignore
                                                (Ojs.call x14206 "push"
                                                   [|(GLenum.t_to_js x14196)|]);
                                              ignore
                                                (Ojs.call x14206 "push"
                                                   [|(GLint.t_to_js x14197)|]);
                                              ignore
                                                (Ojs.call x14206 "push"
                                                   [|(GLenum.t_to_js x14198)|]);
                                              ignore
                                                (Ojs.call x14206 "push"
                                                   [|(GLsizei.t_to_js x14199)|]);
                                              ignore
                                                (Ojs.call x14206 "push"
                                                   [|(GLsizei.t_to_js x14200)|]);
                                              ignore
                                                (Ojs.call x14206 "push"
                                                   [|(GLsizei.t_to_js x14201)|]);
                                              ignore
                                                (Ojs.call x14206 "push"
                                                   [|(GLint.t_to_js x14202)|]);
                                              ignore
                                                (Ojs.call x14206 "push"
                                                   [|(ArrayBufferView.t_0_to_js
                                                        x14203)|]);
                                              (match x14204 with
                                               | Some x14208 ->
                                                   ignore
                                                     (Ojs.call x14206 "push"
                                                        [|(GLuint.t_to_js
                                                             x14208)|])
                                               | None -> ());
                                              (match x14205 with
                                               | Some x14207 ->
                                                   ignore
                                                     (Ojs.call x14206 "push"
                                                        [|(GLuint.t_to_js
                                                             x14207)|])
                                               | None -> ());
                                              x14206))|])
    let (compressedTexSubImage3D :
      'tags this ->
        target:GLenum.t ->
          level:GLint.t ->
            xoffset:GLint.t ->
              yoffset:GLint.t ->
                zoffset:GLint.t ->
                  width:GLsizei.t ->
                    height:GLsizei.t ->
                      depth:GLsizei.t ->
                        format:GLenum.t ->
                          imageSize:GLsizei.t -> offset:GLintptr.t -> unit)
      =
      fun (x14223 : 'tags this) ->
        fun ~target:(x14212 : GLenum.t) ->
          fun ~level:(x14213 : GLint.t) ->
            fun ~xoffset:(x14214 : GLint.t) ->
              fun ~yoffset:(x14215 : GLint.t) ->
                fun ~zoffset:(x14216 : GLint.t) ->
                  fun ~width:(x14217 : GLsizei.t) ->
                    fun ~height:(x14218 : GLsizei.t) ->
                      fun ~depth:(x14219 : GLsizei.t) ->
                        fun ~format:(x14220 : GLenum.t) ->
                          fun ~imageSize:(x14221 : GLsizei.t) ->
                            fun ~offset:(x14222 : GLintptr.t) ->
                              ignore
                                (Ojs.call (this_to_js Obj.magic x14223)
                                   "compressedTexSubImage3D"
                                   [|(GLenum.t_to_js x14212);(GLint.t_to_js
                                                                x14213);(
                                     GLint.t_to_js x14214);(GLint.t_to_js
                                                              x14215);(
                                     GLint.t_to_js x14216);(GLsizei.t_to_js
                                                              x14217);(
                                     GLsizei.t_to_js x14218);(GLsizei.t_to_js
                                                                x14219);(
                                     GLenum.t_to_js x14220);(GLsizei.t_to_js
                                                               x14221);(
                                     GLintptr.t_to_js x14222)|])
    let (compressedTexSubImage3D' :
      'tags this ->
        target:GLenum.t ->
          level:GLint.t ->
            xoffset:GLint.t ->
              yoffset:GLint.t ->
                zoffset:GLint.t ->
                  width:GLsizei.t ->
                    height:GLsizei.t ->
                      depth:GLsizei.t ->
                        format:GLenum.t ->
                          srcData:ArrayBufferView.t_0 ->
                            ?srcOffset:GLuint.t ->
                              ?srcLengthOverride:GLuint.t -> unit -> unit)
      =
      fun (x14240 : 'tags this) ->
        fun ~target:(x14225 : GLenum.t) ->
          fun ~level:(x14226 : GLint.t) ->
            fun ~xoffset:(x14227 : GLint.t) ->
              fun ~yoffset:(x14228 : GLint.t) ->
                fun ~zoffset:(x14229 : GLint.t) ->
                  fun ~width:(x14230 : GLsizei.t) ->
                    fun ~height:(x14231 : GLsizei.t) ->
                      fun ~depth:(x14232 : GLsizei.t) ->
                        fun ~format:(x14233 : GLenum.t) ->
                          fun ~srcData:(x14234 : ArrayBufferView.t_0) ->
                            fun ?srcOffset:(x14235 : GLuint.t option) ->
                              fun
                                ?srcLengthOverride:(x14236 : GLuint.t option)
                                ->
                                fun () ->
                                  ignore
                                    (let x14242 = this_to_js Obj.magic x14240 in
                                     Ojs.call
                                       (Ojs.get_prop_ascii x14242
                                          "compressedTexSubImage3D") "apply"
                                       [|x14242;((let x14237 =
                                                    Ojs.new_obj
                                                      (Ojs.get_prop_ascii
                                                         Ojs.global "Array")
                                                      [||] in
                                                  ignore
                                                    (Ojs.call x14237 "push"
                                                       [|(GLenum.t_to_js
                                                            x14225)|]);
                                                  ignore
                                                    (Ojs.call x14237 "push"
                                                       [|(GLint.t_to_js
                                                            x14226)|]);
                                                  ignore
                                                    (Ojs.call x14237 "push"
                                                       [|(GLint.t_to_js
                                                            x14227)|]);
                                                  ignore
                                                    (Ojs.call x14237 "push"
                                                       [|(GLint.t_to_js
                                                            x14228)|]);
                                                  ignore
                                                    (Ojs.call x14237 "push"
                                                       [|(GLint.t_to_js
                                                            x14229)|]);
                                                  ignore
                                                    (Ojs.call x14237 "push"
                                                       [|(GLsizei.t_to_js
                                                            x14230)|]);
                                                  ignore
                                                    (Ojs.call x14237 "push"
                                                       [|(GLsizei.t_to_js
                                                            x14231)|]);
                                                  ignore
                                                    (Ojs.call x14237 "push"
                                                       [|(GLsizei.t_to_js
                                                            x14232)|]);
                                                  ignore
                                                    (Ojs.call x14237 "push"
                                                       [|(GLenum.t_to_js
                                                            x14233)|]);
                                                  ignore
                                                    (Ojs.call x14237 "push"
                                                       [|(ArrayBufferView.t_0_to_js
                                                            x14234)|]);
                                                  (match x14235 with
                                                   | Some x14239 ->
                                                       ignore
                                                         (Ojs.call x14237
                                                            "push"
                                                            [|(GLuint.t_to_js
                                                                 x14239)|])
                                                   | None -> ());
                                                  (match x14236 with
                                                   | Some x14238 ->
                                                       ignore
                                                         (Ojs.call x14237
                                                            "push"
                                                            [|(GLuint.t_to_js
                                                                 x14238)|])
                                                   | None -> ());
                                                  x14237))|])
    let (copyBufferSubData :
      'tags this ->
        readTarget:GLenum.t ->
          writeTarget:GLenum.t ->
            readOffset:GLintptr.t ->
              writeOffset:GLintptr.t -> size:GLsizeiptr.t -> unit)
      =
      fun (x14248 : 'tags this) ->
        fun ~readTarget:(x14243 : GLenum.t) ->
          fun ~writeTarget:(x14244 : GLenum.t) ->
            fun ~readOffset:(x14245 : GLintptr.t) ->
              fun ~writeOffset:(x14246 : GLintptr.t) ->
                fun ~size:(x14247 : GLsizeiptr.t) ->
                  ignore
                    (Ojs.call (this_to_js Obj.magic x14248)
                       "copyBufferSubData"
                       [|(GLenum.t_to_js x14243);(GLenum.t_to_js x14244);(
                         GLintptr.t_to_js x14245);(GLintptr.t_to_js x14246);(
                         GLsizeiptr.t_to_js x14247)|])
    let (copyTexSubImage3D :
      'tags this ->
        target:GLenum.t ->
          level:GLint.t ->
            xoffset:GLint.t ->
              yoffset:GLint.t ->
                zoffset:GLint.t ->
                  x:GLint.t ->
                    y:GLint.t -> width:GLsizei.t -> height:GLsizei.t -> unit)
      =
      fun (x14259 : 'tags this) ->
        fun ~target:(x14250 : GLenum.t) ->
          fun ~level:(x14251 : GLint.t) ->
            fun ~xoffset:(x14252 : GLint.t) ->
              fun ~yoffset:(x14253 : GLint.t) ->
                fun ~zoffset:(x14254 : GLint.t) ->
                  fun ~x:(x14255 : GLint.t) ->
                    fun ~y:(x14256 : GLint.t) ->
                      fun ~width:(x14257 : GLsizei.t) ->
                        fun ~height:(x14258 : GLsizei.t) ->
                          ignore
                            (Ojs.call (this_to_js Obj.magic x14259)
                               "copyTexSubImage3D"
                               [|(GLenum.t_to_js x14250);(GLint.t_to_js
                                                            x14251);(
                                 GLint.t_to_js x14252);(GLint.t_to_js x14253);(
                                 GLint.t_to_js x14254);(GLint.t_to_js x14255);(
                                 GLint.t_to_js x14256);(GLsizei.t_to_js
                                                          x14257);(GLsizei.t_to_js
                                                                    x14258)|])
    let (createQuery : 'tags this -> WebGLQuery.t or_null) =
      fun (x14261 : 'tags this) ->
        or_null_of_js WebGLQuery.t_of_js
          (Ojs.call (this_to_js Obj.magic x14261) "createQuery" [||])
    let (createSampler : 'tags this -> WebGLSampler.t or_null) =
      fun (x14264 : 'tags this) ->
        or_null_of_js WebGLSampler.t_of_js
          (Ojs.call (this_to_js Obj.magic x14264) "createSampler" [||])
    let (createTransformFeedback :
      'tags this -> WebGLTransformFeedback.t or_null) =
      fun (x14267 : 'tags this) ->
        or_null_of_js WebGLTransformFeedback.t_of_js
          (Ojs.call (this_to_js Obj.magic x14267) "createTransformFeedback"
             [||])
    let (createVertexArray : 'tags this -> WebGLVertexArrayObject.t or_null)
      =
      fun (x14270 : 'tags this) ->
        or_null_of_js WebGLVertexArrayObject.t_of_js
          (Ojs.call (this_to_js Obj.magic x14270) "createVertexArray" [||])
    let (deleteQuery : 'tags this -> query:WebGLQuery.t or_null -> unit) =
      fun (x14275 : 'tags this) ->
        fun ~query:(x14273 : WebGLQuery.t or_null) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x14275) "deleteQuery"
               [|(or_null_to_js WebGLQuery.t_to_js x14273)|])
    let (deleteSampler :
      'tags this -> sampler:WebGLSampler.t or_null -> unit) =
      fun (x14279 : 'tags this) ->
        fun ~sampler:(x14277 : WebGLSampler.t or_null) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x14279) "deleteSampler"
               [|(or_null_to_js WebGLSampler.t_to_js x14277)|])
    let (deleteSync : 'tags this -> sync:WebGLSync.t or_null -> unit) =
      fun (x14283 : 'tags this) ->
        fun ~sync:(x14281 : WebGLSync.t or_null) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x14283) "deleteSync"
               [|(or_null_to_js WebGLSync.t_to_js x14281)|])
    let (deleteTransformFeedback :
      'tags this -> tf:WebGLTransformFeedback.t or_null -> unit) =
      fun (x14287 : 'tags this) ->
        fun ~tf:(x14285 : WebGLTransformFeedback.t or_null) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x14287) "deleteTransformFeedback"
               [|(or_null_to_js WebGLTransformFeedback.t_to_js x14285)|])
    let (deleteVertexArray :
      'tags this -> vertexArray:WebGLVertexArrayObject.t or_null -> unit) =
      fun (x14291 : 'tags this) ->
        fun ~vertexArray:(x14289 : WebGLVertexArrayObject.t or_null) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x14291) "deleteVertexArray"
               [|(or_null_to_js WebGLVertexArrayObject.t_to_js x14289)|])
    let (drawArraysInstanced :
      'tags this ->
        mode:GLenum.t ->
          first:GLint.t -> count:GLsizei.t -> instanceCount:GLsizei.t -> unit)
      =
      fun (x14297 : 'tags this) ->
        fun ~mode:(x14293 : GLenum.t) ->
          fun ~first:(x14294 : GLint.t) ->
            fun ~count:(x14295 : GLsizei.t) ->
              fun ~instanceCount:(x14296 : GLsizei.t) ->
                ignore
                  (Ojs.call (this_to_js Obj.magic x14297)
                     "drawArraysInstanced"
                     [|(GLenum.t_to_js x14293);(GLint.t_to_js x14294);(
                       GLsizei.t_to_js x14295);(GLsizei.t_to_js x14296)|])
    let (drawBuffers' : 'tags this -> buffers:GLenum.t list -> unit) =
      fun (x14301 : 'tags this) ->
        fun ~buffers:(x14299 : GLenum.t list) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x14301) "drawBuffers"
               [|(Ojs.list_to_js GLenum.t_to_js x14299)|])
    let (drawElementsInstanced :
      'tags this ->
        mode:GLenum.t ->
          count:GLsizei.t ->
            type_:GLenum.t ->
              offset:GLintptr.t -> instanceCount:GLsizei.t -> unit)
      =
      fun (x14308 : 'tags this) ->
        fun ~mode:(x14303 : GLenum.t) ->
          fun ~count:(x14304 : GLsizei.t) ->
            fun ~type_:(x14305 : GLenum.t) ->
              fun ~offset:(x14306 : GLintptr.t) ->
                fun ~instanceCount:(x14307 : GLsizei.t) ->
                  ignore
                    (Ojs.call (this_to_js Obj.magic x14308)
                       "drawElementsInstanced"
                       [|(GLenum.t_to_js x14303);(GLsizei.t_to_js x14304);(
                         GLenum.t_to_js x14305);(GLintptr.t_to_js x14306);(
                         GLsizei.t_to_js x14307)|])
    let (drawRangeElements :
      'tags this ->
        mode:GLenum.t ->
          start:GLuint.t ->
            end_:GLuint.t ->
              count:GLsizei.t -> type_:GLenum.t -> offset:GLintptr.t -> unit)
      =
      fun (x14316 : 'tags this) ->
        fun ~mode:(x14310 : GLenum.t) ->
          fun ~start:(x14311 : GLuint.t) ->
            fun ~end_:(x14312 : GLuint.t) ->
              fun ~count:(x14313 : GLsizei.t) ->
                fun ~type_:(x14314 : GLenum.t) ->
                  fun ~offset:(x14315 : GLintptr.t) ->
                    ignore
                      (Ojs.call (this_to_js Obj.magic x14316)
                         "drawRangeElements"
                         [|(GLenum.t_to_js x14310);(GLuint.t_to_js x14311);(
                           GLuint.t_to_js x14312);(GLsizei.t_to_js x14313);(
                           GLenum.t_to_js x14314);(GLintptr.t_to_js x14315)|])
    let (endQuery : 'tags this -> target:GLenum.t -> unit) =
      fun (x14319 : 'tags this) ->
        fun ~target:(x14318 : GLenum.t) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x14319) "endQuery"
               [|(GLenum.t_to_js x14318)|])
    let (endTransformFeedback : 'tags this -> unit) =
      fun (x14321 : 'tags this) ->
        ignore
          (Ojs.call (this_to_js Obj.magic x14321) "endTransformFeedback" [||])
    let (fenceSync :
      'tags this ->
        condition:GLenum.t -> flags:GLbitfield.t -> WebGLSync.t or_null)
      =
      fun (x14325 : 'tags this) ->
        fun ~condition:(x14323 : GLenum.t) ->
          fun ~flags:(x14324 : GLbitfield.t) ->
            or_null_of_js WebGLSync.t_of_js
              (Ojs.call (this_to_js Obj.magic x14325) "fenceSync"
                 [|(GLenum.t_to_js x14323);(GLbitfield.t_to_js x14324)|])
    let (framebufferTextureLayer :
      'tags this ->
        target:GLenum.t ->
          attachment:GLenum.t ->
            texture:WebGLTexture.t or_null ->
              level:GLint.t -> layer:GLint.t -> unit)
      =
      fun (x14334 : 'tags this) ->
        fun ~target:(x14328 : GLenum.t) ->
          fun ~attachment:(x14329 : GLenum.t) ->
            fun ~texture:(x14330 : WebGLTexture.t or_null) ->
              fun ~level:(x14332 : GLint.t) ->
                fun ~layer:(x14333 : GLint.t) ->
                  ignore
                    (Ojs.call (this_to_js Obj.magic x14334)
                       "framebufferTextureLayer"
                       [|(GLenum.t_to_js x14328);(GLenum.t_to_js x14329);(
                         or_null_to_js WebGLTexture.t_to_js x14330);(
                         GLint.t_to_js x14332);(GLint.t_to_js x14333)|])
    let (getActiveUniformBlockName :
      'tags this ->
        program:WebGLProgram.t ->
          uniformBlockIndex:GLuint.t -> string or_null)
      =
      fun (x14338 : 'tags this) ->
        fun ~program:(x14336 : WebGLProgram.t) ->
          fun ~uniformBlockIndex:(x14337 : GLuint.t) ->
            or_null_of_js Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x14338)
                 "getActiveUniformBlockName"
                 [|(WebGLProgram.t_to_js x14336);(GLuint.t_to_js x14337)|])
    let (getActiveUniformBlockParameter :
      'tags this ->
        program:WebGLProgram.t ->
          uniformBlockIndex:GLuint.t -> pname:GLenum.t -> any)
      =
      fun (x14344 : 'tags this) ->
        fun ~program:(x14341 : WebGLProgram.t) ->
          fun ~uniformBlockIndex:(x14342 : GLuint.t) ->
            fun ~pname:(x14343 : GLenum.t) ->
              any_of_js
                (Ojs.call (this_to_js Obj.magic x14344)
                   "getActiveUniformBlockParameter"
                   [|(WebGLProgram.t_to_js x14341);(GLuint.t_to_js x14342);(
                     GLenum.t_to_js x14343)|])
    let (getActiveUniforms' :
      'tags this ->
        program:WebGLProgram.t ->
          uniformIndices:GLuint.t list -> pname:GLenum.t -> any)
      =
      fun (x14350 : 'tags this) ->
        fun ~program:(x14346 : WebGLProgram.t) ->
          fun ~uniformIndices:(x14347 : GLuint.t list) ->
            fun ~pname:(x14349 : GLenum.t) ->
              any_of_js
                (Ojs.call (this_to_js Obj.magic x14350) "getActiveUniforms"
                   [|(WebGLProgram.t_to_js x14346);(Ojs.list_to_js
                                                      GLuint.t_to_js x14347);(
                     GLenum.t_to_js x14349)|])
    let (getBufferSubData :
      'tags this ->
        target:GLenum.t ->
          srcByteOffset:GLintptr.t ->
            dstBuffer:ArrayBufferView.t_0 ->
              ?dstOffset:GLuint.t -> ?length:GLuint.t -> unit -> unit)
      =
      fun (x14360 : 'tags this) ->
        fun ~target:(x14352 : GLenum.t) ->
          fun ~srcByteOffset:(x14353 : GLintptr.t) ->
            fun ~dstBuffer:(x14354 : ArrayBufferView.t_0) ->
              fun ?dstOffset:(x14355 : GLuint.t option) ->
                fun ?length:(x14356 : GLuint.t option) ->
                  fun () ->
                    ignore
                      (let x14362 = this_to_js Obj.magic x14360 in
                       Ojs.call
                         (Ojs.get_prop_ascii x14362 "getBufferSubData")
                         "apply"
                         [|x14362;((let x14357 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    ignore
                                      (Ojs.call x14357 "push"
                                         [|(GLenum.t_to_js x14352)|]);
                                    ignore
                                      (Ojs.call x14357 "push"
                                         [|(GLintptr.t_to_js x14353)|]);
                                    ignore
                                      (Ojs.call x14357 "push"
                                         [|(ArrayBufferView.t_0_to_js x14354)|]);
                                    (match x14355 with
                                     | Some x14359 ->
                                         ignore
                                           (Ojs.call x14357 "push"
                                              [|(GLuint.t_to_js x14359)|])
                                     | None -> ());
                                    (match x14356 with
                                     | Some x14358 ->
                                         ignore
                                           (Ojs.call x14357 "push"
                                              [|(GLuint.t_to_js x14358)|])
                                     | None -> ());
                                    x14357))|])
    let (getFragDataLocation :
      'tags this -> program:WebGLProgram.t -> name:string -> GLint.t) =
      fun (x14365 : 'tags this) ->
        fun ~program:(x14363 : WebGLProgram.t) ->
          fun ~name:(x14364 : string) ->
            GLint.t_of_js
              (Ojs.call (this_to_js Obj.magic x14365) "getFragDataLocation"
                 [|(WebGLProgram.t_to_js x14363);(Ojs.string_to_js x14364)|])
    let (getIndexedParameter :
      'tags this -> target:GLenum.t -> index:GLuint.t -> any) =
      fun (x14369 : 'tags this) ->
        fun ~target:(x14367 : GLenum.t) ->
          fun ~index:(x14368 : GLuint.t) ->
            any_of_js
              (Ojs.call (this_to_js Obj.magic x14369) "getIndexedParameter"
                 [|(GLenum.t_to_js x14367);(GLuint.t_to_js x14368)|])
    let (getInternalformatParameter :
      'tags this ->
        target:GLenum.t -> internalformat:GLenum.t -> pname:GLenum.t -> any)
      =
      fun (x14374 : 'tags this) ->
        fun ~target:(x14371 : GLenum.t) ->
          fun ~internalformat:(x14372 : GLenum.t) ->
            fun ~pname:(x14373 : GLenum.t) ->
              any_of_js
                (Ojs.call (this_to_js Obj.magic x14374)
                   "getInternalformatParameter"
                   [|(GLenum.t_to_js x14371);(GLenum.t_to_js x14372);(
                     GLenum.t_to_js x14373)|])
    let (getQuery :
      'tags this -> target:GLenum.t -> pname:GLenum.t -> WebGLQuery.t or_null)
      =
      fun (x14378 : 'tags this) ->
        fun ~target:(x14376 : GLenum.t) ->
          fun ~pname:(x14377 : GLenum.t) ->
            or_null_of_js WebGLQuery.t_of_js
              (Ojs.call (this_to_js Obj.magic x14378) "getQuery"
                 [|(GLenum.t_to_js x14376);(GLenum.t_to_js x14377)|])
    let (getQueryParameter :
      'tags this -> query:WebGLQuery.t -> pname:GLenum.t -> any) =
      fun (x14383 : 'tags this) ->
        fun ~query:(x14381 : WebGLQuery.t) ->
          fun ~pname:(x14382 : GLenum.t) ->
            any_of_js
              (Ojs.call (this_to_js Obj.magic x14383) "getQueryParameter"
                 [|(WebGLQuery.t_to_js x14381);(GLenum.t_to_js x14382)|])
    let (getSamplerParameter :
      'tags this -> sampler:WebGLSampler.t -> pname:GLenum.t -> any) =
      fun (x14387 : 'tags this) ->
        fun ~sampler:(x14385 : WebGLSampler.t) ->
          fun ~pname:(x14386 : GLenum.t) ->
            any_of_js
              (Ojs.call (this_to_js Obj.magic x14387) "getSamplerParameter"
                 [|(WebGLSampler.t_to_js x14385);(GLenum.t_to_js x14386)|])
    let (getSyncParameter :
      'tags this -> sync:WebGLSync.t -> pname:GLenum.t -> any) =
      fun (x14391 : 'tags this) ->
        fun ~sync:(x14389 : WebGLSync.t) ->
          fun ~pname:(x14390 : GLenum.t) ->
            any_of_js
              (Ojs.call (this_to_js Obj.magic x14391) "getSyncParameter"
                 [|(WebGLSync.t_to_js x14389);(GLenum.t_to_js x14390)|])
    let (getTransformFeedbackVarying :
      'tags this ->
        program:WebGLProgram.t -> index:GLuint.t -> WebGLActiveInfo.t or_null)
      =
      fun (x14395 : 'tags this) ->
        fun ~program:(x14393 : WebGLProgram.t) ->
          fun ~index:(x14394 : GLuint.t) ->
            or_null_of_js WebGLActiveInfo.t_of_js
              (Ojs.call (this_to_js Obj.magic x14395)
                 "getTransformFeedbackVarying"
                 [|(WebGLProgram.t_to_js x14393);(GLuint.t_to_js x14394)|])
    let (getUniformBlockIndex :
      'tags this ->
        program:WebGLProgram.t -> uniformBlockName:string -> GLuint.t)
      =
      fun (x14400 : 'tags this) ->
        fun ~program:(x14398 : WebGLProgram.t) ->
          fun ~uniformBlockName:(x14399 : string) ->
            GLuint.t_of_js
              (Ojs.call (this_to_js Obj.magic x14400) "getUniformBlockIndex"
                 [|(WebGLProgram.t_to_js x14398);(Ojs.string_to_js x14399)|])
    let (getUniformIndices' :
      'tags this ->
        program:WebGLProgram.t ->
          uniformNames:string list -> GLuint.t list or_null)
      =
      fun (x14405 : 'tags this) ->
        fun ~program:(x14402 : WebGLProgram.t) ->
          fun ~uniformNames:(x14403 : string list) ->
            or_null_of_js
              (fun (x14407 : Ojs.t) -> Ojs.list_of_js GLuint.t_of_js x14407)
              (Ojs.call (this_to_js Obj.magic x14405) "getUniformIndices"
                 [|(WebGLProgram.t_to_js x14402);(Ojs.list_to_js
                                                    Ojs.string_to_js x14403)|])
    let (invalidateFramebuffer' :
      'tags this -> target:GLenum.t -> attachments:GLenum.t list -> unit) =
      fun (x14412 : 'tags this) ->
        fun ~target:(x14409 : GLenum.t) ->
          fun ~attachments:(x14410 : GLenum.t list) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x14412) "invalidateFramebuffer"
                 [|(GLenum.t_to_js x14409);(Ojs.list_to_js GLenum.t_to_js
                                              x14410)|])
    let (invalidateSubFramebuffer' :
      'tags this ->
        target:GLenum.t ->
          attachments:GLenum.t list ->
            x:GLint.t ->
              y:GLint.t -> width:GLsizei.t -> height:GLsizei.t -> unit)
      =
      fun (x14421 : 'tags this) ->
        fun ~target:(x14414 : GLenum.t) ->
          fun ~attachments:(x14415 : GLenum.t list) ->
            fun ~x:(x14417 : GLint.t) ->
              fun ~y:(x14418 : GLint.t) ->
                fun ~width:(x14419 : GLsizei.t) ->
                  fun ~height:(x14420 : GLsizei.t) ->
                    ignore
                      (Ojs.call (this_to_js Obj.magic x14421)
                         "invalidateSubFramebuffer"
                         [|(GLenum.t_to_js x14414);(Ojs.list_to_js
                                                      GLenum.t_to_js x14415);(
                           GLint.t_to_js x14417);(GLint.t_to_js x14418);(
                           GLsizei.t_to_js x14419);(GLsizei.t_to_js x14420)|])
    let (isQuery : 'tags this -> query:WebGLQuery.t or_null -> GLboolean.t) =
      fun (x14425 : 'tags this) ->
        fun ~query:(x14423 : WebGLQuery.t or_null) ->
          GLboolean.t_of_js
            (Ojs.call (this_to_js Obj.magic x14425) "isQuery"
               [|(or_null_to_js WebGLQuery.t_to_js x14423)|])
    let (isSampler :
      'tags this -> sampler:WebGLSampler.t or_null -> GLboolean.t) =
      fun (x14429 : 'tags this) ->
        fun ~sampler:(x14427 : WebGLSampler.t or_null) ->
          GLboolean.t_of_js
            (Ojs.call (this_to_js Obj.magic x14429) "isSampler"
               [|(or_null_to_js WebGLSampler.t_to_js x14427)|])
    let (isSync : 'tags this -> sync:WebGLSync.t or_null -> GLboolean.t) =
      fun (x14433 : 'tags this) ->
        fun ~sync:(x14431 : WebGLSync.t or_null) ->
          GLboolean.t_of_js
            (Ojs.call (this_to_js Obj.magic x14433) "isSync"
               [|(or_null_to_js WebGLSync.t_to_js x14431)|])
    let (isTransformFeedback :
      'tags this -> tf:WebGLTransformFeedback.t or_null -> GLboolean.t) =
      fun (x14437 : 'tags this) ->
        fun ~tf:(x14435 : WebGLTransformFeedback.t or_null) ->
          GLboolean.t_of_js
            (Ojs.call (this_to_js Obj.magic x14437) "isTransformFeedback"
               [|(or_null_to_js WebGLTransformFeedback.t_to_js x14435)|])
    let (isVertexArray :
      'tags this ->
        vertexArray:WebGLVertexArrayObject.t or_null -> GLboolean.t)
      =
      fun (x14441 : 'tags this) ->
        fun ~vertexArray:(x14439 : WebGLVertexArrayObject.t or_null) ->
          GLboolean.t_of_js
            (Ojs.call (this_to_js Obj.magic x14441) "isVertexArray"
               [|(or_null_to_js WebGLVertexArrayObject.t_to_js x14439)|])
    let (pauseTransformFeedback : 'tags this -> unit) =
      fun (x14443 : 'tags this) ->
        ignore
          (Ojs.call (this_to_js Obj.magic x14443) "pauseTransformFeedback"
             [||])
    let (readBuffer : 'tags this -> src:GLenum.t -> unit) =
      fun (x14446 : 'tags this) ->
        fun ~src:(x14445 : GLenum.t) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x14446) "readBuffer"
               [|(GLenum.t_to_js x14445)|])
    let (renderbufferStorageMultisample :
      'tags this ->
        target:GLenum.t ->
          samples:GLsizei.t ->
            internalformat:GLenum.t ->
              width:GLsizei.t -> height:GLsizei.t -> unit)
      =
      fun (x14453 : 'tags this) ->
        fun ~target:(x14448 : GLenum.t) ->
          fun ~samples:(x14449 : GLsizei.t) ->
            fun ~internalformat:(x14450 : GLenum.t) ->
              fun ~width:(x14451 : GLsizei.t) ->
                fun ~height:(x14452 : GLsizei.t) ->
                  ignore
                    (Ojs.call (this_to_js Obj.magic x14453)
                       "renderbufferStorageMultisample"
                       [|(GLenum.t_to_js x14448);(GLsizei.t_to_js x14449);(
                         GLenum.t_to_js x14450);(GLsizei.t_to_js x14451);(
                         GLsizei.t_to_js x14452)|])
    let (resumeTransformFeedback : 'tags this -> unit) =
      fun (x14455 : 'tags this) ->
        ignore
          (Ojs.call (this_to_js Obj.magic x14455) "resumeTransformFeedback"
             [||])
    let (samplerParameterf :
      'tags this ->
        sampler:WebGLSampler.t -> pname:GLenum.t -> param:GLfloat.t -> unit)
      =
      fun (x14460 : 'tags this) ->
        fun ~sampler:(x14457 : WebGLSampler.t) ->
          fun ~pname:(x14458 : GLenum.t) ->
            fun ~param:(x14459 : GLfloat.t) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x14460) "samplerParameterf"
                   [|(WebGLSampler.t_to_js x14457);(GLenum.t_to_js x14458);(
                     GLfloat.t_to_js x14459)|])
    let (samplerParameteri :
      'tags this ->
        sampler:WebGLSampler.t -> pname:GLenum.t -> param:GLint.t -> unit)
      =
      fun (x14465 : 'tags this) ->
        fun ~sampler:(x14462 : WebGLSampler.t) ->
          fun ~pname:(x14463 : GLenum.t) ->
            fun ~param:(x14464 : GLint.t) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x14465) "samplerParameteri"
                   [|(WebGLSampler.t_to_js x14462);(GLenum.t_to_js x14463);(
                     GLint.t_to_js x14464)|])
    let (texImage3D :
      'tags this ->
        target:GLenum.t ->
          level:GLint.t ->
            internalformat:GLint.t ->
              width:GLsizei.t ->
                height:GLsizei.t ->
                  depth:GLsizei.t ->
                    border:GLint.t ->
                      format:GLenum.t ->
                        type_:GLenum.t -> pboOffset:GLintptr.t -> unit)
      =
      fun (x14477 : 'tags this) ->
        fun ~target:(x14467 : GLenum.t) ->
          fun ~level:(x14468 : GLint.t) ->
            fun ~internalformat:(x14469 : GLint.t) ->
              fun ~width:(x14470 : GLsizei.t) ->
                fun ~height:(x14471 : GLsizei.t) ->
                  fun ~depth:(x14472 : GLsizei.t) ->
                    fun ~border:(x14473 : GLint.t) ->
                      fun ~format:(x14474 : GLenum.t) ->
                        fun ~type_:(x14475 : GLenum.t) ->
                          fun ~pboOffset:(x14476 : GLintptr.t) ->
                            ignore
                              (Ojs.call (this_to_js Obj.magic x14477)
                                 "texImage3D"
                                 [|(GLenum.t_to_js x14467);(GLint.t_to_js
                                                              x14468);(
                                   GLint.t_to_js x14469);(GLsizei.t_to_js
                                                            x14470);(
                                   GLsizei.t_to_js x14471);(GLsizei.t_to_js
                                                              x14472);(
                                   GLint.t_to_js x14473);(GLenum.t_to_js
                                                            x14474);(
                                   GLenum.t_to_js x14475);(GLintptr.t_to_js
                                                             x14476)|])
    let (texImage3D' :
      'tags this ->
        target:GLenum.t ->
          level:GLint.t ->
            internalformat:GLint.t ->
              width:GLsizei.t ->
                height:GLsizei.t ->
                  depth:GLsizei.t ->
                    border:GLint.t ->
                      format:GLenum.t ->
                        type_:GLenum.t -> source:TexImageSource.t -> unit)
      =
      fun (x14489 : 'tags this) ->
        fun ~target:(x14479 : GLenum.t) ->
          fun ~level:(x14480 : GLint.t) ->
            fun ~internalformat:(x14481 : GLint.t) ->
              fun ~width:(x14482 : GLsizei.t) ->
                fun ~height:(x14483 : GLsizei.t) ->
                  fun ~depth:(x14484 : GLsizei.t) ->
                    fun ~border:(x14485 : GLint.t) ->
                      fun ~format:(x14486 : GLenum.t) ->
                        fun ~type_:(x14487 : GLenum.t) ->
                          fun ~source:(x14488 : TexImageSource.t) ->
                            ignore
                              (Ojs.call (this_to_js Obj.magic x14489)
                                 "texImage3D"
                                 [|(GLenum.t_to_js x14479);(GLint.t_to_js
                                                              x14480);(
                                   GLint.t_to_js x14481);(GLsizei.t_to_js
                                                            x14482);(
                                   GLsizei.t_to_js x14483);(GLsizei.t_to_js
                                                              x14484);(
                                   GLint.t_to_js x14485);(GLenum.t_to_js
                                                            x14486);(
                                   GLenum.t_to_js x14487);(TexImageSource.t_to_js
                                                             x14488)|])
    let (texImage3D'' :
      'tags this ->
        target:GLenum.t ->
          level:GLint.t ->
            internalformat:GLint.t ->
              width:GLsizei.t ->
                height:GLsizei.t ->
                  depth:GLsizei.t ->
                    border:GLint.t ->
                      format:GLenum.t ->
                        type_:GLenum.t ->
                          srcData:ArrayBufferView.t_0 or_null -> unit)
      =
      fun (x14502 : 'tags this) ->
        fun ~target:(x14491 : GLenum.t) ->
          fun ~level:(x14492 : GLint.t) ->
            fun ~internalformat:(x14493 : GLint.t) ->
              fun ~width:(x14494 : GLsizei.t) ->
                fun ~height:(x14495 : GLsizei.t) ->
                  fun ~depth:(x14496 : GLsizei.t) ->
                    fun ~border:(x14497 : GLint.t) ->
                      fun ~format:(x14498 : GLenum.t) ->
                        fun ~type_:(x14499 : GLenum.t) ->
                          fun ~srcData:(x14500 : ArrayBufferView.t_0 or_null)
                            ->
                            ignore
                              (Ojs.call (this_to_js Obj.magic x14502)
                                 "texImage3D"
                                 [|(GLenum.t_to_js x14491);(GLint.t_to_js
                                                              x14492);(
                                   GLint.t_to_js x14493);(GLsizei.t_to_js
                                                            x14494);(
                                   GLsizei.t_to_js x14495);(GLsizei.t_to_js
                                                              x14496);(
                                   GLint.t_to_js x14497);(GLenum.t_to_js
                                                            x14498);(
                                   GLenum.t_to_js x14499);(or_null_to_js
                                                             ArrayBufferView.t_0_to_js
                                                             x14500)|])
    let (texImage3D''' :
      'tags this ->
        target:GLenum.t ->
          level:GLint.t ->
            internalformat:GLint.t ->
              width:GLsizei.t ->
                height:GLsizei.t ->
                  depth:GLsizei.t ->
                    border:GLint.t ->
                      format:GLenum.t ->
                        type_:GLenum.t ->
                          srcData:ArrayBufferView.t_0 ->
                            srcOffset:GLuint.t -> unit)
      =
      fun (x14515 : 'tags this) ->
        fun ~target:(x14504 : GLenum.t) ->
          fun ~level:(x14505 : GLint.t) ->
            fun ~internalformat:(x14506 : GLint.t) ->
              fun ~width:(x14507 : GLsizei.t) ->
                fun ~height:(x14508 : GLsizei.t) ->
                  fun ~depth:(x14509 : GLsizei.t) ->
                    fun ~border:(x14510 : GLint.t) ->
                      fun ~format:(x14511 : GLenum.t) ->
                        fun ~type_:(x14512 : GLenum.t) ->
                          fun ~srcData:(x14513 : ArrayBufferView.t_0) ->
                            fun ~srcOffset:(x14514 : GLuint.t) ->
                              ignore
                                (Ojs.call (this_to_js Obj.magic x14515)
                                   "texImage3D"
                                   [|(GLenum.t_to_js x14504);(GLint.t_to_js
                                                                x14505);(
                                     GLint.t_to_js x14506);(GLsizei.t_to_js
                                                              x14507);(
                                     GLsizei.t_to_js x14508);(GLsizei.t_to_js
                                                                x14509);(
                                     GLint.t_to_js x14510);(GLenum.t_to_js
                                                              x14511);(
                                     GLenum.t_to_js x14512);(ArrayBufferView.t_0_to_js
                                                               x14513);(
                                     GLuint.t_to_js x14514)|])
    let (texStorage2D :
      'tags this ->
        target:GLenum.t ->
          levels:GLsizei.t ->
            internalformat:GLenum.t ->
              width:GLsizei.t -> height:GLsizei.t -> unit)
      =
      fun (x14522 : 'tags this) ->
        fun ~target:(x14517 : GLenum.t) ->
          fun ~levels:(x14518 : GLsizei.t) ->
            fun ~internalformat:(x14519 : GLenum.t) ->
              fun ~width:(x14520 : GLsizei.t) ->
                fun ~height:(x14521 : GLsizei.t) ->
                  ignore
                    (Ojs.call (this_to_js Obj.magic x14522) "texStorage2D"
                       [|(GLenum.t_to_js x14517);(GLsizei.t_to_js x14518);(
                         GLenum.t_to_js x14519);(GLsizei.t_to_js x14520);(
                         GLsizei.t_to_js x14521)|])
    let (texStorage3D :
      'tags this ->
        target:GLenum.t ->
          levels:GLsizei.t ->
            internalformat:GLenum.t ->
              width:GLsizei.t -> height:GLsizei.t -> depth:GLsizei.t -> unit)
      =
      fun (x14530 : 'tags this) ->
        fun ~target:(x14524 : GLenum.t) ->
          fun ~levels:(x14525 : GLsizei.t) ->
            fun ~internalformat:(x14526 : GLenum.t) ->
              fun ~width:(x14527 : GLsizei.t) ->
                fun ~height:(x14528 : GLsizei.t) ->
                  fun ~depth:(x14529 : GLsizei.t) ->
                    ignore
                      (Ojs.call (this_to_js Obj.magic x14530) "texStorage3D"
                         [|(GLenum.t_to_js x14524);(GLsizei.t_to_js x14525);(
                           GLenum.t_to_js x14526);(GLsizei.t_to_js x14527);(
                           GLsizei.t_to_js x14528);(GLsizei.t_to_js x14529)|])
    let (texSubImage3D :
      'tags this ->
        target:GLenum.t ->
          level:GLint.t ->
            xoffset:GLint.t ->
              yoffset:GLint.t ->
                zoffset:GLint.t ->
                  width:GLsizei.t ->
                    height:GLsizei.t ->
                      depth:GLsizei.t ->
                        format:GLenum.t ->
                          type_:GLenum.t -> pboOffset:GLintptr.t -> unit)
      =
      fun (x14543 : 'tags this) ->
        fun ~target:(x14532 : GLenum.t) ->
          fun ~level:(x14533 : GLint.t) ->
            fun ~xoffset:(x14534 : GLint.t) ->
              fun ~yoffset:(x14535 : GLint.t) ->
                fun ~zoffset:(x14536 : GLint.t) ->
                  fun ~width:(x14537 : GLsizei.t) ->
                    fun ~height:(x14538 : GLsizei.t) ->
                      fun ~depth:(x14539 : GLsizei.t) ->
                        fun ~format:(x14540 : GLenum.t) ->
                          fun ~type_:(x14541 : GLenum.t) ->
                            fun ~pboOffset:(x14542 : GLintptr.t) ->
                              ignore
                                (Ojs.call (this_to_js Obj.magic x14543)
                                   "texSubImage3D"
                                   [|(GLenum.t_to_js x14532);(GLint.t_to_js
                                                                x14533);(
                                     GLint.t_to_js x14534);(GLint.t_to_js
                                                              x14535);(
                                     GLint.t_to_js x14536);(GLsizei.t_to_js
                                                              x14537);(
                                     GLsizei.t_to_js x14538);(GLsizei.t_to_js
                                                                x14539);(
                                     GLenum.t_to_js x14540);(GLenum.t_to_js
                                                               x14541);(
                                     GLintptr.t_to_js x14542)|])
    let (texSubImage3D' :
      'tags this ->
        target:GLenum.t ->
          level:GLint.t ->
            xoffset:GLint.t ->
              yoffset:GLint.t ->
                zoffset:GLint.t ->
                  width:GLsizei.t ->
                    height:GLsizei.t ->
                      depth:GLsizei.t ->
                        format:GLenum.t ->
                          type_:GLenum.t -> source:TexImageSource.t -> unit)
      =
      fun (x14556 : 'tags this) ->
        fun ~target:(x14545 : GLenum.t) ->
          fun ~level:(x14546 : GLint.t) ->
            fun ~xoffset:(x14547 : GLint.t) ->
              fun ~yoffset:(x14548 : GLint.t) ->
                fun ~zoffset:(x14549 : GLint.t) ->
                  fun ~width:(x14550 : GLsizei.t) ->
                    fun ~height:(x14551 : GLsizei.t) ->
                      fun ~depth:(x14552 : GLsizei.t) ->
                        fun ~format:(x14553 : GLenum.t) ->
                          fun ~type_:(x14554 : GLenum.t) ->
                            fun ~source:(x14555 : TexImageSource.t) ->
                              ignore
                                (Ojs.call (this_to_js Obj.magic x14556)
                                   "texSubImage3D"
                                   [|(GLenum.t_to_js x14545);(GLint.t_to_js
                                                                x14546);(
                                     GLint.t_to_js x14547);(GLint.t_to_js
                                                              x14548);(
                                     GLint.t_to_js x14549);(GLsizei.t_to_js
                                                              x14550);(
                                     GLsizei.t_to_js x14551);(GLsizei.t_to_js
                                                                x14552);(
                                     GLenum.t_to_js x14553);(GLenum.t_to_js
                                                               x14554);(
                                     TexImageSource.t_to_js x14555)|])
    let (texSubImage3D'' :
      'tags this ->
        target:GLenum.t ->
          level:GLint.t ->
            xoffset:GLint.t ->
              yoffset:GLint.t ->
                zoffset:GLint.t ->
                  width:GLsizei.t ->
                    height:GLsizei.t ->
                      depth:GLsizei.t ->
                        format:GLenum.t ->
                          type_:GLenum.t ->
                            srcData:ArrayBufferView.t_0 or_null ->
                              ?srcOffset:GLuint.t -> unit -> unit)
      =
      fun (x14573 : 'tags this) ->
        fun ~target:(x14558 : GLenum.t) ->
          fun ~level:(x14559 : GLint.t) ->
            fun ~xoffset:(x14560 : GLint.t) ->
              fun ~yoffset:(x14561 : GLint.t) ->
                fun ~zoffset:(x14562 : GLint.t) ->
                  fun ~width:(x14563 : GLsizei.t) ->
                    fun ~height:(x14564 : GLsizei.t) ->
                      fun ~depth:(x14565 : GLsizei.t) ->
                        fun ~format:(x14566 : GLenum.t) ->
                          fun ~type_:(x14567 : GLenum.t) ->
                            fun
                              ~srcData:(x14568 : ArrayBufferView.t_0 or_null)
                              ->
                              fun ?srcOffset:(x14569 : GLuint.t option) ->
                                fun () ->
                                  ignore
                                    (let x14575 = this_to_js Obj.magic x14573 in
                                     Ojs.call
                                       (Ojs.get_prop_ascii x14575
                                          "texSubImage3D") "apply"
                                       [|x14575;((let x14570 =
                                                    Ojs.new_obj
                                                      (Ojs.get_prop_ascii
                                                         Ojs.global "Array")
                                                      [||] in
                                                  ignore
                                                    (Ojs.call x14570 "push"
                                                       [|(GLenum.t_to_js
                                                            x14558)|]);
                                                  ignore
                                                    (Ojs.call x14570 "push"
                                                       [|(GLint.t_to_js
                                                            x14559)|]);
                                                  ignore
                                                    (Ojs.call x14570 "push"
                                                       [|(GLint.t_to_js
                                                            x14560)|]);
                                                  ignore
                                                    (Ojs.call x14570 "push"
                                                       [|(GLint.t_to_js
                                                            x14561)|]);
                                                  ignore
                                                    (Ojs.call x14570 "push"
                                                       [|(GLint.t_to_js
                                                            x14562)|]);
                                                  ignore
                                                    (Ojs.call x14570 "push"
                                                       [|(GLsizei.t_to_js
                                                            x14563)|]);
                                                  ignore
                                                    (Ojs.call x14570 "push"
                                                       [|(GLsizei.t_to_js
                                                            x14564)|]);
                                                  ignore
                                                    (Ojs.call x14570 "push"
                                                       [|(GLsizei.t_to_js
                                                            x14565)|]);
                                                  ignore
                                                    (Ojs.call x14570 "push"
                                                       [|(GLenum.t_to_js
                                                            x14566)|]);
                                                  ignore
                                                    (Ojs.call x14570 "push"
                                                       [|(GLenum.t_to_js
                                                            x14567)|]);
                                                  ignore
                                                    (Ojs.call x14570 "push"
                                                       [|(or_null_to_js
                                                            ArrayBufferView.t_0_to_js
                                                            x14568)|]);
                                                  (match x14569 with
                                                   | Some x14571 ->
                                                       ignore
                                                         (Ojs.call x14570
                                                            "push"
                                                            [|(GLuint.t_to_js
                                                                 x14571)|])
                                                   | None -> ());
                                                  x14570))|])
    let (transformFeedbackVaryings' :
      'tags this ->
        program:WebGLProgram.t ->
          varyings:string list -> bufferMode:GLenum.t -> unit)
      =
      fun (x14580 : 'tags this) ->
        fun ~program:(x14576 : WebGLProgram.t) ->
          fun ~varyings:(x14577 : string list) ->
            fun ~bufferMode:(x14579 : GLenum.t) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x14580)
                   "transformFeedbackVaryings"
                   [|(WebGLProgram.t_to_js x14576);(Ojs.list_to_js
                                                      Ojs.string_to_js x14577);(
                     GLenum.t_to_js x14579)|])
    let (uniform1ui :
      'tags this ->
        location:WebGLUniformLocation.t or_null -> v0:GLuint.t -> unit)
      =
      fun (x14585 : 'tags this) ->
        fun ~location:(x14582 : WebGLUniformLocation.t or_null) ->
          fun ~v0:(x14584 : GLuint.t) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x14585) "uniform1ui"
                 [|(or_null_to_js WebGLUniformLocation.t_to_js x14582);(
                   GLuint.t_to_js x14584)|])
    let (uniform1uiv' :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          data:Uint32List.t ->
            ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x14595 : 'tags this) ->
        fun ~location:(x14587 : WebGLUniformLocation.t or_null) ->
          fun ~data:(x14588 : Uint32List.t) ->
            fun ?srcOffset:(x14589 : GLuint.t option) ->
              fun ?srcLength:(x14590 : GLuint.t option) ->
                fun () ->
                  ignore
                    (let x14597 = this_to_js Obj.magic x14595 in
                     Ojs.call (Ojs.get_prop_ascii x14597 "uniform1uiv")
                       "apply"
                       [|x14597;((let x14591 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x14591 "push"
                                       [|(or_null_to_js
                                            WebGLUniformLocation.t_to_js
                                            x14587)|]);
                                  ignore
                                    (Ojs.call x14591 "push"
                                       [|(Uint32List.t_to_js x14588)|]);
                                  (match x14589 with
                                   | Some x14593 ->
                                       ignore
                                         (Ojs.call x14591 "push"
                                            [|(GLuint.t_to_js x14593)|])
                                   | None -> ());
                                  (match x14590 with
                                   | Some x14592 ->
                                       ignore
                                         (Ojs.call x14591 "push"
                                            [|(GLuint.t_to_js x14592)|])
                                   | None -> ());
                                  x14591))|])
    let (uniform2ui :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          v0:GLuint.t -> v1:GLuint.t -> unit)
      =
      fun (x14602 : 'tags this) ->
        fun ~location:(x14598 : WebGLUniformLocation.t or_null) ->
          fun ~v0:(x14600 : GLuint.t) ->
            fun ~v1:(x14601 : GLuint.t) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x14602) "uniform2ui"
                   [|(or_null_to_js WebGLUniformLocation.t_to_js x14598);(
                     GLuint.t_to_js x14600);(GLuint.t_to_js x14601)|])
    let (uniform2uiv' :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          data:Uint32List.t ->
            ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x14612 : 'tags this) ->
        fun ~location:(x14604 : WebGLUniformLocation.t or_null) ->
          fun ~data:(x14605 : Uint32List.t) ->
            fun ?srcOffset:(x14606 : GLuint.t option) ->
              fun ?srcLength:(x14607 : GLuint.t option) ->
                fun () ->
                  ignore
                    (let x14614 = this_to_js Obj.magic x14612 in
                     Ojs.call (Ojs.get_prop_ascii x14614 "uniform2uiv")
                       "apply"
                       [|x14614;((let x14608 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x14608 "push"
                                       [|(or_null_to_js
                                            WebGLUniformLocation.t_to_js
                                            x14604)|]);
                                  ignore
                                    (Ojs.call x14608 "push"
                                       [|(Uint32List.t_to_js x14605)|]);
                                  (match x14606 with
                                   | Some x14610 ->
                                       ignore
                                         (Ojs.call x14608 "push"
                                            [|(GLuint.t_to_js x14610)|])
                                   | None -> ());
                                  (match x14607 with
                                   | Some x14609 ->
                                       ignore
                                         (Ojs.call x14608 "push"
                                            [|(GLuint.t_to_js x14609)|])
                                   | None -> ());
                                  x14608))|])
    let (uniform3ui :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          v0:GLuint.t -> v1:GLuint.t -> v2:GLuint.t -> unit)
      =
      fun (x14620 : 'tags this) ->
        fun ~location:(x14615 : WebGLUniformLocation.t or_null) ->
          fun ~v0:(x14617 : GLuint.t) ->
            fun ~v1:(x14618 : GLuint.t) ->
              fun ~v2:(x14619 : GLuint.t) ->
                ignore
                  (Ojs.call (this_to_js Obj.magic x14620) "uniform3ui"
                     [|(or_null_to_js WebGLUniformLocation.t_to_js x14615);(
                       GLuint.t_to_js x14617);(GLuint.t_to_js x14618);(
                       GLuint.t_to_js x14619)|])
    let (uniform3uiv' :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          data:Uint32List.t ->
            ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x14630 : 'tags this) ->
        fun ~location:(x14622 : WebGLUniformLocation.t or_null) ->
          fun ~data:(x14623 : Uint32List.t) ->
            fun ?srcOffset:(x14624 : GLuint.t option) ->
              fun ?srcLength:(x14625 : GLuint.t option) ->
                fun () ->
                  ignore
                    (let x14632 = this_to_js Obj.magic x14630 in
                     Ojs.call (Ojs.get_prop_ascii x14632 "uniform3uiv")
                       "apply"
                       [|x14632;((let x14626 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x14626 "push"
                                       [|(or_null_to_js
                                            WebGLUniformLocation.t_to_js
                                            x14622)|]);
                                  ignore
                                    (Ojs.call x14626 "push"
                                       [|(Uint32List.t_to_js x14623)|]);
                                  (match x14624 with
                                   | Some x14628 ->
                                       ignore
                                         (Ojs.call x14626 "push"
                                            [|(GLuint.t_to_js x14628)|])
                                   | None -> ());
                                  (match x14625 with
                                   | Some x14627 ->
                                       ignore
                                         (Ojs.call x14626 "push"
                                            [|(GLuint.t_to_js x14627)|])
                                   | None -> ());
                                  x14626))|])
    let (uniform4ui :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          v0:GLuint.t -> v1:GLuint.t -> v2:GLuint.t -> v3:GLuint.t -> unit)
      =
      fun (x14639 : 'tags this) ->
        fun ~location:(x14633 : WebGLUniformLocation.t or_null) ->
          fun ~v0:(x14635 : GLuint.t) ->
            fun ~v1:(x14636 : GLuint.t) ->
              fun ~v2:(x14637 : GLuint.t) ->
                fun ~v3:(x14638 : GLuint.t) ->
                  ignore
                    (Ojs.call (this_to_js Obj.magic x14639) "uniform4ui"
                       [|(or_null_to_js WebGLUniformLocation.t_to_js x14633);(
                         GLuint.t_to_js x14635);(GLuint.t_to_js x14636);(
                         GLuint.t_to_js x14637);(GLuint.t_to_js x14638)|])
    let (uniform4uiv' :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          data:Uint32List.t ->
            ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x14649 : 'tags this) ->
        fun ~location:(x14641 : WebGLUniformLocation.t or_null) ->
          fun ~data:(x14642 : Uint32List.t) ->
            fun ?srcOffset:(x14643 : GLuint.t option) ->
              fun ?srcLength:(x14644 : GLuint.t option) ->
                fun () ->
                  ignore
                    (let x14651 = this_to_js Obj.magic x14649 in
                     Ojs.call (Ojs.get_prop_ascii x14651 "uniform4uiv")
                       "apply"
                       [|x14651;((let x14645 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x14645 "push"
                                       [|(or_null_to_js
                                            WebGLUniformLocation.t_to_js
                                            x14641)|]);
                                  ignore
                                    (Ojs.call x14645 "push"
                                       [|(Uint32List.t_to_js x14642)|]);
                                  (match x14643 with
                                   | Some x14647 ->
                                       ignore
                                         (Ojs.call x14645 "push"
                                            [|(GLuint.t_to_js x14647)|])
                                   | None -> ());
                                  (match x14644 with
                                   | Some x14646 ->
                                       ignore
                                         (Ojs.call x14645 "push"
                                            [|(GLuint.t_to_js x14646)|])
                                   | None -> ());
                                  x14645))|])
    let (uniformBlockBinding :
      'tags this ->
        program:WebGLProgram.t ->
          uniformBlockIndex:GLuint.t -> uniformBlockBinding:GLuint.t -> unit)
      =
      fun (x14655 : 'tags this) ->
        fun ~program:(x14652 : WebGLProgram.t) ->
          fun ~uniformBlockIndex:(x14653 : GLuint.t) ->
            fun ~uniformBlockBinding:(x14654 : GLuint.t) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x14655) "uniformBlockBinding"
                   [|(WebGLProgram.t_to_js x14652);(GLuint.t_to_js x14653);(
                     GLuint.t_to_js x14654)|])
    let (uniformMatrix2x3fv' :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          transpose:GLboolean.t ->
            data:Float32List.t ->
              ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x14666 : 'tags this) ->
        fun ~location:(x14657 : WebGLUniformLocation.t or_null) ->
          fun ~transpose:(x14658 : GLboolean.t) ->
            fun ~data:(x14659 : Float32List.t) ->
              fun ?srcOffset:(x14660 : GLuint.t option) ->
                fun ?srcLength:(x14661 : GLuint.t option) ->
                  fun () ->
                    ignore
                      (let x14668 = this_to_js Obj.magic x14666 in
                       Ojs.call
                         (Ojs.get_prop_ascii x14668 "uniformMatrix2x3fv")
                         "apply"
                         [|x14668;((let x14662 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    ignore
                                      (Ojs.call x14662 "push"
                                         [|(or_null_to_js
                                              WebGLUniformLocation.t_to_js
                                              x14657)|]);
                                    ignore
                                      (Ojs.call x14662 "push"
                                         [|(GLboolean.t_to_js x14658)|]);
                                    ignore
                                      (Ojs.call x14662 "push"
                                         [|(Float32List.t_to_js x14659)|]);
                                    (match x14660 with
                                     | Some x14664 ->
                                         ignore
                                           (Ojs.call x14662 "push"
                                              [|(GLuint.t_to_js x14664)|])
                                     | None -> ());
                                    (match x14661 with
                                     | Some x14663 ->
                                         ignore
                                           (Ojs.call x14662 "push"
                                              [|(GLuint.t_to_js x14663)|])
                                     | None -> ());
                                    x14662))|])
    let (uniformMatrix2x4fv' :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          transpose:GLboolean.t ->
            data:Float32List.t ->
              ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x14678 : 'tags this) ->
        fun ~location:(x14669 : WebGLUniformLocation.t or_null) ->
          fun ~transpose:(x14670 : GLboolean.t) ->
            fun ~data:(x14671 : Float32List.t) ->
              fun ?srcOffset:(x14672 : GLuint.t option) ->
                fun ?srcLength:(x14673 : GLuint.t option) ->
                  fun () ->
                    ignore
                      (let x14680 = this_to_js Obj.magic x14678 in
                       Ojs.call
                         (Ojs.get_prop_ascii x14680 "uniformMatrix2x4fv")
                         "apply"
                         [|x14680;((let x14674 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    ignore
                                      (Ojs.call x14674 "push"
                                         [|(or_null_to_js
                                              WebGLUniformLocation.t_to_js
                                              x14669)|]);
                                    ignore
                                      (Ojs.call x14674 "push"
                                         [|(GLboolean.t_to_js x14670)|]);
                                    ignore
                                      (Ojs.call x14674 "push"
                                         [|(Float32List.t_to_js x14671)|]);
                                    (match x14672 with
                                     | Some x14676 ->
                                         ignore
                                           (Ojs.call x14674 "push"
                                              [|(GLuint.t_to_js x14676)|])
                                     | None -> ());
                                    (match x14673 with
                                     | Some x14675 ->
                                         ignore
                                           (Ojs.call x14674 "push"
                                              [|(GLuint.t_to_js x14675)|])
                                     | None -> ());
                                    x14674))|])
    let (uniformMatrix3x2fv' :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          transpose:GLboolean.t ->
            data:Float32List.t ->
              ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x14690 : 'tags this) ->
        fun ~location:(x14681 : WebGLUniformLocation.t or_null) ->
          fun ~transpose:(x14682 : GLboolean.t) ->
            fun ~data:(x14683 : Float32List.t) ->
              fun ?srcOffset:(x14684 : GLuint.t option) ->
                fun ?srcLength:(x14685 : GLuint.t option) ->
                  fun () ->
                    ignore
                      (let x14692 = this_to_js Obj.magic x14690 in
                       Ojs.call
                         (Ojs.get_prop_ascii x14692 "uniformMatrix3x2fv")
                         "apply"
                         [|x14692;((let x14686 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    ignore
                                      (Ojs.call x14686 "push"
                                         [|(or_null_to_js
                                              WebGLUniformLocation.t_to_js
                                              x14681)|]);
                                    ignore
                                      (Ojs.call x14686 "push"
                                         [|(GLboolean.t_to_js x14682)|]);
                                    ignore
                                      (Ojs.call x14686 "push"
                                         [|(Float32List.t_to_js x14683)|]);
                                    (match x14684 with
                                     | Some x14688 ->
                                         ignore
                                           (Ojs.call x14686 "push"
                                              [|(GLuint.t_to_js x14688)|])
                                     | None -> ());
                                    (match x14685 with
                                     | Some x14687 ->
                                         ignore
                                           (Ojs.call x14686 "push"
                                              [|(GLuint.t_to_js x14687)|])
                                     | None -> ());
                                    x14686))|])
    let (uniformMatrix3x4fv' :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          transpose:GLboolean.t ->
            data:Float32List.t ->
              ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x14702 : 'tags this) ->
        fun ~location:(x14693 : WebGLUniformLocation.t or_null) ->
          fun ~transpose:(x14694 : GLboolean.t) ->
            fun ~data:(x14695 : Float32List.t) ->
              fun ?srcOffset:(x14696 : GLuint.t option) ->
                fun ?srcLength:(x14697 : GLuint.t option) ->
                  fun () ->
                    ignore
                      (let x14704 = this_to_js Obj.magic x14702 in
                       Ojs.call
                         (Ojs.get_prop_ascii x14704 "uniformMatrix3x4fv")
                         "apply"
                         [|x14704;((let x14698 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    ignore
                                      (Ojs.call x14698 "push"
                                         [|(or_null_to_js
                                              WebGLUniformLocation.t_to_js
                                              x14693)|]);
                                    ignore
                                      (Ojs.call x14698 "push"
                                         [|(GLboolean.t_to_js x14694)|]);
                                    ignore
                                      (Ojs.call x14698 "push"
                                         [|(Float32List.t_to_js x14695)|]);
                                    (match x14696 with
                                     | Some x14700 ->
                                         ignore
                                           (Ojs.call x14698 "push"
                                              [|(GLuint.t_to_js x14700)|])
                                     | None -> ());
                                    (match x14697 with
                                     | Some x14699 ->
                                         ignore
                                           (Ojs.call x14698 "push"
                                              [|(GLuint.t_to_js x14699)|])
                                     | None -> ());
                                    x14698))|])
    let (uniformMatrix4x2fv' :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          transpose:GLboolean.t ->
            data:Float32List.t ->
              ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x14714 : 'tags this) ->
        fun ~location:(x14705 : WebGLUniformLocation.t or_null) ->
          fun ~transpose:(x14706 : GLboolean.t) ->
            fun ~data:(x14707 : Float32List.t) ->
              fun ?srcOffset:(x14708 : GLuint.t option) ->
                fun ?srcLength:(x14709 : GLuint.t option) ->
                  fun () ->
                    ignore
                      (let x14716 = this_to_js Obj.magic x14714 in
                       Ojs.call
                         (Ojs.get_prop_ascii x14716 "uniformMatrix4x2fv")
                         "apply"
                         [|x14716;((let x14710 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    ignore
                                      (Ojs.call x14710 "push"
                                         [|(or_null_to_js
                                              WebGLUniformLocation.t_to_js
                                              x14705)|]);
                                    ignore
                                      (Ojs.call x14710 "push"
                                         [|(GLboolean.t_to_js x14706)|]);
                                    ignore
                                      (Ojs.call x14710 "push"
                                         [|(Float32List.t_to_js x14707)|]);
                                    (match x14708 with
                                     | Some x14712 ->
                                         ignore
                                           (Ojs.call x14710 "push"
                                              [|(GLuint.t_to_js x14712)|])
                                     | None -> ());
                                    (match x14709 with
                                     | Some x14711 ->
                                         ignore
                                           (Ojs.call x14710 "push"
                                              [|(GLuint.t_to_js x14711)|])
                                     | None -> ());
                                    x14710))|])
    let (uniformMatrix4x3fv' :
      'tags this ->
        location:WebGLUniformLocation.t or_null ->
          transpose:GLboolean.t ->
            data:Float32List.t ->
              ?srcOffset:GLuint.t -> ?srcLength:GLuint.t -> unit -> unit)
      =
      fun (x14726 : 'tags this) ->
        fun ~location:(x14717 : WebGLUniformLocation.t or_null) ->
          fun ~transpose:(x14718 : GLboolean.t) ->
            fun ~data:(x14719 : Float32List.t) ->
              fun ?srcOffset:(x14720 : GLuint.t option) ->
                fun ?srcLength:(x14721 : GLuint.t option) ->
                  fun () ->
                    ignore
                      (let x14728 = this_to_js Obj.magic x14726 in
                       Ojs.call
                         (Ojs.get_prop_ascii x14728 "uniformMatrix4x3fv")
                         "apply"
                         [|x14728;((let x14722 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    ignore
                                      (Ojs.call x14722 "push"
                                         [|(or_null_to_js
                                              WebGLUniformLocation.t_to_js
                                              x14717)|]);
                                    ignore
                                      (Ojs.call x14722 "push"
                                         [|(GLboolean.t_to_js x14718)|]);
                                    ignore
                                      (Ojs.call x14722 "push"
                                         [|(Float32List.t_to_js x14719)|]);
                                    (match x14720 with
                                     | Some x14724 ->
                                         ignore
                                           (Ojs.call x14722 "push"
                                              [|(GLuint.t_to_js x14724)|])
                                     | None -> ());
                                    (match x14721 with
                                     | Some x14723 ->
                                         ignore
                                           (Ojs.call x14722 "push"
                                              [|(GLuint.t_to_js x14723)|])
                                     | None -> ());
                                    x14722))|])
    let (vertexAttribDivisor :
      'tags this -> index:GLuint.t -> divisor:GLuint.t -> unit) =
      fun (x14731 : 'tags this) ->
        fun ~index:(x14729 : GLuint.t) ->
          fun ~divisor:(x14730 : GLuint.t) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x14731) "vertexAttribDivisor"
                 [|(GLuint.t_to_js x14729);(GLuint.t_to_js x14730)|])
    let (vertexAttribI4i :
      'tags this ->
        index:GLuint.t ->
          x:GLint.t -> y:GLint.t -> z:GLint.t -> w:GLint.t -> unit)
      =
      fun (x14738 : 'tags this) ->
        fun ~index:(x14733 : GLuint.t) ->
          fun ~x:(x14734 : GLint.t) ->
            fun ~y:(x14735 : GLint.t) ->
              fun ~z:(x14736 : GLint.t) ->
                fun ~w:(x14737 : GLint.t) ->
                  ignore
                    (Ojs.call (this_to_js Obj.magic x14738) "vertexAttribI4i"
                       [|(GLuint.t_to_js x14733);(GLint.t_to_js x14734);(
                         GLint.t_to_js x14735);(GLint.t_to_js x14736);(
                         GLint.t_to_js x14737)|])
    let (vertexAttribI4iv' :
      'tags this -> index:GLuint.t -> values:Int32List.t -> unit) =
      fun (x14742 : 'tags this) ->
        fun ~index:(x14740 : GLuint.t) ->
          fun ~values:(x14741 : Int32List.t) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x14742) "vertexAttribI4iv"
                 [|(GLuint.t_to_js x14740);(Int32List.t_to_js x14741)|])
    let (vertexAttribI4ui :
      'tags this ->
        index:GLuint.t ->
          x:GLuint.t -> y:GLuint.t -> z:GLuint.t -> w:GLuint.t -> unit)
      =
      fun (x14749 : 'tags this) ->
        fun ~index:(x14744 : GLuint.t) ->
          fun ~x:(x14745 : GLuint.t) ->
            fun ~y:(x14746 : GLuint.t) ->
              fun ~z:(x14747 : GLuint.t) ->
                fun ~w:(x14748 : GLuint.t) ->
                  ignore
                    (Ojs.call (this_to_js Obj.magic x14749)
                       "vertexAttribI4ui"
                       [|(GLuint.t_to_js x14744);(GLuint.t_to_js x14745);(
                         GLuint.t_to_js x14746);(GLuint.t_to_js x14747);(
                         GLuint.t_to_js x14748)|])
    let (vertexAttribI4uiv' :
      'tags this -> index:GLuint.t -> values:Uint32List.t -> unit) =
      fun (x14753 : 'tags this) ->
        fun ~index:(x14751 : GLuint.t) ->
          fun ~values:(x14752 : Uint32List.t) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x14753) "vertexAttribI4uiv"
                 [|(GLuint.t_to_js x14751);(Uint32List.t_to_js x14752)|])
    let (vertexAttribIPointer :
      'tags this ->
        index:GLuint.t ->
          size:GLint.t ->
            type_:GLenum.t -> stride:GLsizei.t -> offset:GLintptr.t -> unit)
      =
      fun (x14760 : 'tags this) ->
        fun ~index:(x14755 : GLuint.t) ->
          fun ~size:(x14756 : GLint.t) ->
            fun ~type_:(x14757 : GLenum.t) ->
              fun ~stride:(x14758 : GLsizei.t) ->
                fun ~offset:(x14759 : GLintptr.t) ->
                  ignore
                    (Ojs.call (this_to_js Obj.magic x14760)
                       "vertexAttribIPointer"
                       [|(GLuint.t_to_js x14755);(GLint.t_to_js x14756);(
                         GLenum.t_to_js x14757);(GLsizei.t_to_js x14758);(
                         GLintptr.t_to_js x14759)|])
    let (waitSync :
      'tags this ->
        sync:WebGLSync.t -> flags:GLbitfield.t -> timeout:GLint64.t -> unit)
      =
      fun (x14765 : 'tags this) ->
        fun ~sync:(x14762 : WebGLSync.t) ->
          fun ~flags:(x14763 : GLbitfield.t) ->
            fun ~timeout:(x14764 : GLint64.t) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x14765) "waitSync"
                   [|(WebGLSync.t_to_js x14762);(GLbitfield.t_to_js x14763);(
                     GLint64.t_to_js x14764)|])
    let (get_ACTIVE_UNIFORM_BLOCKS : 'tags this -> GLenum.t) =
      fun (x14767 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14767)
             "ACTIVE_UNIFORM_BLOCKS")
    let (get_ALREADY_SIGNALED : 'tags this -> GLenum.t) =
      fun (x14769 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14769)
             "ALREADY_SIGNALED")
    let (get_ANY_SAMPLES_PASSED : 'tags this -> GLenum.t) =
      fun (x14771 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14771)
             "ANY_SAMPLES_PASSED")
    let (get_ANY_SAMPLES_PASSED_CONSERVATIVE : 'tags this -> GLenum.t) =
      fun (x14773 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14773)
             "ANY_SAMPLES_PASSED_CONSERVATIVE")
    let (get_COLOR : 'tags this -> GLenum.t) =
      fun (x14775 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14775) "COLOR")
    let (get_COLOR_ATTACHMENT1 : 'tags this -> GLenum.t) =
      fun (x14777 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14777)
             "COLOR_ATTACHMENT1")
    let (get_COLOR_ATTACHMENT10 : 'tags this -> GLenum.t) =
      fun (x14779 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14779)
             "COLOR_ATTACHMENT10")
    let (get_COLOR_ATTACHMENT11 : 'tags this -> GLenum.t) =
      fun (x14781 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14781)
             "COLOR_ATTACHMENT11")
    let (get_COLOR_ATTACHMENT12 : 'tags this -> GLenum.t) =
      fun (x14783 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14783)
             "COLOR_ATTACHMENT12")
    let (get_COLOR_ATTACHMENT13 : 'tags this -> GLenum.t) =
      fun (x14785 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14785)
             "COLOR_ATTACHMENT13")
    let (get_COLOR_ATTACHMENT14 : 'tags this -> GLenum.t) =
      fun (x14787 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14787)
             "COLOR_ATTACHMENT14")
    let (get_COLOR_ATTACHMENT15 : 'tags this -> GLenum.t) =
      fun (x14789 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14789)
             "COLOR_ATTACHMENT15")
    let (get_COLOR_ATTACHMENT2 : 'tags this -> GLenum.t) =
      fun (x14791 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14791)
             "COLOR_ATTACHMENT2")
    let (get_COLOR_ATTACHMENT3 : 'tags this -> GLenum.t) =
      fun (x14793 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14793)
             "COLOR_ATTACHMENT3")
    let (get_COLOR_ATTACHMENT4 : 'tags this -> GLenum.t) =
      fun (x14795 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14795)
             "COLOR_ATTACHMENT4")
    let (get_COLOR_ATTACHMENT5 : 'tags this -> GLenum.t) =
      fun (x14797 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14797)
             "COLOR_ATTACHMENT5")
    let (get_COLOR_ATTACHMENT6 : 'tags this -> GLenum.t) =
      fun (x14799 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14799)
             "COLOR_ATTACHMENT6")
    let (get_COLOR_ATTACHMENT7 : 'tags this -> GLenum.t) =
      fun (x14801 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14801)
             "COLOR_ATTACHMENT7")
    let (get_COLOR_ATTACHMENT8 : 'tags this -> GLenum.t) =
      fun (x14803 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14803)
             "COLOR_ATTACHMENT8")
    let (get_COLOR_ATTACHMENT9 : 'tags this -> GLenum.t) =
      fun (x14805 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14805)
             "COLOR_ATTACHMENT9")
    let (get_COMPARE_REF_TO_TEXTURE : 'tags this -> GLenum.t) =
      fun (x14807 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14807)
             "COMPARE_REF_TO_TEXTURE")
    let (get_CONDITION_SATISFIED : 'tags this -> GLenum.t) =
      fun (x14809 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14809)
             "CONDITION_SATISFIED")
    let (get_COPY_READ_BUFFER : 'tags this -> GLenum.t) =
      fun (x14811 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14811)
             "COPY_READ_BUFFER")
    let (get_COPY_READ_BUFFER_BINDING : 'tags this -> GLenum.t) =
      fun (x14813 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14813)
             "COPY_READ_BUFFER_BINDING")
    let (get_COPY_WRITE_BUFFER : 'tags this -> GLenum.t) =
      fun (x14815 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14815)
             "COPY_WRITE_BUFFER")
    let (get_COPY_WRITE_BUFFER_BINDING : 'tags this -> GLenum.t) =
      fun (x14817 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14817)
             "COPY_WRITE_BUFFER_BINDING")
    let (get_CURRENT_QUERY : 'tags this -> GLenum.t) =
      fun (x14819 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14819) "CURRENT_QUERY")
    let (get_DEPTH : 'tags this -> GLenum.t) =
      fun (x14821 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14821) "DEPTH")
    let (get_DEPTH24_STENCIL8 : 'tags this -> GLenum.t) =
      fun (x14823 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14823)
             "DEPTH24_STENCIL8")
    let (get_DEPTH32F_STENCIL8 : 'tags this -> GLenum.t) =
      fun (x14825 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14825)
             "DEPTH32F_STENCIL8")
    let (get_DEPTH_COMPONENT24 : 'tags this -> GLenum.t) =
      fun (x14827 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14827)
             "DEPTH_COMPONENT24")
    let (get_DEPTH_COMPONENT32F : 'tags this -> GLenum.t) =
      fun (x14829 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14829)
             "DEPTH_COMPONENT32F")
    let (get_DRAW_BUFFER0 : 'tags this -> GLenum.t) =
      fun (x14831 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14831) "DRAW_BUFFER0")
    let (get_DRAW_BUFFER1 : 'tags this -> GLenum.t) =
      fun (x14833 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14833) "DRAW_BUFFER1")
    let (get_DRAW_BUFFER10 : 'tags this -> GLenum.t) =
      fun (x14835 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14835) "DRAW_BUFFER10")
    let (get_DRAW_BUFFER11 : 'tags this -> GLenum.t) =
      fun (x14837 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14837) "DRAW_BUFFER11")
    let (get_DRAW_BUFFER12 : 'tags this -> GLenum.t) =
      fun (x14839 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14839) "DRAW_BUFFER12")
    let (get_DRAW_BUFFER13 : 'tags this -> GLenum.t) =
      fun (x14841 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14841) "DRAW_BUFFER13")
    let (get_DRAW_BUFFER14 : 'tags this -> GLenum.t) =
      fun (x14843 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14843) "DRAW_BUFFER14")
    let (get_DRAW_BUFFER15 : 'tags this -> GLenum.t) =
      fun (x14845 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14845) "DRAW_BUFFER15")
    let (get_DRAW_BUFFER2 : 'tags this -> GLenum.t) =
      fun (x14847 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14847) "DRAW_BUFFER2")
    let (get_DRAW_BUFFER3 : 'tags this -> GLenum.t) =
      fun (x14849 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14849) "DRAW_BUFFER3")
    let (get_DRAW_BUFFER4 : 'tags this -> GLenum.t) =
      fun (x14851 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14851) "DRAW_BUFFER4")
    let (get_DRAW_BUFFER5 : 'tags this -> GLenum.t) =
      fun (x14853 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14853) "DRAW_BUFFER5")
    let (get_DRAW_BUFFER6 : 'tags this -> GLenum.t) =
      fun (x14855 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14855) "DRAW_BUFFER6")
    let (get_DRAW_BUFFER7 : 'tags this -> GLenum.t) =
      fun (x14857 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14857) "DRAW_BUFFER7")
    let (get_DRAW_BUFFER8 : 'tags this -> GLenum.t) =
      fun (x14859 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14859) "DRAW_BUFFER8")
    let (get_DRAW_BUFFER9 : 'tags this -> GLenum.t) =
      fun (x14861 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14861) "DRAW_BUFFER9")
    let (get_DRAW_FRAMEBUFFER : 'tags this -> GLenum.t) =
      fun (x14863 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14863)
             "DRAW_FRAMEBUFFER")
    let (get_DRAW_FRAMEBUFFER_BINDING : 'tags this -> GLenum.t) =
      fun (x14865 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14865)
             "DRAW_FRAMEBUFFER_BINDING")
    let (get_DYNAMIC_COPY : 'tags this -> GLenum.t) =
      fun (x14867 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14867) "DYNAMIC_COPY")
    let (get_DYNAMIC_READ : 'tags this -> GLenum.t) =
      fun (x14869 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14869) "DYNAMIC_READ")
    let (get_FLOAT_32_UNSIGNED_INT_24_8_REV : 'tags this -> GLenum.t) =
      fun (x14871 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14871)
             "FLOAT_32_UNSIGNED_INT_24_8_REV")
    let (get_FLOAT_MAT2x3 : 'tags this -> GLenum.t) =
      fun (x14873 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14873) "FLOAT_MAT2x3")
    let (get_FLOAT_MAT2x4 : 'tags this -> GLenum.t) =
      fun (x14875 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14875) "FLOAT_MAT2x4")
    let (get_FLOAT_MAT3x2 : 'tags this -> GLenum.t) =
      fun (x14877 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14877) "FLOAT_MAT3x2")
    let (get_FLOAT_MAT3x4 : 'tags this -> GLenum.t) =
      fun (x14879 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14879) "FLOAT_MAT3x4")
    let (get_FLOAT_MAT4x2 : 'tags this -> GLenum.t) =
      fun (x14881 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14881) "FLOAT_MAT4x2")
    let (get_FLOAT_MAT4x3 : 'tags this -> GLenum.t) =
      fun (x14883 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14883) "FLOAT_MAT4x3")
    let (get_FRAGMENT_SHADER_DERIVATIVE_HINT : 'tags this -> GLenum.t) =
      fun (x14885 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14885)
             "FRAGMENT_SHADER_DERIVATIVE_HINT")
    let (get_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE : 'tags this -> GLenum.t) =
      fun (x14887 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14887)
             "FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE")
    let (get_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE : 'tags this -> GLenum.t) =
      fun (x14889 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14889)
             "FRAMEBUFFER_ATTACHMENT_BLUE_SIZE")
    let (get_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING : 'tags this -> GLenum.t)
      =
      fun (x14891 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14891)
             "FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING")
    let (get_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE : 'tags this -> GLenum.t)
      =
      fun (x14893 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14893)
             "FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE")
    let (get_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE : 'tags this -> GLenum.t) =
      fun (x14895 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14895)
             "FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE")
    let (get_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE : 'tags this -> GLenum.t) =
      fun (x14897 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14897)
             "FRAMEBUFFER_ATTACHMENT_GREEN_SIZE")
    let (get_FRAMEBUFFER_ATTACHMENT_RED_SIZE : 'tags this -> GLenum.t) =
      fun (x14899 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14899)
             "FRAMEBUFFER_ATTACHMENT_RED_SIZE")
    let (get_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE : 'tags this -> GLenum.t) =
      fun (x14901 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14901)
             "FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE")
    let (get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER : 'tags this -> GLenum.t) =
      fun (x14903 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14903)
             "FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER")
    let (get_FRAMEBUFFER_DEFAULT : 'tags this -> GLenum.t) =
      fun (x14905 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14905)
             "FRAMEBUFFER_DEFAULT")
    let (get_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE : 'tags this -> GLenum.t) =
      fun (x14907 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14907)
             "FRAMEBUFFER_INCOMPLETE_MULTISAMPLE")
    let (get_HALF_FLOAT : 'tags this -> GLenum.t) =
      fun (x14909 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14909) "HALF_FLOAT")
    let (get_INTERLEAVED_ATTRIBS : 'tags this -> GLenum.t) =
      fun (x14911 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14911)
             "INTERLEAVED_ATTRIBS")
    let (get_INT_2_10_10_10_REV : 'tags this -> GLenum.t) =
      fun (x14913 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14913)
             "INT_2_10_10_10_REV")
    let (get_INT_SAMPLER_2D : 'tags this -> GLenum.t) =
      fun (x14915 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14915) "INT_SAMPLER_2D")
    let (get_INT_SAMPLER_2D_ARRAY : 'tags this -> GLenum.t) =
      fun (x14917 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14917)
             "INT_SAMPLER_2D_ARRAY")
    let (get_INT_SAMPLER_3D : 'tags this -> GLenum.t) =
      fun (x14919 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14919) "INT_SAMPLER_3D")
    let (get_INT_SAMPLER_CUBE : 'tags this -> GLenum.t) =
      fun (x14921 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14921)
             "INT_SAMPLER_CUBE")
    let (get_INVALID_INDEX : 'tags this -> GLenum.t) =
      fun (x14923 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14923) "INVALID_INDEX")
    let (get_MAX : 'tags this -> GLenum.t) =
      fun (x14925 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14925) "MAX")
    let (get_MAX_3D_TEXTURE_SIZE : 'tags this -> GLenum.t) =
      fun (x14927 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14927)
             "MAX_3D_TEXTURE_SIZE")
    let (get_MAX_ARRAY_TEXTURE_LAYERS : 'tags this -> GLenum.t) =
      fun (x14929 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14929)
             "MAX_ARRAY_TEXTURE_LAYERS")
    let (get_MAX_CLIENT_WAIT_TIMEOUT_WEBGL : 'tags this -> GLenum.t) =
      fun (x14931 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14931)
             "MAX_CLIENT_WAIT_TIMEOUT_WEBGL")
    let (get_MAX_COLOR_ATTACHMENTS : 'tags this -> GLenum.t) =
      fun (x14933 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14933)
             "MAX_COLOR_ATTACHMENTS")
    let (get_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS :
      'tags this -> GLenum.t) =
      fun (x14935 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14935)
             "MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS")
    let (get_MAX_COMBINED_UNIFORM_BLOCKS : 'tags this -> GLenum.t) =
      fun (x14937 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14937)
             "MAX_COMBINED_UNIFORM_BLOCKS")
    let (get_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS : 'tags this -> GLenum.t)
      =
      fun (x14939 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14939)
             "MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS")
    let (get_MAX_DRAW_BUFFERS : 'tags this -> GLenum.t) =
      fun (x14941 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14941)
             "MAX_DRAW_BUFFERS")
    let (get_MAX_ELEMENTS_INDICES : 'tags this -> GLenum.t) =
      fun (x14943 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14943)
             "MAX_ELEMENTS_INDICES")
    let (get_MAX_ELEMENTS_VERTICES : 'tags this -> GLenum.t) =
      fun (x14945 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14945)
             "MAX_ELEMENTS_VERTICES")
    let (get_MAX_ELEMENT_INDEX : 'tags this -> GLenum.t) =
      fun (x14947 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14947)
             "MAX_ELEMENT_INDEX")
    let (get_MAX_FRAGMENT_INPUT_COMPONENTS : 'tags this -> GLenum.t) =
      fun (x14949 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14949)
             "MAX_FRAGMENT_INPUT_COMPONENTS")
    let (get_MAX_FRAGMENT_UNIFORM_BLOCKS : 'tags this -> GLenum.t) =
      fun (x14951 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14951)
             "MAX_FRAGMENT_UNIFORM_BLOCKS")
    let (get_MAX_FRAGMENT_UNIFORM_COMPONENTS : 'tags this -> GLenum.t) =
      fun (x14953 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14953)
             "MAX_FRAGMENT_UNIFORM_COMPONENTS")
    let (get_MAX_PROGRAM_TEXEL_OFFSET : 'tags this -> GLenum.t) =
      fun (x14955 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14955)
             "MAX_PROGRAM_TEXEL_OFFSET")
    let (get_MAX_SAMPLES : 'tags this -> GLenum.t) =
      fun (x14957 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14957) "MAX_SAMPLES")
    let (get_MAX_SERVER_WAIT_TIMEOUT : 'tags this -> GLenum.t) =
      fun (x14959 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14959)
             "MAX_SERVER_WAIT_TIMEOUT")
    let (get_MAX_TEXTURE_LOD_BIAS : 'tags this -> GLenum.t) =
      fun (x14961 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14961)
             "MAX_TEXTURE_LOD_BIAS")
    let (get_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS :
      'tags this -> GLenum.t) =
      fun (x14963 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14963)
             "MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS")
    let (get_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS :
      'tags this -> GLenum.t) =
      fun (x14965 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14965)
             "MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS")
    let (get_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS :
      'tags this -> GLenum.t) =
      fun (x14967 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14967)
             "MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS")
    let (get_MAX_UNIFORM_BLOCK_SIZE : 'tags this -> GLenum.t) =
      fun (x14969 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14969)
             "MAX_UNIFORM_BLOCK_SIZE")
    let (get_MAX_UNIFORM_BUFFER_BINDINGS : 'tags this -> GLenum.t) =
      fun (x14971 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14971)
             "MAX_UNIFORM_BUFFER_BINDINGS")
    let (get_MAX_VARYING_COMPONENTS : 'tags this -> GLenum.t) =
      fun (x14973 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14973)
             "MAX_VARYING_COMPONENTS")
    let (get_MAX_VERTEX_OUTPUT_COMPONENTS : 'tags this -> GLenum.t) =
      fun (x14975 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14975)
             "MAX_VERTEX_OUTPUT_COMPONENTS")
    let (get_MAX_VERTEX_UNIFORM_BLOCKS : 'tags this -> GLenum.t) =
      fun (x14977 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14977)
             "MAX_VERTEX_UNIFORM_BLOCKS")
    let (get_MAX_VERTEX_UNIFORM_COMPONENTS : 'tags this -> GLenum.t) =
      fun (x14979 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14979)
             "MAX_VERTEX_UNIFORM_COMPONENTS")
    let (get_MIN : 'tags this -> GLenum.t) =
      fun (x14981 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14981) "MIN")
    let (get_MIN_PROGRAM_TEXEL_OFFSET : 'tags this -> GLenum.t) =
      fun (x14983 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14983)
             "MIN_PROGRAM_TEXEL_OFFSET")
    let (get_OBJECT_TYPE : 'tags this -> GLenum.t) =
      fun (x14985 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14985) "OBJECT_TYPE")
    let (get_PACK_ROW_LENGTH : 'tags this -> GLenum.t) =
      fun (x14987 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14987) "PACK_ROW_LENGTH")
    let (get_PACK_SKIP_PIXELS : 'tags this -> GLenum.t) =
      fun (x14989 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14989)
             "PACK_SKIP_PIXELS")
    let (get_PACK_SKIP_ROWS : 'tags this -> GLenum.t) =
      fun (x14991 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14991) "PACK_SKIP_ROWS")
    let (get_PIXEL_PACK_BUFFER : 'tags this -> GLenum.t) =
      fun (x14993 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14993)
             "PIXEL_PACK_BUFFER")
    let (get_PIXEL_PACK_BUFFER_BINDING : 'tags this -> GLenum.t) =
      fun (x14995 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14995)
             "PIXEL_PACK_BUFFER_BINDING")
    let (get_PIXEL_UNPACK_BUFFER : 'tags this -> GLenum.t) =
      fun (x14997 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14997)
             "PIXEL_UNPACK_BUFFER")
    let (get_PIXEL_UNPACK_BUFFER_BINDING : 'tags this -> GLenum.t) =
      fun (x14999 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x14999)
             "PIXEL_UNPACK_BUFFER_BINDING")
    let (get_QUERY_RESULT : 'tags this -> GLenum.t) =
      fun (x15001 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15001) "QUERY_RESULT")
    let (get_QUERY_RESULT_AVAILABLE : 'tags this -> GLenum.t) =
      fun (x15003 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15003)
             "QUERY_RESULT_AVAILABLE")
    let (get_R11F_G11F_B10F : 'tags this -> GLenum.t) =
      fun (x15005 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15005) "R11F_G11F_B10F")
    let (get_R16F : 'tags this -> GLenum.t) =
      fun (x15007 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15007) "R16F")
    let (get_R16I : 'tags this -> GLenum.t) =
      fun (x15009 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15009) "R16I")
    let (get_R16UI : 'tags this -> GLenum.t) =
      fun (x15011 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15011) "R16UI")
    let (get_R32F : 'tags this -> GLenum.t) =
      fun (x15013 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15013) "R32F")
    let (get_R32I : 'tags this -> GLenum.t) =
      fun (x15015 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15015) "R32I")
    let (get_R32UI : 'tags this -> GLenum.t) =
      fun (x15017 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15017) "R32UI")
    let (get_R8 : 'tags this -> GLenum.t) =
      fun (x15019 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15019) "R8")
    let (get_R8I : 'tags this -> GLenum.t) =
      fun (x15021 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15021) "R8I")
    let (get_R8UI : 'tags this -> GLenum.t) =
      fun (x15023 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15023) "R8UI")
    let (get_R8_SNORM : 'tags this -> GLenum.t) =
      fun (x15025 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15025) "R8_SNORM")
    let (get_RASTERIZER_DISCARD : 'tags this -> GLenum.t) =
      fun (x15027 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15027)
             "RASTERIZER_DISCARD")
    let (get_READ_BUFFER : 'tags this -> GLenum.t) =
      fun (x15029 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15029) "READ_BUFFER")
    let (get_READ_FRAMEBUFFER : 'tags this -> GLenum.t) =
      fun (x15031 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15031)
             "READ_FRAMEBUFFER")
    let (get_READ_FRAMEBUFFER_BINDING : 'tags this -> GLenum.t) =
      fun (x15033 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15033)
             "READ_FRAMEBUFFER_BINDING")
    let (get_RED : 'tags this -> GLenum.t) =
      fun (x15035 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15035) "RED")
    let (get_RED_INTEGER : 'tags this -> GLenum.t) =
      fun (x15037 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15037) "RED_INTEGER")
    let (get_RENDERBUFFER_SAMPLES : 'tags this -> GLenum.t) =
      fun (x15039 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15039)
             "RENDERBUFFER_SAMPLES")
    let (get_RG : 'tags this -> GLenum.t) =
      fun (x15041 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15041) "RG")
    let (get_RG16F : 'tags this -> GLenum.t) =
      fun (x15043 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15043) "RG16F")
    let (get_RG16I : 'tags this -> GLenum.t) =
      fun (x15045 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15045) "RG16I")
    let (get_RG16UI : 'tags this -> GLenum.t) =
      fun (x15047 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15047) "RG16UI")
    let (get_RG32F : 'tags this -> GLenum.t) =
      fun (x15049 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15049) "RG32F")
    let (get_RG32I : 'tags this -> GLenum.t) =
      fun (x15051 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15051) "RG32I")
    let (get_RG32UI : 'tags this -> GLenum.t) =
      fun (x15053 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15053) "RG32UI")
    let (get_RG8 : 'tags this -> GLenum.t) =
      fun (x15055 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15055) "RG8")
    let (get_RG8I : 'tags this -> GLenum.t) =
      fun (x15057 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15057) "RG8I")
    let (get_RG8UI : 'tags this -> GLenum.t) =
      fun (x15059 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15059) "RG8UI")
    let (get_RG8_SNORM : 'tags this -> GLenum.t) =
      fun (x15061 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15061) "RG8_SNORM")
    let (get_RGB10_A2 : 'tags this -> GLenum.t) =
      fun (x15063 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15063) "RGB10_A2")
    let (get_RGB10_A2UI : 'tags this -> GLenum.t) =
      fun (x15065 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15065) "RGB10_A2UI")
    let (get_RGB16F : 'tags this -> GLenum.t) =
      fun (x15067 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15067) "RGB16F")
    let (get_RGB16I : 'tags this -> GLenum.t) =
      fun (x15069 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15069) "RGB16I")
    let (get_RGB16UI : 'tags this -> GLenum.t) =
      fun (x15071 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15071) "RGB16UI")
    let (get_RGB32F : 'tags this -> GLenum.t) =
      fun (x15073 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15073) "RGB32F")
    let (get_RGB32I : 'tags this -> GLenum.t) =
      fun (x15075 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15075) "RGB32I")
    let (get_RGB32UI : 'tags this -> GLenum.t) =
      fun (x15077 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15077) "RGB32UI")
    let (get_RGB8 : 'tags this -> GLenum.t) =
      fun (x15079 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15079) "RGB8")
    let (get_RGB8I : 'tags this -> GLenum.t) =
      fun (x15081 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15081) "RGB8I")
    let (get_RGB8UI : 'tags this -> GLenum.t) =
      fun (x15083 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15083) "RGB8UI")
    let (get_RGB8_SNORM : 'tags this -> GLenum.t) =
      fun (x15085 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15085) "RGB8_SNORM")
    let (get_RGB9_E5 : 'tags this -> GLenum.t) =
      fun (x15087 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15087) "RGB9_E5")
    let (get_RGBA16F : 'tags this -> GLenum.t) =
      fun (x15089 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15089) "RGBA16F")
    let (get_RGBA16I : 'tags this -> GLenum.t) =
      fun (x15091 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15091) "RGBA16I")
    let (get_RGBA16UI : 'tags this -> GLenum.t) =
      fun (x15093 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15093) "RGBA16UI")
    let (get_RGBA32F : 'tags this -> GLenum.t) =
      fun (x15095 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15095) "RGBA32F")
    let (get_RGBA32I : 'tags this -> GLenum.t) =
      fun (x15097 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15097) "RGBA32I")
    let (get_RGBA32UI : 'tags this -> GLenum.t) =
      fun (x15099 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15099) "RGBA32UI")
    let (get_RGBA8 : 'tags this -> GLenum.t) =
      fun (x15101 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15101) "RGBA8")
    let (get_RGBA8I : 'tags this -> GLenum.t) =
      fun (x15103 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15103) "RGBA8I")
    let (get_RGBA8UI : 'tags this -> GLenum.t) =
      fun (x15105 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15105) "RGBA8UI")
    let (get_RGBA8_SNORM : 'tags this -> GLenum.t) =
      fun (x15107 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15107) "RGBA8_SNORM")
    let (get_RGBA_INTEGER : 'tags this -> GLenum.t) =
      fun (x15109 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15109) "RGBA_INTEGER")
    let (get_RGB_INTEGER : 'tags this -> GLenum.t) =
      fun (x15111 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15111) "RGB_INTEGER")
    let (get_RG_INTEGER : 'tags this -> GLenum.t) =
      fun (x15113 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15113) "RG_INTEGER")
    let (get_SAMPLER_2D_ARRAY : 'tags this -> GLenum.t) =
      fun (x15115 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15115)
             "SAMPLER_2D_ARRAY")
    let (get_SAMPLER_2D_ARRAY_SHADOW : 'tags this -> GLenum.t) =
      fun (x15117 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15117)
             "SAMPLER_2D_ARRAY_SHADOW")
    let (get_SAMPLER_2D_SHADOW : 'tags this -> GLenum.t) =
      fun (x15119 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15119)
             "SAMPLER_2D_SHADOW")
    let (get_SAMPLER_3D : 'tags this -> GLenum.t) =
      fun (x15121 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15121) "SAMPLER_3D")
    let (get_SAMPLER_BINDING : 'tags this -> GLenum.t) =
      fun (x15123 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15123) "SAMPLER_BINDING")
    let (get_SAMPLER_CUBE_SHADOW : 'tags this -> GLenum.t) =
      fun (x15125 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15125)
             "SAMPLER_CUBE_SHADOW")
    let (get_SEPARATE_ATTRIBS : 'tags this -> GLenum.t) =
      fun (x15127 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15127)
             "SEPARATE_ATTRIBS")
    let (get_SIGNALED : 'tags this -> GLenum.t) =
      fun (x15129 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15129) "SIGNALED")
    let (get_SIGNED_NORMALIZED : 'tags this -> GLenum.t) =
      fun (x15131 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15131)
             "SIGNED_NORMALIZED")
    let (get_SRGB : 'tags this -> GLenum.t) =
      fun (x15133 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15133) "SRGB")
    let (get_SRGB8 : 'tags this -> GLenum.t) =
      fun (x15135 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15135) "SRGB8")
    let (get_SRGB8_ALPHA8 : 'tags this -> GLenum.t) =
      fun (x15137 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15137) "SRGB8_ALPHA8")
    let (get_STATIC_COPY : 'tags this -> GLenum.t) =
      fun (x15139 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15139) "STATIC_COPY")
    let (get_STATIC_READ : 'tags this -> GLenum.t) =
      fun (x15141 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15141) "STATIC_READ")
    let (get_STENCIL : 'tags this -> GLenum.t) =
      fun (x15143 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15143) "STENCIL")
    let (get_STREAM_COPY : 'tags this -> GLenum.t) =
      fun (x15145 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15145) "STREAM_COPY")
    let (get_STREAM_READ : 'tags this -> GLenum.t) =
      fun (x15147 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15147) "STREAM_READ")
    let (get_SYNC_CONDITION : 'tags this -> GLenum.t) =
      fun (x15149 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15149) "SYNC_CONDITION")
    let (get_SYNC_FENCE : 'tags this -> GLenum.t) =
      fun (x15151 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15151) "SYNC_FENCE")
    let (get_SYNC_FLAGS : 'tags this -> GLenum.t) =
      fun (x15153 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15153) "SYNC_FLAGS")
    let (get_SYNC_FLUSH_COMMANDS_BIT : 'tags this -> GLenum.t) =
      fun (x15155 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15155)
             "SYNC_FLUSH_COMMANDS_BIT")
    let (get_SYNC_GPU_COMMANDS_COMPLETE : 'tags this -> GLenum.t) =
      fun (x15157 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15157)
             "SYNC_GPU_COMMANDS_COMPLETE")
    let (get_SYNC_STATUS : 'tags this -> GLenum.t) =
      fun (x15159 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15159) "SYNC_STATUS")
    let (get_TEXTURE_2D_ARRAY : 'tags this -> GLenum.t) =
      fun (x15161 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15161)
             "TEXTURE_2D_ARRAY")
    let (get_TEXTURE_3D : 'tags this -> GLenum.t) =
      fun (x15163 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15163) "TEXTURE_3D")
    let (get_TEXTURE_BASE_LEVEL : 'tags this -> GLenum.t) =
      fun (x15165 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15165)
             "TEXTURE_BASE_LEVEL")
    let (get_TEXTURE_BINDING_2D_ARRAY : 'tags this -> GLenum.t) =
      fun (x15167 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15167)
             "TEXTURE_BINDING_2D_ARRAY")
    let (get_TEXTURE_BINDING_3D : 'tags this -> GLenum.t) =
      fun (x15169 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15169)
             "TEXTURE_BINDING_3D")
    let (get_TEXTURE_COMPARE_FUNC : 'tags this -> GLenum.t) =
      fun (x15171 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15171)
             "TEXTURE_COMPARE_FUNC")
    let (get_TEXTURE_COMPARE_MODE : 'tags this -> GLenum.t) =
      fun (x15173 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15173)
             "TEXTURE_COMPARE_MODE")
    let (get_TEXTURE_IMMUTABLE_FORMAT : 'tags this -> GLenum.t) =
      fun (x15175 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15175)
             "TEXTURE_IMMUTABLE_FORMAT")
    let (get_TEXTURE_IMMUTABLE_LEVELS : 'tags this -> GLenum.t) =
      fun (x15177 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15177)
             "TEXTURE_IMMUTABLE_LEVELS")
    let (get_TEXTURE_MAX_LEVEL : 'tags this -> GLenum.t) =
      fun (x15179 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15179)
             "TEXTURE_MAX_LEVEL")
    let (get_TEXTURE_MAX_LOD : 'tags this -> GLenum.t) =
      fun (x15181 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15181) "TEXTURE_MAX_LOD")
    let (get_TEXTURE_MIN_LOD : 'tags this -> GLenum.t) =
      fun (x15183 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15183) "TEXTURE_MIN_LOD")
    let (get_TEXTURE_WRAP_R : 'tags this -> GLenum.t) =
      fun (x15185 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15185) "TEXTURE_WRAP_R")
    let (get_TIMEOUT_EXPIRED : 'tags this -> GLenum.t) =
      fun (x15187 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15187) "TIMEOUT_EXPIRED")
    let (get_TIMEOUT_IGNORED : 'tags this -> GLint64.t) =
      fun (x15189 : 'tags this) ->
        GLint64.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15189) "TIMEOUT_IGNORED")
    let (get_TRANSFORM_FEEDBACK : 'tags this -> GLenum.t) =
      fun (x15191 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15191)
             "TRANSFORM_FEEDBACK")
    let (get_TRANSFORM_FEEDBACK_ACTIVE : 'tags this -> GLenum.t) =
      fun (x15193 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15193)
             "TRANSFORM_FEEDBACK_ACTIVE")
    let (get_TRANSFORM_FEEDBACK_BINDING : 'tags this -> GLenum.t) =
      fun (x15195 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15195)
             "TRANSFORM_FEEDBACK_BINDING")
    let (get_TRANSFORM_FEEDBACK_BUFFER : 'tags this -> GLenum.t) =
      fun (x15197 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15197)
             "TRANSFORM_FEEDBACK_BUFFER")
    let (get_TRANSFORM_FEEDBACK_BUFFER_BINDING : 'tags this -> GLenum.t) =
      fun (x15199 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15199)
             "TRANSFORM_FEEDBACK_BUFFER_BINDING")
    let (get_TRANSFORM_FEEDBACK_BUFFER_MODE : 'tags this -> GLenum.t) =
      fun (x15201 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15201)
             "TRANSFORM_FEEDBACK_BUFFER_MODE")
    let (get_TRANSFORM_FEEDBACK_BUFFER_SIZE : 'tags this -> GLenum.t) =
      fun (x15203 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15203)
             "TRANSFORM_FEEDBACK_BUFFER_SIZE")
    let (get_TRANSFORM_FEEDBACK_BUFFER_START : 'tags this -> GLenum.t) =
      fun (x15205 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15205)
             "TRANSFORM_FEEDBACK_BUFFER_START")
    let (get_TRANSFORM_FEEDBACK_PAUSED : 'tags this -> GLenum.t) =
      fun (x15207 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15207)
             "TRANSFORM_FEEDBACK_PAUSED")
    let (get_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN : 'tags this -> GLenum.t)
      =
      fun (x15209 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15209)
             "TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN")
    let (get_TRANSFORM_FEEDBACK_VARYINGS : 'tags this -> GLenum.t) =
      fun (x15211 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15211)
             "TRANSFORM_FEEDBACK_VARYINGS")
    let (get_UNIFORM_ARRAY_STRIDE : 'tags this -> GLenum.t) =
      fun (x15213 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15213)
             "UNIFORM_ARRAY_STRIDE")
    let (get_UNIFORM_BLOCK_ACTIVE_UNIFORMS : 'tags this -> GLenum.t) =
      fun (x15215 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15215)
             "UNIFORM_BLOCK_ACTIVE_UNIFORMS")
    let (get_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES : 'tags this -> GLenum.t) =
      fun (x15217 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15217)
             "UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES")
    let (get_UNIFORM_BLOCK_BINDING : 'tags this -> GLenum.t) =
      fun (x15219 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15219)
             "UNIFORM_BLOCK_BINDING")
    let (get_UNIFORM_BLOCK_DATA_SIZE : 'tags this -> GLenum.t) =
      fun (x15221 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15221)
             "UNIFORM_BLOCK_DATA_SIZE")
    let (get_UNIFORM_BLOCK_INDEX : 'tags this -> GLenum.t) =
      fun (x15223 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15223)
             "UNIFORM_BLOCK_INDEX")
    let (get_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER :
      'tags this -> GLenum.t) =
      fun (x15225 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15225)
             "UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER")
    let (get_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER :
      'tags this -> GLenum.t) =
      fun (x15227 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15227)
             "UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER")
    let (get_UNIFORM_BUFFER : 'tags this -> GLenum.t) =
      fun (x15229 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15229) "UNIFORM_BUFFER")
    let (get_UNIFORM_BUFFER_BINDING : 'tags this -> GLenum.t) =
      fun (x15231 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15231)
             "UNIFORM_BUFFER_BINDING")
    let (get_UNIFORM_BUFFER_OFFSET_ALIGNMENT : 'tags this -> GLenum.t) =
      fun (x15233 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15233)
             "UNIFORM_BUFFER_OFFSET_ALIGNMENT")
    let (get_UNIFORM_BUFFER_SIZE : 'tags this -> GLenum.t) =
      fun (x15235 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15235)
             "UNIFORM_BUFFER_SIZE")
    let (get_UNIFORM_BUFFER_START : 'tags this -> GLenum.t) =
      fun (x15237 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15237)
             "UNIFORM_BUFFER_START")
    let (get_UNIFORM_IS_ROW_MAJOR : 'tags this -> GLenum.t) =
      fun (x15239 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15239)
             "UNIFORM_IS_ROW_MAJOR")
    let (get_UNIFORM_MATRIX_STRIDE : 'tags this -> GLenum.t) =
      fun (x15241 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15241)
             "UNIFORM_MATRIX_STRIDE")
    let (get_UNIFORM_OFFSET : 'tags this -> GLenum.t) =
      fun (x15243 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15243) "UNIFORM_OFFSET")
    let (get_UNIFORM_SIZE : 'tags this -> GLenum.t) =
      fun (x15245 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15245) "UNIFORM_SIZE")
    let (get_UNIFORM_TYPE : 'tags this -> GLenum.t) =
      fun (x15247 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15247) "UNIFORM_TYPE")
    let (get_UNPACK_IMAGE_HEIGHT : 'tags this -> GLenum.t) =
      fun (x15249 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15249)
             "UNPACK_IMAGE_HEIGHT")
    let (get_UNPACK_ROW_LENGTH : 'tags this -> GLenum.t) =
      fun (x15251 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15251)
             "UNPACK_ROW_LENGTH")
    let (get_UNPACK_SKIP_IMAGES : 'tags this -> GLenum.t) =
      fun (x15253 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15253)
             "UNPACK_SKIP_IMAGES")
    let (get_UNPACK_SKIP_PIXELS : 'tags this -> GLenum.t) =
      fun (x15255 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15255)
             "UNPACK_SKIP_PIXELS")
    let (get_UNPACK_SKIP_ROWS : 'tags this -> GLenum.t) =
      fun (x15257 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15257)
             "UNPACK_SKIP_ROWS")
    let (get_UNSIGNALED : 'tags this -> GLenum.t) =
      fun (x15259 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15259) "UNSIGNALED")
    let (get_UNSIGNED_INT_10F_11F_11F_REV : 'tags this -> GLenum.t) =
      fun (x15261 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15261)
             "UNSIGNED_INT_10F_11F_11F_REV")
    let (get_UNSIGNED_INT_24_8 : 'tags this -> GLenum.t) =
      fun (x15263 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15263)
             "UNSIGNED_INT_24_8")
    let (get_UNSIGNED_INT_2_10_10_10_REV : 'tags this -> GLenum.t) =
      fun (x15265 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15265)
             "UNSIGNED_INT_2_10_10_10_REV")
    let (get_UNSIGNED_INT_5_9_9_9_REV : 'tags this -> GLenum.t) =
      fun (x15267 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15267)
             "UNSIGNED_INT_5_9_9_9_REV")
    let (get_UNSIGNED_INT_SAMPLER_2D : 'tags this -> GLenum.t) =
      fun (x15269 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15269)
             "UNSIGNED_INT_SAMPLER_2D")
    let (get_UNSIGNED_INT_SAMPLER_2D_ARRAY : 'tags this -> GLenum.t) =
      fun (x15271 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15271)
             "UNSIGNED_INT_SAMPLER_2D_ARRAY")
    let (get_UNSIGNED_INT_SAMPLER_3D : 'tags this -> GLenum.t) =
      fun (x15273 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15273)
             "UNSIGNED_INT_SAMPLER_3D")
    let (get_UNSIGNED_INT_SAMPLER_CUBE : 'tags this -> GLenum.t) =
      fun (x15275 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15275)
             "UNSIGNED_INT_SAMPLER_CUBE")
    let (get_UNSIGNED_INT_VEC2 : 'tags this -> GLenum.t) =
      fun (x15277 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15277)
             "UNSIGNED_INT_VEC2")
    let (get_UNSIGNED_INT_VEC3 : 'tags this -> GLenum.t) =
      fun (x15279 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15279)
             "UNSIGNED_INT_VEC3")
    let (get_UNSIGNED_INT_VEC4 : 'tags this -> GLenum.t) =
      fun (x15281 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15281)
             "UNSIGNED_INT_VEC4")
    let (get_UNSIGNED_NORMALIZED : 'tags this -> GLenum.t) =
      fun (x15283 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15283)
             "UNSIGNED_NORMALIZED")
    let (get_VERTEX_ARRAY_BINDING : 'tags this -> GLenum.t) =
      fun (x15285 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15285)
             "VERTEX_ARRAY_BINDING")
    let (get_VERTEX_ATTRIB_ARRAY_DIVISOR : 'tags this -> GLenum.t) =
      fun (x15287 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15287)
             "VERTEX_ATTRIB_ARRAY_DIVISOR")
    let (get_VERTEX_ATTRIB_ARRAY_INTEGER : 'tags this -> GLenum.t) =
      fun (x15289 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15289)
             "VERTEX_ATTRIB_ARRAY_INTEGER")
    let (get_WAIT_FAILED : 'tags this -> GLenum.t) =
      fun (x15291 : 'tags this) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x15291) "WAIT_FAILED")
    let cast_from = Obj.magic
  end
module WebGL2RenderingContext =
  struct
    type t =
      [ `WebGL2RenderingContext  | `WebGL2RenderingContextBase 
      | `WebGL2RenderingContextOverloads  | `WebGLRenderingContextBase ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x15294 : Ojs.t) -> t_of_js x15294
    and t_0_to_js : t_0 -> Ojs.t = fun (x15293 : t) -> t_to_js x15293
    type tags =
      [ `WebGL2RenderingContext  | `WebGL2RenderingContextBase 
      | `WebGL2RenderingContextOverloads  | `WebGLRenderingContextBase ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `WebGL2RenderingContext ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x15297 : Ojs.t) -> intf_of_js __tags_of_js x15297
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x15295 : __tags intf) -> intf_to_js __tags_to_js x15295
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") 
             [||])
    let (active_uniform_blocks : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "ACTIVE_UNIFORM_BLOCKS")
    let (already_signaled : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "ALREADY_SIGNALED")
    let (any_samples_passed : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "ANY_SAMPLES_PASSED")
    let (any_samples_passed_conservative : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "ANY_SAMPLES_PASSED_CONSERVATIVE")
    let (color : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "COLOR")
    let (color_attachment1 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "COLOR_ATTACHMENT1")
    let (color_attachment10 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "COLOR_ATTACHMENT10")
    let (color_attachment11 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "COLOR_ATTACHMENT11")
    let (color_attachment12 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "COLOR_ATTACHMENT12")
    let (color_attachment13 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "COLOR_ATTACHMENT13")
    let (color_attachment14 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "COLOR_ATTACHMENT14")
    let (color_attachment15 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "COLOR_ATTACHMENT15")
    let (color_attachment2 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "COLOR_ATTACHMENT2")
    let (color_attachment3 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "COLOR_ATTACHMENT3")
    let (color_attachment4 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "COLOR_ATTACHMENT4")
    let (color_attachment5 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "COLOR_ATTACHMENT5")
    let (color_attachment6 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "COLOR_ATTACHMENT6")
    let (color_attachment7 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "COLOR_ATTACHMENT7")
    let (color_attachment8 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "COLOR_ATTACHMENT8")
    let (color_attachment9 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "COLOR_ATTACHMENT9")
    let (compare_ref_to_texture : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "COMPARE_REF_TO_TEXTURE")
    let (condition_satisfied : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "CONDITION_SATISFIED")
    let (copy_read_buffer : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "COPY_READ_BUFFER")
    let (copy_read_buffer_binding : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "COPY_READ_BUFFER_BINDING")
    let (copy_write_buffer : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "COPY_WRITE_BUFFER")
    let (copy_write_buffer_binding : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "COPY_WRITE_BUFFER_BINDING")
    let (current_query : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "CURRENT_QUERY")
    let (depth : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "DEPTH")
    let (depth24_stencil8 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DEPTH24_STENCIL8")
    let (depth32f_stencil8 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DEPTH32F_STENCIL8")
    let (depth_component24 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DEPTH_COMPONENT24")
    let (depth_component32f : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DEPTH_COMPONENT32F")
    let (draw_buffer0 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DRAW_BUFFER0")
    let (draw_buffer1 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DRAW_BUFFER1")
    let (draw_buffer10 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DRAW_BUFFER10")
    let (draw_buffer11 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DRAW_BUFFER11")
    let (draw_buffer12 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DRAW_BUFFER12")
    let (draw_buffer13 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DRAW_BUFFER13")
    let (draw_buffer14 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DRAW_BUFFER14")
    let (draw_buffer15 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DRAW_BUFFER15")
    let (draw_buffer2 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DRAW_BUFFER2")
    let (draw_buffer3 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DRAW_BUFFER3")
    let (draw_buffer4 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DRAW_BUFFER4")
    let (draw_buffer5 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DRAW_BUFFER5")
    let (draw_buffer6 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DRAW_BUFFER6")
    let (draw_buffer7 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DRAW_BUFFER7")
    let (draw_buffer8 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DRAW_BUFFER8")
    let (draw_buffer9 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DRAW_BUFFER9")
    let (draw_framebuffer : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DRAW_FRAMEBUFFER")
    let (draw_framebuffer_binding : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DRAW_FRAMEBUFFER_BINDING")
    let (dynamic_copy : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DYNAMIC_COPY")
    let (dynamic_read : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DYNAMIC_READ")
    let (float_32_unsigned_int_24_8_rev : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FLOAT_32_UNSIGNED_INT_24_8_REV")
    let (fLOAT_MAT2x3 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FLOAT_MAT2x3")
    let (fLOAT_MAT2x4 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FLOAT_MAT2x4")
    let (fLOAT_MAT3x2 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FLOAT_MAT3x2")
    let (fLOAT_MAT3x4 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FLOAT_MAT3x4")
    let (fLOAT_MAT4x2 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FLOAT_MAT4x2")
    let (fLOAT_MAT4x3 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FLOAT_MAT4x3")
    let (fragment_shader_derivative_hint : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FRAGMENT_SHADER_DERIVATIVE_HINT")
    let (framebuffer_attachment_alpha_size : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE")
    let (framebuffer_attachment_blue_size : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FRAMEBUFFER_ATTACHMENT_BLUE_SIZE")
    let (framebuffer_attachment_color_encoding : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING")
    let (framebuffer_attachment_component_type : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE")
    let (framebuffer_attachment_depth_size : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE")
    let (framebuffer_attachment_green_size : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FRAMEBUFFER_ATTACHMENT_GREEN_SIZE")
    let (framebuffer_attachment_red_size : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FRAMEBUFFER_ATTACHMENT_RED_SIZE")
    let (framebuffer_attachment_stencil_size : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE")
    let (framebuffer_attachment_texture_layer : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER")
    let (framebuffer_default : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FRAMEBUFFER_DEFAULT")
    let (framebuffer_incomplete_multisample : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FRAMEBUFFER_INCOMPLETE_MULTISAMPLE")
    let (half_float : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "HALF_FLOAT")
    let (interleaved_attribs : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "INTERLEAVED_ATTRIBS")
    let (int_2_10_10_10_rev : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "INT_2_10_10_10_REV")
    let (int_sampler_2d : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "INT_SAMPLER_2D")
    let (int_sampler_2d_array : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "INT_SAMPLER_2D_ARRAY")
    let (int_sampler_3d : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "INT_SAMPLER_3D")
    let (int_sampler_cube : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "INT_SAMPLER_CUBE")
    let (invalid_index : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "INVALID_INDEX")
    let (max : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "MAX")
    let (max_3d_texture_size : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MAX_3D_TEXTURE_SIZE")
    let (max_array_texture_layers : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MAX_ARRAY_TEXTURE_LAYERS")
    let (max_client_wait_timeout_webgl : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MAX_CLIENT_WAIT_TIMEOUT_WEBGL")
    let (max_color_attachments : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MAX_COLOR_ATTACHMENTS")
    let (max_combined_fragment_uniform_components : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS")
    let (max_combined_uniform_blocks : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MAX_COMBINED_UNIFORM_BLOCKS")
    let (max_combined_vertex_uniform_components : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS")
    let (max_draw_buffers : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MAX_DRAW_BUFFERS")
    let (max_elements_indices : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MAX_ELEMENTS_INDICES")
    let (max_elements_vertices : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MAX_ELEMENTS_VERTICES")
    let (max_element_index : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MAX_ELEMENT_INDEX")
    let (max_fragment_input_components : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MAX_FRAGMENT_INPUT_COMPONENTS")
    let (max_fragment_uniform_blocks : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MAX_FRAGMENT_UNIFORM_BLOCKS")
    let (max_fragment_uniform_components : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MAX_FRAGMENT_UNIFORM_COMPONENTS")
    let (max_program_texel_offset : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MAX_PROGRAM_TEXEL_OFFSET")
    let (max_samples : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MAX_SAMPLES")
    let (max_server_wait_timeout : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MAX_SERVER_WAIT_TIMEOUT")
    let (max_texture_lod_bias : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MAX_TEXTURE_LOD_BIAS")
    let (max_transform_feedback_interleaved_components : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS")
    let (max_transform_feedback_separate_attribs : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS")
    let (max_transform_feedback_separate_components : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS")
    let (max_uniform_block_size : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MAX_UNIFORM_BLOCK_SIZE")
    let (max_uniform_buffer_bindings : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MAX_UNIFORM_BUFFER_BINDINGS")
    let (max_varying_components : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MAX_VARYING_COMPONENTS")
    let (max_vertex_output_components : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MAX_VERTEX_OUTPUT_COMPONENTS")
    let (max_vertex_uniform_blocks : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MAX_VERTEX_UNIFORM_BLOCKS")
    let (max_vertex_uniform_components : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MAX_VERTEX_UNIFORM_COMPONENTS")
    let (min : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "MIN")
    let (min_program_texel_offset : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MIN_PROGRAM_TEXEL_OFFSET")
    let (object_type : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "OBJECT_TYPE")
    let (pack_row_length : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "PACK_ROW_LENGTH")
    let (pack_skip_pixels : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "PACK_SKIP_PIXELS")
    let (pack_skip_rows : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "PACK_SKIP_ROWS")
    let (pixel_pack_buffer : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "PIXEL_PACK_BUFFER")
    let (pixel_pack_buffer_binding : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "PIXEL_PACK_BUFFER_BINDING")
    let (pixel_unpack_buffer : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "PIXEL_UNPACK_BUFFER")
    let (pixel_unpack_buffer_binding : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "PIXEL_UNPACK_BUFFER_BINDING")
    let (query_result : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "QUERY_RESULT")
    let (query_result_available : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "QUERY_RESULT_AVAILABLE")
    let (r11f_g11f_b10f : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "R11F_G11F_B10F")
    let (r16f : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "R16F")
    let (r16i : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "R16I")
    let (r16ui : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "R16UI")
    let (r32f : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "R32F")
    let (r32i : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "R32I")
    let (r32ui : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "R32UI")
    let (r8 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "R8")
    let (r8i : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "R8I")
    let (r8ui : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "R8UI")
    let (r8_snorm : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "R8_SNORM")
    let (rasterizer_discard : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RASTERIZER_DISCARD")
    let (read_buffer : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "READ_BUFFER")
    let (read_framebuffer : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "READ_FRAMEBUFFER")
    let (read_framebuffer_binding : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "READ_FRAMEBUFFER_BINDING")
    let (red : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "RED")
    let (red_integer : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RED_INTEGER")
    let (renderbuffer_samples : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RENDERBUFFER_SAMPLES")
    let (rg : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "RG")
    let (rg16f : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "RG16F")
    let (rg16i : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "RG16I")
    let (rg16ui : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RG16UI")
    let (rg32f : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "RG32F")
    let (rg32i : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "RG32I")
    let (rg32ui : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RG32UI")
    let (rg8 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "RG8")
    let (rg8i : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "RG8I")
    let (rg8ui : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "RG8UI")
    let (rg8_snorm : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RG8_SNORM")
    let (rgb10_a2 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RGB10_A2")
    let (rgb10_a2ui : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RGB10_A2UI")
    let (rgb16f : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RGB16F")
    let (rgb16i : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RGB16I")
    let (rgb16ui : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RGB16UI")
    let (rgb32f : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RGB32F")
    let (rgb32i : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RGB32I")
    let (rgb32ui : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RGB32UI")
    let (rgb8 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "RGB8")
    let (rgb8i : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "RGB8I")
    let (rgb8ui : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RGB8UI")
    let (rgb8_snorm : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RGB8_SNORM")
    let (rgb9_e5 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RGB9_E5")
    let (rgba16f : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RGBA16F")
    let (rgba16i : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RGBA16I")
    let (rgba16ui : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RGBA16UI")
    let (rgba32f : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RGBA32F")
    let (rgba32i : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RGBA32I")
    let (rgba32ui : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RGBA32UI")
    let (rgba8 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "RGBA8")
    let (rgba8i : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RGBA8I")
    let (rgba8ui : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RGBA8UI")
    let (rgba8_snorm : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RGBA8_SNORM")
    let (rgba_integer : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RGBA_INTEGER")
    let (rgb_integer : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RGB_INTEGER")
    let (rg_integer : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RG_INTEGER")
    let (sampler_2d_array : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "SAMPLER_2D_ARRAY")
    let (sampler_2d_array_shadow : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "SAMPLER_2D_ARRAY_SHADOW")
    let (sampler_2d_shadow : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "SAMPLER_2D_SHADOW")
    let (sampler_3d : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "SAMPLER_3D")
    let (sampler_binding : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "SAMPLER_BINDING")
    let (sampler_cube_shadow : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "SAMPLER_CUBE_SHADOW")
    let (separate_attribs : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "SEPARATE_ATTRIBS")
    let (signaled : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "SIGNALED")
    let (signed_normalized : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "SIGNED_NORMALIZED")
    let (srgb : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "SRGB")
    let (srgb8 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "SRGB8")
    let (srgb8_alpha8 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "SRGB8_ALPHA8")
    let (static_copy : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "STATIC_COPY")
    let (static_read : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "STATIC_READ")
    let (stencil : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "STENCIL")
    let (stream_copy : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "STREAM_COPY")
    let (stream_read : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "STREAM_READ")
    let (sync_condition : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "SYNC_CONDITION")
    let (sync_fence : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "SYNC_FENCE")
    let (sync_flags : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "SYNC_FLAGS")
    let (sync_flush_commands_bit : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "SYNC_FLUSH_COMMANDS_BIT")
    let (sync_gpu_commands_complete : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "SYNC_GPU_COMMANDS_COMPLETE")
    let (sync_status : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "SYNC_STATUS")
    let (texture_2d_array : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE_2D_ARRAY")
    let (texture_3d : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE_3D")
    let (texture_base_level : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE_BASE_LEVEL")
    let (texture_binding_2d_array : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE_BINDING_2D_ARRAY")
    let (texture_binding_3d : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE_BINDING_3D")
    let (texture_compare_func : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE_COMPARE_FUNC")
    let (texture_compare_mode : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE_COMPARE_MODE")
    let (texture_immutable_format : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE_IMMUTABLE_FORMAT")
    let (texture_immutable_levels : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE_IMMUTABLE_LEVELS")
    let (texture_max_level : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE_MAX_LEVEL")
    let (texture_max_lod : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE_MAX_LOD")
    let (texture_min_lod : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE_MIN_LOD")
    let (texture_wrap_r : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE_WRAP_R")
    let (timeout_expired : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TIMEOUT_EXPIRED")
    let (timeout_ignored : unit -> GLint64.t) =
      fun () ->
        GLint64.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TIMEOUT_IGNORED")
    let (transform_feedback : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TRANSFORM_FEEDBACK")
    let (transform_feedback_active : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TRANSFORM_FEEDBACK_ACTIVE")
    let (transform_feedback_binding : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TRANSFORM_FEEDBACK_BINDING")
    let (transform_feedback_buffer : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TRANSFORM_FEEDBACK_BUFFER")
    let (transform_feedback_buffer_binding : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TRANSFORM_FEEDBACK_BUFFER_BINDING")
    let (transform_feedback_buffer_mode : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TRANSFORM_FEEDBACK_BUFFER_MODE")
    let (transform_feedback_buffer_size : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TRANSFORM_FEEDBACK_BUFFER_SIZE")
    let (transform_feedback_buffer_start : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TRANSFORM_FEEDBACK_BUFFER_START")
    let (transform_feedback_paused : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TRANSFORM_FEEDBACK_PAUSED")
    let (transform_feedback_primitives_written : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN")
    let (transform_feedback_varyings : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TRANSFORM_FEEDBACK_VARYINGS")
    let (uniform_array_stride : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNIFORM_ARRAY_STRIDE")
    let (uniform_block_active_uniforms : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNIFORM_BLOCK_ACTIVE_UNIFORMS")
    let (uniform_block_active_uniform_indices : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES")
    let (uniform_block_binding : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNIFORM_BLOCK_BINDING")
    let (uniform_block_data_size : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNIFORM_BLOCK_DATA_SIZE")
    let (uniform_block_index : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNIFORM_BLOCK_INDEX")
    let (uniform_block_referenced_by_fragment_shader : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER")
    let (uniform_block_referenced_by_vertex_shader : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER")
    let (uniform_buffer : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNIFORM_BUFFER")
    let (uniform_buffer_binding : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNIFORM_BUFFER_BINDING")
    let (uniform_buffer_offset_alignment : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNIFORM_BUFFER_OFFSET_ALIGNMENT")
    let (uniform_buffer_size : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNIFORM_BUFFER_SIZE")
    let (uniform_buffer_start : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNIFORM_BUFFER_START")
    let (uniform_is_row_major : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNIFORM_IS_ROW_MAJOR")
    let (uniform_matrix_stride : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNIFORM_MATRIX_STRIDE")
    let (uniform_offset : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNIFORM_OFFSET")
    let (uniform_size : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNIFORM_SIZE")
    let (uniform_type : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNIFORM_TYPE")
    let (unpack_image_height : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNPACK_IMAGE_HEIGHT")
    let (unpack_row_length : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNPACK_ROW_LENGTH")
    let (unpack_skip_images : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNPACK_SKIP_IMAGES")
    let (unpack_skip_pixels : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNPACK_SKIP_PIXELS")
    let (unpack_skip_rows : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNPACK_SKIP_ROWS")
    let (unsignaled : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNSIGNALED")
    let (unsigned_int_10f_11f_11f_rev : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNSIGNED_INT_10F_11F_11F_REV")
    let (unsigned_int_24_8 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNSIGNED_INT_24_8")
    let (unsigned_int_2_10_10_10_rev : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNSIGNED_INT_2_10_10_10_REV")
    let (unsigned_int_5_9_9_9_rev : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNSIGNED_INT_5_9_9_9_REV")
    let (unsigned_int_sampler_2d : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNSIGNED_INT_SAMPLER_2D")
    let (unsigned_int_sampler_2d_array : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNSIGNED_INT_SAMPLER_2D_ARRAY")
    let (unsigned_int_sampler_3d : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNSIGNED_INT_SAMPLER_3D")
    let (unsigned_int_sampler_cube : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNSIGNED_INT_SAMPLER_CUBE")
    let (unsigned_int_vec2 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNSIGNED_INT_VEC2")
    let (unsigned_int_vec3 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNSIGNED_INT_VEC3")
    let (unsigned_int_vec4 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNSIGNED_INT_VEC4")
    let (unsigned_normalized : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNSIGNED_NORMALIZED")
    let (vertex_array_binding : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "VERTEX_ARRAY_BINDING")
    let (vertex_attrib_array_divisor : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "VERTEX_ATTRIB_ARRAY_DIVISOR")
    let (vertex_attrib_array_integer : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "VERTEX_ATTRIB_ARRAY_INTEGER")
    let (wait_failed : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "WAIT_FAILED")
    let (active_attributes : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "ACTIVE_ATTRIBUTES")
    let (active_texture : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "ACTIVE_TEXTURE")
    let (active_uniforms : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "ACTIVE_UNIFORMS")
    let (aliased_line_width_range : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "ALIASED_LINE_WIDTH_RANGE")
    let (aliased_point_size_range : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "ALIASED_POINT_SIZE_RANGE")
    let (alpha : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "ALPHA")
    let (alpha_bits : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "ALPHA_BITS")
    let (always : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "ALWAYS")
    let (array_buffer : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "ARRAY_BUFFER")
    let (array_buffer_binding : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "ARRAY_BUFFER_BINDING")
    let (attached_shaders : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "ATTACHED_SHADERS")
    let (back : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "BACK")
    let (blend : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "BLEND")
    let (blend_color : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "BLEND_COLOR")
    let (blend_dst_alpha : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "BLEND_DST_ALPHA")
    let (blend_dst_rgb : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "BLEND_DST_RGB")
    let (blend_equation : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "BLEND_EQUATION")
    let (blend_equation_alpha : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "BLEND_EQUATION_ALPHA")
    let (blend_equation_rgb : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "BLEND_EQUATION_RGB")
    let (blend_src_alpha : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "BLEND_SRC_ALPHA")
    let (blend_src_rgb : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "BLEND_SRC_RGB")
    let (blue_bits : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "BLUE_BITS")
    let (bool : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "BOOL")
    let (bool_vec2 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "BOOL_VEC2")
    let (bool_vec3 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "BOOL_VEC3")
    let (bool_vec4 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "BOOL_VEC4")
    let (browser_default_webgl : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "BROWSER_DEFAULT_WEBGL")
    let (buffer_size : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "BUFFER_SIZE")
    let (buffer_usage : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "BUFFER_USAGE")
    let (byte : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "BYTE")
    let (ccw : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "CCW")
    let (clamp_to_edge : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "CLAMP_TO_EDGE")
    let (color_attachment0 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "COLOR_ATTACHMENT0")
    let (color_buffer_bit : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "COLOR_BUFFER_BIT")
    let (color_clear_value : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "COLOR_CLEAR_VALUE")
    let (color_writemask : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "COLOR_WRITEMASK")
    let (compile_status : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "COMPILE_STATUS")
    let (compressed_texture_formats : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "COMPRESSED_TEXTURE_FORMATS")
    let (constant_alpha : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "CONSTANT_ALPHA")
    let (constant_color : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "CONSTANT_COLOR")
    let (context_lost_webgl : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "CONTEXT_LOST_WEBGL")
    let (cull_face : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "CULL_FACE")
    let (cull_face_mode : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "CULL_FACE_MODE")
    let (current_program : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "CURRENT_PROGRAM")
    let (current_vertex_attrib : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "CURRENT_VERTEX_ATTRIB")
    let (cw : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "CW")
    let (decr : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "DECR")
    let (decr_wrap : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DECR_WRAP")
    let (delete_status : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DELETE_STATUS")
    let (depth_attachment : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DEPTH_ATTACHMENT")
    let (depth_bits : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DEPTH_BITS")
    let (depth_buffer_bit : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DEPTH_BUFFER_BIT")
    let (depth_clear_value : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DEPTH_CLEAR_VALUE")
    let (depth_component : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DEPTH_COMPONENT")
    let (depth_component16 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DEPTH_COMPONENT16")
    let (depth_func : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DEPTH_FUNC")
    let (depth_range : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DEPTH_RANGE")
    let (depth_stencil : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DEPTH_STENCIL")
    let (depth_stencil_attachment : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DEPTH_STENCIL_ATTACHMENT")
    let (depth_test : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DEPTH_TEST")
    let (depth_writemask : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DEPTH_WRITEMASK")
    let (dither : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DITHER")
    let (dont_care : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DONT_CARE")
    let (dst_alpha : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DST_ALPHA")
    let (dst_color : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DST_COLOR")
    let (dynamic_draw : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "DYNAMIC_DRAW")
    let (element_array_buffer : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "ELEMENT_ARRAY_BUFFER")
    let (element_array_buffer_binding : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "ELEMENT_ARRAY_BUFFER_BINDING")
    let (equal : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "EQUAL")
    let (fastest : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FASTEST")
    let (float : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "FLOAT")
    let (float_mat2 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FLOAT_MAT2")
    let (float_mat3 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FLOAT_MAT3")
    let (float_mat4 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FLOAT_MAT4")
    let (float_vec2 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FLOAT_VEC2")
    let (float_vec3 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FLOAT_VEC3")
    let (float_vec4 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FLOAT_VEC4")
    let (fragment_shader : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FRAGMENT_SHADER")
    let (framebuffer : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FRAMEBUFFER")
    let (framebuffer_attachment_object_name : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FRAMEBUFFER_ATTACHMENT_OBJECT_NAME")
    let (framebuffer_attachment_object_type : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE")
    let (framebuffer_attachment_texture_cube_map_face : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE")
    let (framebuffer_attachment_texture_level : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL")
    let (framebuffer_binding : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FRAMEBUFFER_BINDING")
    let (framebuffer_complete : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FRAMEBUFFER_COMPLETE")
    let (framebuffer_incomplete_attachment : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FRAMEBUFFER_INCOMPLETE_ATTACHMENT")
    let (framebuffer_incomplete_dimensions : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FRAMEBUFFER_INCOMPLETE_DIMENSIONS")
    let (framebuffer_incomplete_missing_attachment : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT")
    let (framebuffer_unsupported : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FRAMEBUFFER_UNSUPPORTED")
    let (front : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "FRONT")
    let (front_and_back : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FRONT_AND_BACK")
    let (front_face : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FRONT_FACE")
    let (func_add : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FUNC_ADD")
    let (func_reverse_subtract : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FUNC_REVERSE_SUBTRACT")
    let (func_subtract : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "FUNC_SUBTRACT")
    let (generate_mipmap_hint : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "GENERATE_MIPMAP_HINT")
    let (gequal : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "GEQUAL")
    let (greater : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "GREATER")
    let (green_bits : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "GREEN_BITS")
    let (high_float : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "HIGH_FLOAT")
    let (high_int : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "HIGH_INT")
    let (implementation_color_read_format : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "IMPLEMENTATION_COLOR_READ_FORMAT")
    let (implementation_color_read_type : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "IMPLEMENTATION_COLOR_READ_TYPE")
    let (incr : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "INCR")
    let (incr_wrap : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "INCR_WRAP")
    let (int : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "INT")
    let (int_vec2 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "INT_VEC2")
    let (int_vec3 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "INT_VEC3")
    let (int_vec4 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "INT_VEC4")
    let (invalid_enum : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "INVALID_ENUM")
    let (invalid_framebuffer_operation : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "INVALID_FRAMEBUFFER_OPERATION")
    let (invalid_operation : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "INVALID_OPERATION")
    let (invalid_value : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "INVALID_VALUE")
    let (invert : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "INVERT")
    let (keep : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "KEEP")
    let (lequal : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "LEQUAL")
    let (less : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "LESS")
    let (linear : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "LINEAR")
    let (linear_mipmap_linear : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "LINEAR_MIPMAP_LINEAR")
    let (linear_mipmap_nearest : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "LINEAR_MIPMAP_NEAREST")
    let (lines : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "LINES")
    let (line_loop : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "LINE_LOOP")
    let (line_strip : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "LINE_STRIP")
    let (line_width : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "LINE_WIDTH")
    let (link_status : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "LINK_STATUS")
    let (low_float : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "LOW_FLOAT")
    let (low_int : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "LOW_INT")
    let (luminance : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "LUMINANCE")
    let (luminance_alpha : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "LUMINANCE_ALPHA")
    let (max_combined_texture_image_units : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MAX_COMBINED_TEXTURE_IMAGE_UNITS")
    let (max_cube_map_texture_size : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MAX_CUBE_MAP_TEXTURE_SIZE")
    let (max_fragment_uniform_vectors : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MAX_FRAGMENT_UNIFORM_VECTORS")
    let (max_renderbuffer_size : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MAX_RENDERBUFFER_SIZE")
    let (max_texture_image_units : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MAX_TEXTURE_IMAGE_UNITS")
    let (max_texture_size : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MAX_TEXTURE_SIZE")
    let (max_varying_vectors : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MAX_VARYING_VECTORS")
    let (max_vertex_attribs : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MAX_VERTEX_ATTRIBS")
    let (max_vertex_texture_image_units : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MAX_VERTEX_TEXTURE_IMAGE_UNITS")
    let (max_vertex_uniform_vectors : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MAX_VERTEX_UNIFORM_VECTORS")
    let (max_viewport_dims : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MAX_VIEWPORT_DIMS")
    let (medium_float : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MEDIUM_FLOAT")
    let (medium_int : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MEDIUM_INT")
    let (mirrored_repeat : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "MIRRORED_REPEAT")
    let (nearest : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "NEAREST")
    let (nearest_mipmap_linear : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "NEAREST_MIPMAP_LINEAR")
    let (nearest_mipmap_nearest : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "NEAREST_MIPMAP_NEAREST")
    let (never : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "NEVER")
    let (nicest : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "NICEST")
    let (none : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "NONE")
    let (notequal : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "NOTEQUAL")
    let (no_error : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "NO_ERROR")
    let (one : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "ONE")
    let (one_minus_constant_alpha : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "ONE_MINUS_CONSTANT_ALPHA")
    let (one_minus_constant_color : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "ONE_MINUS_CONSTANT_COLOR")
    let (one_minus_dst_alpha : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "ONE_MINUS_DST_ALPHA")
    let (one_minus_dst_color : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "ONE_MINUS_DST_COLOR")
    let (one_minus_src_alpha : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "ONE_MINUS_SRC_ALPHA")
    let (one_minus_src_color : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "ONE_MINUS_SRC_COLOR")
    let (out_of_memory : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "OUT_OF_MEMORY")
    let (pack_alignment : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "PACK_ALIGNMENT")
    let (points : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "POINTS")
    let (polygon_offset_factor : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "POLYGON_OFFSET_FACTOR")
    let (polygon_offset_fill : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "POLYGON_OFFSET_FILL")
    let (polygon_offset_units : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "POLYGON_OFFSET_UNITS")
    let (red_bits : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RED_BITS")
    let (renderbuffer : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RENDERBUFFER")
    let (renderbuffer_alpha_size : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RENDERBUFFER_ALPHA_SIZE")
    let (renderbuffer_binding : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RENDERBUFFER_BINDING")
    let (renderbuffer_blue_size : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RENDERBUFFER_BLUE_SIZE")
    let (renderbuffer_depth_size : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RENDERBUFFER_DEPTH_SIZE")
    let (renderbuffer_green_size : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RENDERBUFFER_GREEN_SIZE")
    let (renderbuffer_height : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RENDERBUFFER_HEIGHT")
    let (renderbuffer_internal_format : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RENDERBUFFER_INTERNAL_FORMAT")
    let (renderbuffer_red_size : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RENDERBUFFER_RED_SIZE")
    let (renderbuffer_stencil_size : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RENDERBUFFER_STENCIL_SIZE")
    let (renderbuffer_width : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RENDERBUFFER_WIDTH")
    let (renderer : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RENDERER")
    let (repeat : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "REPEAT")
    let (replace : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "REPLACE")
    let (rgb : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "RGB")
    let (rgb565 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RGB565")
    let (rgb5_a1 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "RGB5_A1")
    let (rgba : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "RGBA")
    let (rgba4 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "RGBA4")
    let (sampler_2d : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "SAMPLER_2D")
    let (sampler_cube : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "SAMPLER_CUBE")
    let (samples : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "SAMPLES")
    let (sample_alpha_to_coverage : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "SAMPLE_ALPHA_TO_COVERAGE")
    let (sample_buffers : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "SAMPLE_BUFFERS")
    let (sample_coverage : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "SAMPLE_COVERAGE")
    let (sample_coverage_invert : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "SAMPLE_COVERAGE_INVERT")
    let (sample_coverage_value : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "SAMPLE_COVERAGE_VALUE")
    let (scissor_box : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "SCISSOR_BOX")
    let (scissor_test : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "SCISSOR_TEST")
    let (shader_type : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "SHADER_TYPE")
    let (shading_language_version : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "SHADING_LANGUAGE_VERSION")
    let (short : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "SHORT")
    let (src_alpha : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "SRC_ALPHA")
    let (src_alpha_saturate : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "SRC_ALPHA_SATURATE")
    let (src_color : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "SRC_COLOR")
    let (static_draw : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "STATIC_DRAW")
    let (stencil_attachment : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "STENCIL_ATTACHMENT")
    let (stencil_back_fail : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "STENCIL_BACK_FAIL")
    let (stencil_back_func : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "STENCIL_BACK_FUNC")
    let (stencil_back_pass_depth_fail : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "STENCIL_BACK_PASS_DEPTH_FAIL")
    let (stencil_back_pass_depth_pass : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "STENCIL_BACK_PASS_DEPTH_PASS")
    let (stencil_back_ref : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "STENCIL_BACK_REF")
    let (stencil_back_value_mask : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "STENCIL_BACK_VALUE_MASK")
    let (stencil_back_writemask : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "STENCIL_BACK_WRITEMASK")
    let (stencil_bits : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "STENCIL_BITS")
    let (stencil_buffer_bit : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "STENCIL_BUFFER_BIT")
    let (stencil_clear_value : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "STENCIL_CLEAR_VALUE")
    let (stencil_fail : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "STENCIL_FAIL")
    let (stencil_func : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "STENCIL_FUNC")
    let (stencil_index8 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "STENCIL_INDEX8")
    let (stencil_pass_depth_fail : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "STENCIL_PASS_DEPTH_FAIL")
    let (stencil_pass_depth_pass : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "STENCIL_PASS_DEPTH_PASS")
    let (stencil_ref : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "STENCIL_REF")
    let (stencil_test : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "STENCIL_TEST")
    let (stencil_value_mask : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "STENCIL_VALUE_MASK")
    let (stencil_writemask : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "STENCIL_WRITEMASK")
    let (stream_draw : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "STREAM_DRAW")
    let (subpixel_bits : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "SUBPIXEL_BITS")
    let (texture : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE")
    let (texture0 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE0")
    let (texture1 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE1")
    let (texture10 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE10")
    let (texture11 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE11")
    let (texture12 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE12")
    let (texture13 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE13")
    let (texture14 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE14")
    let (texture15 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE15")
    let (texture16 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE16")
    let (texture17 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE17")
    let (texture18 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE18")
    let (texture19 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE19")
    let (texture2 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE2")
    let (texture20 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE20")
    let (texture21 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE21")
    let (texture22 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE22")
    let (texture23 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE23")
    let (texture24 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE24")
    let (texture25 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE25")
    let (texture26 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE26")
    let (texture27 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE27")
    let (texture28 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE28")
    let (texture29 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE29")
    let (texture3 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE3")
    let (texture30 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE30")
    let (texture31 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE31")
    let (texture4 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE4")
    let (texture5 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE5")
    let (texture6 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE6")
    let (texture7 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE7")
    let (texture8 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE8")
    let (texture9 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE9")
    let (texture_2d : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE_2D")
    let (texture_binding_2d : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE_BINDING_2D")
    let (texture_binding_cube_map : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE_BINDING_CUBE_MAP")
    let (texture_cube_map : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE_CUBE_MAP")
    let (texture_cube_map_negative_x : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE_CUBE_MAP_NEGATIVE_X")
    let (texture_cube_map_negative_y : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE_CUBE_MAP_NEGATIVE_Y")
    let (texture_cube_map_negative_z : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE_CUBE_MAP_NEGATIVE_Z")
    let (texture_cube_map_positive_x : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE_CUBE_MAP_POSITIVE_X")
    let (texture_cube_map_positive_y : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE_CUBE_MAP_POSITIVE_Y")
    let (texture_cube_map_positive_z : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE_CUBE_MAP_POSITIVE_Z")
    let (texture_mag_filter : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE_MAG_FILTER")
    let (texture_min_filter : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE_MIN_FILTER")
    let (texture_wrap_s : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE_WRAP_S")
    let (texture_wrap_t : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TEXTURE_WRAP_T")
    let (triangles : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TRIANGLES")
    let (triangle_fan : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TRIANGLE_FAN")
    let (triangle_strip : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "TRIANGLE_STRIP")
    let (unpack_alignment : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNPACK_ALIGNMENT")
    let (unpack_colorspace_conversion_webgl : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNPACK_COLORSPACE_CONVERSION_WEBGL")
    let (unpack_flip_y_webgl : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNPACK_FLIP_Y_WEBGL")
    let (unpack_premultiply_alpha_webgl : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNPACK_PREMULTIPLY_ALPHA_WEBGL")
    let (unsigned_byte : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNSIGNED_BYTE")
    let (unsigned_int : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNSIGNED_INT")
    let (unsigned_short : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNSIGNED_SHORT")
    let (unsigned_short_4_4_4_4 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNSIGNED_SHORT_4_4_4_4")
    let (unsigned_short_5_5_5_1 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNSIGNED_SHORT_5_5_5_1")
    let (unsigned_short_5_6_5 : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "UNSIGNED_SHORT_5_6_5")
    let (validate_status : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "VALIDATE_STATUS")
    let (vendor : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "VENDOR")
    let (version : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "VERSION")
    let (vertex_attrib_array_buffer_binding : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "VERTEX_ATTRIB_ARRAY_BUFFER_BINDING")
    let (vertex_attrib_array_enabled : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "VERTEX_ATTRIB_ARRAY_ENABLED")
    let (vertex_attrib_array_normalized : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "VERTEX_ATTRIB_ARRAY_NORMALIZED")
    let (vertex_attrib_array_pointer : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "VERTEX_ATTRIB_ARRAY_POINTER")
    let (vertex_attrib_array_size : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "VERTEX_ATTRIB_ARRAY_SIZE")
    let (vertex_attrib_array_stride : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "VERTEX_ATTRIB_ARRAY_STRIDE")
    let (vertex_attrib_array_type : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "VERTEX_ATTRIB_ARRAY_TYPE")
    let (vertex_shader : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "VERTEX_SHADER")
    let (viewport : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
             "VIEWPORT")
    let (zero : unit -> GLenum.t) =
      fun () ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext") "ZERO")
  end
module AnonymousInterface111 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x15300 : Ojs.t) -> x15300
    and t_to_js : t -> Ojs.t = fun (x15299 : Ojs.t) -> x15299
    let (get_prototype : t -> WebGL2RenderingContext.t) =
      fun (x15301 : t) ->
        WebGL2RenderingContext.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15301) "prototype")
    let (set_prototype : t -> WebGL2RenderingContext.t -> unit) =
      fun (x15302 : t) ->
        fun (x15303 : WebGL2RenderingContext.t) ->
          Ojs.set_prop_ascii (t_to_js x15302) "prototype"
            (WebGL2RenderingContext.t_to_js x15303)
    let (create : t -> WebGL2RenderingContext.t) =
      fun (x15304 : t) ->
        WebGL2RenderingContext.t_of_js (Ojs.new_obj (t_to_js x15304) [||])
    let (get_ACTIVE_UNIFORM_BLOCKS : t -> GLenum.t) =
      fun (x15305 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15305) "ACTIVE_UNIFORM_BLOCKS")
    let (get_ALREADY_SIGNALED : t -> GLenum.t) =
      fun (x15306 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15306) "ALREADY_SIGNALED")
    let (get_ANY_SAMPLES_PASSED : t -> GLenum.t) =
      fun (x15307 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15307) "ANY_SAMPLES_PASSED")
    let (get_ANY_SAMPLES_PASSED_CONSERVATIVE : t -> GLenum.t) =
      fun (x15308 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15308)
             "ANY_SAMPLES_PASSED_CONSERVATIVE")
    let (get_COLOR : t -> GLenum.t) =
      fun (x15309 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15309) "COLOR")
    let (get_COLOR_ATTACHMENT1 : t -> GLenum.t) =
      fun (x15310 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15310) "COLOR_ATTACHMENT1")
    let (get_COLOR_ATTACHMENT10 : t -> GLenum.t) =
      fun (x15311 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15311) "COLOR_ATTACHMENT10")
    let (get_COLOR_ATTACHMENT11 : t -> GLenum.t) =
      fun (x15312 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15312) "COLOR_ATTACHMENT11")
    let (get_COLOR_ATTACHMENT12 : t -> GLenum.t) =
      fun (x15313 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15313) "COLOR_ATTACHMENT12")
    let (get_COLOR_ATTACHMENT13 : t -> GLenum.t) =
      fun (x15314 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15314) "COLOR_ATTACHMENT13")
    let (get_COLOR_ATTACHMENT14 : t -> GLenum.t) =
      fun (x15315 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15315) "COLOR_ATTACHMENT14")
    let (get_COLOR_ATTACHMENT15 : t -> GLenum.t) =
      fun (x15316 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15316) "COLOR_ATTACHMENT15")
    let (get_COLOR_ATTACHMENT2 : t -> GLenum.t) =
      fun (x15317 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15317) "COLOR_ATTACHMENT2")
    let (get_COLOR_ATTACHMENT3 : t -> GLenum.t) =
      fun (x15318 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15318) "COLOR_ATTACHMENT3")
    let (get_COLOR_ATTACHMENT4 : t -> GLenum.t) =
      fun (x15319 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15319) "COLOR_ATTACHMENT4")
    let (get_COLOR_ATTACHMENT5 : t -> GLenum.t) =
      fun (x15320 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15320) "COLOR_ATTACHMENT5")
    let (get_COLOR_ATTACHMENT6 : t -> GLenum.t) =
      fun (x15321 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15321) "COLOR_ATTACHMENT6")
    let (get_COLOR_ATTACHMENT7 : t -> GLenum.t) =
      fun (x15322 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15322) "COLOR_ATTACHMENT7")
    let (get_COLOR_ATTACHMENT8 : t -> GLenum.t) =
      fun (x15323 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15323) "COLOR_ATTACHMENT8")
    let (get_COLOR_ATTACHMENT9 : t -> GLenum.t) =
      fun (x15324 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15324) "COLOR_ATTACHMENT9")
    let (get_COMPARE_REF_TO_TEXTURE : t -> GLenum.t) =
      fun (x15325 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15325) "COMPARE_REF_TO_TEXTURE")
    let (get_CONDITION_SATISFIED : t -> GLenum.t) =
      fun (x15326 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15326) "CONDITION_SATISFIED")
    let (get_COPY_READ_BUFFER : t -> GLenum.t) =
      fun (x15327 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15327) "COPY_READ_BUFFER")
    let (get_COPY_READ_BUFFER_BINDING : t -> GLenum.t) =
      fun (x15328 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15328) "COPY_READ_BUFFER_BINDING")
    let (get_COPY_WRITE_BUFFER : t -> GLenum.t) =
      fun (x15329 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15329) "COPY_WRITE_BUFFER")
    let (get_COPY_WRITE_BUFFER_BINDING : t -> GLenum.t) =
      fun (x15330 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15330) "COPY_WRITE_BUFFER_BINDING")
    let (get_CURRENT_QUERY : t -> GLenum.t) =
      fun (x15331 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15331) "CURRENT_QUERY")
    let (get_DEPTH : t -> GLenum.t) =
      fun (x15332 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15332) "DEPTH")
    let (get_DEPTH24_STENCIL8 : t -> GLenum.t) =
      fun (x15333 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15333) "DEPTH24_STENCIL8")
    let (get_DEPTH32F_STENCIL8 : t -> GLenum.t) =
      fun (x15334 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15334) "DEPTH32F_STENCIL8")
    let (get_DEPTH_COMPONENT24 : t -> GLenum.t) =
      fun (x15335 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15335) "DEPTH_COMPONENT24")
    let (get_DEPTH_COMPONENT32F : t -> GLenum.t) =
      fun (x15336 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15336) "DEPTH_COMPONENT32F")
    let (get_DRAW_BUFFER0 : t -> GLenum.t) =
      fun (x15337 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15337) "DRAW_BUFFER0")
    let (get_DRAW_BUFFER1 : t -> GLenum.t) =
      fun (x15338 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15338) "DRAW_BUFFER1")
    let (get_DRAW_BUFFER10 : t -> GLenum.t) =
      fun (x15339 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15339) "DRAW_BUFFER10")
    let (get_DRAW_BUFFER11 : t -> GLenum.t) =
      fun (x15340 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15340) "DRAW_BUFFER11")
    let (get_DRAW_BUFFER12 : t -> GLenum.t) =
      fun (x15341 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15341) "DRAW_BUFFER12")
    let (get_DRAW_BUFFER13 : t -> GLenum.t) =
      fun (x15342 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15342) "DRAW_BUFFER13")
    let (get_DRAW_BUFFER14 : t -> GLenum.t) =
      fun (x15343 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15343) "DRAW_BUFFER14")
    let (get_DRAW_BUFFER15 : t -> GLenum.t) =
      fun (x15344 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15344) "DRAW_BUFFER15")
    let (get_DRAW_BUFFER2 : t -> GLenum.t) =
      fun (x15345 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15345) "DRAW_BUFFER2")
    let (get_DRAW_BUFFER3 : t -> GLenum.t) =
      fun (x15346 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15346) "DRAW_BUFFER3")
    let (get_DRAW_BUFFER4 : t -> GLenum.t) =
      fun (x15347 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15347) "DRAW_BUFFER4")
    let (get_DRAW_BUFFER5 : t -> GLenum.t) =
      fun (x15348 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15348) "DRAW_BUFFER5")
    let (get_DRAW_BUFFER6 : t -> GLenum.t) =
      fun (x15349 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15349) "DRAW_BUFFER6")
    let (get_DRAW_BUFFER7 : t -> GLenum.t) =
      fun (x15350 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15350) "DRAW_BUFFER7")
    let (get_DRAW_BUFFER8 : t -> GLenum.t) =
      fun (x15351 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15351) "DRAW_BUFFER8")
    let (get_DRAW_BUFFER9 : t -> GLenum.t) =
      fun (x15352 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15352) "DRAW_BUFFER9")
    let (get_DRAW_FRAMEBUFFER : t -> GLenum.t) =
      fun (x15353 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15353) "DRAW_FRAMEBUFFER")
    let (get_DRAW_FRAMEBUFFER_BINDING : t -> GLenum.t) =
      fun (x15354 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15354) "DRAW_FRAMEBUFFER_BINDING")
    let (get_DYNAMIC_COPY : t -> GLenum.t) =
      fun (x15355 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15355) "DYNAMIC_COPY")
    let (get_DYNAMIC_READ : t -> GLenum.t) =
      fun (x15356 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15356) "DYNAMIC_READ")
    let (get_FLOAT_32_UNSIGNED_INT_24_8_REV : t -> GLenum.t) =
      fun (x15357 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15357)
             "FLOAT_32_UNSIGNED_INT_24_8_REV")
    let (get_FLOAT_MAT2x3 : t -> GLenum.t) =
      fun (x15358 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15358) "FLOAT_MAT2x3")
    let (get_FLOAT_MAT2x4 : t -> GLenum.t) =
      fun (x15359 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15359) "FLOAT_MAT2x4")
    let (get_FLOAT_MAT3x2 : t -> GLenum.t) =
      fun (x15360 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15360) "FLOAT_MAT3x2")
    let (get_FLOAT_MAT3x4 : t -> GLenum.t) =
      fun (x15361 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15361) "FLOAT_MAT3x4")
    let (get_FLOAT_MAT4x2 : t -> GLenum.t) =
      fun (x15362 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15362) "FLOAT_MAT4x2")
    let (get_FLOAT_MAT4x3 : t -> GLenum.t) =
      fun (x15363 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15363) "FLOAT_MAT4x3")
    let (get_FRAGMENT_SHADER_DERIVATIVE_HINT : t -> GLenum.t) =
      fun (x15364 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15364)
             "FRAGMENT_SHADER_DERIVATIVE_HINT")
    let (get_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE : t -> GLenum.t) =
      fun (x15365 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15365)
             "FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE")
    let (get_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE : t -> GLenum.t) =
      fun (x15366 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15366)
             "FRAMEBUFFER_ATTACHMENT_BLUE_SIZE")
    let (get_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING : t -> GLenum.t) =
      fun (x15367 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15367)
             "FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING")
    let (get_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE : t -> GLenum.t) =
      fun (x15368 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15368)
             "FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE")
    let (get_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE : t -> GLenum.t) =
      fun (x15369 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15369)
             "FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE")
    let (get_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE : t -> GLenum.t) =
      fun (x15370 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15370)
             "FRAMEBUFFER_ATTACHMENT_GREEN_SIZE")
    let (get_FRAMEBUFFER_ATTACHMENT_RED_SIZE : t -> GLenum.t) =
      fun (x15371 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15371)
             "FRAMEBUFFER_ATTACHMENT_RED_SIZE")
    let (get_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE : t -> GLenum.t) =
      fun (x15372 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15372)
             "FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE")
    let (get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER : t -> GLenum.t) =
      fun (x15373 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15373)
             "FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER")
    let (get_FRAMEBUFFER_DEFAULT : t -> GLenum.t) =
      fun (x15374 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15374) "FRAMEBUFFER_DEFAULT")
    let (get_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE : t -> GLenum.t) =
      fun (x15375 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15375)
             "FRAMEBUFFER_INCOMPLETE_MULTISAMPLE")
    let (get_HALF_FLOAT : t -> GLenum.t) =
      fun (x15376 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15376) "HALF_FLOAT")
    let (get_INTERLEAVED_ATTRIBS : t -> GLenum.t) =
      fun (x15377 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15377) "INTERLEAVED_ATTRIBS")
    let (get_INT_2_10_10_10_REV : t -> GLenum.t) =
      fun (x15378 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15378) "INT_2_10_10_10_REV")
    let (get_INT_SAMPLER_2D : t -> GLenum.t) =
      fun (x15379 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15379) "INT_SAMPLER_2D")
    let (get_INT_SAMPLER_2D_ARRAY : t -> GLenum.t) =
      fun (x15380 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15380) "INT_SAMPLER_2D_ARRAY")
    let (get_INT_SAMPLER_3D : t -> GLenum.t) =
      fun (x15381 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15381) "INT_SAMPLER_3D")
    let (get_INT_SAMPLER_CUBE : t -> GLenum.t) =
      fun (x15382 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15382) "INT_SAMPLER_CUBE")
    let (get_INVALID_INDEX : t -> GLenum.t) =
      fun (x15383 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15383) "INVALID_INDEX")
    let (get_MAX : t -> GLenum.t) =
      fun (x15384 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15384) "MAX")
    let (get_MAX_3D_TEXTURE_SIZE : t -> GLenum.t) =
      fun (x15385 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15385) "MAX_3D_TEXTURE_SIZE")
    let (get_MAX_ARRAY_TEXTURE_LAYERS : t -> GLenum.t) =
      fun (x15386 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15386) "MAX_ARRAY_TEXTURE_LAYERS")
    let (get_MAX_CLIENT_WAIT_TIMEOUT_WEBGL : t -> GLenum.t) =
      fun (x15387 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15387)
             "MAX_CLIENT_WAIT_TIMEOUT_WEBGL")
    let (get_MAX_COLOR_ATTACHMENTS : t -> GLenum.t) =
      fun (x15388 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15388) "MAX_COLOR_ATTACHMENTS")
    let (get_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS : t -> GLenum.t) =
      fun (x15389 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15389)
             "MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS")
    let (get_MAX_COMBINED_UNIFORM_BLOCKS : t -> GLenum.t) =
      fun (x15390 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15390) "MAX_COMBINED_UNIFORM_BLOCKS")
    let (get_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS : t -> GLenum.t) =
      fun (x15391 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15391)
             "MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS")
    let (get_MAX_DRAW_BUFFERS : t -> GLenum.t) =
      fun (x15392 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15392) "MAX_DRAW_BUFFERS")
    let (get_MAX_ELEMENTS_INDICES : t -> GLenum.t) =
      fun (x15393 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15393) "MAX_ELEMENTS_INDICES")
    let (get_MAX_ELEMENTS_VERTICES : t -> GLenum.t) =
      fun (x15394 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15394) "MAX_ELEMENTS_VERTICES")
    let (get_MAX_ELEMENT_INDEX : t -> GLenum.t) =
      fun (x15395 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15395) "MAX_ELEMENT_INDEX")
    let (get_MAX_FRAGMENT_INPUT_COMPONENTS : t -> GLenum.t) =
      fun (x15396 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15396)
             "MAX_FRAGMENT_INPUT_COMPONENTS")
    let (get_MAX_FRAGMENT_UNIFORM_BLOCKS : t -> GLenum.t) =
      fun (x15397 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15397) "MAX_FRAGMENT_UNIFORM_BLOCKS")
    let (get_MAX_FRAGMENT_UNIFORM_COMPONENTS : t -> GLenum.t) =
      fun (x15398 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15398)
             "MAX_FRAGMENT_UNIFORM_COMPONENTS")
    let (get_MAX_PROGRAM_TEXEL_OFFSET : t -> GLenum.t) =
      fun (x15399 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15399) "MAX_PROGRAM_TEXEL_OFFSET")
    let (get_MAX_SAMPLES : t -> GLenum.t) =
      fun (x15400 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15400) "MAX_SAMPLES")
    let (get_MAX_SERVER_WAIT_TIMEOUT : t -> GLenum.t) =
      fun (x15401 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15401) "MAX_SERVER_WAIT_TIMEOUT")
    let (get_MAX_TEXTURE_LOD_BIAS : t -> GLenum.t) =
      fun (x15402 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15402) "MAX_TEXTURE_LOD_BIAS")
    let (get_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS : t -> GLenum.t) =
      fun (x15403 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15403)
             "MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS")
    let (get_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS : t -> GLenum.t) =
      fun (x15404 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15404)
             "MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS")
    let (get_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS : t -> GLenum.t) =
      fun (x15405 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15405)
             "MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS")
    let (get_MAX_UNIFORM_BLOCK_SIZE : t -> GLenum.t) =
      fun (x15406 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15406) "MAX_UNIFORM_BLOCK_SIZE")
    let (get_MAX_UNIFORM_BUFFER_BINDINGS : t -> GLenum.t) =
      fun (x15407 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15407) "MAX_UNIFORM_BUFFER_BINDINGS")
    let (get_MAX_VARYING_COMPONENTS : t -> GLenum.t) =
      fun (x15408 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15408) "MAX_VARYING_COMPONENTS")
    let (get_MAX_VERTEX_OUTPUT_COMPONENTS : t -> GLenum.t) =
      fun (x15409 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15409) "MAX_VERTEX_OUTPUT_COMPONENTS")
    let (get_MAX_VERTEX_UNIFORM_BLOCKS : t -> GLenum.t) =
      fun (x15410 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15410) "MAX_VERTEX_UNIFORM_BLOCKS")
    let (get_MAX_VERTEX_UNIFORM_COMPONENTS : t -> GLenum.t) =
      fun (x15411 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15411)
             "MAX_VERTEX_UNIFORM_COMPONENTS")
    let (get_MIN : t -> GLenum.t) =
      fun (x15412 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15412) "MIN")
    let (get_MIN_PROGRAM_TEXEL_OFFSET : t -> GLenum.t) =
      fun (x15413 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15413) "MIN_PROGRAM_TEXEL_OFFSET")
    let (get_OBJECT_TYPE : t -> GLenum.t) =
      fun (x15414 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15414) "OBJECT_TYPE")
    let (get_PACK_ROW_LENGTH : t -> GLenum.t) =
      fun (x15415 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15415) "PACK_ROW_LENGTH")
    let (get_PACK_SKIP_PIXELS : t -> GLenum.t) =
      fun (x15416 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15416) "PACK_SKIP_PIXELS")
    let (get_PACK_SKIP_ROWS : t -> GLenum.t) =
      fun (x15417 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15417) "PACK_SKIP_ROWS")
    let (get_PIXEL_PACK_BUFFER : t -> GLenum.t) =
      fun (x15418 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15418) "PIXEL_PACK_BUFFER")
    let (get_PIXEL_PACK_BUFFER_BINDING : t -> GLenum.t) =
      fun (x15419 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15419) "PIXEL_PACK_BUFFER_BINDING")
    let (get_PIXEL_UNPACK_BUFFER : t -> GLenum.t) =
      fun (x15420 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15420) "PIXEL_UNPACK_BUFFER")
    let (get_PIXEL_UNPACK_BUFFER_BINDING : t -> GLenum.t) =
      fun (x15421 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15421) "PIXEL_UNPACK_BUFFER_BINDING")
    let (get_QUERY_RESULT : t -> GLenum.t) =
      fun (x15422 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15422) "QUERY_RESULT")
    let (get_QUERY_RESULT_AVAILABLE : t -> GLenum.t) =
      fun (x15423 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15423) "QUERY_RESULT_AVAILABLE")
    let (get_R11F_G11F_B10F : t -> GLenum.t) =
      fun (x15424 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15424) "R11F_G11F_B10F")
    let (get_R16F : t -> GLenum.t) =
      fun (x15425 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15425) "R16F")
    let (get_R16I : t -> GLenum.t) =
      fun (x15426 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15426) "R16I")
    let (get_R16UI : t -> GLenum.t) =
      fun (x15427 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15427) "R16UI")
    let (get_R32F : t -> GLenum.t) =
      fun (x15428 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15428) "R32F")
    let (get_R32I : t -> GLenum.t) =
      fun (x15429 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15429) "R32I")
    let (get_R32UI : t -> GLenum.t) =
      fun (x15430 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15430) "R32UI")
    let (get_R8 : t -> GLenum.t) =
      fun (x15431 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15431) "R8")
    let (get_R8I : t -> GLenum.t) =
      fun (x15432 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15432) "R8I")
    let (get_R8UI : t -> GLenum.t) =
      fun (x15433 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15433) "R8UI")
    let (get_R8_SNORM : t -> GLenum.t) =
      fun (x15434 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15434) "R8_SNORM")
    let (get_RASTERIZER_DISCARD : t -> GLenum.t) =
      fun (x15435 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15435) "RASTERIZER_DISCARD")
    let (get_READ_BUFFER : t -> GLenum.t) =
      fun (x15436 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15436) "READ_BUFFER")
    let (get_READ_FRAMEBUFFER : t -> GLenum.t) =
      fun (x15437 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15437) "READ_FRAMEBUFFER")
    let (get_READ_FRAMEBUFFER_BINDING : t -> GLenum.t) =
      fun (x15438 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15438) "READ_FRAMEBUFFER_BINDING")
    let (get_RED : t -> GLenum.t) =
      fun (x15439 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15439) "RED")
    let (get_RED_INTEGER : t -> GLenum.t) =
      fun (x15440 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15440) "RED_INTEGER")
    let (get_RENDERBUFFER_SAMPLES : t -> GLenum.t) =
      fun (x15441 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15441) "RENDERBUFFER_SAMPLES")
    let (get_RG : t -> GLenum.t) =
      fun (x15442 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15442) "RG")
    let (get_RG16F : t -> GLenum.t) =
      fun (x15443 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15443) "RG16F")
    let (get_RG16I : t -> GLenum.t) =
      fun (x15444 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15444) "RG16I")
    let (get_RG16UI : t -> GLenum.t) =
      fun (x15445 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15445) "RG16UI")
    let (get_RG32F : t -> GLenum.t) =
      fun (x15446 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15446) "RG32F")
    let (get_RG32I : t -> GLenum.t) =
      fun (x15447 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15447) "RG32I")
    let (get_RG32UI : t -> GLenum.t) =
      fun (x15448 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15448) "RG32UI")
    let (get_RG8 : t -> GLenum.t) =
      fun (x15449 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15449) "RG8")
    let (get_RG8I : t -> GLenum.t) =
      fun (x15450 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15450) "RG8I")
    let (get_RG8UI : t -> GLenum.t) =
      fun (x15451 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15451) "RG8UI")
    let (get_RG8_SNORM : t -> GLenum.t) =
      fun (x15452 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15452) "RG8_SNORM")
    let (get_RGB10_A2 : t -> GLenum.t) =
      fun (x15453 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15453) "RGB10_A2")
    let (get_RGB10_A2UI : t -> GLenum.t) =
      fun (x15454 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15454) "RGB10_A2UI")
    let (get_RGB16F : t -> GLenum.t) =
      fun (x15455 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15455) "RGB16F")
    let (get_RGB16I : t -> GLenum.t) =
      fun (x15456 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15456) "RGB16I")
    let (get_RGB16UI : t -> GLenum.t) =
      fun (x15457 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15457) "RGB16UI")
    let (get_RGB32F : t -> GLenum.t) =
      fun (x15458 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15458) "RGB32F")
    let (get_RGB32I : t -> GLenum.t) =
      fun (x15459 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15459) "RGB32I")
    let (get_RGB32UI : t -> GLenum.t) =
      fun (x15460 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15460) "RGB32UI")
    let (get_RGB8 : t -> GLenum.t) =
      fun (x15461 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15461) "RGB8")
    let (get_RGB8I : t -> GLenum.t) =
      fun (x15462 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15462) "RGB8I")
    let (get_RGB8UI : t -> GLenum.t) =
      fun (x15463 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15463) "RGB8UI")
    let (get_RGB8_SNORM : t -> GLenum.t) =
      fun (x15464 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15464) "RGB8_SNORM")
    let (get_RGB9_E5 : t -> GLenum.t) =
      fun (x15465 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15465) "RGB9_E5")
    let (get_RGBA16F : t -> GLenum.t) =
      fun (x15466 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15466) "RGBA16F")
    let (get_RGBA16I : t -> GLenum.t) =
      fun (x15467 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15467) "RGBA16I")
    let (get_RGBA16UI : t -> GLenum.t) =
      fun (x15468 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15468) "RGBA16UI")
    let (get_RGBA32F : t -> GLenum.t) =
      fun (x15469 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15469) "RGBA32F")
    let (get_RGBA32I : t -> GLenum.t) =
      fun (x15470 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15470) "RGBA32I")
    let (get_RGBA32UI : t -> GLenum.t) =
      fun (x15471 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15471) "RGBA32UI")
    let (get_RGBA8 : t -> GLenum.t) =
      fun (x15472 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15472) "RGBA8")
    let (get_RGBA8I : t -> GLenum.t) =
      fun (x15473 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15473) "RGBA8I")
    let (get_RGBA8UI : t -> GLenum.t) =
      fun (x15474 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15474) "RGBA8UI")
    let (get_RGBA8_SNORM : t -> GLenum.t) =
      fun (x15475 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15475) "RGBA8_SNORM")
    let (get_RGBA_INTEGER : t -> GLenum.t) =
      fun (x15476 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15476) "RGBA_INTEGER")
    let (get_RGB_INTEGER : t -> GLenum.t) =
      fun (x15477 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15477) "RGB_INTEGER")
    let (get_RG_INTEGER : t -> GLenum.t) =
      fun (x15478 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15478) "RG_INTEGER")
    let (get_SAMPLER_2D_ARRAY : t -> GLenum.t) =
      fun (x15479 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15479) "SAMPLER_2D_ARRAY")
    let (get_SAMPLER_2D_ARRAY_SHADOW : t -> GLenum.t) =
      fun (x15480 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15480) "SAMPLER_2D_ARRAY_SHADOW")
    let (get_SAMPLER_2D_SHADOW : t -> GLenum.t) =
      fun (x15481 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15481) "SAMPLER_2D_SHADOW")
    let (get_SAMPLER_3D : t -> GLenum.t) =
      fun (x15482 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15482) "SAMPLER_3D")
    let (get_SAMPLER_BINDING : t -> GLenum.t) =
      fun (x15483 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15483) "SAMPLER_BINDING")
    let (get_SAMPLER_CUBE_SHADOW : t -> GLenum.t) =
      fun (x15484 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15484) "SAMPLER_CUBE_SHADOW")
    let (get_SEPARATE_ATTRIBS : t -> GLenum.t) =
      fun (x15485 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15485) "SEPARATE_ATTRIBS")
    let (get_SIGNALED : t -> GLenum.t) =
      fun (x15486 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15486) "SIGNALED")
    let (get_SIGNED_NORMALIZED : t -> GLenum.t) =
      fun (x15487 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15487) "SIGNED_NORMALIZED")
    let (get_SRGB : t -> GLenum.t) =
      fun (x15488 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15488) "SRGB")
    let (get_SRGB8 : t -> GLenum.t) =
      fun (x15489 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15489) "SRGB8")
    let (get_SRGB8_ALPHA8 : t -> GLenum.t) =
      fun (x15490 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15490) "SRGB8_ALPHA8")
    let (get_STATIC_COPY : t -> GLenum.t) =
      fun (x15491 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15491) "STATIC_COPY")
    let (get_STATIC_READ : t -> GLenum.t) =
      fun (x15492 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15492) "STATIC_READ")
    let (get_STENCIL : t -> GLenum.t) =
      fun (x15493 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15493) "STENCIL")
    let (get_STREAM_COPY : t -> GLenum.t) =
      fun (x15494 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15494) "STREAM_COPY")
    let (get_STREAM_READ : t -> GLenum.t) =
      fun (x15495 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15495) "STREAM_READ")
    let (get_SYNC_CONDITION : t -> GLenum.t) =
      fun (x15496 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15496) "SYNC_CONDITION")
    let (get_SYNC_FENCE : t -> GLenum.t) =
      fun (x15497 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15497) "SYNC_FENCE")
    let (get_SYNC_FLAGS : t -> GLenum.t) =
      fun (x15498 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15498) "SYNC_FLAGS")
    let (get_SYNC_FLUSH_COMMANDS_BIT : t -> GLenum.t) =
      fun (x15499 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15499) "SYNC_FLUSH_COMMANDS_BIT")
    let (get_SYNC_GPU_COMMANDS_COMPLETE : t -> GLenum.t) =
      fun (x15500 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15500) "SYNC_GPU_COMMANDS_COMPLETE")
    let (get_SYNC_STATUS : t -> GLenum.t) =
      fun (x15501 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15501) "SYNC_STATUS")
    let (get_TEXTURE_2D_ARRAY : t -> GLenum.t) =
      fun (x15502 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15502) "TEXTURE_2D_ARRAY")
    let (get_TEXTURE_3D : t -> GLenum.t) =
      fun (x15503 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15503) "TEXTURE_3D")
    let (get_TEXTURE_BASE_LEVEL : t -> GLenum.t) =
      fun (x15504 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15504) "TEXTURE_BASE_LEVEL")
    let (get_TEXTURE_BINDING_2D_ARRAY : t -> GLenum.t) =
      fun (x15505 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15505) "TEXTURE_BINDING_2D_ARRAY")
    let (get_TEXTURE_BINDING_3D : t -> GLenum.t) =
      fun (x15506 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15506) "TEXTURE_BINDING_3D")
    let (get_TEXTURE_COMPARE_FUNC : t -> GLenum.t) =
      fun (x15507 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15507) "TEXTURE_COMPARE_FUNC")
    let (get_TEXTURE_COMPARE_MODE : t -> GLenum.t) =
      fun (x15508 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15508) "TEXTURE_COMPARE_MODE")
    let (get_TEXTURE_IMMUTABLE_FORMAT : t -> GLenum.t) =
      fun (x15509 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15509) "TEXTURE_IMMUTABLE_FORMAT")
    let (get_TEXTURE_IMMUTABLE_LEVELS : t -> GLenum.t) =
      fun (x15510 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15510) "TEXTURE_IMMUTABLE_LEVELS")
    let (get_TEXTURE_MAX_LEVEL : t -> GLenum.t) =
      fun (x15511 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15511) "TEXTURE_MAX_LEVEL")
    let (get_TEXTURE_MAX_LOD : t -> GLenum.t) =
      fun (x15512 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15512) "TEXTURE_MAX_LOD")
    let (get_TEXTURE_MIN_LOD : t -> GLenum.t) =
      fun (x15513 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15513) "TEXTURE_MIN_LOD")
    let (get_TEXTURE_WRAP_R : t -> GLenum.t) =
      fun (x15514 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15514) "TEXTURE_WRAP_R")
    let (get_TIMEOUT_EXPIRED : t -> GLenum.t) =
      fun (x15515 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15515) "TIMEOUT_EXPIRED")
    let (get_TIMEOUT_IGNORED : t -> GLint64.t) =
      fun (x15516 : t) ->
        GLint64.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15516) "TIMEOUT_IGNORED")
    let (get_TRANSFORM_FEEDBACK : t -> GLenum.t) =
      fun (x15517 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15517) "TRANSFORM_FEEDBACK")
    let (get_TRANSFORM_FEEDBACK_ACTIVE : t -> GLenum.t) =
      fun (x15518 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15518) "TRANSFORM_FEEDBACK_ACTIVE")
    let (get_TRANSFORM_FEEDBACK_BINDING : t -> GLenum.t) =
      fun (x15519 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15519) "TRANSFORM_FEEDBACK_BINDING")
    let (get_TRANSFORM_FEEDBACK_BUFFER : t -> GLenum.t) =
      fun (x15520 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15520) "TRANSFORM_FEEDBACK_BUFFER")
    let (get_TRANSFORM_FEEDBACK_BUFFER_BINDING : t -> GLenum.t) =
      fun (x15521 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15521)
             "TRANSFORM_FEEDBACK_BUFFER_BINDING")
    let (get_TRANSFORM_FEEDBACK_BUFFER_MODE : t -> GLenum.t) =
      fun (x15522 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15522)
             "TRANSFORM_FEEDBACK_BUFFER_MODE")
    let (get_TRANSFORM_FEEDBACK_BUFFER_SIZE : t -> GLenum.t) =
      fun (x15523 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15523)
             "TRANSFORM_FEEDBACK_BUFFER_SIZE")
    let (get_TRANSFORM_FEEDBACK_BUFFER_START : t -> GLenum.t) =
      fun (x15524 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15524)
             "TRANSFORM_FEEDBACK_BUFFER_START")
    let (get_TRANSFORM_FEEDBACK_PAUSED : t -> GLenum.t) =
      fun (x15525 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15525) "TRANSFORM_FEEDBACK_PAUSED")
    let (get_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN : t -> GLenum.t) =
      fun (x15526 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15526)
             "TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN")
    let (get_TRANSFORM_FEEDBACK_VARYINGS : t -> GLenum.t) =
      fun (x15527 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15527) "TRANSFORM_FEEDBACK_VARYINGS")
    let (get_UNIFORM_ARRAY_STRIDE : t -> GLenum.t) =
      fun (x15528 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15528) "UNIFORM_ARRAY_STRIDE")
    let (get_UNIFORM_BLOCK_ACTIVE_UNIFORMS : t -> GLenum.t) =
      fun (x15529 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15529)
             "UNIFORM_BLOCK_ACTIVE_UNIFORMS")
    let (get_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES : t -> GLenum.t) =
      fun (x15530 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15530)
             "UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES")
    let (get_UNIFORM_BLOCK_BINDING : t -> GLenum.t) =
      fun (x15531 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15531) "UNIFORM_BLOCK_BINDING")
    let (get_UNIFORM_BLOCK_DATA_SIZE : t -> GLenum.t) =
      fun (x15532 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15532) "UNIFORM_BLOCK_DATA_SIZE")
    let (get_UNIFORM_BLOCK_INDEX : t -> GLenum.t) =
      fun (x15533 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15533) "UNIFORM_BLOCK_INDEX")
    let (get_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER : t -> GLenum.t) =
      fun (x15534 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15534)
             "UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER")
    let (get_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER : t -> GLenum.t) =
      fun (x15535 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15535)
             "UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER")
    let (get_UNIFORM_BUFFER : t -> GLenum.t) =
      fun (x15536 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15536) "UNIFORM_BUFFER")
    let (get_UNIFORM_BUFFER_BINDING : t -> GLenum.t) =
      fun (x15537 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15537) "UNIFORM_BUFFER_BINDING")
    let (get_UNIFORM_BUFFER_OFFSET_ALIGNMENT : t -> GLenum.t) =
      fun (x15538 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15538)
             "UNIFORM_BUFFER_OFFSET_ALIGNMENT")
    let (get_UNIFORM_BUFFER_SIZE : t -> GLenum.t) =
      fun (x15539 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15539) "UNIFORM_BUFFER_SIZE")
    let (get_UNIFORM_BUFFER_START : t -> GLenum.t) =
      fun (x15540 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15540) "UNIFORM_BUFFER_START")
    let (get_UNIFORM_IS_ROW_MAJOR : t -> GLenum.t) =
      fun (x15541 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15541) "UNIFORM_IS_ROW_MAJOR")
    let (get_UNIFORM_MATRIX_STRIDE : t -> GLenum.t) =
      fun (x15542 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15542) "UNIFORM_MATRIX_STRIDE")
    let (get_UNIFORM_OFFSET : t -> GLenum.t) =
      fun (x15543 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15543) "UNIFORM_OFFSET")
    let (get_UNIFORM_SIZE : t -> GLenum.t) =
      fun (x15544 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15544) "UNIFORM_SIZE")
    let (get_UNIFORM_TYPE : t -> GLenum.t) =
      fun (x15545 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15545) "UNIFORM_TYPE")
    let (get_UNPACK_IMAGE_HEIGHT : t -> GLenum.t) =
      fun (x15546 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15546) "UNPACK_IMAGE_HEIGHT")
    let (get_UNPACK_ROW_LENGTH : t -> GLenum.t) =
      fun (x15547 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15547) "UNPACK_ROW_LENGTH")
    let (get_UNPACK_SKIP_IMAGES : t -> GLenum.t) =
      fun (x15548 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15548) "UNPACK_SKIP_IMAGES")
    let (get_UNPACK_SKIP_PIXELS : t -> GLenum.t) =
      fun (x15549 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15549) "UNPACK_SKIP_PIXELS")
    let (get_UNPACK_SKIP_ROWS : t -> GLenum.t) =
      fun (x15550 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15550) "UNPACK_SKIP_ROWS")
    let (get_UNSIGNALED : t -> GLenum.t) =
      fun (x15551 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15551) "UNSIGNALED")
    let (get_UNSIGNED_INT_10F_11F_11F_REV : t -> GLenum.t) =
      fun (x15552 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15552) "UNSIGNED_INT_10F_11F_11F_REV")
    let (get_UNSIGNED_INT_24_8 : t -> GLenum.t) =
      fun (x15553 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15553) "UNSIGNED_INT_24_8")
    let (get_UNSIGNED_INT_2_10_10_10_REV : t -> GLenum.t) =
      fun (x15554 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15554) "UNSIGNED_INT_2_10_10_10_REV")
    let (get_UNSIGNED_INT_5_9_9_9_REV : t -> GLenum.t) =
      fun (x15555 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15555) "UNSIGNED_INT_5_9_9_9_REV")
    let (get_UNSIGNED_INT_SAMPLER_2D : t -> GLenum.t) =
      fun (x15556 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15556) "UNSIGNED_INT_SAMPLER_2D")
    let (get_UNSIGNED_INT_SAMPLER_2D_ARRAY : t -> GLenum.t) =
      fun (x15557 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15557)
             "UNSIGNED_INT_SAMPLER_2D_ARRAY")
    let (get_UNSIGNED_INT_SAMPLER_3D : t -> GLenum.t) =
      fun (x15558 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15558) "UNSIGNED_INT_SAMPLER_3D")
    let (get_UNSIGNED_INT_SAMPLER_CUBE : t -> GLenum.t) =
      fun (x15559 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15559) "UNSIGNED_INT_SAMPLER_CUBE")
    let (get_UNSIGNED_INT_VEC2 : t -> GLenum.t) =
      fun (x15560 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15560) "UNSIGNED_INT_VEC2")
    let (get_UNSIGNED_INT_VEC3 : t -> GLenum.t) =
      fun (x15561 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15561) "UNSIGNED_INT_VEC3")
    let (get_UNSIGNED_INT_VEC4 : t -> GLenum.t) =
      fun (x15562 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15562) "UNSIGNED_INT_VEC4")
    let (get_UNSIGNED_NORMALIZED : t -> GLenum.t) =
      fun (x15563 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15563) "UNSIGNED_NORMALIZED")
    let (get_VERTEX_ARRAY_BINDING : t -> GLenum.t) =
      fun (x15564 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15564) "VERTEX_ARRAY_BINDING")
    let (get_VERTEX_ATTRIB_ARRAY_DIVISOR : t -> GLenum.t) =
      fun (x15565 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15565) "VERTEX_ATTRIB_ARRAY_DIVISOR")
    let (get_VERTEX_ATTRIB_ARRAY_INTEGER : t -> GLenum.t) =
      fun (x15566 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15566) "VERTEX_ATTRIB_ARRAY_INTEGER")
    let (get_WAIT_FAILED : t -> GLenum.t) =
      fun (x15567 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15567) "WAIT_FAILED")
    let (get_ACTIVE_ATTRIBUTES : t -> GLenum.t) =
      fun (x15568 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15568) "ACTIVE_ATTRIBUTES")
    let (get_ACTIVE_TEXTURE : t -> GLenum.t) =
      fun (x15569 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15569) "ACTIVE_TEXTURE")
    let (get_ACTIVE_UNIFORMS : t -> GLenum.t) =
      fun (x15570 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15570) "ACTIVE_UNIFORMS")
    let (get_ALIASED_LINE_WIDTH_RANGE : t -> GLenum.t) =
      fun (x15571 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15571) "ALIASED_LINE_WIDTH_RANGE")
    let (get_ALIASED_POINT_SIZE_RANGE : t -> GLenum.t) =
      fun (x15572 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15572) "ALIASED_POINT_SIZE_RANGE")
    let (get_ALPHA : t -> GLenum.t) =
      fun (x15573 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15573) "ALPHA")
    let (get_ALPHA_BITS : t -> GLenum.t) =
      fun (x15574 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15574) "ALPHA_BITS")
    let (get_ALWAYS : t -> GLenum.t) =
      fun (x15575 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15575) "ALWAYS")
    let (get_ARRAY_BUFFER : t -> GLenum.t) =
      fun (x15576 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15576) "ARRAY_BUFFER")
    let (get_ARRAY_BUFFER_BINDING : t -> GLenum.t) =
      fun (x15577 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15577) "ARRAY_BUFFER_BINDING")
    let (get_ATTACHED_SHADERS : t -> GLenum.t) =
      fun (x15578 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15578) "ATTACHED_SHADERS")
    let (get_BACK : t -> GLenum.t) =
      fun (x15579 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15579) "BACK")
    let (get_BLEND : t -> GLenum.t) =
      fun (x15580 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15580) "BLEND")
    let (get_BLEND_COLOR : t -> GLenum.t) =
      fun (x15581 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15581) "BLEND_COLOR")
    let (get_BLEND_DST_ALPHA : t -> GLenum.t) =
      fun (x15582 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15582) "BLEND_DST_ALPHA")
    let (get_BLEND_DST_RGB : t -> GLenum.t) =
      fun (x15583 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15583) "BLEND_DST_RGB")
    let (get_BLEND_EQUATION : t -> GLenum.t) =
      fun (x15584 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15584) "BLEND_EQUATION")
    let (get_BLEND_EQUATION_ALPHA : t -> GLenum.t) =
      fun (x15585 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15585) "BLEND_EQUATION_ALPHA")
    let (get_BLEND_EQUATION_RGB : t -> GLenum.t) =
      fun (x15586 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15586) "BLEND_EQUATION_RGB")
    let (get_BLEND_SRC_ALPHA : t -> GLenum.t) =
      fun (x15587 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15587) "BLEND_SRC_ALPHA")
    let (get_BLEND_SRC_RGB : t -> GLenum.t) =
      fun (x15588 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15588) "BLEND_SRC_RGB")
    let (get_BLUE_BITS : t -> GLenum.t) =
      fun (x15589 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15589) "BLUE_BITS")
    let (get_BOOL : t -> GLenum.t) =
      fun (x15590 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15590) "BOOL")
    let (get_BOOL_VEC2 : t -> GLenum.t) =
      fun (x15591 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15591) "BOOL_VEC2")
    let (get_BOOL_VEC3 : t -> GLenum.t) =
      fun (x15592 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15592) "BOOL_VEC3")
    let (get_BOOL_VEC4 : t -> GLenum.t) =
      fun (x15593 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15593) "BOOL_VEC4")
    let (get_BROWSER_DEFAULT_WEBGL : t -> GLenum.t) =
      fun (x15594 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15594) "BROWSER_DEFAULT_WEBGL")
    let (get_BUFFER_SIZE : t -> GLenum.t) =
      fun (x15595 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15595) "BUFFER_SIZE")
    let (get_BUFFER_USAGE : t -> GLenum.t) =
      fun (x15596 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15596) "BUFFER_USAGE")
    let (get_BYTE : t -> GLenum.t) =
      fun (x15597 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15597) "BYTE")
    let (get_CCW : t -> GLenum.t) =
      fun (x15598 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15598) "CCW")
    let (get_CLAMP_TO_EDGE : t -> GLenum.t) =
      fun (x15599 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15599) "CLAMP_TO_EDGE")
    let (get_COLOR_ATTACHMENT0 : t -> GLenum.t) =
      fun (x15600 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15600) "COLOR_ATTACHMENT0")
    let (get_COLOR_BUFFER_BIT : t -> GLenum.t) =
      fun (x15601 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15601) "COLOR_BUFFER_BIT")
    let (get_COLOR_CLEAR_VALUE : t -> GLenum.t) =
      fun (x15602 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15602) "COLOR_CLEAR_VALUE")
    let (get_COLOR_WRITEMASK : t -> GLenum.t) =
      fun (x15603 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15603) "COLOR_WRITEMASK")
    let (get_COMPILE_STATUS : t -> GLenum.t) =
      fun (x15604 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15604) "COMPILE_STATUS")
    let (get_COMPRESSED_TEXTURE_FORMATS : t -> GLenum.t) =
      fun (x15605 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15605) "COMPRESSED_TEXTURE_FORMATS")
    let (get_CONSTANT_ALPHA : t -> GLenum.t) =
      fun (x15606 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15606) "CONSTANT_ALPHA")
    let (get_CONSTANT_COLOR : t -> GLenum.t) =
      fun (x15607 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15607) "CONSTANT_COLOR")
    let (get_CONTEXT_LOST_WEBGL : t -> GLenum.t) =
      fun (x15608 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15608) "CONTEXT_LOST_WEBGL")
    let (get_CULL_FACE : t -> GLenum.t) =
      fun (x15609 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15609) "CULL_FACE")
    let (get_CULL_FACE_MODE : t -> GLenum.t) =
      fun (x15610 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15610) "CULL_FACE_MODE")
    let (get_CURRENT_PROGRAM : t -> GLenum.t) =
      fun (x15611 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15611) "CURRENT_PROGRAM")
    let (get_CURRENT_VERTEX_ATTRIB : t -> GLenum.t) =
      fun (x15612 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15612) "CURRENT_VERTEX_ATTRIB")
    let (get_CW : t -> GLenum.t) =
      fun (x15613 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15613) "CW")
    let (get_DECR : t -> GLenum.t) =
      fun (x15614 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15614) "DECR")
    let (get_DECR_WRAP : t -> GLenum.t) =
      fun (x15615 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15615) "DECR_WRAP")
    let (get_DELETE_STATUS : t -> GLenum.t) =
      fun (x15616 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15616) "DELETE_STATUS")
    let (get_DEPTH_ATTACHMENT : t -> GLenum.t) =
      fun (x15617 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15617) "DEPTH_ATTACHMENT")
    let (get_DEPTH_BITS : t -> GLenum.t) =
      fun (x15618 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15618) "DEPTH_BITS")
    let (get_DEPTH_BUFFER_BIT : t -> GLenum.t) =
      fun (x15619 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15619) "DEPTH_BUFFER_BIT")
    let (get_DEPTH_CLEAR_VALUE : t -> GLenum.t) =
      fun (x15620 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15620) "DEPTH_CLEAR_VALUE")
    let (get_DEPTH_COMPONENT : t -> GLenum.t) =
      fun (x15621 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15621) "DEPTH_COMPONENT")
    let (get_DEPTH_COMPONENT16 : t -> GLenum.t) =
      fun (x15622 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15622) "DEPTH_COMPONENT16")
    let (get_DEPTH_FUNC : t -> GLenum.t) =
      fun (x15623 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15623) "DEPTH_FUNC")
    let (get_DEPTH_RANGE : t -> GLenum.t) =
      fun (x15624 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15624) "DEPTH_RANGE")
    let (get_DEPTH_STENCIL : t -> GLenum.t) =
      fun (x15625 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15625) "DEPTH_STENCIL")
    let (get_DEPTH_STENCIL_ATTACHMENT : t -> GLenum.t) =
      fun (x15626 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15626) "DEPTH_STENCIL_ATTACHMENT")
    let (get_DEPTH_TEST : t -> GLenum.t) =
      fun (x15627 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15627) "DEPTH_TEST")
    let (get_DEPTH_WRITEMASK : t -> GLenum.t) =
      fun (x15628 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15628) "DEPTH_WRITEMASK")
    let (get_DITHER : t -> GLenum.t) =
      fun (x15629 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15629) "DITHER")
    let (get_DONT_CARE : t -> GLenum.t) =
      fun (x15630 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15630) "DONT_CARE")
    let (get_DST_ALPHA : t -> GLenum.t) =
      fun (x15631 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15631) "DST_ALPHA")
    let (get_DST_COLOR : t -> GLenum.t) =
      fun (x15632 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15632) "DST_COLOR")
    let (get_DYNAMIC_DRAW : t -> GLenum.t) =
      fun (x15633 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15633) "DYNAMIC_DRAW")
    let (get_ELEMENT_ARRAY_BUFFER : t -> GLenum.t) =
      fun (x15634 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15634) "ELEMENT_ARRAY_BUFFER")
    let (get_ELEMENT_ARRAY_BUFFER_BINDING : t -> GLenum.t) =
      fun (x15635 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15635) "ELEMENT_ARRAY_BUFFER_BINDING")
    let (get_EQUAL : t -> GLenum.t) =
      fun (x15636 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15636) "EQUAL")
    let (get_FASTEST : t -> GLenum.t) =
      fun (x15637 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15637) "FASTEST")
    let (get_FLOAT : t -> GLenum.t) =
      fun (x15638 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15638) "FLOAT")
    let (get_FLOAT_MAT2 : t -> GLenum.t) =
      fun (x15639 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15639) "FLOAT_MAT2")
    let (get_FLOAT_MAT3 : t -> GLenum.t) =
      fun (x15640 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15640) "FLOAT_MAT3")
    let (get_FLOAT_MAT4 : t -> GLenum.t) =
      fun (x15641 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15641) "FLOAT_MAT4")
    let (get_FLOAT_VEC2 : t -> GLenum.t) =
      fun (x15642 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15642) "FLOAT_VEC2")
    let (get_FLOAT_VEC3 : t -> GLenum.t) =
      fun (x15643 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15643) "FLOAT_VEC3")
    let (get_FLOAT_VEC4 : t -> GLenum.t) =
      fun (x15644 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15644) "FLOAT_VEC4")
    let (get_FRAGMENT_SHADER : t -> GLenum.t) =
      fun (x15645 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15645) "FRAGMENT_SHADER")
    let (get_FRAMEBUFFER : t -> GLenum.t) =
      fun (x15646 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15646) "FRAMEBUFFER")
    let (get_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME : t -> GLenum.t) =
      fun (x15647 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15647)
             "FRAMEBUFFER_ATTACHMENT_OBJECT_NAME")
    let (get_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE : t -> GLenum.t) =
      fun (x15648 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15648)
             "FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE")
    let (get_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE : t -> GLenum.t) =
      fun (x15649 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15649)
             "FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE")
    let (get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL : t -> GLenum.t) =
      fun (x15650 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15650)
             "FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL")
    let (get_FRAMEBUFFER_BINDING : t -> GLenum.t) =
      fun (x15651 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15651) "FRAMEBUFFER_BINDING")
    let (get_FRAMEBUFFER_COMPLETE : t -> GLenum.t) =
      fun (x15652 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15652) "FRAMEBUFFER_COMPLETE")
    let (get_FRAMEBUFFER_INCOMPLETE_ATTACHMENT : t -> GLenum.t) =
      fun (x15653 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15653)
             "FRAMEBUFFER_INCOMPLETE_ATTACHMENT")
    let (get_FRAMEBUFFER_INCOMPLETE_DIMENSIONS : t -> GLenum.t) =
      fun (x15654 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15654)
             "FRAMEBUFFER_INCOMPLETE_DIMENSIONS")
    let (get_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT : t -> GLenum.t) =
      fun (x15655 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15655)
             "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT")
    let (get_FRAMEBUFFER_UNSUPPORTED : t -> GLenum.t) =
      fun (x15656 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15656) "FRAMEBUFFER_UNSUPPORTED")
    let (get_FRONT : t -> GLenum.t) =
      fun (x15657 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15657) "FRONT")
    let (get_FRONT_AND_BACK : t -> GLenum.t) =
      fun (x15658 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15658) "FRONT_AND_BACK")
    let (get_FRONT_FACE : t -> GLenum.t) =
      fun (x15659 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15659) "FRONT_FACE")
    let (get_FUNC_ADD : t -> GLenum.t) =
      fun (x15660 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15660) "FUNC_ADD")
    let (get_FUNC_REVERSE_SUBTRACT : t -> GLenum.t) =
      fun (x15661 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15661) "FUNC_REVERSE_SUBTRACT")
    let (get_FUNC_SUBTRACT : t -> GLenum.t) =
      fun (x15662 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15662) "FUNC_SUBTRACT")
    let (get_GENERATE_MIPMAP_HINT : t -> GLenum.t) =
      fun (x15663 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15663) "GENERATE_MIPMAP_HINT")
    let (get_GEQUAL : t -> GLenum.t) =
      fun (x15664 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15664) "GEQUAL")
    let (get_GREATER : t -> GLenum.t) =
      fun (x15665 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15665) "GREATER")
    let (get_GREEN_BITS : t -> GLenum.t) =
      fun (x15666 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15666) "GREEN_BITS")
    let (get_HIGH_FLOAT : t -> GLenum.t) =
      fun (x15667 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15667) "HIGH_FLOAT")
    let (get_HIGH_INT : t -> GLenum.t) =
      fun (x15668 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15668) "HIGH_INT")
    let (get_IMPLEMENTATION_COLOR_READ_FORMAT : t -> GLenum.t) =
      fun (x15669 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15669)
             "IMPLEMENTATION_COLOR_READ_FORMAT")
    let (get_IMPLEMENTATION_COLOR_READ_TYPE : t -> GLenum.t) =
      fun (x15670 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15670)
             "IMPLEMENTATION_COLOR_READ_TYPE")
    let (get_INCR : t -> GLenum.t) =
      fun (x15671 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15671) "INCR")
    let (get_INCR_WRAP : t -> GLenum.t) =
      fun (x15672 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15672) "INCR_WRAP")
    let (get_INT : t -> GLenum.t) =
      fun (x15673 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15673) "INT")
    let (get_INT_VEC2 : t -> GLenum.t) =
      fun (x15674 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15674) "INT_VEC2")
    let (get_INT_VEC3 : t -> GLenum.t) =
      fun (x15675 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15675) "INT_VEC3")
    let (get_INT_VEC4 : t -> GLenum.t) =
      fun (x15676 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15676) "INT_VEC4")
    let (get_INVALID_ENUM : t -> GLenum.t) =
      fun (x15677 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15677) "INVALID_ENUM")
    let (get_INVALID_FRAMEBUFFER_OPERATION : t -> GLenum.t) =
      fun (x15678 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15678)
             "INVALID_FRAMEBUFFER_OPERATION")
    let (get_INVALID_OPERATION : t -> GLenum.t) =
      fun (x15679 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15679) "INVALID_OPERATION")
    let (get_INVALID_VALUE : t -> GLenum.t) =
      fun (x15680 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15680) "INVALID_VALUE")
    let (get_INVERT : t -> GLenum.t) =
      fun (x15681 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15681) "INVERT")
    let (get_KEEP : t -> GLenum.t) =
      fun (x15682 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15682) "KEEP")
    let (get_LEQUAL : t -> GLenum.t) =
      fun (x15683 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15683) "LEQUAL")
    let (get_LESS : t -> GLenum.t) =
      fun (x15684 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15684) "LESS")
    let (get_LINEAR : t -> GLenum.t) =
      fun (x15685 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15685) "LINEAR")
    let (get_LINEAR_MIPMAP_LINEAR : t -> GLenum.t) =
      fun (x15686 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15686) "LINEAR_MIPMAP_LINEAR")
    let (get_LINEAR_MIPMAP_NEAREST : t -> GLenum.t) =
      fun (x15687 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15687) "LINEAR_MIPMAP_NEAREST")
    let (get_LINES : t -> GLenum.t) =
      fun (x15688 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15688) "LINES")
    let (get_LINE_LOOP : t -> GLenum.t) =
      fun (x15689 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15689) "LINE_LOOP")
    let (get_LINE_STRIP : t -> GLenum.t) =
      fun (x15690 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15690) "LINE_STRIP")
    let (get_LINE_WIDTH : t -> GLenum.t) =
      fun (x15691 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15691) "LINE_WIDTH")
    let (get_LINK_STATUS : t -> GLenum.t) =
      fun (x15692 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15692) "LINK_STATUS")
    let (get_LOW_FLOAT : t -> GLenum.t) =
      fun (x15693 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15693) "LOW_FLOAT")
    let (get_LOW_INT : t -> GLenum.t) =
      fun (x15694 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15694) "LOW_INT")
    let (get_LUMINANCE : t -> GLenum.t) =
      fun (x15695 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15695) "LUMINANCE")
    let (get_LUMINANCE_ALPHA : t -> GLenum.t) =
      fun (x15696 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15696) "LUMINANCE_ALPHA")
    let (get_MAX_COMBINED_TEXTURE_IMAGE_UNITS : t -> GLenum.t) =
      fun (x15697 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15697)
             "MAX_COMBINED_TEXTURE_IMAGE_UNITS")
    let (get_MAX_CUBE_MAP_TEXTURE_SIZE : t -> GLenum.t) =
      fun (x15698 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15698) "MAX_CUBE_MAP_TEXTURE_SIZE")
    let (get_MAX_FRAGMENT_UNIFORM_VECTORS : t -> GLenum.t) =
      fun (x15699 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15699) "MAX_FRAGMENT_UNIFORM_VECTORS")
    let (get_MAX_RENDERBUFFER_SIZE : t -> GLenum.t) =
      fun (x15700 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15700) "MAX_RENDERBUFFER_SIZE")
    let (get_MAX_TEXTURE_IMAGE_UNITS : t -> GLenum.t) =
      fun (x15701 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15701) "MAX_TEXTURE_IMAGE_UNITS")
    let (get_MAX_TEXTURE_SIZE : t -> GLenum.t) =
      fun (x15702 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15702) "MAX_TEXTURE_SIZE")
    let (get_MAX_VARYING_VECTORS : t -> GLenum.t) =
      fun (x15703 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15703) "MAX_VARYING_VECTORS")
    let (get_MAX_VERTEX_ATTRIBS : t -> GLenum.t) =
      fun (x15704 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15704) "MAX_VERTEX_ATTRIBS")
    let (get_MAX_VERTEX_TEXTURE_IMAGE_UNITS : t -> GLenum.t) =
      fun (x15705 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15705)
             "MAX_VERTEX_TEXTURE_IMAGE_UNITS")
    let (get_MAX_VERTEX_UNIFORM_VECTORS : t -> GLenum.t) =
      fun (x15706 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15706) "MAX_VERTEX_UNIFORM_VECTORS")
    let (get_MAX_VIEWPORT_DIMS : t -> GLenum.t) =
      fun (x15707 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15707) "MAX_VIEWPORT_DIMS")
    let (get_MEDIUM_FLOAT : t -> GLenum.t) =
      fun (x15708 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15708) "MEDIUM_FLOAT")
    let (get_MEDIUM_INT : t -> GLenum.t) =
      fun (x15709 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15709) "MEDIUM_INT")
    let (get_MIRRORED_REPEAT : t -> GLenum.t) =
      fun (x15710 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15710) "MIRRORED_REPEAT")
    let (get_NEAREST : t -> GLenum.t) =
      fun (x15711 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15711) "NEAREST")
    let (get_NEAREST_MIPMAP_LINEAR : t -> GLenum.t) =
      fun (x15712 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15712) "NEAREST_MIPMAP_LINEAR")
    let (get_NEAREST_MIPMAP_NEAREST : t -> GLenum.t) =
      fun (x15713 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15713) "NEAREST_MIPMAP_NEAREST")
    let (get_NEVER : t -> GLenum.t) =
      fun (x15714 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15714) "NEVER")
    let (get_NICEST : t -> GLenum.t) =
      fun (x15715 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15715) "NICEST")
    let (get_NONE : t -> GLenum.t) =
      fun (x15716 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15716) "NONE")
    let (get_NOTEQUAL : t -> GLenum.t) =
      fun (x15717 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15717) "NOTEQUAL")
    let (get_NO_ERROR : t -> GLenum.t) =
      fun (x15718 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15718) "NO_ERROR")
    let (get_ONE : t -> GLenum.t) =
      fun (x15719 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15719) "ONE")
    let (get_ONE_MINUS_CONSTANT_ALPHA : t -> GLenum.t) =
      fun (x15720 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15720) "ONE_MINUS_CONSTANT_ALPHA")
    let (get_ONE_MINUS_CONSTANT_COLOR : t -> GLenum.t) =
      fun (x15721 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15721) "ONE_MINUS_CONSTANT_COLOR")
    let (get_ONE_MINUS_DST_ALPHA : t -> GLenum.t) =
      fun (x15722 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15722) "ONE_MINUS_DST_ALPHA")
    let (get_ONE_MINUS_DST_COLOR : t -> GLenum.t) =
      fun (x15723 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15723) "ONE_MINUS_DST_COLOR")
    let (get_ONE_MINUS_SRC_ALPHA : t -> GLenum.t) =
      fun (x15724 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15724) "ONE_MINUS_SRC_ALPHA")
    let (get_ONE_MINUS_SRC_COLOR : t -> GLenum.t) =
      fun (x15725 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15725) "ONE_MINUS_SRC_COLOR")
    let (get_OUT_OF_MEMORY : t -> GLenum.t) =
      fun (x15726 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15726) "OUT_OF_MEMORY")
    let (get_PACK_ALIGNMENT : t -> GLenum.t) =
      fun (x15727 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15727) "PACK_ALIGNMENT")
    let (get_POINTS : t -> GLenum.t) =
      fun (x15728 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15728) "POINTS")
    let (get_POLYGON_OFFSET_FACTOR : t -> GLenum.t) =
      fun (x15729 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15729) "POLYGON_OFFSET_FACTOR")
    let (get_POLYGON_OFFSET_FILL : t -> GLenum.t) =
      fun (x15730 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15730) "POLYGON_OFFSET_FILL")
    let (get_POLYGON_OFFSET_UNITS : t -> GLenum.t) =
      fun (x15731 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15731) "POLYGON_OFFSET_UNITS")
    let (get_RED_BITS : t -> GLenum.t) =
      fun (x15732 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15732) "RED_BITS")
    let (get_RENDERBUFFER : t -> GLenum.t) =
      fun (x15733 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15733) "RENDERBUFFER")
    let (get_RENDERBUFFER_ALPHA_SIZE : t -> GLenum.t) =
      fun (x15734 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15734) "RENDERBUFFER_ALPHA_SIZE")
    let (get_RENDERBUFFER_BINDING : t -> GLenum.t) =
      fun (x15735 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15735) "RENDERBUFFER_BINDING")
    let (get_RENDERBUFFER_BLUE_SIZE : t -> GLenum.t) =
      fun (x15736 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15736) "RENDERBUFFER_BLUE_SIZE")
    let (get_RENDERBUFFER_DEPTH_SIZE : t -> GLenum.t) =
      fun (x15737 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15737) "RENDERBUFFER_DEPTH_SIZE")
    let (get_RENDERBUFFER_GREEN_SIZE : t -> GLenum.t) =
      fun (x15738 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15738) "RENDERBUFFER_GREEN_SIZE")
    let (get_RENDERBUFFER_HEIGHT : t -> GLenum.t) =
      fun (x15739 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15739) "RENDERBUFFER_HEIGHT")
    let (get_RENDERBUFFER_INTERNAL_FORMAT : t -> GLenum.t) =
      fun (x15740 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15740) "RENDERBUFFER_INTERNAL_FORMAT")
    let (get_RENDERBUFFER_RED_SIZE : t -> GLenum.t) =
      fun (x15741 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15741) "RENDERBUFFER_RED_SIZE")
    let (get_RENDERBUFFER_STENCIL_SIZE : t -> GLenum.t) =
      fun (x15742 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15742) "RENDERBUFFER_STENCIL_SIZE")
    let (get_RENDERBUFFER_WIDTH : t -> GLenum.t) =
      fun (x15743 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15743) "RENDERBUFFER_WIDTH")
    let (get_RENDERER : t -> GLenum.t) =
      fun (x15744 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15744) "RENDERER")
    let (get_REPEAT : t -> GLenum.t) =
      fun (x15745 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15745) "REPEAT")
    let (get_REPLACE : t -> GLenum.t) =
      fun (x15746 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15746) "REPLACE")
    let (get_RGB : t -> GLenum.t) =
      fun (x15747 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15747) "RGB")
    let (get_RGB565 : t -> GLenum.t) =
      fun (x15748 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15748) "RGB565")
    let (get_RGB5_A1 : t -> GLenum.t) =
      fun (x15749 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15749) "RGB5_A1")
    let (get_RGBA : t -> GLenum.t) =
      fun (x15750 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15750) "RGBA")
    let (get_RGBA4 : t -> GLenum.t) =
      fun (x15751 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15751) "RGBA4")
    let (get_SAMPLER_2D : t -> GLenum.t) =
      fun (x15752 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15752) "SAMPLER_2D")
    let (get_SAMPLER_CUBE : t -> GLenum.t) =
      fun (x15753 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15753) "SAMPLER_CUBE")
    let (get_SAMPLES : t -> GLenum.t) =
      fun (x15754 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15754) "SAMPLES")
    let (get_SAMPLE_ALPHA_TO_COVERAGE : t -> GLenum.t) =
      fun (x15755 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15755) "SAMPLE_ALPHA_TO_COVERAGE")
    let (get_SAMPLE_BUFFERS : t -> GLenum.t) =
      fun (x15756 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15756) "SAMPLE_BUFFERS")
    let (get_SAMPLE_COVERAGE : t -> GLenum.t) =
      fun (x15757 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15757) "SAMPLE_COVERAGE")
    let (get_SAMPLE_COVERAGE_INVERT : t -> GLenum.t) =
      fun (x15758 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15758) "SAMPLE_COVERAGE_INVERT")
    let (get_SAMPLE_COVERAGE_VALUE : t -> GLenum.t) =
      fun (x15759 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15759) "SAMPLE_COVERAGE_VALUE")
    let (get_SCISSOR_BOX : t -> GLenum.t) =
      fun (x15760 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15760) "SCISSOR_BOX")
    let (get_SCISSOR_TEST : t -> GLenum.t) =
      fun (x15761 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15761) "SCISSOR_TEST")
    let (get_SHADER_TYPE : t -> GLenum.t) =
      fun (x15762 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15762) "SHADER_TYPE")
    let (get_SHADING_LANGUAGE_VERSION : t -> GLenum.t) =
      fun (x15763 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15763) "SHADING_LANGUAGE_VERSION")
    let (get_SHORT : t -> GLenum.t) =
      fun (x15764 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15764) "SHORT")
    let (get_SRC_ALPHA : t -> GLenum.t) =
      fun (x15765 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15765) "SRC_ALPHA")
    let (get_SRC_ALPHA_SATURATE : t -> GLenum.t) =
      fun (x15766 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15766) "SRC_ALPHA_SATURATE")
    let (get_SRC_COLOR : t -> GLenum.t) =
      fun (x15767 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15767) "SRC_COLOR")
    let (get_STATIC_DRAW : t -> GLenum.t) =
      fun (x15768 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15768) "STATIC_DRAW")
    let (get_STENCIL_ATTACHMENT : t -> GLenum.t) =
      fun (x15769 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15769) "STENCIL_ATTACHMENT")
    let (get_STENCIL_BACK_FAIL : t -> GLenum.t) =
      fun (x15770 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15770) "STENCIL_BACK_FAIL")
    let (get_STENCIL_BACK_FUNC : t -> GLenum.t) =
      fun (x15771 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15771) "STENCIL_BACK_FUNC")
    let (get_STENCIL_BACK_PASS_DEPTH_FAIL : t -> GLenum.t) =
      fun (x15772 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15772) "STENCIL_BACK_PASS_DEPTH_FAIL")
    let (get_STENCIL_BACK_PASS_DEPTH_PASS : t -> GLenum.t) =
      fun (x15773 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15773) "STENCIL_BACK_PASS_DEPTH_PASS")
    let (get_STENCIL_BACK_REF : t -> GLenum.t) =
      fun (x15774 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15774) "STENCIL_BACK_REF")
    let (get_STENCIL_BACK_VALUE_MASK : t -> GLenum.t) =
      fun (x15775 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15775) "STENCIL_BACK_VALUE_MASK")
    let (get_STENCIL_BACK_WRITEMASK : t -> GLenum.t) =
      fun (x15776 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15776) "STENCIL_BACK_WRITEMASK")
    let (get_STENCIL_BITS : t -> GLenum.t) =
      fun (x15777 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15777) "STENCIL_BITS")
    let (get_STENCIL_BUFFER_BIT : t -> GLenum.t) =
      fun (x15778 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15778) "STENCIL_BUFFER_BIT")
    let (get_STENCIL_CLEAR_VALUE : t -> GLenum.t) =
      fun (x15779 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15779) "STENCIL_CLEAR_VALUE")
    let (get_STENCIL_FAIL : t -> GLenum.t) =
      fun (x15780 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15780) "STENCIL_FAIL")
    let (get_STENCIL_FUNC : t -> GLenum.t) =
      fun (x15781 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15781) "STENCIL_FUNC")
    let (get_STENCIL_INDEX8 : t -> GLenum.t) =
      fun (x15782 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15782) "STENCIL_INDEX8")
    let (get_STENCIL_PASS_DEPTH_FAIL : t -> GLenum.t) =
      fun (x15783 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15783) "STENCIL_PASS_DEPTH_FAIL")
    let (get_STENCIL_PASS_DEPTH_PASS : t -> GLenum.t) =
      fun (x15784 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15784) "STENCIL_PASS_DEPTH_PASS")
    let (get_STENCIL_REF : t -> GLenum.t) =
      fun (x15785 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15785) "STENCIL_REF")
    let (get_STENCIL_TEST : t -> GLenum.t) =
      fun (x15786 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15786) "STENCIL_TEST")
    let (get_STENCIL_VALUE_MASK : t -> GLenum.t) =
      fun (x15787 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15787) "STENCIL_VALUE_MASK")
    let (get_STENCIL_WRITEMASK : t -> GLenum.t) =
      fun (x15788 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15788) "STENCIL_WRITEMASK")
    let (get_STREAM_DRAW : t -> GLenum.t) =
      fun (x15789 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15789) "STREAM_DRAW")
    let (get_SUBPIXEL_BITS : t -> GLenum.t) =
      fun (x15790 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15790) "SUBPIXEL_BITS")
    let (get_TEXTURE : t -> GLenum.t) =
      fun (x15791 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15791) "TEXTURE")
    let (get_TEXTURE0 : t -> GLenum.t) =
      fun (x15792 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15792) "TEXTURE0")
    let (get_TEXTURE1 : t -> GLenum.t) =
      fun (x15793 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15793) "TEXTURE1")
    let (get_TEXTURE10 : t -> GLenum.t) =
      fun (x15794 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15794) "TEXTURE10")
    let (get_TEXTURE11 : t -> GLenum.t) =
      fun (x15795 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15795) "TEXTURE11")
    let (get_TEXTURE12 : t -> GLenum.t) =
      fun (x15796 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15796) "TEXTURE12")
    let (get_TEXTURE13 : t -> GLenum.t) =
      fun (x15797 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15797) "TEXTURE13")
    let (get_TEXTURE14 : t -> GLenum.t) =
      fun (x15798 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15798) "TEXTURE14")
    let (get_TEXTURE15 : t -> GLenum.t) =
      fun (x15799 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15799) "TEXTURE15")
    let (get_TEXTURE16 : t -> GLenum.t) =
      fun (x15800 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15800) "TEXTURE16")
    let (get_TEXTURE17 : t -> GLenum.t) =
      fun (x15801 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15801) "TEXTURE17")
    let (get_TEXTURE18 : t -> GLenum.t) =
      fun (x15802 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15802) "TEXTURE18")
    let (get_TEXTURE19 : t -> GLenum.t) =
      fun (x15803 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15803) "TEXTURE19")
    let (get_TEXTURE2 : t -> GLenum.t) =
      fun (x15804 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15804) "TEXTURE2")
    let (get_TEXTURE20 : t -> GLenum.t) =
      fun (x15805 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15805) "TEXTURE20")
    let (get_TEXTURE21 : t -> GLenum.t) =
      fun (x15806 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15806) "TEXTURE21")
    let (get_TEXTURE22 : t -> GLenum.t) =
      fun (x15807 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15807) "TEXTURE22")
    let (get_TEXTURE23 : t -> GLenum.t) =
      fun (x15808 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15808) "TEXTURE23")
    let (get_TEXTURE24 : t -> GLenum.t) =
      fun (x15809 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15809) "TEXTURE24")
    let (get_TEXTURE25 : t -> GLenum.t) =
      fun (x15810 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15810) "TEXTURE25")
    let (get_TEXTURE26 : t -> GLenum.t) =
      fun (x15811 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15811) "TEXTURE26")
    let (get_TEXTURE27 : t -> GLenum.t) =
      fun (x15812 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15812) "TEXTURE27")
    let (get_TEXTURE28 : t -> GLenum.t) =
      fun (x15813 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15813) "TEXTURE28")
    let (get_TEXTURE29 : t -> GLenum.t) =
      fun (x15814 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15814) "TEXTURE29")
    let (get_TEXTURE3 : t -> GLenum.t) =
      fun (x15815 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15815) "TEXTURE3")
    let (get_TEXTURE30 : t -> GLenum.t) =
      fun (x15816 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15816) "TEXTURE30")
    let (get_TEXTURE31 : t -> GLenum.t) =
      fun (x15817 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15817) "TEXTURE31")
    let (get_TEXTURE4 : t -> GLenum.t) =
      fun (x15818 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15818) "TEXTURE4")
    let (get_TEXTURE5 : t -> GLenum.t) =
      fun (x15819 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15819) "TEXTURE5")
    let (get_TEXTURE6 : t -> GLenum.t) =
      fun (x15820 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15820) "TEXTURE6")
    let (get_TEXTURE7 : t -> GLenum.t) =
      fun (x15821 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15821) "TEXTURE7")
    let (get_TEXTURE8 : t -> GLenum.t) =
      fun (x15822 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15822) "TEXTURE8")
    let (get_TEXTURE9 : t -> GLenum.t) =
      fun (x15823 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15823) "TEXTURE9")
    let (get_TEXTURE_2D : t -> GLenum.t) =
      fun (x15824 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15824) "TEXTURE_2D")
    let (get_TEXTURE_BINDING_2D : t -> GLenum.t) =
      fun (x15825 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15825) "TEXTURE_BINDING_2D")
    let (get_TEXTURE_BINDING_CUBE_MAP : t -> GLenum.t) =
      fun (x15826 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15826) "TEXTURE_BINDING_CUBE_MAP")
    let (get_TEXTURE_CUBE_MAP : t -> GLenum.t) =
      fun (x15827 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15827) "TEXTURE_CUBE_MAP")
    let (get_TEXTURE_CUBE_MAP_NEGATIVE_X : t -> GLenum.t) =
      fun (x15828 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15828) "TEXTURE_CUBE_MAP_NEGATIVE_X")
    let (get_TEXTURE_CUBE_MAP_NEGATIVE_Y : t -> GLenum.t) =
      fun (x15829 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15829) "TEXTURE_CUBE_MAP_NEGATIVE_Y")
    let (get_TEXTURE_CUBE_MAP_NEGATIVE_Z : t -> GLenum.t) =
      fun (x15830 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15830) "TEXTURE_CUBE_MAP_NEGATIVE_Z")
    let (get_TEXTURE_CUBE_MAP_POSITIVE_X : t -> GLenum.t) =
      fun (x15831 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15831) "TEXTURE_CUBE_MAP_POSITIVE_X")
    let (get_TEXTURE_CUBE_MAP_POSITIVE_Y : t -> GLenum.t) =
      fun (x15832 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15832) "TEXTURE_CUBE_MAP_POSITIVE_Y")
    let (get_TEXTURE_CUBE_MAP_POSITIVE_Z : t -> GLenum.t) =
      fun (x15833 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15833) "TEXTURE_CUBE_MAP_POSITIVE_Z")
    let (get_TEXTURE_MAG_FILTER : t -> GLenum.t) =
      fun (x15834 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15834) "TEXTURE_MAG_FILTER")
    let (get_TEXTURE_MIN_FILTER : t -> GLenum.t) =
      fun (x15835 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15835) "TEXTURE_MIN_FILTER")
    let (get_TEXTURE_WRAP_S : t -> GLenum.t) =
      fun (x15836 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15836) "TEXTURE_WRAP_S")
    let (get_TEXTURE_WRAP_T : t -> GLenum.t) =
      fun (x15837 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15837) "TEXTURE_WRAP_T")
    let (get_TRIANGLES : t -> GLenum.t) =
      fun (x15838 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15838) "TRIANGLES")
    let (get_TRIANGLE_FAN : t -> GLenum.t) =
      fun (x15839 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15839) "TRIANGLE_FAN")
    let (get_TRIANGLE_STRIP : t -> GLenum.t) =
      fun (x15840 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15840) "TRIANGLE_STRIP")
    let (get_UNPACK_ALIGNMENT : t -> GLenum.t) =
      fun (x15841 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15841) "UNPACK_ALIGNMENT")
    let (get_UNPACK_COLORSPACE_CONVERSION_WEBGL : t -> GLenum.t) =
      fun (x15842 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15842)
             "UNPACK_COLORSPACE_CONVERSION_WEBGL")
    let (get_UNPACK_FLIP_Y_WEBGL : t -> GLenum.t) =
      fun (x15843 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15843) "UNPACK_FLIP_Y_WEBGL")
    let (get_UNPACK_PREMULTIPLY_ALPHA_WEBGL : t -> GLenum.t) =
      fun (x15844 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15844)
             "UNPACK_PREMULTIPLY_ALPHA_WEBGL")
    let (get_UNSIGNED_BYTE : t -> GLenum.t) =
      fun (x15845 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15845) "UNSIGNED_BYTE")
    let (get_UNSIGNED_INT : t -> GLenum.t) =
      fun (x15846 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15846) "UNSIGNED_INT")
    let (get_UNSIGNED_SHORT : t -> GLenum.t) =
      fun (x15847 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15847) "UNSIGNED_SHORT")
    let (get_UNSIGNED_SHORT_4_4_4_4 : t -> GLenum.t) =
      fun (x15848 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15848) "UNSIGNED_SHORT_4_4_4_4")
    let (get_UNSIGNED_SHORT_5_5_5_1 : t -> GLenum.t) =
      fun (x15849 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15849) "UNSIGNED_SHORT_5_5_5_1")
    let (get_UNSIGNED_SHORT_5_6_5 : t -> GLenum.t) =
      fun (x15850 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15850) "UNSIGNED_SHORT_5_6_5")
    let (get_VALIDATE_STATUS : t -> GLenum.t) =
      fun (x15851 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15851) "VALIDATE_STATUS")
    let (get_VENDOR : t -> GLenum.t) =
      fun (x15852 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15852) "VENDOR")
    let (get_VERSION : t -> GLenum.t) =
      fun (x15853 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15853) "VERSION")
    let (get_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING : t -> GLenum.t) =
      fun (x15854 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15854)
             "VERTEX_ATTRIB_ARRAY_BUFFER_BINDING")
    let (get_VERTEX_ATTRIB_ARRAY_ENABLED : t -> GLenum.t) =
      fun (x15855 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15855) "VERTEX_ATTRIB_ARRAY_ENABLED")
    let (get_VERTEX_ATTRIB_ARRAY_NORMALIZED : t -> GLenum.t) =
      fun (x15856 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15856)
             "VERTEX_ATTRIB_ARRAY_NORMALIZED")
    let (get_VERTEX_ATTRIB_ARRAY_POINTER : t -> GLenum.t) =
      fun (x15857 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15857) "VERTEX_ATTRIB_ARRAY_POINTER")
    let (get_VERTEX_ATTRIB_ARRAY_SIZE : t -> GLenum.t) =
      fun (x15858 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15858) "VERTEX_ATTRIB_ARRAY_SIZE")
    let (get_VERTEX_ATTRIB_ARRAY_STRIDE : t -> GLenum.t) =
      fun (x15859 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15859) "VERTEX_ATTRIB_ARRAY_STRIDE")
    let (get_VERTEX_ATTRIB_ARRAY_TYPE : t -> GLenum.t) =
      fun (x15860 : t) ->
        GLenum.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15860) "VERTEX_ATTRIB_ARRAY_TYPE")
    let (get_VERTEX_SHADER : t -> GLenum.t) =
      fun (x15861 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15861) "VERTEX_SHADER")
    let (get_VIEWPORT : t -> GLenum.t) =
      fun (x15862 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15862) "VIEWPORT")
    let (get_ZERO : t -> GLenum.t) =
      fun (x15863 : t) ->
        GLenum.t_of_js (Ojs.get_prop_ascii (t_to_js x15863) "ZERO")
  end
module AnonymousInterface110 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x15865 : Ojs.t) -> x15865
    and t_to_js : t -> Ojs.t = fun (x15864 : Ojs.t) -> x15864
    let (get_prototype : t -> URLSearchParams.t) =
      fun (x15866 : t) ->
        URLSearchParams.t_of_js
          (Ojs.get_prop_ascii (t_to_js x15866) "prototype")
    let (set_prototype : t -> URLSearchParams.t -> unit) =
      fun (x15867 : t) ->
        fun (x15868 : URLSearchParams.t) ->
          Ojs.set_prop_ascii (t_to_js x15867) "prototype"
            (URLSearchParams.t_to_js x15868)
    let (create :
      t ->
        ?init:(URLSearchParams.t, string list) or_array or_string ->
          unit -> URLSearchParams.t)
      =
      fun (x15876 : t) ->
        fun
          ?init:(x15869 :
                  (URLSearchParams.t, string list) or_array or_string option)
          ->
          fun () ->
            URLSearchParams.t_of_js
              (Ojs.new_obj_arr (t_to_js x15876)
                 (let x15870 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x15869 with
                   | Some x15871 ->
                       ignore
                         (Ojs.call x15870 "push"
                            [|(or_string_to_js
                                 (fun
                                    (x15872 :
                                      (URLSearchParams.t, string list)
                                        or_array)
                                    ->
                                    or_array_to_js URLSearchParams.t_to_js
                                      (fun (x15874 : string list) ->
                                         Ojs.list_to_js Ojs.string_to_js
                                           x15874) x15872) x15871)|])
                   | None -> ());
                  x15870))
    let (toString : t -> string) =
      fun (x15877 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x15877) "toString" [||])
  end
module AnonymousInterface11 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x15879 : Ojs.t) -> x15879
    and t_to_js : t -> Ojs.t = fun (x15878 : Ojs.t) -> x15878
    let (get_prototype : t -> CloseEvent.t) =
      fun (x15880 : t) ->
        CloseEvent.t_of_js (Ojs.get_prop_ascii (t_to_js x15880) "prototype")
    let (set_prototype : t -> CloseEvent.t -> unit) =
      fun (x15881 : t) ->
        fun (x15882 : CloseEvent.t) ->
          Ojs.set_prop_ascii (t_to_js x15881) "prototype"
            (CloseEvent.t_to_js x15882)
    let (create :
      t ->
        type_:string ->
          ?eventInitDict:CloseEventInit.t -> unit -> CloseEvent.t)
      =
      fun (x15887 : t) ->
        fun ~type_:(x15883 : string) ->
          fun ?eventInitDict:(x15884 : CloseEventInit.t option) ->
            fun () ->
              CloseEvent.t_of_js
                (Ojs.new_obj_arr (t_to_js x15887)
                   (let x15885 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x15885 "push" [|(Ojs.string_to_js x15883)|]);
                    (match x15884 with
                     | Some x15886 ->
                         ignore
                           (Ojs.call x15885 "push"
                              [|(CloseEventInit.t_to_js x15886)|])
                     | None -> ());
                    x15885))
  end
module AnonymousInterface109 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x15889 : Ojs.t) -> x15889
    and t_to_js : t -> Ojs.t = fun (x15888 : Ojs.t) -> x15888
    let (get_prototype : t -> URL.t) =
      fun (x15890 : t) ->
        URL.t_of_js (Ojs.get_prop_ascii (t_to_js x15890) "prototype")
    let (set_prototype : t -> URL.t -> unit) =
      fun (x15891 : t) ->
        fun (x15892 : URL.t) ->
          Ojs.set_prop_ascii (t_to_js x15891) "prototype"
            (URL.t_to_js x15892)
    let (create :
      t -> url:URL.t or_string -> ?base:URL.t or_string -> unit -> URL.t) =
      fun (x15899 : t) ->
        fun ~url:(x15893 : URL.t or_string) ->
          fun ?base:(x15894 : URL.t or_string option) ->
            fun () ->
              URL.t_of_js
                (Ojs.new_obj_arr (t_to_js x15899)
                   (let x15895 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x15895 "push"
                         [|(or_string_to_js URL.t_to_js x15893)|]);
                    (match x15894 with
                     | Some x15896 ->
                         ignore
                           (Ojs.call x15895 "push"
                              [|(or_string_to_js URL.t_to_js x15896)|])
                     | None -> ());
                    x15895))
    let (createObjectURL : t -> obj:Blob.t -> string) =
      fun (x15901 : t) ->
        fun ~obj:(x15900 : Blob.t) ->
          Ojs.string_of_js
            (Ojs.call (t_to_js x15901) "createObjectURL"
               [|(Blob.t_to_js x15900)|])
    let (revokeObjectURL : t -> url:string -> unit) =
      fun (x15903 : t) ->
        fun ~url:(x15902 : string) ->
          ignore
            (Ojs.call (t_to_js x15903) "revokeObjectURL"
               [|(Ojs.string_to_js x15902)|])
  end
module TransformStreamDefaultController =
  struct
    type 'O t = [ `TransformStreamDefaultController of 'O ] intf
    let rec t_of_js : 'O . (Ojs.t -> 'O) -> Ojs.t -> 'O t =
      fun _O -> Obj.magic
    and t_to_js : 'O . ('O -> Ojs.t) -> 'O t -> Ojs.t = fun _O -> Obj.magic
    type 'O t_1 = 'O t
    let rec t_1_of_js : 'O . (Ojs.t -> 'O) -> Ojs.t -> 'O t_1 = fun (type
      __O) ->
      fun (__O_of_js : Ojs.t -> __O) ->
        fun (x15906 : Ojs.t) -> t_of_js __O_of_js x15906
    and t_1_to_js : 'O . ('O -> Ojs.t) -> 'O t_1 -> Ojs.t = fun (type __O) ->
      fun (__O_to_js : __O -> Ojs.t) ->
        fun (x15904 : __O t) -> t_to_js __O_to_js x15904
    type t_0 = any t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x15910 : Ojs.t) -> t_of_js any_of_js x15910
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x15908 : any t) -> t_to_js any_to_js x15908
    type 'O tags = [ `TransformStreamDefaultController of 'O ]
    type 'O tags_1 = 'O tags
    type tags_0 = any tags
    type ('tags, 'O) this =
      'tags intf constraint 'tags =
                  [> `TransformStreamDefaultController of 'O ]
    let rec this_of_js :
      'tags 'O .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'O) -> Ojs.t -> ('tags, 'O) this
      = fun (type __tags) -> fun (type __O) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__O_of_js : Ojs.t -> __O) ->
          fun (x15914 : Ojs.t) -> intf_of_js __tags_of_js x15914
    and this_to_js :
      'tags 'O .
        ('tags -> Ojs.t) -> ('O -> Ojs.t) -> ('tags, 'O) this -> Ojs.t
      = fun (type __tags) -> fun (type __O) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__O_to_js : __O -> Ojs.t) ->
          fun (x15912 : __tags intf) -> intf_to_js __tags_to_js x15912
    let (get_desiredSize : ('tags, 'O) this -> float or_null) =
      fun (x15916 : ('tags, 'O) this) ->
        or_null_of_js Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x15916)
             "desiredSize")
    let (enqueue : ('tags, 'O) this -> ?chunk:'O -> unit -> unit) =
      fun (x15923 : ('tags, 'O) this) ->
        fun ?chunk:(x15920 : 'O option) ->
          fun () ->
            ignore
              (let x15926 = this_to_js Obj.magic Obj.magic x15923 in
               Ojs.call (Ojs.get_prop_ascii x15926 "enqueue") "apply"
                 [|x15926;((let x15921 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x15920 with
                             | Some x15922 ->
                                 ignore
                                   (Ojs.call x15921 "push"
                                      [|(Obj.magic x15922)|])
                             | None -> ());
                            x15921))|])
    let (error : ('tags, 'O) this -> ?reason:any -> unit -> unit) =
      fun (x15930 : ('tags, 'O) this) ->
        fun ?reason:(x15927 : any option) ->
          fun () ->
            ignore
              (let x15933 = this_to_js Obj.magic Obj.magic x15930 in
               Ojs.call (Ojs.get_prop_ascii x15933 "error") "apply"
                 [|x15933;((let x15928 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x15927 with
                             | Some x15929 ->
                                 ignore
                                   (Ojs.call x15928 "push"
                                      [|(any_to_js x15929)|])
                             | None -> ());
                            x15928))|])
    let (terminate : ('tags, 'O) this -> unit) =
      fun (x15934 : ('tags, 'O) this) ->
        ignore
          (Ojs.call (this_to_js Obj.magic Obj.magic x15934) "terminate" [||])
    let cast_from = Obj.magic
    let (prototype : unit -> t_0) =
      fun () ->
        t_0_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global
                "TransformStreamDefaultController") "prototype")
    let (create : unit -> t_0) =
      fun () ->
        t_0_of_js
          (Ojs.new_obj
             (Ojs.get_prop_ascii Ojs.global
                "TransformStreamDefaultController") [||])
  end
module AnonymousInterface108 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x15938 : Ojs.t) -> x15938
    and t_to_js : t -> Ojs.t = fun (x15937 : Ojs.t) -> x15937
    let (get_prototype : t -> TransformStreamDefaultController.t_0) =
      fun (x15939 : t) ->
        TransformStreamDefaultController.t_0_of_js
          (Ojs.get_prop_ascii (t_to_js x15939) "prototype")
    let (set_prototype : t -> TransformStreamDefaultController.t_0 -> unit) =
      fun (x15940 : t) ->
        fun (x15941 : TransformStreamDefaultController.t_0) ->
          Ojs.set_prop_ascii (t_to_js x15940) "prototype"
            (TransformStreamDefaultController.t_0_to_js x15941)
    let (create : t -> TransformStreamDefaultController.t_0) =
      fun (x15942 : t) ->
        TransformStreamDefaultController.t_0_of_js
          (Ojs.new_obj (t_to_js x15942) [||])
  end
module TransformerTransformCallback =
  struct
    type ('I, 'O) t = [ `TransformerTransformCallback of ('I * 'O) ] intf
    let rec t_of_js :
      'I 'O . (Ojs.t -> 'I) -> (Ojs.t -> 'O) -> Ojs.t -> ('I, 'O) t =
      fun _I -> fun _O -> Obj.magic
    and t_to_js :
      'I 'O . ('I -> Ojs.t) -> ('O -> Ojs.t) -> ('I, 'O) t -> Ojs.t =
      fun _I -> fun _O -> Obj.magic
    type ('I, 'O) t_2 = ('I, 'O) t
    let rec t_2_of_js :
      'I 'O . (Ojs.t -> 'I) -> (Ojs.t -> 'O) -> Ojs.t -> ('I, 'O) t_2 = fun
      (type __I) -> fun (type __O) ->
      fun (__I_of_js : Ojs.t -> __I) ->
        fun (__O_of_js : Ojs.t -> __O) ->
          fun (x15946 : Ojs.t) -> t_of_js __I_of_js __O_of_js x15946
    and t_2_to_js :
      'I 'O . ('I -> Ojs.t) -> ('O -> Ojs.t) -> ('I, 'O) t_2 -> Ojs.t = fun
      (type __I) -> fun (type __O) ->
      fun (__I_to_js : __I -> Ojs.t) ->
        fun (__O_to_js : __O -> Ojs.t) ->
          fun (x15943 : (__I, __O) t) -> t_to_js __I_to_js __O_to_js x15943
    type ('I, 'O) tags = [ `TransformerTransformCallback of ('I * 'O) ]
    type ('I, 'O) tags_2 = ('I, 'O) tags
    type ('tags, 'I, 'O) this =
      'tags intf constraint 'tags =
                  [> `TransformerTransformCallback of ('I * 'O) ]
    let rec this_of_js :
      'tags 'I 'O .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'I) -> (Ojs.t -> 'O) -> Ojs.t -> ('tags, 'I, 'O) this
      = fun (type __tags) -> fun (type __I) -> fun (type __O) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__I_of_js : Ojs.t -> __I) ->
          fun (__O_of_js : Ojs.t -> __O) ->
            fun (x15951 : Ojs.t) -> intf_of_js __tags_of_js x15951
    and this_to_js :
      'tags 'I 'O .
        ('tags -> Ojs.t) ->
          ('I -> Ojs.t) -> ('O -> Ojs.t) -> ('tags, 'I, 'O) this -> Ojs.t
      = fun (type __tags) -> fun (type __I) -> fun (type __O) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__I_to_js : __I -> Ojs.t) ->
          fun (__O_to_js : __O -> Ojs.t) ->
            fun (x15949 : __tags intf) -> intf_to_js __tags_to_js x15949
    let (apply :
      ('tags, 'I, 'O) this ->
        chunk:'I -> controller:'O TransformStreamDefaultController.t -> unit)
      =
      fun (x15956 : ('tags, 'I, 'O) this) ->
        fun ~chunk:(x15953 : 'I) ->
          fun ~controller:(x15954 : 'O TransformStreamDefaultController.t) ->
            ignore
              (Ojs.apply (this_to_js Obj.magic Obj.magic Obj.magic x15956)
                 [|(Obj.magic x15953);(TransformStreamDefaultController.t_to_js
                                         Obj.magic x15954)|])
    let cast_from = Obj.magic
  end
module TransformerStartCallback =
  struct
    type 'O t = [ `TransformerStartCallback of 'O ] intf
    let rec t_of_js : 'O . (Ojs.t -> 'O) -> Ojs.t -> 'O t =
      fun _O -> Obj.magic
    and t_to_js : 'O . ('O -> Ojs.t) -> 'O t -> Ojs.t = fun _O -> Obj.magic
    type 'O t_1 = 'O t
    let rec t_1_of_js : 'O . (Ojs.t -> 'O) -> Ojs.t -> 'O t_1 = fun (type
      __O) ->
      fun (__O_of_js : Ojs.t -> __O) ->
        fun (x15962 : Ojs.t) -> t_of_js __O_of_js x15962
    and t_1_to_js : 'O . ('O -> Ojs.t) -> 'O t_1 -> Ojs.t = fun (type __O) ->
      fun (__O_to_js : __O -> Ojs.t) ->
        fun (x15960 : __O t) -> t_to_js __O_to_js x15960
    type 'O tags = [ `TransformerStartCallback of 'O ]
    type 'O tags_1 = 'O tags
    type ('tags, 'O) this =
      'tags intf constraint 'tags = [> `TransformerStartCallback of 'O ]
    let rec this_of_js :
      'tags 'O .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'O) -> Ojs.t -> ('tags, 'O) this
      = fun (type __tags) -> fun (type __O) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__O_of_js : Ojs.t -> __O) ->
          fun (x15966 : Ojs.t) -> intf_of_js __tags_of_js x15966
    and this_to_js :
      'tags 'O .
        ('tags -> Ojs.t) -> ('O -> Ojs.t) -> ('tags, 'O) this -> Ojs.t
      = fun (type __tags) -> fun (type __O) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__O_to_js : __O -> Ojs.t) ->
          fun (x15964 : __tags intf) -> intf_to_js __tags_to_js x15964
    let (apply :
      ('tags, 'O) this ->
        controller:'O TransformStreamDefaultController.t -> any)
      =
      fun (x15970 : ('tags, 'O) this) ->
        fun ~controller:(x15968 : 'O TransformStreamDefaultController.t) ->
          any_of_js
            (Ojs.apply (this_to_js Obj.magic Obj.magic x15970)
               [|(TransformStreamDefaultController.t_to_js Obj.magic x15968)|])
    let cast_from = Obj.magic
  end
module TransformerFlushCallback =
  struct
    type 'O t = [ `TransformerFlushCallback of 'O ] intf
    let rec t_of_js : 'O . (Ojs.t -> 'O) -> Ojs.t -> 'O t =
      fun _O -> Obj.magic
    and t_to_js : 'O . ('O -> Ojs.t) -> 'O t -> Ojs.t = fun _O -> Obj.magic
    type 'O t_1 = 'O t
    let rec t_1_of_js : 'O . (Ojs.t -> 'O) -> Ojs.t -> 'O t_1 = fun (type
      __O) ->
      fun (__O_of_js : Ojs.t -> __O) ->
        fun (x15975 : Ojs.t) -> t_of_js __O_of_js x15975
    and t_1_to_js : 'O . ('O -> Ojs.t) -> 'O t_1 -> Ojs.t = fun (type __O) ->
      fun (__O_to_js : __O -> Ojs.t) ->
        fun (x15973 : __O t) -> t_to_js __O_to_js x15973
    type 'O tags = [ `TransformerFlushCallback of 'O ]
    type 'O tags_1 = 'O tags
    type ('tags, 'O) this =
      'tags intf constraint 'tags = [> `TransformerFlushCallback of 'O ]
    let rec this_of_js :
      'tags 'O .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'O) -> Ojs.t -> ('tags, 'O) this
      = fun (type __tags) -> fun (type __O) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__O_of_js : Ojs.t -> __O) ->
          fun (x15979 : Ojs.t) -> intf_of_js __tags_of_js x15979
    and this_to_js :
      'tags 'O .
        ('tags -> Ojs.t) -> ('O -> Ojs.t) -> ('tags, 'O) this -> Ojs.t
      = fun (type __tags) -> fun (type __O) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__O_to_js : __O -> Ojs.t) ->
          fun (x15977 : __tags intf) -> intf_to_js __tags_to_js x15977
    let (apply :
      ('tags, 'O) this ->
        controller:'O TransformStreamDefaultController.t -> unit)
      =
      fun (x15983 : ('tags, 'O) this) ->
        fun ~controller:(x15981 : 'O TransformStreamDefaultController.t) ->
          ignore
            (Ojs.apply (this_to_js Obj.magic Obj.magic x15983)
               [|(TransformStreamDefaultController.t_to_js Obj.magic x15981)|])
    let cast_from = Obj.magic
  end
module Transformer =
  struct
    type ('I, 'O) t = [ `Transformer of ('I * 'O) ] intf
    let rec t_of_js :
      'I 'O . (Ojs.t -> 'I) -> (Ojs.t -> 'O) -> Ojs.t -> ('I, 'O) t =
      fun _I -> fun _O -> Obj.magic
    and t_to_js :
      'I 'O . ('I -> Ojs.t) -> ('O -> Ojs.t) -> ('I, 'O) t -> Ojs.t =
      fun _I -> fun _O -> Obj.magic
    type ('I, 'O) t_2 = ('I, 'O) t
    let rec t_2_of_js :
      'I 'O . (Ojs.t -> 'I) -> (Ojs.t -> 'O) -> Ojs.t -> ('I, 'O) t_2 = fun
      (type __I) -> fun (type __O) ->
      fun (__I_of_js : Ojs.t -> __I) ->
        fun (__O_of_js : Ojs.t -> __O) ->
          fun (x15989 : Ojs.t) -> t_of_js __I_of_js __O_of_js x15989
    and t_2_to_js :
      'I 'O . ('I -> Ojs.t) -> ('O -> Ojs.t) -> ('I, 'O) t_2 -> Ojs.t = fun
      (type __I) -> fun (type __O) ->
      fun (__I_to_js : __I -> Ojs.t) ->
        fun (__O_to_js : __O -> Ojs.t) ->
          fun (x15986 : (__I, __O) t) -> t_to_js __I_to_js __O_to_js x15986
    type 'I t_1 = ('I, any) t
    let rec t_1_of_js : 'I . (Ojs.t -> 'I) -> Ojs.t -> 'I t_1 = fun (type
      __I) ->
      fun (__I_of_js : Ojs.t -> __I) ->
        fun (x15995 : Ojs.t) -> t_of_js __I_of_js any_of_js x15995
    and t_1_to_js : 'I . ('I -> Ojs.t) -> 'I t_1 -> Ojs.t = fun (type __I) ->
      fun (__I_to_js : __I -> Ojs.t) ->
        fun (x15992 : (__I, any) t) -> t_to_js __I_to_js any_to_js x15992
    type t_0 = (any, any) t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x16001 : Ojs.t) -> t_of_js any_of_js any_of_js x16001
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x15998 : (any, any) t) -> t_to_js any_to_js any_to_js x15998
    type ('I, 'O) tags = [ `Transformer of ('I * 'O) ]
    type ('I, 'O) tags_2 = ('I, 'O) tags
    type 'I tags_1 = ('I, any) tags
    type tags_0 = (any, any) tags
    type ('tags, 'I, 'O) this =
      'tags intf constraint 'tags = [> `Transformer of ('I * 'O) ]
    let rec this_of_js :
      'tags 'I 'O .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'I) -> (Ojs.t -> 'O) -> Ojs.t -> ('tags, 'I, 'O) this
      = fun (type __tags) -> fun (type __I) -> fun (type __O) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__I_of_js : Ojs.t -> __I) ->
          fun (__O_of_js : Ojs.t -> __O) ->
            fun (x16006 : Ojs.t) -> intf_of_js __tags_of_js x16006
    and this_to_js :
      'tags 'I 'O .
        ('tags -> Ojs.t) ->
          ('I -> Ojs.t) -> ('O -> Ojs.t) -> ('tags, 'I, 'O) this -> Ojs.t
      = fun (type __tags) -> fun (type __I) -> fun (type __O) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__I_to_js : __I -> Ojs.t) ->
          fun (__O_to_js : __O -> Ojs.t) ->
            fun (x16004 : __tags intf) -> intf_to_js __tags_to_js x16004
    let (get_flush : ('tags, 'I, 'O) this -> 'O TransformerFlushCallback.t) =
      fun (x16008 : ('tags, 'I, 'O) this) ->
        TransformerFlushCallback.t_of_js Obj.magic
          (Ojs.get_prop_ascii
             (this_to_js Obj.magic Obj.magic Obj.magic x16008) "flush")
    let (set_flush :
      ('tags, 'I, 'O) this -> 'O TransformerFlushCallback.t -> unit) =
      fun (x16013 : ('tags, 'I, 'O) this) ->
        fun (x16014 : 'O TransformerFlushCallback.t) ->
          Ojs.set_prop_ascii
            (this_to_js Obj.magic Obj.magic Obj.magic x16013) "flush"
            (TransformerFlushCallback.t_to_js Obj.magic x16014)
    let (get_readableType : ('tags, 'I, 'O) this -> never or_undefined) =
      fun (x16019 : ('tags, 'I, 'O) this) ->
        or_undefined_of_js never_of_js
          (Ojs.get_prop_ascii
             (this_to_js Obj.magic Obj.magic Obj.magic x16019) "readableType")
    let (set_readableType :
      ('tags, 'I, 'O) this -> never or_undefined -> unit) =
      fun (x16024 : ('tags, 'I, 'O) this) ->
        fun (x16025 : never or_undefined) ->
          Ojs.set_prop_ascii
            (this_to_js Obj.magic Obj.magic Obj.magic x16024) "readableType"
            (or_undefined_to_js never_to_js x16025)
    let (get_start : ('tags, 'I, 'O) this -> 'O TransformerStartCallback.t) =
      fun (x16030 : ('tags, 'I, 'O) this) ->
        TransformerStartCallback.t_of_js Obj.magic
          (Ojs.get_prop_ascii
             (this_to_js Obj.magic Obj.magic Obj.magic x16030) "start")
    let (set_start :
      ('tags, 'I, 'O) this -> 'O TransformerStartCallback.t -> unit) =
      fun (x16035 : ('tags, 'I, 'O) this) ->
        fun (x16036 : 'O TransformerStartCallback.t) ->
          Ojs.set_prop_ascii
            (this_to_js Obj.magic Obj.magic Obj.magic x16035) "start"
            (TransformerStartCallback.t_to_js Obj.magic x16036)
    let (get_transform :
      ('tags, 'I, 'O) this -> ('I, 'O) TransformerTransformCallback.t) =
      fun (x16041 : ('tags, 'I, 'O) this) ->
        TransformerTransformCallback.t_of_js Obj.magic Obj.magic
          (Ojs.get_prop_ascii
             (this_to_js Obj.magic Obj.magic Obj.magic x16041) "transform")
    let (set_transform :
      ('tags, 'I, 'O) this -> ('I, 'O) TransformerTransformCallback.t -> unit)
      =
      fun (x16047 : ('tags, 'I, 'O) this) ->
        fun (x16048 : ('I, 'O) TransformerTransformCallback.t) ->
          Ojs.set_prop_ascii
            (this_to_js Obj.magic Obj.magic Obj.magic x16047) "transform"
            (TransformerTransformCallback.t_to_js Obj.magic Obj.magic x16048)
    let (get_writableType : ('tags, 'I, 'O) this -> never or_undefined) =
      fun (x16054 : ('tags, 'I, 'O) this) ->
        or_undefined_of_js never_of_js
          (Ojs.get_prop_ascii
             (this_to_js Obj.magic Obj.magic Obj.magic x16054) "writableType")
    let (set_writableType :
      ('tags, 'I, 'O) this -> never or_undefined -> unit) =
      fun (x16059 : ('tags, 'I, 'O) this) ->
        fun (x16060 : never or_undefined) ->
          Ojs.set_prop_ascii
            (this_to_js Obj.magic Obj.magic Obj.magic x16059) "writableType"
            (or_undefined_to_js never_to_js x16060)
    let cast_from = Obj.magic
  end
module TransformStream =
  struct
    type ('I, 'O) t = [ `TransformStream of ('I * 'O) ] intf
    let rec t_of_js :
      'I 'O . (Ojs.t -> 'I) -> (Ojs.t -> 'O) -> Ojs.t -> ('I, 'O) t =
      fun _I -> fun _O -> Obj.magic
    and t_to_js :
      'I 'O . ('I -> Ojs.t) -> ('O -> Ojs.t) -> ('I, 'O) t -> Ojs.t =
      fun _I -> fun _O -> Obj.magic
    type ('I, 'O) t_2 = ('I, 'O) t
    let rec t_2_of_js :
      'I 'O . (Ojs.t -> 'I) -> (Ojs.t -> 'O) -> Ojs.t -> ('I, 'O) t_2 = fun
      (type __I) -> fun (type __O) ->
      fun (__I_of_js : Ojs.t -> __I) ->
        fun (__O_of_js : Ojs.t -> __O) ->
          fun (x16068 : Ojs.t) -> t_of_js __I_of_js __O_of_js x16068
    and t_2_to_js :
      'I 'O . ('I -> Ojs.t) -> ('O -> Ojs.t) -> ('I, 'O) t_2 -> Ojs.t = fun
      (type __I) -> fun (type __O) ->
      fun (__I_to_js : __I -> Ojs.t) ->
        fun (__O_to_js : __O -> Ojs.t) ->
          fun (x16065 : (__I, __O) t) -> t_to_js __I_to_js __O_to_js x16065
    type 'I t_1 = ('I, any) t
    let rec t_1_of_js : 'I . (Ojs.t -> 'I) -> Ojs.t -> 'I t_1 = fun (type
      __I) ->
      fun (__I_of_js : Ojs.t -> __I) ->
        fun (x16074 : Ojs.t) -> t_of_js __I_of_js any_of_js x16074
    and t_1_to_js : 'I . ('I -> Ojs.t) -> 'I t_1 -> Ojs.t = fun (type __I) ->
      fun (__I_to_js : __I -> Ojs.t) ->
        fun (x16071 : (__I, any) t) -> t_to_js __I_to_js any_to_js x16071
    type t_0 = (any, any) t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x16080 : Ojs.t) -> t_of_js any_of_js any_of_js x16080
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x16077 : (any, any) t) -> t_to_js any_to_js any_to_js x16077
    type ('I, 'O) tags = [ `TransformStream of ('I * 'O) ]
    type ('I, 'O) tags_2 = ('I, 'O) tags
    type 'I tags_1 = ('I, any) tags
    type tags_0 = (any, any) tags
    type ('tags, 'I, 'O) this =
      'tags intf constraint 'tags = [> `TransformStream of ('I * 'O) ]
    let rec this_of_js :
      'tags 'I 'O .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'I) -> (Ojs.t -> 'O) -> Ojs.t -> ('tags, 'I, 'O) this
      = fun (type __tags) -> fun (type __I) -> fun (type __O) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__I_of_js : Ojs.t -> __I) ->
          fun (__O_of_js : Ojs.t -> __O) ->
            fun (x16085 : Ojs.t) -> intf_of_js __tags_of_js x16085
    and this_to_js :
      'tags 'I 'O .
        ('tags -> Ojs.t) ->
          ('I -> Ojs.t) -> ('O -> Ojs.t) -> ('tags, 'I, 'O) this -> Ojs.t
      = fun (type __tags) -> fun (type __I) -> fun (type __O) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__I_to_js : __I -> Ojs.t) ->
          fun (__O_to_js : __O -> Ojs.t) ->
            fun (x16083 : __tags intf) -> intf_to_js __tags_to_js x16083
    let (get_readable : ('tags, 'I, 'O) this -> 'O ReadableStream.t) =
      fun (x16087 : ('tags, 'I, 'O) this) ->
        ReadableStream.t_of_js Obj.magic
          (Ojs.get_prop_ascii
             (this_to_js Obj.magic Obj.magic Obj.magic x16087) "readable")
    let (get_writable : ('tags, 'I, 'O) this -> 'I WritableStream.t) =
      fun (x16092 : ('tags, 'I, 'O) this) ->
        WritableStream.t_of_js Obj.magic
          (Ojs.get_prop_ascii
             (this_to_js Obj.magic Obj.magic Obj.magic x16092) "writable")
    let cast_from = Obj.magic
    let (prototype : unit -> t_0) =
      fun () ->
        t_0_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "TransformStream") "prototype")
    let (create :
      ?transformer:('I, 'O) Transformer.t ->
        ?writableStrategy:'I QueuingStrategy.t ->
          ?readableStrategy:'O QueuingStrategy.t -> unit -> ('I, 'O) t)
      =
      fun ?transformer:(x16097 : ('I, 'O) Transformer.t option) ->
        fun ?writableStrategy:(x16098 : 'I QueuingStrategy.t option) ->
          fun ?readableStrategy:(x16099 : 'O QueuingStrategy.t option) ->
            fun () ->
              t_of_js Obj.magic Obj.magic
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "TransformStream")
                   (let x16100 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    (match x16097 with
                     | Some x16105 ->
                         ignore
                           (Ojs.call x16100 "push"
                              [|(Transformer.t_to_js Obj.magic Obj.magic
                                   x16105)|])
                     | None -> ());
                    (match x16098 with
                     | Some x16103 ->
                         ignore
                           (Ojs.call x16100 "push"
                              [|(QueuingStrategy.t_to_js Obj.magic x16103)|])
                     | None -> ());
                    (match x16099 with
                     | Some x16101 ->
                         ignore
                           (Ojs.call x16100 "push"
                              [|(QueuingStrategy.t_to_js Obj.magic x16101)|])
                     | None -> ());
                    x16100))
  end
module AnonymousInterface107 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x16111 : Ojs.t) -> x16111
    and t_to_js : t -> Ojs.t = fun (x16110 : Ojs.t) -> x16110
    let (get_prototype : t -> TransformStream.t_0) =
      fun (x16112 : t) ->
        TransformStream.t_0_of_js
          (Ojs.get_prop_ascii (t_to_js x16112) "prototype")
    let (set_prototype : t -> TransformStream.t_0 -> unit) =
      fun (x16113 : t) ->
        fun (x16114 : TransformStream.t_0) ->
          Ojs.set_prop_ascii (t_to_js x16113) "prototype"
            (TransformStream.t_0_to_js x16114)
    let (create :
      t ->
        ?transformer:('I, 'O) Transformer.t ->
          ?writableStrategy:'I QueuingStrategy.t ->
            ?readableStrategy:'O QueuingStrategy.t ->
              unit -> ('I, 'O) TransformStream.t)
      =
      fun (x16126 : t) ->
        fun ?transformer:(x16115 : ('I, 'O) Transformer.t option) ->
          fun ?writableStrategy:(x16116 : 'I QueuingStrategy.t option) ->
            fun ?readableStrategy:(x16117 : 'O QueuingStrategy.t option) ->
              fun () ->
                TransformStream.t_of_js Obj.magic Obj.magic
                  (Ojs.new_obj_arr (t_to_js x16126)
                     (let x16118 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x16115 with
                       | Some x16123 ->
                           ignore
                             (Ojs.call x16118 "push"
                                [|(Transformer.t_to_js Obj.magic Obj.magic
                                     x16123)|])
                       | None -> ());
                      (match x16116 with
                       | Some x16121 ->
                           ignore
                             (Ojs.call x16118 "push"
                                [|(QueuingStrategy.t_to_js Obj.magic x16121)|])
                       | None -> ());
                      (match x16117 with
                       | Some x16119 ->
                           ignore
                             (Ojs.call x16118 "push"
                                [|(QueuingStrategy.t_to_js Obj.magic x16119)|])
                       | None -> ());
                      x16118))
  end
module TextMetrics =
  struct
    type t = [ `TextMetrics ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x16130 : Ojs.t) -> t_of_js x16130
    and t_0_to_js : t_0 -> Ojs.t = fun (x16129 : t) -> t_to_js x16129
    type tags = [ `TextMetrics ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `TextMetrics ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x16133 : Ojs.t) -> intf_of_js __tags_of_js x16133
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x16131 : __tags intf) -> intf_to_js __tags_to_js x16131
    let (get_actualBoundingBoxAscent : 'tags this -> float) =
      fun (x16135 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x16135)
             "actualBoundingBoxAscent")
    let (get_actualBoundingBoxDescent : 'tags this -> float) =
      fun (x16137 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x16137)
             "actualBoundingBoxDescent")
    let (get_actualBoundingBoxLeft : 'tags this -> float) =
      fun (x16139 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x16139)
             "actualBoundingBoxLeft")
    let (get_actualBoundingBoxRight : 'tags this -> float) =
      fun (x16141 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x16141)
             "actualBoundingBoxRight")
    let (get_fontBoundingBoxAscent : 'tags this -> float) =
      fun (x16143 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x16143)
             "fontBoundingBoxAscent")
    let (get_fontBoundingBoxDescent : 'tags this -> float) =
      fun (x16145 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x16145)
             "fontBoundingBoxDescent")
    let (get_width : 'tags this -> float) =
      fun (x16147 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x16147) "width")
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "TextMetrics")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "TextMetrics") [||])
  end
module AnonymousInterface106 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x16150 : Ojs.t) -> x16150
    and t_to_js : t -> Ojs.t = fun (x16149 : Ojs.t) -> x16149
    let (get_prototype : t -> TextMetrics.t) =
      fun (x16151 : t) ->
        TextMetrics.t_of_js (Ojs.get_prop_ascii (t_to_js x16151) "prototype")
    let (set_prototype : t -> TextMetrics.t -> unit) =
      fun (x16152 : t) ->
        fun (x16153 : TextMetrics.t) ->
          Ojs.set_prop_ascii (t_to_js x16152) "prototype"
            (TextMetrics.t_to_js x16153)
    let (create : t -> TextMetrics.t) =
      fun (x16154 : t) ->
        TextMetrics.t_of_js (Ojs.new_obj (t_to_js x16154) [||])
  end
module TextEncoderCommon =
  struct
    type t = [ `TextEncoderCommon ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x16156 : Ojs.t) -> t_of_js x16156
    and t_0_to_js : t_0 -> Ojs.t = fun (x16155 : t) -> t_to_js x16155
    type tags = [ `TextEncoderCommon ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `TextEncoderCommon ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x16159 : Ojs.t) -> intf_of_js __tags_of_js x16159
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x16157 : __tags intf) -> intf_to_js __tags_to_js x16157
    let (get_encoding : 'tags this -> string) =
      fun (x16161 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x16161) "encoding")
    let cast_from = Obj.magic
  end
module GenericTransformStream =
  struct
    type t = [ `GenericTransformStream ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x16164 : Ojs.t) -> t_of_js x16164
    and t_0_to_js : t_0 -> Ojs.t = fun (x16163 : t) -> t_to_js x16163
    type tags = [ `GenericTransformStream ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `GenericTransformStream ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x16167 : Ojs.t) -> intf_of_js __tags_of_js x16167
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x16165 : __tags intf) -> intf_to_js __tags_to_js x16165
    let (get_readable : 'tags this -> ReadableStream.t_0) =
      fun (x16169 : 'tags this) ->
        ReadableStream.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x16169) "readable")
    let (get_writable : 'tags this -> WritableStream.t_0) =
      fun (x16171 : 'tags this) ->
        WritableStream.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x16171) "writable")
    let cast_from = Obj.magic
  end
module TextEncoderStream =
  struct
    type t =
      [ `GenericTransformStream  | `TextEncoderCommon  | `TextEncoderStream ]
        intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x16174 : Ojs.t) -> t_of_js x16174
    and t_0_to_js : t_0 -> Ojs.t = fun (x16173 : t) -> t_to_js x16173
    type tags =
      [ `GenericTransformStream  | `TextEncoderCommon  | `TextEncoderStream ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `TextEncoderStream ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x16177 : Ojs.t) -> intf_of_js __tags_of_js x16177
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x16175 : __tags intf) -> intf_to_js __tags_to_js x16175
    let (get_readable : 'tags this -> Uint8Array.t_0 ReadableStream.t) =
      fun (x16179 : 'tags this) ->
        ReadableStream.t_of_js Uint8Array.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x16179) "readable")
    let (get_writable : 'tags this -> string WritableStream.t) =
      fun (x16182 : 'tags this) ->
        WritableStream.t_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x16182) "writable")
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "TextEncoderStream") "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "TextEncoderStream")
             [||])
  end
module AnonymousInterface105 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x16186 : Ojs.t) -> x16186
    and t_to_js : t -> Ojs.t = fun (x16185 : Ojs.t) -> x16185
    let (get_prototype : t -> TextEncoderStream.t) =
      fun (x16187 : t) ->
        TextEncoderStream.t_of_js
          (Ojs.get_prop_ascii (t_to_js x16187) "prototype")
    let (set_prototype : t -> TextEncoderStream.t -> unit) =
      fun (x16188 : t) ->
        fun (x16189 : TextEncoderStream.t) ->
          Ojs.set_prop_ascii (t_to_js x16188) "prototype"
            (TextEncoderStream.t_to_js x16189)
    let (create : t -> TextEncoderStream.t) =
      fun (x16190 : t) ->
        TextEncoderStream.t_of_js (Ojs.new_obj (t_to_js x16190) [||])
  end
module TextEncoderEncodeIntoResult =
  struct
    type t = [ `TextEncoderEncodeIntoResult ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x16192 : Ojs.t) -> t_of_js x16192
    and t_0_to_js : t_0 -> Ojs.t = fun (x16191 : t) -> t_to_js x16191
    type tags = [ `TextEncoderEncodeIntoResult ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `TextEncoderEncodeIntoResult ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x16195 : Ojs.t) -> intf_of_js __tags_of_js x16195
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x16193 : __tags intf) -> intf_to_js __tags_to_js x16193
    let (get_read : 'tags this -> float) =
      fun (x16197 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x16197) "read")
    let (set_read : 'tags this -> float -> unit) =
      fun (x16199 : 'tags this) ->
        fun (x16200 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x16199) "read"
            (Ojs.float_to_js x16200)
    let (get_written : 'tags this -> float) =
      fun (x16202 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x16202) "written")
    let (set_written : 'tags this -> float -> unit) =
      fun (x16204 : 'tags this) ->
        fun (x16205 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x16204) "written"
            (Ojs.float_to_js x16205)
    let cast_from = Obj.magic
  end
module TextEncoder =
  struct
    type t = [ `TextEncoder  | `TextEncoderCommon ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x16208 : Ojs.t) -> t_of_js x16208
    and t_0_to_js : t_0 -> Ojs.t = fun (x16207 : t) -> t_to_js x16207
    type tags = [ `TextEncoder  | `TextEncoderCommon ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `TextEncoder ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x16211 : Ojs.t) -> intf_of_js __tags_of_js x16211
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x16209 : __tags intf) -> intf_to_js __tags_to_js x16209
    let (encode : 'tags this -> ?input:string -> unit -> Uint8Array.t_0) =
      fun (x16216 : 'tags this) ->
        fun ?input:(x16213 : string option) ->
          fun () ->
            Uint8Array.t_0_of_js
              (let x16218 = this_to_js Obj.magic x16216 in
               Ojs.call (Ojs.get_prop_ascii x16218 "encode") "apply"
                 [|x16218;((let x16214 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x16213 with
                             | Some x16215 ->
                                 ignore
                                   (Ojs.call x16214 "push"
                                      [|(Ojs.string_to_js x16215)|])
                             | None -> ());
                            x16214))|])
    let (encodeInto :
      'tags this ->
        source:string ->
          destination:Uint8Array.t_0 -> TextEncoderEncodeIntoResult.t)
      =
      fun (x16221 : 'tags this) ->
        fun ~source:(x16219 : string) ->
          fun ~destination:(x16220 : Uint8Array.t_0) ->
            TextEncoderEncodeIntoResult.t_of_js
              (Ojs.call (this_to_js Obj.magic x16221) "encodeInto"
                 [|(Ojs.string_to_js x16219);(Uint8Array.t_0_to_js x16220)|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "TextEncoder")
             "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "TextEncoder") [||])
  end
module AnonymousInterface104 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x16224 : Ojs.t) -> x16224
    and t_to_js : t -> Ojs.t = fun (x16223 : Ojs.t) -> x16223
    let (get_prototype : t -> TextEncoder.t) =
      fun (x16225 : t) ->
        TextEncoder.t_of_js (Ojs.get_prop_ascii (t_to_js x16225) "prototype")
    let (set_prototype : t -> TextEncoder.t -> unit) =
      fun (x16226 : t) ->
        fun (x16227 : TextEncoder.t) ->
          Ojs.set_prop_ascii (t_to_js x16226) "prototype"
            (TextEncoder.t_to_js x16227)
    let (create : t -> TextEncoder.t) =
      fun (x16228 : t) ->
        TextEncoder.t_of_js (Ojs.new_obj (t_to_js x16228) [||])
  end
module TextDecoderOptions =
  struct
    type t = [ `TextDecoderOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x16230 : Ojs.t) -> t_of_js x16230
    and t_0_to_js : t_0 -> Ojs.t = fun (x16229 : t) -> t_to_js x16229
    type tags = [ `TextDecoderOptions ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `TextDecoderOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x16233 : Ojs.t) -> intf_of_js __tags_of_js x16233
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x16231 : __tags intf) -> intf_to_js __tags_to_js x16231
    let (get_fatal : 'tags this -> bool) =
      fun (x16235 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x16235) "fatal")
    let (set_fatal : 'tags this -> bool -> unit) =
      fun (x16237 : 'tags this) ->
        fun (x16238 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x16237) "fatal"
            (Ojs.bool_to_js x16238)
    let (get_ignoreBOM : 'tags this -> bool) =
      fun (x16240 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x16240) "ignoreBOM")
    let (set_ignoreBOM : 'tags this -> bool -> unit) =
      fun (x16242 : 'tags this) ->
        fun (x16243 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x16242) "ignoreBOM"
            (Ojs.bool_to_js x16243)
    let cast_from = Obj.magic
  end
module TextDecoderCommon =
  struct
    type t = [ `TextDecoderCommon ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x16246 : Ojs.t) -> t_of_js x16246
    and t_0_to_js : t_0 -> Ojs.t = fun (x16245 : t) -> t_to_js x16245
    type tags = [ `TextDecoderCommon ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `TextDecoderCommon ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x16249 : Ojs.t) -> intf_of_js __tags_of_js x16249
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x16247 : __tags intf) -> intf_to_js __tags_to_js x16247
    let (get_encoding : 'tags this -> string) =
      fun (x16251 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x16251) "encoding")
    let (get_fatal : 'tags this -> bool) =
      fun (x16253 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x16253) "fatal")
    let (get_ignoreBOM : 'tags this -> bool) =
      fun (x16255 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x16255) "ignoreBOM")
    let cast_from = Obj.magic
  end
module TextDecoderStream =
  struct
    type t =
      [ `GenericTransformStream  | `TextDecoderCommon  | `TextDecoderStream ]
        intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x16258 : Ojs.t) -> t_of_js x16258
    and t_0_to_js : t_0 -> Ojs.t = fun (x16257 : t) -> t_to_js x16257
    type tags =
      [ `GenericTransformStream  | `TextDecoderCommon  | `TextDecoderStream ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `TextDecoderStream ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x16261 : Ojs.t) -> intf_of_js __tags_of_js x16261
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x16259 : __tags intf) -> intf_to_js __tags_to_js x16259
    let (get_readable : 'tags this -> string ReadableStream.t) =
      fun (x16263 : 'tags this) ->
        ReadableStream.t_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x16263) "readable")
    let (get_writable : 'tags this -> BufferSource.t WritableStream.t) =
      fun (x16266 : 'tags this) ->
        WritableStream.t_of_js BufferSource.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x16266) "writable")
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "TextDecoderStream") "prototype")
    let (create :
      ?label:string -> ?options:TextDecoderOptions.t -> unit -> t) =
      fun ?label:(x16269 : string option) ->
        fun ?options:(x16270 : TextDecoderOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "TextDecoderStream")
                 (let x16271 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x16269 with
                   | Some x16273 ->
                       ignore
                         (Ojs.call x16271 "push"
                            [|(Ojs.string_to_js x16273)|])
                   | None -> ());
                  (match x16270 with
                   | Some x16272 ->
                       ignore
                         (Ojs.call x16271 "push"
                            [|(TextDecoderOptions.t_to_js x16272)|])
                   | None -> ());
                  x16271))
  end
module AnonymousInterface103 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x16275 : Ojs.t) -> x16275
    and t_to_js : t -> Ojs.t = fun (x16274 : Ojs.t) -> x16274
    let (get_prototype : t -> TextDecoderStream.t) =
      fun (x16276 : t) ->
        TextDecoderStream.t_of_js
          (Ojs.get_prop_ascii (t_to_js x16276) "prototype")
    let (set_prototype : t -> TextDecoderStream.t -> unit) =
      fun (x16277 : t) ->
        fun (x16278 : TextDecoderStream.t) ->
          Ojs.set_prop_ascii (t_to_js x16277) "prototype"
            (TextDecoderStream.t_to_js x16278)
    let (create :
      t ->
        ?label:string ->
          ?options:TextDecoderOptions.t -> unit -> TextDecoderStream.t)
      =
      fun (x16284 : t) ->
        fun ?label:(x16279 : string option) ->
          fun ?options:(x16280 : TextDecoderOptions.t option) ->
            fun () ->
              TextDecoderStream.t_of_js
                (Ojs.new_obj_arr (t_to_js x16284)
                   (let x16281 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    (match x16279 with
                     | Some x16283 ->
                         ignore
                           (Ojs.call x16281 "push"
                              [|(Ojs.string_to_js x16283)|])
                     | None -> ());
                    (match x16280 with
                     | Some x16282 ->
                         ignore
                           (Ojs.call x16281 "push"
                              [|(TextDecoderOptions.t_to_js x16282)|])
                     | None -> ());
                    x16281))
  end
module TextDecodeOptions =
  struct
    type t = [ `TextDecodeOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x16286 : Ojs.t) -> t_of_js x16286
    and t_0_to_js : t_0 -> Ojs.t = fun (x16285 : t) -> t_to_js x16285
    type tags = [ `TextDecodeOptions ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `TextDecodeOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x16289 : Ojs.t) -> intf_of_js __tags_of_js x16289
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x16287 : __tags intf) -> intf_to_js __tags_to_js x16287
    let (get_stream : 'tags this -> bool) =
      fun (x16291 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x16291) "stream")
    let (set_stream : 'tags this -> bool -> unit) =
      fun (x16293 : 'tags this) ->
        fun (x16294 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x16293) "stream"
            (Ojs.bool_to_js x16294)
    let cast_from = Obj.magic
  end
module TextDecoder =
  struct
    type t = [ `TextDecoder  | `TextDecoderCommon ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x16297 : Ojs.t) -> t_of_js x16297
    and t_0_to_js : t_0 -> Ojs.t = fun (x16296 : t) -> t_to_js x16296
    type tags = [ `TextDecoder  | `TextDecoderCommon ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `TextDecoder ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x16300 : Ojs.t) -> intf_of_js __tags_of_js x16300
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x16298 : __tags intf) -> intf_to_js __tags_to_js x16298
    let (decode :
      'tags this ->
        ?input:BufferSource.t ->
          ?options:TextDecodeOptions.t -> unit -> string)
      =
      fun (x16307 : 'tags this) ->
        fun ?input:(x16302 : BufferSource.t option) ->
          fun ?options:(x16303 : TextDecodeOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x16309 = this_to_js Obj.magic x16307 in
                 Ojs.call (Ojs.get_prop_ascii x16309 "decode") "apply"
                   [|x16309;((let x16304 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x16302 with
                               | Some x16306 ->
                                   ignore
                                     (Ojs.call x16304 "push"
                                        [|(BufferSource.t_to_js x16306)|])
                               | None -> ());
                              (match x16303 with
                               | Some x16305 ->
                                   ignore
                                     (Ojs.call x16304 "push"
                                        [|(TextDecodeOptions.t_to_js x16305)|])
                               | None -> ());
                              x16304))|])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "TextDecoder")
             "prototype")
    let (create :
      ?label:string -> ?options:TextDecoderOptions.t -> unit -> t) =
      fun ?label:(x16310 : string option) ->
        fun ?options:(x16311 : TextDecoderOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "TextDecoder")
                 (let x16312 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x16310 with
                   | Some x16314 ->
                       ignore
                         (Ojs.call x16312 "push"
                            [|(Ojs.string_to_js x16314)|])
                   | None -> ());
                  (match x16311 with
                   | Some x16313 ->
                       ignore
                         (Ojs.call x16312 "push"
                            [|(TextDecoderOptions.t_to_js x16313)|])
                   | None -> ());
                  x16312))
  end
module AnonymousInterface102 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x16316 : Ojs.t) -> x16316
    and t_to_js : t -> Ojs.t = fun (x16315 : Ojs.t) -> x16315
    let (get_prototype : t -> TextDecoder.t) =
      fun (x16317 : t) ->
        TextDecoder.t_of_js (Ojs.get_prop_ascii (t_to_js x16317) "prototype")
    let (set_prototype : t -> TextDecoder.t -> unit) =
      fun (x16318 : t) ->
        fun (x16319 : TextDecoder.t) ->
          Ojs.set_prop_ascii (t_to_js x16318) "prototype"
            (TextDecoder.t_to_js x16319)
    let (create :
      t ->
        ?label:string ->
          ?options:TextDecoderOptions.t -> unit -> TextDecoder.t)
      =
      fun (x16325 : t) ->
        fun ?label:(x16320 : string option) ->
          fun ?options:(x16321 : TextDecoderOptions.t option) ->
            fun () ->
              TextDecoder.t_of_js
                (Ojs.new_obj_arr (t_to_js x16325)
                   (let x16322 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    (match x16320 with
                     | Some x16324 ->
                         ignore
                           (Ojs.call x16322 "push"
                              [|(Ojs.string_to_js x16324)|])
                     | None -> ());
                    (match x16321 with
                     | Some x16323 ->
                         ignore
                           (Ojs.call x16322 "push"
                              [|(TextDecoderOptions.t_to_js x16323)|])
                     | None -> ());
                    x16322))
  end
module AnonymousInterface100 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x16327 : Ojs.t) -> x16327
    and t_to_js : t -> Ojs.t = fun (x16326 : Ojs.t) -> x16326
    let (get_prototype : t -> SubtleCrypto.t) =
      fun (x16328 : t) ->
        SubtleCrypto.t_of_js
          (Ojs.get_prop_ascii (t_to_js x16328) "prototype")
    let (set_prototype : t -> SubtleCrypto.t -> unit) =
      fun (x16329 : t) ->
        fun (x16330 : SubtleCrypto.t) ->
          Ojs.set_prop_ascii (t_to_js x16329) "prototype"
            (SubtleCrypto.t_to_js x16330)
    let (create : t -> SubtleCrypto.t) =
      fun (x16331 : t) ->
        SubtleCrypto.t_of_js (Ojs.new_obj (t_to_js x16331) [||])
  end
module AnonymousInterface10 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x16333 : Ojs.t) -> x16333
    and t_to_js : t -> Ojs.t = fun (x16332 : Ojs.t) -> x16332
    let (get_prototype : t -> Clients.t) =
      fun (x16334 : t) ->
        Clients.t_of_js (Ojs.get_prop_ascii (t_to_js x16334) "prototype")
    let (set_prototype : t -> Clients.t -> unit) =
      fun (x16335 : t) ->
        fun (x16336 : Clients.t) ->
          Ojs.set_prop_ascii (t_to_js x16335) "prototype"
            (Clients.t_to_js x16336)
    let (create : t -> Clients.t) =
      fun (x16337 : t) -> Clients.t_of_js (Ojs.new_obj (t_to_js x16337) [||])
  end
module AnonymousInterface1 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x16339 : Ojs.t) -> x16339
    and t_to_js : t -> Ojs.t = fun (x16338 : Ojs.t) -> x16338
    let (get_prototype : t -> AbortSignal.t) =
      fun (x16340 : t) ->
        AbortSignal.t_of_js (Ojs.get_prop_ascii (t_to_js x16340) "prototype")
    let (set_prototype : t -> AbortSignal.t -> unit) =
      fun (x16341 : t) ->
        fun (x16342 : AbortSignal.t) ->
          Ojs.set_prop_ascii (t_to_js x16341) "prototype"
            (AbortSignal.t_to_js x16342)
    let (create : t -> AbortSignal.t) =
      fun (x16343 : t) ->
        AbortSignal.t_of_js (Ojs.new_obj (t_to_js x16343) [||])
  end
module AbortController =
  struct
    type t = [ `AbortController ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x16345 : Ojs.t) -> t_of_js x16345
    and t_0_to_js : t_0 -> Ojs.t = fun (x16344 : t) -> t_to_js x16344
    type tags = [ `AbortController ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `AbortController ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x16348 : Ojs.t) -> intf_of_js __tags_of_js x16348
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x16346 : __tags intf) -> intf_to_js __tags_to_js x16346
    let (get_signal : 'tags this -> AbortSignal.t) =
      fun (x16350 : 'tags this) ->
        AbortSignal.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x16350) "signal")
    let (abort : 'tags this -> unit) =
      fun (x16352 : 'tags this) ->
        ignore (Ojs.call (this_to_js Obj.magic x16352) "abort" [||])
    let cast_from = Obj.magic
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "AbortController") "prototype")
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "AbortController") [||])
  end
module AnonymousInterface0 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x16355 : Ojs.t) -> x16355
    and t_to_js : t -> Ojs.t = fun (x16354 : Ojs.t) -> x16354
    let (get_prototype : t -> AbortController.t) =
      fun (x16356 : t) ->
        AbortController.t_of_js
          (Ojs.get_prop_ascii (t_to_js x16356) "prototype")
    let (set_prototype : t -> AbortController.t -> unit) =
      fun (x16357 : t) ->
        fun (x16358 : AbortController.t) ->
          Ojs.set_prop_ascii (t_to_js x16357) "prototype"
            (AbortController.t_to_js x16358)
    let (create : t -> AbortController.t) =
      fun (x16359 : t) ->
        AbortController.t_of_js (Ojs.new_obj (t_to_js x16359) [||])
  end
module AbortSignalEventMap =
  struct
    type t = [ `AbortSignalEventMap ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x16361 : Ojs.t) -> t_of_js x16361
    and t_0_to_js : t_0 -> Ojs.t = fun (x16360 : t) -> t_to_js x16360
    type tags = [ `AbortSignalEventMap ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `AbortSignalEventMap ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x16364 : Ojs.t) -> intf_of_js __tags_of_js x16364
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x16362 : __tags intf) -> intf_to_js __tags_to_js x16362
    let (get_abort : 'tags this -> Event.t) =
      fun (x16366 : 'tags this) ->
        Event.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x16366) "abort")
    let (set_abort : 'tags this -> Event.t -> unit) =
      fun (x16368 : 'tags this) ->
        fun (x16369 : Event.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x16368) "abort"
            (Event.t_to_js x16369)
    let cast_from = Obj.magic
  end
let (importScripts : string list -> unit) =
  fun (x16371 : string list) ->
    ignore
      (let x16374 = Ojs.global in
       Ojs.call (Ojs.get_prop_ascii x16374 "importScripts") "apply"
         [|x16374;((let x16372 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x16373 : string) ->
                         ignore
                           (Ojs.call x16372 "push"
                              [|(Ojs.string_to_js x16373)|])) x16371;
                    x16372))|])
let (abortController : unit -> AnonymousInterface0.t) =
  fun () ->
    AnonymousInterface0.t_of_js
      (Ojs.get_prop_ascii Ojs.global "AbortController")
let (abortSignal : unit -> AnonymousInterface1.t) =
  fun () ->
    AnonymousInterface1.t_of_js (Ojs.get_prop_ascii Ojs.global "AbortSignal")
let (blob : unit -> AnonymousInterface2.t) =
  fun () ->
    AnonymousInterface2.t_of_js (Ojs.get_prop_ascii Ojs.global "Blob")
let (broadcastChannel : unit -> AnonymousInterface3.t) =
  fun () ->
    AnonymousInterface3.t_of_js
      (Ojs.get_prop_ascii Ojs.global "BroadcastChannel")
let (byteLengthQueuingStrategy : unit -> AnonymousInterface4.t) =
  fun () ->
    AnonymousInterface4.t_of_js
      (Ojs.get_prop_ascii Ojs.global "ByteLengthQueuingStrategy")
let (cache : unit -> AnonymousInterface5.t) =
  fun () ->
    AnonymousInterface5.t_of_js (Ojs.get_prop_ascii Ojs.global "Cache")
let (cacheStorage : unit -> AnonymousInterface6.t) =
  fun () ->
    AnonymousInterface6.t_of_js
      (Ojs.get_prop_ascii Ojs.global "CacheStorage")
let (canvasGradient : unit -> AnonymousInterface7.t) =
  fun () ->
    AnonymousInterface7.t_of_js
      (Ojs.get_prop_ascii Ojs.global "CanvasGradient")
let (canvasPattern : unit -> AnonymousInterface8.t) =
  fun () ->
    AnonymousInterface8.t_of_js
      (Ojs.get_prop_ascii Ojs.global "CanvasPattern")
let (client : unit -> AnonymousInterface9.t) =
  fun () ->
    AnonymousInterface9.t_of_js (Ojs.get_prop_ascii Ojs.global "Client")
let (clients : unit -> AnonymousInterface10.t) =
  fun () ->
    AnonymousInterface10.t_of_js (Ojs.get_prop_ascii Ojs.global "Clients")
let (closeEvent : unit -> AnonymousInterface11.t) =
  fun () ->
    AnonymousInterface11.t_of_js (Ojs.get_prop_ascii Ojs.global "CloseEvent")
let (countQueuingStrategy : unit -> AnonymousInterface13.t) =
  fun () ->
    AnonymousInterface13.t_of_js
      (Ojs.get_prop_ascii Ojs.global "CountQueuingStrategy")
let (crypto : unit -> AnonymousInterface14.t) =
  fun () ->
    AnonymousInterface14.t_of_js (Ojs.get_prop_ascii Ojs.global "Crypto")
let (cryptoKey : unit -> AnonymousInterface15.t) =
  fun () ->
    AnonymousInterface15.t_of_js (Ojs.get_prop_ascii Ojs.global "CryptoKey")
let (customEvent : unit -> AnonymousInterface16.t) =
  fun () ->
    AnonymousInterface16.t_of_js
      (Ojs.get_prop_ascii Ojs.global "CustomEvent")
let (dOMException : unit -> AnonymousInterface17.t) =
  fun () ->
    AnonymousInterface17.t_of_js
      (Ojs.get_prop_ascii Ojs.global "DOMException")
let (dOMMatrix : unit -> AnonymousInterface18.t) =
  fun () ->
    AnonymousInterface18.t_of_js (Ojs.get_prop_ascii Ojs.global "DOMMatrix")
let (dOMMatrixReadOnly : unit -> AnonymousInterface19.t) =
  fun () ->
    AnonymousInterface19.t_of_js
      (Ojs.get_prop_ascii Ojs.global "DOMMatrixReadOnly")
let (dOMPoint : unit -> AnonymousInterface20.t) =
  fun () ->
    AnonymousInterface20.t_of_js (Ojs.get_prop_ascii Ojs.global "DOMPoint")
let (dOMPointReadOnly : unit -> AnonymousInterface21.t) =
  fun () ->
    AnonymousInterface21.t_of_js
      (Ojs.get_prop_ascii Ojs.global "DOMPointReadOnly")
let (dOMQuad : unit -> AnonymousInterface22.t) =
  fun () ->
    AnonymousInterface22.t_of_js (Ojs.get_prop_ascii Ojs.global "DOMQuad")
let (dOMRect : unit -> AnonymousInterface23.t) =
  fun () ->
    AnonymousInterface23.t_of_js (Ojs.get_prop_ascii Ojs.global "DOMRect")
let (dOMRectReadOnly : unit -> AnonymousInterface24.t) =
  fun () ->
    AnonymousInterface24.t_of_js
      (Ojs.get_prop_ascii Ojs.global "DOMRectReadOnly")
let (dOMStringList : unit -> AnonymousInterface25.t) =
  fun () ->
    AnonymousInterface25.t_of_js
      (Ojs.get_prop_ascii Ojs.global "DOMStringList")
let (dedicatedWorkerGlobalScope : unit -> AnonymousInterface26.t) =
  fun () ->
    AnonymousInterface26.t_of_js
      (Ojs.get_prop_ascii Ojs.global "DedicatedWorkerGlobalScope")
let (errorEvent : unit -> AnonymousInterface27.t) =
  fun () ->
    AnonymousInterface27.t_of_js (Ojs.get_prop_ascii Ojs.global "ErrorEvent")
let (event : unit -> AnonymousInterface28.t) =
  fun () ->
    AnonymousInterface28.t_of_js (Ojs.get_prop_ascii Ojs.global "Event")
let (eventSource : unit -> AnonymousInterface29.t) =
  fun () ->
    AnonymousInterface29.t_of_js
      (Ojs.get_prop_ascii Ojs.global "EventSource")
let (eventTarget : unit -> AnonymousInterface30.t) =
  fun () ->
    AnonymousInterface30.t_of_js
      (Ojs.get_prop_ascii Ojs.global "EventTarget")
let (extendableEvent : unit -> AnonymousInterface31.t) =
  fun () ->
    AnonymousInterface31.t_of_js
      (Ojs.get_prop_ascii Ojs.global "ExtendableEvent")
let (extendableMessageEvent : unit -> AnonymousInterface32.t) =
  fun () ->
    AnonymousInterface32.t_of_js
      (Ojs.get_prop_ascii Ojs.global "ExtendableMessageEvent")
let (fetchEvent : unit -> AnonymousInterface33.t) =
  fun () ->
    AnonymousInterface33.t_of_js (Ojs.get_prop_ascii Ojs.global "FetchEvent")
let (file : unit -> AnonymousInterface34.t) =
  fun () ->
    AnonymousInterface34.t_of_js (Ojs.get_prop_ascii Ojs.global "File")
let (fileList : unit -> AnonymousInterface35.t) =
  fun () ->
    AnonymousInterface35.t_of_js (Ojs.get_prop_ascii Ojs.global "FileList")
let (fileReader : unit -> AnonymousInterface36.t) =
  fun () ->
    AnonymousInterface36.t_of_js (Ojs.get_prop_ascii Ojs.global "FileReader")
let (fileReaderSync : unit -> AnonymousInterface37.t) =
  fun () ->
    AnonymousInterface37.t_of_js
      (Ojs.get_prop_ascii Ojs.global "FileReaderSync")
let (fontFace : unit -> AnonymousInterface38.t) =
  fun () ->
    AnonymousInterface38.t_of_js (Ojs.get_prop_ascii Ojs.global "FontFace")
let (fontFaceSet : unit -> AnonymousInterface39.t) =
  fun () ->
    AnonymousInterface39.t_of_js
      (Ojs.get_prop_ascii Ojs.global "FontFaceSet")
let (fontFaceSetLoadEvent : unit -> AnonymousInterface40.t) =
  fun () ->
    AnonymousInterface40.t_of_js
      (Ojs.get_prop_ascii Ojs.global "FontFaceSetLoadEvent")
let (formData : unit -> AnonymousInterface41.t) =
  fun () ->
    AnonymousInterface41.t_of_js (Ojs.get_prop_ascii Ojs.global "FormData")
let (headers : unit -> AnonymousInterface43.t) =
  fun () ->
    AnonymousInterface43.t_of_js (Ojs.get_prop_ascii Ojs.global "Headers")
let (iDBCursor : unit -> AnonymousInterface44.t) =
  fun () ->
    AnonymousInterface44.t_of_js (Ojs.get_prop_ascii Ojs.global "IDBCursor")
let (iDBCursorWithValue : unit -> AnonymousInterface45.t) =
  fun () ->
    AnonymousInterface45.t_of_js
      (Ojs.get_prop_ascii Ojs.global "IDBCursorWithValue")
let (iDBDatabase : unit -> AnonymousInterface46.t) =
  fun () ->
    AnonymousInterface46.t_of_js
      (Ojs.get_prop_ascii Ojs.global "IDBDatabase")
let (iDBFactory : unit -> AnonymousInterface47.t) =
  fun () ->
    AnonymousInterface47.t_of_js (Ojs.get_prop_ascii Ojs.global "IDBFactory")
let (iDBIndex : unit -> AnonymousInterface48.t) =
  fun () ->
    AnonymousInterface48.t_of_js (Ojs.get_prop_ascii Ojs.global "IDBIndex")
let (iDBKeyRange : unit -> AnonymousInterface49.t) =
  fun () ->
    AnonymousInterface49.t_of_js
      (Ojs.get_prop_ascii Ojs.global "IDBKeyRange")
let (iDBObjectStore : unit -> AnonymousInterface50.t) =
  fun () ->
    AnonymousInterface50.t_of_js
      (Ojs.get_prop_ascii Ojs.global "IDBObjectStore")
let (iDBOpenDBRequest : unit -> AnonymousInterface51.t) =
  fun () ->
    AnonymousInterface51.t_of_js
      (Ojs.get_prop_ascii Ojs.global "IDBOpenDBRequest")
let (iDBRequest : unit -> AnonymousInterface52.t) =
  fun () ->
    AnonymousInterface52.t_of_js (Ojs.get_prop_ascii Ojs.global "IDBRequest")
let (iDBTransaction : unit -> AnonymousInterface53.t) =
  fun () ->
    AnonymousInterface53.t_of_js
      (Ojs.get_prop_ascii Ojs.global "IDBTransaction")
let (iDBVersionChangeEvent : unit -> AnonymousInterface54.t) =
  fun () ->
    AnonymousInterface54.t_of_js
      (Ojs.get_prop_ascii Ojs.global "IDBVersionChangeEvent")
let (imageBitmap : unit -> AnonymousInterface55.t) =
  fun () ->
    AnonymousInterface55.t_of_js
      (Ojs.get_prop_ascii Ojs.global "ImageBitmap")
let (imageBitmapRenderingContext : unit -> AnonymousInterface56.t) =
  fun () ->
    AnonymousInterface56.t_of_js
      (Ojs.get_prop_ascii Ojs.global "ImageBitmapRenderingContext")
let (imageData : unit -> AnonymousInterface57.t) =
  fun () ->
    AnonymousInterface57.t_of_js (Ojs.get_prop_ascii Ojs.global "ImageData")
let (mediaCapabilities : unit -> AnonymousInterface60.t) =
  fun () ->
    AnonymousInterface60.t_of_js
      (Ojs.get_prop_ascii Ojs.global "MediaCapabilities")
let (messageChannel : unit -> AnonymousInterface62.t) =
  fun () ->
    AnonymousInterface62.t_of_js
      (Ojs.get_prop_ascii Ojs.global "MessageChannel")
let (messageEvent : unit -> AnonymousInterface63.t) =
  fun () ->
    AnonymousInterface63.t_of_js
      (Ojs.get_prop_ascii Ojs.global "MessageEvent")
let (messagePort : unit -> AnonymousInterface64.t) =
  fun () ->
    AnonymousInterface64.t_of_js
      (Ojs.get_prop_ascii Ojs.global "MessagePort")
let (networkInformation : unit -> AnonymousInterface66.t) =
  fun () ->
    AnonymousInterface66.t_of_js
      (Ojs.get_prop_ascii Ojs.global "NetworkInformation")
let (notification : unit -> AnonymousInterface67.t) =
  fun () ->
    AnonymousInterface67.t_of_js
      (Ojs.get_prop_ascii Ojs.global "Notification")
let (notificationEvent : unit -> AnonymousInterface68.t) =
  fun () ->
    AnonymousInterface68.t_of_js
      (Ojs.get_prop_ascii Ojs.global "NotificationEvent")
let (path2D : unit -> AnonymousInterface69.t) =
  fun () ->
    AnonymousInterface69.t_of_js (Ojs.get_prop_ascii Ojs.global "Path2D")
let (performance : unit -> AnonymousInterface70.t) =
  fun () ->
    AnonymousInterface70.t_of_js
      (Ojs.get_prop_ascii Ojs.global "Performance")
let (performanceEntry : unit -> AnonymousInterface71.t) =
  fun () ->
    AnonymousInterface71.t_of_js
      (Ojs.get_prop_ascii Ojs.global "PerformanceEntry")
let (performanceMark : unit -> AnonymousInterface72.t) =
  fun () ->
    AnonymousInterface72.t_of_js
      (Ojs.get_prop_ascii Ojs.global "PerformanceMark")
let (performanceMeasure : unit -> AnonymousInterface73.t) =
  fun () ->
    AnonymousInterface73.t_of_js
      (Ojs.get_prop_ascii Ojs.global "PerformanceMeasure")
let (performanceObserver : unit -> AnonymousInterface74.t) =
  fun () ->
    AnonymousInterface74.t_of_js
      (Ojs.get_prop_ascii Ojs.global "PerformanceObserver")
let (performanceObserverEntryList : unit -> AnonymousInterface75.t) =
  fun () ->
    AnonymousInterface75.t_of_js
      (Ojs.get_prop_ascii Ojs.global "PerformanceObserverEntryList")
let (performanceResourceTiming : unit -> AnonymousInterface76.t) =
  fun () ->
    AnonymousInterface76.t_of_js
      (Ojs.get_prop_ascii Ojs.global "PerformanceResourceTiming")
let (performanceServerTiming : unit -> AnonymousInterface77.t) =
  fun () ->
    AnonymousInterface77.t_of_js
      (Ojs.get_prop_ascii Ojs.global "PerformanceServerTiming")
let (permissionStatus : unit -> AnonymousInterface78.t) =
  fun () ->
    AnonymousInterface78.t_of_js
      (Ojs.get_prop_ascii Ojs.global "PermissionStatus")
let (permissions : unit -> AnonymousInterface79.t) =
  fun () ->
    AnonymousInterface79.t_of_js
      (Ojs.get_prop_ascii Ojs.global "Permissions")
let (progressEvent : unit -> AnonymousInterface80.t) =
  fun () ->
    AnonymousInterface80.t_of_js
      (Ojs.get_prop_ascii Ojs.global "ProgressEvent")
let (promiseRejectionEvent : unit -> AnonymousInterface81.t) =
  fun () ->
    AnonymousInterface81.t_of_js
      (Ojs.get_prop_ascii Ojs.global "PromiseRejectionEvent")
let (pushEvent : unit -> AnonymousInterface82.t) =
  fun () ->
    AnonymousInterface82.t_of_js (Ojs.get_prop_ascii Ojs.global "PushEvent")
let (pushManager : unit -> AnonymousInterface83.t) =
  fun () ->
    AnonymousInterface83.t_of_js
      (Ojs.get_prop_ascii Ojs.global "PushManager")
let (pushMessageData : unit -> AnonymousInterface84.t) =
  fun () ->
    AnonymousInterface84.t_of_js
      (Ojs.get_prop_ascii Ojs.global "PushMessageData")
let (pushSubscription : unit -> AnonymousInterface85.t) =
  fun () ->
    AnonymousInterface85.t_of_js
      (Ojs.get_prop_ascii Ojs.global "PushSubscription")
let (pushSubscriptionOptions : unit -> AnonymousInterface86.t) =
  fun () ->
    AnonymousInterface86.t_of_js
      (Ojs.get_prop_ascii Ojs.global "PushSubscriptionOptions")
let (readableStream : unit -> AnonymousInterface87.t) =
  fun () ->
    AnonymousInterface87.t_of_js
      (Ojs.get_prop_ascii Ojs.global "ReadableStream")
let (readableStreamDefaultController : unit -> AnonymousInterface88.t) =
  fun () ->
    AnonymousInterface88.t_of_js
      (Ojs.get_prop_ascii Ojs.global "ReadableStreamDefaultController")
let (readableStreamDefaultReader : unit -> AnonymousInterface89.t) =
  fun () ->
    AnonymousInterface89.t_of_js
      (Ojs.get_prop_ascii Ojs.global "ReadableStreamDefaultReader")
let (request : unit -> AnonymousInterface90.t) =
  fun () ->
    AnonymousInterface90.t_of_js (Ojs.get_prop_ascii Ojs.global "Request")
let (response : unit -> AnonymousInterface91.t) =
  fun () ->
    AnonymousInterface91.t_of_js (Ojs.get_prop_ascii Ojs.global "Response")
let (securityPolicyViolationEvent : unit -> AnonymousInterface93.t) =
  fun () ->
    AnonymousInterface93.t_of_js
      (Ojs.get_prop_ascii Ojs.global "SecurityPolicyViolationEvent")
let (serviceWorker : unit -> AnonymousInterface94.t) =
  fun () ->
    AnonymousInterface94.t_of_js
      (Ojs.get_prop_ascii Ojs.global "ServiceWorker")
let (serviceWorkerContainer : unit -> AnonymousInterface95.t) =
  fun () ->
    AnonymousInterface95.t_of_js
      (Ojs.get_prop_ascii Ojs.global "ServiceWorkerContainer")
let (serviceWorkerGlobalScope : unit -> AnonymousInterface96.t) =
  fun () ->
    AnonymousInterface96.t_of_js
      (Ojs.get_prop_ascii Ojs.global "ServiceWorkerGlobalScope")
let (serviceWorkerRegistration : unit -> AnonymousInterface97.t) =
  fun () ->
    AnonymousInterface97.t_of_js
      (Ojs.get_prop_ascii Ojs.global "ServiceWorkerRegistration")
let (sharedWorkerGlobalScope : unit -> AnonymousInterface98.t) =
  fun () ->
    AnonymousInterface98.t_of_js
      (Ojs.get_prop_ascii Ojs.global "SharedWorkerGlobalScope")
let (storageManager : unit -> AnonymousInterface99.t) =
  fun () ->
    AnonymousInterface99.t_of_js
      (Ojs.get_prop_ascii Ojs.global "StorageManager")
let (subtleCrypto : unit -> AnonymousInterface100.t) =
  fun () ->
    AnonymousInterface100.t_of_js
      (Ojs.get_prop_ascii Ojs.global "SubtleCrypto")
let (textDecoder : unit -> AnonymousInterface102.t) =
  fun () ->
    AnonymousInterface102.t_of_js
      (Ojs.get_prop_ascii Ojs.global "TextDecoder")
let (textDecoderStream : unit -> AnonymousInterface103.t) =
  fun () ->
    AnonymousInterface103.t_of_js
      (Ojs.get_prop_ascii Ojs.global "TextDecoderStream")
let (textEncoder : unit -> AnonymousInterface104.t) =
  fun () ->
    AnonymousInterface104.t_of_js
      (Ojs.get_prop_ascii Ojs.global "TextEncoder")
let (textEncoderStream : unit -> AnonymousInterface105.t) =
  fun () ->
    AnonymousInterface105.t_of_js
      (Ojs.get_prop_ascii Ojs.global "TextEncoderStream")
let (textMetrics : unit -> AnonymousInterface106.t) =
  fun () ->
    AnonymousInterface106.t_of_js
      (Ojs.get_prop_ascii Ojs.global "TextMetrics")
let (transformStream : unit -> AnonymousInterface107.t) =
  fun () ->
    AnonymousInterface107.t_of_js
      (Ojs.get_prop_ascii Ojs.global "TransformStream")
let (transformStreamDefaultController : unit -> AnonymousInterface108.t) =
  fun () ->
    AnonymousInterface108.t_of_js
      (Ojs.get_prop_ascii Ojs.global "TransformStreamDefaultController")
let (url : unit -> AnonymousInterface109.t) =
  fun () ->
    AnonymousInterface109.t_of_js (Ojs.get_prop_ascii Ojs.global "URL")
let (uRLSearchParams : unit -> AnonymousInterface110.t) =
  fun () ->
    AnonymousInterface110.t_of_js
      (Ojs.get_prop_ascii Ojs.global "URLSearchParams")
let (webGL2RenderingContext : unit -> AnonymousInterface111.t) =
  fun () ->
    AnonymousInterface111.t_of_js
      (Ojs.get_prop_ascii Ojs.global "WebGL2RenderingContext")
let (webGLActiveInfo : unit -> AnonymousInterface112.t) =
  fun () ->
    AnonymousInterface112.t_of_js
      (Ojs.get_prop_ascii Ojs.global "WebGLActiveInfo")
let (webGLBuffer : unit -> AnonymousInterface113.t) =
  fun () ->
    AnonymousInterface113.t_of_js
      (Ojs.get_prop_ascii Ojs.global "WebGLBuffer")
let (webGLContextEvent : unit -> AnonymousInterface114.t) =
  fun () ->
    AnonymousInterface114.t_of_js
      (Ojs.get_prop_ascii Ojs.global "WebGLContextEvent")
let (webGLFramebuffer : unit -> AnonymousInterface115.t) =
  fun () ->
    AnonymousInterface115.t_of_js
      (Ojs.get_prop_ascii Ojs.global "WebGLFramebuffer")
let (webGLProgram : unit -> AnonymousInterface116.t) =
  fun () ->
    AnonymousInterface116.t_of_js
      (Ojs.get_prop_ascii Ojs.global "WebGLProgram")
let (webGLQuery : unit -> AnonymousInterface117.t) =
  fun () ->
    AnonymousInterface117.t_of_js
      (Ojs.get_prop_ascii Ojs.global "WebGLQuery")
let (webGLRenderbuffer : unit -> AnonymousInterface118.t) =
  fun () ->
    AnonymousInterface118.t_of_js
      (Ojs.get_prop_ascii Ojs.global "WebGLRenderbuffer")
let (webGLRenderingContext : unit -> AnonymousInterface119.t) =
  fun () ->
    AnonymousInterface119.t_of_js
      (Ojs.get_prop_ascii Ojs.global "WebGLRenderingContext")
let (webGLSampler : unit -> AnonymousInterface120.t) =
  fun () ->
    AnonymousInterface120.t_of_js
      (Ojs.get_prop_ascii Ojs.global "WebGLSampler")
let (webGLShader : unit -> AnonymousInterface121.t) =
  fun () ->
    AnonymousInterface121.t_of_js
      (Ojs.get_prop_ascii Ojs.global "WebGLShader")
let (webGLShaderPrecisionFormat : unit -> AnonymousInterface122.t) =
  fun () ->
    AnonymousInterface122.t_of_js
      (Ojs.get_prop_ascii Ojs.global "WebGLShaderPrecisionFormat")
let (webGLSync : unit -> AnonymousInterface123.t) =
  fun () ->
    AnonymousInterface123.t_of_js (Ojs.get_prop_ascii Ojs.global "WebGLSync")
let (webGLTexture : unit -> AnonymousInterface124.t) =
  fun () ->
    AnonymousInterface124.t_of_js
      (Ojs.get_prop_ascii Ojs.global "WebGLTexture")
let (webGLTransformFeedback : unit -> AnonymousInterface125.t) =
  fun () ->
    AnonymousInterface125.t_of_js
      (Ojs.get_prop_ascii Ojs.global "WebGLTransformFeedback")
let (webGLUniformLocation : unit -> AnonymousInterface126.t) =
  fun () ->
    AnonymousInterface126.t_of_js
      (Ojs.get_prop_ascii Ojs.global "WebGLUniformLocation")
let (webGLVertexArrayObject : unit -> AnonymousInterface127.t) =
  fun () ->
    AnonymousInterface127.t_of_js
      (Ojs.get_prop_ascii Ojs.global "WebGLVertexArrayObject")
let (webSocket : unit -> AnonymousInterface128.t) =
  fun () ->
    AnonymousInterface128.t_of_js (Ojs.get_prop_ascii Ojs.global "WebSocket")
let (windowClient : unit -> AnonymousInterface129.t) =
  fun () ->
    AnonymousInterface129.t_of_js
      (Ojs.get_prop_ascii Ojs.global "WindowClient")
let (worker : unit -> AnonymousInterface130.t) =
  fun () ->
    AnonymousInterface130.t_of_js (Ojs.get_prop_ascii Ojs.global "Worker")
let (workerGlobalScope : unit -> AnonymousInterface131.t) =
  fun () ->
    AnonymousInterface131.t_of_js
      (Ojs.get_prop_ascii Ojs.global "WorkerGlobalScope")
let (workerLocation : unit -> AnonymousInterface132.t) =
  fun () ->
    AnonymousInterface132.t_of_js
      (Ojs.get_prop_ascii Ojs.global "WorkerLocation")
let (workerNavigator : unit -> AnonymousInterface133.t) =
  fun () ->
    AnonymousInterface133.t_of_js
      (Ojs.get_prop_ascii Ojs.global "WorkerNavigator")
let (writableStream : unit -> AnonymousInterface134.t) =
  fun () ->
    AnonymousInterface134.t_of_js
      (Ojs.get_prop_ascii Ojs.global "WritableStream")
let (writableStreamDefaultController : unit -> AnonymousInterface135.t) =
  fun () ->
    AnonymousInterface135.t_of_js
      (Ojs.get_prop_ascii Ojs.global "WritableStreamDefaultController")
let (writableStreamDefaultWriter : unit -> AnonymousInterface136.t) =
  fun () ->
    AnonymousInterface136.t_of_js
      (Ojs.get_prop_ascii Ojs.global "WritableStreamDefaultWriter")
let (xMLHttpRequest : unit -> AnonymousInterface137.t) =
  fun () ->
    AnonymousInterface137.t_of_js
      (Ojs.get_prop_ascii Ojs.global "XMLHttpRequest")
let (xMLHttpRequestEventTarget : unit -> AnonymousInterface138.t) =
  fun () ->
    AnonymousInterface138.t_of_js
      (Ojs.get_prop_ascii Ojs.global "XMLHttpRequestEventTarget")
let (xMLHttpRequestUpload : unit -> AnonymousInterface139.t) =
  fun () ->
    AnonymousInterface139.t_of_js
      (Ojs.get_prop_ascii Ojs.global "XMLHttpRequestUpload")
let (console : unit -> Console.t) =
  fun () -> Console.t_of_js (Ojs.get_prop_ascii Ojs.global "console")
let (name : unit -> string) =
  fun () -> Ojs.string_of_js (Ojs.get_prop_ascii Ojs.global "name")
let (onmessage :
  unit ->
    (this:DedicatedWorkerGlobalScope.t -> ev:MessageEvent.t_0 -> any) or_null)
  =
  fun () ->
    or_null_of_js
      (fun (x16375 : Ojs.t) ->
         fun ~this:(x16376 : DedicatedWorkerGlobalScope.t) ->
           fun ~ev:(x16377 : MessageEvent.t_0) ->
             any_of_js
               (Ojs.apply x16375
                  [|(DedicatedWorkerGlobalScope.t_to_js x16376);(MessageEvent.t_0_to_js
                                                                   x16377)|]))
      (Ojs.get_prop_ascii Ojs.global "onmessage")
let (onmessageerror :
  unit ->
    (this:DedicatedWorkerGlobalScope.t -> ev:MessageEvent.t_0 -> any) or_null)
  =
  fun () ->
    or_null_of_js
      (fun (x16378 : Ojs.t) ->
         fun ~this:(x16379 : DedicatedWorkerGlobalScope.t) ->
           fun ~ev:(x16380 : MessageEvent.t_0) ->
             any_of_js
               (Ojs.apply x16378
                  [|(DedicatedWorkerGlobalScope.t_to_js x16379);(MessageEvent.t_0_to_js
                                                                   x16380)|]))
      (Ojs.get_prop_ascii Ojs.global "onmessageerror")
let (close : unit -> unit) =
  fun () -> ignore (Ojs.call Ojs.global "close" [||])
let (postMessage : message:any -> transfer:Transferable.t list -> unit) =
  fun ~message:(x16381 : any) ->
    fun ~transfer:(x16382 : Transferable.t list) ->
      ignore
        (Ojs.call Ojs.global "postMessage"
           [|(any_to_js x16381);(Ojs.list_to_js Transferable.t_to_js x16382)|])
let (postMessage' :
  message:any -> ?options:StructuredSerializeOptions.t -> unit -> unit) =
  fun ~message:(x16384 : any) ->
    fun ?options:(x16385 : StructuredSerializeOptions.t option) ->
      fun () ->
        ignore
          (let x16388 = Ojs.global in
           Ojs.call (Ojs.get_prop_ascii x16388 "postMessage") "apply"
             [|x16388;((let x16386 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        ignore
                          (Ojs.call x16386 "push" [|(any_to_js x16384)|]);
                        (match x16385 with
                         | Some x16387 ->
                             ignore
                               (Ojs.call x16386 "push"
                                  [|(StructuredSerializeOptions.t_to_js
                                       x16387)|])
                         | None -> ());
                        x16386))|])
let (dispatchEvent : Event.t -> bool) =
  fun (x16389 : Event.t) ->
    Ojs.bool_of_js
      (Ojs.call Ojs.global "dispatchEvent" [|(Event.t_to_js x16389)|])
let (location : unit -> WorkerLocation.t) =
  fun () -> WorkerLocation.t_of_js (Ojs.get_prop_ascii Ojs.global "location")
let (navigator : unit -> WorkerNavigator.t) =
  fun () ->
    WorkerNavigator.t_of_js (Ojs.get_prop_ascii Ojs.global "navigator")
let (onerror :
  unit ->
    (this:DedicatedWorkerGlobalScope.t -> ev:ErrorEvent.t -> any) or_null)
  =
  fun () ->
    or_null_of_js
      (fun (x16390 : Ojs.t) ->
         fun ~this:(x16391 : DedicatedWorkerGlobalScope.t) ->
           fun ~ev:(x16392 : ErrorEvent.t) ->
             any_of_js
               (Ojs.apply x16390
                  [|(DedicatedWorkerGlobalScope.t_to_js x16391);(ErrorEvent.t_to_js
                                                                   x16392)|]))
      (Ojs.get_prop_ascii Ojs.global "onerror")
let (onlanguagechange :
  unit -> (this:DedicatedWorkerGlobalScope.t -> ev:Event.t -> any) or_null) =
  fun () ->
    or_null_of_js
      (fun (x16393 : Ojs.t) ->
         fun ~this:(x16394 : DedicatedWorkerGlobalScope.t) ->
           fun ~ev:(x16395 : Event.t) ->
             any_of_js
               (Ojs.apply x16393
                  [|(DedicatedWorkerGlobalScope.t_to_js x16394);(Event.t_to_js
                                                                   x16395)|]))
      (Ojs.get_prop_ascii Ojs.global "onlanguagechange")
let (onoffline :
  unit -> (this:DedicatedWorkerGlobalScope.t -> ev:Event.t -> any) or_null) =
  fun () ->
    or_null_of_js
      (fun (x16396 : Ojs.t) ->
         fun ~this:(x16397 : DedicatedWorkerGlobalScope.t) ->
           fun ~ev:(x16398 : Event.t) ->
             any_of_js
               (Ojs.apply x16396
                  [|(DedicatedWorkerGlobalScope.t_to_js x16397);(Event.t_to_js
                                                                   x16398)|]))
      (Ojs.get_prop_ascii Ojs.global "onoffline")
let (ononline :
  unit -> (this:DedicatedWorkerGlobalScope.t -> ev:Event.t -> any) or_null) =
  fun () ->
    or_null_of_js
      (fun (x16399 : Ojs.t) ->
         fun ~this:(x16400 : DedicatedWorkerGlobalScope.t) ->
           fun ~ev:(x16401 : Event.t) ->
             any_of_js
               (Ojs.apply x16399
                  [|(DedicatedWorkerGlobalScope.t_to_js x16400);(Event.t_to_js
                                                                   x16401)|]))
      (Ojs.get_prop_ascii Ojs.global "ononline")
let (onrejectionhandled :
  unit ->
    (this:DedicatedWorkerGlobalScope.t -> ev:PromiseRejectionEvent.t -> any)
      or_null)
  =
  fun () ->
    or_null_of_js
      (fun (x16402 : Ojs.t) ->
         fun ~this:(x16403 : DedicatedWorkerGlobalScope.t) ->
           fun ~ev:(x16404 : PromiseRejectionEvent.t) ->
             any_of_js
               (Ojs.apply x16402
                  [|(DedicatedWorkerGlobalScope.t_to_js x16403);(PromiseRejectionEvent.t_to_js
                                                                   x16404)|]))
      (Ojs.get_prop_ascii Ojs.global "onrejectionhandled")
let (onunhandledrejection :
  unit ->
    (this:DedicatedWorkerGlobalScope.t -> ev:PromiseRejectionEvent.t -> any)
      or_null)
  =
  fun () ->
    or_null_of_js
      (fun (x16405 : Ojs.t) ->
         fun ~this:(x16406 : DedicatedWorkerGlobalScope.t) ->
           fun ~ev:(x16407 : PromiseRejectionEvent.t) ->
             any_of_js
               (Ojs.apply x16405
                  [|(DedicatedWorkerGlobalScope.t_to_js x16406);(PromiseRejectionEvent.t_to_js
                                                                   x16407)|]))
      (Ojs.get_prop_ascii Ojs.global "onunhandledrejection")
let (self : unit -> (WorkerGlobalScope.t, any) intersection2) =
  fun () ->
    intersection2_of_js WorkerGlobalScope.t_of_js any_of_js
      (Ojs.get_prop_ascii Ojs.global "self")
let (importScripts' : URL.t or_string list -> unit) =
  fun (x16410 : URL.t or_string list) ->
    ignore
      (let x16414 = Ojs.global in
       Ojs.call (Ojs.get_prop_ascii x16414 "importScripts") "apply"
         [|x16414;((let x16411 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x16412 : URL.t or_string) ->
                         ignore
                           (Ojs.call x16411 "push"
                              [|(or_string_to_js URL.t_to_js x16412)|]))
                      x16410;
                    x16411))|])
let (fonts : unit -> FontFaceSet.t) =
  fun () -> FontFaceSet.t_of_js (Ojs.get_prop_ascii Ojs.global "fonts")
let (caches : unit -> CacheStorage.t) =
  fun () -> CacheStorage.t_of_js (Ojs.get_prop_ascii Ojs.global "caches")
let (crossOriginIsolated : unit -> bool) =
  fun () ->
    Ojs.bool_of_js (Ojs.get_prop_ascii Ojs.global "crossOriginIsolated")
let (crypto' : unit -> Crypto.t) =
  fun () -> Crypto.t_of_js (Ojs.get_prop_ascii Ojs.global "crypto")
let (indexedDB : unit -> IDBFactory.t) =
  fun () -> IDBFactory.t_of_js (Ojs.get_prop_ascii Ojs.global "indexedDB")
let (isSecureContext : unit -> bool) =
  fun () -> Ojs.bool_of_js (Ojs.get_prop_ascii Ojs.global "isSecureContext")
let (origin : unit -> string) =
  fun () -> Ojs.string_of_js (Ojs.get_prop_ascii Ojs.global "origin")
let (performance' : unit -> Performance.t) =
  fun () -> Performance.t_of_js (Ojs.get_prop_ascii Ojs.global "performance")
let (atob : string -> string) =
  fun (x16415 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "atob" [|(Ojs.string_to_js x16415)|])
let (btoa : string -> string) =
  fun (x16416 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "btoa" [|(Ojs.string_to_js x16416)|])
let (clearInterval : ?handle:float -> unit -> unit) =
  fun ?handle:(x16417 : float option) ->
    fun () ->
      ignore
        (let x16420 = Ojs.global in
         Ojs.call (Ojs.get_prop_ascii x16420 "clearInterval") "apply"
           [|x16420;((let x16418 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x16417 with
                       | Some x16419 ->
                           ignore
                             (Ojs.call x16418 "push"
                                [|(Ojs.float_to_js x16419)|])
                       | None -> ());
                      x16418))|])
let (clearTimeout : ?handle:float -> unit -> unit) =
  fun ?handle:(x16421 : float option) ->
    fun () ->
      ignore
        (let x16424 = Ojs.global in
         Ojs.call (Ojs.get_prop_ascii x16424 "clearTimeout") "apply"
           [|x16424;((let x16422 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x16421 with
                       | Some x16423 ->
                           ignore
                             (Ojs.call x16422 "push"
                                [|(Ojs.float_to_js x16423)|])
                       | None -> ());
                      x16422))|])
let (createImageBitmap :
  image:ImageBitmapSource.t ->
    ?options:ImageBitmapOptions.t -> unit -> ImageBitmap.t Promise.t_1)
  =
  fun ~image:(x16425 : ImageBitmapSource.t) ->
    fun ?options:(x16426 : ImageBitmapOptions.t option) ->
      fun () ->
        Promise.t_1_of_js ImageBitmap.t_of_js
          (let x16429 = Ojs.global in
           Ojs.call (Ojs.get_prop_ascii x16429 "createImageBitmap") "apply"
             [|x16429;((let x16427 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        ignore
                          (Ojs.call x16427 "push"
                             [|(ImageBitmapSource.t_to_js x16425)|]);
                        (match x16426 with
                         | Some x16428 ->
                             ignore
                               (Ojs.call x16427 "push"
                                  [|(ImageBitmapOptions.t_to_js x16428)|])
                         | None -> ());
                        x16427))|])
let (createImageBitmap' :
  image:ImageBitmapSource.t ->
    sx:float ->
      sy:float ->
        sw:float ->
          sh:float ->
            ?options:ImageBitmapOptions.t ->
              unit -> ImageBitmap.t Promise.t_1)
  =
  fun ~image:(x16431 : ImageBitmapSource.t) ->
    fun ~sx:(x16432 : float) ->
      fun ~sy:(x16433 : float) ->
        fun ~sw:(x16434 : float) ->
          fun ~sh:(x16435 : float) ->
            fun ?options:(x16436 : ImageBitmapOptions.t option) ->
              fun () ->
                Promise.t_1_of_js ImageBitmap.t_of_js
                  (let x16439 = Ojs.global in
                   Ojs.call (Ojs.get_prop_ascii x16439 "createImageBitmap")
                     "apply"
                     [|x16439;((let x16437 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x16437 "push"
                                     [|(ImageBitmapSource.t_to_js x16431)|]);
                                ignore
                                  (Ojs.call x16437 "push"
                                     [|(Ojs.float_to_js x16432)|]);
                                ignore
                                  (Ojs.call x16437 "push"
                                     [|(Ojs.float_to_js x16433)|]);
                                ignore
                                  (Ojs.call x16437 "push"
                                     [|(Ojs.float_to_js x16434)|]);
                                ignore
                                  (Ojs.call x16437 "push"
                                     [|(Ojs.float_to_js x16435)|]);
                                (match x16436 with
                                 | Some x16438 ->
                                     ignore
                                       (Ojs.call x16437 "push"
                                          [|(ImageBitmapOptions.t_to_js
                                               x16438)|])
                                 | None -> ());
                                x16437))|])
let (fetch :
  input:RequestInfo.t ->
    ?init:RequestInit.t -> unit -> Response.t Promise.t_1)
  =
  fun ~input:(x16441 : RequestInfo.t) ->
    fun ?init:(x16442 : RequestInit.t option) ->
      fun () ->
        Promise.t_1_of_js Response.t_of_js
          (let x16445 = Ojs.global in
           Ojs.call (Ojs.get_prop_ascii x16445 "fetch") "apply"
             [|x16445;((let x16443 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        ignore
                          (Ojs.call x16443 "push"
                             [|(RequestInfo.t_to_js x16441)|]);
                        (match x16442 with
                         | Some x16444 ->
                             ignore
                               (Ojs.call x16443 "push"
                                  [|(RequestInit.t_to_js x16444)|])
                         | None -> ());
                        x16443))|])
let (queueMicrotask : VoidFunction.t -> unit) =
  fun (x16447 : VoidFunction.t) ->
    ignore
      (Ojs.call Ojs.global "queueMicrotask" [|(VoidFunction.t_to_js x16447)|])
let (setInterval :
  handler:TimerHandler.t ->
    ?timeout:float -> arguments:any list -> unit -> float)
  =
  fun ~handler:(x16448 : TimerHandler.t) ->
    fun ?timeout:(x16449 : float option) ->
      fun ~arguments:(x16450 : any list) ->
        fun () ->
          Ojs.float_of_js
            (let x16454 = Ojs.global in
             Ojs.call (Ojs.get_prop_ascii x16454 "setInterval") "apply"
               [|x16454;((let x16451 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          ignore
                            (Ojs.call x16451 "push"
                               [|(TimerHandler.t_to_js x16448)|]);
                          (match x16449 with
                           | Some x16453 ->
                               ignore
                                 (Ojs.call x16451 "push"
                                    [|(Ojs.float_to_js x16453)|])
                           | None -> ());
                          List.iter
                            (fun (x16452 : any) ->
                               ignore
                                 (Ojs.call x16451 "push"
                                    [|(any_to_js x16452)|])) x16450;
                          x16451))|])
let (setTimeout :
  handler:TimerHandler.t ->
    ?timeout:float -> arguments:any list -> unit -> float)
  =
  fun ~handler:(x16455 : TimerHandler.t) ->
    fun ?timeout:(x16456 : float option) ->
      fun ~arguments:(x16457 : any list) ->
        fun () ->
          Ojs.float_of_js
            (let x16461 = Ojs.global in
             Ojs.call (Ojs.get_prop_ascii x16461 "setTimeout") "apply"
               [|x16461;((let x16458 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          ignore
                            (Ojs.call x16458 "push"
                               [|(TimerHandler.t_to_js x16455)|]);
                          (match x16456 with
                           | Some x16460 ->
                               ignore
                                 (Ojs.call x16458 "push"
                                    [|(Ojs.float_to_js x16460)|])
                           | None -> ());
                          List.iter
                            (fun (x16459 : any) ->
                               ignore
                                 (Ojs.call x16458 "push"
                                    [|(any_to_js x16459)|])) x16457;
                          x16458))|])
let (cancelAnimationFrame : float -> unit) =
  fun (x16462 : float) ->
    ignore
      (Ojs.call Ojs.global "cancelAnimationFrame"
         [|(Ojs.float_to_js x16462)|])
let (requestAnimationFrame : FrameRequestCallback.t -> float) =
  fun (x16463 : FrameRequestCallback.t) ->
    Ojs.float_of_js
      (Ojs.call Ojs.global "requestAnimationFrame"
         [|(FrameRequestCallback.t_to_js x16463)|])
let (addEventListener :
  type_:'K ->
    listener:(this:DedicatedWorkerGlobalScope.t -> ev:any -> any) ->
      ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
  =
  fun ~type_:(x16464 : 'K) ->
    fun
      ~listener:(x16465 : this:DedicatedWorkerGlobalScope.t -> ev:any -> any)
      ->
      fun ?options:(x16466 : AddEventListenerOptions.t or_boolean option) ->
        fun () ->
          ignore
            (let x16472 = Ojs.global in
             Ojs.call (Ojs.get_prop_ascii x16472 "addEventListener") "apply"
               [|x16472;((let x16467 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          ignore
                            (Ojs.call x16467 "push" [|(Obj.magic x16464)|]);
                          ignore
                            (Ojs.call x16467 "push"
                               [|(Ojs.fun_to_js 2
                                    (fun (x16470 : Ojs.t) ->
                                       fun (x16471 : Ojs.t) ->
                                         any_to_js
                                           (x16465
                                              ~this:(DedicatedWorkerGlobalScope.t_of_js
                                                       x16470)
                                              ~ev:(any_of_js x16471))))|]);
                          (match x16466 with
                           | Some x16468 ->
                               ignore
                                 (Ojs.call x16467 "push"
                                    [|(or_boolean_to_js
                                         AddEventListenerOptions.t_to_js
                                         x16468)|])
                           | None -> ());
                          x16467))|])
let (addEventListener' :
  type_:string ->
    listener:EventListenerOrEventListenerObject.t ->
      ?options:AddEventListenerOptions.t or_boolean -> unit -> unit)
  =
  fun ~type_:(x16473 : string) ->
    fun ~listener:(x16474 : EventListenerOrEventListenerObject.t) ->
      fun ?options:(x16475 : AddEventListenerOptions.t or_boolean option) ->
        fun () ->
          ignore
            (let x16479 = Ojs.global in
             Ojs.call (Ojs.get_prop_ascii x16479 "addEventListener") "apply"
               [|x16479;((let x16476 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          ignore
                            (Ojs.call x16476 "push"
                               [|(Ojs.string_to_js x16473)|]);
                          ignore
                            (Ojs.call x16476 "push"
                               [|(EventListenerOrEventListenerObject.t_to_js
                                    x16474)|]);
                          (match x16475 with
                           | Some x16477 ->
                               ignore
                                 (Ojs.call x16476 "push"
                                    [|(or_boolean_to_js
                                         AddEventListenerOptions.t_to_js
                                         x16477)|])
                           | None -> ());
                          x16476))|])
let (removeEventListener :
  type_:'K ->
    listener:(this:DedicatedWorkerGlobalScope.t -> ev:any -> any) ->
      ?options:EventListenerOptions.t or_boolean -> unit -> unit)
  =
  fun ~type_:(x16480 : 'K) ->
    fun
      ~listener:(x16481 : this:DedicatedWorkerGlobalScope.t -> ev:any -> any)
      ->
      fun ?options:(x16482 : EventListenerOptions.t or_boolean option) ->
        fun () ->
          ignore
            (let x16488 = Ojs.global in
             Ojs.call (Ojs.get_prop_ascii x16488 "removeEventListener")
               "apply"
               [|x16488;((let x16483 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          ignore
                            (Ojs.call x16483 "push" [|(Obj.magic x16480)|]);
                          ignore
                            (Ojs.call x16483 "push"
                               [|(Ojs.fun_to_js 2
                                    (fun (x16486 : Ojs.t) ->
                                       fun (x16487 : Ojs.t) ->
                                         any_to_js
                                           (x16481
                                              ~this:(DedicatedWorkerGlobalScope.t_of_js
                                                       x16486)
                                              ~ev:(any_of_js x16487))))|]);
                          (match x16482 with
                           | Some x16484 ->
                               ignore
                                 (Ojs.call x16483 "push"
                                    [|(or_boolean_to_js
                                         EventListenerOptions.t_to_js x16484)|])
                           | None -> ());
                          x16483))|])
let (removeEventListener' :
  type_:string ->
    listener:EventListenerOrEventListenerObject.t ->
      ?options:EventListenerOptions.t or_boolean -> unit -> unit)
  =
  fun ~type_:(x16489 : string) ->
    fun ~listener:(x16490 : EventListenerOrEventListenerObject.t) ->
      fun ?options:(x16491 : EventListenerOptions.t or_boolean option) ->
        fun () ->
          ignore
            (let x16495 = Ojs.global in
             Ojs.call (Ojs.get_prop_ascii x16495 "removeEventListener")
               "apply"
               [|x16495;((let x16492 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          ignore
                            (Ojs.call x16492 "push"
                               [|(Ojs.string_to_js x16489)|]);
                          ignore
                            (Ojs.call x16492 "push"
                               [|(EventListenerOrEventListenerObject.t_to_js
                                    x16490)|]);
                          (match x16491 with
                           | Some x16493 ->
                               ignore
                                 (Ojs.call x16492 "push"
                                    [|(or_boolean_to_js
                                         EventListenerOptions.t_to_js x16493)|])
                           | None -> ());
                          x16492))|])
