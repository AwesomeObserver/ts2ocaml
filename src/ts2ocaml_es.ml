[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Ts2ocaml_min
module IteratorYieldResult =
  struct
    type 'TYield t = [ `IteratorYieldResult of 'TYield ] intf
    let rec t_of_js : 'TYield . (Ojs.t -> 'TYield) -> Ojs.t -> 'TYield t =
      fun _TYield -> Obj.magic
    and t_to_js : 'TYield . ('TYield -> Ojs.t) -> 'TYield t -> Ojs.t =
      fun _TYield -> Obj.magic
    type 'TYield t_1 = 'TYield t
    let rec t_1_of_js : 'TYield . (Ojs.t -> 'TYield) -> Ojs.t -> 'TYield t_1
      = fun (type __TYield) ->
      fun (__TYield_of_js : Ojs.t -> __TYield) ->
        fun (x3 : Ojs.t) -> t_of_js __TYield_of_js x3
    and t_1_to_js : 'TYield . ('TYield -> Ojs.t) -> 'TYield t_1 -> Ojs.t =
      fun (type __TYield) ->
      fun (__TYield_to_js : __TYield -> Ojs.t) ->
        fun (x1 : __TYield t) -> t_to_js __TYield_to_js x1
    type 'TYield tags = [ `IteratorYieldResult of 'TYield ]
    type 'TYield tags_1 = 'TYield tags
    type ('tags, 'TYield) this =
      'tags intf constraint 'tags = [> `IteratorYieldResult of 'TYield ]
    let rec this_of_js :
      'tags 'TYield .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'TYield) -> Ojs.t -> ('tags, 'TYield) this
      = fun (type __tags) -> fun (type __TYield) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__TYield_of_js : Ojs.t -> __TYield) ->
          fun (x7 : Ojs.t) -> intf_of_js __tags_of_js x7
    and this_to_js :
      'tags 'TYield .
        ('tags -> Ojs.t) ->
          ('TYield -> Ojs.t) -> ('tags, 'TYield) this -> Ojs.t
      = fun (type __tags) -> fun (type __TYield) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__TYield_to_js : __TYield -> Ojs.t) ->
          fun (x5 : __tags intf) -> intf_to_js __tags_to_js x5
    let (get_done : ('tags, 'TYield) this -> [ `L_b_false ]) =
      fun (x9 : ('tags, 'TYield) this) ->
        let x12 =
          Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x9) "done" in
        match Ojs.bool_of_js x12 with
        | false -> `L_b_false
        | _ -> assert false
    let (set_done : ('tags, 'TYield) this -> [ `L_b_false ] -> unit) =
      fun (x13 : ('tags, 'TYield) this) ->
        fun (x14 : [ `L_b_false ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x13) "done"
            (match x14 with | `L_b_false -> Ojs.bool_to_js false)
    let (get_value : ('tags, 'TYield) this -> 'TYield) =
      fun (x17 : ('tags, 'TYield) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x17) "value")
    let (set_value : ('tags, 'TYield) this -> 'TYield -> unit) =
      fun (x20 : ('tags, 'TYield) this) ->
        fun (x21 : 'TYield) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x20) "value"
            (Obj.magic x21)
    let cast_from = Obj.magic
  end
module IteratorReturnResult =
  struct
    type 'TReturn t = [ `IteratorReturnResult of 'TReturn ] intf
    let rec t_of_js : 'TReturn . (Ojs.t -> 'TReturn) -> Ojs.t -> 'TReturn t =
      fun _TReturn -> Obj.magic
    and t_to_js : 'TReturn . ('TReturn -> Ojs.t) -> 'TReturn t -> Ojs.t =
      fun _TReturn -> Obj.magic
    type 'TReturn t_1 = 'TReturn t
    let rec t_1_of_js :
      'TReturn . (Ojs.t -> 'TReturn) -> Ojs.t -> 'TReturn t_1 = fun (type
      __TReturn) ->
      fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
        fun (x26 : Ojs.t) -> t_of_js __TReturn_of_js x26
    and t_1_to_js : 'TReturn . ('TReturn -> Ojs.t) -> 'TReturn t_1 -> Ojs.t =
      fun (type __TReturn) ->
      fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
        fun (x24 : __TReturn t) -> t_to_js __TReturn_to_js x24
    type 'TReturn tags = [ `IteratorReturnResult of 'TReturn ]
    type 'TReturn tags_1 = 'TReturn tags
    type ('tags, 'TReturn) this =
      'tags intf constraint 'tags = [> `IteratorReturnResult of 'TReturn ]
    let rec this_of_js :
      'tags 'TReturn .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'TReturn) -> Ojs.t -> ('tags, 'TReturn) this
      = fun (type __tags) -> fun (type __TReturn) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x30 : Ojs.t) -> intf_of_js __tags_of_js x30
    and this_to_js :
      'tags 'TReturn .
        ('tags -> Ojs.t) ->
          ('TReturn -> Ojs.t) -> ('tags, 'TReturn) this -> Ojs.t
      = fun (type __tags) -> fun (type __TReturn) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x28 : __tags intf) -> intf_to_js __tags_to_js x28
    let (get_done : ('tags, 'TReturn) this -> [ `L_b_true ]) =
      fun (x32 : ('tags, 'TReturn) this) ->
        let x35 =
          Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x32) "done" in
        match Ojs.bool_of_js x35 with | true -> `L_b_true | _ -> assert false
    let (set_done : ('tags, 'TReturn) this -> [ `L_b_true ] -> unit) =
      fun (x36 : ('tags, 'TReturn) this) ->
        fun (x37 : [ `L_b_true ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x36) "done"
            (match x37 with | `L_b_true -> Ojs.bool_to_js true)
    let (get_value : ('tags, 'TReturn) this -> 'TReturn) =
      fun (x40 : ('tags, 'TReturn) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x40) "value")
    let (set_value : ('tags, 'TReturn) this -> 'TReturn -> unit) =
      fun (x43 : ('tags, 'TReturn) this) ->
        fun (x44 : 'TReturn) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x43) "value"
            (Obj.magic x44)
    let cast_from = Obj.magic
  end
module IteratorResult =
  struct
    type ('T, 'TReturn) t =
      [ `U_b_false of 'T IteratorYieldResult.t 
      | `U_b_true of 'TReturn IteratorReturnResult.t ]
    let rec t_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x52 : Ojs.t) ->
            let x53 = x52 in
            match Ojs.bool_of_js (Ojs.get_prop_ascii x53 "done") with
            | false -> `U_b_false (IteratorYieldResult.t_of_js __T_of_js x53)
            | true ->
                `U_b_true (IteratorReturnResult.t_of_js __TReturn_of_js x53)
    and t_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun
            (x47 :
              [ `U_b_false of __T IteratorYieldResult.t 
              | `U_b_true of __TReturn IteratorReturnResult.t ])
            ->
            match x47 with
            | `U_b_false x48 -> IteratorYieldResult.t_to_js __T_to_js x48
            | `U_b_true x50 ->
                IteratorReturnResult.t_to_js __TReturn_to_js x50
    type ('T, 'TReturn) t_2 = ('T, 'TReturn) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x59 : Ojs.t) -> t_of_js __T_of_js __TReturn_of_js x59
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x56 : (__T, __TReturn) t) ->
            t_to_js __T_to_js __TReturn_to_js x56
    type 'T t_1 = ('T, any) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x65 : Ojs.t) -> t_of_js __T_of_js any_of_js x65
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x62 : (__T, any) t) -> t_to_js __T_to_js any_to_js x62
  end
module Iterator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `Iterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn, 'TNext) t_3 = ('T, 'TReturn, 'TNext) t
    let rec t_3_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t_3
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (__TNext_of_js : Ojs.t -> __TNext) ->
            fun (x72 : Ojs.t) ->
              t_of_js __T_of_js __TReturn_of_js __TNext_of_js x72
    and t_3_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t_3 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (__TNext_to_js : __TNext -> Ojs.t) ->
            fun (x68 : (__T, __TReturn, __TNext) t) ->
              t_to_js __T_to_js __TReturn_to_js __TNext_to_js x68
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, never or_undefined) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x81 : Ojs.t) ->
            t_of_js __T_of_js __TReturn_of_js
              (fun (x84 : Ojs.t) -> or_undefined_of_js never_of_js x84) x81
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x76 : (__T, __TReturn, never or_undefined) t) ->
            t_to_js __T_to_js __TReturn_to_js
              (fun (x79 : never or_undefined) ->
                 or_undefined_to_js never_to_js x79) x76
    type 'T t_1 = ('T, any, never or_undefined) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x91 : Ojs.t) ->
          t_of_js __T_of_js any_of_js
            (fun (x94 : Ojs.t) -> or_undefined_of_js never_of_js x94) x91
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x86 : (__T, any, never or_undefined) t) ->
          t_to_js __T_to_js any_to_js
            (fun (x89 : never or_undefined) ->
               or_undefined_to_js never_to_js x89) x86
    type ('T, 'TReturn, 'TNext) tags =
      [ `Iterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn, 'TNext) tags_3 = ('T, 'TReturn, 'TNext) tags
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, never or_undefined) tags
    type 'T tags_1 = ('T, any, never or_undefined) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `Iterator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
            fun (__TNext_of_js : Ojs.t -> __TNext) ->
              fun (x98 : Ojs.t) -> intf_of_js __tags_of_js x98
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
            fun (__TNext_to_js : __TNext -> Ojs.t) ->
              fun (x96 : __tags intf) -> intf_to_js __tags_to_js x96
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x103 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x100 : any list) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (let x108 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x103 in
             Ojs.call (Ojs.get_prop_ascii x108 "next") "apply"
               [|x108;((let x101 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x102 : any) ->
                             ignore
                               (Ojs.call x101 "push" [|(any_to_js x102)|]))
                          x100;
                        x101))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?value:'TReturn -> unit -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x114 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?value:(x111 : 'TReturn option) ->
          fun () ->
            IteratorResult.t_of_js Obj.magic Obj.magic
              (let x119 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x114 in
               Ojs.call (Ojs.get_prop_ascii x119 "return") "apply"
                 [|x119;((let x112 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x111 with
                           | Some x113 ->
                               ignore
                                 (Ojs.call x112 "push" [|(Obj.magic x113)|])
                           | None -> ());
                          x112))|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?e:any -> unit -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x125 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?e:(x122 : any option) ->
          fun () ->
            IteratorResult.t_of_js Obj.magic Obj.magic
              (let x130 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x125 in
               Ojs.call (Ojs.get_prop_ascii x130 "throw") "apply"
                 [|x130;((let x123 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x122 with
                           | Some x124 ->
                               ignore
                                 (Ojs.call x123 "push" [|(any_to_js x124)|])
                           | None -> ());
                          x123))|])
    let cast_from = Obj.magic
  end
module Iterable =
  struct
    type 'T t = [ `Iterable of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x135 : Ojs.t) -> t_of_js __T_of_js x135
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x133 : __T t) -> t_to_js __T_to_js x133
    type 'T tags = [ `Iterable of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `Iterable of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x139 : Ojs.t) -> intf_of_js __tags_of_js x139
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x137 : __tags intf) -> intf_to_js __tags_to_js x137
    let cast_from = Obj.magic
  end
module WeakSet =
  struct
    type 'T t = [ `WeakSet of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x143 : Ojs.t) -> t_of_js __T_of_js x143
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x141 : __T t) -> t_to_js __T_to_js x141
    type 'T tags = [ `WeakSet of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `WeakSet of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x147 : Ojs.t) -> intf_of_js __tags_of_js x147
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x145 : __tags intf) -> intf_to_js __tags_to_js x145
    let (add : ('tags, 'T) this -> value:'T -> ('tags, 'T) this) =
      fun (x150 : ('tags, 'T) this) ->
        fun ~value:(x149 : 'T) ->
          this_of_js Obj.magic Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x150) "add"
               [|(Obj.magic x149)|])
    let (delete : ('tags, 'T) this -> value:'T -> bool) =
      fun (x156 : ('tags, 'T) this) ->
        fun ~value:(x155 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x156) "delete"
               [|(Obj.magic x155)|])
    let (has : ('tags, 'T) this -> value:'T -> bool) =
      fun (x160 : ('tags, 'T) this) ->
        fun ~value:(x159 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x160) "has"
               [|(Obj.magic x159)|])
    let (create : 'T Iterable.t -> 'T t) =
      fun (x163 : 'T Iterable.t) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakSet")
             [|(Iterable.t_to_js Obj.magic x163)|])
    let (create' : ?values:'T list or_null -> unit -> 'T t) =
      fun ?values:(x166 : 'T list or_null option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakSet")
               (let x167 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x166 with
                 | Some x168 ->
                     ignore
                       (Ojs.call x167 "push"
                          [|(or_null_to_js
                               (fun (x169 : 'T list) ->
                                  Ojs.list_to_js Obj.magic x169) x168)|])
                 | None -> ());
                x167))
    let (prototype : unit -> untyped_object t) =
      fun () ->
        t_of_js untyped_object_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakSet")
             "prototype")
    let cast_from = Obj.magic
  end
module WeakRef =
  struct
    type 'T t = [ `WeakRef of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x175 : Ojs.t) -> t_of_js __T_of_js x175
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x173 : __T t) -> t_to_js __T_to_js x173
    type 'T tags = [ `WeakRef of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `WeakRef of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x179 : Ojs.t) -> intf_of_js __tags_of_js x179
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x177 : __tags intf) -> intf_to_js __tags_to_js x177
    let (deref : ('tags, 'T) this -> 'T or_undefined) =
      fun (x181 : ('tags, 'T) this) ->
        or_undefined_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x181) "deref" [||])
    let (deref' : ('tags, 'T) this -> 'T or_undefined) =
      fun (x185 : ('tags, 'T) this) ->
        or_undefined_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x185) "deref" [||])
    let (prototype : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakRef")
             "prototype")
    let (create : ?target:'T -> unit -> 'T t) =
      fun ?target:(x190 : 'T option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakRef")
               (let x191 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x190 with
                 | Some x192 ->
                     ignore (Ojs.call x191 "push" [|(Obj.magic x192)|])
                 | None -> ());
                x191))
    let (prototype' : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakRef")
             "prototype")
    let (create' : 'T -> 'T t) =
      fun (x195 : 'T) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakRef")
             [|(Obj.magic x195)|])
    let cast_from = Obj.magic
  end
module WeakMap =
  struct
    type ('K, 'V) t = [ `WeakMap of ('K * 'V) ] intf
    let rec t_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t =
      fun _K -> fun _V -> Obj.magic
    and t_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t -> Ojs.t =
      fun _K -> fun _V -> Obj.magic
    type ('K, 'V) t_2 = ('K, 'V) t
    let rec t_2_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t_2 = fun
      (type __K) -> fun (type __V) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__V_of_js : Ojs.t -> __V) ->
          fun (x200 : Ojs.t) -> t_of_js __K_of_js __V_of_js x200
    and t_2_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t_2 -> Ojs.t = fun
      (type __K) -> fun (type __V) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__V_to_js : __V -> Ojs.t) ->
          fun (x197 : (__K, __V) t) -> t_to_js __K_to_js __V_to_js x197
    type ('K, 'V) tags = [ `WeakMap of ('K * 'V) ]
    type ('K, 'V) tags_2 = ('K, 'V) tags
    type ('tags, 'K, 'V) this =
      'tags intf constraint 'tags = [> `WeakMap of ('K * 'V) ]
    let rec this_of_js :
      'tags 'K 'V .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('tags, 'K, 'V) this
      = fun (type __tags) -> fun (type __K) -> fun (type __V) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (__V_of_js : Ojs.t -> __V) ->
            fun (x205 : Ojs.t) -> intf_of_js __tags_of_js x205
    and this_to_js :
      'tags 'K 'V .
        ('tags -> Ojs.t) ->
          ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('tags, 'K, 'V) this -> Ojs.t
      = fun (type __tags) -> fun (type __K) -> fun (type __V) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (__V_to_js : __V -> Ojs.t) ->
            fun (x203 : __tags intf) -> intf_to_js __tags_to_js x203
    let (delete : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x208 : ('tags, 'K, 'V) this) ->
        fun ~key:(x207 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x208)
               "delete" [|(Obj.magic x207)|])
    let (get_ : ('tags, 'K, 'V) this -> key:'K -> 'V or_undefined) =
      fun (x213 : ('tags, 'K, 'V) this) ->
        fun ~key:(x212 : 'K) ->
          or_undefined_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x213) "get"
               [|(Obj.magic x212)|])
    let (has : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x219 : ('tags, 'K, 'V) this) ->
        fun ~key:(x218 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x219) "has"
               [|(Obj.magic x218)|])
    let (set_ :
      ('tags, 'K, 'V) this -> key:'K -> value:'V -> ('tags, 'K, 'V) this) =
      fun (x225 : ('tags, 'K, 'V) this) ->
        fun ~key:(x223 : 'K) ->
          fun ~value:(x224 : 'V) ->
            this_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x225) "set"
                 [|(Obj.magic x223);(Obj.magic x224)|])
    let (create : ('K * 'V) Iterable.t -> ('K, 'V) t) =
      fun (x232 : ('K * 'V) Iterable.t) ->
        t_of_js Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakMap")
             [|(Iterable.t_to_js
                  (fun (x233 : ('K * 'V)) ->
                     let (x234, x235) = x233 in
                     let x236 = Ojs.array_make 2 in
                     Ojs.array_set x236 0 (Obj.magic x234);
                     Ojs.array_set x236 1 (Obj.magic x235);
                     x236) x232)|])
    let (create' : ?entries:('K * 'V) list or_null -> unit -> ('K, 'V) t) =
      fun ?entries:(x239 : ('K * 'V) list or_null option) ->
        fun () ->
          t_of_js Obj.magic Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakMap")
               (let x240 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x239 with
                 | Some x241 ->
                     ignore
                       (Ojs.call x240 "push"
                          [|(or_null_to_js
                               (fun (x242 : ('K * 'V) list) ->
                                  Ojs.list_to_js
                                    (fun (x243 : ('K * 'V)) ->
                                       let (x244, x245) = x243 in
                                       let x246 = Ojs.array_make 2 in
                                       Ojs.array_set x246 0 (Obj.magic x244);
                                       Ojs.array_set x246 1 (Obj.magic x245);
                                       x246) x242) x241)|])
                 | None -> ());
                x240))
    let (prototype : unit -> (untyped_object, any) t) =
      fun () ->
        t_of_js untyped_object_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakMap")
             "prototype")
    let cast_from = Obj.magic
  end
module Uppercase =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t = fun (type __S) ->
      fun (__S_of_js : Ojs.t -> __S) -> fun (x252 : Ojs.t) -> x252
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) -> fun (x251 : Ojs.t) -> x251
    type 'S t_1 = 'S t
    let rec t_1_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t_1 = fun (type
      __S) ->
      fun (__S_of_js : Ojs.t -> __S) ->
        fun (x255 : Ojs.t) -> t_of_js __S_of_js x255
    and t_1_to_js : 'S . ('S -> Ojs.t) -> 'S t_1 -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) ->
        fun (x253 : __S t) -> t_to_js __S_to_js x253
  end
module Uncapitalize =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t = fun (type __S) ->
      fun (__S_of_js : Ojs.t -> __S) -> fun (x258 : Ojs.t) -> x258
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) -> fun (x257 : Ojs.t) -> x257
    type 'S t_1 = 'S t
    let rec t_1_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t_1 = fun (type
      __S) ->
      fun (__S_of_js : Ojs.t -> __S) ->
        fun (x261 : Ojs.t) -> t_of_js __S_of_js x261
    and t_1_to_js : 'S . ('S -> Ojs.t) -> 'S t_1 -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) ->
        fun (x259 : __S t) -> t_to_js __S_to_js x259
  end
module SharedArrayBuffer =
  struct
    type t = [ `SharedArrayBuffer ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x264 : Ojs.t) -> t_of_js x264
    and t_0_to_js : t_0 -> Ojs.t = fun (x263 : t) -> t_to_js x263
    type tags = [ `SharedArrayBuffer ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `SharedArrayBuffer ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x267 : Ojs.t) -> intf_of_js __tags_of_js x267
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x265 : __tags intf) -> intf_to_js __tags_to_js x265
    let (get_byteLength : 'tags this -> float) =
      fun (x269 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x269) "byteLength")
    let (slice : 'tags this -> begin_:float -> ?end_:float -> unit -> t) =
      fun (x275 : 'tags this) ->
        fun ~begin_:(x271 : float) ->
          fun ?end_:(x272 : float option) ->
            fun () ->
              t_of_js
                (let x277 = this_to_js Obj.magic x275 in
                 Ojs.call (Ojs.get_prop_ascii x277 "slice") "apply"
                   [|x277;((let x273 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x273 "push"
                                 [|(Ojs.float_to_js x271)|]);
                            (match x272 with
                             | Some x274 ->
                                 ignore
                                   (Ojs.call x273 "push"
                                      [|(Ojs.float_to_js x274)|])
                             | None -> ());
                            x273))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "SharedArrayBuffer") "prototype")
    let (create : float -> t) =
      fun (x278 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "SharedArrayBuffer")
             [|(Ojs.float_to_js x278)|])
    let cast_from = Obj.magic
  end
module ArrayBuffer =
  struct
    type t = [ `ArrayBuffer ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x280 : Ojs.t) -> t_of_js x280
    and t_0_to_js : t_0 -> Ojs.t = fun (x279 : t) -> t_to_js x279
    type tags = [ `ArrayBuffer ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ArrayBuffer ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x283 : Ojs.t) -> intf_of_js __tags_of_js x283
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x281 : __tags intf) -> intf_to_js __tags_to_js x281
    let (get_byteLength : 'tags this -> float) =
      fun (x285 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x285) "byteLength")
    let (slice : 'tags this -> begin_:float -> ?end_:float -> unit -> t) =
      fun (x291 : 'tags this) ->
        fun ~begin_:(x287 : float) ->
          fun ?end_:(x288 : float option) ->
            fun () ->
              t_of_js
                (let x293 = this_to_js Obj.magic x291 in
                 Ojs.call (Ojs.get_prop_ascii x293 "slice") "apply"
                   [|x293;((let x289 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x289 "push"
                                 [|(Ojs.float_to_js x287)|]);
                            (match x288 with
                             | Some x290 ->
                                 ignore
                                   (Ojs.call x289 "push"
                                      [|(Ojs.float_to_js x290)|])
                             | None -> ());
                            x289))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ArrayBuffer")
             "prototype")
    let (create : float -> t) =
      fun (x294 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "ArrayBuffer")
             [|(Ojs.float_to_js x294)|])
    let (isView : any -> bool) =
      fun (x295 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "ArrayBuffer") "isView"
             [|(any_to_js x295)|])
    let cast_from = Obj.magic
  end
module ArrayBufferLike =
  struct
    type t = (ArrayBuffer.t, SharedArrayBuffer.t) union2
    let rec t_of_js : Ojs.t -> t =
      fun (x299 : Ojs.t) ->
        union2_of_js ArrayBuffer.t_of_js SharedArrayBuffer.t_of_js x299
    and t_to_js : t -> Ojs.t =
      fun (x296 : (ArrayBuffer.t, SharedArrayBuffer.t) union2) ->
        union2_to_js ArrayBuffer.t_to_js SharedArrayBuffer.t_to_js x296
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x303 : Ojs.t) -> t_of_js x303
    and t_0_to_js : t_0 -> Ojs.t = fun (x302 : t) -> t_to_js x302
  end
module IterableIterator =
  struct
    type 'T t =
      [ `IterableIterator of 'T 
      | `Iterator of ('T * any * never or_undefined) ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x306 : Ojs.t) -> t_of_js __T_of_js x306
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x304 : __T t) -> t_to_js __T_to_js x304
    type 'T tags =
      [ `IterableIterator of 'T 
      | `Iterator of ('T * any * never or_undefined) ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `IterableIterator of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x310 : Ojs.t) -> intf_of_js __tags_of_js x310
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x308 : __tags intf) -> intf_to_js __tags_to_js x308
    let cast_from = Obj.magic
  end
module ArrayLike =
  struct
    type 'T t = [ `ArrayLike of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x314 : Ojs.t) -> t_of_js __T_of_js x314
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x312 : __T t) -> t_to_js __T_to_js x312
    type 'T tags = [ `ArrayLike of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ArrayLike of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x318 : Ojs.t) -> intf_of_js __tags_of_js x318
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x316 : __tags intf) -> intf_to_js __tags_to_js x316
    let (get_length : ('tags, 'T) this -> float) =
      fun (x320 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x320) "length")
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x323 : ('tags, 'T) this) ->
        fun (x326 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x323)
               (Ojs.float_to_js x326))
    let cast_from = Obj.magic
  end
module Uint8ClampedArray =
  struct
    type t =
      [ `Uint8ClampedArray  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x328 : Ojs.t) -> t_of_js x328
    and t_0_to_js : t_0 -> Ojs.t = fun (x327 : t) -> t_to_js x327
    type tags =
      [ `Uint8ClampedArray  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Uint8ClampedArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x331 : Ojs.t) -> intf_of_js __tags_of_js x331
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x329 : __tags intf) -> intf_to_js __tags_to_js x329
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x337 : 'tags this) ->
        fun ~searchElement:(x333 : float) ->
          fun ?fromIndex:(x334 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x339 = this_to_js Obj.magic x337 in
                 Ojs.call (Ojs.get_prop_ascii x339 "includes") "apply"
                   [|x339;((let x335 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x335 "push"
                                 [|(Ojs.float_to_js x333)|]);
                            (match x334 with
                             | Some x336 ->
                                 ignore
                                   (Ojs.call x335 "push"
                                      [|(Ojs.float_to_js x336)|])
                             | None -> ());
                            x335))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x340 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x342 : Ojs.t) ->
             let x343 = x342 in
             ((Ojs.float_of_js (Ojs.array_get x343 0)),
               (Ojs.float_of_js (Ojs.array_get x343 1))))
          (Ojs.call (this_to_js Obj.magic x340) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x344 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x344) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x347 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x347) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x350 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x350) "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x352 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x352) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x354 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x354) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x356 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x356) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x363 : 'tags this) ->
        fun ~target:(x358 : float) ->
          fun ~start:(x359 : float) ->
            fun ?end_:(x360 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x365 = this_to_js Obj.magic x363 in
                   Ojs.call (Ojs.get_prop_ascii x365 "copyWithin") "apply"
                     [|x365;((let x361 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x361 "push"
                                   [|(Ojs.float_to_js x358)|]);
                              ignore
                                (Ojs.call x361 "push"
                                   [|(Ojs.float_to_js x359)|]);
                              (match x360 with
                               | Some x362 ->
                                   ignore
                                     (Ojs.call x361 "push"
                                        [|(Ojs.float_to_js x362)|])
                               | None -> ());
                              x361))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x374 : 'tags this) ->
        fun
          ~predicate:(x367 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x368 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x376 = this_to_js Obj.magic x374 in
                 Ojs.call (Ojs.get_prop_ascii x376 "every") "apply"
                   [|x376;((let x369 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x369 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x371 : Ojs.t) ->
                                         fun (x372 : Ojs.t) ->
                                           fun (x373 : Ojs.t) ->
                                             unknown_to_js
                                               (x367
                                                  ~value:(Ojs.float_of_js
                                                            x371)
                                                  ~index:(Ojs.float_of_js
                                                            x372)
                                                  ~array:(t_of_js x373))))|]);
                            (match x368 with
                             | Some x370 ->
                                 ignore
                                   (Ojs.call x369 "push" [|(any_to_js x370)|])
                             | None -> ());
                            x369))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x383 : 'tags this) ->
        fun ~value:(x377 : float) ->
          fun ?start:(x378 : float option) ->
            fun ?end_:(x379 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x385 = this_to_js Obj.magic x383 in
                   Ojs.call (Ojs.get_prop_ascii x385 "fill") "apply"
                     [|x385;((let x380 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x380 "push"
                                   [|(Ojs.float_to_js x377)|]);
                              (match x378 with
                               | Some x382 ->
                                   ignore
                                     (Ojs.call x380 "push"
                                        [|(Ojs.float_to_js x382)|])
                               | None -> ());
                              (match x379 with
                               | Some x381 ->
                                   ignore
                                     (Ojs.call x380 "push"
                                        [|(Ojs.float_to_js x381)|])
                               | None -> ());
                              x380))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x394 : 'tags this) ->
        fun ~predicate:(x387 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x388 : any option) ->
            fun () ->
              t_of_js
                (let x396 = this_to_js Obj.magic x394 in
                 Ojs.call (Ojs.get_prop_ascii x396 "filter") "apply"
                   [|x396;((let x389 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x389 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x391 : Ojs.t) ->
                                         fun (x392 : Ojs.t) ->
                                           fun (x393 : Ojs.t) ->
                                             any_to_js
                                               (x387
                                                  ~value:(Ojs.float_of_js
                                                            x391)
                                                  ~index:(Ojs.float_of_js
                                                            x392)
                                                  ~array:(t_of_js x393))))|]);
                            (match x388 with
                             | Some x390 ->
                                 ignore
                                   (Ojs.call x389 "push" [|(any_to_js x390)|])
                             | None -> ());
                            x389))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x404 : 'tags this) ->
        fun ~predicate:(x397 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x398 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x406 = this_to_js Obj.magic x404 in
                 Ojs.call (Ojs.get_prop_ascii x406 "find") "apply"
                   [|x406;((let x399 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x399 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x401 : Ojs.t) ->
                                         fun (x402 : Ojs.t) ->
                                           fun (x403 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x397
                                                  ~value:(Ojs.float_of_js
                                                            x401)
                                                  ~index:(Ojs.float_of_js
                                                            x402)
                                                  ~obj:(t_of_js x403))))|]);
                            (match x398 with
                             | Some x400 ->
                                 ignore
                                   (Ojs.call x399 "push" [|(any_to_js x400)|])
                             | None -> ());
                            x399))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x415 : 'tags this) ->
        fun ~predicate:(x408 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x409 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x417 = this_to_js Obj.magic x415 in
                 Ojs.call (Ojs.get_prop_ascii x417 "findIndex") "apply"
                   [|x417;((let x410 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x410 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x412 : Ojs.t) ->
                                         fun (x413 : Ojs.t) ->
                                           fun (x414 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x408
                                                  ~value:(Ojs.float_of_js
                                                            x412)
                                                  ~index:(Ojs.float_of_js
                                                            x413)
                                                  ~obj:(t_of_js x414))))|]);
                            (match x409 with
                             | Some x411 ->
                                 ignore
                                   (Ojs.call x410 "push" [|(any_to_js x411)|])
                             | None -> ());
                            x410))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x425 : 'tags this) ->
        fun
          ~callbackfn:(x418 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x419 : any option) ->
            fun () ->
              ignore
                (let x427 = this_to_js Obj.magic x425 in
                 Ojs.call (Ojs.get_prop_ascii x427 "forEach") "apply"
                   [|x427;((let x420 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x420 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x422 : Ojs.t) ->
                                         fun (x423 : Ojs.t) ->
                                           fun (x424 : Ojs.t) ->
                                             x418
                                               ~value:(Ojs.float_of_js x422)
                                               ~index:(Ojs.float_of_js x423)
                                               ~array:(t_of_js x424)))|]);
                            (match x419 with
                             | Some x421 ->
                                 ignore
                                   (Ojs.call x420 "push" [|(any_to_js x421)|])
                             | None -> ());
                            x420))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x432 : 'tags this) ->
        fun ~searchElement:(x428 : float) ->
          fun ?fromIndex:(x429 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x434 = this_to_js Obj.magic x432 in
                 Ojs.call (Ojs.get_prop_ascii x434 "indexOf") "apply"
                   [|x434;((let x430 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x430 "push"
                                 [|(Ojs.float_to_js x428)|]);
                            (match x429 with
                             | Some x431 ->
                                 ignore
                                   (Ojs.call x430 "push"
                                      [|(Ojs.float_to_js x431)|])
                             | None -> ());
                            x430))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x438 : 'tags this) ->
        fun ?separator:(x435 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x440 = this_to_js Obj.magic x438 in
               Ojs.call (Ojs.get_prop_ascii x440 "join") "apply"
                 [|x440;((let x436 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x435 with
                           | Some x437 ->
                               ignore
                                 (Ojs.call x436 "push"
                                    [|(Ojs.string_to_js x437)|])
                           | None -> ());
                          x436))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x445 : 'tags this) ->
        fun ~searchElement:(x441 : float) ->
          fun ?fromIndex:(x442 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x447 = this_to_js Obj.magic x445 in
                 Ojs.call (Ojs.get_prop_ascii x447 "lastIndexOf") "apply"
                   [|x447;((let x443 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x443 "push"
                                 [|(Ojs.float_to_js x441)|]);
                            (match x442 with
                             | Some x444 ->
                                 ignore
                                   (Ojs.call x443 "push"
                                      [|(Ojs.float_to_js x444)|])
                             | None -> ());
                            x443))|])
    let (get_length : 'tags this -> float) =
      fun (x448 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x448) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x457 : 'tags this) ->
        fun
          ~callbackfn:(x450 : value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x451 : any option) ->
            fun () ->
              t_of_js
                (let x459 = this_to_js Obj.magic x457 in
                 Ojs.call (Ojs.get_prop_ascii x459 "map") "apply"
                   [|x459;((let x452 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x452 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x454 : Ojs.t) ->
                                         fun (x455 : Ojs.t) ->
                                           fun (x456 : Ojs.t) ->
                                             Ojs.float_to_js
                                               (x450
                                                  ~value:(Ojs.float_of_js
                                                            x454)
                                                  ~index:(Ojs.float_of_js
                                                            x455)
                                                  ~array:(t_of_js x456))))|]);
                            (match x451 with
                             | Some x453 ->
                                 ignore
                                   (Ojs.call x452 "push" [|(any_to_js x453)|])
                             | None -> ());
                            x452))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x465 : 'tags this) ->
        fun
          ~callbackfn:(x460 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x465) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x461 : Ojs.t) ->
                       fun (x462 : Ojs.t) ->
                         fun (x463 : Ojs.t) ->
                           fun (x464 : Ojs.t) ->
                             Ojs.float_to_js
                               (x460 ~previousValue:(Ojs.float_of_js x461)
                                  ~currentValue:(Ojs.float_of_js x462)
                                  ~currentIndex:(Ojs.float_of_js x463)
                                  ~array:(t_of_js x464))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x473 : 'tags this) ->
        fun
          ~callbackfn:(x467 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x472 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x473) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x468 : Ojs.t) ->
                         fun (x469 : Ojs.t) ->
                           fun (x470 : Ojs.t) ->
                             fun (x471 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x467 ~previousValue:(Ojs.float_of_js x468)
                                    ~currentValue:(Ojs.float_of_js x469)
                                    ~currentIndex:(Ojs.float_of_js x470)
                                    ~array:(t_of_js x471))));(Ojs.float_to_js
                                                                x472)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x481 : 'tags this) ->
        fun
          ~callbackfn:(x475 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x480 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x481) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x476 : Ojs.t) ->
                         fun (x477 : Ojs.t) ->
                           fun (x478 : Ojs.t) ->
                             fun (x479 : Ojs.t) ->
                               Obj.magic
                                 (x475 ~previousValue:(Obj.magic x476)
                                    ~currentValue:(Ojs.float_of_js x477)
                                    ~currentIndex:(Ojs.float_of_js x478)
                                    ~array:(t_of_js x479))));(Obj.magic x480)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x488 : 'tags this) ->
        fun
          ~callbackfn:(x483 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x488) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x484 : Ojs.t) ->
                       fun (x485 : Ojs.t) ->
                         fun (x486 : Ojs.t) ->
                           fun (x487 : Ojs.t) ->
                             Ojs.float_to_js
                               (x483 ~previousValue:(Ojs.float_of_js x484)
                                  ~currentValue:(Ojs.float_of_js x485)
                                  ~currentIndex:(Ojs.float_of_js x486)
                                  ~array:(t_of_js x487))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x496 : 'tags this) ->
        fun
          ~callbackfn:(x490 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x495 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x496) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x491 : Ojs.t) ->
                         fun (x492 : Ojs.t) ->
                           fun (x493 : Ojs.t) ->
                             fun (x494 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x490 ~previousValue:(Ojs.float_of_js x491)
                                    ~currentValue:(Ojs.float_of_js x492)
                                    ~currentIndex:(Ojs.float_of_js x493)
                                    ~array:(t_of_js x494))));(Ojs.float_to_js
                                                                x495)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x504 : 'tags this) ->
        fun
          ~callbackfn:(x498 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x503 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x504) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x499 : Ojs.t) ->
                         fun (x500 : Ojs.t) ->
                           fun (x501 : Ojs.t) ->
                             fun (x502 : Ojs.t) ->
                               Obj.magic
                                 (x498 ~previousValue:(Obj.magic x499)
                                    ~currentValue:(Ojs.float_of_js x500)
                                    ~currentIndex:(Ojs.float_of_js x501)
                                    ~array:(t_of_js x502))));(Obj.magic x503)|])
    let (reverse : 'tags this -> t) =
      fun (x506 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x506) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x513 : 'tags this) ->
        fun ~array:(x508 : float ArrayLike.t) ->
          fun ?offset:(x509 : float option) ->
            fun () ->
              ignore
                (let x515 = this_to_js Obj.magic x513 in
                 Ojs.call (Ojs.get_prop_ascii x515 "set") "apply"
                   [|x515;((let x510 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x510 "push"
                                 [|(ArrayLike.t_to_js Ojs.float_to_js x508)|]);
                            (match x509 with
                             | Some x511 ->
                                 ignore
                                   (Ojs.call x510 "push"
                                      [|(Ojs.float_to_js x511)|])
                             | None -> ());
                            x510))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x521 : 'tags this) ->
        fun ?start:(x516 : float option) ->
          fun ?end_:(x517 : float option) ->
            fun () ->
              t_of_js
                (let x523 = this_to_js Obj.magic x521 in
                 Ojs.call (Ojs.get_prop_ascii x523 "slice") "apply"
                   [|x523;((let x518 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x516 with
                             | Some x520 ->
                                 ignore
                                   (Ojs.call x518 "push"
                                      [|(Ojs.float_to_js x520)|])
                             | None -> ());
                            (match x517 with
                             | Some x519 ->
                                 ignore
                                   (Ojs.call x518 "push"
                                      [|(Ojs.float_to_js x519)|])
                             | None -> ());
                            x518))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x531 : 'tags this) ->
        fun
          ~predicate:(x524 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x525 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x533 = this_to_js Obj.magic x531 in
                 Ojs.call (Ojs.get_prop_ascii x533 "some") "apply"
                   [|x533;((let x526 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x526 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x528 : Ojs.t) ->
                                         fun (x529 : Ojs.t) ->
                                           fun (x530 : Ojs.t) ->
                                             unknown_to_js
                                               (x524
                                                  ~value:(Ojs.float_of_js
                                                            x528)
                                                  ~index:(Ojs.float_of_js
                                                            x529)
                                                  ~array:(t_of_js x530))))|]);
                            (match x525 with
                             | Some x527 ->
                                 ignore
                                   (Ojs.call x526 "push" [|(any_to_js x527)|])
                             | None -> ());
                            x526))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x539 : 'tags this) ->
        fun ?compareFn:(x534 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x541 = this_to_js Obj.magic x539 in
               Ojs.call (Ojs.get_prop_ascii x541 "sort") "apply"
                 [|x541;((let x535 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x534 with
                           | Some x536 ->
                               ignore
                                 (Ojs.call x535 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x537 : Ojs.t) ->
                                            fun (x538 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x536
                                                   ~a:(Ojs.float_of_js x537)
                                                   ~b:(Ojs.float_of_js x538))))|])
                           | None -> ());
                          x535))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x548 : 'tags this) ->
        fun ?begin_:(x543 : float option) ->
          fun ?end_:(x544 : float option) ->
            fun () ->
              t_of_js
                (let x550 = this_to_js Obj.magic x548 in
                 Ojs.call (Ojs.get_prop_ascii x550 "subarray") "apply"
                   [|x550;((let x545 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x543 with
                             | Some x547 ->
                                 ignore
                                   (Ojs.call x545 "push"
                                      [|(Ojs.float_to_js x547)|])
                             | None -> ());
                            (match x544 with
                             | Some x546 ->
                                 ignore
                                   (Ojs.call x545 "push"
                                      [|(Ojs.float_to_js x546)|])
                             | None -> ());
                            x545))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x551 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x551) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x553 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x553) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x555 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x555) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x557 : 'tags this) ->
        fun (x559 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x557) (Ojs.float_to_js x559))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x560 : 'tags this) ->
        fun (x562 : float) ->
          fun (x563 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x560) (Ojs.float_to_js x562)
              (Ojs.float_to_js x563)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [||])
    let (create' : float Iterable.t -> t) =
      fun (x564 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|(Iterable.t_to_js Ojs.float_to_js x564)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x566 : float Iterable.t) ->
        fun ?mapfn:(x567 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x568 : any option) ->
            fun () ->
              t_of_js
                (let x575 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
                 Ojs.call (Ojs.get_prop_ascii x575 "from") "apply"
                   [|x575;((let x569 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x569 "push"
                                 [|(Iterable.t_to_js Ojs.float_to_js x566)|]);
                            (match x567 with
                             | Some x571 ->
                                 ignore
                                   (Ojs.call x569 "push"
                                      [|(Ojs.fun_to_js 2
                                           (fun (x572 : Ojs.t) ->
                                              fun (x573 : Ojs.t) ->
                                                Ojs.float_to_js
                                                  (x571
                                                     ~v:(Ojs.float_of_js x572)
                                                     ~k:(Ojs.float_of_js x573))))|])
                             | None -> ());
                            (match x568 with
                             | Some x570 ->
                                 ignore
                                   (Ojs.call x569 "push" [|(any_to_js x570)|])
                             | None -> ());
                            x569))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray") "prototype")
    let (create'' : float -> t) =
      fun (x576 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|(Ojs.float_to_js x576)|])
    let (create''' : (ArrayBufferLike.t, float ArrayLike.t) union2 -> t) =
      fun (x577 : (ArrayBufferLike.t, float ArrayLike.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|(union2_to_js ArrayBufferLike.t_to_js
                  (fun (x579 : float ArrayLike.t) ->
                     ArrayLike.t_to_js Ojs.float_to_js x579) x577)|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x581 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x582 : float option) ->
          fun ?length:(x583 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
                   (let x584 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x584 "push"
                         [|(ArrayBufferLike.t_to_js x581)|]);
                    (match x582 with
                     | Some x586 ->
                         ignore
                           (Ojs.call x584 "push" [|(Ojs.float_to_js x586)|])
                     | None -> ());
                    (match x583 with
                     | Some x585 ->
                         ignore
                           (Ojs.call x584 "push" [|(Ojs.float_to_js x585)|])
                     | None -> ());
                    x584))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x587 : float list) ->
        t_of_js
          (let x590 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
           Ojs.call (Ojs.get_prop_ascii x590 "of") "apply"
             [|x590;((let x588 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      List.iter
                        (fun (x589 : float) ->
                           ignore
                             (Ojs.call x588 "push" [|(Ojs.float_to_js x589)|]))
                        x587;
                      x588))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x591 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             "from" [|(ArrayLike.t_to_js Ojs.float_to_js x591)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x593 : 'T ArrayLike.t) ->
        fun ~mapfn:(x594 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x595 : any option) ->
            fun () ->
              t_of_js
                (let x601 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
                 Ojs.call (Ojs.get_prop_ascii x601 "from") "apply"
                   [|x601;((let x596 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x596 "push"
                                 [|(ArrayLike.t_to_js Obj.magic x593)|]);
                            ignore
                              (Ojs.call x596 "push"
                                 [|(Ojs.fun_to_js 2
                                      (fun (x598 : Ojs.t) ->
                                         fun (x599 : Ojs.t) ->
                                           Ojs.float_to_js
                                             (x594 ~v:(Obj.magic x598)
                                                ~k:(Ojs.float_of_js x599))))|]);
                            (match x595 with
                             | Some x597 ->
                                 ignore
                                   (Ojs.call x596 "push" [|(any_to_js x597)|])
                             | None -> ());
                            x596))|])
    let cast_from = Obj.magic
  end
module Error =
  struct
    type t = [ `Error ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x603 : Ojs.t) -> t_of_js x603
    and t_0_to_js : t_0 -> Ojs.t = fun (x602 : t) -> t_to_js x602
    type tags = [ `Error ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Error ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x606 : Ojs.t) -> intf_of_js __tags_of_js x606
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x604 : __tags intf) -> intf_to_js __tags_to_js x604
    let (get_name : 'tags this -> string) =
      fun (x608 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x608) "name")
    let (set_name : 'tags this -> string -> unit) =
      fun (x610 : 'tags this) ->
        fun (x611 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x610) "name"
            (Ojs.string_to_js x611)
    let (get_message : 'tags this -> string) =
      fun (x613 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x613) "message")
    let (set_message : 'tags this -> string -> unit) =
      fun (x615 : 'tags this) ->
        fun (x616 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x615) "message"
            (Ojs.string_to_js x616)
    let (get_stack : 'tags this -> string) =
      fun (x618 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x618) "stack")
    let (set_stack : 'tags this -> string -> unit) =
      fun (x620 : 'tags this) ->
        fun (x621 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x620) "stack"
            (Ojs.string_to_js x621)
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x623 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Error")
               (let x624 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x623 with
                 | Some x625 ->
                     ignore
                       (Ojs.call x624 "push" [|(Ojs.string_to_js x625)|])
                 | None -> ());
                x624))
    let (invoke : ?message:string -> unit -> t) =
      fun ?message:(x626 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Error") "apply"
               [|Ojs.null;((let x627 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x626 with
                             | Some x628 ->
                                 ignore
                                   (Ojs.call x627 "push"
                                      [|(Ojs.string_to_js x628)|])
                             | None -> ());
                            x627))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Error")
             "prototype")
    let cast_from = Obj.magic
  end
module URIError =
  struct
    type t = [ `Error  | `URIError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x630 : Ojs.t) -> t_of_js x630
    and t_0_to_js : t_0 -> Ojs.t = fun (x629 : t) -> t_to_js x629
    type tags = [ `Error  | `URIError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `URIError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x633 : Ojs.t) -> intf_of_js __tags_of_js x633
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x631 : __tags intf) -> intf_to_js __tags_to_js x631
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x635 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "URIError")
               (let x636 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x635 with
                 | Some x637 ->
                     ignore
                       (Ojs.call x636 "push" [|(Ojs.string_to_js x637)|])
                 | None -> ());
                x636))
    let (invoke : ?message:string -> unit -> t) =
      fun ?message:(x638 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "URIError") "apply"
               [|Ojs.null;((let x639 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x638 with
                             | Some x640 ->
                                 ignore
                                   (Ojs.call x639 "push"
                                      [|(Ojs.string_to_js x640)|])
                             | None -> ());
                            x639))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "URIError")
             "prototype")
    let cast_from = Obj.magic
  end
module TypeError =
  struct
    type t = [ `Error  | `TypeError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x642 : Ojs.t) -> t_of_js x642
    and t_0_to_js : t_0 -> Ojs.t = fun (x641 : t) -> t_to_js x641
    type tags = [ `Error  | `TypeError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `TypeError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x645 : Ojs.t) -> intf_of_js __tags_of_js x645
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x643 : __tags intf) -> intf_to_js __tags_to_js x643
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x647 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "TypeError")
               (let x648 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x647 with
                 | Some x649 ->
                     ignore
                       (Ojs.call x648 "push" [|(Ojs.string_to_js x649)|])
                 | None -> ());
                x648))
    let (invoke : ?message:string -> unit -> t) =
      fun ?message:(x650 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "TypeError") "apply"
               [|Ojs.null;((let x651 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x650 with
                             | Some x652 ->
                                 ignore
                                   (Ojs.call x651 "push"
                                      [|(Ojs.string_to_js x652)|])
                             | None -> ());
                            x651))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "TypeError")
             "prototype")
    let cast_from = Obj.magic
  end
module FlatArray =
  struct
    type ('Arr, 'Depth) t = any
    let rec t_of_js :
      'Arr 'Depth .
        (Ojs.t -> 'Arr) -> (Ojs.t -> 'Depth) -> Ojs.t -> ('Arr, 'Depth) t
      = fun (type __Arr) -> fun (type __Depth) ->
      fun (__Arr_of_js : Ojs.t -> __Arr) ->
        fun (__Depth_of_js : Ojs.t -> __Depth) ->
          fun (x654 : Ojs.t) -> any_of_js x654
    and t_to_js :
      'Arr 'Depth .
        ('Arr -> Ojs.t) -> ('Depth -> Ojs.t) -> ('Arr, 'Depth) t -> Ojs.t
      = fun (type __Arr) -> fun (type __Depth) ->
      fun (__Arr_to_js : __Arr -> Ojs.t) ->
        fun (__Depth_to_js : __Depth -> Ojs.t) ->
          fun (x653 : any) -> any_to_js x653
    type ('Arr, 'Depth) t_2 = ('Arr, 'Depth) t
    let rec t_2_of_js :
      'Arr 'Depth .
        (Ojs.t -> 'Arr) -> (Ojs.t -> 'Depth) -> Ojs.t -> ('Arr, 'Depth) t_2
      = fun (type __Arr) -> fun (type __Depth) ->
      fun (__Arr_of_js : Ojs.t -> __Arr) ->
        fun (__Depth_of_js : Ojs.t -> __Depth) ->
          fun (x658 : Ojs.t) -> t_of_js __Arr_of_js __Depth_of_js x658
    and t_2_to_js :
      'Arr 'Depth .
        ('Arr -> Ojs.t) -> ('Depth -> Ojs.t) -> ('Arr, 'Depth) t_2 -> Ojs.t
      = fun (type __Arr) -> fun (type __Depth) ->
      fun (__Arr_to_js : __Arr -> Ojs.t) ->
        fun (__Depth_to_js : __Depth -> Ojs.t) ->
          fun (x655 : (__Arr, __Depth) t) ->
            t_to_js __Arr_to_js __Depth_to_js x655
  end
module ConcatArray =
  struct
    type 'T t = [ `ConcatArray of 'T  | 'T ArrayLike.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x663 : Ojs.t) -> t_of_js __T_of_js x663
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x661 : __T t) -> t_to_js __T_to_js x661
    type 'T tags = [ `ConcatArray of 'T  | 'T ArrayLike.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ConcatArray of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x667 : Ojs.t) -> intf_of_js __tags_of_js x667
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x665 : __tags intf) -> intf_to_js __tags_to_js x665
    let (get_length : ('tags, 'T) this -> float) =
      fun (x669 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x669) "length")
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x672 : ('tags, 'T) this) ->
        fun (x675 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x672)
               (Ojs.float_to_js x675))
    let (join : ('tags, 'T) this -> ?separator:string -> unit -> string) =
      fun (x679 : ('tags, 'T) this) ->
        fun ?separator:(x676 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x682 = this_to_js Obj.magic Obj.magic x679 in
               Ojs.call (Ojs.get_prop_ascii x682 "join") "apply"
                 [|x682;((let x677 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x676 with
                           | Some x678 ->
                               ignore
                                 (Ojs.call x677 "push"
                                    [|(Ojs.string_to_js x678)|])
                           | None -> ());
                          x677))|])
    let (slice :
      ('tags, 'T) this -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x688 : ('tags, 'T) this) ->
        fun ?start:(x683 : float option) ->
          fun ?end_:(x684 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x691 = this_to_js Obj.magic Obj.magic x688 in
                 Ojs.call (Ojs.get_prop_ascii x691 "slice") "apply"
                   [|x691;((let x685 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x683 with
                             | Some x687 ->
                                 ignore
                                   (Ojs.call x685 "push"
                                      [|(Ojs.float_to_js x687)|])
                             | None -> ());
                            (match x684 with
                             | Some x686 ->
                                 ignore
                                   (Ojs.call x685 "push"
                                      [|(Ojs.float_to_js x686)|])
                             | None -> ());
                            x685))|])
    let cast_from = Obj.magic
  end
module ReadonlyArray =
  struct
    type 'T t =
      [ `ReadonlyArray of 'T  | 'T ArrayLike.tags_1
      | 'T IterableIterator.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x695 : Ojs.t) -> t_of_js __T_of_js x695
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x693 : __T t) -> t_to_js __T_to_js x693
    type 'T tags =
      [ `ReadonlyArray of 'T  | 'T ArrayLike.tags_1
      | 'T IterableIterator.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ReadonlyArray of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x699 : Ojs.t) -> intf_of_js __tags_of_js x699
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x697 : __tags intf) -> intf_to_js __tags_to_js x697
    let (flatMap :
      ('tags, 'T) this ->
        callback:(this:'This ->
                    value:'T ->
                      index:float -> array:'T list -> ('U, 'U t) union2)
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x713 : ('tags, 'T) this) ->
        fun
          ~callback:(x701 :
                      this:'This ->
                        value:'T ->
                          index:float -> array:'T list -> ('U, 'U t) union2)
          ->
          fun ?thisArg:(x702 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x716 = this_to_js Obj.magic Obj.magic x713 in
                 Ojs.call (Ojs.get_prop_ascii x716 "flatMap") "apply"
                   [|x716;((let x703 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x703 "push"
                                 [|(Ojs.fun_to_js 4
                                      (fun (x705 : Ojs.t) ->
                                         fun (x706 : Ojs.t) ->
                                           fun (x707 : Ojs.t) ->
                                             fun (x708 : Ojs.t) ->
                                               union2_to_js Obj.magic
                                                 (fun (x711 : 'U t) ->
                                                    t_to_js Obj.magic x711)
                                                 (x701 ~this:(Obj.magic x705)
                                                    ~value:(Obj.magic x706)
                                                    ~index:(Ojs.float_of_js
                                                              x707)
                                                    ~array:(Ojs.list_of_js
                                                              Obj.magic x708))))|]);
                            (match x702 with
                             | Some x704 ->
                                 ignore
                                   (Ojs.call x703 "push" [|(Obj.magic x704)|])
                             | None -> ());
                            x703))|])
    let (flat :
      ('tags, 'T) this ->
        this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list)
      =
      fun (x722 : ('tags, 'T) this) ->
        fun ~this:(x718 : 'A) ->
          fun ?depth:(x719 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x726 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x726)
                (let x725 = this_to_js Obj.magic Obj.magic x722 in
                 Ojs.call (Ojs.get_prop_ascii x725 "flat") "apply"
                   [|x725;((let x720 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x720 "push" [|(Obj.magic x718)|]);
                            (match x719 with
                             | Some x721 ->
                                 ignore
                                   (Ojs.call x720 "push" [|(Obj.magic x721)|])
                             | None -> ());
                            x720))|])
    let (includes :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> bool)
      =
      fun (x733 : ('tags, 'T) this) ->
        fun ~searchElement:(x729 : 'T) ->
          fun ?fromIndex:(x730 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x736 = this_to_js Obj.magic Obj.magic x733 in
                 Ojs.call (Ojs.get_prop_ascii x736 "includes") "apply"
                   [|x736;((let x731 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x731 "push" [|(Obj.magic x729)|]);
                            (match x730 with
                             | Some x732 ->
                                 ignore
                                   (Ojs.call x731 "push"
                                      [|(Ojs.float_to_js x732)|])
                             | None -> ());
                            x731))|])
    let (entries : ('tags, 'T) this -> (float * 'T) IterableIterator.t) =
      fun (x737 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x740 : Ojs.t) ->
             let x741 = x740 in
             ((Ojs.float_of_js (Ojs.array_get x741 0)),
               (Obj.magic (Ojs.array_get x741 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x737) "entries" [||])
    let (keys : ('tags, 'T) this -> float IterableIterator.t) =
      fun (x742 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x742) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x746 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x746) "values" [||])
    let (find :
      ('tags, 'T) this ->
        predicate:(this:unit ->
                     value:'T -> index:float -> obj:'T list -> bool)
          -> ?thisArg:any -> unit -> 'S or_undefined)
      =
      fun (x759 : ('tags, 'T) this) ->
        fun
          ~predicate:(x750 :
                       this:unit ->
                         value:'T -> index:float -> obj:'T list -> bool)
          ->
          fun ?thisArg:(x751 : any option) ->
            fun () ->
              or_undefined_of_js Obj.magic
                (let x762 = this_to_js Obj.magic Obj.magic x759 in
                 Ojs.call (Ojs.get_prop_ascii x762 "find") "apply"
                   [|x762;((let x752 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x752 "push"
                                 [|(Ojs.fun_to_js 4
                                      (fun (x754 : Ojs.t) ->
                                         fun (x755 : Ojs.t) ->
                                           fun (x756 : Ojs.t) ->
                                             fun (x757 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x750
                                                    ~this:(Ojs.unit_of_js
                                                             x754)
                                                    ~value:(Obj.magic x755)
                                                    ~index:(Ojs.float_of_js
                                                              x756)
                                                    ~obj:(Ojs.list_of_js
                                                            Obj.magic x757))))|]);
                            (match x751 with
                             | Some x753 ->
                                 ignore
                                   (Ojs.call x752 "push" [|(any_to_js x753)|])
                             | None -> ());
                            x752))|])
    let (find' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T or_undefined)
      =
      fun (x772 : ('tags, 'T) this) ->
        fun
          ~predicate:(x764 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x765 : any option) ->
            fun () ->
              or_undefined_of_js Obj.magic
                (let x775 = this_to_js Obj.magic Obj.magic x772 in
                 Ojs.call (Ojs.get_prop_ascii x775 "find") "apply"
                   [|x775;((let x766 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x766 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x768 : Ojs.t) ->
                                         fun (x769 : Ojs.t) ->
                                           fun (x770 : Ojs.t) ->
                                             unknown_to_js
                                               (x764 ~value:(Obj.magic x768)
                                                  ~index:(Ojs.float_of_js
                                                            x769)
                                                  ~obj:(Ojs.list_of_js
                                                          Obj.magic x770))))|]);
                            (match x765 with
                             | Some x767 ->
                                 ignore
                                   (Ojs.call x766 "push" [|(any_to_js x767)|])
                             | None -> ());
                            x766))|])
    let (findIndex :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x785 : ('tags, 'T) this) ->
        fun
          ~predicate:(x777 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x778 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x788 = this_to_js Obj.magic Obj.magic x785 in
                 Ojs.call (Ojs.get_prop_ascii x788 "findIndex") "apply"
                   [|x788;((let x779 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x779 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x781 : Ojs.t) ->
                                         fun (x782 : Ojs.t) ->
                                           fun (x783 : Ojs.t) ->
                                             unknown_to_js
                                               (x777 ~value:(Obj.magic x781)
                                                  ~index:(Ojs.float_of_js
                                                            x782)
                                                  ~obj:(Ojs.list_of_js
                                                          Obj.magic x783))))|]);
                            (match x778 with
                             | Some x780 ->
                                 ignore
                                   (Ojs.call x779 "push" [|(any_to_js x780)|])
                             | None -> ());
                            x779))|])
    let (get_length : ('tags, 'T) this -> float) =
      fun (x789 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x789) "length")
    let (toString : ('tags, 'T) this -> string) =
      fun (x792 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x792) "toString" [||])
    let (toLocaleString : ('tags, 'T) this -> string) =
      fun (x795 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x795) "toLocaleString"
             [||])
    let (concat : ('tags, 'T) this -> items:'T ConcatArray.t list -> 'T list)
      =
      fun (x802 : ('tags, 'T) this) ->
        fun ~items:(x798 : 'T ConcatArray.t list) ->
          Ojs.list_of_js Obj.magic
            (let x805 = this_to_js Obj.magic Obj.magic x802 in
             Ojs.call (Ojs.get_prop_ascii x805 "concat") "apply"
               [|x805;((let x799 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x800 : 'T ConcatArray.t) ->
                             ignore
                               (Ojs.call x799 "push"
                                  [|(ConcatArray.t_to_js Obj.magic x800)|]))
                          x798;
                        x799))|])
    let (concat' :
      ('tags, 'T) this -> items:('T, 'T ConcatArray.t) union2 list -> 'T list)
      =
      fun (x813 : ('tags, 'T) this) ->
        fun ~items:(x807 : ('T, 'T ConcatArray.t) union2 list) ->
          Ojs.list_of_js Obj.magic
            (let x816 = this_to_js Obj.magic Obj.magic x813 in
             Ojs.call (Ojs.get_prop_ascii x816 "concat") "apply"
               [|x816;((let x808 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x809 : ('T, 'T ConcatArray.t) union2) ->
                             ignore
                               (Ojs.call x808 "push"
                                  [|(union2_to_js Obj.magic
                                       (fun (x811 : 'T ConcatArray.t) ->
                                          ConcatArray.t_to_js Obj.magic x811)
                                       x809)|])) x807;
                        x808))|])
    let (join : ('tags, 'T) this -> ?separator:string -> unit -> string) =
      fun (x821 : ('tags, 'T) this) ->
        fun ?separator:(x818 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x824 = this_to_js Obj.magic Obj.magic x821 in
               Ojs.call (Ojs.get_prop_ascii x824 "join") "apply"
                 [|x824;((let x819 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x818 with
                           | Some x820 ->
                               ignore
                                 (Ojs.call x819 "push"
                                    [|(Ojs.string_to_js x820)|])
                           | None -> ());
                          x819))|])
    let (slice :
      ('tags, 'T) this -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x830 : ('tags, 'T) this) ->
        fun ?start:(x825 : float option) ->
          fun ?end_:(x826 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x833 = this_to_js Obj.magic Obj.magic x830 in
                 Ojs.call (Ojs.get_prop_ascii x833 "slice") "apply"
                   [|x833;((let x827 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x825 with
                             | Some x829 ->
                                 ignore
                                   (Ojs.call x827 "push"
                                      [|(Ojs.float_to_js x829)|])
                             | None -> ());
                            (match x826 with
                             | Some x828 ->
                                 ignore
                                   (Ojs.call x827 "push"
                                      [|(Ojs.float_to_js x828)|])
                             | None -> ());
                            x827))|])
    let (indexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x839 : ('tags, 'T) this) ->
        fun ~searchElement:(x835 : 'T) ->
          fun ?fromIndex:(x836 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x842 = this_to_js Obj.magic Obj.magic x839 in
                 Ojs.call (Ojs.get_prop_ascii x842 "indexOf") "apply"
                   [|x842;((let x837 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x837 "push" [|(Obj.magic x835)|]);
                            (match x836 with
                             | Some x838 ->
                                 ignore
                                   (Ojs.call x837 "push"
                                      [|(Ojs.float_to_js x838)|])
                             | None -> ());
                            x837))|])
    let (lastIndexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x847 : ('tags, 'T) this) ->
        fun ~searchElement:(x843 : 'T) ->
          fun ?fromIndex:(x844 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x850 = this_to_js Obj.magic Obj.magic x847 in
                 Ojs.call (Ojs.get_prop_ascii x850 "lastIndexOf") "apply"
                   [|x850;((let x845 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x845 "push" [|(Obj.magic x843)|]);
                            (match x844 with
                             | Some x846 ->
                                 ignore
                                   (Ojs.call x845 "push"
                                      [|(Ojs.float_to_js x846)|])
                             | None -> ());
                            x845))|])
    let (every :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x859 : ('tags, 'T) this) ->
        fun
          ~predicate:(x851 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x852 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x862 = this_to_js Obj.magic Obj.magic x859 in
                 Ojs.call (Ojs.get_prop_ascii x862 "every") "apply"
                   [|x862;((let x853 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x853 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x855 : Ojs.t) ->
                                         fun (x856 : Ojs.t) ->
                                           fun (x857 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x851 ~value:(Obj.magic x855)
                                                  ~index:(Ojs.float_of_js
                                                            x856)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x857))))|]);
                            (match x852 with
                             | Some x854 ->
                                 ignore
                                   (Ojs.call x853 "push" [|(any_to_js x854)|])
                             | None -> ());
                            x853))|])
    let (every' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x871 : ('tags, 'T) this) ->
        fun
          ~predicate:(x863 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x864 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x874 = this_to_js Obj.magic Obj.magic x871 in
                 Ojs.call (Ojs.get_prop_ascii x874 "every") "apply"
                   [|x874;((let x865 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x865 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x867 : Ojs.t) ->
                                         fun (x868 : Ojs.t) ->
                                           fun (x869 : Ojs.t) ->
                                             unknown_to_js
                                               (x863 ~value:(Obj.magic x867)
                                                  ~index:(Ojs.float_of_js
                                                            x868)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x869))))|]);
                            (match x864 with
                             | Some x866 ->
                                 ignore
                                   (Ojs.call x865 "push" [|(any_to_js x866)|])
                             | None -> ());
                            x865))|])
    let (some :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x883 : ('tags, 'T) this) ->
        fun
          ~predicate:(x875 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x876 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x886 = this_to_js Obj.magic Obj.magic x883 in
                 Ojs.call (Ojs.get_prop_ascii x886 "some") "apply"
                   [|x886;((let x877 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x877 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x879 : Ojs.t) ->
                                         fun (x880 : Ojs.t) ->
                                           fun (x881 : Ojs.t) ->
                                             unknown_to_js
                                               (x875 ~value:(Obj.magic x879)
                                                  ~index:(Ojs.float_of_js
                                                            x880)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x881))))|]);
                            (match x876 with
                             | Some x878 ->
                                 ignore
                                   (Ojs.call x877 "push" [|(any_to_js x878)|])
                             | None -> ());
                            x877))|])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x895 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x887 :
                        value:'T -> index:float -> array:'T list -> unit)
          ->
          fun ?thisArg:(x888 : any option) ->
            fun () ->
              ignore
                (let x898 = this_to_js Obj.magic Obj.magic x895 in
                 Ojs.call (Ojs.get_prop_ascii x898 "forEach") "apply"
                   [|x898;((let x889 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x889 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x891 : Ojs.t) ->
                                         fun (x892 : Ojs.t) ->
                                           fun (x893 : Ojs.t) ->
                                             x887 ~value:(Obj.magic x891)
                                               ~index:(Ojs.float_of_js x892)
                                               ~array:(Ojs.list_of_js
                                                         Obj.magic x893)))|]);
                            (match x888 with
                             | Some x890 ->
                                 ignore
                                   (Ojs.call x889 "push" [|(any_to_js x890)|])
                             | None -> ());
                            x889))|])
    let (map :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x907 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x899 : value:'T -> index:float -> array:'T list -> 'U)
          ->
          fun ?thisArg:(x900 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x910 = this_to_js Obj.magic Obj.magic x907 in
                 Ojs.call (Ojs.get_prop_ascii x910 "map") "apply"
                   [|x910;((let x901 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x901 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x903 : Ojs.t) ->
                                         fun (x904 : Ojs.t) ->
                                           fun (x905 : Ojs.t) ->
                                             Obj.magic
                                               (x899 ~value:(Obj.magic x903)
                                                  ~index:(Ojs.float_of_js
                                                            x904)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x905))))|]);
                            (match x900 with
                             | Some x902 ->
                                 ignore
                                   (Ojs.call x901 "push" [|(any_to_js x902)|])
                             | None -> ());
                            x901))|])
    let (filter :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x920 : ('tags, 'T) this) ->
        fun
          ~predicate:(x912 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x913 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x923 = this_to_js Obj.magic Obj.magic x920 in
                 Ojs.call (Ojs.get_prop_ascii x923 "filter") "apply"
                   [|x923;((let x914 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x914 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x916 : Ojs.t) ->
                                         fun (x917 : Ojs.t) ->
                                           fun (x918 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x912 ~value:(Obj.magic x916)
                                                  ~index:(Ojs.float_of_js
                                                            x917)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x918))))|]);
                            (match x913 with
                             | Some x915 ->
                                 ignore
                                   (Ojs.call x914 "push" [|(any_to_js x915)|])
                             | None -> ());
                            x914))|])
    let (filter' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T list)
      =
      fun (x933 : ('tags, 'T) this) ->
        fun
          ~predicate:(x925 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x926 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x936 = this_to_js Obj.magic Obj.magic x933 in
                 Ojs.call (Ojs.get_prop_ascii x936 "filter") "apply"
                   [|x936;((let x927 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x927 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x929 : Ojs.t) ->
                                         fun (x930 : Ojs.t) ->
                                           fun (x931 : Ojs.t) ->
                                             unknown_to_js
                                               (x925 ~value:(Obj.magic x929)
                                                  ~index:(Ojs.float_of_js
                                                            x930)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x931))))|]);
                            (match x926 with
                             | Some x928 ->
                                 ignore
                                   (Ojs.call x927 "push" [|(any_to_js x928)|])
                             | None -> ());
                            x927))|])
    let (reduce :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x944 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x938 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x944) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x939 : Ojs.t) ->
                       fun (x940 : Ojs.t) ->
                         fun (x941 : Ojs.t) ->
                           fun (x942 : Ojs.t) ->
                             Obj.magic
                               (x938 ~previousValue:(Obj.magic x939)
                                  ~currentValue:(Obj.magic x940)
                                  ~currentIndex:(Ojs.float_of_js x941)
                                  ~array:(Ojs.list_of_js Obj.magic x942))))|])
    let (reduce' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x954 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x947 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x953 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x954) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x948 : Ojs.t) ->
                         fun (x949 : Ojs.t) ->
                           fun (x950 : Ojs.t) ->
                             fun (x951 : Ojs.t) ->
                               Obj.magic
                                 (x947 ~previousValue:(Obj.magic x948)
                                    ~currentValue:(Obj.magic x949)
                                    ~currentIndex:(Ojs.float_of_js x950)
                                    ~array:(Ojs.list_of_js Obj.magic x951))));(
                   Obj.magic x953)|])
    let (reduce'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x964 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x957 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x963 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x964) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x958 : Ojs.t) ->
                         fun (x959 : Ojs.t) ->
                           fun (x960 : Ojs.t) ->
                             fun (x961 : Ojs.t) ->
                               Obj.magic
                                 (x957 ~previousValue:(Obj.magic x958)
                                    ~currentValue:(Obj.magic x959)
                                    ~currentIndex:(Ojs.float_of_js x960)
                                    ~array:(Ojs.list_of_js Obj.magic x961))));(
                   Obj.magic x963)|])
    let (reduceRight :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x973 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x967 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x973) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x968 : Ojs.t) ->
                       fun (x969 : Ojs.t) ->
                         fun (x970 : Ojs.t) ->
                           fun (x971 : Ojs.t) ->
                             Obj.magic
                               (x967 ~previousValue:(Obj.magic x968)
                                  ~currentValue:(Obj.magic x969)
                                  ~currentIndex:(Ojs.float_of_js x970)
                                  ~array:(Ojs.list_of_js Obj.magic x971))))|])
    let (reduceRight' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x983 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x976 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x982 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x983) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x977 : Ojs.t) ->
                         fun (x978 : Ojs.t) ->
                           fun (x979 : Ojs.t) ->
                             fun (x980 : Ojs.t) ->
                               Obj.magic
                                 (x976 ~previousValue:(Obj.magic x977)
                                    ~currentValue:(Obj.magic x978)
                                    ~currentIndex:(Ojs.float_of_js x979)
                                    ~array:(Ojs.list_of_js Obj.magic x980))));(
                   Obj.magic x982)|])
    let (reduceRight'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x993 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x986 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x992 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x993) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x987 : Ojs.t) ->
                         fun (x988 : Ojs.t) ->
                           fun (x989 : Ojs.t) ->
                             fun (x990 : Ojs.t) ->
                               Obj.magic
                                 (x986 ~previousValue:(Obj.magic x987)
                                    ~currentValue:(Obj.magic x988)
                                    ~currentIndex:(Ojs.float_of_js x989)
                                    ~array:(Ojs.list_of_js Obj.magic x990))));(
                   Obj.magic x992)|])
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x996 : ('tags, 'T) this) ->
        fun (x999 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x996)
               (Ojs.float_to_js x999))
    let cast_from = Obj.magic
    let (to_ml : 'T t -> 'T list) =
      fun (x1000 : 'T t) ->
        Ojs.list_of_js Obj.magic (t_to_js Obj.magic x1000)
    let (of_ml : 'T list -> 'T t) =
      fun (x1003 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x1003)
  end
module TemplateStringsArray =
  struct
    type t =
      [ `ReadonlyArray of string  | `ReadonlyArray of string 
      | `TemplateStringsArray  | string ArrayLike.tags_1
      | string IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1007 : Ojs.t) -> t_of_js x1007
    and t_0_to_js : t_0 -> Ojs.t = fun (x1006 : t) -> t_to_js x1006
    type tags =
      [ `ReadonlyArray of string  | `ReadonlyArray of string 
      | `TemplateStringsArray  | string ArrayLike.tags_1
      | string IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `TemplateStringsArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1010 : Ojs.t) -> intf_of_js __tags_of_js x1010
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1008 : __tags intf) -> intf_to_js __tags_to_js x1008
    let (get_raw : 'tags this -> string list) =
      fun (x1012 : 'tags this) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1012) "raw")
    let cast_from = Obj.magic
  end
module SyntaxError =
  struct
    type t = [ `Error  | `SyntaxError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1016 : Ojs.t) -> t_of_js x1016
    and t_0_to_js : t_0 -> Ojs.t = fun (x1015 : t) -> t_to_js x1015
    type tags = [ `Error  | `SyntaxError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `SyntaxError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1019 : Ojs.t) -> intf_of_js __tags_of_js x1019
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1017 : __tags intf) -> intf_to_js __tags_to_js x1017
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x1021 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "SyntaxError")
               (let x1022 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1021 with
                 | Some x1023 ->
                     ignore
                       (Ojs.call x1022 "push" [|(Ojs.string_to_js x1023)|])
                 | None -> ());
                x1022))
    let (invoke : ?message:string -> unit -> t) =
      fun ?message:(x1024 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "SyntaxError") "apply"
               [|Ojs.null;((let x1025 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x1024 with
                             | Some x1026 ->
                                 ignore
                                   (Ojs.call x1025 "push"
                                      [|(Ojs.string_to_js x1026)|])
                             | None -> ());
                            x1025))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "SyntaxError")
             "prototype")
    let cast_from = Obj.magic
  end
module Symbol =
  struct
    type t = [ `Symbol ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1028 : Ojs.t) -> t_of_js x1028
    and t_0_to_js : t_0 -> Ojs.t = fun (x1027 : t) -> t_to_js x1027
    type tags = [ `Symbol ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Symbol ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1031 : Ojs.t) -> intf_of_js __tags_of_js x1031
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1029 : __tags intf) -> intf_to_js __tags_to_js x1029
    let (get_description : 'tags this -> string or_undefined) =
      fun (x1033 : 'tags this) ->
        or_undefined_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1033) "description")
    let (toString : 'tags this -> string) =
      fun (x1036 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1036) "toString" [||])
    let (valueOf : 'tags this -> symbol) =
      fun (x1038 : 'tags this) ->
        symbol_of_js (Ojs.call (this_to_js Obj.magic x1038) "valueOf" [||])
    let (matchAll : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "matchAll")
    let (asyncIterator : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "asyncIterator")
    let (hasInstance : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "hasInstance")
    let (isConcatSpreadable : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "isConcatSpreadable")
    let (match_ : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "match")
    let (replace : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "replace")
    let (search : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "search")
    let (species : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "species")
    let (split : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "split")
    let (toPrimitive : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "toPrimitive")
    let (toStringTag : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "toStringTag")
    let (unscopables : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "unscopables")
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "prototype")
    let (invoke : ?description:string or_number -> unit -> symbol) =
      fun ?description:(x1040 : string or_number option) ->
        fun () ->
          symbol_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Symbol") "apply"
               [|Ojs.null;((let x1041 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x1040 with
                             | Some x1042 ->
                                 ignore
                                   (Ojs.call x1041 "push"
                                      [|(or_number_to_js Ojs.string_to_js
                                           x1042)|])
                             | None -> ());
                            x1041))|])
    let (for_ : string -> symbol) =
      fun (x1044 : string) ->
        symbol_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Symbol") "for"
             [|(Ojs.string_to_js x1044)|])
    let (keyFor : symbol -> string or_undefined) =
      fun (x1045 : symbol) ->
        or_undefined_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Symbol") "keyFor"
             [|(symbol_to_js x1045)|])
    let (iterator : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "iterator")
    let cast_from = Obj.magic
  end
module Array =
  struct
    module AnonymousInterface0 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x1048 : Ojs.t) -> x1048
        and t_to_js : t -> Ojs.t = fun (x1047 : Ojs.t) -> x1047
        let (get_copyWithin : t -> bool) =
          fun (x1049 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1049) "copyWithin")
        let (set_copyWithin : t -> bool -> unit) =
          fun (x1050 : t) ->
            fun (x1051 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1050) "copyWithin"
                (Ojs.bool_to_js x1051)
        let (get_entries : t -> bool) =
          fun (x1052 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1052) "entries")
        let (set_entries : t -> bool -> unit) =
          fun (x1053 : t) ->
            fun (x1054 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1053) "entries"
                (Ojs.bool_to_js x1054)
        let (get_fill : t -> bool) =
          fun (x1055 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1055) "fill")
        let (set_fill : t -> bool -> unit) =
          fun (x1056 : t) ->
            fun (x1057 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1056) "fill"
                (Ojs.bool_to_js x1057)
        let (get_find : t -> bool) =
          fun (x1058 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1058) "find")
        let (set_find : t -> bool -> unit) =
          fun (x1059 : t) ->
            fun (x1060 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1059) "find"
                (Ojs.bool_to_js x1060)
        let (get_findIndex : t -> bool) =
          fun (x1061 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1061) "findIndex")
        let (set_findIndex : t -> bool -> unit) =
          fun (x1062 : t) ->
            fun (x1063 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1062) "findIndex"
                (Ojs.bool_to_js x1063)
        let (get_keys : t -> bool) =
          fun (x1064 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1064) "keys")
        let (set_keys : t -> bool -> unit) =
          fun (x1065 : t) ->
            fun (x1066 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1065) "keys"
                (Ojs.bool_to_js x1066)
        let (get_values : t -> bool) =
          fun (x1067 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1067) "values")
        let (set_values : t -> bool -> unit) =
          fun (x1068 : t) ->
            fun (x1069 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1068) "values"
                (Ojs.bool_to_js x1069)
      end
    type 'T t =
      [ `Array of 'T  | 'T ArrayLike.tags_1 | 'T IterableIterator.tags_1]
        intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1072 : Ojs.t) -> t_of_js __T_of_js x1072
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1070 : __T t) -> t_to_js __T_to_js x1070
    type 'T tags =
      [ `Array of 'T  | 'T ArrayLike.tags_1 | 'T IterableIterator.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `Array of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x1076 : Ojs.t) -> intf_of_js __tags_of_js x1076
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x1074 : __tags intf) -> intf_to_js __tags_to_js x1074
    let (flatMap :
      ('tags, 'T) this ->
        callback:(this:'This ->
                    value:'T ->
                      index:float ->
                        array:'T list -> ('U, 'U ReadonlyArray.t) union2)
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x1090 : ('tags, 'T) this) ->
        fun
          ~callback:(x1078 :
                      this:'This ->
                        value:'T ->
                          index:float ->
                            array:'T list -> ('U, 'U ReadonlyArray.t) union2)
          ->
          fun ?thisArg:(x1079 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1093 = this_to_js Obj.magic Obj.magic x1090 in
                 Ojs.call (Ojs.get_prop_ascii x1093 "flatMap") "apply"
                   [|x1093;((let x1080 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1080 "push"
                                  [|(Ojs.fun_to_js 4
                                       (fun (x1082 : Ojs.t) ->
                                          fun (x1083 : Ojs.t) ->
                                            fun (x1084 : Ojs.t) ->
                                              fun (x1085 : Ojs.t) ->
                                                union2_to_js Obj.magic
                                                  (fun
                                                     (x1088 :
                                                       'U ReadonlyArray.t)
                                                     ->
                                                     ReadonlyArray.t_to_js
                                                       Obj.magic x1088)
                                                  (x1078
                                                     ~this:(Obj.magic x1082)
                                                     ~value:(Obj.magic x1083)
                                                     ~index:(Ojs.float_of_js
                                                               x1084)
                                                     ~array:(Ojs.list_of_js
                                                               Obj.magic
                                                               x1085))))|]);
                             (match x1079 with
                              | Some x1081 ->
                                  ignore
                                    (Ojs.call x1080 "push"
                                       [|(Obj.magic x1081)|])
                              | None -> ());
                             x1080))|])
    let (flat :
      ('tags, 'T) this ->
        this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list)
      =
      fun (x1099 : ('tags, 'T) this) ->
        fun ~this:(x1095 : 'A) ->
          fun ?depth:(x1096 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x1103 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x1103)
                (let x1102 = this_to_js Obj.magic Obj.magic x1099 in
                 Ojs.call (Ojs.get_prop_ascii x1102 "flat") "apply"
                   [|x1102;((let x1097 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1097 "push" [|(Obj.magic x1095)|]);
                             (match x1096 with
                              | Some x1098 ->
                                  ignore
                                    (Ojs.call x1097 "push"
                                       [|(Obj.magic x1098)|])
                              | None -> ());
                             x1097))|])
    let (includes :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> bool)
      =
      fun (x1110 : ('tags, 'T) this) ->
        fun ~searchElement:(x1106 : 'T) ->
          fun ?fromIndex:(x1107 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1113 = this_to_js Obj.magic Obj.magic x1110 in
                 Ojs.call (Ojs.get_prop_ascii x1113 "includes") "apply"
                   [|x1113;((let x1108 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1108 "push" [|(Obj.magic x1106)|]);
                             (match x1107 with
                              | Some x1109 ->
                                  ignore
                                    (Ojs.call x1108 "push"
                                       [|(Ojs.float_to_js x1109)|])
                              | None -> ());
                             x1108))|])
    let (entries : ('tags, 'T) this -> (float * 'T) IterableIterator.t) =
      fun (x1114 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x1117 : Ojs.t) ->
             let x1118 = x1117 in
             ((Ojs.float_of_js (Ojs.array_get x1118 0)),
               (Obj.magic (Ojs.array_get x1118 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x1114) "entries" [||])
    let (keys : ('tags, 'T) this -> float IterableIterator.t) =
      fun (x1119 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x1119) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x1123 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1123) "values" [||])
    let (find :
      ('tags, 'T) this ->
        predicate:(this:unit ->
                     value:'T -> index:float -> obj:'T list -> bool)
          -> ?thisArg:any -> unit -> 'S or_undefined)
      =
      fun (x1136 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1127 :
                       this:unit ->
                         value:'T -> index:float -> obj:'T list -> bool)
          ->
          fun ?thisArg:(x1128 : any option) ->
            fun () ->
              or_undefined_of_js Obj.magic
                (let x1139 = this_to_js Obj.magic Obj.magic x1136 in
                 Ojs.call (Ojs.get_prop_ascii x1139 "find") "apply"
                   [|x1139;((let x1129 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1129 "push"
                                  [|(Ojs.fun_to_js 4
                                       (fun (x1131 : Ojs.t) ->
                                          fun (x1132 : Ojs.t) ->
                                            fun (x1133 : Ojs.t) ->
                                              fun (x1134 : Ojs.t) ->
                                                Ojs.bool_to_js
                                                  (x1127
                                                     ~this:(Ojs.unit_of_js
                                                              x1131)
                                                     ~value:(Obj.magic x1132)
                                                     ~index:(Ojs.float_of_js
                                                               x1133)
                                                     ~obj:(Ojs.list_of_js
                                                             Obj.magic x1134))))|]);
                             (match x1128 with
                              | Some x1130 ->
                                  ignore
                                    (Ojs.call x1129 "push"
                                       [|(any_to_js x1130)|])
                              | None -> ());
                             x1129))|])
    let (find' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T or_undefined)
      =
      fun (x1149 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1141 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x1142 : any option) ->
            fun () ->
              or_undefined_of_js Obj.magic
                (let x1152 = this_to_js Obj.magic Obj.magic x1149 in
                 Ojs.call (Ojs.get_prop_ascii x1152 "find") "apply"
                   [|x1152;((let x1143 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1143 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1145 : Ojs.t) ->
                                          fun (x1146 : Ojs.t) ->
                                            fun (x1147 : Ojs.t) ->
                                              unknown_to_js
                                                (x1141
                                                   ~value:(Obj.magic x1145)
                                                   ~index:(Ojs.float_of_js
                                                             x1146)
                                                   ~obj:(Ojs.list_of_js
                                                           Obj.magic x1147))))|]);
                             (match x1142 with
                              | Some x1144 ->
                                  ignore
                                    (Ojs.call x1143 "push"
                                       [|(any_to_js x1144)|])
                              | None -> ());
                             x1143))|])
    let (findIndex :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x1162 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1154 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x1155 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x1165 = this_to_js Obj.magic Obj.magic x1162 in
                 Ojs.call (Ojs.get_prop_ascii x1165 "findIndex") "apply"
                   [|x1165;((let x1156 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1156 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1158 : Ojs.t) ->
                                          fun (x1159 : Ojs.t) ->
                                            fun (x1160 : Ojs.t) ->
                                              unknown_to_js
                                                (x1154
                                                   ~value:(Obj.magic x1158)
                                                   ~index:(Ojs.float_of_js
                                                             x1159)
                                                   ~obj:(Ojs.list_of_js
                                                           Obj.magic x1160))))|]);
                             (match x1155 with
                              | Some x1157 ->
                                  ignore
                                    (Ojs.call x1156 "push"
                                       [|(any_to_js x1157)|])
                              | None -> ());
                             x1156))|])
    let (fill :
      ('tags, 'T) this ->
        value:'T -> ?start:float -> ?end_:float -> unit -> ('tags, 'T) this)
      =
      fun (x1172 : ('tags, 'T) this) ->
        fun ~value:(x1166 : 'T) ->
          fun ?start:(x1167 : float option) ->
            fun ?end_:(x1168 : float option) ->
              fun () ->
                this_of_js Obj.magic Obj.magic
                  (let x1175 = this_to_js Obj.magic Obj.magic x1172 in
                   Ojs.call (Ojs.get_prop_ascii x1175 "fill") "apply"
                     [|x1175;((let x1169 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1169 "push" [|(Obj.magic x1166)|]);
                               (match x1167 with
                                | Some x1171 ->
                                    ignore
                                      (Ojs.call x1169 "push"
                                         [|(Ojs.float_to_js x1171)|])
                                | None -> ());
                               (match x1168 with
                                | Some x1170 ->
                                    ignore
                                      (Ojs.call x1169 "push"
                                         [|(Ojs.float_to_js x1170)|])
                                | None -> ());
                               x1169))|])
    let (copyWithin :
      ('tags, 'T) this ->
        target:float ->
          start:float -> ?end_:float -> unit -> ('tags, 'T) this)
      =
      fun (x1183 : ('tags, 'T) this) ->
        fun ~target:(x1178 : float) ->
          fun ~start:(x1179 : float) ->
            fun ?end_:(x1180 : float option) ->
              fun () ->
                this_of_js Obj.magic Obj.magic
                  (let x1186 = this_to_js Obj.magic Obj.magic x1183 in
                   Ojs.call (Ojs.get_prop_ascii x1186 "copyWithin") "apply"
                     [|x1186;((let x1181 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1181 "push"
                                    [|(Ojs.float_to_js x1178)|]);
                               ignore
                                 (Ojs.call x1181 "push"
                                    [|(Ojs.float_to_js x1179)|]);
                               (match x1180 with
                                | Some x1182 ->
                                    ignore
                                      (Ojs.call x1181 "push"
                                         [|(Ojs.float_to_js x1182)|])
                                | None -> ());
                               x1181))|])
    let (get_length : ('tags, 'T) this -> float) =
      fun (x1189 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x1189) "length")
    let (set_length : ('tags, 'T) this -> float -> unit) =
      fun (x1192 : ('tags, 'T) this) ->
        fun (x1193 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x1192) "length"
            (Ojs.float_to_js x1193)
    let (toString : ('tags, 'T) this -> string) =
      fun (x1196 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x1196) "toString" [||])
    let (toLocaleString : ('tags, 'T) this -> string) =
      fun (x1199 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x1199) "toLocaleString"
             [||])
    let (pop : ('tags, 'T) this -> 'T or_undefined) =
      fun (x1202 : ('tags, 'T) this) ->
        or_undefined_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1202) "pop" [||])
    let (push : ('tags, 'T) this -> items:'T list -> float) =
      fun (x1209 : ('tags, 'T) this) ->
        fun ~items:(x1206 : 'T list) ->
          Ojs.float_of_js
            (let x1212 = this_to_js Obj.magic Obj.magic x1209 in
             Ojs.call (Ojs.get_prop_ascii x1212 "push") "apply"
               [|x1212;((let x1207 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1208 : 'T) ->
                              ignore
                                (Ojs.call x1207 "push" [|(Obj.magic x1208)|]))
                           x1206;
                         x1207))|])
    let (concat : ('tags, 'T) this -> items:'T ConcatArray.t list -> 'T list)
      =
      fun (x1217 : ('tags, 'T) this) ->
        fun ~items:(x1213 : 'T ConcatArray.t list) ->
          Ojs.list_of_js Obj.magic
            (let x1220 = this_to_js Obj.magic Obj.magic x1217 in
             Ojs.call (Ojs.get_prop_ascii x1220 "concat") "apply"
               [|x1220;((let x1214 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1215 : 'T ConcatArray.t) ->
                              ignore
                                (Ojs.call x1214 "push"
                                   [|(ConcatArray.t_to_js Obj.magic x1215)|]))
                           x1213;
                         x1214))|])
    let (concat' :
      ('tags, 'T) this -> items:('T, 'T ConcatArray.t) union2 list -> 'T list)
      =
      fun (x1228 : ('tags, 'T) this) ->
        fun ~items:(x1222 : ('T, 'T ConcatArray.t) union2 list) ->
          Ojs.list_of_js Obj.magic
            (let x1231 = this_to_js Obj.magic Obj.magic x1228 in
             Ojs.call (Ojs.get_prop_ascii x1231 "concat") "apply"
               [|x1231;((let x1223 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1224 : ('T, 'T ConcatArray.t) union2) ->
                              ignore
                                (Ojs.call x1223 "push"
                                   [|(union2_to_js Obj.magic
                                        (fun (x1226 : 'T ConcatArray.t) ->
                                           ConcatArray.t_to_js Obj.magic
                                             x1226) x1224)|])) x1222;
                         x1223))|])
    let (join : ('tags, 'T) this -> ?separator:string -> unit -> string) =
      fun (x1236 : ('tags, 'T) this) ->
        fun ?separator:(x1233 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x1239 = this_to_js Obj.magic Obj.magic x1236 in
               Ojs.call (Ojs.get_prop_ascii x1239 "join") "apply"
                 [|x1239;((let x1234 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1233 with
                            | Some x1235 ->
                                ignore
                                  (Ojs.call x1234 "push"
                                     [|(Ojs.string_to_js x1235)|])
                            | None -> ());
                           x1234))|])
    let (reverse : ('tags, 'T) this -> 'T list) =
      fun (x1240 : ('tags, 'T) this) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1240) "reverse" [||])
    let (shift : ('tags, 'T) this -> 'T or_undefined) =
      fun (x1244 : ('tags, 'T) this) ->
        or_undefined_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1244) "shift" [||])
    let (slice :
      ('tags, 'T) this -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x1253 : ('tags, 'T) this) ->
        fun ?start:(x1248 : float option) ->
          fun ?end_:(x1249 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1256 = this_to_js Obj.magic Obj.magic x1253 in
                 Ojs.call (Ojs.get_prop_ascii x1256 "slice") "apply"
                   [|x1256;((let x1250 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1248 with
                              | Some x1252 ->
                                  ignore
                                    (Ojs.call x1250 "push"
                                       [|(Ojs.float_to_js x1252)|])
                              | None -> ());
                             (match x1249 with
                              | Some x1251 ->
                                  ignore
                                    (Ojs.call x1250 "push"
                                       [|(Ojs.float_to_js x1251)|])
                              | None -> ());
                             x1250))|])
    let (sort :
      ('tags, 'T) this ->
        ?compareFn:(a:'T -> b:'T -> float) -> unit -> ('tags, 'T) this)
      =
      fun (x1263 : ('tags, 'T) this) ->
        fun ?compareFn:(x1258 : (a:'T -> b:'T -> float) option) ->
          fun () ->
            this_of_js Obj.magic Obj.magic
              (let x1266 = this_to_js Obj.magic Obj.magic x1263 in
               Ojs.call (Ojs.get_prop_ascii x1266 "sort") "apply"
                 [|x1266;((let x1259 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1258 with
                            | Some x1260 ->
                                ignore
                                  (Ojs.call x1259 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x1261 : Ojs.t) ->
                                             fun (x1262 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x1260 ~a:(Obj.magic x1261)
                                                    ~b:(Obj.magic x1262))))|])
                            | None -> ());
                           x1259))|])
    let (splice :
      ('tags, 'T) this ->
        start:float -> ?deleteCount:float -> unit -> 'T list)
      =
      fun (x1273 : ('tags, 'T) this) ->
        fun ~start:(x1269 : float) ->
          fun ?deleteCount:(x1270 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1276 = this_to_js Obj.magic Obj.magic x1273 in
                 Ojs.call (Ojs.get_prop_ascii x1276 "splice") "apply"
                   [|x1276;((let x1271 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1271 "push"
                                  [|(Ojs.float_to_js x1269)|]);
                             (match x1270 with
                              | Some x1272 ->
                                  ignore
                                    (Ojs.call x1271 "push"
                                       [|(Ojs.float_to_js x1272)|])
                              | None -> ());
                             x1271))|])
    let (splice' :
      ('tags, 'T) this ->
        start:float -> deleteCount:float -> items:'T list -> 'T list)
      =
      fun (x1283 : ('tags, 'T) this) ->
        fun ~start:(x1278 : float) ->
          fun ~deleteCount:(x1279 : float) ->
            fun ~items:(x1280 : 'T list) ->
              Ojs.list_of_js Obj.magic
                (let x1286 = this_to_js Obj.magic Obj.magic x1283 in
                 Ojs.call (Ojs.get_prop_ascii x1286 "splice") "apply"
                   [|x1286;((let x1281 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1281 "push"
                                  [|(Ojs.float_to_js x1278)|]);
                             ignore
                               (Ojs.call x1281 "push"
                                  [|(Ojs.float_to_js x1279)|]);
                             List.iter
                               (fun (x1282 : 'T) ->
                                  ignore
                                    (Ojs.call x1281 "push"
                                       [|(Obj.magic x1282)|])) x1280;
                             x1281))|])
    let (unshift : ('tags, 'T) this -> items:'T list -> float) =
      fun (x1291 : ('tags, 'T) this) ->
        fun ~items:(x1288 : 'T list) ->
          Ojs.float_of_js
            (let x1294 = this_to_js Obj.magic Obj.magic x1291 in
             Ojs.call (Ojs.get_prop_ascii x1294 "unshift") "apply"
               [|x1294;((let x1289 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1290 : 'T) ->
                              ignore
                                (Ojs.call x1289 "push" [|(Obj.magic x1290)|]))
                           x1288;
                         x1289))|])
    let (indexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x1299 : ('tags, 'T) this) ->
        fun ~searchElement:(x1295 : 'T) ->
          fun ?fromIndex:(x1296 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1302 = this_to_js Obj.magic Obj.magic x1299 in
                 Ojs.call (Ojs.get_prop_ascii x1302 "indexOf") "apply"
                   [|x1302;((let x1297 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1297 "push" [|(Obj.magic x1295)|]);
                             (match x1296 with
                              | Some x1298 ->
                                  ignore
                                    (Ojs.call x1297 "push"
                                       [|(Ojs.float_to_js x1298)|])
                              | None -> ());
                             x1297))|])
    let (lastIndexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x1307 : ('tags, 'T) this) ->
        fun ~searchElement:(x1303 : 'T) ->
          fun ?fromIndex:(x1304 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1310 = this_to_js Obj.magic Obj.magic x1307 in
                 Ojs.call (Ojs.get_prop_ascii x1310 "lastIndexOf") "apply"
                   [|x1310;((let x1305 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1305 "push" [|(Obj.magic x1303)|]);
                             (match x1304 with
                              | Some x1306 ->
                                  ignore
                                    (Ojs.call x1305 "push"
                                       [|(Ojs.float_to_js x1306)|])
                              | None -> ());
                             x1305))|])
    let (every :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1319 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1311 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x1312 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1322 = this_to_js Obj.magic Obj.magic x1319 in
                 Ojs.call (Ojs.get_prop_ascii x1322 "every") "apply"
                   [|x1322;((let x1313 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1313 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1315 : Ojs.t) ->
                                          fun (x1316 : Ojs.t) ->
                                            fun (x1317 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1311
                                                   ~value:(Obj.magic x1315)
                                                   ~index:(Ojs.float_of_js
                                                             x1316)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1317))))|]);
                             (match x1312 with
                              | Some x1314 ->
                                  ignore
                                    (Ojs.call x1313 "push"
                                       [|(any_to_js x1314)|])
                              | None -> ());
                             x1313))|])
    let (every' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1331 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1323 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1324 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1334 = this_to_js Obj.magic Obj.magic x1331 in
                 Ojs.call (Ojs.get_prop_ascii x1334 "every") "apply"
                   [|x1334;((let x1325 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1325 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1327 : Ojs.t) ->
                                          fun (x1328 : Ojs.t) ->
                                            fun (x1329 : Ojs.t) ->
                                              unknown_to_js
                                                (x1323
                                                   ~value:(Obj.magic x1327)
                                                   ~index:(Ojs.float_of_js
                                                             x1328)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1329))))|]);
                             (match x1324 with
                              | Some x1326 ->
                                  ignore
                                    (Ojs.call x1325 "push"
                                       [|(any_to_js x1326)|])
                              | None -> ());
                             x1325))|])
    let (some :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1343 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1335 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1336 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1346 = this_to_js Obj.magic Obj.magic x1343 in
                 Ojs.call (Ojs.get_prop_ascii x1346 "some") "apply"
                   [|x1346;((let x1337 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1337 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1339 : Ojs.t) ->
                                          fun (x1340 : Ojs.t) ->
                                            fun (x1341 : Ojs.t) ->
                                              unknown_to_js
                                                (x1335
                                                   ~value:(Obj.magic x1339)
                                                   ~index:(Ojs.float_of_js
                                                             x1340)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1341))))|]);
                             (match x1336 with
                              | Some x1338 ->
                                  ignore
                                    (Ojs.call x1337 "push"
                                       [|(any_to_js x1338)|])
                              | None -> ());
                             x1337))|])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x1355 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1347 :
                        value:'T -> index:float -> array:'T list -> unit)
          ->
          fun ?thisArg:(x1348 : any option) ->
            fun () ->
              ignore
                (let x1358 = this_to_js Obj.magic Obj.magic x1355 in
                 Ojs.call (Ojs.get_prop_ascii x1358 "forEach") "apply"
                   [|x1358;((let x1349 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1349 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1351 : Ojs.t) ->
                                          fun (x1352 : Ojs.t) ->
                                            fun (x1353 : Ojs.t) ->
                                              x1347 ~value:(Obj.magic x1351)
                                                ~index:(Ojs.float_of_js x1352)
                                                ~array:(Ojs.list_of_js
                                                          Obj.magic x1353)))|]);
                             (match x1348 with
                              | Some x1350 ->
                                  ignore
                                    (Ojs.call x1349 "push"
                                       [|(any_to_js x1350)|])
                              | None -> ());
                             x1349))|])
    let (map :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x1367 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1359 :
                        value:'T -> index:float -> array:'T list -> 'U)
          ->
          fun ?thisArg:(x1360 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1370 = this_to_js Obj.magic Obj.magic x1367 in
                 Ojs.call (Ojs.get_prop_ascii x1370 "map") "apply"
                   [|x1370;((let x1361 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1361 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1363 : Ojs.t) ->
                                          fun (x1364 : Ojs.t) ->
                                            fun (x1365 : Ojs.t) ->
                                              Obj.magic
                                                (x1359
                                                   ~value:(Obj.magic x1363)
                                                   ~index:(Ojs.float_of_js
                                                             x1364)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1365))))|]);
                             (match x1360 with
                              | Some x1362 ->
                                  ignore
                                    (Ojs.call x1361 "push"
                                       [|(any_to_js x1362)|])
                              | None -> ());
                             x1361))|])
    let (filter :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x1380 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1372 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x1373 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1383 = this_to_js Obj.magic Obj.magic x1380 in
                 Ojs.call (Ojs.get_prop_ascii x1383 "filter") "apply"
                   [|x1383;((let x1374 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1374 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1376 : Ojs.t) ->
                                          fun (x1377 : Ojs.t) ->
                                            fun (x1378 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1372
                                                   ~value:(Obj.magic x1376)
                                                   ~index:(Ojs.float_of_js
                                                             x1377)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1378))))|]);
                             (match x1373 with
                              | Some x1375 ->
                                  ignore
                                    (Ojs.call x1374 "push"
                                       [|(any_to_js x1375)|])
                              | None -> ());
                             x1374))|])
    let (filter' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T list)
      =
      fun (x1393 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1385 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1386 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1396 = this_to_js Obj.magic Obj.magic x1393 in
                 Ojs.call (Ojs.get_prop_ascii x1396 "filter") "apply"
                   [|x1396;((let x1387 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1387 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1389 : Ojs.t) ->
                                          fun (x1390 : Ojs.t) ->
                                            fun (x1391 : Ojs.t) ->
                                              unknown_to_js
                                                (x1385
                                                   ~value:(Obj.magic x1389)
                                                   ~index:(Ojs.float_of_js
                                                             x1390)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1391))))|]);
                             (match x1386 with
                              | Some x1388 ->
                                  ignore
                                    (Ojs.call x1387 "push"
                                       [|(any_to_js x1388)|])
                              | None -> ());
                             x1387))|])
    let (reduce :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1404 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1398 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1404) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x1399 : Ojs.t) ->
                       fun (x1400 : Ojs.t) ->
                         fun (x1401 : Ojs.t) ->
                           fun (x1402 : Ojs.t) ->
                             Obj.magic
                               (x1398 ~previousValue:(Obj.magic x1399)
                                  ~currentValue:(Obj.magic x1400)
                                  ~currentIndex:(Ojs.float_of_js x1401)
                                  ~array:(Ojs.list_of_js Obj.magic x1402))))|])
    let (reduce' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1414 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1407 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1413 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1414) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1408 : Ojs.t) ->
                         fun (x1409 : Ojs.t) ->
                           fun (x1410 : Ojs.t) ->
                             fun (x1411 : Ojs.t) ->
                               Obj.magic
                                 (x1407 ~previousValue:(Obj.magic x1408)
                                    ~currentValue:(Obj.magic x1409)
                                    ~currentIndex:(Ojs.float_of_js x1410)
                                    ~array:(Ojs.list_of_js Obj.magic x1411))));(
                   Obj.magic x1413)|])
    let (reduce'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1424 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1417 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1423 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1424) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1418 : Ojs.t) ->
                         fun (x1419 : Ojs.t) ->
                           fun (x1420 : Ojs.t) ->
                             fun (x1421 : Ojs.t) ->
                               Obj.magic
                                 (x1417 ~previousValue:(Obj.magic x1418)
                                    ~currentValue:(Obj.magic x1419)
                                    ~currentIndex:(Ojs.float_of_js x1420)
                                    ~array:(Ojs.list_of_js Obj.magic x1421))));(
                   Obj.magic x1423)|])
    let (reduceRight :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1433 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1427 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1433) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x1428 : Ojs.t) ->
                       fun (x1429 : Ojs.t) ->
                         fun (x1430 : Ojs.t) ->
                           fun (x1431 : Ojs.t) ->
                             Obj.magic
                               (x1427 ~previousValue:(Obj.magic x1428)
                                  ~currentValue:(Obj.magic x1429)
                                  ~currentIndex:(Ojs.float_of_js x1430)
                                  ~array:(Ojs.list_of_js Obj.magic x1431))))|])
    let (reduceRight' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1443 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1436 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1442 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1443) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1437 : Ojs.t) ->
                         fun (x1438 : Ojs.t) ->
                           fun (x1439 : Ojs.t) ->
                             fun (x1440 : Ojs.t) ->
                               Obj.magic
                                 (x1436 ~previousValue:(Obj.magic x1437)
                                    ~currentValue:(Obj.magic x1438)
                                    ~currentIndex:(Ojs.float_of_js x1439)
                                    ~array:(Ojs.list_of_js Obj.magic x1440))));(
                   Obj.magic x1442)|])
    let (reduceRight'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1453 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1446 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1452 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1453) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1447 : Ojs.t) ->
                         fun (x1448 : Ojs.t) ->
                           fun (x1449 : Ojs.t) ->
                             fun (x1450 : Ojs.t) ->
                               Obj.magic
                                 (x1446 ~previousValue:(Obj.magic x1447)
                                    ~currentValue:(Obj.magic x1448)
                                    ~currentIndex:(Ojs.float_of_js x1449)
                                    ~array:(Ojs.list_of_js Obj.magic x1450))));(
                   Obj.magic x1452)|])
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x1456 : ('tags, 'T) this) ->
        fun (x1459 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x1456)
               (Ojs.float_to_js x1459))
    let (set : ('tags, 'T) this -> float -> 'T -> unit) =
      fun (x1460 : ('tags, 'T) this) ->
        fun (x1463 : float) ->
          fun (x1464 : 'T) ->
            Ojs.set_prop (this_to_js Obj.magic Obj.magic x1460)
              (Ojs.float_to_js x1463) (Obj.magic x1464)
    let (from : ('T ArrayLike.t, 'T Iterable.t) union2 -> 'T list) =
      fun (x1465 : ('T ArrayLike.t, 'T Iterable.t) union2) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|(union2_to_js
                  (fun (x1466 : 'T ArrayLike.t) ->
                     ArrayLike.t_to_js Obj.magic x1466)
                  (fun (x1468 : 'T Iterable.t) ->
                     Iterable.t_to_js Obj.magic x1468) x1465)|])
    let (from' :
      iterable:('T ArrayLike.t, 'T Iterable.t) union2 ->
        mapfn:(v:'T -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun ~iterable:(x1471 : ('T ArrayLike.t, 'T Iterable.t) union2) ->
        fun ~mapfn:(x1472 : v:'T -> k:float -> 'U) ->
          fun ?thisArg:(x1473 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1482 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x1482 "from") "apply"
                   [|x1482;((let x1474 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1474 "push"
                                  [|(union2_to_js
                                       (fun (x1478 : 'T ArrayLike.t) ->
                                          ArrayLike.t_to_js Obj.magic x1478)
                                       (fun (x1480 : 'T Iterable.t) ->
                                          Iterable.t_to_js Obj.magic x1480)
                                       x1471)|]);
                             ignore
                               (Ojs.call x1474 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x1476 : Ojs.t) ->
                                          fun (x1477 : Ojs.t) ->
                                            Obj.magic
                                              (x1472 ~v:(Obj.magic x1476)
                                                 ~k:(Ojs.float_of_js x1477))))|]);
                             (match x1473 with
                              | Some x1475 ->
                                  ignore
                                    (Ojs.call x1474 "push"
                                       [|(any_to_js x1475)|])
                              | None -> ());
                             x1474))|])
    let (from'' : 'T ArrayLike.t -> 'T list) =
      fun (x1484 : 'T ArrayLike.t) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|(ArrayLike.t_to_js Obj.magic x1484)|])
    let (from''' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun ~arrayLike:(x1487 : 'T ArrayLike.t) ->
        fun ~mapfn:(x1488 : v:'T -> k:float -> 'U) ->
          fun ?thisArg:(x1489 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1495 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x1495 "from") "apply"
                   [|x1495;((let x1490 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1490 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x1487)|]);
                             ignore
                               (Ojs.call x1490 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x1492 : Ojs.t) ->
                                          fun (x1493 : Ojs.t) ->
                                            Obj.magic
                                              (x1488 ~v:(Obj.magic x1492)
                                                 ~k:(Ojs.float_of_js x1493))))|]);
                             (match x1489 with
                              | Some x1491 ->
                                  ignore
                                    (Ojs.call x1490 "push"
                                       [|(any_to_js x1491)|])
                              | None -> ());
                             x1490))|])
    let (of_ : 'T list -> 'T list) =
      fun (x1497 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (let x1500 = Ojs.get_prop_ascii Ojs.global "Array" in
           Ojs.call (Ojs.get_prop_ascii x1500 "of") "apply"
             [|x1500;((let x1498 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x1499 : 'T) ->
                            ignore
                              (Ojs.call x1498 "push" [|(Obj.magic x1499)|]))
                         x1497;
                       x1498))|])
    let (create : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x1502 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
               (let x1503 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1502 with
                 | Some x1504 ->
                     ignore
                       (Ojs.call x1503 "push" [|(Ojs.float_to_js x1504)|])
                 | None -> ());
                x1503))
    let (create' : float -> 'T list) =
      fun (x1506 : float) ->
        Ojs.list_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x1506)|])
    let (create'' : 'T list -> 'T list) =
      fun (x1508 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
             (let x1509 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x1510 : 'T) ->
                   ignore (Ojs.call x1509 "push" [|(Obj.magic x1510)|]))
                x1508;
              x1509))
    let (invoke : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x1512 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
               [|Ojs.null;((let x1513 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x1512 with
                             | Some x1514 ->
                                 ignore
                                   (Ojs.call x1513 "push"
                                      [|(Ojs.float_to_js x1514)|])
                             | None -> ());
                            x1513))|])
    let (invoke' : float -> 'T list) =
      fun (x1516 : float) ->
        Ojs.list_of_js Obj.magic
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x1516)|])
    let (invoke'' : 'T list -> 'T list) =
      fun (x1518 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
             [|Ojs.null;((let x1519 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x1520 : 'T) ->
                               ignore
                                 (Ojs.call x1519 "push" [|(Obj.magic x1520)|]))
                            x1518;
                          x1519))|])
    let (isArray : any -> bool) =
      fun (x1522 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "isArray"
             [|(any_to_js x1522)|])
    let (prototype : unit -> any list) =
      fun () ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Array")
             "prototype")
    let cast_from = Obj.magic
    let (to_ml : 'T t -> 'T list) =
      fun (x1524 : 'T t) ->
        Ojs.list_of_js Obj.magic (t_to_js Obj.magic x1524)
    let (of_ml : 'T list -> 'T t) =
      fun (x1527 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x1527)
  end
module RegExpMatchArray =
  struct
    module AnonymousInterface16 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x1531 : Ojs.t) -> x1531
        and t_to_js : t -> Ojs.t = fun (x1530 : Ojs.t) -> x1530
        let (get : t -> string -> string) =
          fun (x1532 : t) ->
            fun (x1533 : string) ->
              Ojs.string_of_js
                (Ojs.get_prop (t_to_js x1532) (Ojs.string_to_js x1533))
        let (set : t -> string -> string -> unit) =
          fun (x1534 : t) ->
            fun (x1535 : string) ->
              fun (x1536 : string) ->
                Ojs.set_prop (t_to_js x1534) (Ojs.string_to_js x1535)
                  (Ojs.string_to_js x1536)
      end
    type t =
      [ `Array of string  | `Array of string  | `RegExpMatchArray 
      | string ArrayLike.tags_1 | string IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1538 : Ojs.t) -> t_of_js x1538
    and t_0_to_js : t_0 -> Ojs.t = fun (x1537 : t) -> t_to_js x1537
    type tags =
      [ `Array of string  | `Array of string  | `RegExpMatchArray 
      | string ArrayLike.tags_1 | string IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RegExpMatchArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1541 : Ojs.t) -> intf_of_js __tags_of_js x1541
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1539 : __tags intf) -> intf_to_js __tags_to_js x1539
    let (get_groups : 'tags this -> AnonymousInterface16.t) =
      fun (x1543 : 'tags this) ->
        AnonymousInterface16.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1543) "groups")
    let (set_groups : 'tags this -> AnonymousInterface16.t -> unit) =
      fun (x1545 : 'tags this) ->
        fun (x1546 : AnonymousInterface16.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1545) "groups"
            (AnonymousInterface16.t_to_js x1546)
    let (get_index : 'tags this -> float) =
      fun (x1548 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1548) "index")
    let (set_index : 'tags this -> float -> unit) =
      fun (x1550 : 'tags this) ->
        fun (x1551 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1550) "index"
            (Ojs.float_to_js x1551)
    let (get_input : 'tags this -> string) =
      fun (x1553 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1553) "input")
    let (set_input : 'tags this -> string -> unit) =
      fun (x1555 : 'tags this) ->
        fun (x1556 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1555) "input"
            (Ojs.string_to_js x1556)
    let cast_from = Obj.magic
  end
module RegExpExecArray =
  struct
    module AnonymousInterface16 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x1559 : Ojs.t) -> x1559
        and t_to_js : t -> Ojs.t = fun (x1558 : Ojs.t) -> x1558
        let (get : t -> string -> string) =
          fun (x1560 : t) ->
            fun (x1561 : string) ->
              Ojs.string_of_js
                (Ojs.get_prop (t_to_js x1560) (Ojs.string_to_js x1561))
        let (set : t -> string -> string -> unit) =
          fun (x1562 : t) ->
            fun (x1563 : string) ->
              fun (x1564 : string) ->
                Ojs.set_prop (t_to_js x1562) (Ojs.string_to_js x1563)
                  (Ojs.string_to_js x1564)
      end
    type t =
      [ `Array of string  | `Array of string  | `RegExpExecArray 
      | string ArrayLike.tags_1 | string IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1566 : Ojs.t) -> t_of_js x1566
    and t_0_to_js : t_0 -> Ojs.t = fun (x1565 : t) -> t_to_js x1565
    type tags =
      [ `Array of string  | `Array of string  | `RegExpExecArray 
      | string ArrayLike.tags_1 | string IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RegExpExecArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1569 : Ojs.t) -> intf_of_js __tags_of_js x1569
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1567 : __tags intf) -> intf_to_js __tags_to_js x1567
    let (get_groups : 'tags this -> AnonymousInterface16.t) =
      fun (x1571 : 'tags this) ->
        AnonymousInterface16.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1571) "groups")
    let (set_groups : 'tags this -> AnonymousInterface16.t -> unit) =
      fun (x1573 : 'tags this) ->
        fun (x1574 : AnonymousInterface16.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1573) "groups"
            (AnonymousInterface16.t_to_js x1574)
    let (get_index : 'tags this -> float) =
      fun (x1576 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1576) "index")
    let (set_index : 'tags this -> float -> unit) =
      fun (x1578 : 'tags this) ->
        fun (x1579 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1578) "index"
            (Ojs.float_to_js x1579)
    let (get_input : 'tags this -> string) =
      fun (x1581 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1581) "input")
    let (set_input : 'tags this -> string -> unit) =
      fun (x1583 : 'tags this) ->
        fun (x1584 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1583) "input"
            (Ojs.string_to_js x1584)
    let cast_from = Obj.magic
  end
module RegExp =
  struct
    type t = [ `RegExp ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1587 : Ojs.t) -> t_of_js x1587
    and t_0_to_js : t_0 -> Ojs.t = fun (x1586 : t) -> t_to_js x1586
    type tags = [ `RegExp ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RegExp ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1590 : Ojs.t) -> intf_of_js __tags_of_js x1590
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1588 : __tags intf) -> intf_to_js __tags_to_js x1588
    let (get_dotAll : 'tags this -> bool) =
      fun (x1592 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1592) "dotAll")
    let (get_flags : 'tags this -> string) =
      fun (x1594 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1594) "flags")
    let (get_sticky : 'tags this -> bool) =
      fun (x1596 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1596) "sticky")
    let (get_unicode : 'tags this -> bool) =
      fun (x1598 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1598) "unicode")
    let (exec : 'tags this -> string:string -> RegExpExecArray.t or_null) =
      fun (x1601 : 'tags this) ->
        fun ~string:(x1600 : string) ->
          or_null_of_js RegExpExecArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x1601) "exec"
               [|(Ojs.string_to_js x1600)|])
    let (test : 'tags this -> string:string -> bool) =
      fun (x1605 : 'tags this) ->
        fun ~string:(x1604 : string) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x1605) "test"
               [|(Ojs.string_to_js x1604)|])
    let (get_source : 'tags this -> string) =
      fun (x1607 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1607) "source")
    let (get_global : 'tags this -> bool) =
      fun (x1609 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1609) "global")
    let (get_ignoreCase : 'tags this -> bool) =
      fun (x1611 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1611) "ignoreCase")
    let (get_multiline : 'tags this -> bool) =
      fun (x1613 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1613) "multiline")
    let (get_lastIndex : 'tags this -> float) =
      fun (x1615 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1615) "lastIndex")
    let (set_lastIndex : 'tags this -> float -> unit) =
      fun (x1617 : 'tags this) ->
        fun (x1618 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1617) "lastIndex"
            (Ojs.float_to_js x1618)
    let (compile :
      'tags this -> pattern:string -> ?flags:string -> unit -> 'tags this) =
      fun (x1624 : 'tags this) ->
        fun ~pattern:(x1620 : string) ->
          fun ?flags:(x1621 : string option) ->
            fun () ->
              this_of_js Obj.magic
                (let x1626 = this_to_js Obj.magic x1624 in
                 Ojs.call (Ojs.get_prop_ascii x1626 "compile") "apply"
                   [|x1626;((let x1622 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1622 "push"
                                  [|(Ojs.string_to_js x1620)|]);
                             (match x1621 with
                              | Some x1623 ->
                                  ignore
                                    (Ojs.call x1622 "push"
                                       [|(Ojs.string_to_js x1623)|])
                              | None -> ());
                             x1622))|])
    let (create : pattern:t or_string -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1628 : t or_string) ->
        fun ?flags:(x1629 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RegExp")
                 (let x1630 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x1630 "push"
                       [|(or_string_to_js t_to_js x1628)|]);
                  (match x1629 with
                   | Some x1631 ->
                       ignore
                         (Ojs.call x1630 "push" [|(Ojs.string_to_js x1631)|])
                   | None -> ());
                  x1630))
    let (invoke : pattern:t or_string -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1633 : t or_string) ->
        fun ?flags:(x1634 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "apply"
                 [|Ojs.null;((let x1635 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x1635 "push"
                                   [|(or_string_to_js t_to_js x1633)|]);
                              (match x1634 with
                               | Some x1636 ->
                                   ignore
                                     (Ojs.call x1635 "push"
                                        [|(Ojs.string_to_js x1636)|])
                               | None -> ());
                              x1635))|])
    let (create' : t or_string -> t) =
      fun (x1638 : t or_string) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "RegExp")
             [|(or_string_to_js t_to_js x1638)|])
    let (create'' : pattern:string -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1640 : string) ->
        fun ?flags:(x1641 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RegExp")
                 (let x1642 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x1642 "push" [|(Ojs.string_to_js x1640)|]);
                  (match x1641 with
                   | Some x1643 ->
                       ignore
                         (Ojs.call x1642 "push" [|(Ojs.string_to_js x1643)|])
                   | None -> ());
                  x1642))
    let (invoke' : t or_string -> t) =
      fun (x1644 : t or_string) ->
        t_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "RegExp")
             [|(or_string_to_js t_to_js x1644)|])
    let (invoke'' : pattern:string -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1646 : string) ->
        fun ?flags:(x1647 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "apply"
                 [|Ojs.null;((let x1648 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x1648 "push"
                                   [|(Ojs.string_to_js x1646)|]);
                              (match x1647 with
                               | Some x1649 ->
                                   ignore
                                     (Ojs.call x1648 "push"
                                        [|(Ojs.string_to_js x1649)|])
                               | None -> ());
                              x1648))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "prototype")
    let (_1 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$1")
    let (_2 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$2")
    let (_3 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$3")
    let (_4 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$4")
    let (_5 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$5")
    let (_6 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$6")
    let (_7 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$7")
    let (_8 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$8")
    let (_9 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$9")
    let (input : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "input")
    let (__ : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$_")
    let (lastMatch : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "lastMatch")
    let (__' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$&")
    let (lastParen : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "lastParen")
    let (__'' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$+")
    let (leftContext : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "leftContext")
    let (__''' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$`")
    let (rightContext : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "rightContext")
    let (__'''' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$'")
    let cast_from = Obj.magic
  end
module Partial =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1651 : Ojs.t) -> any_of_js x1651
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x1650 : any) -> any_to_js x1650
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1654 : Ojs.t) -> t_of_js __T_of_js x1654
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1652 : __T t) -> t_to_js __T_to_js x1652
  end
module rec
  Date:sig
         type t = [ `Date ] intf
         type t_0 = t
         [@@@js.stop ]
         type tags = [ `Date ]
         type tags_0 = tags
         [@@@js.start ]
         [@@@js.implem type tags = [ `Date ]
           type tags_0 = tags]
         type 'tags this = 'tags intf constraint 'tags = [> `Date ]
         val t_to_js : t -> Ojs.t
         val t_of_js : Ojs.t -> t
         val t_0_to_js : t_0 -> Ojs.t
         val t_0_of_js : Ojs.t -> t_0
         val toLocaleString :
           'tags this ->
             ?locales:string list or_string ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toLocaleDateString :
           'tags this ->
             ?locales:string list or_string ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toLocaleTimeString :
           'tags this ->
             ?locales:string list or_string ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toString : 'tags this -> string
         val toDateString : 'tags this -> string
         val toTimeString : 'tags this -> string
         val toLocaleString' : 'tags this -> string
         val toLocaleDateString' : 'tags this -> string
         val toLocaleTimeString' : 'tags this -> string
         val valueOf : 'tags this -> float
         val getTime : 'tags this -> float
         val getFullYear : 'tags this -> float
         val getUTCFullYear : 'tags this -> float
         val getMonth : 'tags this -> float
         val getUTCMonth : 'tags this -> float
         val getDate : 'tags this -> float
         val getUTCDate : 'tags this -> float
         val getDay : 'tags this -> float
         val getUTCDay : 'tags this -> float
         val getHours : 'tags this -> float
         val getUTCHours : 'tags this -> float
         val getMinutes : 'tags this -> float
         val getUTCMinutes : 'tags this -> float
         val getSeconds : 'tags this -> float
         val getUTCSeconds : 'tags this -> float
         val getMilliseconds : 'tags this -> float
         val getUTCMilliseconds : 'tags this -> float
         val getTimezoneOffset : 'tags this -> float
         val setTime : 'tags this -> time:float -> float
         val setMilliseconds : 'tags this -> ms:float -> float
         val setUTCMilliseconds : 'tags this -> ms:float -> float
         val setSeconds :
           'tags this -> sec:float -> ?ms:float -> unit -> float
         val setUTCSeconds :
           'tags this -> sec:float -> ?ms:float -> unit -> float
         val setMinutes :
           'tags this ->
             min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setUTCMinutes :
           'tags this ->
             min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setHours :
           'tags this ->
             hours:float ->
               ?min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setUTCHours :
           'tags this ->
             hours:float ->
               ?min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setDate : 'tags this -> date:float -> float
         val setUTCDate : 'tags this -> date:float -> float
         val setMonth :
           'tags this -> month:float -> ?date:float -> unit -> float
         val setUTCMonth :
           'tags this -> month:float -> ?date:float -> unit -> float
         val setFullYear :
           'tags this ->
             year:float -> ?month:float -> ?date:float -> unit -> float
         val setUTCFullYear :
           'tags this ->
             year:float -> ?month:float -> ?date:float -> unit -> float
         val toUTCString : 'tags this -> string
         val toISOString : 'tags this -> string
         val toJSON : 'tags this -> ?key:any -> unit -> string
         val create : t or_string or_number -> t
         val create' : unit -> t
         val create'' : string or_number -> t
         val create''' :
           year:float ->
             month:float ->
               ?date:float ->
                 ?hours:float ->
                   ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> t
         val invoke : unit -> string
         val prototype : unit -> t
         val parse : string -> float
         val utc :
           year:float ->
             month:float ->
               ?date:float ->
                 ?hours:float ->
                   ?minutes:float ->
                     ?seconds:float -> ?ms:float -> unit -> float
         val now : unit -> float
         val cast_from : 'tags this -> t
       end =
  struct
    type t = [ `Date ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1657 : Ojs.t) -> t_of_js x1657
    and t_0_to_js : t_0 -> Ojs.t = fun (x1656 : t) -> t_to_js x1656
    type tags = [ `Date ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Date ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1660 : Ojs.t) -> intf_of_js __tags_of_js x1660
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1658 : __tags intf) -> intf_to_js __tags_to_js x1658
    let (toLocaleString :
      'tags this ->
        ?locales:string list or_string ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1669 : 'tags this) ->
        fun ?locales:(x1662 : string list or_string option) ->
          fun ?options:(x1663 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1671 = this_to_js Obj.magic x1669 in
                 Ojs.call (Ojs.get_prop_ascii x1671 "toLocaleString") "apply"
                   [|x1671;((let x1664 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1662 with
                              | Some x1666 ->
                                  ignore
                                    (Ojs.call x1664 "push"
                                       [|(or_string_to_js
                                            (fun (x1667 : string list) ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x1667)
                                            x1666)|])
                              | None -> ());
                             (match x1663 with
                              | Some x1665 ->
                                  ignore
                                    (Ojs.call x1664 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1665)|])
                              | None -> ());
                             x1664))|])
    let (toLocaleDateString :
      'tags this ->
        ?locales:string list or_string ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1679 : 'tags this) ->
        fun ?locales:(x1672 : string list or_string option) ->
          fun ?options:(x1673 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1681 = this_to_js Obj.magic x1679 in
                 Ojs.call (Ojs.get_prop_ascii x1681 "toLocaleDateString")
                   "apply"
                   [|x1681;((let x1674 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1672 with
                              | Some x1676 ->
                                  ignore
                                    (Ojs.call x1674 "push"
                                       [|(or_string_to_js
                                            (fun (x1677 : string list) ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x1677)
                                            x1676)|])
                              | None -> ());
                             (match x1673 with
                              | Some x1675 ->
                                  ignore
                                    (Ojs.call x1674 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1675)|])
                              | None -> ());
                             x1674))|])
    let (toLocaleTimeString :
      'tags this ->
        ?locales:string list or_string ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1689 : 'tags this) ->
        fun ?locales:(x1682 : string list or_string option) ->
          fun ?options:(x1683 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1691 = this_to_js Obj.magic x1689 in
                 Ojs.call (Ojs.get_prop_ascii x1691 "toLocaleTimeString")
                   "apply"
                   [|x1691;((let x1684 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1682 with
                              | Some x1686 ->
                                  ignore
                                    (Ojs.call x1684 "push"
                                       [|(or_string_to_js
                                            (fun (x1687 : string list) ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x1687)
                                            x1686)|])
                              | None -> ());
                             (match x1683 with
                              | Some x1685 ->
                                  ignore
                                    (Ojs.call x1684 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1685)|])
                              | None -> ());
                             x1684))|])
    let (toString : 'tags this -> string) =
      fun (x1692 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1692) "toString" [||])
    let (toDateString : 'tags this -> string) =
      fun (x1694 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1694) "toDateString" [||])
    let (toTimeString : 'tags this -> string) =
      fun (x1696 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1696) "toTimeString" [||])
    let (toLocaleString' : 'tags this -> string) =
      fun (x1698 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1698) "toLocaleString" [||])
    let (toLocaleDateString' : 'tags this -> string) =
      fun (x1700 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1700) "toLocaleDateString" [||])
    let (toLocaleTimeString' : 'tags this -> string) =
      fun (x1702 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1702) "toLocaleTimeString" [||])
    let (valueOf : 'tags this -> float) =
      fun (x1704 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1704) "valueOf" [||])
    let (getTime : 'tags this -> float) =
      fun (x1706 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1706) "getTime" [||])
    let (getFullYear : 'tags this -> float) =
      fun (x1708 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1708) "getFullYear" [||])
    let (getUTCFullYear : 'tags this -> float) =
      fun (x1710 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1710) "getUTCFullYear" [||])
    let (getMonth : 'tags this -> float) =
      fun (x1712 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1712) "getMonth" [||])
    let (getUTCMonth : 'tags this -> float) =
      fun (x1714 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1714) "getUTCMonth" [||])
    let (getDate : 'tags this -> float) =
      fun (x1716 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1716) "getDate" [||])
    let (getUTCDate : 'tags this -> float) =
      fun (x1718 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1718) "getUTCDate" [||])
    let (getDay : 'tags this -> float) =
      fun (x1720 : 'tags this) ->
        Ojs.float_of_js (Ojs.call (this_to_js Obj.magic x1720) "getDay" [||])
    let (getUTCDay : 'tags this -> float) =
      fun (x1722 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1722) "getUTCDay" [||])
    let (getHours : 'tags this -> float) =
      fun (x1724 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1724) "getHours" [||])
    let (getUTCHours : 'tags this -> float) =
      fun (x1726 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1726) "getUTCHours" [||])
    let (getMinutes : 'tags this -> float) =
      fun (x1728 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1728) "getMinutes" [||])
    let (getUTCMinutes : 'tags this -> float) =
      fun (x1730 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1730) "getUTCMinutes" [||])
    let (getSeconds : 'tags this -> float) =
      fun (x1732 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1732) "getSeconds" [||])
    let (getUTCSeconds : 'tags this -> float) =
      fun (x1734 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1734) "getUTCSeconds" [||])
    let (getMilliseconds : 'tags this -> float) =
      fun (x1736 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1736) "getMilliseconds" [||])
    let (getUTCMilliseconds : 'tags this -> float) =
      fun (x1738 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1738) "getUTCMilliseconds" [||])
    let (getTimezoneOffset : 'tags this -> float) =
      fun (x1740 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1740) "getTimezoneOffset" [||])
    let (setTime : 'tags this -> time:float -> float) =
      fun (x1743 : 'tags this) ->
        fun ~time:(x1742 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1743) "setTime"
               [|(Ojs.float_to_js x1742)|])
    let (setMilliseconds : 'tags this -> ms:float -> float) =
      fun (x1746 : 'tags this) ->
        fun ~ms:(x1745 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1746) "setMilliseconds"
               [|(Ojs.float_to_js x1745)|])
    let (setUTCMilliseconds : 'tags this -> ms:float -> float) =
      fun (x1749 : 'tags this) ->
        fun ~ms:(x1748 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1749) "setUTCMilliseconds"
               [|(Ojs.float_to_js x1748)|])
    let (setSeconds : 'tags this -> sec:float -> ?ms:float -> unit -> float)
      =
      fun (x1755 : 'tags this) ->
        fun ~sec:(x1751 : float) ->
          fun ?ms:(x1752 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1757 = this_to_js Obj.magic x1755 in
                 Ojs.call (Ojs.get_prop_ascii x1757 "setSeconds") "apply"
                   [|x1757;((let x1753 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1753 "push"
                                  [|(Ojs.float_to_js x1751)|]);
                             (match x1752 with
                              | Some x1754 ->
                                  ignore
                                    (Ojs.call x1753 "push"
                                       [|(Ojs.float_to_js x1754)|])
                              | None -> ());
                             x1753))|])
    let (setUTCSeconds :
      'tags this -> sec:float -> ?ms:float -> unit -> float) =
      fun (x1762 : 'tags this) ->
        fun ~sec:(x1758 : float) ->
          fun ?ms:(x1759 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1764 = this_to_js Obj.magic x1762 in
                 Ojs.call (Ojs.get_prop_ascii x1764 "setUTCSeconds") "apply"
                   [|x1764;((let x1760 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1760 "push"
                                  [|(Ojs.float_to_js x1758)|]);
                             (match x1759 with
                              | Some x1761 ->
                                  ignore
                                    (Ojs.call x1760 "push"
                                       [|(Ojs.float_to_js x1761)|])
                              | None -> ());
                             x1760))|])
    let (setMinutes :
      'tags this -> min:float -> ?sec:float -> ?ms:float -> unit -> float) =
      fun (x1771 : 'tags this) ->
        fun ~min:(x1765 : float) ->
          fun ?sec:(x1766 : float option) ->
            fun ?ms:(x1767 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1773 = this_to_js Obj.magic x1771 in
                   Ojs.call (Ojs.get_prop_ascii x1773 "setMinutes") "apply"
                     [|x1773;((let x1768 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1768 "push"
                                    [|(Ojs.float_to_js x1765)|]);
                               (match x1766 with
                                | Some x1770 ->
                                    ignore
                                      (Ojs.call x1768 "push"
                                         [|(Ojs.float_to_js x1770)|])
                                | None -> ());
                               (match x1767 with
                                | Some x1769 ->
                                    ignore
                                      (Ojs.call x1768 "push"
                                         [|(Ojs.float_to_js x1769)|])
                                | None -> ());
                               x1768))|])
    let (setUTCMinutes :
      'tags this -> min:float -> ?sec:float -> ?ms:float -> unit -> float) =
      fun (x1780 : 'tags this) ->
        fun ~min:(x1774 : float) ->
          fun ?sec:(x1775 : float option) ->
            fun ?ms:(x1776 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1782 = this_to_js Obj.magic x1780 in
                   Ojs.call (Ojs.get_prop_ascii x1782 "setUTCMinutes")
                     "apply"
                     [|x1782;((let x1777 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1777 "push"
                                    [|(Ojs.float_to_js x1774)|]);
                               (match x1775 with
                                | Some x1779 ->
                                    ignore
                                      (Ojs.call x1777 "push"
                                         [|(Ojs.float_to_js x1779)|])
                                | None -> ());
                               (match x1776 with
                                | Some x1778 ->
                                    ignore
                                      (Ojs.call x1777 "push"
                                         [|(Ojs.float_to_js x1778)|])
                                | None -> ());
                               x1777))|])
    let (setHours :
      'tags this ->
        hours:float -> ?min:float -> ?sec:float -> ?ms:float -> unit -> float)
      =
      fun (x1791 : 'tags this) ->
        fun ~hours:(x1783 : float) ->
          fun ?min:(x1784 : float option) ->
            fun ?sec:(x1785 : float option) ->
              fun ?ms:(x1786 : float option) ->
                fun () ->
                  Ojs.float_of_js
                    (let x1793 = this_to_js Obj.magic x1791 in
                     Ojs.call (Ojs.get_prop_ascii x1793 "setHours") "apply"
                       [|x1793;((let x1787 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1787 "push"
                                      [|(Ojs.float_to_js x1783)|]);
                                 (match x1784 with
                                  | Some x1790 ->
                                      ignore
                                        (Ojs.call x1787 "push"
                                           [|(Ojs.float_to_js x1790)|])
                                  | None -> ());
                                 (match x1785 with
                                  | Some x1789 ->
                                      ignore
                                        (Ojs.call x1787 "push"
                                           [|(Ojs.float_to_js x1789)|])
                                  | None -> ());
                                 (match x1786 with
                                  | Some x1788 ->
                                      ignore
                                        (Ojs.call x1787 "push"
                                           [|(Ojs.float_to_js x1788)|])
                                  | None -> ());
                                 x1787))|])
    let (setUTCHours :
      'tags this ->
        hours:float -> ?min:float -> ?sec:float -> ?ms:float -> unit -> float)
      =
      fun (x1802 : 'tags this) ->
        fun ~hours:(x1794 : float) ->
          fun ?min:(x1795 : float option) ->
            fun ?sec:(x1796 : float option) ->
              fun ?ms:(x1797 : float option) ->
                fun () ->
                  Ojs.float_of_js
                    (let x1804 = this_to_js Obj.magic x1802 in
                     Ojs.call (Ojs.get_prop_ascii x1804 "setUTCHours")
                       "apply"
                       [|x1804;((let x1798 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1798 "push"
                                      [|(Ojs.float_to_js x1794)|]);
                                 (match x1795 with
                                  | Some x1801 ->
                                      ignore
                                        (Ojs.call x1798 "push"
                                           [|(Ojs.float_to_js x1801)|])
                                  | None -> ());
                                 (match x1796 with
                                  | Some x1800 ->
                                      ignore
                                        (Ojs.call x1798 "push"
                                           [|(Ojs.float_to_js x1800)|])
                                  | None -> ());
                                 (match x1797 with
                                  | Some x1799 ->
                                      ignore
                                        (Ojs.call x1798 "push"
                                           [|(Ojs.float_to_js x1799)|])
                                  | None -> ());
                                 x1798))|])
    let (setDate : 'tags this -> date:float -> float) =
      fun (x1806 : 'tags this) ->
        fun ~date:(x1805 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1806) "setDate"
               [|(Ojs.float_to_js x1805)|])
    let (setUTCDate : 'tags this -> date:float -> float) =
      fun (x1809 : 'tags this) ->
        fun ~date:(x1808 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1809) "setUTCDate"
               [|(Ojs.float_to_js x1808)|])
    let (setMonth :
      'tags this -> month:float -> ?date:float -> unit -> float) =
      fun (x1815 : 'tags this) ->
        fun ~month:(x1811 : float) ->
          fun ?date:(x1812 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1817 = this_to_js Obj.magic x1815 in
                 Ojs.call (Ojs.get_prop_ascii x1817 "setMonth") "apply"
                   [|x1817;((let x1813 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1813 "push"
                                  [|(Ojs.float_to_js x1811)|]);
                             (match x1812 with
                              | Some x1814 ->
                                  ignore
                                    (Ojs.call x1813 "push"
                                       [|(Ojs.float_to_js x1814)|])
                              | None -> ());
                             x1813))|])
    let (setUTCMonth :
      'tags this -> month:float -> ?date:float -> unit -> float) =
      fun (x1822 : 'tags this) ->
        fun ~month:(x1818 : float) ->
          fun ?date:(x1819 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1824 = this_to_js Obj.magic x1822 in
                 Ojs.call (Ojs.get_prop_ascii x1824 "setUTCMonth") "apply"
                   [|x1824;((let x1820 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1820 "push"
                                  [|(Ojs.float_to_js x1818)|]);
                             (match x1819 with
                              | Some x1821 ->
                                  ignore
                                    (Ojs.call x1820 "push"
                                       [|(Ojs.float_to_js x1821)|])
                              | None -> ());
                             x1820))|])
    let (setFullYear :
      'tags this ->
        year:float -> ?month:float -> ?date:float -> unit -> float)
      =
      fun (x1831 : 'tags this) ->
        fun ~year:(x1825 : float) ->
          fun ?month:(x1826 : float option) ->
            fun ?date:(x1827 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1833 = this_to_js Obj.magic x1831 in
                   Ojs.call (Ojs.get_prop_ascii x1833 "setFullYear") "apply"
                     [|x1833;((let x1828 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1828 "push"
                                    [|(Ojs.float_to_js x1825)|]);
                               (match x1826 with
                                | Some x1830 ->
                                    ignore
                                      (Ojs.call x1828 "push"
                                         [|(Ojs.float_to_js x1830)|])
                                | None -> ());
                               (match x1827 with
                                | Some x1829 ->
                                    ignore
                                      (Ojs.call x1828 "push"
                                         [|(Ojs.float_to_js x1829)|])
                                | None -> ());
                               x1828))|])
    let (setUTCFullYear :
      'tags this ->
        year:float -> ?month:float -> ?date:float -> unit -> float)
      =
      fun (x1840 : 'tags this) ->
        fun ~year:(x1834 : float) ->
          fun ?month:(x1835 : float option) ->
            fun ?date:(x1836 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1842 = this_to_js Obj.magic x1840 in
                   Ojs.call (Ojs.get_prop_ascii x1842 "setUTCFullYear")
                     "apply"
                     [|x1842;((let x1837 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1837 "push"
                                    [|(Ojs.float_to_js x1834)|]);
                               (match x1835 with
                                | Some x1839 ->
                                    ignore
                                      (Ojs.call x1837 "push"
                                         [|(Ojs.float_to_js x1839)|])
                                | None -> ());
                               (match x1836 with
                                | Some x1838 ->
                                    ignore
                                      (Ojs.call x1837 "push"
                                         [|(Ojs.float_to_js x1838)|])
                                | None -> ());
                               x1837))|])
    let (toUTCString : 'tags this -> string) =
      fun (x1843 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1843) "toUTCString" [||])
    let (toISOString : 'tags this -> string) =
      fun (x1845 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1845) "toISOString" [||])
    let (toJSON : 'tags this -> ?key:any -> unit -> string) =
      fun (x1850 : 'tags this) ->
        fun ?key:(x1847 : any option) ->
          fun () ->
            Ojs.string_of_js
              (let x1852 = this_to_js Obj.magic x1850 in
               Ojs.call (Ojs.get_prop_ascii x1852 "toJSON") "apply"
                 [|x1852;((let x1848 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1847 with
                            | Some x1849 ->
                                ignore
                                  (Ojs.call x1848 "push"
                                     [|(any_to_js x1849)|])
                            | None -> ());
                           x1848))|])
    let (create : t or_string or_number -> t) =
      fun (x1853 : t or_string or_number) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date")
             [|(or_number_to_js
                  (fun (x1854 : t or_string) -> or_string_to_js t_to_js x1854)
                  x1853)|])
    let (create' : unit -> t) =
      fun () ->
        t_of_js (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date") [||])
    let (create'' : string or_number -> t) =
      fun (x1856 : string or_number) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date")
             [|(or_number_to_js Ojs.string_to_js x1856)|])
    let (create''' :
      year:float ->
        month:float ->
          ?date:float ->
            ?hours:float ->
              ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> t)
      =
      fun ~year:(x1858 : float) ->
        fun ~month:(x1859 : float) ->
          fun ?date:(x1860 : float option) ->
            fun ?hours:(x1861 : float option) ->
              fun ?minutes:(x1862 : float option) ->
                fun ?seconds:(x1863 : float option) ->
                  fun ?ms:(x1864 : float option) ->
                    fun () ->
                      t_of_js
                        (Ojs.new_obj_arr
                           (Ojs.get_prop_ascii Ojs.global "Date")
                           (let x1865 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x1865 "push"
                                 [|(Ojs.float_to_js x1858)|]);
                            ignore
                              (Ojs.call x1865 "push"
                                 [|(Ojs.float_to_js x1859)|]);
                            (match x1860 with
                             | Some x1870 ->
                                 ignore
                                   (Ojs.call x1865 "push"
                                      [|(Ojs.float_to_js x1870)|])
                             | None -> ());
                            (match x1861 with
                             | Some x1869 ->
                                 ignore
                                   (Ojs.call x1865 "push"
                                      [|(Ojs.float_to_js x1869)|])
                             | None -> ());
                            (match x1862 with
                             | Some x1868 ->
                                 ignore
                                   (Ojs.call x1865 "push"
                                      [|(Ojs.float_to_js x1868)|])
                             | None -> ());
                            (match x1863 with
                             | Some x1867 ->
                                 ignore
                                   (Ojs.call x1865 "push"
                                      [|(Ojs.float_to_js x1867)|])
                             | None -> ());
                            (match x1864 with
                             | Some x1866 ->
                                 ignore
                                   (Ojs.call x1865 "push"
                                      [|(Ojs.float_to_js x1866)|])
                             | None -> ());
                            x1865))
    let (invoke : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Date") [||])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Date")
             "prototype")
    let (parse : string -> float) =
      fun (x1871 : string) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Date") "parse"
             [|(Ojs.string_to_js x1871)|])
    let (utc :
      year:float ->
        month:float ->
          ?date:float ->
            ?hours:float ->
              ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> float)
      =
      fun ~year:(x1872 : float) ->
        fun ~month:(x1873 : float) ->
          fun ?date:(x1874 : float option) ->
            fun ?hours:(x1875 : float option) ->
              fun ?minutes:(x1876 : float option) ->
                fun ?seconds:(x1877 : float option) ->
                  fun ?ms:(x1878 : float option) ->
                    fun () ->
                      Ojs.float_of_js
                        (let x1885 = Ojs.get_prop_ascii Ojs.global "Date" in
                         Ojs.call (Ojs.get_prop_ascii x1885 "UTC") "apply"
                           [|x1885;((let x1879 =
                                       Ojs.new_obj
                                         (Ojs.get_prop_ascii Ojs.global
                                            "Array") [||] in
                                     ignore
                                       (Ojs.call x1879 "push"
                                          [|(Ojs.float_to_js x1872)|]);
                                     ignore
                                       (Ojs.call x1879 "push"
                                          [|(Ojs.float_to_js x1873)|]);
                                     (match x1874 with
                                      | Some x1884 ->
                                          ignore
                                            (Ojs.call x1879 "push"
                                               [|(Ojs.float_to_js x1884)|])
                                      | None -> ());
                                     (match x1875 with
                                      | Some x1883 ->
                                          ignore
                                            (Ojs.call x1879 "push"
                                               [|(Ojs.float_to_js x1883)|])
                                      | None -> ());
                                     (match x1876 with
                                      | Some x1882 ->
                                          ignore
                                            (Ojs.call x1879 "push"
                                               [|(Ojs.float_to_js x1882)|])
                                      | None -> ());
                                     (match x1877 with
                                      | Some x1881 ->
                                          ignore
                                            (Ojs.call x1879 "push"
                                               [|(Ojs.float_to_js x1881)|])
                                      | None -> ());
                                     (match x1878 with
                                      | Some x1880 ->
                                          ignore
                                            (Ojs.call x1879 "push"
                                               [|(Ojs.float_to_js x1880)|])
                                      | None -> ());
                                     x1879))|])
    let (now : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Date") "now" [||])
    let cast_from = Obj.magic
  end
 and
  Intl:sig
         module UnicodeBCP47LocaleIdentifier :
         sig
           type t = string
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module RelativeTimeFormatNumeric :
         sig
           type t = [ `L_s21_always  | `L_s22_auto ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module RelativeTimeFormatStyle :
         sig
           type t = [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module ResolvedRelativeTimeFormatOptions :
         sig
           type t = [ `Intl_ResolvedRelativeTimeFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedRelativeTimeFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedRelativeTimeFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedRelativeTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_locale : 'tags this -> UnicodeBCP47LocaleIdentifier.t
           val set_locale :
             'tags this -> UnicodeBCP47LocaleIdentifier.t -> unit
           val get_style : 'tags this -> RelativeTimeFormatStyle.t
           val set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit
           val get_numeric : 'tags this -> RelativeTimeFormatNumeric.t
           val set_numeric :
             'tags this -> RelativeTimeFormatNumeric.t -> unit
           val get_numberingSystem : 'tags this -> string
           val set_numberingSystem : 'tags this -> string -> unit
           val cast_from : 'tags this -> t
         end
         module RelativeTimeFormatUnit :
         sig
           type t =
             [ `L_s100_weeks  | `L_s101_year  | `L_s102_years  | `L_s29_day 
             | `L_s31_days  | `L_s49_hour  | `L_s50_hours  | `L_s61_minute 
             | `L_s62_minutes  | `L_s63_month  | `L_s64_months 
             | `L_s80_quarter  | `L_s81_quarters  | `L_s86_second 
             | `L_s87_seconds  | `L_s98_week ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module RelativeTimeFormatPart :
         sig
           type t = [ `Intl_RelativeTimeFormatPart ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_RelativeTimeFormatPart ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_RelativeTimeFormatPart ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_RelativeTimeFormatPart ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_type : 'tags this -> string
           val set_type : 'tags this -> string -> unit
           val get_value : 'tags this -> string
           val set_value : 'tags this -> string -> unit
           val get_unit : 'tags this -> RelativeTimeFormatUnit.t
           val set_unit : 'tags this -> RelativeTimeFormatUnit.t -> unit
           val cast_from : 'tags this -> t
         end
         module RelativeTimeFormatLocaleMatcher :
         sig
           type t = [ `L_s24_best_fit  | `L_s56_lookup ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module RelativeTimeFormatOptions :
         sig
           type t = [ `Intl_RelativeTimeFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_RelativeTimeFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_RelativeTimeFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_RelativeTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t
           val set_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit
           val get_numeric : 'tags this -> RelativeTimeFormatNumeric.t
           val set_numeric :
             'tags this -> RelativeTimeFormatNumeric.t -> unit
           val get_style : 'tags this -> RelativeTimeFormatStyle.t
           val set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit
           val cast_from : 'tags this -> t
         end
         module RelativeTimeFormat :
         sig
           type t = [ `Intl_RelativeTimeFormat ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_RelativeTimeFormat ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_RelativeTimeFormat ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_RelativeTimeFormat ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val format :
             'tags this ->
               value:float -> unit:RelativeTimeFormatUnit.t -> string
           val formatToParts :
             'tags this ->
               value:float ->
                 unit:RelativeTimeFormatUnit.t ->
                   RelativeTimeFormatPart.t list
           val resolvedOptions :
             'tags this -> ResolvedRelativeTimeFormatOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:(UnicodeBCP47LocaleIdentifier.t,
               UnicodeBCP47LocaleIdentifier.t) or_array ->
               ?options:RelativeTimeFormatOptions.t -> unit -> t
           val supportedLocalesOf :
             ?locales:(UnicodeBCP47LocaleIdentifier.t,
               UnicodeBCP47LocaleIdentifier.t) or_array ->
               ?options:RelativeTimeFormatOptions.t ->
                 unit -> UnicodeBCP47LocaleIdentifier.t list
         end
         module PluralRuleType :
         sig
           type t = [ `L_s25_cardinal  | `L_s75_ordinal ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module LDMLPluralRule :
         sig
           type t =
             [ `L_s103_zero  | `L_s40_few  | `L_s58_many  | `L_s74_one 
             | `L_s76_other  | `L_s94_two ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module ResolvedPluralRulesOptions :
         sig
           type t = [ `Intl_ResolvedPluralRulesOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedPluralRulesOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedPluralRulesOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedPluralRulesOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_pluralCategories : 'tags this -> LDMLPluralRule.t list
           val set_pluralCategories :
             'tags this -> LDMLPluralRule.t list -> unit
           val get_type : 'tags this -> PluralRuleType.t
           val set_type : 'tags this -> PluralRuleType.t -> unit
           val get_minimumIntegerDigits : 'tags this -> float
           val set_minimumIntegerDigits : 'tags this -> float -> unit
           val get_minimumFractionDigits : 'tags this -> float
           val set_minimumFractionDigits : 'tags this -> float -> unit
           val get_maximumFractionDigits : 'tags this -> float
           val set_maximumFractionDigits : 'tags this -> float -> unit
           val get_minimumSignificantDigits : 'tags this -> float
           val set_minimumSignificantDigits : 'tags this -> float -> unit
           val get_maximumSignificantDigits : 'tags this -> float
           val set_maximumSignificantDigits : 'tags this -> float -> unit
           val cast_from : 'tags this -> t
         end
         module PluralRulesOptions :
         sig
           type t = [ `Intl_PluralRulesOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_PluralRulesOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_PluralRulesOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_PluralRulesOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_localeMatcher :
             'tags this -> [ `L_s24_best_fit  | `L_s56_lookup ] or_undefined
           val set_localeMatcher :
             'tags this ->
               [ `L_s24_best_fit  | `L_s56_lookup ] or_undefined -> unit
           val get_type : 'tags this -> PluralRuleType.t or_undefined
           val set_type : 'tags this -> PluralRuleType.t or_undefined -> unit
           val get_minimumIntegerDigits : 'tags this -> float or_undefined
           val set_minimumIntegerDigits :
             'tags this -> float or_undefined -> unit
           val get_minimumFractionDigits : 'tags this -> float or_undefined
           val set_minimumFractionDigits :
             'tags this -> float or_undefined -> unit
           val get_maximumFractionDigits : 'tags this -> float or_undefined
           val set_maximumFractionDigits :
             'tags this -> float or_undefined -> unit
           val get_minimumSignificantDigits :
             'tags this -> float or_undefined
           val set_minimumSignificantDigits :
             'tags this -> float or_undefined -> unit
           val get_maximumSignificantDigits :
             'tags this -> float or_undefined
           val set_maximumSignificantDigits :
             'tags this -> float or_undefined -> unit
           val cast_from : 'tags this -> t
         end
         module PluralRules :
         sig
           module AnonymousInterface4 :
           sig
             type t = private Ojs.t
             val t_to_js : t -> Ojs.t
             val t_of_js : Ojs.t -> t
             val get_localeMatcher :
               t -> [ `L_s24_best_fit  | `L_s56_lookup ]
             val set_localeMatcher :
               t -> [ `L_s24_best_fit  | `L_s56_lookup ] -> unit
           end
           type t = [ `Intl_PluralRules ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_PluralRules ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_PluralRules ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_PluralRules ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val resolvedOptions : 'tags this -> ResolvedPluralRulesOptions.t
           val select : 'tags this -> n:float -> LDMLPluralRule.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:string list or_string ->
               ?options:PluralRulesOptions.t -> unit -> t
           val invoke :
             ?locales:string list or_string ->
               ?options:PluralRulesOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:string list or_string ->
               ?options:AnonymousInterface4.t -> unit -> string list
         end
         module ResolvedNumberFormatOptions :
         sig
           type t = [ `Intl_ResolvedNumberFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedNumberFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedNumberFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedNumberFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_compactDisplay :
             'tags this -> [ `L_s55_long  | `L_s88_short ]
           val set_compactDisplay :
             'tags this -> [ `L_s55_long  | `L_s88_short ] -> unit
           val get_notation :
             'tags this ->
               [ `L_s27_compact  | `L_s34_engineering  | `L_s84_scientific 
               | `L_s89_standard ]
           val set_notation :
             'tags this ->
               [ `L_s27_compact  | `L_s34_engineering  | `L_s84_scientific 
               | `L_s89_standard ] -> unit
           val get_signDisplay :
             'tags this -> [ `L_s21_always  | `L_s22_auto  | `L_s68_never ]
           val set_signDisplay :
             'tags this ->
               [ `L_s21_always  | `L_s22_auto  | `L_s68_never ] -> unit
           val get_unit : 'tags this -> string
           val set_unit : 'tags this -> string -> unit
           val get_unitDisplay :
             'tags this -> [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ]
           val set_unitDisplay :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] -> unit
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_numberingSystem : 'tags this -> string
           val set_numberingSystem : 'tags this -> string -> unit
           val get_style : 'tags this -> string
           val set_style : 'tags this -> string -> unit
           val get_currency : 'tags this -> string
           val set_currency : 'tags this -> string -> unit
           val get_currencyDisplay : 'tags this -> string
           val set_currencyDisplay : 'tags this -> string -> unit
           val get_minimumIntegerDigits : 'tags this -> float
           val set_minimumIntegerDigits : 'tags this -> float -> unit
           val get_minimumFractionDigits : 'tags this -> float
           val set_minimumFractionDigits : 'tags this -> float -> unit
           val get_maximumFractionDigits : 'tags this -> float
           val set_maximumFractionDigits : 'tags this -> float -> unit
           val get_minimumSignificantDigits : 'tags this -> float
           val set_minimumSignificantDigits : 'tags this -> float -> unit
           val get_maximumSignificantDigits : 'tags this -> float
           val set_maximumSignificantDigits : 'tags this -> float -> unit
           val get_useGrouping : 'tags this -> bool
           val set_useGrouping : 'tags this -> bool -> unit
           val cast_from : 'tags this -> t
         end
         module ES2020NumberFormatPartType :
         sig
           type t =
             [ `L_s27_compact  | `L_s36_exponentInteger 
             | `L_s37_exponentMinusSign  | `L_s38_exponentSeparator 
             | `L_s95_unit  | `L_s96_unknown ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module ES2018NumberFormatPartType :
         sig
           type t =
             [ `L_s26_code  | `L_s28_currency  | `L_s32_decimal 
             | `L_s41_fraction  | `L_s44_group  | `L_s51_infinity 
             | `L_s52_integer  | `L_s54_literal  | `L_s60_minusSign 
             | `L_s65_name  | `L_s66_nan  | `L_s77_percent 
             | `L_s78_percentSign  | `L_s79_plusSign  | `L_s91_symbol ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module NumberFormatPartTypes :
         sig
           type t =
             [ `L_s26_code  | `L_s27_compact  | `L_s28_currency 
             | `L_s32_decimal  | `L_s36_exponentInteger 
             | `L_s37_exponentMinusSign  | `L_s38_exponentSeparator 
             | `L_s41_fraction  | `L_s44_group  | `L_s51_infinity 
             | `L_s52_integer  | `L_s54_literal  | `L_s60_minusSign 
             | `L_s65_name  | `L_s66_nan  | `L_s77_percent 
             | `L_s78_percentSign  | `L_s79_plusSign  | `L_s91_symbol 
             | `L_s95_unit  | `L_s96_unknown ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module NumberFormatPart :
         sig
           type t = [ `Intl_NumberFormatPart ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_NumberFormatPart ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_NumberFormatPart ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_NumberFormatPart ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_type : 'tags this -> NumberFormatPartTypes.t
           val set_type : 'tags this -> NumberFormatPartTypes.t -> unit
           val get_value : 'tags this -> string
           val set_value : 'tags this -> string -> unit
           val cast_from : 'tags this -> t
         end
         module NumberFormatOptions :
         sig
           type t = [ `Intl_NumberFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_NumberFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_NumberFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_NumberFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_compactDisplay :
             'tags this -> [ `L_s55_long  | `L_s88_short ] or_undefined
           val set_compactDisplay :
             'tags this ->
               [ `L_s55_long  | `L_s88_short ] or_undefined -> unit
           val get_notation :
             'tags this ->
               [ `L_s27_compact  | `L_s34_engineering  | `L_s84_scientific 
               | `L_s89_standard ] or_undefined
           val set_notation :
             'tags this ->
               [ `L_s27_compact  | `L_s34_engineering  | `L_s84_scientific 
               | `L_s89_standard ] or_undefined -> unit
           val get_signDisplay :
             'tags this ->
               [ `L_s21_always  | `L_s22_auto  | `L_s68_never ] or_undefined
           val set_signDisplay :
             'tags this ->
               [ `L_s21_always  | `L_s22_auto  | `L_s68_never ] or_undefined
                 -> unit
           val get_unit : 'tags this -> string or_undefined
           val set_unit : 'tags this -> string or_undefined -> unit
           val get_unitDisplay :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined
           val set_unitDisplay :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined
                 -> unit
           val get_localeMatcher : 'tags this -> string or_undefined
           val set_localeMatcher : 'tags this -> string or_undefined -> unit
           val get_style : 'tags this -> string or_undefined
           val set_style : 'tags this -> string or_undefined -> unit
           val get_currency : 'tags this -> string or_undefined
           val set_currency : 'tags this -> string or_undefined -> unit
           val get_currencyDisplay : 'tags this -> string or_undefined
           val set_currencyDisplay :
             'tags this -> string or_undefined -> unit
           val get_currencySign : 'tags this -> string or_undefined
           val set_currencySign : 'tags this -> string or_undefined -> unit
           val get_useGrouping : 'tags this -> bool or_undefined
           val set_useGrouping : 'tags this -> bool or_undefined -> unit
           val get_minimumIntegerDigits : 'tags this -> float or_undefined
           val set_minimumIntegerDigits :
             'tags this -> float or_undefined -> unit
           val get_minimumFractionDigits : 'tags this -> float or_undefined
           val set_minimumFractionDigits :
             'tags this -> float or_undefined -> unit
           val get_maximumFractionDigits : 'tags this -> float or_undefined
           val set_maximumFractionDigits :
             'tags this -> float or_undefined -> unit
           val get_minimumSignificantDigits :
             'tags this -> float or_undefined
           val set_minimumSignificantDigits :
             'tags this -> float or_undefined -> unit
           val get_maximumSignificantDigits :
             'tags this -> float or_undefined
           val set_maximumSignificantDigits :
             'tags this -> float or_undefined -> unit
           val cast_from : 'tags this -> t
         end
         module NumberFormat :
         sig
           type t = [ `Intl_NumberFormat ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_NumberFormat ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_NumberFormat ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_NumberFormat ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val formatRange :
             'tags this ->
               startDate:bigint or_number ->
                 endDate:bigint or_number -> string
           val formatRangeToParts :
             'tags this ->
               startDate:bigint or_number ->
                 endDate:bigint or_number -> NumberFormatPart.t list
           val format : 'tags this -> value:bigint or_number -> string
           val resolvedOptions : 'tags this -> ResolvedNumberFormatOptions.t
           val formatToParts :
             'tags this ->
               ?number:bigint or_number -> unit -> NumberFormatPart.t list
           val format' : 'tags this -> value:float -> string
           val resolvedOptions' : 'tags this -> ResolvedNumberFormatOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:string list or_string ->
               ?options:NumberFormatOptions.t -> unit -> t
           val invoke :
             ?locales:string list or_string ->
               ?options:NumberFormatOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:string list or_string ->
               ?options:NumberFormatOptions.t -> unit -> string list
         end
         module LocaleHourCycleKey :
         sig
           type t = [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module LocaleCollationCaseFirst :
         sig
           type t = [ `L_s39_false  | `L_s57_lower  | `L_s97_upper ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module LocaleOptions :
         sig
           type t = [ `Intl_LocaleOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_LocaleOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_LocaleOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_LocaleOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_baseName : 'tags this -> string
           val set_baseName : 'tags this -> string -> unit
           val get_calendar : 'tags this -> string
           val set_calendar : 'tags this -> string -> unit
           val get_caseFirst : 'tags this -> LocaleCollationCaseFirst.t
           val set_caseFirst :
             'tags this -> LocaleCollationCaseFirst.t -> unit
           val get_collation : 'tags this -> string
           val set_collation : 'tags this -> string -> unit
           val get_hourCycle : 'tags this -> LocaleHourCycleKey.t
           val set_hourCycle : 'tags this -> LocaleHourCycleKey.t -> unit
           val get_language : 'tags this -> string
           val set_language : 'tags this -> string -> unit
           val get_numberingSystem : 'tags this -> string
           val set_numberingSystem : 'tags this -> string -> unit
           val get_numeric : 'tags this -> bool
           val set_numeric : 'tags this -> bool -> unit
           val get_region : 'tags this -> string
           val set_region : 'tags this -> string -> unit
           val get_script : 'tags this -> string
           val set_script : 'tags this -> string -> unit
           val cast_from : 'tags this -> t
         end
         module BCP47LanguageTag :
         sig
           type t = string
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module Locale :
         sig
           type t = [ `Intl_Locale  | `Intl_LocaleOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_Locale  | `Intl_LocaleOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_Locale  | `Intl_LocaleOptions ]
             type tags_0 = tags]
           type 'tags this = 'tags intf constraint 'tags = [> `Intl_Locale ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val maximize : 'tags this -> t
           val minimize : 'tags this -> t
           val toString : 'tags this -> BCP47LanguageTag.t
           val cast_from : 'tags this -> t
           val create :
             ?tag:BCP47LanguageTag.t -> ?options:LocaleOptions.t -> unit -> t
         end
         module DisplayNamesOptions :
         sig
           type t = [ `Intl_DisplayNamesOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DisplayNamesOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DisplayNamesOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DisplayNamesOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t
           val set_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit
           val get_style : 'tags this -> RelativeTimeFormatStyle.t
           val set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit
           val get_type :
             'tags this ->
               [ `L_s28_currency  | `L_s53_language  | `L_s82_region 
               | `L_s85_script ]
           val set_type :
             'tags this ->
               [ `L_s28_currency  | `L_s53_language  | `L_s82_region 
               | `L_s85_script ] -> unit
           val get_fallback : 'tags this -> [ `L_s26_code  | `L_s69_none ]
           val set_fallback :
             'tags this -> [ `L_s26_code  | `L_s69_none ] -> unit
           val cast_from : 'tags this -> t
         end
         module DisplayNames :
         sig
           module AnonymousInterface2 :
           sig
             type t = private Ojs.t
             val t_to_js : t -> Ojs.t
             val t_of_js : Ojs.t -> t
             val get_localeMatcher : t -> RelativeTimeFormatLocaleMatcher.t
             val set_localeMatcher :
               t -> RelativeTimeFormatLocaleMatcher.t -> unit
           end
           type t = [ `Intl_DisplayNames ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DisplayNames ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DisplayNames ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DisplayNames ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val of_ : 'tags this -> code:string -> string
           val resolvedOptions : 'tags this -> DisplayNamesOptions.t
           val cast_from : 'tags this -> t
           val prototype : unit -> t
           val create :
             ?locales:(BCP47LanguageTag.t, BCP47LanguageTag.t) or_array ->
               ?options:DisplayNamesOptions.t Partial.t -> unit -> t
           val supportedLocalesOf :
             locales:(BCP47LanguageTag.t, BCP47LanguageTag.t) or_array ->
               ?options:AnonymousInterface2.t ->
                 unit -> BCP47LanguageTag.t list
         end
         module ResolvedDateTimeFormatOptions :
         sig
           type t = [ `Intl_ResolvedDateTimeFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedDateTimeFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedDateTimeFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedDateTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_formatMatcher :
             'tags this -> [ `L_s23_basic  | `L_s24_best_fit ]
           val set_formatMatcher :
             'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] -> unit
           val get_dateStyle :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ]
           val set_dateStyle :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ] -> unit
           val get_timeStyle :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ]
           val set_timeStyle :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ] -> unit
           val get_hourCycle :
             'tags this ->
               [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ]
           val set_hourCycle :
             'tags this ->
               [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ] ->
                 unit
           val get_dayPeriod :
             'tags this -> [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ]
           val set_dayPeriod :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] -> unit
           val get_fractionalSecondDigits :
             'tags this -> [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ]
           val set_fractionalSecondDigits :
             'tags this -> [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ] -> unit
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_calendar : 'tags this -> string
           val set_calendar : 'tags this -> string -> unit
           val get_numberingSystem : 'tags this -> string
           val set_numberingSystem : 'tags this -> string -> unit
           val get_timeZone : 'tags this -> string
           val set_timeZone : 'tags this -> string -> unit
           val get_hour12 : 'tags this -> bool
           val set_hour12 : 'tags this -> bool -> unit
           val get_weekday : 'tags this -> string
           val set_weekday : 'tags this -> string -> unit
           val get_era : 'tags this -> string
           val set_era : 'tags this -> string -> unit
           val get_year : 'tags this -> string
           val set_year : 'tags this -> string -> unit
           val get_month : 'tags this -> string
           val set_month : 'tags this -> string -> unit
           val get_day : 'tags this -> string
           val set_day : 'tags this -> string -> unit
           val get_hour : 'tags this -> string
           val set_hour : 'tags this -> string -> unit
           val get_minute : 'tags this -> string
           val set_minute : 'tags this -> string -> unit
           val get_second : 'tags this -> string
           val set_second : 'tags this -> string -> unit
           val get_timeZoneName : 'tags this -> string
           val set_timeZoneName : 'tags this -> string -> unit
           val cast_from : 'tags this -> t
         end
         module DateTimeFormatPartTypes :
         sig
           type t =
             [ `L_s101_year  | `L_s29_day  | `L_s30_dayPeriod  | `L_s35_era 
             | `L_s49_hour  | `L_s54_literal  | `L_s61_minute 
             | `L_s63_month  | `L_s86_second  | `L_s92_timeZoneName 
             | `L_s99_weekday ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module DateTimeFormatPart :
         sig
           type t = [ `Intl_DateTimeFormatPart ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DateTimeFormatPart ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DateTimeFormatPart ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DateTimeFormatPart ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_type : 'tags this -> DateTimeFormatPartTypes.t
           val set_type : 'tags this -> DateTimeFormatPartTypes.t -> unit
           val get_value : 'tags this -> string
           val set_value : 'tags this -> string -> unit
           val cast_from : 'tags this -> t
         end
         module DateTimeFormatOptions :
         sig
           type t = [ `Intl_DateTimeFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DateTimeFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DateTimeFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DateTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_formatMatcher :
             'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] or_undefined
           val set_formatMatcher :
             'tags this ->
               [ `L_s23_basic  | `L_s24_best_fit ] or_undefined -> unit
           val get_dateStyle :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ] or_undefined
           val set_dateStyle :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ] or_undefined -> unit
           val get_timeStyle :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ] or_undefined
           val set_timeStyle :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ] or_undefined -> unit
           val get_dayPeriod :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined
           val set_dayPeriod :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined
                 -> unit
           val get_fractionalSecondDigits :
             'tags this ->
               [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ] or_undefined
           val set_fractionalSecondDigits :
             'tags this ->
               [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ] or_undefined -> unit
           val get_calendar : 'tags this -> string or_undefined
           val set_calendar : 'tags this -> string or_undefined -> unit
           val get_dayPeriod' :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined
           val set_dayPeriod' :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined
                 -> unit
           val get_numberingSystem : 'tags this -> string or_undefined
           val set_numberingSystem :
             'tags this -> string or_undefined -> unit
           val get_dateStyle' :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ] or_undefined
           val set_dateStyle' :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ] or_undefined -> unit
           val get_timeStyle' :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ] or_undefined
           val set_timeStyle' :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ] or_undefined -> unit
           val get_hourCycle :
             'tags this ->
               [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ]
                 or_undefined
           val set_hourCycle :
             'tags this ->
               [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ]
                 or_undefined -> unit
           val get_localeMatcher :
             'tags this -> [ `L_s24_best_fit  | `L_s56_lookup ] or_undefined
           val set_localeMatcher :
             'tags this ->
               [ `L_s24_best_fit  | `L_s56_lookup ] or_undefined -> unit
           val get_weekday :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined
           val set_weekday :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined
                 -> unit
           val get_era :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined
           val set_era :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined
                 -> unit
           val get_year :
             'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined
           val set_year :
             'tags this ->
               [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined -> unit
           val get_month :
             'tags this ->
               [ `L_s0_2_digit  | `L_s55_long  | `L_s67_narrow 
               | `L_s72_numeric  | `L_s88_short ] or_undefined
           val set_month :
             'tags this ->
               [ `L_s0_2_digit  | `L_s55_long  | `L_s67_narrow 
               | `L_s72_numeric  | `L_s88_short ] or_undefined -> unit
           val get_day :
             'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined
           val set_day :
             'tags this ->
               [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined -> unit
           val get_hour :
             'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined
           val set_hour :
             'tags this ->
               [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined -> unit
           val get_minute :
             'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined
           val set_minute :
             'tags this ->
               [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined -> unit
           val get_second :
             'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined
           val set_second :
             'tags this ->
               [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined -> unit
           val get_timeZoneName :
             'tags this -> [ `L_s55_long  | `L_s88_short ] or_undefined
           val set_timeZoneName :
             'tags this ->
               [ `L_s55_long  | `L_s88_short ] or_undefined -> unit
           val get_formatMatcher' :
             'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] or_undefined
           val set_formatMatcher' :
             'tags this ->
               [ `L_s23_basic  | `L_s24_best_fit ] or_undefined -> unit
           val get_hour12 : 'tags this -> bool or_undefined
           val set_hour12 : 'tags this -> bool or_undefined -> unit
           val get_timeZone : 'tags this -> string or_undefined
           val set_timeZone : 'tags this -> string or_undefined -> unit
           val cast_from : 'tags this -> t
         end
         module DateTimeFormat :
         sig
           type t = [ `Intl_DateTimeFormat ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DateTimeFormat ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DateTimeFormat ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DateTimeFormat ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val formatToParts :
             'tags this ->
               ?date:Date.t or_number -> unit -> DateTimeFormatPart.t list
           val format :
             'tags this -> ?date:Date.t or_number -> unit -> string
           val resolvedOptions :
             'tags this -> ResolvedDateTimeFormatOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:string list or_string ->
               ?options:DateTimeFormatOptions.t -> unit -> t
           val invoke :
             ?locales:string list or_string ->
               ?options:DateTimeFormatOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:string list or_string ->
               ?options:DateTimeFormatOptions.t -> unit -> string list
         end
         module ResolvedCollatorOptions :
         sig
           type t = [ `Intl_ResolvedCollatorOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedCollatorOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedCollatorOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_ResolvedCollatorOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_usage : 'tags this -> string
           val set_usage : 'tags this -> string -> unit
           val get_sensitivity : 'tags this -> string
           val set_sensitivity : 'tags this -> string -> unit
           val get_ignorePunctuation : 'tags this -> bool
           val set_ignorePunctuation : 'tags this -> bool -> unit
           val get_collation : 'tags this -> string
           val set_collation : 'tags this -> string -> unit
           val get_caseFirst : 'tags this -> string
           val set_caseFirst : 'tags this -> string -> unit
           val get_numeric : 'tags this -> bool
           val set_numeric : 'tags this -> bool -> unit
           val cast_from : 'tags this -> t
         end
         module CollatorOptions :
         sig
           type t = [ `Intl_CollatorOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_CollatorOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_CollatorOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_CollatorOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_usage : 'tags this -> string or_undefined
           val set_usage : 'tags this -> string or_undefined -> unit
           val get_localeMatcher : 'tags this -> string or_undefined
           val set_localeMatcher : 'tags this -> string or_undefined -> unit
           val get_numeric : 'tags this -> bool or_undefined
           val set_numeric : 'tags this -> bool or_undefined -> unit
           val get_caseFirst : 'tags this -> string or_undefined
           val set_caseFirst : 'tags this -> string or_undefined -> unit
           val get_sensitivity : 'tags this -> string or_undefined
           val set_sensitivity : 'tags this -> string or_undefined -> unit
           val get_ignorePunctuation : 'tags this -> bool or_undefined
           val set_ignorePunctuation :
             'tags this -> bool or_undefined -> unit
           val cast_from : 'tags this -> t
         end
         module Collator :
         sig
           type t = [ `Intl_Collator ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_Collator ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_Collator ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_Collator ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val compare : 'tags this -> x:string -> y:string -> float
           val resolvedOptions : 'tags this -> ResolvedCollatorOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:string list or_string ->
               ?options:CollatorOptions.t -> unit -> t
           val invoke :
             ?locales:string list or_string ->
               ?options:CollatorOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:string list or_string ->
               ?options:CollatorOptions.t -> unit -> string list
         end
       end =
  struct
    module UnicodeBCP47LocaleIdentifier =
      struct
        type t = string
        let rec t_of_js : Ojs.t -> t =
          fun (x1887 : Ojs.t) -> Ojs.string_of_js x1887
        and t_to_js : t -> Ojs.t =
          fun (x1886 : string) -> Ojs.string_to_js x1886
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x1889 : Ojs.t) -> t_of_js x1889
        and t_0_to_js : t_0 -> Ojs.t = fun (x1888 : t) -> t_to_js x1888
      end
    module RelativeTimeFormatNumeric =
      struct
        type t = [ `L_s21_always  | `L_s22_auto ]
        let rec t_of_js : Ojs.t -> t =
          fun (x1891 : Ojs.t) ->
            let x1892 = x1891 in
            match Ojs.string_of_js x1892 with
            | "always" -> `L_s21_always
            | "auto" -> `L_s22_auto
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x1890 : [ `L_s21_always  | `L_s22_auto ]) ->
            match x1890 with
            | `L_s21_always -> Ojs.string_to_js "always"
            | `L_s22_auto -> Ojs.string_to_js "auto"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x1894 : Ojs.t) -> t_of_js x1894
        and t_0_to_js : t_0 -> Ojs.t = fun (x1893 : t) -> t_to_js x1893
      end
    module RelativeTimeFormatStyle =
      struct
        type t = [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ]
        let rec t_of_js : Ojs.t -> t =
          fun (x1896 : Ojs.t) ->
            let x1897 = x1896 in
            match Ojs.string_of_js x1897 with
            | "long" -> `L_s55_long
            | "narrow" -> `L_s67_narrow
            | "short" -> `L_s88_short
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x1895 : [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ]) ->
            match x1895 with
            | `L_s55_long -> Ojs.string_to_js "long"
            | `L_s67_narrow -> Ojs.string_to_js "narrow"
            | `L_s88_short -> Ojs.string_to_js "short"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x1899 : Ojs.t) -> t_of_js x1899
        and t_0_to_js : t_0 -> Ojs.t = fun (x1898 : t) -> t_to_js x1898
      end
    module ResolvedRelativeTimeFormatOptions =
      struct
        type t = [ `Intl_ResolvedRelativeTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x1901 : Ojs.t) -> t_of_js x1901
        and t_0_to_js : t_0 -> Ojs.t = fun (x1900 : t) -> t_to_js x1900
        type tags = [ `Intl_ResolvedRelativeTimeFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `Intl_ResolvedRelativeTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x1904 : Ojs.t) -> intf_of_js __tags_of_js x1904
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x1902 : __tags intf) -> intf_to_js __tags_to_js x1902
        let (get_locale : 'tags this -> UnicodeBCP47LocaleIdentifier.t) =
          fun (x1906 : 'tags this) ->
            UnicodeBCP47LocaleIdentifier.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x1906) "locale")
        let (set_locale :
          'tags this -> UnicodeBCP47LocaleIdentifier.t -> unit) =
          fun (x1908 : 'tags this) ->
            fun (x1909 : UnicodeBCP47LocaleIdentifier.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1908) "locale"
                (UnicodeBCP47LocaleIdentifier.t_to_js x1909)
        let (get_style : 'tags this -> RelativeTimeFormatStyle.t) =
          fun (x1911 : 'tags this) ->
            RelativeTimeFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x1911) "style")
        let (set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit) =
          fun (x1913 : 'tags this) ->
            fun (x1914 : RelativeTimeFormatStyle.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1913) "style"
                (RelativeTimeFormatStyle.t_to_js x1914)
        let (get_numeric : 'tags this -> RelativeTimeFormatNumeric.t) =
          fun (x1916 : 'tags this) ->
            RelativeTimeFormatNumeric.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x1916) "numeric")
        let (set_numeric : 'tags this -> RelativeTimeFormatNumeric.t -> unit)
          =
          fun (x1918 : 'tags this) ->
            fun (x1919 : RelativeTimeFormatNumeric.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1918) "numeric"
                (RelativeTimeFormatNumeric.t_to_js x1919)
        let (get_numberingSystem : 'tags this -> string) =
          fun (x1921 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x1921)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x1923 : 'tags this) ->
            fun (x1924 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1923)
                "numberingSystem" (Ojs.string_to_js x1924)
        let cast_from = Obj.magic
      end
    module RelativeTimeFormatUnit =
      struct
        type t =
          [ `L_s100_weeks  | `L_s101_year  | `L_s102_years  | `L_s29_day 
          | `L_s31_days  | `L_s49_hour  | `L_s50_hours  | `L_s61_minute 
          | `L_s62_minutes  | `L_s63_month  | `L_s64_months 
          | `L_s80_quarter  | `L_s81_quarters  | `L_s86_second 
          | `L_s87_seconds  | `L_s98_week ]
        let rec t_of_js : Ojs.t -> t =
          fun (x1927 : Ojs.t) ->
            let x1928 = x1927 in
            match Ojs.string_of_js x1928 with
            | "weeks" -> `L_s100_weeks
            | "year" -> `L_s101_year
            | "years" -> `L_s102_years
            | "day" -> `L_s29_day
            | "days" -> `L_s31_days
            | "hour" -> `L_s49_hour
            | "hours" -> `L_s50_hours
            | "minute" -> `L_s61_minute
            | "minutes" -> `L_s62_minutes
            | "month" -> `L_s63_month
            | "months" -> `L_s64_months
            | "quarter" -> `L_s80_quarter
            | "quarters" -> `L_s81_quarters
            | "second" -> `L_s86_second
            | "seconds" -> `L_s87_seconds
            | "week" -> `L_s98_week
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x1926 :
              [ `L_s100_weeks  | `L_s101_year  | `L_s102_years  | `L_s29_day 
              | `L_s31_days  | `L_s49_hour  | `L_s50_hours  | `L_s61_minute 
              | `L_s62_minutes  | `L_s63_month  | `L_s64_months 
              | `L_s80_quarter  | `L_s81_quarters  | `L_s86_second 
              | `L_s87_seconds  | `L_s98_week ])
            ->
            match x1926 with
            | `L_s100_weeks -> Ojs.string_to_js "weeks"
            | `L_s101_year -> Ojs.string_to_js "year"
            | `L_s102_years -> Ojs.string_to_js "years"
            | `L_s29_day -> Ojs.string_to_js "day"
            | `L_s31_days -> Ojs.string_to_js "days"
            | `L_s49_hour -> Ojs.string_to_js "hour"
            | `L_s50_hours -> Ojs.string_to_js "hours"
            | `L_s61_minute -> Ojs.string_to_js "minute"
            | `L_s62_minutes -> Ojs.string_to_js "minutes"
            | `L_s63_month -> Ojs.string_to_js "month"
            | `L_s64_months -> Ojs.string_to_js "months"
            | `L_s80_quarter -> Ojs.string_to_js "quarter"
            | `L_s81_quarters -> Ojs.string_to_js "quarters"
            | `L_s86_second -> Ojs.string_to_js "second"
            | `L_s87_seconds -> Ojs.string_to_js "seconds"
            | `L_s98_week -> Ojs.string_to_js "week"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x1930 : Ojs.t) -> t_of_js x1930
        and t_0_to_js : t_0 -> Ojs.t = fun (x1929 : t) -> t_to_js x1929
      end
    module RelativeTimeFormatPart =
      struct
        type t = [ `Intl_RelativeTimeFormatPart ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x1932 : Ojs.t) -> t_of_js x1932
        and t_0_to_js : t_0 -> Ojs.t = fun (x1931 : t) -> t_to_js x1931
        type tags = [ `Intl_RelativeTimeFormatPart ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_RelativeTimeFormatPart ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x1935 : Ojs.t) -> intf_of_js __tags_of_js x1935
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x1933 : __tags intf) -> intf_to_js __tags_to_js x1933
        let (get_type : 'tags this -> string) =
          fun (x1937 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x1937) "type")
        let (set_type : 'tags this -> string -> unit) =
          fun (x1939 : 'tags this) ->
            fun (x1940 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1939) "type"
                (Ojs.string_to_js x1940)
        let (get_value : 'tags this -> string) =
          fun (x1942 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x1942) "value")
        let (set_value : 'tags this -> string -> unit) =
          fun (x1944 : 'tags this) ->
            fun (x1945 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1944) "value"
                (Ojs.string_to_js x1945)
        let (get_unit : 'tags this -> RelativeTimeFormatUnit.t) =
          fun (x1947 : 'tags this) ->
            RelativeTimeFormatUnit.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x1947) "unit")
        let (set_unit : 'tags this -> RelativeTimeFormatUnit.t -> unit) =
          fun (x1949 : 'tags this) ->
            fun (x1950 : RelativeTimeFormatUnit.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1949) "unit"
                (RelativeTimeFormatUnit.t_to_js x1950)
        let cast_from = Obj.magic
      end
    module RelativeTimeFormatLocaleMatcher =
      struct
        type t = [ `L_s24_best_fit  | `L_s56_lookup ]
        let rec t_of_js : Ojs.t -> t =
          fun (x1953 : Ojs.t) ->
            let x1954 = x1953 in
            match Ojs.string_of_js x1954 with
            | "best fit" -> `L_s24_best_fit
            | "lookup" -> `L_s56_lookup
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x1952 : [ `L_s24_best_fit  | `L_s56_lookup ]) ->
            match x1952 with
            | `L_s24_best_fit -> Ojs.string_to_js "best fit"
            | `L_s56_lookup -> Ojs.string_to_js "lookup"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x1956 : Ojs.t) -> t_of_js x1956
        and t_0_to_js : t_0 -> Ojs.t = fun (x1955 : t) -> t_to_js x1955
      end
    module RelativeTimeFormatOptions =
      struct
        type t = [ `Intl_RelativeTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x1958 : Ojs.t) -> t_of_js x1958
        and t_0_to_js : t_0 -> Ojs.t = fun (x1957 : t) -> t_to_js x1957
        type tags = [ `Intl_RelativeTimeFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_RelativeTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x1961 : Ojs.t) -> intf_of_js __tags_of_js x1961
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x1959 : __tags intf) -> intf_to_js __tags_to_js x1959
        let (get_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t) =
          fun (x1963 : 'tags this) ->
            RelativeTimeFormatLocaleMatcher.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x1963)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit) =
          fun (x1965 : 'tags this) ->
            fun (x1966 : RelativeTimeFormatLocaleMatcher.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1965) "localeMatcher"
                (RelativeTimeFormatLocaleMatcher.t_to_js x1966)
        let (get_numeric : 'tags this -> RelativeTimeFormatNumeric.t) =
          fun (x1968 : 'tags this) ->
            RelativeTimeFormatNumeric.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x1968) "numeric")
        let (set_numeric : 'tags this -> RelativeTimeFormatNumeric.t -> unit)
          =
          fun (x1970 : 'tags this) ->
            fun (x1971 : RelativeTimeFormatNumeric.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1970) "numeric"
                (RelativeTimeFormatNumeric.t_to_js x1971)
        let (get_style : 'tags this -> RelativeTimeFormatStyle.t) =
          fun (x1973 : 'tags this) ->
            RelativeTimeFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x1973) "style")
        let (set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit) =
          fun (x1975 : 'tags this) ->
            fun (x1976 : RelativeTimeFormatStyle.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1975) "style"
                (RelativeTimeFormatStyle.t_to_js x1976)
        let cast_from = Obj.magic
      end
    module RelativeTimeFormat =
      struct
        type t = [ `Intl_RelativeTimeFormat ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x1979 : Ojs.t) -> t_of_js x1979
        and t_0_to_js : t_0 -> Ojs.t = fun (x1978 : t) -> t_to_js x1978
        type tags = [ `Intl_RelativeTimeFormat ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_RelativeTimeFormat ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x1982 : Ojs.t) -> intf_of_js __tags_of_js x1982
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x1980 : __tags intf) -> intf_to_js __tags_to_js x1980
        let (format :
          'tags this ->
            value:float -> unit:RelativeTimeFormatUnit.t -> string)
          =
          fun (x1986 : 'tags this) ->
            fun ~value:(x1984 : float) ->
              fun ~unit:(x1985 : RelativeTimeFormatUnit.t) ->
                Ojs.string_of_js
                  (Ojs.call (this_to_js Obj.magic x1986) "format"
                     [|(Ojs.float_to_js x1984);(RelativeTimeFormatUnit.t_to_js
                                                  x1985)|])
        let (formatToParts :
          'tags this ->
            value:float ->
              unit:RelativeTimeFormatUnit.t -> RelativeTimeFormatPart.t list)
          =
          fun (x1990 : 'tags this) ->
            fun ~value:(x1988 : float) ->
              fun ~unit:(x1989 : RelativeTimeFormatUnit.t) ->
                Ojs.list_of_js RelativeTimeFormatPart.t_of_js
                  (Ojs.call (this_to_js Obj.magic x1990) "formatToParts"
                     [|(Ojs.float_to_js x1988);(RelativeTimeFormatUnit.t_to_js
                                                  x1989)|])
        let (resolvedOptions :
          'tags this -> ResolvedRelativeTimeFormatOptions.t) =
          fun (x1993 : 'tags this) ->
            ResolvedRelativeTimeFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x1993) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:(UnicodeBCP47LocaleIdentifier.t,
            UnicodeBCP47LocaleIdentifier.t) or_array ->
            ?options:RelativeTimeFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x1995 :
                       (UnicodeBCP47LocaleIdentifier.t,
                         UnicodeBCP47LocaleIdentifier.t) or_array option)
            ->
            fun ?options:(x1996 : RelativeTimeFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl")
                        "RelativeTimeFormat")
                     (let x1997 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x1995 with
                       | Some x1999 ->
                           ignore
                             (Ojs.call x1997 "push"
                                [|(or_array_to_js
                                     UnicodeBCP47LocaleIdentifier.t_to_js
                                     UnicodeBCP47LocaleIdentifier.t_to_js
                                     x1999)|])
                       | None -> ());
                      (match x1996 with
                       | Some x1998 ->
                           ignore
                             (Ojs.call x1997 "push"
                                [|(RelativeTimeFormatOptions.t_to_js x1998)|])
                       | None -> ());
                      x1997))
        let (supportedLocalesOf :
          ?locales:(UnicodeBCP47LocaleIdentifier.t,
            UnicodeBCP47LocaleIdentifier.t) or_array ->
            ?options:RelativeTimeFormatOptions.t ->
              unit -> UnicodeBCP47LocaleIdentifier.t list)
          =
          fun
            ?locales:(x2002 :
                       (UnicodeBCP47LocaleIdentifier.t,
                         UnicodeBCP47LocaleIdentifier.t) or_array option)
            ->
            fun ?options:(x2003 : RelativeTimeFormatOptions.t option) ->
              fun () ->
                Ojs.list_of_js UnicodeBCP47LocaleIdentifier.t_of_js
                  (let x2009 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl")
                       "RelativeTimeFormat" in
                   Ojs.call (Ojs.get_prop_ascii x2009 "supportedLocalesOf")
                     "apply"
                     [|x2009;((let x2004 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x2002 with
                                | Some x2006 ->
                                    ignore
                                      (Ojs.call x2004 "push"
                                         [|(or_array_to_js
                                              UnicodeBCP47LocaleIdentifier.t_to_js
                                              UnicodeBCP47LocaleIdentifier.t_to_js
                                              x2006)|])
                                | None -> ());
                               (match x2003 with
                                | Some x2005 ->
                                    ignore
                                      (Ojs.call x2004 "push"
                                         [|(RelativeTimeFormatOptions.t_to_js
                                              x2005)|])
                                | None -> ());
                               x2004))|])
      end
    module PluralRuleType =
      struct
        type t = [ `L_s25_cardinal  | `L_s75_ordinal ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2012 : Ojs.t) ->
            let x2013 = x2012 in
            match Ojs.string_of_js x2013 with
            | "cardinal" -> `L_s25_cardinal
            | "ordinal" -> `L_s75_ordinal
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2011 : [ `L_s25_cardinal  | `L_s75_ordinal ]) ->
            match x2011 with
            | `L_s25_cardinal -> Ojs.string_to_js "cardinal"
            | `L_s75_ordinal -> Ojs.string_to_js "ordinal"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2015 : Ojs.t) -> t_of_js x2015
        and t_0_to_js : t_0 -> Ojs.t = fun (x2014 : t) -> t_to_js x2014
      end
    module LDMLPluralRule =
      struct
        type t =
          [ `L_s103_zero  | `L_s40_few  | `L_s58_many  | `L_s74_one 
          | `L_s76_other  | `L_s94_two ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2017 : Ojs.t) ->
            let x2018 = x2017 in
            match Ojs.string_of_js x2018 with
            | "zero" -> `L_s103_zero
            | "few" -> `L_s40_few
            | "many" -> `L_s58_many
            | "one" -> `L_s74_one
            | "other" -> `L_s76_other
            | "two" -> `L_s94_two
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2016 :
              [ `L_s103_zero  | `L_s40_few  | `L_s58_many  | `L_s74_one 
              | `L_s76_other  | `L_s94_two ])
            ->
            match x2016 with
            | `L_s103_zero -> Ojs.string_to_js "zero"
            | `L_s40_few -> Ojs.string_to_js "few"
            | `L_s58_many -> Ojs.string_to_js "many"
            | `L_s74_one -> Ojs.string_to_js "one"
            | `L_s76_other -> Ojs.string_to_js "other"
            | `L_s94_two -> Ojs.string_to_js "two"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2020 : Ojs.t) -> t_of_js x2020
        and t_0_to_js : t_0 -> Ojs.t = fun (x2019 : t) -> t_to_js x2019
      end
    module ResolvedPluralRulesOptions =
      struct
        type t = [ `Intl_ResolvedPluralRulesOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2022 : Ojs.t) -> t_of_js x2022
        and t_0_to_js : t_0 -> Ojs.t = fun (x2021 : t) -> t_to_js x2021
        type tags = [ `Intl_ResolvedPluralRulesOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_ResolvedPluralRulesOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2025 : Ojs.t) -> intf_of_js __tags_of_js x2025
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2023 : __tags intf) -> intf_to_js __tags_to_js x2023
        let (get_locale : 'tags this -> string) =
          fun (x2027 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2027) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x2029 : 'tags this) ->
            fun (x2030 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2029) "locale"
                (Ojs.string_to_js x2030)
        let (get_pluralCategories : 'tags this -> LDMLPluralRule.t list) =
          fun (x2032 : 'tags this) ->
            Ojs.list_of_js LDMLPluralRule.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2032)
                 "pluralCategories")
        let (set_pluralCategories :
          'tags this -> LDMLPluralRule.t list -> unit) =
          fun (x2035 : 'tags this) ->
            fun (x2036 : LDMLPluralRule.t list) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2035)
                "pluralCategories"
                (Ojs.list_to_js LDMLPluralRule.t_to_js x2036)
        let (get_type : 'tags this -> PluralRuleType.t) =
          fun (x2039 : 'tags this) ->
            PluralRuleType.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2039) "type")
        let (set_type : 'tags this -> PluralRuleType.t -> unit) =
          fun (x2041 : 'tags this) ->
            fun (x2042 : PluralRuleType.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2041) "type"
                (PluralRuleType.t_to_js x2042)
        let (get_minimumIntegerDigits : 'tags this -> float) =
          fun (x2044 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2044)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits : 'tags this -> float -> unit) =
          fun (x2046 : 'tags this) ->
            fun (x2047 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2046)
                "minimumIntegerDigits" (Ojs.float_to_js x2047)
        let (get_minimumFractionDigits : 'tags this -> float) =
          fun (x2049 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2049)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits : 'tags this -> float -> unit) =
          fun (x2051 : 'tags this) ->
            fun (x2052 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2051)
                "minimumFractionDigits" (Ojs.float_to_js x2052)
        let (get_maximumFractionDigits : 'tags this -> float) =
          fun (x2054 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2054)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits : 'tags this -> float -> unit) =
          fun (x2056 : 'tags this) ->
            fun (x2057 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2056)
                "maximumFractionDigits" (Ojs.float_to_js x2057)
        let (get_minimumSignificantDigits : 'tags this -> float) =
          fun (x2059 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2059)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2061 : 'tags this) ->
            fun (x2062 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2061)
                "minimumSignificantDigits" (Ojs.float_to_js x2062)
        let (get_maximumSignificantDigits : 'tags this -> float) =
          fun (x2064 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2064)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2066 : 'tags this) ->
            fun (x2067 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2066)
                "maximumSignificantDigits" (Ojs.float_to_js x2067)
        let cast_from = Obj.magic
      end
    module PluralRulesOptions =
      struct
        type t = [ `Intl_PluralRulesOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2070 : Ojs.t) -> t_of_js x2070
        and t_0_to_js : t_0 -> Ojs.t = fun (x2069 : t) -> t_to_js x2069
        type tags = [ `Intl_PluralRulesOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_PluralRulesOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2073 : Ojs.t) -> intf_of_js __tags_of_js x2073
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2071 : __tags intf) -> intf_to_js __tags_to_js x2071
        let (get_localeMatcher :
          'tags this -> [ `L_s24_best_fit  | `L_s56_lookup ] or_undefined) =
          fun (x2075 : 'tags this) ->
            or_undefined_of_js
              (fun (x2077 : Ojs.t) ->
                 let x2078 = x2077 in
                 match Ojs.string_of_js x2078 with
                 | "best fit" -> `L_s24_best_fit
                 | "lookup" -> `L_s56_lookup
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2075)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this ->
            [ `L_s24_best_fit  | `L_s56_lookup ] or_undefined -> unit)
          =
          fun (x2079 : 'tags this) ->
            fun (x2080 : [ `L_s24_best_fit  | `L_s56_lookup ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2079) "localeMatcher"
                (or_undefined_to_js
                   (fun (x2081 : [ `L_s24_best_fit  | `L_s56_lookup ]) ->
                      match x2081 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit"
                      | `L_s56_lookup -> Ojs.string_to_js "lookup") x2080)
        let (get_type : 'tags this -> PluralRuleType.t or_undefined) =
          fun (x2083 : 'tags this) ->
            or_undefined_of_js PluralRuleType.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2083) "type")
        let (set_type : 'tags this -> PluralRuleType.t or_undefined -> unit)
          =
          fun (x2086 : 'tags this) ->
            fun (x2087 : PluralRuleType.t or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2086) "type"
                (or_undefined_to_js PluralRuleType.t_to_js x2087)
        let (get_minimumIntegerDigits : 'tags this -> float or_undefined) =
          fun (x2090 : 'tags this) ->
            or_undefined_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2090)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits :
          'tags this -> float or_undefined -> unit) =
          fun (x2093 : 'tags this) ->
            fun (x2094 : float or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2093)
                "minimumIntegerDigits"
                (or_undefined_to_js Ojs.float_to_js x2094)
        let (get_minimumFractionDigits : 'tags this -> float or_undefined) =
          fun (x2097 : 'tags this) ->
            or_undefined_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2097)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits :
          'tags this -> float or_undefined -> unit) =
          fun (x2100 : 'tags this) ->
            fun (x2101 : float or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2100)
                "minimumFractionDigits"
                (or_undefined_to_js Ojs.float_to_js x2101)
        let (get_maximumFractionDigits : 'tags this -> float or_undefined) =
          fun (x2104 : 'tags this) ->
            or_undefined_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2104)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits :
          'tags this -> float or_undefined -> unit) =
          fun (x2107 : 'tags this) ->
            fun (x2108 : float or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2107)
                "maximumFractionDigits"
                (or_undefined_to_js Ojs.float_to_js x2108)
        let (get_minimumSignificantDigits : 'tags this -> float or_undefined)
          =
          fun (x2111 : 'tags this) ->
            or_undefined_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2111)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits :
          'tags this -> float or_undefined -> unit) =
          fun (x2114 : 'tags this) ->
            fun (x2115 : float or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2114)
                "minimumSignificantDigits"
                (or_undefined_to_js Ojs.float_to_js x2115)
        let (get_maximumSignificantDigits : 'tags this -> float or_undefined)
          =
          fun (x2118 : 'tags this) ->
            or_undefined_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2118)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits :
          'tags this -> float or_undefined -> unit) =
          fun (x2121 : 'tags this) ->
            fun (x2122 : float or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2121)
                "maximumSignificantDigits"
                (or_undefined_to_js Ojs.float_to_js x2122)
        let cast_from = Obj.magic
      end
    module PluralRules =
      struct
        module AnonymousInterface4 =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x2126 : Ojs.t) -> x2126
            and t_to_js : t -> Ojs.t = fun (x2125 : Ojs.t) -> x2125
            let (get_localeMatcher :
              t -> [ `L_s24_best_fit  | `L_s56_lookup ]) =
              fun (x2127 : t) ->
                let x2128 =
                  Ojs.get_prop_ascii (t_to_js x2127) "localeMatcher" in
                match Ojs.string_of_js x2128 with
                | "best fit" -> `L_s24_best_fit
                | "lookup" -> `L_s56_lookup
                | _ -> assert false
            let (set_localeMatcher :
              t -> [ `L_s24_best_fit  | `L_s56_lookup ] -> unit) =
              fun (x2129 : t) ->
                fun (x2130 : [ `L_s24_best_fit  | `L_s56_lookup ]) ->
                  Ojs.set_prop_ascii (t_to_js x2129) "localeMatcher"
                    (match x2130 with
                     | `L_s24_best_fit -> Ojs.string_to_js "best fit"
                     | `L_s56_lookup -> Ojs.string_to_js "lookup")
          end
        type t = [ `Intl_PluralRules ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2132 : Ojs.t) -> t_of_js x2132
        and t_0_to_js : t_0 -> Ojs.t = fun (x2131 : t) -> t_to_js x2131
        type tags = [ `Intl_PluralRules ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_PluralRules ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2135 : Ojs.t) -> intf_of_js __tags_of_js x2135
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2133 : __tags intf) -> intf_to_js __tags_to_js x2133
        let (resolvedOptions : 'tags this -> ResolvedPluralRulesOptions.t) =
          fun (x2137 : 'tags this) ->
            ResolvedPluralRulesOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2137) "resolvedOptions" [||])
        let (select : 'tags this -> n:float -> LDMLPluralRule.t) =
          fun (x2140 : 'tags this) ->
            fun ~n:(x2139 : float) ->
              LDMLPluralRule.t_of_js
                (Ojs.call (this_to_js Obj.magic x2140) "select"
                   [|(Ojs.float_to_js x2139)|])
        let cast_from = Obj.magic
        let (create :
          ?locales:string list or_string ->
            ?options:PluralRulesOptions.t -> unit -> t)
          =
          fun ?locales:(x2142 : string list or_string option) ->
            fun ?options:(x2143 : PluralRulesOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "PluralRules")
                     (let x2144 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2142 with
                       | Some x2146 ->
                           ignore
                             (Ojs.call x2144 "push"
                                [|(or_string_to_js
                                     (fun (x2147 : string list) ->
                                        Ojs.list_to_js Ojs.string_to_js x2147)
                                     x2146)|])
                       | None -> ());
                      (match x2143 with
                       | Some x2145 ->
                           ignore
                             (Ojs.call x2144 "push"
                                [|(PluralRulesOptions.t_to_js x2145)|])
                       | None -> ());
                      x2144))
        let (invoke :
          ?locales:string list or_string ->
            ?options:PluralRulesOptions.t -> unit -> t)
          =
          fun ?locales:(x2149 : string list or_string option) ->
            fun ?options:(x2150 : PluralRulesOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "PluralRules")
                     "apply"
                     [|Ojs.null;((let x2151 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x2149 with
                                   | Some x2153 ->
                                       ignore
                                         (Ojs.call x2151 "push"
                                            [|(or_string_to_js
                                                 (fun (x2154 : string list)
                                                    ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x2154)
                                                 x2153)|])
                                   | None -> ());
                                  (match x2150 with
                                   | Some x2152 ->
                                       ignore
                                         (Ojs.call x2151 "push"
                                            [|(PluralRulesOptions.t_to_js
                                                 x2152)|])
                                   | None -> ());
                                  x2151))|])
        let (supportedLocalesOf :
          locales:string list or_string ->
            ?options:AnonymousInterface4.t -> unit -> string list)
          =
          fun ~locales:(x2156 : string list or_string) ->
            fun ?options:(x2157 : AnonymousInterface4.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x2162 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "PluralRules" in
                   Ojs.call (Ojs.get_prop_ascii x2162 "supportedLocalesOf")
                     "apply"
                     [|x2162;((let x2158 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2158 "push"
                                    [|(or_string_to_js
                                         (fun (x2160 : string list) ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x2160) x2156)|]);
                               (match x2157 with
                                | Some x2159 ->
                                    ignore
                                      (Ojs.call x2158 "push"
                                         [|(AnonymousInterface4.t_to_js x2159)|])
                                | None -> ());
                               x2158))|])
      end
    module ResolvedNumberFormatOptions =
      struct
        type t = [ `Intl_ResolvedNumberFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2165 : Ojs.t) -> t_of_js x2165
        and t_0_to_js : t_0 -> Ojs.t = fun (x2164 : t) -> t_to_js x2164
        type tags = [ `Intl_ResolvedNumberFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `Intl_ResolvedNumberFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2168 : Ojs.t) -> intf_of_js __tags_of_js x2168
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2166 : __tags intf) -> intf_to_js __tags_to_js x2166
        let (get_compactDisplay :
          'tags this -> [ `L_s55_long  | `L_s88_short ]) =
          fun (x2170 : 'tags this) ->
            let x2172 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2170)
                "compactDisplay" in
            match Ojs.string_of_js x2172 with
            | "long" -> `L_s55_long
            | "short" -> `L_s88_short
            | _ -> assert false
        let (set_compactDisplay :
          'tags this -> [ `L_s55_long  | `L_s88_short ] -> unit) =
          fun (x2173 : 'tags this) ->
            fun (x2174 : [ `L_s55_long  | `L_s88_short ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2173)
                "compactDisplay"
                (match x2174 with
                 | `L_s55_long -> Ojs.string_to_js "long"
                 | `L_s88_short -> Ojs.string_to_js "short")
        let (get_notation :
          'tags this ->
            [ `L_s27_compact  | `L_s34_engineering  | `L_s84_scientific 
            | `L_s89_standard ])
          =
          fun (x2176 : 'tags this) ->
            let x2178 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2176) "notation" in
            match Ojs.string_of_js x2178 with
            | "compact" -> `L_s27_compact
            | "engineering" -> `L_s34_engineering
            | "scientific" -> `L_s84_scientific
            | "standard" -> `L_s89_standard
            | _ -> assert false
        let (set_notation :
          'tags this ->
            [ `L_s27_compact  | `L_s34_engineering  | `L_s84_scientific 
            | `L_s89_standard ] -> unit)
          =
          fun (x2179 : 'tags this) ->
            fun
              (x2180 :
                [ `L_s27_compact  | `L_s34_engineering  | `L_s84_scientific 
                | `L_s89_standard ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2179) "notation"
                (match x2180 with
                 | `L_s27_compact -> Ojs.string_to_js "compact"
                 | `L_s34_engineering -> Ojs.string_to_js "engineering"
                 | `L_s84_scientific -> Ojs.string_to_js "scientific"
                 | `L_s89_standard -> Ojs.string_to_js "standard")
        let (get_signDisplay :
          'tags this -> [ `L_s21_always  | `L_s22_auto  | `L_s68_never ]) =
          fun (x2182 : 'tags this) ->
            let x2184 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2182) "signDisplay" in
            match Ojs.string_of_js x2184 with
            | "always" -> `L_s21_always
            | "auto" -> `L_s22_auto
            | "never" -> `L_s68_never
            | _ -> assert false
        let (set_signDisplay :
          'tags this ->
            [ `L_s21_always  | `L_s22_auto  | `L_s68_never ] -> unit)
          =
          fun (x2185 : 'tags this) ->
            fun (x2186 : [ `L_s21_always  | `L_s22_auto  | `L_s68_never ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2185) "signDisplay"
                (match x2186 with
                 | `L_s21_always -> Ojs.string_to_js "always"
                 | `L_s22_auto -> Ojs.string_to_js "auto"
                 | `L_s68_never -> Ojs.string_to_js "never")
        let (get_unit : 'tags this -> string) =
          fun (x2188 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2188) "unit")
        let (set_unit : 'tags this -> string -> unit) =
          fun (x2190 : 'tags this) ->
            fun (x2191 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2190) "unit"
                (Ojs.string_to_js x2191)
        let (get_unitDisplay :
          'tags this -> [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ]) =
          fun (x2193 : 'tags this) ->
            let x2195 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2193) "unitDisplay" in
            match Ojs.string_of_js x2195 with
            | "long" -> `L_s55_long
            | "narrow" -> `L_s67_narrow
            | "short" -> `L_s88_short
            | _ -> assert false
        let (set_unitDisplay :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] -> unit)
          =
          fun (x2196 : 'tags this) ->
            fun (x2197 : [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2196) "unitDisplay"
                (match x2197 with
                 | `L_s55_long -> Ojs.string_to_js "long"
                 | `L_s67_narrow -> Ojs.string_to_js "narrow"
                 | `L_s88_short -> Ojs.string_to_js "short")
        let (get_locale : 'tags this -> string) =
          fun (x2199 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2199) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x2201 : 'tags this) ->
            fun (x2202 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2201) "locale"
                (Ojs.string_to_js x2202)
        let (get_numberingSystem : 'tags this -> string) =
          fun (x2204 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2204)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x2206 : 'tags this) ->
            fun (x2207 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2206)
                "numberingSystem" (Ojs.string_to_js x2207)
        let (get_style : 'tags this -> string) =
          fun (x2209 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2209) "style")
        let (set_style : 'tags this -> string -> unit) =
          fun (x2211 : 'tags this) ->
            fun (x2212 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2211) "style"
                (Ojs.string_to_js x2212)
        let (get_currency : 'tags this -> string) =
          fun (x2214 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2214) "currency")
        let (set_currency : 'tags this -> string -> unit) =
          fun (x2216 : 'tags this) ->
            fun (x2217 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2216) "currency"
                (Ojs.string_to_js x2217)
        let (get_currencyDisplay : 'tags this -> string) =
          fun (x2219 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2219)
                 "currencyDisplay")
        let (set_currencyDisplay : 'tags this -> string -> unit) =
          fun (x2221 : 'tags this) ->
            fun (x2222 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2221)
                "currencyDisplay" (Ojs.string_to_js x2222)
        let (get_minimumIntegerDigits : 'tags this -> float) =
          fun (x2224 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2224)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits : 'tags this -> float -> unit) =
          fun (x2226 : 'tags this) ->
            fun (x2227 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2226)
                "minimumIntegerDigits" (Ojs.float_to_js x2227)
        let (get_minimumFractionDigits : 'tags this -> float) =
          fun (x2229 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2229)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits : 'tags this -> float -> unit) =
          fun (x2231 : 'tags this) ->
            fun (x2232 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2231)
                "minimumFractionDigits" (Ojs.float_to_js x2232)
        let (get_maximumFractionDigits : 'tags this -> float) =
          fun (x2234 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2234)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits : 'tags this -> float -> unit) =
          fun (x2236 : 'tags this) ->
            fun (x2237 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2236)
                "maximumFractionDigits" (Ojs.float_to_js x2237)
        let (get_minimumSignificantDigits : 'tags this -> float) =
          fun (x2239 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2239)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2241 : 'tags this) ->
            fun (x2242 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2241)
                "minimumSignificantDigits" (Ojs.float_to_js x2242)
        let (get_maximumSignificantDigits : 'tags this -> float) =
          fun (x2244 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2244)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2246 : 'tags this) ->
            fun (x2247 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2246)
                "maximumSignificantDigits" (Ojs.float_to_js x2247)
        let (get_useGrouping : 'tags this -> bool) =
          fun (x2249 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2249) "useGrouping")
        let (set_useGrouping : 'tags this -> bool -> unit) =
          fun (x2251 : 'tags this) ->
            fun (x2252 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2251) "useGrouping"
                (Ojs.bool_to_js x2252)
        let cast_from = Obj.magic
      end
    module ES2020NumberFormatPartType =
      struct
        type t =
          [ `L_s27_compact  | `L_s36_exponentInteger 
          | `L_s37_exponentMinusSign  | `L_s38_exponentSeparator 
          | `L_s95_unit  | `L_s96_unknown ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2255 : Ojs.t) ->
            let x2256 = x2255 in
            match Ojs.string_of_js x2256 with
            | "compact" -> `L_s27_compact
            | "exponentInteger" -> `L_s36_exponentInteger
            | "exponentMinusSign" -> `L_s37_exponentMinusSign
            | "exponentSeparator" -> `L_s38_exponentSeparator
            | "unit" -> `L_s95_unit
            | "unknown" -> `L_s96_unknown
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2254 :
              [ `L_s27_compact  | `L_s36_exponentInteger 
              | `L_s37_exponentMinusSign  | `L_s38_exponentSeparator 
              | `L_s95_unit  | `L_s96_unknown ])
            ->
            match x2254 with
            | `L_s27_compact -> Ojs.string_to_js "compact"
            | `L_s36_exponentInteger -> Ojs.string_to_js "exponentInteger"
            | `L_s37_exponentMinusSign ->
                Ojs.string_to_js "exponentMinusSign"
            | `L_s38_exponentSeparator ->
                Ojs.string_to_js "exponentSeparator"
            | `L_s95_unit -> Ojs.string_to_js "unit"
            | `L_s96_unknown -> Ojs.string_to_js "unknown"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2258 : Ojs.t) -> t_of_js x2258
        and t_0_to_js : t_0 -> Ojs.t = fun (x2257 : t) -> t_to_js x2257
      end
    module ES2018NumberFormatPartType =
      struct
        type t =
          [ `L_s26_code  | `L_s28_currency  | `L_s32_decimal 
          | `L_s41_fraction  | `L_s44_group  | `L_s51_infinity 
          | `L_s52_integer  | `L_s54_literal  | `L_s60_minusSign 
          | `L_s65_name  | `L_s66_nan  | `L_s77_percent 
          | `L_s78_percentSign  | `L_s79_plusSign  | `L_s91_symbol ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2260 : Ojs.t) ->
            let x2261 = x2260 in
            match Ojs.string_of_js x2261 with
            | "code" -> `L_s26_code
            | "currency" -> `L_s28_currency
            | "decimal" -> `L_s32_decimal
            | "fraction" -> `L_s41_fraction
            | "group" -> `L_s44_group
            | "infinity" -> `L_s51_infinity
            | "integer" -> `L_s52_integer
            | "literal" -> `L_s54_literal
            | "minusSign" -> `L_s60_minusSign
            | "name" -> `L_s65_name
            | "nan" -> `L_s66_nan
            | "percent" -> `L_s77_percent
            | "percentSign" -> `L_s78_percentSign
            | "plusSign" -> `L_s79_plusSign
            | "symbol" -> `L_s91_symbol
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2259 :
              [ `L_s26_code  | `L_s28_currency  | `L_s32_decimal 
              | `L_s41_fraction  | `L_s44_group  | `L_s51_infinity 
              | `L_s52_integer  | `L_s54_literal  | `L_s60_minusSign 
              | `L_s65_name  | `L_s66_nan  | `L_s77_percent 
              | `L_s78_percentSign  | `L_s79_plusSign  | `L_s91_symbol ])
            ->
            match x2259 with
            | `L_s26_code -> Ojs.string_to_js "code"
            | `L_s28_currency -> Ojs.string_to_js "currency"
            | `L_s32_decimal -> Ojs.string_to_js "decimal"
            | `L_s41_fraction -> Ojs.string_to_js "fraction"
            | `L_s44_group -> Ojs.string_to_js "group"
            | `L_s51_infinity -> Ojs.string_to_js "infinity"
            | `L_s52_integer -> Ojs.string_to_js "integer"
            | `L_s54_literal -> Ojs.string_to_js "literal"
            | `L_s60_minusSign -> Ojs.string_to_js "minusSign"
            | `L_s65_name -> Ojs.string_to_js "name"
            | `L_s66_nan -> Ojs.string_to_js "nan"
            | `L_s77_percent -> Ojs.string_to_js "percent"
            | `L_s78_percentSign -> Ojs.string_to_js "percentSign"
            | `L_s79_plusSign -> Ojs.string_to_js "plusSign"
            | `L_s91_symbol -> Ojs.string_to_js "symbol"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2263 : Ojs.t) -> t_of_js x2263
        and t_0_to_js : t_0 -> Ojs.t = fun (x2262 : t) -> t_to_js x2262
      end
    module NumberFormatPartTypes =
      struct
        type t =
          [ `L_s26_code  | `L_s27_compact  | `L_s28_currency 
          | `L_s32_decimal  | `L_s36_exponentInteger 
          | `L_s37_exponentMinusSign  | `L_s38_exponentSeparator 
          | `L_s41_fraction  | `L_s44_group  | `L_s51_infinity 
          | `L_s52_integer  | `L_s54_literal  | `L_s60_minusSign 
          | `L_s65_name  | `L_s66_nan  | `L_s77_percent 
          | `L_s78_percentSign  | `L_s79_plusSign  | `L_s91_symbol 
          | `L_s95_unit  | `L_s96_unknown ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2265 : Ojs.t) ->
            let x2266 = x2265 in
            match Ojs.string_of_js x2266 with
            | "code" -> `L_s26_code
            | "compact" -> `L_s27_compact
            | "currency" -> `L_s28_currency
            | "decimal" -> `L_s32_decimal
            | "exponentInteger" -> `L_s36_exponentInteger
            | "exponentMinusSign" -> `L_s37_exponentMinusSign
            | "exponentSeparator" -> `L_s38_exponentSeparator
            | "fraction" -> `L_s41_fraction
            | "group" -> `L_s44_group
            | "infinity" -> `L_s51_infinity
            | "integer" -> `L_s52_integer
            | "literal" -> `L_s54_literal
            | "minusSign" -> `L_s60_minusSign
            | "name" -> `L_s65_name
            | "nan" -> `L_s66_nan
            | "percent" -> `L_s77_percent
            | "percentSign" -> `L_s78_percentSign
            | "plusSign" -> `L_s79_plusSign
            | "symbol" -> `L_s91_symbol
            | "unit" -> `L_s95_unit
            | "unknown" -> `L_s96_unknown
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2264 :
              [ `L_s26_code  | `L_s27_compact  | `L_s28_currency 
              | `L_s32_decimal  | `L_s36_exponentInteger 
              | `L_s37_exponentMinusSign  | `L_s38_exponentSeparator 
              | `L_s41_fraction  | `L_s44_group  | `L_s51_infinity 
              | `L_s52_integer  | `L_s54_literal  | `L_s60_minusSign 
              | `L_s65_name  | `L_s66_nan  | `L_s77_percent 
              | `L_s78_percentSign  | `L_s79_plusSign  | `L_s91_symbol 
              | `L_s95_unit  | `L_s96_unknown ])
            ->
            match x2264 with
            | `L_s26_code -> Ojs.string_to_js "code"
            | `L_s27_compact -> Ojs.string_to_js "compact"
            | `L_s28_currency -> Ojs.string_to_js "currency"
            | `L_s32_decimal -> Ojs.string_to_js "decimal"
            | `L_s36_exponentInteger -> Ojs.string_to_js "exponentInteger"
            | `L_s37_exponentMinusSign ->
                Ojs.string_to_js "exponentMinusSign"
            | `L_s38_exponentSeparator ->
                Ojs.string_to_js "exponentSeparator"
            | `L_s41_fraction -> Ojs.string_to_js "fraction"
            | `L_s44_group -> Ojs.string_to_js "group"
            | `L_s51_infinity -> Ojs.string_to_js "infinity"
            | `L_s52_integer -> Ojs.string_to_js "integer"
            | `L_s54_literal -> Ojs.string_to_js "literal"
            | `L_s60_minusSign -> Ojs.string_to_js "minusSign"
            | `L_s65_name -> Ojs.string_to_js "name"
            | `L_s66_nan -> Ojs.string_to_js "nan"
            | `L_s77_percent -> Ojs.string_to_js "percent"
            | `L_s78_percentSign -> Ojs.string_to_js "percentSign"
            | `L_s79_plusSign -> Ojs.string_to_js "plusSign"
            | `L_s91_symbol -> Ojs.string_to_js "symbol"
            | `L_s95_unit -> Ojs.string_to_js "unit"
            | `L_s96_unknown -> Ojs.string_to_js "unknown"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2268 : Ojs.t) -> t_of_js x2268
        and t_0_to_js : t_0 -> Ojs.t = fun (x2267 : t) -> t_to_js x2267
      end
    module NumberFormatPart =
      struct
        type t = [ `Intl_NumberFormatPart ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2270 : Ojs.t) -> t_of_js x2270
        and t_0_to_js : t_0 -> Ojs.t = fun (x2269 : t) -> t_to_js x2269
        type tags = [ `Intl_NumberFormatPart ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_NumberFormatPart ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2273 : Ojs.t) -> intf_of_js __tags_of_js x2273
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2271 : __tags intf) -> intf_to_js __tags_to_js x2271
        let (get_type : 'tags this -> NumberFormatPartTypes.t) =
          fun (x2275 : 'tags this) ->
            NumberFormatPartTypes.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2275) "type")
        let (set_type : 'tags this -> NumberFormatPartTypes.t -> unit) =
          fun (x2277 : 'tags this) ->
            fun (x2278 : NumberFormatPartTypes.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2277) "type"
                (NumberFormatPartTypes.t_to_js x2278)
        let (get_value : 'tags this -> string) =
          fun (x2280 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2280) "value")
        let (set_value : 'tags this -> string -> unit) =
          fun (x2282 : 'tags this) ->
            fun (x2283 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2282) "value"
                (Ojs.string_to_js x2283)
        let cast_from = Obj.magic
      end
    module NumberFormatOptions =
      struct
        type t = [ `Intl_NumberFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2286 : Ojs.t) -> t_of_js x2286
        and t_0_to_js : t_0 -> Ojs.t = fun (x2285 : t) -> t_to_js x2285
        type tags = [ `Intl_NumberFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_NumberFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2289 : Ojs.t) -> intf_of_js __tags_of_js x2289
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2287 : __tags intf) -> intf_to_js __tags_to_js x2287
        let (get_compactDisplay :
          'tags this -> [ `L_s55_long  | `L_s88_short ] or_undefined) =
          fun (x2291 : 'tags this) ->
            or_undefined_of_js
              (fun (x2293 : Ojs.t) ->
                 let x2294 = x2293 in
                 match Ojs.string_of_js x2294 with
                 | "long" -> `L_s55_long
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2291)
                 "compactDisplay")
        let (set_compactDisplay :
          'tags this -> [ `L_s55_long  | `L_s88_short ] or_undefined -> unit)
          =
          fun (x2295 : 'tags this) ->
            fun (x2296 : [ `L_s55_long  | `L_s88_short ] or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2295)
                "compactDisplay"
                (or_undefined_to_js
                   (fun (x2297 : [ `L_s55_long  | `L_s88_short ]) ->
                      match x2297 with
                      | `L_s55_long -> Ojs.string_to_js "long"
                      | `L_s88_short -> Ojs.string_to_js "short") x2296)
        let (get_notation :
          'tags this ->
            [ `L_s27_compact  | `L_s34_engineering  | `L_s84_scientific 
            | `L_s89_standard ] or_undefined)
          =
          fun (x2299 : 'tags this) ->
            or_undefined_of_js
              (fun (x2301 : Ojs.t) ->
                 let x2302 = x2301 in
                 match Ojs.string_of_js x2302 with
                 | "compact" -> `L_s27_compact
                 | "engineering" -> `L_s34_engineering
                 | "scientific" -> `L_s84_scientific
                 | "standard" -> `L_s89_standard
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2299) "notation")
        let (set_notation :
          'tags this ->
            [ `L_s27_compact  | `L_s34_engineering  | `L_s84_scientific 
            | `L_s89_standard ] or_undefined -> unit)
          =
          fun (x2303 : 'tags this) ->
            fun
              (x2304 :
                [ `L_s27_compact  | `L_s34_engineering  | `L_s84_scientific 
                | `L_s89_standard ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2303) "notation"
                (or_undefined_to_js
                   (fun
                      (x2305 :
                        [ `L_s27_compact  | `L_s34_engineering 
                        | `L_s84_scientific  | `L_s89_standard ])
                      ->
                      match x2305 with
                      | `L_s27_compact -> Ojs.string_to_js "compact"
                      | `L_s34_engineering -> Ojs.string_to_js "engineering"
                      | `L_s84_scientific -> Ojs.string_to_js "scientific"
                      | `L_s89_standard -> Ojs.string_to_js "standard") x2304)
        let (get_signDisplay :
          'tags this ->
            [ `L_s21_always  | `L_s22_auto  | `L_s68_never ] or_undefined)
          =
          fun (x2307 : 'tags this) ->
            or_undefined_of_js
              (fun (x2309 : Ojs.t) ->
                 let x2310 = x2309 in
                 match Ojs.string_of_js x2310 with
                 | "always" -> `L_s21_always
                 | "auto" -> `L_s22_auto
                 | "never" -> `L_s68_never
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2307) "signDisplay")
        let (set_signDisplay :
          'tags this ->
            [ `L_s21_always  | `L_s22_auto  | `L_s68_never ] or_undefined ->
              unit)
          =
          fun (x2311 : 'tags this) ->
            fun
              (x2312 :
                [ `L_s21_always  | `L_s22_auto  | `L_s68_never ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2311) "signDisplay"
                (or_undefined_to_js
                   (fun
                      (x2313 :
                        [ `L_s21_always  | `L_s22_auto  | `L_s68_never ])
                      ->
                      match x2313 with
                      | `L_s21_always -> Ojs.string_to_js "always"
                      | `L_s22_auto -> Ojs.string_to_js "auto"
                      | `L_s68_never -> Ojs.string_to_js "never") x2312)
        let (get_unit : 'tags this -> string or_undefined) =
          fun (x2315 : 'tags this) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2315) "unit")
        let (set_unit : 'tags this -> string or_undefined -> unit) =
          fun (x2318 : 'tags this) ->
            fun (x2319 : string or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2318) "unit"
                (or_undefined_to_js Ojs.string_to_js x2319)
        let (get_unitDisplay :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined)
          =
          fun (x2322 : 'tags this) ->
            or_undefined_of_js
              (fun (x2324 : Ojs.t) ->
                 let x2325 = x2324 in
                 match Ojs.string_of_js x2325 with
                 | "long" -> `L_s55_long
                 | "narrow" -> `L_s67_narrow
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2322) "unitDisplay")
        let (set_unitDisplay :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined ->
              unit)
          =
          fun (x2326 : 'tags this) ->
            fun
              (x2327 :
                [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2326) "unitDisplay"
                (or_undefined_to_js
                   (fun
                      (x2328 :
                        [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ])
                      ->
                      match x2328 with
                      | `L_s55_long -> Ojs.string_to_js "long"
                      | `L_s67_narrow -> Ojs.string_to_js "narrow"
                      | `L_s88_short -> Ojs.string_to_js "short") x2327)
        let (get_localeMatcher : 'tags this -> string or_undefined) =
          fun (x2330 : 'tags this) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2330)
                 "localeMatcher")
        let (set_localeMatcher : 'tags this -> string or_undefined -> unit) =
          fun (x2333 : 'tags this) ->
            fun (x2334 : string or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2333) "localeMatcher"
                (or_undefined_to_js Ojs.string_to_js x2334)
        let (get_style : 'tags this -> string or_undefined) =
          fun (x2337 : 'tags this) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2337) "style")
        let (set_style : 'tags this -> string or_undefined -> unit) =
          fun (x2340 : 'tags this) ->
            fun (x2341 : string or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2340) "style"
                (or_undefined_to_js Ojs.string_to_js x2341)
        let (get_currency : 'tags this -> string or_undefined) =
          fun (x2344 : 'tags this) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2344) "currency")
        let (set_currency : 'tags this -> string or_undefined -> unit) =
          fun (x2347 : 'tags this) ->
            fun (x2348 : string or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2347) "currency"
                (or_undefined_to_js Ojs.string_to_js x2348)
        let (get_currencyDisplay : 'tags this -> string or_undefined) =
          fun (x2351 : 'tags this) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2351)
                 "currencyDisplay")
        let (set_currencyDisplay : 'tags this -> string or_undefined -> unit)
          =
          fun (x2354 : 'tags this) ->
            fun (x2355 : string or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2354)
                "currencyDisplay" (or_undefined_to_js Ojs.string_to_js x2355)
        let (get_currencySign : 'tags this -> string or_undefined) =
          fun (x2358 : 'tags this) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2358) "currencySign")
        let (set_currencySign : 'tags this -> string or_undefined -> unit) =
          fun (x2361 : 'tags this) ->
            fun (x2362 : string or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2361) "currencySign"
                (or_undefined_to_js Ojs.string_to_js x2362)
        let (get_useGrouping : 'tags this -> bool or_undefined) =
          fun (x2365 : 'tags this) ->
            or_undefined_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2365) "useGrouping")
        let (set_useGrouping : 'tags this -> bool or_undefined -> unit) =
          fun (x2368 : 'tags this) ->
            fun (x2369 : bool or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2368) "useGrouping"
                (or_undefined_to_js Ojs.bool_to_js x2369)
        let (get_minimumIntegerDigits : 'tags this -> float or_undefined) =
          fun (x2372 : 'tags this) ->
            or_undefined_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2372)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits :
          'tags this -> float or_undefined -> unit) =
          fun (x2375 : 'tags this) ->
            fun (x2376 : float or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2375)
                "minimumIntegerDigits"
                (or_undefined_to_js Ojs.float_to_js x2376)
        let (get_minimumFractionDigits : 'tags this -> float or_undefined) =
          fun (x2379 : 'tags this) ->
            or_undefined_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2379)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits :
          'tags this -> float or_undefined -> unit) =
          fun (x2382 : 'tags this) ->
            fun (x2383 : float or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2382)
                "minimumFractionDigits"
                (or_undefined_to_js Ojs.float_to_js x2383)
        let (get_maximumFractionDigits : 'tags this -> float or_undefined) =
          fun (x2386 : 'tags this) ->
            or_undefined_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2386)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits :
          'tags this -> float or_undefined -> unit) =
          fun (x2389 : 'tags this) ->
            fun (x2390 : float or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2389)
                "maximumFractionDigits"
                (or_undefined_to_js Ojs.float_to_js x2390)
        let (get_minimumSignificantDigits : 'tags this -> float or_undefined)
          =
          fun (x2393 : 'tags this) ->
            or_undefined_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2393)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits :
          'tags this -> float or_undefined -> unit) =
          fun (x2396 : 'tags this) ->
            fun (x2397 : float or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2396)
                "minimumSignificantDigits"
                (or_undefined_to_js Ojs.float_to_js x2397)
        let (get_maximumSignificantDigits : 'tags this -> float or_undefined)
          =
          fun (x2400 : 'tags this) ->
            or_undefined_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2400)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits :
          'tags this -> float or_undefined -> unit) =
          fun (x2403 : 'tags this) ->
            fun (x2404 : float or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2403)
                "maximumSignificantDigits"
                (or_undefined_to_js Ojs.float_to_js x2404)
        let cast_from = Obj.magic
      end
    module NumberFormat =
      struct
        type t = [ `Intl_NumberFormat ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2408 : Ojs.t) -> t_of_js x2408
        and t_0_to_js : t_0 -> Ojs.t = fun (x2407 : t) -> t_to_js x2407
        type tags = [ `Intl_NumberFormat ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_NumberFormat ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2411 : Ojs.t) -> intf_of_js __tags_of_js x2411
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2409 : __tags intf) -> intf_to_js __tags_to_js x2409
        let (formatRange :
          'tags this ->
            startDate:bigint or_number -> endDate:bigint or_number -> string)
          =
          fun (x2417 : 'tags this) ->
            fun ~startDate:(x2413 : bigint or_number) ->
              fun ~endDate:(x2415 : bigint or_number) ->
                Ojs.string_of_js
                  (Ojs.call (this_to_js Obj.magic x2417) "formatRange"
                     [|(or_number_to_js bigint_to_js x2413);(or_number_to_js
                                                               bigint_to_js
                                                               x2415)|])
        let (formatRangeToParts :
          'tags this ->
            startDate:bigint or_number ->
              endDate:bigint or_number -> NumberFormatPart.t list)
          =
          fun (x2423 : 'tags this) ->
            fun ~startDate:(x2419 : bigint or_number) ->
              fun ~endDate:(x2421 : bigint or_number) ->
                Ojs.list_of_js NumberFormatPart.t_of_js
                  (Ojs.call (this_to_js Obj.magic x2423) "formatRangeToParts"
                     [|(or_number_to_js bigint_to_js x2419);(or_number_to_js
                                                               bigint_to_js
                                                               x2421)|])
        let (format : 'tags this -> value:bigint or_number -> string) =
          fun (x2428 : 'tags this) ->
            fun ~value:(x2426 : bigint or_number) ->
              Ojs.string_of_js
                (Ojs.call (this_to_js Obj.magic x2428) "format"
                   [|(or_number_to_js bigint_to_js x2426)|])
        let (resolvedOptions : 'tags this -> ResolvedNumberFormatOptions.t) =
          fun (x2430 : 'tags this) ->
            ResolvedNumberFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2430) "resolvedOptions" [||])
        let (formatToParts :
          'tags this ->
            ?number:bigint or_number -> unit -> NumberFormatPart.t list)
          =
          fun (x2436 : 'tags this) ->
            fun ?number:(x2432 : bigint or_number option) ->
              fun () ->
                Ojs.list_of_js NumberFormatPart.t_of_js
                  (let x2438 = this_to_js Obj.magic x2436 in
                   Ojs.call (Ojs.get_prop_ascii x2438 "formatToParts")
                     "apply"
                     [|x2438;((let x2433 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x2432 with
                                | Some x2434 ->
                                    ignore
                                      (Ojs.call x2433 "push"
                                         [|(or_number_to_js bigint_to_js
                                              x2434)|])
                                | None -> ());
                               x2433))|])
        let (format' : 'tags this -> value:float -> string) =
          fun (x2441 : 'tags this) ->
            fun ~value:(x2440 : float) ->
              Ojs.string_of_js
                (Ojs.call (this_to_js Obj.magic x2441) "format"
                   [|(Ojs.float_to_js x2440)|])
        let (resolvedOptions' : 'tags this -> ResolvedNumberFormatOptions.t)
          =
          fun (x2443 : 'tags this) ->
            ResolvedNumberFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2443) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:string list or_string ->
            ?options:NumberFormatOptions.t -> unit -> t)
          =
          fun ?locales:(x2445 : string list or_string option) ->
            fun ?options:(x2446 : NumberFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "NumberFormat")
                     (let x2447 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2445 with
                       | Some x2449 ->
                           ignore
                             (Ojs.call x2447 "push"
                                [|(or_string_to_js
                                     (fun (x2450 : string list) ->
                                        Ojs.list_to_js Ojs.string_to_js x2450)
                                     x2449)|])
                       | None -> ());
                      (match x2446 with
                       | Some x2448 ->
                           ignore
                             (Ojs.call x2447 "push"
                                [|(NumberFormatOptions.t_to_js x2448)|])
                       | None -> ());
                      x2447))
        let (invoke :
          ?locales:string list or_string ->
            ?options:NumberFormatOptions.t -> unit -> t)
          =
          fun ?locales:(x2452 : string list or_string option) ->
            fun ?options:(x2453 : NumberFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "NumberFormat")
                     "apply"
                     [|Ojs.null;((let x2454 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x2452 with
                                   | Some x2456 ->
                                       ignore
                                         (Ojs.call x2454 "push"
                                            [|(or_string_to_js
                                                 (fun (x2457 : string list)
                                                    ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x2457)
                                                 x2456)|])
                                   | None -> ());
                                  (match x2453 with
                                   | Some x2455 ->
                                       ignore
                                         (Ojs.call x2454 "push"
                                            [|(NumberFormatOptions.t_to_js
                                                 x2455)|])
                                   | None -> ());
                                  x2454))|])
        let (supportedLocalesOf :
          locales:string list or_string ->
            ?options:NumberFormatOptions.t -> unit -> string list)
          =
          fun ~locales:(x2459 : string list or_string) ->
            fun ?options:(x2460 : NumberFormatOptions.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x2465 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "NumberFormat" in
                   Ojs.call (Ojs.get_prop_ascii x2465 "supportedLocalesOf")
                     "apply"
                     [|x2465;((let x2461 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2461 "push"
                                    [|(or_string_to_js
                                         (fun (x2463 : string list) ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x2463) x2459)|]);
                               (match x2460 with
                                | Some x2462 ->
                                    ignore
                                      (Ojs.call x2461 "push"
                                         [|(NumberFormatOptions.t_to_js x2462)|])
                                | None -> ());
                               x2461))|])
      end
    module LocaleHourCycleKey =
      struct
        type t = [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2468 : Ojs.t) ->
            let x2469 = x2468 in
            match Ojs.string_of_js x2469 with
            | "h11" -> `L_s45_h11
            | "h12" -> `L_s46_h12
            | "h23" -> `L_s47_h23
            | "h24" -> `L_s48_h24
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2467 :
              [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ])
            ->
            match x2467 with
            | `L_s45_h11 -> Ojs.string_to_js "h11"
            | `L_s46_h12 -> Ojs.string_to_js "h12"
            | `L_s47_h23 -> Ojs.string_to_js "h23"
            | `L_s48_h24 -> Ojs.string_to_js "h24"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2471 : Ojs.t) -> t_of_js x2471
        and t_0_to_js : t_0 -> Ojs.t = fun (x2470 : t) -> t_to_js x2470
      end
    module LocaleCollationCaseFirst =
      struct
        type t = [ `L_s39_false  | `L_s57_lower  | `L_s97_upper ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2473 : Ojs.t) ->
            let x2474 = x2473 in
            match Ojs.string_of_js x2474 with
            | "false" -> `L_s39_false
            | "lower" -> `L_s57_lower
            | "upper" -> `L_s97_upper
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2472 : [ `L_s39_false  | `L_s57_lower  | `L_s97_upper ]) ->
            match x2472 with
            | `L_s39_false -> Ojs.string_to_js "false"
            | `L_s57_lower -> Ojs.string_to_js "lower"
            | `L_s97_upper -> Ojs.string_to_js "upper"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2476 : Ojs.t) -> t_of_js x2476
        and t_0_to_js : t_0 -> Ojs.t = fun (x2475 : t) -> t_to_js x2475
      end
    module LocaleOptions =
      struct
        type t = [ `Intl_LocaleOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2478 : Ojs.t) -> t_of_js x2478
        and t_0_to_js : t_0 -> Ojs.t = fun (x2477 : t) -> t_to_js x2477
        type tags = [ `Intl_LocaleOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_LocaleOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2481 : Ojs.t) -> intf_of_js __tags_of_js x2481
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2479 : __tags intf) -> intf_to_js __tags_to_js x2479
        let (get_baseName : 'tags this -> string) =
          fun (x2483 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2483) "baseName")
        let (set_baseName : 'tags this -> string -> unit) =
          fun (x2485 : 'tags this) ->
            fun (x2486 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2485) "baseName"
                (Ojs.string_to_js x2486)
        let (get_calendar : 'tags this -> string) =
          fun (x2488 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2488) "calendar")
        let (set_calendar : 'tags this -> string -> unit) =
          fun (x2490 : 'tags this) ->
            fun (x2491 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2490) "calendar"
                (Ojs.string_to_js x2491)
        let (get_caseFirst : 'tags this -> LocaleCollationCaseFirst.t) =
          fun (x2493 : 'tags this) ->
            LocaleCollationCaseFirst.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2493) "caseFirst")
        let (set_caseFirst :
          'tags this -> LocaleCollationCaseFirst.t -> unit) =
          fun (x2495 : 'tags this) ->
            fun (x2496 : LocaleCollationCaseFirst.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2495) "caseFirst"
                (LocaleCollationCaseFirst.t_to_js x2496)
        let (get_collation : 'tags this -> string) =
          fun (x2498 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2498) "collation")
        let (set_collation : 'tags this -> string -> unit) =
          fun (x2500 : 'tags this) ->
            fun (x2501 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2500) "collation"
                (Ojs.string_to_js x2501)
        let (get_hourCycle : 'tags this -> LocaleHourCycleKey.t) =
          fun (x2503 : 'tags this) ->
            LocaleHourCycleKey.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2503) "hourCycle")
        let (set_hourCycle : 'tags this -> LocaleHourCycleKey.t -> unit) =
          fun (x2505 : 'tags this) ->
            fun (x2506 : LocaleHourCycleKey.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2505) "hourCycle"
                (LocaleHourCycleKey.t_to_js x2506)
        let (get_language : 'tags this -> string) =
          fun (x2508 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2508) "language")
        let (set_language : 'tags this -> string -> unit) =
          fun (x2510 : 'tags this) ->
            fun (x2511 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2510) "language"
                (Ojs.string_to_js x2511)
        let (get_numberingSystem : 'tags this -> string) =
          fun (x2513 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2513)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x2515 : 'tags this) ->
            fun (x2516 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2515)
                "numberingSystem" (Ojs.string_to_js x2516)
        let (get_numeric : 'tags this -> bool) =
          fun (x2518 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2518) "numeric")
        let (set_numeric : 'tags this -> bool -> unit) =
          fun (x2520 : 'tags this) ->
            fun (x2521 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2520) "numeric"
                (Ojs.bool_to_js x2521)
        let (get_region : 'tags this -> string) =
          fun (x2523 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2523) "region")
        let (set_region : 'tags this -> string -> unit) =
          fun (x2525 : 'tags this) ->
            fun (x2526 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2525) "region"
                (Ojs.string_to_js x2526)
        let (get_script : 'tags this -> string) =
          fun (x2528 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2528) "script")
        let (set_script : 'tags this -> string -> unit) =
          fun (x2530 : 'tags this) ->
            fun (x2531 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2530) "script"
                (Ojs.string_to_js x2531)
        let cast_from = Obj.magic
      end
    module BCP47LanguageTag =
      struct
        type t = string
        let rec t_of_js : Ojs.t -> t =
          fun (x2534 : Ojs.t) -> Ojs.string_of_js x2534
        and t_to_js : t -> Ojs.t =
          fun (x2533 : string) -> Ojs.string_to_js x2533
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2536 : Ojs.t) -> t_of_js x2536
        and t_0_to_js : t_0 -> Ojs.t = fun (x2535 : t) -> t_to_js x2535
      end
    module Locale =
      struct
        type t = [ `Intl_Locale  | `Intl_LocaleOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2538 : Ojs.t) -> t_of_js x2538
        and t_0_to_js : t_0 -> Ojs.t = fun (x2537 : t) -> t_to_js x2537
        type tags = [ `Intl_Locale  | `Intl_LocaleOptions ]
        type tags_0 = tags
        type 'tags this = 'tags intf constraint 'tags = [> `Intl_Locale ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2541 : Ojs.t) -> intf_of_js __tags_of_js x2541
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2539 : __tags intf) -> intf_to_js __tags_to_js x2539
        let (maximize : 'tags this -> t) =
          fun (x2543 : 'tags this) ->
            t_of_js (Ojs.call (this_to_js Obj.magic x2543) "maximize" [||])
        let (minimize : 'tags this -> t) =
          fun (x2545 : 'tags this) ->
            t_of_js (Ojs.call (this_to_js Obj.magic x2545) "minimize" [||])
        let (toString : 'tags this -> BCP47LanguageTag.t) =
          fun (x2547 : 'tags this) ->
            BCP47LanguageTag.t_of_js
              (Ojs.call (this_to_js Obj.magic x2547) "toString" [||])
        let cast_from = Obj.magic
        let (create :
          ?tag:BCP47LanguageTag.t -> ?options:LocaleOptions.t -> unit -> t) =
          fun ?tag:(x2549 : BCP47LanguageTag.t option) ->
            fun ?options:(x2550 : LocaleOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "Locale")
                     (let x2551 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2549 with
                       | Some x2553 ->
                           ignore
                             (Ojs.call x2551 "push"
                                [|(BCP47LanguageTag.t_to_js x2553)|])
                       | None -> ());
                      (match x2550 with
                       | Some x2552 ->
                           ignore
                             (Ojs.call x2551 "push"
                                [|(LocaleOptions.t_to_js x2552)|])
                       | None -> ());
                      x2551))
      end
    module DisplayNamesOptions =
      struct
        type t = [ `Intl_DisplayNamesOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2555 : Ojs.t) -> t_of_js x2555
        and t_0_to_js : t_0 -> Ojs.t = fun (x2554 : t) -> t_to_js x2554
        type tags = [ `Intl_DisplayNamesOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DisplayNamesOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2558 : Ojs.t) -> intf_of_js __tags_of_js x2558
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2556 : __tags intf) -> intf_to_js __tags_to_js x2556
        let (get_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t) =
          fun (x2560 : 'tags this) ->
            RelativeTimeFormatLocaleMatcher.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2560)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit) =
          fun (x2562 : 'tags this) ->
            fun (x2563 : RelativeTimeFormatLocaleMatcher.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2562) "localeMatcher"
                (RelativeTimeFormatLocaleMatcher.t_to_js x2563)
        let (get_style : 'tags this -> RelativeTimeFormatStyle.t) =
          fun (x2565 : 'tags this) ->
            RelativeTimeFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2565) "style")
        let (set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit) =
          fun (x2567 : 'tags this) ->
            fun (x2568 : RelativeTimeFormatStyle.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2567) "style"
                (RelativeTimeFormatStyle.t_to_js x2568)
        let (get_type :
          'tags this ->
            [ `L_s28_currency  | `L_s53_language  | `L_s82_region 
            | `L_s85_script ])
          =
          fun (x2570 : 'tags this) ->
            let x2572 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2570) "type" in
            match Ojs.string_of_js x2572 with
            | "currency" -> `L_s28_currency
            | "language" -> `L_s53_language
            | "region" -> `L_s82_region
            | "script" -> `L_s85_script
            | _ -> assert false
        let (set_type :
          'tags this ->
            [ `L_s28_currency  | `L_s53_language  | `L_s82_region 
            | `L_s85_script ] -> unit)
          =
          fun (x2573 : 'tags this) ->
            fun
              (x2574 :
                [ `L_s28_currency  | `L_s53_language  | `L_s82_region 
                | `L_s85_script ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2573) "type"
                (match x2574 with
                 | `L_s28_currency -> Ojs.string_to_js "currency"
                 | `L_s53_language -> Ojs.string_to_js "language"
                 | `L_s82_region -> Ojs.string_to_js "region"
                 | `L_s85_script -> Ojs.string_to_js "script")
        let (get_fallback : 'tags this -> [ `L_s26_code  | `L_s69_none ]) =
          fun (x2576 : 'tags this) ->
            let x2578 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2576) "fallback" in
            match Ojs.string_of_js x2578 with
            | "code" -> `L_s26_code
            | "none" -> `L_s69_none
            | _ -> assert false
        let (set_fallback :
          'tags this -> [ `L_s26_code  | `L_s69_none ] -> unit) =
          fun (x2579 : 'tags this) ->
            fun (x2580 : [ `L_s26_code  | `L_s69_none ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2579) "fallback"
                (match x2580 with
                 | `L_s26_code -> Ojs.string_to_js "code"
                 | `L_s69_none -> Ojs.string_to_js "none")
        let cast_from = Obj.magic
      end
    module DisplayNames =
      struct
        module AnonymousInterface2 =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x2583 : Ojs.t) -> x2583
            and t_to_js : t -> Ojs.t = fun (x2582 : Ojs.t) -> x2582
            let (get_localeMatcher : t -> RelativeTimeFormatLocaleMatcher.t)
              =
              fun (x2584 : t) ->
                RelativeTimeFormatLocaleMatcher.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x2584) "localeMatcher")
            let (set_localeMatcher :
              t -> RelativeTimeFormatLocaleMatcher.t -> unit) =
              fun (x2585 : t) ->
                fun (x2586 : RelativeTimeFormatLocaleMatcher.t) ->
                  Ojs.set_prop_ascii (t_to_js x2585) "localeMatcher"
                    (RelativeTimeFormatLocaleMatcher.t_to_js x2586)
          end
        type t = [ `Intl_DisplayNames ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2588 : Ojs.t) -> t_of_js x2588
        and t_0_to_js : t_0 -> Ojs.t = fun (x2587 : t) -> t_to_js x2587
        type tags = [ `Intl_DisplayNames ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DisplayNames ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2591 : Ojs.t) -> intf_of_js __tags_of_js x2591
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2589 : __tags intf) -> intf_to_js __tags_to_js x2589
        let (of_ : 'tags this -> code:string -> string) =
          fun (x2594 : 'tags this) ->
            fun ~code:(x2593 : string) ->
              Ojs.string_of_js
                (Ojs.call (this_to_js Obj.magic x2594) "of"
                   [|(Ojs.string_to_js x2593)|])
        let (resolvedOptions : 'tags this -> DisplayNamesOptions.t) =
          fun (x2596 : 'tags this) ->
            DisplayNamesOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2596) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (prototype : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl")
                    "DisplayNames") "prototype")
        let (create :
          ?locales:(BCP47LanguageTag.t, BCP47LanguageTag.t) or_array ->
            ?options:DisplayNamesOptions.t Partial.t -> unit -> t)
          =
          fun
            ?locales:(x2598 :
                       (BCP47LanguageTag.t, BCP47LanguageTag.t) or_array
                         option)
            ->
            fun ?options:(x2599 : DisplayNamesOptions.t Partial.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "DisplayNames")
                     (let x2600 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2598 with
                       | Some x2603 ->
                           ignore
                             (Ojs.call x2600 "push"
                                [|(or_array_to_js BCP47LanguageTag.t_to_js
                                     BCP47LanguageTag.t_to_js x2603)|])
                       | None -> ());
                      (match x2599 with
                       | Some x2601 ->
                           ignore
                             (Ojs.call x2600 "push"
                                [|(Partial.t_to_js
                                     DisplayNamesOptions.t_to_js x2601)|])
                       | None -> ());
                      x2600))
        let (supportedLocalesOf :
          locales:(BCP47LanguageTag.t, BCP47LanguageTag.t) or_array ->
            ?options:AnonymousInterface2.t -> unit -> BCP47LanguageTag.t list)
          =
          fun
            ~locales:(x2606 :
                       (BCP47LanguageTag.t, BCP47LanguageTag.t) or_array)
            ->
            fun ?options:(x2607 : AnonymousInterface2.t option) ->
              fun () ->
                Ojs.list_of_js BCP47LanguageTag.t_of_js
                  (let x2612 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "DisplayNames" in
                   Ojs.call (Ojs.get_prop_ascii x2612 "supportedLocalesOf")
                     "apply"
                     [|x2612;((let x2608 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2608 "push"
                                    [|(or_array_to_js
                                         BCP47LanguageTag.t_to_js
                                         BCP47LanguageTag.t_to_js x2606)|]);
                               (match x2607 with
                                | Some x2609 ->
                                    ignore
                                      (Ojs.call x2608 "push"
                                         [|(AnonymousInterface2.t_to_js x2609)|])
                                | None -> ());
                               x2608))|])
      end
    module ResolvedDateTimeFormatOptions =
      struct
        type t = [ `Intl_ResolvedDateTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2615 : Ojs.t) -> t_of_js x2615
        and t_0_to_js : t_0 -> Ojs.t = fun (x2614 : t) -> t_to_js x2614
        type tags = [ `Intl_ResolvedDateTimeFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `Intl_ResolvedDateTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2618 : Ojs.t) -> intf_of_js __tags_of_js x2618
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2616 : __tags intf) -> intf_to_js __tags_to_js x2616
        let (get_formatMatcher :
          'tags this -> [ `L_s23_basic  | `L_s24_best_fit ]) =
          fun (x2620 : 'tags this) ->
            let x2622 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2620) "formatMatcher" in
            match Ojs.string_of_js x2622 with
            | "basic" -> `L_s23_basic
            | "best fit" -> `L_s24_best_fit
            | _ -> assert false
        let (set_formatMatcher :
          'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] -> unit) =
          fun (x2623 : 'tags this) ->
            fun (x2624 : [ `L_s23_basic  | `L_s24_best_fit ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2623) "formatMatcher"
                (match x2624 with
                 | `L_s23_basic -> Ojs.string_to_js "basic"
                 | `L_s24_best_fit -> Ojs.string_to_js "best fit")
        let (get_dateStyle :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ])
          =
          fun (x2626 : 'tags this) ->
            let x2628 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2626) "dateStyle" in
            match Ojs.string_of_js x2628 with
            | "full" -> `L_s43_full
            | "long" -> `L_s55_long
            | "medium" -> `L_s59_medium
            | "short" -> `L_s88_short
            | _ -> assert false
        let (set_dateStyle :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ]
              -> unit)
          =
          fun (x2629 : 'tags this) ->
            fun
              (x2630 :
                [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                | `L_s88_short ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2629) "dateStyle"
                (match x2630 with
                 | `L_s43_full -> Ojs.string_to_js "full"
                 | `L_s55_long -> Ojs.string_to_js "long"
                 | `L_s59_medium -> Ojs.string_to_js "medium"
                 | `L_s88_short -> Ojs.string_to_js "short")
        let (get_timeStyle :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ])
          =
          fun (x2632 : 'tags this) ->
            let x2634 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2632) "timeStyle" in
            match Ojs.string_of_js x2634 with
            | "full" -> `L_s43_full
            | "long" -> `L_s55_long
            | "medium" -> `L_s59_medium
            | "short" -> `L_s88_short
            | _ -> assert false
        let (set_timeStyle :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ]
              -> unit)
          =
          fun (x2635 : 'tags this) ->
            fun
              (x2636 :
                [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                | `L_s88_short ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2635) "timeStyle"
                (match x2636 with
                 | `L_s43_full -> Ojs.string_to_js "full"
                 | `L_s55_long -> Ojs.string_to_js "long"
                 | `L_s59_medium -> Ojs.string_to_js "medium"
                 | `L_s88_short -> Ojs.string_to_js "short")
        let (get_hourCycle :
          'tags this ->
            [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ])
          =
          fun (x2638 : 'tags this) ->
            let x2640 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2638) "hourCycle" in
            match Ojs.string_of_js x2640 with
            | "h11" -> `L_s45_h11
            | "h12" -> `L_s46_h12
            | "h23" -> `L_s47_h23
            | "h24" -> `L_s48_h24
            | _ -> assert false
        let (set_hourCycle :
          'tags this ->
            [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ] -> unit)
          =
          fun (x2641 : 'tags this) ->
            fun
              (x2642 :
                [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2641) "hourCycle"
                (match x2642 with
                 | `L_s45_h11 -> Ojs.string_to_js "h11"
                 | `L_s46_h12 -> Ojs.string_to_js "h12"
                 | `L_s47_h23 -> Ojs.string_to_js "h23"
                 | `L_s48_h24 -> Ojs.string_to_js "h24")
        let (get_dayPeriod :
          'tags this -> [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ]) =
          fun (x2644 : 'tags this) ->
            let x2646 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2644) "dayPeriod" in
            match Ojs.string_of_js x2646 with
            | "long" -> `L_s55_long
            | "narrow" -> `L_s67_narrow
            | "short" -> `L_s88_short
            | _ -> assert false
        let (set_dayPeriod :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] -> unit)
          =
          fun (x2647 : 'tags this) ->
            fun (x2648 : [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2647) "dayPeriod"
                (match x2648 with
                 | `L_s55_long -> Ojs.string_to_js "long"
                 | `L_s67_narrow -> Ojs.string_to_js "narrow"
                 | `L_s88_short -> Ojs.string_to_js "short")
        let (get_fractionalSecondDigits :
          'tags this -> [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ]) =
          fun (x2650 : 'tags this) ->
            let x2652 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2650)
                "fractionalSecondDigits" in
            match Ojs.int_of_js x2652 with
            | 0 -> `L_n_0
            | 1 -> `L_n_1
            | 2 -> `L_n_2
            | 3 -> `L_n_3
            | _ -> assert false
        let (set_fractionalSecondDigits :
          'tags this -> [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ] -> unit) =
          fun (x2653 : 'tags this) ->
            fun (x2654 : [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2653)
                "fractionalSecondDigits"
                (match x2654 with
                 | `L_n_0 -> Ojs.int_to_js 0
                 | `L_n_1 -> Ojs.int_to_js 1
                 | `L_n_2 -> Ojs.int_to_js 2
                 | `L_n_3 -> Ojs.int_to_js 3)
        let (get_locale : 'tags this -> string) =
          fun (x2656 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2656) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x2658 : 'tags this) ->
            fun (x2659 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2658) "locale"
                (Ojs.string_to_js x2659)
        let (get_calendar : 'tags this -> string) =
          fun (x2661 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2661) "calendar")
        let (set_calendar : 'tags this -> string -> unit) =
          fun (x2663 : 'tags this) ->
            fun (x2664 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2663) "calendar"
                (Ojs.string_to_js x2664)
        let (get_numberingSystem : 'tags this -> string) =
          fun (x2666 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2666)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x2668 : 'tags this) ->
            fun (x2669 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2668)
                "numberingSystem" (Ojs.string_to_js x2669)
        let (get_timeZone : 'tags this -> string) =
          fun (x2671 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2671) "timeZone")
        let (set_timeZone : 'tags this -> string -> unit) =
          fun (x2673 : 'tags this) ->
            fun (x2674 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2673) "timeZone"
                (Ojs.string_to_js x2674)
        let (get_hour12 : 'tags this -> bool) =
          fun (x2676 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2676) "hour12")
        let (set_hour12 : 'tags this -> bool -> unit) =
          fun (x2678 : 'tags this) ->
            fun (x2679 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2678) "hour12"
                (Ojs.bool_to_js x2679)
        let (get_weekday : 'tags this -> string) =
          fun (x2681 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2681) "weekday")
        let (set_weekday : 'tags this -> string -> unit) =
          fun (x2683 : 'tags this) ->
            fun (x2684 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2683) "weekday"
                (Ojs.string_to_js x2684)
        let (get_era : 'tags this -> string) =
          fun (x2686 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2686) "era")
        let (set_era : 'tags this -> string -> unit) =
          fun (x2688 : 'tags this) ->
            fun (x2689 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2688) "era"
                (Ojs.string_to_js x2689)
        let (get_year : 'tags this -> string) =
          fun (x2691 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2691) "year")
        let (set_year : 'tags this -> string -> unit) =
          fun (x2693 : 'tags this) ->
            fun (x2694 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2693) "year"
                (Ojs.string_to_js x2694)
        let (get_month : 'tags this -> string) =
          fun (x2696 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2696) "month")
        let (set_month : 'tags this -> string -> unit) =
          fun (x2698 : 'tags this) ->
            fun (x2699 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2698) "month"
                (Ojs.string_to_js x2699)
        let (get_day : 'tags this -> string) =
          fun (x2701 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2701) "day")
        let (set_day : 'tags this -> string -> unit) =
          fun (x2703 : 'tags this) ->
            fun (x2704 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2703) "day"
                (Ojs.string_to_js x2704)
        let (get_hour : 'tags this -> string) =
          fun (x2706 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2706) "hour")
        let (set_hour : 'tags this -> string -> unit) =
          fun (x2708 : 'tags this) ->
            fun (x2709 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2708) "hour"
                (Ojs.string_to_js x2709)
        let (get_minute : 'tags this -> string) =
          fun (x2711 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2711) "minute")
        let (set_minute : 'tags this -> string -> unit) =
          fun (x2713 : 'tags this) ->
            fun (x2714 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2713) "minute"
                (Ojs.string_to_js x2714)
        let (get_second : 'tags this -> string) =
          fun (x2716 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2716) "second")
        let (set_second : 'tags this -> string -> unit) =
          fun (x2718 : 'tags this) ->
            fun (x2719 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2718) "second"
                (Ojs.string_to_js x2719)
        let (get_timeZoneName : 'tags this -> string) =
          fun (x2721 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2721) "timeZoneName")
        let (set_timeZoneName : 'tags this -> string -> unit) =
          fun (x2723 : 'tags this) ->
            fun (x2724 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2723) "timeZoneName"
                (Ojs.string_to_js x2724)
        let cast_from = Obj.magic
      end
    module DateTimeFormatPartTypes =
      struct
        type t =
          [ `L_s101_year  | `L_s29_day  | `L_s30_dayPeriod  | `L_s35_era 
          | `L_s49_hour  | `L_s54_literal  | `L_s61_minute  | `L_s63_month 
          | `L_s86_second  | `L_s92_timeZoneName  | `L_s99_weekday ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2727 : Ojs.t) ->
            let x2728 = x2727 in
            match Ojs.string_of_js x2728 with
            | "year" -> `L_s101_year
            | "day" -> `L_s29_day
            | "dayPeriod" -> `L_s30_dayPeriod
            | "era" -> `L_s35_era
            | "hour" -> `L_s49_hour
            | "literal" -> `L_s54_literal
            | "minute" -> `L_s61_minute
            | "month" -> `L_s63_month
            | "second" -> `L_s86_second
            | "timeZoneName" -> `L_s92_timeZoneName
            | "weekday" -> `L_s99_weekday
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2726 :
              [ `L_s101_year  | `L_s29_day  | `L_s30_dayPeriod  | `L_s35_era 
              | `L_s49_hour  | `L_s54_literal  | `L_s61_minute 
              | `L_s63_month  | `L_s86_second  | `L_s92_timeZoneName 
              | `L_s99_weekday ])
            ->
            match x2726 with
            | `L_s101_year -> Ojs.string_to_js "year"
            | `L_s29_day -> Ojs.string_to_js "day"
            | `L_s30_dayPeriod -> Ojs.string_to_js "dayPeriod"
            | `L_s35_era -> Ojs.string_to_js "era"
            | `L_s49_hour -> Ojs.string_to_js "hour"
            | `L_s54_literal -> Ojs.string_to_js "literal"
            | `L_s61_minute -> Ojs.string_to_js "minute"
            | `L_s63_month -> Ojs.string_to_js "month"
            | `L_s86_second -> Ojs.string_to_js "second"
            | `L_s92_timeZoneName -> Ojs.string_to_js "timeZoneName"
            | `L_s99_weekday -> Ojs.string_to_js "weekday"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2730 : Ojs.t) -> t_of_js x2730
        and t_0_to_js : t_0 -> Ojs.t = fun (x2729 : t) -> t_to_js x2729
      end
    module DateTimeFormatPart =
      struct
        type t = [ `Intl_DateTimeFormatPart ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2732 : Ojs.t) -> t_of_js x2732
        and t_0_to_js : t_0 -> Ojs.t = fun (x2731 : t) -> t_to_js x2731
        type tags = [ `Intl_DateTimeFormatPart ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DateTimeFormatPart ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2735 : Ojs.t) -> intf_of_js __tags_of_js x2735
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2733 : __tags intf) -> intf_to_js __tags_to_js x2733
        let (get_type : 'tags this -> DateTimeFormatPartTypes.t) =
          fun (x2737 : 'tags this) ->
            DateTimeFormatPartTypes.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2737) "type")
        let (set_type : 'tags this -> DateTimeFormatPartTypes.t -> unit) =
          fun (x2739 : 'tags this) ->
            fun (x2740 : DateTimeFormatPartTypes.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2739) "type"
                (DateTimeFormatPartTypes.t_to_js x2740)
        let (get_value : 'tags this -> string) =
          fun (x2742 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2742) "value")
        let (set_value : 'tags this -> string -> unit) =
          fun (x2744 : 'tags this) ->
            fun (x2745 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2744) "value"
                (Ojs.string_to_js x2745)
        let cast_from = Obj.magic
      end
    module DateTimeFormatOptions =
      struct
        type t = [ `Intl_DateTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2748 : Ojs.t) -> t_of_js x2748
        and t_0_to_js : t_0 -> Ojs.t = fun (x2747 : t) -> t_to_js x2747
        type tags = [ `Intl_DateTimeFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DateTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2751 : Ojs.t) -> intf_of_js __tags_of_js x2751
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2749 : __tags intf) -> intf_to_js __tags_to_js x2749
        let (get_formatMatcher :
          'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] or_undefined) =
          fun (x2753 : 'tags this) ->
            or_undefined_of_js
              (fun (x2755 : Ojs.t) ->
                 let x2756 = x2755 in
                 match Ojs.string_of_js x2756 with
                 | "basic" -> `L_s23_basic
                 | "best fit" -> `L_s24_best_fit
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2753)
                 "formatMatcher")
        let (set_formatMatcher :
          'tags this ->
            [ `L_s23_basic  | `L_s24_best_fit ] or_undefined -> unit)
          =
          fun (x2757 : 'tags this) ->
            fun (x2758 : [ `L_s23_basic  | `L_s24_best_fit ] or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2757) "formatMatcher"
                (or_undefined_to_js
                   (fun (x2759 : [ `L_s23_basic  | `L_s24_best_fit ]) ->
                      match x2759 with
                      | `L_s23_basic -> Ojs.string_to_js "basic"
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit") x2758)
        let (get_dateStyle :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ]
              or_undefined)
          =
          fun (x2761 : 'tags this) ->
            or_undefined_of_js
              (fun (x2763 : Ojs.t) ->
                 let x2764 = x2763 in
                 match Ojs.string_of_js x2764 with
                 | "full" -> `L_s43_full
                 | "long" -> `L_s55_long
                 | "medium" -> `L_s59_medium
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2761) "dateStyle")
        let (set_dateStyle :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ]
              or_undefined -> unit)
          =
          fun (x2765 : 'tags this) ->
            fun
              (x2766 :
                [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                | `L_s88_short ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2765) "dateStyle"
                (or_undefined_to_js
                   (fun
                      (x2767 :
                        [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                        | `L_s88_short ])
                      ->
                      match x2767 with
                      | `L_s43_full -> Ojs.string_to_js "full"
                      | `L_s55_long -> Ojs.string_to_js "long"
                      | `L_s59_medium -> Ojs.string_to_js "medium"
                      | `L_s88_short -> Ojs.string_to_js "short") x2766)
        let (get_timeStyle :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ]
              or_undefined)
          =
          fun (x2769 : 'tags this) ->
            or_undefined_of_js
              (fun (x2771 : Ojs.t) ->
                 let x2772 = x2771 in
                 match Ojs.string_of_js x2772 with
                 | "full" -> `L_s43_full
                 | "long" -> `L_s55_long
                 | "medium" -> `L_s59_medium
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2769) "timeStyle")
        let (set_timeStyle :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ]
              or_undefined -> unit)
          =
          fun (x2773 : 'tags this) ->
            fun
              (x2774 :
                [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                | `L_s88_short ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2773) "timeStyle"
                (or_undefined_to_js
                   (fun
                      (x2775 :
                        [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                        | `L_s88_short ])
                      ->
                      match x2775 with
                      | `L_s43_full -> Ojs.string_to_js "full"
                      | `L_s55_long -> Ojs.string_to_js "long"
                      | `L_s59_medium -> Ojs.string_to_js "medium"
                      | `L_s88_short -> Ojs.string_to_js "short") x2774)
        let (get_dayPeriod :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined)
          =
          fun (x2777 : 'tags this) ->
            or_undefined_of_js
              (fun (x2779 : Ojs.t) ->
                 let x2780 = x2779 in
                 match Ojs.string_of_js x2780 with
                 | "long" -> `L_s55_long
                 | "narrow" -> `L_s67_narrow
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2777) "dayPeriod")
        let (set_dayPeriod :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined ->
              unit)
          =
          fun (x2781 : 'tags this) ->
            fun
              (x2782 :
                [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2781) "dayPeriod"
                (or_undefined_to_js
                   (fun
                      (x2783 :
                        [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ])
                      ->
                      match x2783 with
                      | `L_s55_long -> Ojs.string_to_js "long"
                      | `L_s67_narrow -> Ojs.string_to_js "narrow"
                      | `L_s88_short -> Ojs.string_to_js "short") x2782)
        let (get_fractionalSecondDigits :
          'tags this -> [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ] or_undefined)
          =
          fun (x2785 : 'tags this) ->
            or_undefined_of_js
              (fun (x2787 : Ojs.t) ->
                 let x2788 = x2787 in
                 match Ojs.int_of_js x2788 with
                 | 0 -> `L_n_0
                 | 1 -> `L_n_1
                 | 2 -> `L_n_2
                 | 3 -> `L_n_3
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2785)
                 "fractionalSecondDigits")
        let (set_fractionalSecondDigits :
          'tags this ->
            [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ] or_undefined -> unit)
          =
          fun (x2789 : 'tags this) ->
            fun
              (x2790 : [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2789)
                "fractionalSecondDigits"
                (or_undefined_to_js
                   (fun (x2791 : [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ]) ->
                      match x2791 with
                      | `L_n_0 -> Ojs.int_to_js 0
                      | `L_n_1 -> Ojs.int_to_js 1
                      | `L_n_2 -> Ojs.int_to_js 2
                      | `L_n_3 -> Ojs.int_to_js 3) x2790)
        let (get_calendar : 'tags this -> string or_undefined) =
          fun (x2793 : 'tags this) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2793) "calendar")
        let (set_calendar : 'tags this -> string or_undefined -> unit) =
          fun (x2796 : 'tags this) ->
            fun (x2797 : string or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2796) "calendar"
                (or_undefined_to_js Ojs.string_to_js x2797)
        let (get_dayPeriod' :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined)
          =
          fun (x2800 : 'tags this) ->
            or_undefined_of_js
              (fun (x2802 : Ojs.t) ->
                 let x2803 = x2802 in
                 match Ojs.string_of_js x2803 with
                 | "long" -> `L_s55_long
                 | "narrow" -> `L_s67_narrow
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2800) "dayPeriod")
        let (set_dayPeriod' :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined ->
              unit)
          =
          fun (x2804 : 'tags this) ->
            fun
              (x2805 :
                [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2804) "dayPeriod"
                (or_undefined_to_js
                   (fun
                      (x2806 :
                        [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ])
                      ->
                      match x2806 with
                      | `L_s55_long -> Ojs.string_to_js "long"
                      | `L_s67_narrow -> Ojs.string_to_js "narrow"
                      | `L_s88_short -> Ojs.string_to_js "short") x2805)
        let (get_numberingSystem : 'tags this -> string or_undefined) =
          fun (x2808 : 'tags this) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2808)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string or_undefined -> unit)
          =
          fun (x2811 : 'tags this) ->
            fun (x2812 : string or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2811)
                "numberingSystem" (or_undefined_to_js Ojs.string_to_js x2812)
        let (get_dateStyle' :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ]
              or_undefined)
          =
          fun (x2815 : 'tags this) ->
            or_undefined_of_js
              (fun (x2817 : Ojs.t) ->
                 let x2818 = x2817 in
                 match Ojs.string_of_js x2818 with
                 | "full" -> `L_s43_full
                 | "long" -> `L_s55_long
                 | "medium" -> `L_s59_medium
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2815) "dateStyle")
        let (set_dateStyle' :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ]
              or_undefined -> unit)
          =
          fun (x2819 : 'tags this) ->
            fun
              (x2820 :
                [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                | `L_s88_short ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2819) "dateStyle"
                (or_undefined_to_js
                   (fun
                      (x2821 :
                        [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                        | `L_s88_short ])
                      ->
                      match x2821 with
                      | `L_s43_full -> Ojs.string_to_js "full"
                      | `L_s55_long -> Ojs.string_to_js "long"
                      | `L_s59_medium -> Ojs.string_to_js "medium"
                      | `L_s88_short -> Ojs.string_to_js "short") x2820)
        let (get_timeStyle' :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ]
              or_undefined)
          =
          fun (x2823 : 'tags this) ->
            or_undefined_of_js
              (fun (x2825 : Ojs.t) ->
                 let x2826 = x2825 in
                 match Ojs.string_of_js x2826 with
                 | "full" -> `L_s43_full
                 | "long" -> `L_s55_long
                 | "medium" -> `L_s59_medium
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2823) "timeStyle")
        let (set_timeStyle' :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ]
              or_undefined -> unit)
          =
          fun (x2827 : 'tags this) ->
            fun
              (x2828 :
                [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                | `L_s88_short ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2827) "timeStyle"
                (or_undefined_to_js
                   (fun
                      (x2829 :
                        [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                        | `L_s88_short ])
                      ->
                      match x2829 with
                      | `L_s43_full -> Ojs.string_to_js "full"
                      | `L_s55_long -> Ojs.string_to_js "long"
                      | `L_s59_medium -> Ojs.string_to_js "medium"
                      | `L_s88_short -> Ojs.string_to_js "short") x2828)
        let (get_hourCycle :
          'tags this ->
            [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ]
              or_undefined)
          =
          fun (x2831 : 'tags this) ->
            or_undefined_of_js
              (fun (x2833 : Ojs.t) ->
                 let x2834 = x2833 in
                 match Ojs.string_of_js x2834 with
                 | "h11" -> `L_s45_h11
                 | "h12" -> `L_s46_h12
                 | "h23" -> `L_s47_h23
                 | "h24" -> `L_s48_h24
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2831) "hourCycle")
        let (set_hourCycle :
          'tags this ->
            [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ]
              or_undefined -> unit)
          =
          fun (x2835 : 'tags this) ->
            fun
              (x2836 :
                [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ]
                  or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2835) "hourCycle"
                (or_undefined_to_js
                   (fun
                      (x2837 :
                        [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23 
                        | `L_s48_h24 ])
                      ->
                      match x2837 with
                      | `L_s45_h11 -> Ojs.string_to_js "h11"
                      | `L_s46_h12 -> Ojs.string_to_js "h12"
                      | `L_s47_h23 -> Ojs.string_to_js "h23"
                      | `L_s48_h24 -> Ojs.string_to_js "h24") x2836)
        let (get_localeMatcher :
          'tags this -> [ `L_s24_best_fit  | `L_s56_lookup ] or_undefined) =
          fun (x2839 : 'tags this) ->
            or_undefined_of_js
              (fun (x2841 : Ojs.t) ->
                 let x2842 = x2841 in
                 match Ojs.string_of_js x2842 with
                 | "best fit" -> `L_s24_best_fit
                 | "lookup" -> `L_s56_lookup
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2839)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this ->
            [ `L_s24_best_fit  | `L_s56_lookup ] or_undefined -> unit)
          =
          fun (x2843 : 'tags this) ->
            fun (x2844 : [ `L_s24_best_fit  | `L_s56_lookup ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2843) "localeMatcher"
                (or_undefined_to_js
                   (fun (x2845 : [ `L_s24_best_fit  | `L_s56_lookup ]) ->
                      match x2845 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit"
                      | `L_s56_lookup -> Ojs.string_to_js "lookup") x2844)
        let (get_weekday :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined)
          =
          fun (x2847 : 'tags this) ->
            or_undefined_of_js
              (fun (x2849 : Ojs.t) ->
                 let x2850 = x2849 in
                 match Ojs.string_of_js x2850 with
                 | "long" -> `L_s55_long
                 | "narrow" -> `L_s67_narrow
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2847) "weekday")
        let (set_weekday :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined ->
              unit)
          =
          fun (x2851 : 'tags this) ->
            fun
              (x2852 :
                [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2851) "weekday"
                (or_undefined_to_js
                   (fun
                      (x2853 :
                        [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ])
                      ->
                      match x2853 with
                      | `L_s55_long -> Ojs.string_to_js "long"
                      | `L_s67_narrow -> Ojs.string_to_js "narrow"
                      | `L_s88_short -> Ojs.string_to_js "short") x2852)
        let (get_era :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined)
          =
          fun (x2855 : 'tags this) ->
            or_undefined_of_js
              (fun (x2857 : Ojs.t) ->
                 let x2858 = x2857 in
                 match Ojs.string_of_js x2858 with
                 | "long" -> `L_s55_long
                 | "narrow" -> `L_s67_narrow
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2855) "era")
        let (set_era :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined ->
              unit)
          =
          fun (x2859 : 'tags this) ->
            fun
              (x2860 :
                [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2859) "era"
                (or_undefined_to_js
                   (fun
                      (x2861 :
                        [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ])
                      ->
                      match x2861 with
                      | `L_s55_long -> Ojs.string_to_js "long"
                      | `L_s67_narrow -> Ojs.string_to_js "narrow"
                      | `L_s88_short -> Ojs.string_to_js "short") x2860)
        let (get_year :
          'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined) =
          fun (x2863 : 'tags this) ->
            or_undefined_of_js
              (fun (x2865 : Ojs.t) ->
                 let x2866 = x2865 in
                 match Ojs.string_of_js x2866 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s72_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2863) "year")
        let (set_year :
          'tags this ->
            [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined -> unit)
          =
          fun (x2867 : 'tags this) ->
            fun (x2868 : [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2867) "year"
                (or_undefined_to_js
                   (fun (x2869 : [ `L_s0_2_digit  | `L_s72_numeric ]) ->
                      match x2869 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"
                      | `L_s72_numeric -> Ojs.string_to_js "numeric") x2868)
        let (get_month :
          'tags this ->
            [ `L_s0_2_digit  | `L_s55_long  | `L_s67_narrow 
            | `L_s72_numeric  | `L_s88_short ] or_undefined)
          =
          fun (x2871 : 'tags this) ->
            or_undefined_of_js
              (fun (x2873 : Ojs.t) ->
                 let x2874 = x2873 in
                 match Ojs.string_of_js x2874 with
                 | "2-digit" -> `L_s0_2_digit
                 | "long" -> `L_s55_long
                 | "narrow" -> `L_s67_narrow
                 | "numeric" -> `L_s72_numeric
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2871) "month")
        let (set_month :
          'tags this ->
            [ `L_s0_2_digit  | `L_s55_long  | `L_s67_narrow 
            | `L_s72_numeric  | `L_s88_short ] or_undefined -> unit)
          =
          fun (x2875 : 'tags this) ->
            fun
              (x2876 :
                [ `L_s0_2_digit  | `L_s55_long  | `L_s67_narrow 
                | `L_s72_numeric  | `L_s88_short ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2875) "month"
                (or_undefined_to_js
                   (fun
                      (x2877 :
                        [ `L_s0_2_digit  | `L_s55_long  | `L_s67_narrow 
                        | `L_s72_numeric  | `L_s88_short ])
                      ->
                      match x2877 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"
                      | `L_s55_long -> Ojs.string_to_js "long"
                      | `L_s67_narrow -> Ojs.string_to_js "narrow"
                      | `L_s72_numeric -> Ojs.string_to_js "numeric"
                      | `L_s88_short -> Ojs.string_to_js "short") x2876)
        let (get_day :
          'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined) =
          fun (x2879 : 'tags this) ->
            or_undefined_of_js
              (fun (x2881 : Ojs.t) ->
                 let x2882 = x2881 in
                 match Ojs.string_of_js x2882 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s72_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2879) "day")
        let (set_day :
          'tags this ->
            [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined -> unit)
          =
          fun (x2883 : 'tags this) ->
            fun (x2884 : [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2883) "day"
                (or_undefined_to_js
                   (fun (x2885 : [ `L_s0_2_digit  | `L_s72_numeric ]) ->
                      match x2885 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"
                      | `L_s72_numeric -> Ojs.string_to_js "numeric") x2884)
        let (get_hour :
          'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined) =
          fun (x2887 : 'tags this) ->
            or_undefined_of_js
              (fun (x2889 : Ojs.t) ->
                 let x2890 = x2889 in
                 match Ojs.string_of_js x2890 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s72_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2887) "hour")
        let (set_hour :
          'tags this ->
            [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined -> unit)
          =
          fun (x2891 : 'tags this) ->
            fun (x2892 : [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2891) "hour"
                (or_undefined_to_js
                   (fun (x2893 : [ `L_s0_2_digit  | `L_s72_numeric ]) ->
                      match x2893 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"
                      | `L_s72_numeric -> Ojs.string_to_js "numeric") x2892)
        let (get_minute :
          'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined) =
          fun (x2895 : 'tags this) ->
            or_undefined_of_js
              (fun (x2897 : Ojs.t) ->
                 let x2898 = x2897 in
                 match Ojs.string_of_js x2898 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s72_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2895) "minute")
        let (set_minute :
          'tags this ->
            [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined -> unit)
          =
          fun (x2899 : 'tags this) ->
            fun (x2900 : [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2899) "minute"
                (or_undefined_to_js
                   (fun (x2901 : [ `L_s0_2_digit  | `L_s72_numeric ]) ->
                      match x2901 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"
                      | `L_s72_numeric -> Ojs.string_to_js "numeric") x2900)
        let (get_second :
          'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined) =
          fun (x2903 : 'tags this) ->
            or_undefined_of_js
              (fun (x2905 : Ojs.t) ->
                 let x2906 = x2905 in
                 match Ojs.string_of_js x2906 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s72_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2903) "second")
        let (set_second :
          'tags this ->
            [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined -> unit)
          =
          fun (x2907 : 'tags this) ->
            fun (x2908 : [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2907) "second"
                (or_undefined_to_js
                   (fun (x2909 : [ `L_s0_2_digit  | `L_s72_numeric ]) ->
                      match x2909 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"
                      | `L_s72_numeric -> Ojs.string_to_js "numeric") x2908)
        let (get_timeZoneName :
          'tags this -> [ `L_s55_long  | `L_s88_short ] or_undefined) =
          fun (x2911 : 'tags this) ->
            or_undefined_of_js
              (fun (x2913 : Ojs.t) ->
                 let x2914 = x2913 in
                 match Ojs.string_of_js x2914 with
                 | "long" -> `L_s55_long
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2911) "timeZoneName")
        let (set_timeZoneName :
          'tags this -> [ `L_s55_long  | `L_s88_short ] or_undefined -> unit)
          =
          fun (x2915 : 'tags this) ->
            fun (x2916 : [ `L_s55_long  | `L_s88_short ] or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2915) "timeZoneName"
                (or_undefined_to_js
                   (fun (x2917 : [ `L_s55_long  | `L_s88_short ]) ->
                      match x2917 with
                      | `L_s55_long -> Ojs.string_to_js "long"
                      | `L_s88_short -> Ojs.string_to_js "short") x2916)
        let (get_formatMatcher' :
          'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] or_undefined) =
          fun (x2919 : 'tags this) ->
            or_undefined_of_js
              (fun (x2921 : Ojs.t) ->
                 let x2922 = x2921 in
                 match Ojs.string_of_js x2922 with
                 | "basic" -> `L_s23_basic
                 | "best fit" -> `L_s24_best_fit
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2919)
                 "formatMatcher")
        let (set_formatMatcher' :
          'tags this ->
            [ `L_s23_basic  | `L_s24_best_fit ] or_undefined -> unit)
          =
          fun (x2923 : 'tags this) ->
            fun (x2924 : [ `L_s23_basic  | `L_s24_best_fit ] or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2923) "formatMatcher"
                (or_undefined_to_js
                   (fun (x2925 : [ `L_s23_basic  | `L_s24_best_fit ]) ->
                      match x2925 with
                      | `L_s23_basic -> Ojs.string_to_js "basic"
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit") x2924)
        let (get_hour12 : 'tags this -> bool or_undefined) =
          fun (x2927 : 'tags this) ->
            or_undefined_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2927) "hour12")
        let (set_hour12 : 'tags this -> bool or_undefined -> unit) =
          fun (x2930 : 'tags this) ->
            fun (x2931 : bool or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2930) "hour12"
                (or_undefined_to_js Ojs.bool_to_js x2931)
        let (get_timeZone : 'tags this -> string or_undefined) =
          fun (x2934 : 'tags this) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2934) "timeZone")
        let (set_timeZone : 'tags this -> string or_undefined -> unit) =
          fun (x2937 : 'tags this) ->
            fun (x2938 : string or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2937) "timeZone"
                (or_undefined_to_js Ojs.string_to_js x2938)
        let cast_from = Obj.magic
      end
    module DateTimeFormat =
      struct
        type t = [ `Intl_DateTimeFormat ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2942 : Ojs.t) -> t_of_js x2942
        and t_0_to_js : t_0 -> Ojs.t = fun (x2941 : t) -> t_to_js x2941
        type tags = [ `Intl_DateTimeFormat ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DateTimeFormat ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2945 : Ojs.t) -> intf_of_js __tags_of_js x2945
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2943 : __tags intf) -> intf_to_js __tags_to_js x2943
        let (formatToParts :
          'tags this ->
            ?date:Date.t or_number -> unit -> DateTimeFormatPart.t list)
          =
          fun (x2951 : 'tags this) ->
            fun ?date:(x2947 : Date.t or_number option) ->
              fun () ->
                Ojs.list_of_js DateTimeFormatPart.t_of_js
                  (let x2953 = this_to_js Obj.magic x2951 in
                   Ojs.call (Ojs.get_prop_ascii x2953 "formatToParts")
                     "apply"
                     [|x2953;((let x2948 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x2947 with
                                | Some x2949 ->
                                    ignore
                                      (Ojs.call x2948 "push"
                                         [|(or_number_to_js Date.t_to_js
                                              x2949)|])
                                | None -> ());
                               x2948))|])
        let (format : 'tags this -> ?date:Date.t or_number -> unit -> string)
          =
          fun (x2959 : 'tags this) ->
            fun ?date:(x2955 : Date.t or_number option) ->
              fun () ->
                Ojs.string_of_js
                  (let x2961 = this_to_js Obj.magic x2959 in
                   Ojs.call (Ojs.get_prop_ascii x2961 "format") "apply"
                     [|x2961;((let x2956 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x2955 with
                                | Some x2957 ->
                                    ignore
                                      (Ojs.call x2956 "push"
                                         [|(or_number_to_js Date.t_to_js
                                              x2957)|])
                                | None -> ());
                               x2956))|])
        let (resolvedOptions : 'tags this -> ResolvedDateTimeFormatOptions.t)
          =
          fun (x2962 : 'tags this) ->
            ResolvedDateTimeFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2962) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:string list or_string ->
            ?options:DateTimeFormatOptions.t -> unit -> t)
          =
          fun ?locales:(x2964 : string list or_string option) ->
            fun ?options:(x2965 : DateTimeFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl")
                        "DateTimeFormat")
                     (let x2966 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2964 with
                       | Some x2968 ->
                           ignore
                             (Ojs.call x2966 "push"
                                [|(or_string_to_js
                                     (fun (x2969 : string list) ->
                                        Ojs.list_to_js Ojs.string_to_js x2969)
                                     x2968)|])
                       | None -> ());
                      (match x2965 with
                       | Some x2967 ->
                           ignore
                             (Ojs.call x2966 "push"
                                [|(DateTimeFormatOptions.t_to_js x2967)|])
                       | None -> ());
                      x2966))
        let (invoke :
          ?locales:string list or_string ->
            ?options:DateTimeFormatOptions.t -> unit -> t)
          =
          fun ?locales:(x2971 : string list or_string option) ->
            fun ?options:(x2972 : DateTimeFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl")
                        "DateTimeFormat") "apply"
                     [|Ojs.null;((let x2973 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x2971 with
                                   | Some x2975 ->
                                       ignore
                                         (Ojs.call x2973 "push"
                                            [|(or_string_to_js
                                                 (fun (x2976 : string list)
                                                    ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x2976)
                                                 x2975)|])
                                   | None -> ());
                                  (match x2972 with
                                   | Some x2974 ->
                                       ignore
                                         (Ojs.call x2973 "push"
                                            [|(DateTimeFormatOptions.t_to_js
                                                 x2974)|])
                                   | None -> ());
                                  x2973))|])
        let (supportedLocalesOf :
          locales:string list or_string ->
            ?options:DateTimeFormatOptions.t -> unit -> string list)
          =
          fun ~locales:(x2978 : string list or_string) ->
            fun ?options:(x2979 : DateTimeFormatOptions.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x2984 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl")
                       "DateTimeFormat" in
                   Ojs.call (Ojs.get_prop_ascii x2984 "supportedLocalesOf")
                     "apply"
                     [|x2984;((let x2980 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2980 "push"
                                    [|(or_string_to_js
                                         (fun (x2982 : string list) ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x2982) x2978)|]);
                               (match x2979 with
                                | Some x2981 ->
                                    ignore
                                      (Ojs.call x2980 "push"
                                         [|(DateTimeFormatOptions.t_to_js
                                              x2981)|])
                                | None -> ());
                               x2980))|])
      end
    module ResolvedCollatorOptions =
      struct
        type t = [ `Intl_ResolvedCollatorOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2987 : Ojs.t) -> t_of_js x2987
        and t_0_to_js : t_0 -> Ojs.t = fun (x2986 : t) -> t_to_js x2986
        type tags = [ `Intl_ResolvedCollatorOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_ResolvedCollatorOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2990 : Ojs.t) -> intf_of_js __tags_of_js x2990
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2988 : __tags intf) -> intf_to_js __tags_to_js x2988
        let (get_locale : 'tags this -> string) =
          fun (x2992 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2992) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x2994 : 'tags this) ->
            fun (x2995 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2994) "locale"
                (Ojs.string_to_js x2995)
        let (get_usage : 'tags this -> string) =
          fun (x2997 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2997) "usage")
        let (set_usage : 'tags this -> string -> unit) =
          fun (x2999 : 'tags this) ->
            fun (x3000 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2999) "usage"
                (Ojs.string_to_js x3000)
        let (get_sensitivity : 'tags this -> string) =
          fun (x3002 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3002) "sensitivity")
        let (set_sensitivity : 'tags this -> string -> unit) =
          fun (x3004 : 'tags this) ->
            fun (x3005 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3004) "sensitivity"
                (Ojs.string_to_js x3005)
        let (get_ignorePunctuation : 'tags this -> bool) =
          fun (x3007 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3007)
                 "ignorePunctuation")
        let (set_ignorePunctuation : 'tags this -> bool -> unit) =
          fun (x3009 : 'tags this) ->
            fun (x3010 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3009)
                "ignorePunctuation" (Ojs.bool_to_js x3010)
        let (get_collation : 'tags this -> string) =
          fun (x3012 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3012) "collation")
        let (set_collation : 'tags this -> string -> unit) =
          fun (x3014 : 'tags this) ->
            fun (x3015 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3014) "collation"
                (Ojs.string_to_js x3015)
        let (get_caseFirst : 'tags this -> string) =
          fun (x3017 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3017) "caseFirst")
        let (set_caseFirst : 'tags this -> string -> unit) =
          fun (x3019 : 'tags this) ->
            fun (x3020 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3019) "caseFirst"
                (Ojs.string_to_js x3020)
        let (get_numeric : 'tags this -> bool) =
          fun (x3022 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3022) "numeric")
        let (set_numeric : 'tags this -> bool -> unit) =
          fun (x3024 : 'tags this) ->
            fun (x3025 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3024) "numeric"
                (Ojs.bool_to_js x3025)
        let cast_from = Obj.magic
      end
    module CollatorOptions =
      struct
        type t = [ `Intl_CollatorOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3028 : Ojs.t) -> t_of_js x3028
        and t_0_to_js : t_0 -> Ojs.t = fun (x3027 : t) -> t_to_js x3027
        type tags = [ `Intl_CollatorOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_CollatorOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x3031 : Ojs.t) -> intf_of_js __tags_of_js x3031
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x3029 : __tags intf) -> intf_to_js __tags_to_js x3029
        let (get_usage : 'tags this -> string or_undefined) =
          fun (x3033 : 'tags this) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3033) "usage")
        let (set_usage : 'tags this -> string or_undefined -> unit) =
          fun (x3036 : 'tags this) ->
            fun (x3037 : string or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3036) "usage"
                (or_undefined_to_js Ojs.string_to_js x3037)
        let (get_localeMatcher : 'tags this -> string or_undefined) =
          fun (x3040 : 'tags this) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3040)
                 "localeMatcher")
        let (set_localeMatcher : 'tags this -> string or_undefined -> unit) =
          fun (x3043 : 'tags this) ->
            fun (x3044 : string or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3043) "localeMatcher"
                (or_undefined_to_js Ojs.string_to_js x3044)
        let (get_numeric : 'tags this -> bool or_undefined) =
          fun (x3047 : 'tags this) ->
            or_undefined_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3047) "numeric")
        let (set_numeric : 'tags this -> bool or_undefined -> unit) =
          fun (x3050 : 'tags this) ->
            fun (x3051 : bool or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3050) "numeric"
                (or_undefined_to_js Ojs.bool_to_js x3051)
        let (get_caseFirst : 'tags this -> string or_undefined) =
          fun (x3054 : 'tags this) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3054) "caseFirst")
        let (set_caseFirst : 'tags this -> string or_undefined -> unit) =
          fun (x3057 : 'tags this) ->
            fun (x3058 : string or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3057) "caseFirst"
                (or_undefined_to_js Ojs.string_to_js x3058)
        let (get_sensitivity : 'tags this -> string or_undefined) =
          fun (x3061 : 'tags this) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3061) "sensitivity")
        let (set_sensitivity : 'tags this -> string or_undefined -> unit) =
          fun (x3064 : 'tags this) ->
            fun (x3065 : string or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3064) "sensitivity"
                (or_undefined_to_js Ojs.string_to_js x3065)
        let (get_ignorePunctuation : 'tags this -> bool or_undefined) =
          fun (x3068 : 'tags this) ->
            or_undefined_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3068)
                 "ignorePunctuation")
        let (set_ignorePunctuation : 'tags this -> bool or_undefined -> unit)
          =
          fun (x3071 : 'tags this) ->
            fun (x3072 : bool or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3071)
                "ignorePunctuation" (or_undefined_to_js Ojs.bool_to_js x3072)
        let cast_from = Obj.magic
      end
    module Collator =
      struct
        type t = [ `Intl_Collator ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3076 : Ojs.t) -> t_of_js x3076
        and t_0_to_js : t_0 -> Ojs.t = fun (x3075 : t) -> t_to_js x3075
        type tags = [ `Intl_Collator ]
        type tags_0 = tags
        type 'tags this = 'tags intf constraint 'tags = [> `Intl_Collator ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x3079 : Ojs.t) -> intf_of_js __tags_of_js x3079
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x3077 : __tags intf) -> intf_to_js __tags_to_js x3077
        let (compare : 'tags this -> x:string -> y:string -> float) =
          fun (x3083 : 'tags this) ->
            fun ~x:(x3081 : string) ->
              fun ~y:(x3082 : string) ->
                Ojs.float_of_js
                  (Ojs.call (this_to_js Obj.magic x3083) "compare"
                     [|(Ojs.string_to_js x3081);(Ojs.string_to_js x3082)|])
        let (resolvedOptions : 'tags this -> ResolvedCollatorOptions.t) =
          fun (x3085 : 'tags this) ->
            ResolvedCollatorOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x3085) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:string list or_string ->
            ?options:CollatorOptions.t -> unit -> t)
          =
          fun ?locales:(x3087 : string list or_string option) ->
            fun ?options:(x3088 : CollatorOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "Collator")
                     (let x3089 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x3087 with
                       | Some x3091 ->
                           ignore
                             (Ojs.call x3089 "push"
                                [|(or_string_to_js
                                     (fun (x3092 : string list) ->
                                        Ojs.list_to_js Ojs.string_to_js x3092)
                                     x3091)|])
                       | None -> ());
                      (match x3088 with
                       | Some x3090 ->
                           ignore
                             (Ojs.call x3089 "push"
                                [|(CollatorOptions.t_to_js x3090)|])
                       | None -> ());
                      x3089))
        let (invoke :
          ?locales:string list or_string ->
            ?options:CollatorOptions.t -> unit -> t)
          =
          fun ?locales:(x3094 : string list or_string option) ->
            fun ?options:(x3095 : CollatorOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "Collator")
                     "apply"
                     [|Ojs.null;((let x3096 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x3094 with
                                   | Some x3098 ->
                                       ignore
                                         (Ojs.call x3096 "push"
                                            [|(or_string_to_js
                                                 (fun (x3099 : string list)
                                                    ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x3099)
                                                 x3098)|])
                                   | None -> ());
                                  (match x3095 with
                                   | Some x3097 ->
                                       ignore
                                         (Ojs.call x3096 "push"
                                            [|(CollatorOptions.t_to_js x3097)|])
                                   | None -> ());
                                  x3096))|])
        let (supportedLocalesOf :
          locales:string list or_string ->
            ?options:CollatorOptions.t -> unit -> string list)
          =
          fun ~locales:(x3101 : string list or_string) ->
            fun ?options:(x3102 : CollatorOptions.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x3107 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "Collator" in
                   Ojs.call (Ojs.get_prop_ascii x3107 "supportedLocalesOf")
                     "apply"
                     [|x3107;((let x3103 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3103 "push"
                                    [|(or_string_to_js
                                         (fun (x3105 : string list) ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x3105) x3101)|]);
                               (match x3102 with
                                | Some x3104 ->
                                    ignore
                                      (Ojs.call x3103 "push"
                                         [|(CollatorOptions.t_to_js x3104)|])
                                | None -> ());
                               x3103))|])
      end
  end
module String =
  struct
    module AnonymousInterface6 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3110 : Ojs.t) -> x3110
        and t_to_js : t -> Ojs.t = fun (x3109 : Ojs.t) -> x3109
        let (get_raw : t -> (string ArrayLike.t, string list) union2) =
          fun (x3111 : t) ->
            union2_of_js
              (fun (x3112 : Ojs.t) ->
                 ArrayLike.t_of_js Ojs.string_of_js x3112)
              (fun (x3114 : Ojs.t) -> Ojs.list_of_js Ojs.string_of_js x3114)
              (Ojs.get_prop_ascii (t_to_js x3111) "raw")
        let (set_raw : t -> (string ArrayLike.t, string list) union2 -> unit)
          =
          fun (x3116 : t) ->
            fun (x3117 : (string ArrayLike.t, string list) union2) ->
              Ojs.set_prop_ascii (t_to_js x3116) "raw"
                (union2_to_js
                   (fun (x3118 : string ArrayLike.t) ->
                      ArrayLike.t_to_js Ojs.string_to_js x3118)
                   (fun (x3120 : string list) ->
                      Ojs.list_to_js Ojs.string_to_js x3120) x3117)
      end
    module AnonymousInterface22 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3123 : Ojs.t) -> x3123
        and t_to_js : t -> Ojs.t = fun (x3122 : Ojs.t) -> x3122
      end
    module AnonymousInterface21 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3125 : Ojs.t) -> x3125
        and t_to_js : t -> Ojs.t = fun (x3124 : Ojs.t) -> x3124
      end
    module AnonymousInterface20 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3127 : Ojs.t) -> x3127
        and t_to_js : t -> Ojs.t = fun (x3126 : Ojs.t) -> x3126
      end
    module AnonymousInterface19 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3129 : Ojs.t) -> x3129
        and t_to_js : t -> Ojs.t = fun (x3128 : Ojs.t) -> x3128
      end
    module AnonymousInterface18 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3131 : Ojs.t) -> x3131
        and t_to_js : t -> Ojs.t = fun (x3130 : Ojs.t) -> x3130
      end
    type t =
      [ `String  | string ArrayLike.tags_1 | string IterableIterator.tags_1]
        intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3133 : Ojs.t) -> t_of_js x3133
    and t_0_to_js : t_0 -> Ojs.t = fun (x3132 : t) -> t_to_js x3132
    type tags =
      [ `String  | string ArrayLike.tags_1 | string IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `String ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3136 : Ojs.t) -> intf_of_js __tags_of_js x3136
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3134 : __tags intf) -> intf_to_js __tags_to_js x3134
    let (replaceAll :
      'tags this ->
        searchValue:RegExp.t or_string -> replaceValue:string -> string)
      =
      fun (x3141 : 'tags this) ->
        fun ~searchValue:(x3138 : RegExp.t or_string) ->
          fun ~replaceValue:(x3140 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3141) "replaceAll"
                 [|(or_string_to_js RegExp.t_to_js x3138);(Ojs.string_to_js
                                                             x3140)|])
    let (replaceAll' :
      'tags this ->
        searchValue:RegExp.t or_string ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x3148 : 'tags this) ->
        fun ~searchValue:(x3143 : RegExp.t or_string) ->
          fun ~replacer:(x3145 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3148) "replaceAll"
                 [|(or_string_to_js RegExp.t_to_js x3143);(Ojs.fun_to_js_args
                                                             (fun (x3146 : _)
                                                                ->
                                                                Ojs.string_to_js
                                                                  (x3145
                                                                    ~substring:(
                                                                    Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x3146 0))
                                                                    ~args:(
                                                                    Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x3146 1))))|])
    let (replaceAll'' :
      'tags this ->
        searchValue:RegExp.t or_string -> replaceValue:string -> string)
      =
      fun (x3153 : 'tags this) ->
        fun ~searchValue:(x3150 : RegExp.t or_string) ->
          fun ~replaceValue:(x3152 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3153) "replaceAll"
                 [|(or_string_to_js RegExp.t_to_js x3150);(Ojs.string_to_js
                                                             x3152)|])
    let (replaceAll''' :
      'tags this ->
        searchValue:RegExp.t or_string ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x3160 : 'tags this) ->
        fun ~searchValue:(x3155 : RegExp.t or_string) ->
          fun ~replacer:(x3157 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3160) "replaceAll"
                 [|(or_string_to_js RegExp.t_to_js x3155);(Ojs.fun_to_js_args
                                                             (fun (x3158 : _)
                                                                ->
                                                                Ojs.string_to_js
                                                                  (x3157
                                                                    ~substring:(
                                                                    Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x3158 0))
                                                                    ~args:(
                                                                    Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x3158 1))))|])
    let (matchAll :
      'tags this -> regexp:RegExp.t -> RegExpMatchArray.t IterableIterator.t)
      =
      fun (x3163 : 'tags this) ->
        fun ~regexp:(x3162 : RegExp.t) ->
          IterableIterator.t_of_js RegExpMatchArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x3163) "matchAll"
               [|(RegExp.t_to_js x3162)|])
    let (trimEnd : 'tags this -> string) =
      fun (x3166 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3166) "trimEnd" [||])
    let (trimStart : 'tags this -> string) =
      fun (x3168 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3168) "trimStart" [||])
    let (trimLeft : 'tags this -> string) =
      fun (x3170 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3170) "trimLeft" [||])
    let (trimRight : 'tags this -> string) =
      fun (x3172 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3172) "trimRight" [||])
    let (padStart :
      'tags this -> maxLength:float -> ?fillString:string -> unit -> string)
      =
      fun (x3178 : 'tags this) ->
        fun ~maxLength:(x3174 : float) ->
          fun ?fillString:(x3175 : string option) ->
            fun () ->
              Ojs.string_of_js
                (let x3180 = this_to_js Obj.magic x3178 in
                 Ojs.call (Ojs.get_prop_ascii x3180 "padStart") "apply"
                   [|x3180;((let x3176 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3176 "push"
                                  [|(Ojs.float_to_js x3174)|]);
                             (match x3175 with
                              | Some x3177 ->
                                  ignore
                                    (Ojs.call x3176 "push"
                                       [|(Ojs.string_to_js x3177)|])
                              | None -> ());
                             x3176))|])
    let (padEnd :
      'tags this -> maxLength:float -> ?fillString:string -> unit -> string)
      =
      fun (x3185 : 'tags this) ->
        fun ~maxLength:(x3181 : float) ->
          fun ?fillString:(x3182 : string option) ->
            fun () ->
              Ojs.string_of_js
                (let x3187 = this_to_js Obj.magic x3185 in
                 Ojs.call (Ojs.get_prop_ascii x3187 "padEnd") "apply"
                   [|x3187;((let x3183 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3183 "push"
                                  [|(Ojs.float_to_js x3181)|]);
                             (match x3182 with
                              | Some x3184 ->
                                  ignore
                                    (Ojs.call x3183 "push"
                                       [|(Ojs.string_to_js x3184)|])
                              | None -> ());
                             x3183))|])
    let (match_ :
      'tags this ->
        matcher:AnonymousInterface18.t -> RegExpMatchArray.t or_null)
      =
      fun (x3189 : 'tags this) ->
        fun ~matcher:(x3188 : AnonymousInterface18.t) ->
          or_null_of_js RegExpMatchArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x3189) "match"
               [|(AnonymousInterface18.t_to_js x3188)|])
    let (replace :
      'tags this ->
        searchValue:AnonymousInterface19.t -> replaceValue:string -> string)
      =
      fun (x3194 : 'tags this) ->
        fun ~searchValue:(x3192 : AnonymousInterface19.t) ->
          fun ~replaceValue:(x3193 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3194) "replace"
                 [|(AnonymousInterface19.t_to_js x3192);(Ojs.string_to_js
                                                           x3193)|])
    let (replace' :
      'tags this ->
        searchValue:AnonymousInterface20.t ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x3200 : 'tags this) ->
        fun ~searchValue:(x3196 : AnonymousInterface20.t) ->
          fun ~replacer:(x3197 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3200) "replace"
                 [|(AnonymousInterface20.t_to_js x3196);(Ojs.fun_to_js_args
                                                           (fun (x3198 : _)
                                                              ->
                                                              Ojs.string_to_js
                                                                (x3197
                                                                   ~substring:(
                                                                   Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x3198 0))
                                                                   ~args:(
                                                                   Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x3198 1))))|])
    let (search : 'tags this -> searcher:AnonymousInterface21.t -> float) =
      fun (x3203 : 'tags this) ->
        fun ~searcher:(x3202 : AnonymousInterface21.t) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3203) "search"
               [|(AnonymousInterface21.t_to_js x3202)|])
    let (split :
      'tags this ->
        splitter:AnonymousInterface22.t ->
          ?limit:float -> unit -> string list)
      =
      fun (x3209 : 'tags this) ->
        fun ~splitter:(x3205 : AnonymousInterface22.t) ->
          fun ?limit:(x3206 : float option) ->
            fun () ->
              Ojs.list_of_js Ojs.string_of_js
                (let x3211 = this_to_js Obj.magic x3209 in
                 Ojs.call (Ojs.get_prop_ascii x3211 "split") "apply"
                   [|x3211;((let x3207 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3207 "push"
                                  [|(AnonymousInterface22.t_to_js x3205)|]);
                             (match x3206 with
                              | Some x3208 ->
                                  ignore
                                    (Ojs.call x3207 "push"
                                       [|(Ojs.float_to_js x3208)|])
                              | None -> ());
                             x3207))|])
    let (codePointAt : 'tags this -> pos:float -> float or_undefined) =
      fun (x3214 : 'tags this) ->
        fun ~pos:(x3213 : float) ->
          or_undefined_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3214) "codePointAt"
               [|(Ojs.float_to_js x3213)|])
    let (includes :
      'tags this -> searchString:string -> ?position:float -> unit -> bool) =
      fun (x3221 : 'tags this) ->
        fun ~searchString:(x3217 : string) ->
          fun ?position:(x3218 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3223 = this_to_js Obj.magic x3221 in
                 Ojs.call (Ojs.get_prop_ascii x3223 "includes") "apply"
                   [|x3223;((let x3219 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3219 "push"
                                  [|(Ojs.string_to_js x3217)|]);
                             (match x3218 with
                              | Some x3220 ->
                                  ignore
                                    (Ojs.call x3219 "push"
                                       [|(Ojs.float_to_js x3220)|])
                              | None -> ());
                             x3219))|])
    let (endsWith :
      'tags this -> searchString:string -> ?endPosition:float -> unit -> bool)
      =
      fun (x3228 : 'tags this) ->
        fun ~searchString:(x3224 : string) ->
          fun ?endPosition:(x3225 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3230 = this_to_js Obj.magic x3228 in
                 Ojs.call (Ojs.get_prop_ascii x3230 "endsWith") "apply"
                   [|x3230;((let x3226 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3226 "push"
                                  [|(Ojs.string_to_js x3224)|]);
                             (match x3225 with
                              | Some x3227 ->
                                  ignore
                                    (Ojs.call x3226 "push"
                                       [|(Ojs.float_to_js x3227)|])
                              | None -> ());
                             x3226))|])
    let (normalize :
      'tags this ->
        form:[ `L_s11_NFC  | `L_s12_NFD  | `L_s13_NFKC  | `L_s14_NFKD ] ->
          string)
      =
      fun (x3232 : 'tags this) ->
        fun
          ~form:(x3231 :
                  [ `L_s11_NFC  | `L_s12_NFD  | `L_s13_NFKC  | `L_s14_NFKD ])
          ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3232) "normalize"
               [|((match x3231 with
                   | `L_s11_NFC -> Ojs.string_to_js "NFC"
                   | `L_s12_NFD -> Ojs.string_to_js "NFD"
                   | `L_s13_NFKC -> Ojs.string_to_js "NFKC"
                   | `L_s14_NFKD -> Ojs.string_to_js "NFKD"))|])
    let (normalize' : 'tags this -> ?form:string -> unit -> string) =
      fun (x3237 : 'tags this) ->
        fun ?form:(x3234 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x3239 = this_to_js Obj.magic x3237 in
               Ojs.call (Ojs.get_prop_ascii x3239 "normalize") "apply"
                 [|x3239;((let x3235 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3234 with
                            | Some x3236 ->
                                ignore
                                  (Ojs.call x3235 "push"
                                     [|(Ojs.string_to_js x3236)|])
                            | None -> ());
                           x3235))|])
    let (repeat : 'tags this -> count:float -> string) =
      fun (x3241 : 'tags this) ->
        fun ~count:(x3240 : float) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3241) "repeat"
               [|(Ojs.float_to_js x3240)|])
    let (startsWith :
      'tags this -> searchString:string -> ?position:float -> unit -> bool) =
      fun (x3247 : 'tags this) ->
        fun ~searchString:(x3243 : string) ->
          fun ?position:(x3244 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3249 = this_to_js Obj.magic x3247 in
                 Ojs.call (Ojs.get_prop_ascii x3249 "startsWith") "apply"
                   [|x3249;((let x3245 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3245 "push"
                                  [|(Ojs.string_to_js x3243)|]);
                             (match x3244 with
                              | Some x3246 ->
                                  ignore
                                    (Ojs.call x3245 "push"
                                       [|(Ojs.float_to_js x3246)|])
                              | None -> ());
                             x3245))|])
    let (anchor : 'tags this -> name:string -> string) =
      fun (x3251 : 'tags this) ->
        fun ~name:(x3250 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3251) "anchor"
               [|(Ojs.string_to_js x3250)|])
    let (big : 'tags this -> string) =
      fun (x3253 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3253) "big" [||])
    let (blink : 'tags this -> string) =
      fun (x3255 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3255) "blink" [||])
    let (bold : 'tags this -> string) =
      fun (x3257 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3257) "bold" [||])
    let (fixed : 'tags this -> string) =
      fun (x3259 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3259) "fixed" [||])
    let (fontcolor : 'tags this -> color:string -> string) =
      fun (x3262 : 'tags this) ->
        fun ~color:(x3261 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3262) "fontcolor"
               [|(Ojs.string_to_js x3261)|])
    let (fontsize : 'tags this -> size:float -> string) =
      fun (x3265 : 'tags this) ->
        fun ~size:(x3264 : float) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3265) "fontsize"
               [|(Ojs.float_to_js x3264)|])
    let (fontsize' : 'tags this -> size:string -> string) =
      fun (x3268 : 'tags this) ->
        fun ~size:(x3267 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3268) "fontsize"
               [|(Ojs.string_to_js x3267)|])
    let (italics : 'tags this -> string) =
      fun (x3270 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3270) "italics" [||])
    let (link : 'tags this -> url:string -> string) =
      fun (x3273 : 'tags this) ->
        fun ~url:(x3272 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3273) "link"
               [|(Ojs.string_to_js x3272)|])
    let (small : 'tags this -> string) =
      fun (x3275 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3275) "small" [||])
    let (strike : 'tags this -> string) =
      fun (x3277 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3277) "strike" [||])
    let (sub : 'tags this -> string) =
      fun (x3279 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3279) "sub" [||])
    let (sup : 'tags this -> string) =
      fun (x3281 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3281) "sup" [||])
    let (localeCompare :
      'tags this ->
        that:string ->
          ?locales:string list or_string ->
            ?options:Intl.CollatorOptions.t -> unit -> float)
      =
      fun (x3291 : 'tags this) ->
        fun ~that:(x3283 : string) ->
          fun ?locales:(x3284 : string list or_string option) ->
            fun ?options:(x3285 : Intl.CollatorOptions.t option) ->
              fun () ->
                Ojs.float_of_js
                  (let x3293 = this_to_js Obj.magic x3291 in
                   Ojs.call (Ojs.get_prop_ascii x3293 "localeCompare")
                     "apply"
                     [|x3293;((let x3286 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3286 "push"
                                    [|(Ojs.string_to_js x3283)|]);
                               (match x3284 with
                                | Some x3288 ->
                                    ignore
                                      (Ojs.call x3286 "push"
                                         [|(or_string_to_js
                                              (fun (x3289 : string list) ->
                                                 Ojs.list_to_js
                                                   Ojs.string_to_js x3289)
                                              x3288)|])
                                | None -> ());
                               (match x3285 with
                                | Some x3287 ->
                                    ignore
                                      (Ojs.call x3286 "push"
                                         [|(Intl.CollatorOptions.t_to_js
                                              x3287)|])
                                | None -> ());
                               x3286))|])
    let (toString : 'tags this -> string) =
      fun (x3294 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3294) "toString" [||])
    let (charAt : 'tags this -> pos:float -> string) =
      fun (x3297 : 'tags this) ->
        fun ~pos:(x3296 : float) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3297) "charAt"
               [|(Ojs.float_to_js x3296)|])
    let (charCodeAt : 'tags this -> index:float -> float) =
      fun (x3300 : 'tags this) ->
        fun ~index:(x3299 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3300) "charCodeAt"
               [|(Ojs.float_to_js x3299)|])
    let (concat : 'tags this -> strings:string list -> string) =
      fun (x3305 : 'tags this) ->
        fun ~strings:(x3302 : string list) ->
          Ojs.string_of_js
            (let x3307 = this_to_js Obj.magic x3305 in
             Ojs.call (Ojs.get_prop_ascii x3307 "concat") "apply"
               [|x3307;((let x3303 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x3304 : string) ->
                              ignore
                                (Ojs.call x3303 "push"
                                   [|(Ojs.string_to_js x3304)|])) x3302;
                         x3303))|])
    let (indexOf :
      'tags this -> searchString:string -> ?position:float -> unit -> float)
      =
      fun (x3312 : 'tags this) ->
        fun ~searchString:(x3308 : string) ->
          fun ?position:(x3309 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3314 = this_to_js Obj.magic x3312 in
                 Ojs.call (Ojs.get_prop_ascii x3314 "indexOf") "apply"
                   [|x3314;((let x3310 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3310 "push"
                                  [|(Ojs.string_to_js x3308)|]);
                             (match x3309 with
                              | Some x3311 ->
                                  ignore
                                    (Ojs.call x3310 "push"
                                       [|(Ojs.float_to_js x3311)|])
                              | None -> ());
                             x3310))|])
    let (lastIndexOf :
      'tags this -> searchString:string -> ?position:float -> unit -> float)
      =
      fun (x3319 : 'tags this) ->
        fun ~searchString:(x3315 : string) ->
          fun ?position:(x3316 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3321 = this_to_js Obj.magic x3319 in
                 Ojs.call (Ojs.get_prop_ascii x3321 "lastIndexOf") "apply"
                   [|x3321;((let x3317 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3317 "push"
                                  [|(Ojs.string_to_js x3315)|]);
                             (match x3316 with
                              | Some x3318 ->
                                  ignore
                                    (Ojs.call x3317 "push"
                                       [|(Ojs.float_to_js x3318)|])
                              | None -> ());
                             x3317))|])
    let (localeCompare' : 'tags this -> that:string -> float) =
      fun (x3323 : 'tags this) ->
        fun ~that:(x3322 : string) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3323) "localeCompare"
               [|(Ojs.string_to_js x3322)|])
    let (match_' :
      'tags this -> regexp:RegExp.t or_string -> RegExpMatchArray.t or_null)
      =
      fun (x3327 : 'tags this) ->
        fun ~regexp:(x3325 : RegExp.t or_string) ->
          or_null_of_js RegExpMatchArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x3327) "match"
               [|(or_string_to_js RegExp.t_to_js x3325)|])
    let (replace'' :
      'tags this ->
        searchValue:RegExp.t or_string -> replaceValue:string -> string)
      =
      fun (x3333 : 'tags this) ->
        fun ~searchValue:(x3330 : RegExp.t or_string) ->
          fun ~replaceValue:(x3332 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3333) "replace"
                 [|(or_string_to_js RegExp.t_to_js x3330);(Ojs.string_to_js
                                                             x3332)|])
    let (replace''' :
      'tags this ->
        searchValue:RegExp.t or_string ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x3340 : 'tags this) ->
        fun ~searchValue:(x3335 : RegExp.t or_string) ->
          fun ~replacer:(x3337 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3340) "replace"
                 [|(or_string_to_js RegExp.t_to_js x3335);(Ojs.fun_to_js_args
                                                             (fun (x3338 : _)
                                                                ->
                                                                Ojs.string_to_js
                                                                  (x3337
                                                                    ~substring:(
                                                                    Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x3338 0))
                                                                    ~args:(
                                                                    Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x3338 1))))|])
    let (search' : 'tags this -> regexp:RegExp.t or_string -> float) =
      fun (x3344 : 'tags this) ->
        fun ~regexp:(x3342 : RegExp.t or_string) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3344) "search"
               [|(or_string_to_js RegExp.t_to_js x3342)|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> string)
      =
      fun (x3351 : 'tags this) ->
        fun ?start:(x3346 : float option) ->
          fun ?end_:(x3347 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x3353 = this_to_js Obj.magic x3351 in
                 Ojs.call (Ojs.get_prop_ascii x3353 "slice") "apply"
                   [|x3353;((let x3348 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3346 with
                              | Some x3350 ->
                                  ignore
                                    (Ojs.call x3348 "push"
                                       [|(Ojs.float_to_js x3350)|])
                              | None -> ());
                             (match x3347 with
                              | Some x3349 ->
                                  ignore
                                    (Ojs.call x3348 "push"
                                       [|(Ojs.float_to_js x3349)|])
                              | None -> ());
                             x3348))|])
    let (split' :
      'tags this ->
        separator:RegExp.t or_string -> ?limit:float -> unit -> string list)
      =
      fun (x3359 : 'tags this) ->
        fun ~separator:(x3354 : RegExp.t or_string) ->
          fun ?limit:(x3355 : float option) ->
            fun () ->
              Ojs.list_of_js Ojs.string_of_js
                (let x3361 = this_to_js Obj.magic x3359 in
                 Ojs.call (Ojs.get_prop_ascii x3361 "split") "apply"
                   [|x3361;((let x3356 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3356 "push"
                                  [|(or_string_to_js RegExp.t_to_js x3354)|]);
                             (match x3355 with
                              | Some x3357 ->
                                  ignore
                                    (Ojs.call x3356 "push"
                                       [|(Ojs.float_to_js x3357)|])
                              | None -> ());
                             x3356))|])
    let (substring :
      'tags this -> start:float -> ?end_:float -> unit -> string) =
      fun (x3367 : 'tags this) ->
        fun ~start:(x3363 : float) ->
          fun ?end_:(x3364 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x3369 = this_to_js Obj.magic x3367 in
                 Ojs.call (Ojs.get_prop_ascii x3369 "substring") "apply"
                   [|x3369;((let x3365 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3365 "push"
                                  [|(Ojs.float_to_js x3363)|]);
                             (match x3364 with
                              | Some x3366 ->
                                  ignore
                                    (Ojs.call x3365 "push"
                                       [|(Ojs.float_to_js x3366)|])
                              | None -> ());
                             x3365))|])
    let (toLowerCase : 'tags this -> string) =
      fun (x3370 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3370) "toLowerCase" [||])
    let (toLocaleLowerCase :
      'tags this -> ?locales:string list or_string -> unit -> string) =
      fun (x3377 : 'tags this) ->
        fun ?locales:(x3372 : string list or_string option) ->
          fun () ->
            Ojs.string_of_js
              (let x3379 = this_to_js Obj.magic x3377 in
               Ojs.call (Ojs.get_prop_ascii x3379 "toLocaleLowerCase")
                 "apply"
                 [|x3379;((let x3373 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3372 with
                            | Some x3374 ->
                                ignore
                                  (Ojs.call x3373 "push"
                                     [|(or_string_to_js
                                          (fun (x3375 : string list) ->
                                             Ojs.list_to_js Ojs.string_to_js
                                               x3375) x3374)|])
                            | None -> ());
                           x3373))|])
    let (toUpperCase : 'tags this -> string) =
      fun (x3380 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3380) "toUpperCase" [||])
    let (toLocaleUpperCase :
      'tags this -> ?locales:string list or_string -> unit -> string) =
      fun (x3387 : 'tags this) ->
        fun ?locales:(x3382 : string list or_string option) ->
          fun () ->
            Ojs.string_of_js
              (let x3389 = this_to_js Obj.magic x3387 in
               Ojs.call (Ojs.get_prop_ascii x3389 "toLocaleUpperCase")
                 "apply"
                 [|x3389;((let x3383 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3382 with
                            | Some x3384 ->
                                ignore
                                  (Ojs.call x3383 "push"
                                     [|(or_string_to_js
                                          (fun (x3385 : string list) ->
                                             Ojs.list_to_js Ojs.string_to_js
                                               x3385) x3384)|])
                            | None -> ());
                           x3383))|])
    let (trim : 'tags this -> string) =
      fun (x3390 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3390) "trim" [||])
    let (get_length : 'tags this -> float) =
      fun (x3392 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3392) "length")
    let (substr :
      'tags this -> from:float -> ?length:float -> unit -> string) =
      fun (x3398 : 'tags this) ->
        fun ~from:(x3394 : float) ->
          fun ?length:(x3395 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x3400 = this_to_js Obj.magic x3398 in
                 Ojs.call (Ojs.get_prop_ascii x3400 "substr") "apply"
                   [|x3400;((let x3396 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3396 "push"
                                  [|(Ojs.float_to_js x3394)|]);
                             (match x3395 with
                              | Some x3397 ->
                                  ignore
                                    (Ojs.call x3396 "push"
                                       [|(Ojs.float_to_js x3397)|])
                              | None -> ());
                             x3396))|])
    let (valueOf : 'tags this -> string) =
      fun (x3401 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3401) "valueOf" [||])
    let (get : 'tags this -> float -> string) =
      fun (x3403 : 'tags this) ->
        fun (x3405 : float) ->
          Ojs.string_of_js
            (Ojs.get_prop (this_to_js Obj.magic x3403)
               (Ojs.float_to_js x3405))
    let (fromCodePoint : float list -> string) =
      fun (x3406 : float list) ->
        Ojs.string_of_js
          (let x3409 = Ojs.get_prop_ascii Ojs.global "String" in
           Ojs.call (Ojs.get_prop_ascii x3409 "fromCodePoint") "apply"
             [|x3409;((let x3407 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x3408 : float) ->
                            ignore
                              (Ojs.call x3407 "push"
                                 [|(Ojs.float_to_js x3408)|])) x3406;
                       x3407))|])
    let (raw :
      template:AnonymousInterface6.t -> substitutions:any list -> string) =
      fun ~template:(x3410 : AnonymousInterface6.t) ->
        fun ~substitutions:(x3411 : any list) ->
          Ojs.string_of_js
            (let x3414 = Ojs.get_prop_ascii Ojs.global "String" in
             Ojs.call (Ojs.get_prop_ascii x3414 "raw") "apply"
               [|x3414;((let x3412 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         ignore
                           (Ojs.call x3412 "push"
                              [|(AnonymousInterface6.t_to_js x3410)|]);
                         List.iter
                           (fun (x3413 : any) ->
                              ignore
                                (Ojs.call x3412 "push" [|(any_to_js x3413)|]))
                           x3411;
                         x3412))|])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x3415 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "String")
               (let x3416 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x3415 with
                 | Some x3417 ->
                     ignore (Ojs.call x3416 "push" [|(any_to_js x3417)|])
                 | None -> ());
                x3416))
    let (invoke : ?value:any -> unit -> string) =
      fun ?value:(x3418 : any option) ->
        fun () ->
          Ojs.string_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "String") "apply"
               [|Ojs.null;((let x3419 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x3418 with
                             | Some x3420 ->
                                 ignore
                                   (Ojs.call x3419 "push"
                                      [|(any_to_js x3420)|])
                             | None -> ());
                            x3419))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "String")
             "prototype")
    let (fromCharCode : float list -> string) =
      fun (x3421 : float list) ->
        Ojs.string_of_js
          (let x3424 = Ojs.get_prop_ascii Ojs.global "String" in
           Ojs.call (Ojs.get_prop_ascii x3424 "fromCharCode") "apply"
             [|x3424;((let x3422 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x3423 : float) ->
                            ignore
                              (Ojs.call x3422 "push"
                                 [|(Ojs.float_to_js x3423)|])) x3421;
                       x3422))|])
    let cast_from = Obj.magic
  end
module Set =
  struct
    type 'T t = [ `Set of 'T  | 'T IterableIterator.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3427 : Ojs.t) -> t_of_js __T_of_js x3427
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x3425 : __T t) -> t_to_js __T_to_js x3425
    type 'T tags = [ `Set of 'T  | 'T IterableIterator.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `Set of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x3431 : Ojs.t) -> intf_of_js __tags_of_js x3431
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x3429 : __tags intf) -> intf_to_js __tags_to_js x3429
    let (entries : ('tags, 'T) this -> ('T * 'T) IterableIterator.t) =
      fun (x3433 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x3436 : Ojs.t) ->
             let x3437 = x3436 in
             ((Obj.magic (Ojs.array_get x3437 0)),
               (Obj.magic (Ojs.array_get x3437 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x3433) "entries" [||])
    let (keys : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x3438 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x3438) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x3442 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x3442) "values" [||])
    let (add : ('tags, 'T) this -> value:'T -> ('tags, 'T) this) =
      fun (x3447 : ('tags, 'T) this) ->
        fun ~value:(x3446 : 'T) ->
          this_of_js Obj.magic Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x3447) "add"
               [|(Obj.magic x3446)|])
    let (clear : ('tags, 'T) this -> unit) =
      fun (x3452 : ('tags, 'T) this) ->
        ignore (Ojs.call (this_to_js Obj.magic Obj.magic x3452) "clear" [||])
    let (delete : ('tags, 'T) this -> value:'T -> bool) =
      fun (x3456 : ('tags, 'T) this) ->
        fun ~value:(x3455 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x3456) "delete"
               [|(Obj.magic x3455)|])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> value2:'T -> set_:'T t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x3467 : ('tags, 'T) this) ->
        fun ~callbackfn:(x3459 : value:'T -> value2:'T -> set_:'T t -> unit)
          ->
          fun ?thisArg:(x3460 : any option) ->
            fun () ->
              ignore
                (let x3470 = this_to_js Obj.magic Obj.magic x3467 in
                 Ojs.call (Ojs.get_prop_ascii x3470 "forEach") "apply"
                   [|x3470;((let x3461 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3461 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3463 : Ojs.t) ->
                                          fun (x3464 : Ojs.t) ->
                                            fun (x3465 : Ojs.t) ->
                                              x3459 ~value:(Obj.magic x3463)
                                                ~value2:(Obj.magic x3464)
                                                ~set_:(t_of_js Obj.magic
                                                         x3465)))|]);
                             (match x3460 with
                              | Some x3462 ->
                                  ignore
                                    (Ojs.call x3461 "push"
                                       [|(any_to_js x3462)|])
                              | None -> ());
                             x3461))|])
    let (has : ('tags, 'T) this -> value:'T -> bool) =
      fun (x3472 : ('tags, 'T) this) ->
        fun ~value:(x3471 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x3472) "has"
               [|(Obj.magic x3471)|])
    let (get_size : ('tags, 'T) this -> float) =
      fun (x3475 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x3475) "size")
    let (create : ?iterable:'T Iterable.t or_null -> unit -> 'T t) =
      fun ?iterable:(x3478 : 'T Iterable.t or_null option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x3479 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x3478 with
                 | Some x3480 ->
                     ignore
                       (Ojs.call x3479 "push"
                          [|(or_null_to_js
                               (fun (x3481 : 'T Iterable.t) ->
                                  Iterable.t_to_js Obj.magic x3481) x3480)|])
                 | None -> ());
                x3479))
    let (create' : ?values:'T list or_null -> unit -> 'T t) =
      fun ?values:(x3484 : 'T list or_null option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x3485 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x3484 with
                 | Some x3486 ->
                     ignore
                       (Ojs.call x3485 "push"
                          [|(or_null_to_js
                               (fun (x3487 : 'T list) ->
                                  Ojs.list_to_js Obj.magic x3487) x3486)|])
                 | None -> ());
                x3485))
    let (prototype : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Set")
             "prototype")
    let cast_from = Obj.magic
  end
module ReturnType =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3492 : Ojs.t) -> any_of_js x3492
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x3491 : any) -> any_to_js x3491
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3495 : Ojs.t) -> t_of_js __T_of_js x3495
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x3493 : __T t) -> t_to_js __T_to_js x3493
  end
module Required =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3498 : Ojs.t) -> any_of_js x3498
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x3497 : any) -> any_to_js x3497
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3501 : Ojs.t) -> t_of_js __T_of_js x3501
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x3499 : __T t) -> t_to_js __T_to_js x3499
  end
module PropertyKey =
  struct
    type t = symbol or_string or_number
    let rec t_of_js : Ojs.t -> t =
      fun (x3506 : Ojs.t) ->
        or_number_of_js
          (fun (x3507 : Ojs.t) -> or_string_of_js symbol_of_js x3507) x3506
    and t_to_js : t -> Ojs.t =
      fun (x3503 : symbol or_string or_number) ->
        or_number_to_js
          (fun (x3504 : symbol or_string) ->
             or_string_to_js symbol_to_js x3504) x3503
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3510 : Ojs.t) -> t_of_js x3510
    and t_0_to_js : t_0 -> Ojs.t = fun (x3509 : t) -> t_to_js x3509
  end
module PropertyDescriptor =
  struct
    type t = [ `PropertyDescriptor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3512 : Ojs.t) -> t_of_js x3512
    and t_0_to_js : t_0 -> Ojs.t = fun (x3511 : t) -> t_to_js x3511
    type tags = [ `PropertyDescriptor ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `PropertyDescriptor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3515 : Ojs.t) -> intf_of_js __tags_of_js x3515
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3513 : __tags intf) -> intf_to_js __tags_to_js x3513
    let (get_configurable : 'tags this -> bool) =
      fun (x3517 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3517) "configurable")
    let (set_configurable : 'tags this -> bool -> unit) =
      fun (x3519 : 'tags this) ->
        fun (x3520 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3519) "configurable"
            (Ojs.bool_to_js x3520)
    let (get_enumerable : 'tags this -> bool) =
      fun (x3522 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3522) "enumerable")
    let (set_enumerable : 'tags this -> bool -> unit) =
      fun (x3524 : 'tags this) ->
        fun (x3525 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3524) "enumerable"
            (Ojs.bool_to_js x3525)
    let (get_value : 'tags this -> any) =
      fun (x3527 : 'tags this) ->
        any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x3527) "value")
    let (set_value : 'tags this -> any -> unit) =
      fun (x3529 : 'tags this) ->
        fun (x3530 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3529) "value"
            (any_to_js x3530)
    let (get_writable : 'tags this -> bool) =
      fun (x3532 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3532) "writable")
    let (set_writable : 'tags this -> bool -> unit) =
      fun (x3534 : 'tags this) ->
        fun (x3535 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3534) "writable"
            (Ojs.bool_to_js x3535)
    let (get_ : 'tags this -> any) =
      fun (x3537 : 'tags this) ->
        any_of_js (Ojs.call (this_to_js Obj.magic x3537) "get" [||])
    let (set_ : 'tags this -> v:any -> unit) =
      fun (x3540 : 'tags this) ->
        fun ~v:(x3539 : any) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x3540) "set"
               [|(any_to_js x3539)|])
    let cast_from = Obj.magic
  end
module Function =
  struct
    type t = [ `Function ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3543 : Ojs.t) -> t_of_js x3543
    and t_0_to_js : t_0 -> Ojs.t = fun (x3542 : t) -> t_to_js x3542
    type tags = [ `Function ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Function ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3546 : Ojs.t) -> intf_of_js __tags_of_js x3546
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3544 : __tags intf) -> intf_to_js __tags_to_js x3544
    let (get_name : 'tags this -> string) =
      fun (x3548 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3548) "name")
    let (apply_ :
      'tags this -> this:t -> thisArg:any -> ?argArray:any -> unit -> any) =
      fun (x3555 : 'tags this) ->
        fun ~this:(x3550 : t) ->
          fun ~thisArg:(x3551 : any) ->
            fun ?argArray:(x3552 : any option) ->
              fun () ->
                any_of_js
                  (let x3557 = this_to_js Obj.magic x3555 in
                   Ojs.call (Ojs.get_prop_ascii x3557 "apply") "apply"
                     [|x3557;((let x3553 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3553 "push" [|(t_to_js x3550)|]);
                               ignore
                                 (Ojs.call x3553 "push" [|(any_to_js x3551)|]);
                               (match x3552 with
                                | Some x3554 ->
                                    ignore
                                      (Ojs.call x3553 "push"
                                         [|(any_to_js x3554)|])
                                | None -> ());
                               x3553))|])
    let (call :
      'tags this -> this:t -> thisArg:any -> argArray:any list -> any) =
      fun (x3563 : 'tags this) ->
        fun ~this:(x3558 : t) ->
          fun ~thisArg:(x3559 : any) ->
            fun ~argArray:(x3560 : any list) ->
              any_of_js
                (let x3565 = this_to_js Obj.magic x3563 in
                 Ojs.call (Ojs.get_prop_ascii x3565 "call") "apply"
                   [|x3565;((let x3561 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3561 "push" [|(t_to_js x3558)|]);
                             ignore
                               (Ojs.call x3561 "push" [|(any_to_js x3559)|]);
                             List.iter
                               (fun (x3562 : any) ->
                                  ignore
                                    (Ojs.call x3561 "push"
                                       [|(any_to_js x3562)|])) x3560;
                             x3561))|])
    let (bind :
      'tags this -> this:t -> thisArg:any -> argArray:any list -> any) =
      fun (x3571 : 'tags this) ->
        fun ~this:(x3566 : t) ->
          fun ~thisArg:(x3567 : any) ->
            fun ~argArray:(x3568 : any list) ->
              any_of_js
                (let x3573 = this_to_js Obj.magic x3571 in
                 Ojs.call (Ojs.get_prop_ascii x3573 "bind") "apply"
                   [|x3573;((let x3569 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3569 "push" [|(t_to_js x3566)|]);
                             ignore
                               (Ojs.call x3569 "push" [|(any_to_js x3567)|]);
                             List.iter
                               (fun (x3570 : any) ->
                                  ignore
                                    (Ojs.call x3569 "push"
                                       [|(any_to_js x3570)|])) x3568;
                             x3569))|])
    let (toString : 'tags this -> string) =
      fun (x3574 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3574) "toString" [||])
    let (get_prototype : 'tags this -> any) =
      fun (x3576 : 'tags this) ->
        any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3576) "prototype")
    let (set_prototype : 'tags this -> any -> unit) =
      fun (x3578 : 'tags this) ->
        fun (x3579 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3578) "prototype"
            (any_to_js x3579)
    let (get_length : 'tags this -> float) =
      fun (x3581 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3581) "length")
    let (get_arguments : 'tags this -> any) =
      fun (x3583 : 'tags this) ->
        any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3583) "arguments")
    let (set_arguments : 'tags this -> any -> unit) =
      fun (x3585 : 'tags this) ->
        fun (x3586 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3585) "arguments"
            (any_to_js x3586)
    let (get_caller : 'tags this -> t) =
      fun (x3588 : 'tags this) ->
        t_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x3588) "caller")
    let (set_caller : 'tags this -> t -> unit) =
      fun (x3590 : 'tags this) ->
        fun (x3591 : t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3590) "caller"
            (t_to_js x3591)
    let (create : string list -> t) =
      fun (x3593 : string list) ->
        t_of_js
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Function")
             (let x3594 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x3595 : string) ->
                   ignore
                     (Ojs.call x3594 "push" [|(Ojs.string_to_js x3595)|]))
                x3593;
              x3594))
    let (invoke : string list -> t) =
      fun (x3596 : string list) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Function") "apply"
             [|Ojs.null;((let x3597 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x3598 : string) ->
                               ignore
                                 (Ojs.call x3597 "push"
                                    [|(Ojs.string_to_js x3598)|])) x3596;
                          x3597))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Function")
             "prototype")
    let cast_from = Obj.magic
  end
module Reflect =
  struct
    let (apply_ :
      target:Function.t ->
        thisArgument:any -> argumentsList:any ArrayLike.t -> any)
      =
      fun ~target:(x3599 : Function.t) ->
        fun ~thisArgument:(x3600 : any) ->
          fun ~argumentsList:(x3601 : any ArrayLike.t) ->
            any_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "apply"
                 [|(Function.t_to_js x3599);(any_to_js x3600);(ArrayLike.t_to_js
                                                                 any_to_js
                                                                 x3601)|])
    let (construct :
      target:Function.t ->
        argumentsList:any ArrayLike.t -> ?newTarget:Function.t -> unit -> any)
      =
      fun ~target:(x3603 : Function.t) ->
        fun ~argumentsList:(x3604 : any ArrayLike.t) ->
          fun ?newTarget:(x3605 : Function.t option) ->
            fun () ->
              any_of_js
                (let x3609 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                 Ojs.call (Ojs.get_prop_ascii x3609 "construct") "apply"
                   [|x3609;((let x3606 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3606 "push"
                                  [|(Function.t_to_js x3603)|]);
                             ignore
                               (Ojs.call x3606 "push"
                                  [|(ArrayLike.t_to_js any_to_js x3604)|]);
                             (match x3605 with
                              | Some x3607 ->
                                  ignore
                                    (Ojs.call x3606 "push"
                                       [|(Function.t_to_js x3607)|])
                              | None -> ());
                             x3606))|])
    let (defineProperty :
      target:untyped_object ->
        propertyKey:PropertyKey.t -> attributes:PropertyDescriptor.t -> bool)
      =
      fun ~target:(x3610 : untyped_object) ->
        fun ~propertyKey:(x3611 : PropertyKey.t) ->
          fun ~attributes:(x3612 : PropertyDescriptor.t) ->
            Ojs.bool_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
                 "defineProperty"
                 [|(untyped_object_to_js x3610);(PropertyKey.t_to_js x3611);(
                   PropertyDescriptor.t_to_js x3612)|])
    let (deleteProperty :
      target:untyped_object -> propertyKey:PropertyKey.t -> bool) =
      fun ~target:(x3613 : untyped_object) ->
        fun ~propertyKey:(x3614 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
               "deleteProperty"
               [|(untyped_object_to_js x3613);(PropertyKey.t_to_js x3614)|])
    let (get_ :
      target:untyped_object ->
        propertyKey:PropertyKey.t -> ?receiver:any -> unit -> any)
      =
      fun ~target:(x3615 : untyped_object) ->
        fun ~propertyKey:(x3616 : PropertyKey.t) ->
          fun ?receiver:(x3617 : any option) ->
            fun () ->
              any_of_js
                (let x3620 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                 Ojs.call (Ojs.get_prop_ascii x3620 "get") "apply"
                   [|x3620;((let x3618 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3618 "push"
                                  [|(untyped_object_to_js x3615)|]);
                             ignore
                               (Ojs.call x3618 "push"
                                  [|(PropertyKey.t_to_js x3616)|]);
                             (match x3617 with
                              | Some x3619 ->
                                  ignore
                                    (Ojs.call x3618 "push"
                                       [|(any_to_js x3619)|])
                              | None -> ());
                             x3618))|])
    let (getOwnPropertyDescriptor :
      target:untyped_object ->
        propertyKey:PropertyKey.t -> PropertyDescriptor.t or_undefined)
      =
      fun ~target:(x3621 : untyped_object) ->
        fun ~propertyKey:(x3622 : PropertyKey.t) ->
          or_undefined_of_js PropertyDescriptor.t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
               "getOwnPropertyDescriptor"
               [|(untyped_object_to_js x3621);(PropertyKey.t_to_js x3622)|])
    let (getPrototypeOf : untyped_object -> untyped_object or_null) =
      fun (x3624 : untyped_object) ->
        or_null_of_js untyped_object_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
             "getPrototypeOf" [|(untyped_object_to_js x3624)|])
    let (has : target:untyped_object -> propertyKey:PropertyKey.t -> bool) =
      fun ~target:(x3626 : untyped_object) ->
        fun ~propertyKey:(x3627 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "has"
               [|(untyped_object_to_js x3626);(PropertyKey.t_to_js x3627)|])
    let (isExtensible : untyped_object -> bool) =
      fun (x3628 : untyped_object) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "isExtensible"
             [|(untyped_object_to_js x3628)|])
    let (ownKeys : untyped_object -> symbol or_string list) =
      fun (x3629 : untyped_object) ->
        Ojs.list_of_js
          (fun (x3630 : Ojs.t) -> or_string_of_js symbol_of_js x3630)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "ownKeys"
             [|(untyped_object_to_js x3629)|])
    let (preventExtensions : untyped_object -> bool) =
      fun (x3632 : untyped_object) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
             "preventExtensions" [|(untyped_object_to_js x3632)|])
    let (set_ :
      target:untyped_object ->
        propertyKey:PropertyKey.t ->
          value:any -> ?receiver:any -> unit -> bool)
      =
      fun ~target:(x3633 : untyped_object) ->
        fun ~propertyKey:(x3634 : PropertyKey.t) ->
          fun ~value:(x3635 : any) ->
            fun ?receiver:(x3636 : any option) ->
              fun () ->
                Ojs.bool_of_js
                  (let x3639 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                   Ojs.call (Ojs.get_prop_ascii x3639 "set") "apply"
                     [|x3639;((let x3637 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3637 "push"
                                    [|(untyped_object_to_js x3633)|]);
                               ignore
                                 (Ojs.call x3637 "push"
                                    [|(PropertyKey.t_to_js x3634)|]);
                               ignore
                                 (Ojs.call x3637 "push" [|(any_to_js x3635)|]);
                               (match x3636 with
                                | Some x3638 ->
                                    ignore
                                      (Ojs.call x3637 "push"
                                         [|(any_to_js x3638)|])
                                | None -> ());
                               x3637))|])
    let (setPrototypeOf :
      target:untyped_object -> proto:untyped_object or_null -> bool) =
      fun ~target:(x3640 : untyped_object) ->
        fun ~proto:(x3641 : untyped_object or_null) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
               "setPrototypeOf"
               [|(untyped_object_to_js x3640);(or_null_to_js
                                                 untyped_object_to_js x3641)|])
  end
module ReferenceError =
  struct
    type t = [ `Error  | `ReferenceError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3644 : Ojs.t) -> t_of_js x3644
    and t_0_to_js : t_0 -> Ojs.t = fun (x3643 : t) -> t_to_js x3643
    type tags = [ `Error  | `ReferenceError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ReferenceError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3647 : Ojs.t) -> intf_of_js __tags_of_js x3647
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3645 : __tags intf) -> intf_to_js __tags_to_js x3645
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x3649 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "ReferenceError")
               (let x3650 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x3649 with
                 | Some x3651 ->
                     ignore
                       (Ojs.call x3650 "push" [|(Ojs.string_to_js x3651)|])
                 | None -> ());
                x3650))
    let (invoke : ?message:string -> unit -> t) =
      fun ?message:(x3652 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "ReferenceError")
               "apply"
               [|Ojs.null;((let x3653 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x3652 with
                             | Some x3654 ->
                                 ignore
                                   (Ojs.call x3653 "push"
                                      [|(Ojs.string_to_js x3654)|])
                             | None -> ());
                            x3653))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "ReferenceError") "prototype")
    let cast_from = Obj.magic
  end
module Record =
  struct
    type ('K, 'T) t = any
    let rec t_of_js :
      'K 'T . (Ojs.t -> 'K) -> (Ojs.t -> 'T) -> Ojs.t -> ('K, 'T) t = fun
      (type __K) -> fun (type __T) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x3656 : Ojs.t) -> any_of_js x3656
    and t_to_js :
      'K 'T . ('K -> Ojs.t) -> ('T -> Ojs.t) -> ('K, 'T) t -> Ojs.t = fun
      (type __K) -> fun (type __T) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x3655 : any) -> any_to_js x3655
    type ('K, 'T) t_2 = ('K, 'T) t
    let rec t_2_of_js :
      'K 'T . (Ojs.t -> 'K) -> (Ojs.t -> 'T) -> Ojs.t -> ('K, 'T) t_2 = fun
      (type __K) -> fun (type __T) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x3660 : Ojs.t) -> t_of_js __K_of_js __T_of_js x3660
    and t_2_to_js :
      'K 'T . ('K -> Ojs.t) -> ('T -> Ojs.t) -> ('K, 'T) t_2 -> Ojs.t = fun
      (type __K) -> fun (type __T) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x3657 : (__K, __T) t) -> t_to_js __K_to_js __T_to_js x3657
  end
module ReadonlySet =
  struct
    type 'T t = [ `ReadonlySet of 'T  | 'T IterableIterator.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3665 : Ojs.t) -> t_of_js __T_of_js x3665
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x3663 : __T t) -> t_to_js __T_to_js x3663
    type 'T tags = [ `ReadonlySet of 'T  | 'T IterableIterator.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ReadonlySet of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x3669 : Ojs.t) -> intf_of_js __tags_of_js x3669
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x3667 : __tags intf) -> intf_to_js __tags_to_js x3667
    let (entries : ('tags, 'T) this -> ('T * 'T) IterableIterator.t) =
      fun (x3671 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x3674 : Ojs.t) ->
             let x3675 = x3674 in
             ((Obj.magic (Ojs.array_get x3675 0)),
               (Obj.magic (Ojs.array_get x3675 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x3671) "entries" [||])
    let (keys : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x3676 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x3676) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x3680 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x3680) "values" [||])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> value2:'T -> set_:'T t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x3692 : ('tags, 'T) this) ->
        fun ~callbackfn:(x3684 : value:'T -> value2:'T -> set_:'T t -> unit)
          ->
          fun ?thisArg:(x3685 : any option) ->
            fun () ->
              ignore
                (let x3695 = this_to_js Obj.magic Obj.magic x3692 in
                 Ojs.call (Ojs.get_prop_ascii x3695 "forEach") "apply"
                   [|x3695;((let x3686 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3686 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3688 : Ojs.t) ->
                                          fun (x3689 : Ojs.t) ->
                                            fun (x3690 : Ojs.t) ->
                                              x3684 ~value:(Obj.magic x3688)
                                                ~value2:(Obj.magic x3689)
                                                ~set_:(t_of_js Obj.magic
                                                         x3690)))|]);
                             (match x3685 with
                              | Some x3687 ->
                                  ignore
                                    (Ojs.call x3686 "push"
                                       [|(any_to_js x3687)|])
                              | None -> ());
                             x3686))|])
    let (has : ('tags, 'T) this -> value:'T -> bool) =
      fun (x3697 : ('tags, 'T) this) ->
        fun ~value:(x3696 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x3697) "has"
               [|(Obj.magic x3696)|])
    let (get_size : ('tags, 'T) this -> float) =
      fun (x3700 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x3700) "size")
    let cast_from = Obj.magic
  end
module ReadonlyMap =
  struct
    type ('K, 'V) t =
      [ `ReadonlyMap of ('K * 'V)  | ('K * 'V) IterableIterator.tags_1] intf
    let rec t_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t =
      fun _K -> fun _V -> Obj.magic
    and t_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t -> Ojs.t =
      fun _K -> fun _V -> Obj.magic
    type ('K, 'V) t_2 = ('K, 'V) t
    let rec t_2_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t_2 = fun
      (type __K) -> fun (type __V) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__V_of_js : Ojs.t -> __V) ->
          fun (x3706 : Ojs.t) -> t_of_js __K_of_js __V_of_js x3706
    and t_2_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t_2 -> Ojs.t = fun
      (type __K) -> fun (type __V) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__V_to_js : __V -> Ojs.t) ->
          fun (x3703 : (__K, __V) t) -> t_to_js __K_to_js __V_to_js x3703
    type ('K, 'V) tags =
      [ `ReadonlyMap of ('K * 'V)  | ('K * 'V) IterableIterator.tags_1]
    type ('K, 'V) tags_2 = ('K, 'V) tags
    type ('tags, 'K, 'V) this =
      'tags intf constraint 'tags = [> `ReadonlyMap of ('K * 'V) ]
    let rec this_of_js :
      'tags 'K 'V .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('tags, 'K, 'V) this
      = fun (type __tags) -> fun (type __K) -> fun (type __V) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (__V_of_js : Ojs.t -> __V) ->
            fun (x3711 : Ojs.t) -> intf_of_js __tags_of_js x3711
    and this_to_js :
      'tags 'K 'V .
        ('tags -> Ojs.t) ->
          ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('tags, 'K, 'V) this -> Ojs.t
      = fun (type __tags) -> fun (type __K) -> fun (type __V) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (__V_to_js : __V -> Ojs.t) ->
            fun (x3709 : __tags intf) -> intf_to_js __tags_to_js x3709
    let (entries : ('tags, 'K, 'V) this -> ('K * 'V) IterableIterator.t) =
      fun (x3713 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js
          (fun (x3717 : Ojs.t) ->
             let x3718 = x3717 in
             ((Obj.magic (Ojs.array_get x3718 0)),
               (Obj.magic (Ojs.array_get x3718 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x3713)
             "entries" [||])
    let (keys : ('tags, 'K, 'V) this -> 'K IterableIterator.t) =
      fun (x3719 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x3719) "keys"
             [||])
    let (values : ('tags, 'K, 'V) this -> 'V IterableIterator.t) =
      fun (x3724 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x3724) "values"
             [||])
    let (forEach :
      ('tags, 'K, 'V) this ->
        callbackfn:(value:'V -> key:'K -> map:('K, 'V) t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x3738 : ('tags, 'K, 'V) this) ->
        fun
          ~callbackfn:(x3729 : value:'V -> key:'K -> map:('K, 'V) t -> unit)
          ->
          fun ?thisArg:(x3730 : any option) ->
            fun () ->
              ignore
                (let x3742 = this_to_js Obj.magic Obj.magic Obj.magic x3738 in
                 Ojs.call (Ojs.get_prop_ascii x3742 "forEach") "apply"
                   [|x3742;((let x3731 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3731 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3733 : Ojs.t) ->
                                          fun (x3734 : Ojs.t) ->
                                            fun (x3735 : Ojs.t) ->
                                              x3729 ~value:(Obj.magic x3733)
                                                ~key:(Obj.magic x3734)
                                                ~map:(t_of_js Obj.magic
                                                        Obj.magic x3735)))|]);
                             (match x3730 with
                              | Some x3732 ->
                                  ignore
                                    (Ojs.call x3731 "push"
                                       [|(any_to_js x3732)|])
                              | None -> ());
                             x3731))|])
    let (get_ : ('tags, 'K, 'V) this -> key:'K -> 'V or_undefined) =
      fun (x3744 : ('tags, 'K, 'V) this) ->
        fun ~key:(x3743 : 'K) ->
          or_undefined_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x3744) "get"
               [|(Obj.magic x3743)|])
    let (has : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x3750 : ('tags, 'K, 'V) this) ->
        fun ~key:(x3749 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x3750) "has"
               [|(Obj.magic x3749)|])
    let (get_size : ('tags, 'K, 'V) this -> float) =
      fun (x3754 : ('tags, 'K, 'V) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (this_to_js Obj.magic Obj.magic Obj.magic x3754) "size")
    let cast_from = Obj.magic
  end
module RangeError =
  struct
    type t = [ `Error  | `RangeError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3759 : Ojs.t) -> t_of_js x3759
    and t_0_to_js : t_0 -> Ojs.t = fun (x3758 : t) -> t_to_js x3758
    type tags = [ `Error  | `RangeError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RangeError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3762 : Ojs.t) -> intf_of_js __tags_of_js x3762
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3760 : __tags intf) -> intf_to_js __tags_to_js x3760
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x3764 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RangeError")
               (let x3765 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x3764 with
                 | Some x3766 ->
                     ignore
                       (Ojs.call x3765 "push" [|(Ojs.string_to_js x3766)|])
                 | None -> ());
                x3765))
    let (invoke : ?message:string -> unit -> t) =
      fun ?message:(x3767 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "RangeError") "apply"
               [|Ojs.null;((let x3768 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x3767 with
                             | Some x3769 ->
                                 ignore
                                   (Ojs.call x3768 "push"
                                      [|(Ojs.string_to_js x3769)|])
                             | None -> ());
                            x3768))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RangeError")
             "prototype")
    let cast_from = Obj.magic
  end
module ProxyHandler =
  struct
    type 'T t = [ `ProxyHandler of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3772 : Ojs.t) -> t_of_js __T_of_js x3772
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x3770 : __T t) -> t_to_js __T_to_js x3770
    type 'T tags = [ `ProxyHandler of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ProxyHandler of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x3776 : Ojs.t) -> intf_of_js __tags_of_js x3776
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x3774 : __tags intf) -> intf_to_js __tags_to_js x3774
    let (apply_ :
      ('tags, 'T) this ->
        target:'T -> thisArg:any -> argArray:any list -> any)
      =
      fun (x3782 : ('tags, 'T) this) ->
        fun ~target:(x3778 : 'T) ->
          fun ~thisArg:(x3779 : any) ->
            fun ~argArray:(x3780 : any list) ->
              any_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x3782) "apply"
                   [|(Obj.magic x3778);(any_to_js x3779);(Ojs.list_to_js
                                                            any_to_js x3780)|])
    let (construct :
      ('tags, 'T) this ->
        target:'T ->
          argArray:any list -> newTarget:Function.t -> untyped_object)
      =
      fun (x3789 : ('tags, 'T) this) ->
        fun ~target:(x3785 : 'T) ->
          fun ~argArray:(x3786 : any list) ->
            fun ~newTarget:(x3788 : Function.t) ->
              untyped_object_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x3789) "construct"
                   [|(Obj.magic x3785);(Ojs.list_to_js any_to_js x3786);(
                     Function.t_to_js x3788)|])
    let (defineProperty :
      ('tags, 'T) this ->
        target:'T ->
          p:symbol or_string -> attributes:PropertyDescriptor.t -> bool)
      =
      fun (x3796 : ('tags, 'T) this) ->
        fun ~target:(x3792 : 'T) ->
          fun ~p:(x3793 : symbol or_string) ->
            fun ~attributes:(x3795 : PropertyDescriptor.t) ->
              Ojs.bool_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x3796)
                   "defineProperty"
                   [|(Obj.magic x3792);(or_string_to_js symbol_to_js x3793);(
                     PropertyDescriptor.t_to_js x3795)|])
    let (deleteProperty :
      ('tags, 'T) this -> target:'T -> p:symbol or_string -> bool) =
      fun (x3802 : ('tags, 'T) this) ->
        fun ~target:(x3799 : 'T) ->
          fun ~p:(x3800 : symbol or_string) ->
            Ojs.bool_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x3802)
                 "deleteProperty"
                 [|(Obj.magic x3799);(or_string_to_js symbol_to_js x3800)|])
    let (get_ :
      ('tags, 'T) this ->
        target:'T -> p:symbol or_string -> receiver:any -> any)
      =
      fun (x3809 : ('tags, 'T) this) ->
        fun ~target:(x3805 : 'T) ->
          fun ~p:(x3806 : symbol or_string) ->
            fun ~receiver:(x3808 : any) ->
              any_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x3809) "get"
                   [|(Obj.magic x3805);(or_string_to_js symbol_to_js x3806);(
                     any_to_js x3808)|])
    let (getOwnPropertyDescriptor :
      ('tags, 'T) this ->
        target:'T -> p:symbol or_string -> PropertyDescriptor.t or_undefined)
      =
      fun (x3815 : ('tags, 'T) this) ->
        fun ~target:(x3812 : 'T) ->
          fun ~p:(x3813 : symbol or_string) ->
            or_undefined_of_js PropertyDescriptor.t_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x3815)
                 "getOwnPropertyDescriptor"
                 [|(Obj.magic x3812);(or_string_to_js symbol_to_js x3813)|])
    let (getPrototypeOf :
      ('tags, 'T) this -> target:'T -> untyped_object or_null) =
      fun (x3820 : ('tags, 'T) this) ->
        fun ~target:(x3819 : 'T) ->
          or_null_of_js untyped_object_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x3820) "getPrototypeOf"
               [|(Obj.magic x3819)|])
    let (has : ('tags, 'T) this -> target:'T -> p:symbol or_string -> bool) =
      fun (x3827 : ('tags, 'T) this) ->
        fun ~target:(x3824 : 'T) ->
          fun ~p:(x3825 : symbol or_string) ->
            Ojs.bool_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x3827) "has"
                 [|(Obj.magic x3824);(or_string_to_js symbol_to_js x3825)|])
    let (isExtensible : ('tags, 'T) this -> target:'T -> bool) =
      fun (x3831 : ('tags, 'T) this) ->
        fun ~target:(x3830 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x3831) "isExtensible"
               [|(Obj.magic x3830)|])
    let (ownKeys :
      ('tags, 'T) this -> target:'T -> symbol or_string ArrayLike.t) =
      fun (x3835 : ('tags, 'T) this) ->
        fun ~target:(x3834 : 'T) ->
          ArrayLike.t_of_js
            (fun (x3838 : Ojs.t) -> or_string_of_js symbol_of_js x3838)
            (Ojs.call (this_to_js Obj.magic Obj.magic x3835) "ownKeys"
               [|(Obj.magic x3834)|])
    let (preventExtensions : ('tags, 'T) this -> target:'T -> bool) =
      fun (x3841 : ('tags, 'T) this) ->
        fun ~target:(x3840 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x3841)
               "preventExtensions" [|(Obj.magic x3840)|])
    let (set_ :
      ('tags, 'T) this ->
        target:'T -> p:symbol or_string -> value:any -> receiver:any -> bool)
      =
      fun (x3849 : ('tags, 'T) this) ->
        fun ~target:(x3844 : 'T) ->
          fun ~p:(x3845 : symbol or_string) ->
            fun ~value:(x3847 : any) ->
              fun ~receiver:(x3848 : any) ->
                Ojs.bool_of_js
                  (Ojs.call (this_to_js Obj.magic Obj.magic x3849) "set"
                     [|(Obj.magic x3844);(or_string_to_js symbol_to_js x3845);(
                       any_to_js x3847);(any_to_js x3848)|])
    let (setPrototypeOf :
      ('tags, 'T) this -> target:'T -> v:untyped_object or_null -> bool) =
      fun (x3855 : ('tags, 'T) this) ->
        fun ~target:(x3852 : 'T) ->
          fun ~v:(x3853 : untyped_object or_null) ->
            Ojs.bool_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x3855)
                 "setPrototypeOf"
                 [|(Obj.magic x3852);(or_null_to_js untyped_object_to_js
                                        x3853)|])
    let cast_from = Obj.magic
  end
module ProxyStatic =
  struct
    module AnonymousInterface41 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) -> fun (x3859 : Ojs.t) -> x3859
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) -> fun (x3858 : Ojs.t) -> x3858
        let (get_proxy : 'T t -> 'T) =
          fun (x3860 : 'T t) ->
            Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x3860) "proxy")
        let (set_proxy : 'T t -> 'T -> unit) =
          fun (x3862 : 'T t) ->
            fun (x3863 : 'T) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x3862) "proxy"
                (Obj.magic x3863)
        let (revoke : 'T t -> unit) =
          fun (x3865 : 'T t) ->
            ignore (Ojs.call (t_to_js Obj.magic x3865) "revoke" [||])
      end
    let (revocable :
      target:'T -> handler:'T ProxyHandler.t -> 'T AnonymousInterface41.t) =
      fun ~target:(x3867 : 'T) ->
        fun ~handler:(x3868 : 'T ProxyHandler.t) ->
          AnonymousInterface41.t_of_js Obj.magic
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Proxy") "revocable"
               [|(Obj.magic x3867);(ProxyHandler.t_to_js Obj.magic x3868)|])
    let (create : target:'T -> handler:'T ProxyHandler.t -> 'T) =
      fun ~target:(x3871 : 'T) ->
        fun ~handler:(x3872 : 'T ProxyHandler.t) ->
          Obj.magic
            (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Proxy")
               [|(Obj.magic x3871);(ProxyHandler.t_to_js Obj.magic x3872)|])
  end
module ProxyConstructor =
  struct
    module AnonymousInterface41 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) -> fun (x3875 : Ojs.t) -> x3875
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) -> fun (x3874 : Ojs.t) -> x3874
        let (get_proxy : 'T t -> 'T) =
          fun (x3876 : 'T t) ->
            Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x3876) "proxy")
        let (set_proxy : 'T t -> 'T -> unit) =
          fun (x3878 : 'T t) ->
            fun (x3879 : 'T) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x3878) "proxy"
                (Obj.magic x3879)
        let (revoke : 'T t -> unit) =
          fun (x3881 : 'T t) ->
            ignore (Ojs.call (t_to_js Obj.magic x3881) "revoke" [||])
      end
    type t = [ `ProxyConstructor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3884 : Ojs.t) -> t_of_js x3884
    and t_0_to_js : t_0 -> Ojs.t = fun (x3883 : t) -> t_to_js x3883
    type tags = [ `ProxyConstructor ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ProxyConstructor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3887 : Ojs.t) -> intf_of_js __tags_of_js x3887
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3885 : __tags intf) -> intf_to_js __tags_to_js x3885
    let (revocable :
      'tags this ->
        target:'T -> handler:'T ProxyHandler.t -> 'T AnonymousInterface41.t)
      =
      fun (x3892 : 'tags this) ->
        fun ~target:(x3889 : 'T) ->
          fun ~handler:(x3890 : 'T ProxyHandler.t) ->
            AnonymousInterface41.t_of_js Obj.magic
              (Ojs.call (this_to_js Obj.magic x3892) "revocable"
                 [|(Obj.magic x3889);(ProxyHandler.t_to_js Obj.magic x3890)|])
    let (create : 'tags this -> target:'T -> handler:'T ProxyHandler.t -> 'T)
      =
      fun (x3898 : 'tags this) ->
        fun ~target:(x3895 : 'T) ->
          fun ~handler:(x3896 : 'T ProxyHandler.t) ->
            Obj.magic
              (Ojs.new_obj (this_to_js Obj.magic x3898)
                 [|(Obj.magic x3895);(ProxyHandler.t_to_js Obj.magic x3896)|])
    let cast_from = Obj.magic
  end
module ThisType =
  struct
    type 'T t = [ `ThisType of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3902 : Ojs.t) -> t_of_js __T_of_js x3902
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x3900 : __T t) -> t_to_js __T_to_js x3900
    type 'T tags = [ `ThisType of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ThisType of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x3906 : Ojs.t) -> intf_of_js __tags_of_js x3906
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x3904 : __tags intf) -> intf_to_js __tags_to_js x3904
    let cast_from = Obj.magic
  end
module Readonly =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3909 : Ojs.t) -> any_of_js x3909
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x3908 : any) -> any_to_js x3908
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3912 : Ojs.t) -> t_of_js __T_of_js x3912
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x3910 : __T t) -> t_to_js __T_to_js x3910
  end
module PropertyDescriptorMap =
  struct
    type t = [ `PropertyDescriptorMap ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3915 : Ojs.t) -> t_of_js x3915
    and t_0_to_js : t_0 -> Ojs.t = fun (x3914 : t) -> t_to_js x3914
    type tags = [ `PropertyDescriptorMap ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `PropertyDescriptorMap ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3918 : Ojs.t) -> intf_of_js __tags_of_js x3918
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3916 : __tags intf) -> intf_to_js __tags_to_js x3916
    let (get : 'tags this -> string -> PropertyDescriptor.t) =
      fun (x3920 : 'tags this) ->
        fun (x3922 : string) ->
          PropertyDescriptor.t_of_js
            (Ojs.get_prop (this_to_js Obj.magic x3920)
               (Ojs.string_to_js x3922))
    let (set : 'tags this -> string -> PropertyDescriptor.t -> unit) =
      fun (x3923 : 'tags this) ->
        fun (x3925 : string) ->
          fun (x3926 : PropertyDescriptor.t) ->
            Ojs.set_prop (this_to_js Obj.magic x3923)
              (Ojs.string_to_js x3925) (PropertyDescriptor.t_to_js x3926)
    let cast_from = Obj.magic
  end
module Object =
  struct
    module AnonymousInterface48 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) -> fun (x3928 : Ojs.t) -> x3928
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) -> fun (x3927 : Ojs.t) -> x3927
        let (get : 'T t -> string -> 'T) =
          fun (x3929 : 'T t) ->
            fun (x3931 : string) ->
              Obj.magic
                (Ojs.get_prop (t_to_js Obj.magic x3929)
                   (Ojs.string_to_js x3931))
        let (set : 'T t -> string -> 'T -> unit) =
          fun (x3932 : 'T t) ->
            fun (x3934 : string) ->
              fun (x3935 : 'T) ->
                Ojs.set_prop (t_to_js Obj.magic x3932)
                  (Ojs.string_to_js x3934) (Obj.magic x3935)
      end
    module AnonymousInterface45 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) -> fun (x3937 : Ojs.t) -> x3937
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) -> fun (x3936 : Ojs.t) -> x3936
        let (get : 'T t -> string -> 'T) =
          fun (x3938 : 'T t) ->
            fun (x3940 : string) ->
              Obj.magic
                (Ojs.get_prop (t_to_js Obj.magic x3938)
                   (Ojs.string_to_js x3940))
        let (set : 'T t -> string -> 'T -> unit) =
          fun (x3941 : 'T t) ->
            fun (x3943 : string) ->
              fun (x3944 : 'T) ->
                Ojs.set_prop (t_to_js Obj.magic x3941)
                  (Ojs.string_to_js x3943) (Obj.magic x3944)
      end
    module AnonymousInterface17 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3946 : Ojs.t) -> x3946
        and t_to_js : t -> Ojs.t = fun (x3945 : Ojs.t) -> x3945
        let (get : t -> string -> PropertyDescriptor.t) =
          fun (x3947 : t) ->
            fun (x3948 : string) ->
              PropertyDescriptor.t_of_js
                (Ojs.get_prop (t_to_js x3947) (Ojs.string_to_js x3948))
        let (set : t -> string -> PropertyDescriptor.t -> unit) =
          fun (x3949 : t) ->
            fun (x3950 : string) ->
              fun (x3951 : PropertyDescriptor.t) ->
                Ojs.set_prop (t_to_js x3949) (Ojs.string_to_js x3950)
                  (PropertyDescriptor.t_to_js x3951)
      end
    type t = [ `Object ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3953 : Ojs.t) -> t_of_js x3953
    and t_0_to_js : t_0 -> Ojs.t = fun (x3952 : t) -> t_to_js x3952
    type tags = [ `Object ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Object ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3956 : Ojs.t) -> intf_of_js __tags_of_js x3956
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3954 : __tags intf) -> intf_to_js __tags_to_js x3954
    let (get_constructor : 'tags this -> Function.t) =
      fun (x3958 : 'tags this) ->
        Function.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3958) "constructor")
    let (set_constructor : 'tags this -> Function.t -> unit) =
      fun (x3960 : 'tags this) ->
        fun (x3961 : Function.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3960) "constructor"
            (Function.t_to_js x3961)
    let (toString : 'tags this -> string) =
      fun (x3963 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3963) "toString" [||])
    let (toLocaleString : 'tags this -> string) =
      fun (x3965 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3965) "toLocaleString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x3967 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x3967) "valueOf" [||])
    let (hasOwnProperty : 'tags this -> v:PropertyKey.t -> bool) =
      fun (x3970 : 'tags this) ->
        fun ~v:(x3969 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x3970) "hasOwnProperty"
               [|(PropertyKey.t_to_js x3969)|])
    let (isPrototypeOf : 'tags this -> v:t -> bool) =
      fun (x3973 : 'tags this) ->
        fun ~v:(x3972 : t) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x3973) "isPrototypeOf"
               [|(t_to_js x3972)|])
    let (propertyIsEnumerable : 'tags this -> v:PropertyKey.t -> bool) =
      fun (x3976 : 'tags this) ->
        fun ~v:(x3975 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x3976) "propertyIsEnumerable"
               [|(PropertyKey.t_to_js x3975)|])
    let (fromEntries :
      (PropertyKey.t * 'T) Iterable.t -> 'T AnonymousInterface45.t) =
      fun (x3978 : (PropertyKey.t * 'T) Iterable.t) ->
        AnonymousInterface45.t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "fromEntries"
             [|(Iterable.t_to_js
                  (fun (x3979 : (PropertyKey.t * 'T)) ->
                     let (x3980, x3981) = x3979 in
                     let x3982 = Ojs.array_make 2 in
                     Ojs.array_set x3982 0 (PropertyKey.t_to_js x3980);
                     Ojs.array_set x3982 1 (Obj.magic x3981);
                     x3982) x3978)|])
    let (fromEntries' : any list Iterable.t -> any) =
      fun (x3984 : any list Iterable.t) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "fromEntries"
             [|(Iterable.t_to_js
                  (fun (x3985 : any list) -> Ojs.list_to_js any_to_js x3985)
                  x3984)|])
    let (values :
      ('T ArrayLike.t, 'T AnonymousInterface48.t) union2 -> 'T list) =
      fun (x3987 : ('T ArrayLike.t, 'T AnonymousInterface48.t) union2) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "values"
             [|(union2_to_js
                  (fun (x3988 : 'T ArrayLike.t) ->
                     ArrayLike.t_to_js Obj.magic x3988)
                  (fun (x3990 : 'T AnonymousInterface48.t) ->
                     AnonymousInterface48.t_to_js Obj.magic x3990) x3987)|])
    let (values' : untyped_object -> any list) =
      fun (x3993 : untyped_object) ->
        Ojs.list_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "values"
             [|(untyped_object_to_js x3993)|])
    let (entries :
      ('T ArrayLike.t, 'T AnonymousInterface48.t) union2 ->
        (string * 'T) list)
      =
      fun (x3995 : ('T ArrayLike.t, 'T AnonymousInterface48.t) union2) ->
        Ojs.list_of_js
          (fun (x4000 : Ojs.t) ->
             let x4001 = x4000 in
             ((Ojs.string_of_js (Ojs.array_get x4001 0)),
               (Obj.magic (Ojs.array_get x4001 1))))
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "entries"
             [|(union2_to_js
                  (fun (x3996 : 'T ArrayLike.t) ->
                     ArrayLike.t_to_js Obj.magic x3996)
                  (fun (x3998 : 'T AnonymousInterface48.t) ->
                     AnonymousInterface48.t_to_js Obj.magic x3998) x3995)|])
    let (entries' : untyped_object -> (string * any) list) =
      fun (x4002 : untyped_object) ->
        Ojs.list_of_js
          (fun (x4003 : Ojs.t) ->
             let x4004 = x4003 in
             ((Ojs.string_of_js (Ojs.array_get x4004 0)),
               (any_of_js (Ojs.array_get x4004 1))))
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "entries"
             [|(untyped_object_to_js x4002)|])
    let (getOwnPropertyDescriptors :
      'T -> (any, AnonymousInterface17.t) intersection2) =
      fun (x4005 : 'T) ->
        intersection2_of_js any_of_js AnonymousInterface17.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertyDescriptors" [|(Obj.magic x4005)|])
    let (assign : target:'T -> source:'U -> ('T, 'U) intersection2) =
      fun ~target:(x4008 : 'T) ->
        fun ~source:(x4009 : 'U) ->
          intersection2_of_js Obj.magic Obj.magic
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "assign"
               [|(Obj.magic x4008);(Obj.magic x4009)|])
    let (assign' :
      target:'T -> source1:'U -> source2:'V -> ('T, 'U, 'V) intersection3) =
      fun ~target:(x4012 : 'T) ->
        fun ~source1:(x4013 : 'U) ->
          fun ~source2:(x4014 : 'V) ->
            intersection3_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "assign"
                 [|(Obj.magic x4012);(Obj.magic x4013);(Obj.magic x4014)|])
    let (assign'' :
      target:'T ->
        source1:'U ->
          source2:'V -> source3:'W -> ('T, 'U, 'V, 'W) intersection4)
      =
      fun ~target:(x4018 : 'T) ->
        fun ~source1:(x4019 : 'U) ->
          fun ~source2:(x4020 : 'V) ->
            fun ~source3:(x4021 : 'W) ->
              intersection4_of_js Obj.magic Obj.magic Obj.magic Obj.magic
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "assign"
                   [|(Obj.magic x4018);(Obj.magic x4019);(Obj.magic x4020);(
                     Obj.magic x4021)|])
    let (assign''' : target:untyped_object -> sources:any list -> any) =
      fun ~target:(x4026 : untyped_object) ->
        fun ~sources:(x4027 : any list) ->
          any_of_js
            (let x4030 = Ojs.get_prop_ascii Ojs.global "Object" in
             Ojs.call (Ojs.get_prop_ascii x4030 "assign") "apply"
               [|x4030;((let x4028 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         ignore
                           (Ojs.call x4028 "push"
                              [|(untyped_object_to_js x4026)|]);
                         List.iter
                           (fun (x4029 : any) ->
                              ignore
                                (Ojs.call x4028 "push" [|(any_to_js x4029)|]))
                           x4027;
                         x4028))|])
    let (getOwnPropertySymbols : any -> symbol list) =
      fun (x4031 : any) ->
        Ojs.list_of_js symbol_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertySymbols" [|(any_to_js x4031)|])
    let (keys : untyped_object -> string list) =
      fun (x4033 : untyped_object) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "keys"
             [|(untyped_object_to_js x4033)|])
    let (is : value1:any -> value2:any -> bool) =
      fun ~value1:(x4035 : any) ->
        fun ~value2:(x4036 : any) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "is"
               [|(any_to_js x4035);(any_to_js x4036)|])
    let (setPrototypeOf : o:any -> proto:untyped_object or_null -> any) =
      fun ~o:(x4037 : any) ->
        fun ~proto:(x4038 : untyped_object or_null) ->
          any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "setPrototypeOf"
               [|(any_to_js x4037);(or_null_to_js untyped_object_to_js x4038)|])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x4040 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Object")
               (let x4041 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4040 with
                 | Some x4042 ->
                     ignore (Ojs.call x4041 "push" [|(any_to_js x4042)|])
                 | None -> ());
                x4041))
    let (invoke : unit -> any) =
      fun () ->
        any_of_js (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Object") [||])
    let (invoke' : any -> any) =
      fun (x4043 : any) ->
        any_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Object")
             [|(any_to_js x4043)|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Object")
             "prototype")
    let (getPrototypeOf : any -> any) =
      fun (x4044 : any) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "getPrototypeOf"
             [|(any_to_js x4044)|])
    let (getOwnPropertyDescriptor :
      o:any -> p:PropertyKey.t -> PropertyDescriptor.t or_undefined) =
      fun ~o:(x4045 : any) ->
        fun ~p:(x4046 : PropertyKey.t) ->
          or_undefined_of_js PropertyDescriptor.t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "getOwnPropertyDescriptor"
               [|(any_to_js x4045);(PropertyKey.t_to_js x4046)|])
    let (getOwnPropertyNames : any -> string list) =
      fun (x4048 : any) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertyNames" [|(any_to_js x4048)|])
    let (create_ : untyped_object or_null -> any) =
      fun (x4050 : untyped_object or_null) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "create"
             [|(or_null_to_js untyped_object_to_js x4050)|])
    let (create_' :
      o:untyped_object or_null ->
        properties:(PropertyDescriptorMap.t, any ThisType.t) intersection2 ->
          any)
      =
      fun ~o:(x4052 : untyped_object or_null) ->
        fun
          ~properties:(x4054 :
                        (PropertyDescriptorMap.t, any ThisType.t)
                          intersection2)
          ->
          any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "create"
               [|(or_null_to_js untyped_object_to_js x4052);(intersection2_to_js
                                                               PropertyDescriptorMap.t_to_js
                                                               (fun
                                                                  (x4056 :
                                                                    any
                                                                    ThisType.t)
                                                                  ->
                                                                  ThisType.t_to_js
                                                                    any_to_js
                                                                    x4056)
                                                               x4054)|])
    let (defineProperty :
      o:'T ->
        p:PropertyKey.t ->
          attributes:(PropertyDescriptor.t, any ThisType.t) intersection2 ->
            'T)
      =
      fun ~o:(x4058 : 'T) ->
        fun ~p:(x4059 : PropertyKey.t) ->
          fun
            ~attributes:(x4060 :
                          (PropertyDescriptor.t, any ThisType.t)
                            intersection2)
            ->
            Obj.magic
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
                 "defineProperty"
                 [|(Obj.magic x4058);(PropertyKey.t_to_js x4059);(intersection2_to_js
                                                                    PropertyDescriptor.t_to_js
                                                                    (
                                                                    fun
                                                                    (x4062 :
                                                                    any
                                                                    ThisType.t)
                                                                    ->
                                                                    ThisType.t_to_js
                                                                    any_to_js
                                                                    x4062)
                                                                    x4060)|])
    let (defineProperties :
      o:'T ->
        properties:(PropertyDescriptorMap.t, any ThisType.t) intersection2 ->
          'T)
      =
      fun ~o:(x4064 : 'T) ->
        fun
          ~properties:(x4065 :
                        (PropertyDescriptorMap.t, any ThisType.t)
                          intersection2)
          ->
          Obj.magic
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "defineProperties"
               [|(Obj.magic x4064);(intersection2_to_js
                                      PropertyDescriptorMap.t_to_js
                                      (fun (x4067 : any ThisType.t) ->
                                         ThisType.t_to_js any_to_js x4067)
                                      x4065)|])
    let (seal : 'T -> 'T) =
      fun (x4069 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "seal"
             [|(Obj.magic x4069)|])
    let (freeze : 'T list -> 'T list) =
      fun (x4070 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Ojs.list_to_js Obj.magic x4070)|])
    let (freeze' : 'T -> 'T) =
      fun (x4073 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Obj.magic x4073)|])
    let (freeze'' : 'T -> 'T Readonly.t) =
      fun (x4074 : 'T) ->
        Readonly.t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Obj.magic x4074)|])
    let (preventExtensions : 'T -> 'T) =
      fun (x4076 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "preventExtensions" [|(Obj.magic x4076)|])
    let (isSealed : any -> bool) =
      fun (x4077 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isSealed"
             [|(any_to_js x4077)|])
    let (isFrozen : any -> bool) =
      fun (x4078 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isFrozen"
             [|(any_to_js x4078)|])
    let (isExtensible : any -> bool) =
      fun (x4079 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isExtensible"
             [|(any_to_js x4079)|])
    let (keys' : untyped_object -> string list) =
      fun (x4080 : untyped_object) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "keys"
             [|(untyped_object_to_js x4080)|])
    let cast_from = Obj.magic
  end
module PropertyDecorator =
  struct
    type t = [ `PropertyDecorator ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4083 : Ojs.t) -> t_of_js x4083
    and t_0_to_js : t_0 -> Ojs.t = fun (x4082 : t) -> t_to_js x4082
    type tags = [ `PropertyDecorator ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `PropertyDecorator ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4086 : Ojs.t) -> intf_of_js __tags_of_js x4086
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4084 : __tags intf) -> intf_to_js __tags_to_js x4084
    let (apply :
      'tags this -> target:Object.t -> propertyKey:symbol or_string -> unit)
      =
      fun (x4091 : 'tags this) ->
        fun ~target:(x4088 : Object.t) ->
          fun ~propertyKey:(x4089 : symbol or_string) ->
            ignore
              (Ojs.apply (this_to_js Obj.magic x4091)
                 [|(Object.t_to_js x4088);(or_string_to_js symbol_to_js x4089)|])
    let cast_from = Obj.magic
  end
module PromiseLike =
  struct
    type 'T t = [ `PromiseLike of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4095 : Ojs.t) -> t_of_js __T_of_js x4095
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4093 : __T t) -> t_to_js __T_to_js x4093
    type 'T tags = [ `PromiseLike of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `PromiseLike of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4099 : Ojs.t) -> intf_of_js __tags_of_js x4099
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4097 : __tags intf) -> intf_to_js __tags_to_js x4097
    let (then_ :
      ('tags, 'T) this ->
        ?onfulfilled:('T -> ('TResult1, 'TResult1 t) union2)
          or_null_or_undefined ->
          ?onrejected:(any -> ('TResult2, 'TResult2 t) union2)
            or_null_or_undefined -> unit -> ('TResult1, 'TResult2) union2 t)
      =
      fun (x4116 : ('tags, 'T) this) ->
        fun
          ?onfulfilled:(x4101 :
                         ('T -> ('TResult1, 'TResult1 t) union2)
                           or_null_or_undefined option)
          ->
          fun
            ?onrejected:(x4102 :
                          (any -> ('TResult2, 'TResult2 t) union2)
                            or_null_or_undefined option)
            ->
            fun () ->
              t_of_js
                (fun (x4120 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x4120)
                (let x4119 = this_to_js Obj.magic Obj.magic x4116 in
                 Ojs.call (Ojs.get_prop_ascii x4119 "then") "apply"
                   [|x4119;((let x4103 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4101 with
                              | Some x4110 ->
                                  ignore
                                    (Ojs.call x4103 "push"
                                       [|(or_null_or_undefined_to_js
                                            (fun
                                               (x4111 :
                                                 'T ->
                                                   ('TResult1, 'TResult1 t)
                                                     union2)
                                               ->
                                               Ojs.fun_to_js 1
                                                 (fun (x4112 : Ojs.t) ->
                                                    union2_to_js Obj.magic
                                                      (fun
                                                         (x4114 :
                                                           'TResult1 t)
                                                         ->
                                                         t_to_js Obj.magic
                                                           x4114)
                                                      (x4111
                                                         (Obj.magic x4112))))
                                            x4110)|])
                              | None -> ());
                             (match x4102 with
                              | Some x4104 ->
                                  ignore
                                    (Ojs.call x4103 "push"
                                       [|(or_null_or_undefined_to_js
                                            (fun
                                               (x4105 :
                                                 any ->
                                                   ('TResult2, 'TResult2 t)
                                                     union2)
                                               ->
                                               Ojs.fun_to_js 1
                                                 (fun (x4106 : Ojs.t) ->
                                                    union2_to_js Obj.magic
                                                      (fun
                                                         (x4108 :
                                                           'TResult2 t)
                                                         ->
                                                         t_to_js Obj.magic
                                                           x4108)
                                                      (x4105
                                                         (any_of_js x4106))))
                                            x4104)|])
                              | None -> ());
                             x4103))|])
    let cast_from = Obj.magic
  end
module PromiseConstructorLike =
  struct
    module AnonymousInterface9 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x4124 : Ojs.t) -> x4124
        and t_to_js : t -> Ojs.t = fun (x4123 : Ojs.t) -> x4123
        let (create :
          t ->
            executor:(resolve:(('T, 'T PromiseLike.t) union2 -> unit) ->
                        reject:(?reason:any -> unit -> unit) -> unit)
              -> 'T PromiseLike.t)
          =
          fun (x4135 : t) ->
            fun
              ~executor:(x4125 :
                          resolve:(('T, 'T PromiseLike.t) union2 -> unit) ->
                            reject:(?reason:any -> unit -> unit) -> unit)
              ->
              PromiseLike.t_of_js Obj.magic
                (Ojs.new_obj (t_to_js x4135)
                   [|(Ojs.fun_to_js 2
                        (fun (x4126 : Ojs.t) ->
                           fun (x4131 : Ojs.t) ->
                             x4125
                               ~resolve:(fun
                                           (x4127 :
                                             ('T, 'T PromiseLike.t) union2)
                                           ->
                                           ignore
                                             (Ojs.apply x4126
                                                [|(union2_to_js Obj.magic
                                                     (fun
                                                        (x4129 :
                                                          'T PromiseLike.t)
                                                        ->
                                                        PromiseLike.t_to_js
                                                          Obj.magic x4129)
                                                     x4127)|]))
                               ~reject:(fun ?reason:(x4132 : any option) ->
                                          fun () ->
                                            ignore
                                              (Ojs.call x4131 "apply"
                                                 [|Ojs.null;((let x4133 =
                                                                Ojs.new_obj
                                                                  (Ojs.get_prop_ascii
                                                                    Ojs.global
                                                                    "Array")
                                                                  [||] in
                                                              (match x4132
                                                               with
                                                               | Some x4134
                                                                   ->
                                                                   ignore
                                                                    (Ojs.call
                                                                    x4133
                                                                    "push"
                                                                    [|(
                                                                    any_to_js
                                                                    x4134)|])
                                                               | None -> ());
                                                              x4133))|]))))|])
      end
    type t = AnonymousInterface9.t
    let rec t_of_js : Ojs.t -> t =
      fun (x4138 : Ojs.t) -> AnonymousInterface9.t_of_js x4138
    and t_to_js : t -> Ojs.t =
      fun (x4137 : AnonymousInterface9.t) ->
        AnonymousInterface9.t_to_js x4137
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4140 : Ojs.t) -> t_of_js x4140
    and t_0_to_js : t_0 -> Ojs.t = fun (x4139 : t) -> t_to_js x4139
  end
module Parameters =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4142 : Ojs.t) -> any_of_js x4142
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x4141 : any) -> any_to_js x4141
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4145 : Ojs.t) -> t_of_js __T_of_js x4145
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4143 : __T t) -> t_to_js __T_to_js x4143
  end
module ParameterDecorator =
  struct
    type t = [ `ParameterDecorator ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4148 : Ojs.t) -> t_of_js x4148
    and t_0_to_js : t_0 -> Ojs.t = fun (x4147 : t) -> t_to_js x4147
    type tags = [ `ParameterDecorator ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ParameterDecorator ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4151 : Ojs.t) -> intf_of_js __tags_of_js x4151
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4149 : __tags intf) -> intf_to_js __tags_to_js x4149
    let (apply :
      'tags this ->
        target:Object.t ->
          propertyKey:symbol or_string -> parameterIndex:float -> unit)
      =
      fun (x4157 : 'tags this) ->
        fun ~target:(x4153 : Object.t) ->
          fun ~propertyKey:(x4154 : symbol or_string) ->
            fun ~parameterIndex:(x4156 : float) ->
              ignore
                (Ojs.apply (this_to_js Obj.magic x4157)
                   [|(Object.t_to_js x4153);(or_string_to_js symbol_to_js
                                               x4154);(Ojs.float_to_js x4156)|])
    let cast_from = Obj.magic
  end
module Pick =
  struct
    type ('T, 'K) t = any
    let rec t_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (x4160 : Ojs.t) -> any_of_js x4160
    and t_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t -> Ojs.t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (x4159 : any) -> any_to_js x4159
    type ('T, 'K) t_2 = ('T, 'K) t
    let rec t_2_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t_2 = fun
      (type __T) -> fun (type __K) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (x4164 : Ojs.t) -> t_of_js __T_of_js __K_of_js x4164
    and t_2_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t_2 -> Ojs.t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (x4161 : (__T, __K) t) -> t_to_js __T_to_js __K_to_js x4161
  end
module Exclude =
  struct
    type ('T, 'U) t = any
    let rec t_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__U_of_js : Ojs.t -> __U) ->
          fun (x4168 : Ojs.t) -> any_of_js x4168
    and t_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t -> Ojs.t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__U_to_js : __U -> Ojs.t) ->
          fun (x4167 : any) -> any_to_js x4167
    type ('T, 'U) t_2 = ('T, 'U) t
    let rec t_2_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t_2 = fun
      (type __T) -> fun (type __U) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__U_of_js : Ojs.t -> __U) ->
          fun (x4172 : Ojs.t) -> t_of_js __T_of_js __U_of_js x4172
    and t_2_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t_2 -> Ojs.t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__U_to_js : __U -> Ojs.t) ->
          fun (x4169 : (__T, __U) t) -> t_to_js __T_to_js __U_to_js x4169
  end
module Omit =
  struct
    type ('T, 'K) t = ('T, (any, 'K) Exclude.t) Pick.t
    let rec t_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (x4180 : Ojs.t) ->
            Pick.t_of_js __T_of_js
              (fun (x4182 : Ojs.t) ->
                 Exclude.t_of_js any_of_js __K_of_js x4182) x4180
    and t_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t -> Ojs.t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (x4175 : (__T, (any, __K) Exclude.t) Pick.t) ->
            Pick.t_to_js __T_to_js
              (fun (x4177 : (any, __K) Exclude.t) ->
                 Exclude.t_to_js any_to_js __K_to_js x4177) x4175
    type ('T, 'K) t_2 = ('T, 'K) t
    let rec t_2_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t_2 = fun
      (type __T) -> fun (type __K) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (x4188 : Ojs.t) -> t_of_js __T_of_js __K_of_js x4188
    and t_2_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t_2 -> Ojs.t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (x4185 : (__T, __K) t) -> t_to_js __T_to_js __K_to_js x4185
  end
module Number =
  struct
    type t = [ `Number ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4192 : Ojs.t) -> t_of_js x4192
    and t_0_to_js : t_0 -> Ojs.t = fun (x4191 : t) -> t_to_js x4191
    type tags = [ `Number ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Number ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4195 : Ojs.t) -> intf_of_js __tags_of_js x4195
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4193 : __tags intf) -> intf_to_js __tags_to_js x4193
    let (toLocaleString :
      'tags this ->
        ?locales:string list or_string ->
          ?options:Intl.NumberFormatOptions.t -> unit -> string)
      =
      fun (x4204 : 'tags this) ->
        fun ?locales:(x4197 : string list or_string option) ->
          fun ?options:(x4198 : Intl.NumberFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x4206 = this_to_js Obj.magic x4204 in
                 Ojs.call (Ojs.get_prop_ascii x4206 "toLocaleString") "apply"
                   [|x4206;((let x4199 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4197 with
                              | Some x4201 ->
                                  ignore
                                    (Ojs.call x4199 "push"
                                       [|(or_string_to_js
                                            (fun (x4202 : string list) ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x4202)
                                            x4201)|])
                              | None -> ());
                             (match x4198 with
                              | Some x4200 ->
                                  ignore
                                    (Ojs.call x4199 "push"
                                       [|(Intl.NumberFormatOptions.t_to_js
                                            x4200)|])
                              | None -> ());
                             x4199))|])
    let (toString : 'tags this -> ?radix:float -> unit -> string) =
      fun (x4210 : 'tags this) ->
        fun ?radix:(x4207 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x4212 = this_to_js Obj.magic x4210 in
               Ojs.call (Ojs.get_prop_ascii x4212 "toString") "apply"
                 [|x4212;((let x4208 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4207 with
                            | Some x4209 ->
                                ignore
                                  (Ojs.call x4208 "push"
                                     [|(Ojs.float_to_js x4209)|])
                            | None -> ());
                           x4208))|])
    let (toFixed : 'tags this -> ?fractionDigits:float -> unit -> string) =
      fun (x4216 : 'tags this) ->
        fun ?fractionDigits:(x4213 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x4218 = this_to_js Obj.magic x4216 in
               Ojs.call (Ojs.get_prop_ascii x4218 "toFixed") "apply"
                 [|x4218;((let x4214 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4213 with
                            | Some x4215 ->
                                ignore
                                  (Ojs.call x4214 "push"
                                     [|(Ojs.float_to_js x4215)|])
                            | None -> ());
                           x4214))|])
    let (toExponential :
      'tags this -> ?fractionDigits:float -> unit -> string) =
      fun (x4222 : 'tags this) ->
        fun ?fractionDigits:(x4219 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x4224 = this_to_js Obj.magic x4222 in
               Ojs.call (Ojs.get_prop_ascii x4224 "toExponential") "apply"
                 [|x4224;((let x4220 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4219 with
                            | Some x4221 ->
                                ignore
                                  (Ojs.call x4220 "push"
                                     [|(Ojs.float_to_js x4221)|])
                            | None -> ());
                           x4220))|])
    let (toPrecision : 'tags this -> ?precision:float -> unit -> string) =
      fun (x4228 : 'tags this) ->
        fun ?precision:(x4225 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x4230 = this_to_js Obj.magic x4228 in
               Ojs.call (Ojs.get_prop_ascii x4230 "toPrecision") "apply"
                 [|x4230;((let x4226 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4225 with
                            | Some x4227 ->
                                ignore
                                  (Ojs.call x4226 "push"
                                     [|(Ojs.float_to_js x4227)|])
                            | None -> ());
                           x4226))|])
    let (valueOf : 'tags this -> float) =
      fun (x4231 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x4231) "valueOf" [||])
    let (epsilon : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "EPSILON")
    let (isFinite : unknown -> bool) =
      fun (x4233 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isFinite"
             [|(unknown_to_js x4233)|])
    let (isInteger : unknown -> bool) =
      fun (x4234 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isInteger"
             [|(unknown_to_js x4234)|])
    let (isNaN : unknown -> bool) =
      fun (x4235 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isNaN"
             [|(unknown_to_js x4235)|])
    let (isSafeInteger : unknown -> bool) =
      fun (x4236 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isSafeInteger"
             [|(unknown_to_js x4236)|])
    let (max_safe_integer : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MAX_SAFE_INTEGER")
    let (min_safe_integer : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MIN_SAFE_INTEGER")
    let (parseFloat : string -> float) =
      fun (x4237 : string) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "parseFloat"
             [|(Ojs.string_to_js x4237)|])
    let (parseInt : string:string -> ?radix:float -> unit -> float) =
      fun ~string:(x4238 : string) ->
        fun ?radix:(x4239 : float option) ->
          fun () ->
            Ojs.float_of_js
              (let x4242 = Ojs.get_prop_ascii Ojs.global "Number" in
               Ojs.call (Ojs.get_prop_ascii x4242 "parseInt") "apply"
                 [|x4242;((let x4240 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x4240 "push"
                                [|(Ojs.string_to_js x4238)|]);
                           (match x4239 with
                            | Some x4241 ->
                                ignore
                                  (Ojs.call x4240 "push"
                                     [|(Ojs.float_to_js x4241)|])
                            | None -> ());
                           x4240))|])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x4243 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Number")
               (let x4244 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4243 with
                 | Some x4245 ->
                     ignore (Ojs.call x4244 "push" [|(any_to_js x4245)|])
                 | None -> ());
                x4244))
    let (invoke : ?value:any -> unit -> float) =
      fun ?value:(x4246 : any option) ->
        fun () ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "apply"
               [|Ojs.null;((let x4247 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x4246 with
                             | Some x4248 ->
                                 ignore
                                   (Ojs.call x4247 "push"
                                      [|(any_to_js x4248)|])
                             | None -> ());
                            x4247))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "prototype")
    let (max_value : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MAX_VALUE")
    let (min_value : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MIN_VALUE")
    let (nan : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number") "NaN")
    let (negative_infinity : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "NEGATIVE_INFINITY")
    let (positive_infinity : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "POSITIVE_INFINITY")
    let cast_from = Obj.magic
  end
module NonNullable =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4250 : Ojs.t) -> any_of_js x4250
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x4249 : any) -> any_to_js x4249
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4253 : Ojs.t) -> t_of_js __T_of_js x4253
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4251 : __T t) -> t_to_js __T_to_js x4251
  end
module NewableFunction =
  struct
    module AnonymousInterface43 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) -> fun (x4256 : Ojs.t) -> x4256
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) -> fun (x4255 : Ojs.t) -> x4255
        let (create : 'T t -> 'T) =
          fun (x4257 : 'T t) ->
            Obj.magic (Ojs.new_obj (t_to_js Obj.magic x4257) [||])
      end
    module AnonymousInterface39 =
      struct
        type ('AX, 'R) t = Ojs.t
        let rec t_of_js :
          'AX 'R . (Ojs.t -> 'AX) -> (Ojs.t -> 'R) -> Ojs.t -> ('AX, 'R) t =
          fun (type __AX) -> fun (type __R) ->
          fun (__AX_of_js : Ojs.t -> __AX) ->
            fun (__R_of_js : Ojs.t -> __R) -> fun (x4260 : Ojs.t) -> x4260
        and t_to_js :
          'AX 'R . ('AX -> Ojs.t) -> ('R -> Ojs.t) -> ('AX, 'R) t -> Ojs.t =
          fun (type __AX) -> fun (type __R) ->
          fun (__AX_to_js : __AX -> Ojs.t) ->
            fun (__R_to_js : __R -> Ojs.t) -> fun (x4259 : Ojs.t) -> x4259
        let (create : ('AX, 'R) t -> args:'AX list -> 'R) =
          fun (x4264 : ('AX, 'R) t) ->
            fun ~args:(x4261 : 'AX list) ->
              Obj.magic
                (Ojs.new_obj_arr (t_to_js Obj.magic Obj.magic x4264)
                   (let x4262 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x4263 : 'AX) ->
                         ignore (Ojs.call x4262 "push" [|(Obj.magic x4263)|]))
                      x4261;
                    x4262))
      end
    module AnonymousInterface36 =
      struct
        type ('A, 'T) t = Ojs.t
        let rec t_of_js :
          'A 'T . (Ojs.t -> 'A) -> (Ojs.t -> 'T) -> Ojs.t -> ('A, 'T) t = fun
          (type __A) -> fun (type __T) ->
          fun (__A_of_js : Ojs.t -> __A) ->
            fun (__T_of_js : Ojs.t -> __T) -> fun (x4268 : Ojs.t) -> x4268
        and t_to_js :
          'A 'T . ('A -> Ojs.t) -> ('T -> Ojs.t) -> ('A, 'T) t -> Ojs.t = fun
          (type __A) -> fun (type __T) ->
          fun (__A_to_js : __A -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) -> fun (x4267 : Ojs.t) -> x4267
        let (create : ('A, 'T) t -> args:any list -> 'T) =
          fun (x4272 : ('A, 'T) t) ->
            fun ~args:(x4269 : any list) ->
              Obj.magic
                (Ojs.new_obj_arr (t_to_js Obj.magic Obj.magic x4272)
                   (let x4270 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x4271 : any) ->
                         ignore (Ojs.call x4270 "push" [|(any_to_js x4271)|]))
                      x4269;
                    x4270))
      end
    module AnonymousInterface33 =
      struct
        type ('A, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'R . (Ojs.t -> 'A) -> (Ojs.t -> 'R) -> Ojs.t -> ('A, 'R) t = fun
          (type __A) -> fun (type __R) ->
          fun (__A_of_js : Ojs.t -> __A) ->
            fun (__R_of_js : Ojs.t -> __R) -> fun (x4276 : Ojs.t) -> x4276
        and t_to_js :
          'A 'R . ('A -> Ojs.t) -> ('R -> Ojs.t) -> ('A, 'R) t -> Ojs.t = fun
          (type __A) -> fun (type __R) ->
          fun (__A_to_js : __A -> Ojs.t) ->
            fun (__R_to_js : __R -> Ojs.t) -> fun (x4275 : Ojs.t) -> x4275
        let (create : ('A, 'R) t -> args:any list -> 'R) =
          fun (x4280 : ('A, 'R) t) ->
            fun ~args:(x4277 : any list) ->
              Obj.magic
                (Ojs.new_obj_arr (t_to_js Obj.magic Obj.magic x4280)
                   (let x4278 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x4279 : any) ->
                         ignore (Ojs.call x4278 "push" [|(any_to_js x4279)|]))
                      x4277;
                    x4278))
      end
    module AnonymousInterface31 =
      struct
        type ('A, 'A0, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'A0 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) -> (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'R) t
          = fun (type __A) -> fun (type __A0) -> fun (type __R) ->
          fun (__A_of_js : Ojs.t -> __A) ->
            fun (__A0_of_js : Ojs.t -> __A0) ->
              fun (__R_of_js : Ojs.t -> __R) -> fun (x4284 : Ojs.t) -> x4284
        and t_to_js :
          'A 'A0 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) -> ('R -> Ojs.t) -> ('A, 'A0, 'R) t -> Ojs.t
          = fun (type __A) -> fun (type __A0) -> fun (type __R) ->
          fun (__A_to_js : __A -> Ojs.t) ->
            fun (__A0_to_js : __A0 -> Ojs.t) ->
              fun (__R_to_js : __R -> Ojs.t) -> fun (x4283 : Ojs.t) -> x4283
        let (create : ('A, 'A0, 'R) t -> arg0:'A0 -> args:any list -> 'R) =
          fun (x4289 : ('A, 'A0, 'R) t) ->
            fun ~arg0:(x4285 : 'A0) ->
              fun ~args:(x4286 : any list) ->
                Obj.magic
                  (Ojs.new_obj_arr
                     (t_to_js Obj.magic Obj.magic Obj.magic x4289)
                     (let x4287 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore (Ojs.call x4287 "push" [|(Obj.magic x4285)|]);
                      List.iter
                        (fun (x4288 : any) ->
                           ignore
                             (Ojs.call x4287 "push" [|(any_to_js x4288)|]))
                        x4286;
                      x4287))
      end
    module AnonymousInterface29 =
      struct
        type ('A, 'A0, 'A1, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'A0 'A1 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'A1) ->
                  (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'A1, 'R) t
          = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun (type
          __R) ->
          fun (__A_of_js : Ojs.t -> __A) ->
            fun (__A0_of_js : Ojs.t -> __A0) ->
              fun (__A1_of_js : Ojs.t -> __A1) ->
                fun (__R_of_js : Ojs.t -> __R) ->
                  fun (x4294 : Ojs.t) -> x4294
        and t_to_js :
          'A 'A0 'A1 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('A1 -> Ojs.t) ->
                  ('R -> Ojs.t) -> ('A, 'A0, 'A1, 'R) t -> Ojs.t
          = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun (type
          __R) ->
          fun (__A_to_js : __A -> Ojs.t) ->
            fun (__A0_to_js : __A0 -> Ojs.t) ->
              fun (__A1_to_js : __A1 -> Ojs.t) ->
                fun (__R_to_js : __R -> Ojs.t) ->
                  fun (x4293 : Ojs.t) -> x4293
        let (create :
          ('A, 'A0, 'A1, 'R) t -> arg0:'A0 -> arg1:'A1 -> args:any list -> 'R)
          =
          fun (x4300 : ('A, 'A0, 'A1, 'R) t) ->
            fun ~arg0:(x4295 : 'A0) ->
              fun ~arg1:(x4296 : 'A1) ->
                fun ~args:(x4297 : any list) ->
                  Obj.magic
                    (Ojs.new_obj_arr
                       (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic x4300)
                       (let x4298 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        ignore (Ojs.call x4298 "push" [|(Obj.magic x4295)|]);
                        ignore (Ojs.call x4298 "push" [|(Obj.magic x4296)|]);
                        List.iter
                          (fun (x4299 : any) ->
                             ignore
                               (Ojs.call x4298 "push" [|(any_to_js x4299)|]))
                          x4297;
                        x4298))
      end
    module AnonymousInterface27 =
      struct
        type ('A, 'A0, 'A1, 'A2, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'A0 'A1 'A2 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'A1) ->
                  (Ojs.t -> 'A2) ->
                    (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'A1, 'A2, 'R) t
          = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun (type
          __A2) -> fun (type __R) ->
          fun (__A_of_js : Ojs.t -> __A) ->
            fun (__A0_of_js : Ojs.t -> __A0) ->
              fun (__A1_of_js : Ojs.t -> __A1) ->
                fun (__A2_of_js : Ojs.t -> __A2) ->
                  fun (__R_of_js : Ojs.t -> __R) ->
                    fun (x4306 : Ojs.t) -> x4306
        and t_to_js :
          'A 'A0 'A1 'A2 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('A1 -> Ojs.t) ->
                  ('A2 -> Ojs.t) ->
                    ('R -> Ojs.t) -> ('A, 'A0, 'A1, 'A2, 'R) t -> Ojs.t
          = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun (type
          __A2) -> fun (type __R) ->
          fun (__A_to_js : __A -> Ojs.t) ->
            fun (__A0_to_js : __A0 -> Ojs.t) ->
              fun (__A1_to_js : __A1 -> Ojs.t) ->
                fun (__A2_to_js : __A2 -> Ojs.t) ->
                  fun (__R_to_js : __R -> Ojs.t) ->
                    fun (x4305 : Ojs.t) -> x4305
        let (create :
          ('A, 'A0, 'A1, 'A2, 'R) t ->
            arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> args:any list -> 'R)
          =
          fun (x4313 : ('A, 'A0, 'A1, 'A2, 'R) t) ->
            fun ~arg0:(x4307 : 'A0) ->
              fun ~arg1:(x4308 : 'A1) ->
                fun ~arg2:(x4309 : 'A2) ->
                  fun ~args:(x4310 : any list) ->
                    Obj.magic
                      (Ojs.new_obj_arr
                         (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic
                            Obj.magic x4313)
                         (let x4311 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          ignore
                            (Ojs.call x4311 "push" [|(Obj.magic x4307)|]);
                          ignore
                            (Ojs.call x4311 "push" [|(Obj.magic x4308)|]);
                          ignore
                            (Ojs.call x4311 "push" [|(Obj.magic x4309)|]);
                          List.iter
                            (fun (x4312 : any) ->
                               ignore
                                 (Ojs.call x4311 "push" [|(any_to_js x4312)|]))
                            x4310;
                          x4311))
      end
    module AnonymousInterface25 =
      struct
        type ('A, 'A0, 'A1, 'A2, 'A3, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'A0 'A1 'A2 'A3 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'A1) ->
                  (Ojs.t -> 'A2) ->
                    (Ojs.t -> 'A3) ->
                      (Ojs.t -> 'R) ->
                        Ojs.t -> ('A, 'A0, 'A1, 'A2, 'A3, 'R) t
          = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun (type
          __A2) -> fun (type __A3) -> fun (type __R) ->
          fun (__A_of_js : Ojs.t -> __A) ->
            fun (__A0_of_js : Ojs.t -> __A0) ->
              fun (__A1_of_js : Ojs.t -> __A1) ->
                fun (__A2_of_js : Ojs.t -> __A2) ->
                  fun (__A3_of_js : Ojs.t -> __A3) ->
                    fun (__R_of_js : Ojs.t -> __R) ->
                      fun (x4320 : Ojs.t) -> x4320
        and t_to_js :
          'A 'A0 'A1 'A2 'A3 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('A1 -> Ojs.t) ->
                  ('A2 -> Ojs.t) ->
                    ('A3 -> Ojs.t) ->
                      ('R -> Ojs.t) ->
                        ('A, 'A0, 'A1, 'A2, 'A3, 'R) t -> Ojs.t
          = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun (type
          __A2) -> fun (type __A3) -> fun (type __R) ->
          fun (__A_to_js : __A -> Ojs.t) ->
            fun (__A0_to_js : __A0 -> Ojs.t) ->
              fun (__A1_to_js : __A1 -> Ojs.t) ->
                fun (__A2_to_js : __A2 -> Ojs.t) ->
                  fun (__A3_to_js : __A3 -> Ojs.t) ->
                    fun (__R_to_js : __R -> Ojs.t) ->
                      fun (x4319 : Ojs.t) -> x4319
        let (create :
          ('A, 'A0, 'A1, 'A2, 'A3, 'R) t ->
            arg0:'A0 ->
              arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> args:any list -> 'R)
          =
          fun (x4328 : ('A, 'A0, 'A1, 'A2, 'A3, 'R) t) ->
            fun ~arg0:(x4321 : 'A0) ->
              fun ~arg1:(x4322 : 'A1) ->
                fun ~arg2:(x4323 : 'A2) ->
                  fun ~arg3:(x4324 : 'A3) ->
                    fun ~args:(x4325 : any list) ->
                      Obj.magic
                        (Ojs.new_obj_arr
                           (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic
                              Obj.magic Obj.magic x4328)
                           (let x4326 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x4326 "push" [|(Obj.magic x4321)|]);
                            ignore
                              (Ojs.call x4326 "push" [|(Obj.magic x4322)|]);
                            ignore
                              (Ojs.call x4326 "push" [|(Obj.magic x4323)|]);
                            ignore
                              (Ojs.call x4326 "push" [|(Obj.magic x4324)|]);
                            List.iter
                              (fun (x4327 : any) ->
                                 ignore
                                   (Ojs.call x4326 "push"
                                      [|(any_to_js x4327)|])) x4325;
                            x4326))
      end
    type t = [ `Function  | `Function  | `NewableFunction ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4336 : Ojs.t) -> t_of_js x4336
    and t_0_to_js : t_0 -> Ojs.t = fun (x4335 : t) -> t_to_js x4335
    type tags = [ `Function  | `Function  | `NewableFunction ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `NewableFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4339 : Ojs.t) -> intf_of_js __tags_of_js x4339
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4337 : __tags intf) -> intf_to_js __tags_to_js x4337
    let (apply_ :
      'tags this -> this:'T AnonymousInterface43.t -> thisArg:'T -> unit) =
      fun (x4344 : 'tags this) ->
        fun ~this:(x4341 : 'T AnonymousInterface43.t) ->
          fun ~thisArg:(x4343 : 'T) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x4344) "apply"
                 [|(AnonymousInterface43.t_to_js Obj.magic x4341);(Obj.magic
                                                                    x4343)|])
    let (apply_' :
      'tags this ->
        this:('A, 'T) AnonymousInterface36.t -> thisArg:'T -> args:'A -> unit)
      =
      fun (x4351 : 'tags this) ->
        fun ~this:(x4346 : ('A, 'T) AnonymousInterface36.t) ->
          fun ~thisArg:(x4349 : 'T) ->
            fun ~args:(x4350 : 'A) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x4351) "apply"
                   [|(AnonymousInterface36.t_to_js Obj.magic Obj.magic x4346);(
                     Obj.magic x4349);(Obj.magic x4350)|])
    let (call :
      'tags this ->
        this:('A, 'T) AnonymousInterface36.t ->
          thisArg:'T -> args:any list -> unit)
      =
      fun (x4360 : 'tags this) ->
        fun ~this:(x4353 : ('A, 'T) AnonymousInterface36.t) ->
          fun ~thisArg:(x4354 : 'T) ->
            fun ~args:(x4355 : any list) ->
              ignore
                (let x4362 = this_to_js Obj.magic x4360 in
                 Ojs.call (Ojs.get_prop_ascii x4362 "call") "apply"
                   [|x4362;((let x4356 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4356 "push"
                                  [|(AnonymousInterface36.t_to_js Obj.magic
                                       Obj.magic x4353)|]);
                             ignore
                               (Ojs.call x4356 "push" [|(Obj.magic x4354)|]);
                             List.iter
                               (fun (x4357 : any) ->
                                  ignore
                                    (Ojs.call x4356 "push"
                                       [|(any_to_js x4357)|])) x4355;
                             x4356))|])
    let (bind : 'tags this -> this:'T -> thisArg:any -> 'T) =
      fun (x4365 : 'tags this) ->
        fun ~this:(x4363 : 'T) ->
          fun ~thisArg:(x4364 : any) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x4365) "bind"
                 [|(Obj.magic x4363);(any_to_js x4364)|])
    let (bind' :
      'tags this ->
        this:('A, 'A0, 'R) AnonymousInterface31.t ->
          thisArg:any -> arg0:'A0 -> ('A, 'R) AnonymousInterface33.t)
      =
      fun (x4373 : 'tags this) ->
        fun ~this:(x4367 : ('A, 'A0, 'R) AnonymousInterface31.t) ->
          fun ~thisArg:(x4371 : any) ->
            fun ~arg0:(x4372 : 'A0) ->
              AnonymousInterface33.t_of_js Obj.magic Obj.magic
                (Ojs.call (this_to_js Obj.magic x4373) "bind"
                   [|(AnonymousInterface31.t_to_js Obj.magic Obj.magic
                        Obj.magic x4367);(any_to_js x4371);(Obj.magic x4372)|])
    let (bind'' :
      'tags this ->
        this:('A, 'A0, 'A1, 'R) AnonymousInterface29.t ->
          thisArg:any ->
            arg0:'A0 -> arg1:'A1 -> ('A, 'R) AnonymousInterface33.t)
      =
      fun (x4385 : 'tags this) ->
        fun ~this:(x4377 : ('A, 'A0, 'A1, 'R) AnonymousInterface29.t) ->
          fun ~thisArg:(x4382 : any) ->
            fun ~arg0:(x4383 : 'A0) ->
              fun ~arg1:(x4384 : 'A1) ->
                AnonymousInterface33.t_of_js Obj.magic Obj.magic
                  (Ojs.call (this_to_js Obj.magic x4385) "bind"
                     [|(AnonymousInterface29.t_to_js Obj.magic Obj.magic
                          Obj.magic Obj.magic x4377);(any_to_js x4382);(
                       Obj.magic x4383);(Obj.magic x4384)|])
    let (bind''' :
      'tags this ->
        this:('A, 'A0, 'A1, 'A2, 'R) AnonymousInterface27.t ->
          thisArg:any ->
            arg0:'A0 ->
              arg1:'A1 -> arg2:'A2 -> ('A, 'R) AnonymousInterface33.t)
      =
      fun (x4399 : 'tags this) ->
        fun ~this:(x4389 : ('A, 'A0, 'A1, 'A2, 'R) AnonymousInterface27.t) ->
          fun ~thisArg:(x4395 : any) ->
            fun ~arg0:(x4396 : 'A0) ->
              fun ~arg1:(x4397 : 'A1) ->
                fun ~arg2:(x4398 : 'A2) ->
                  AnonymousInterface33.t_of_js Obj.magic Obj.magic
                    (Ojs.call (this_to_js Obj.magic x4399) "bind"
                       [|(AnonymousInterface27.t_to_js Obj.magic Obj.magic
                            Obj.magic Obj.magic Obj.magic x4389);(any_to_js
                                                                    x4395);(
                         Obj.magic x4396);(Obj.magic x4397);(Obj.magic x4398)|])
    let (bind'''' :
      'tags this ->
        this:('A, 'A0, 'A1, 'A2, 'A3, 'R) AnonymousInterface25.t ->
          thisArg:any ->
            arg0:'A0 ->
              arg1:'A1 ->
                arg2:'A2 -> arg3:'A3 -> ('A, 'R) AnonymousInterface33.t)
      =
      fun (x4415 : 'tags this) ->
        fun
          ~this:(x4403 : ('A, 'A0, 'A1, 'A2, 'A3, 'R) AnonymousInterface25.t)
          ->
          fun ~thisArg:(x4410 : any) ->
            fun ~arg0:(x4411 : 'A0) ->
              fun ~arg1:(x4412 : 'A1) ->
                fun ~arg2:(x4413 : 'A2) ->
                  fun ~arg3:(x4414 : 'A3) ->
                    AnonymousInterface33.t_of_js Obj.magic Obj.magic
                      (Ojs.call (this_to_js Obj.magic x4415) "bind"
                         [|(AnonymousInterface25.t_to_js Obj.magic Obj.magic
                              Obj.magic Obj.magic Obj.magic Obj.magic x4403);(
                           any_to_js x4410);(Obj.magic x4411);(Obj.magic
                                                                 x4412);(
                           Obj.magic x4413);(Obj.magic x4414)|])
    let (bind''''' :
      'tags this ->
        this:('AX, 'R) AnonymousInterface39.t ->
          thisArg:any -> args:'AX list -> ('AX, 'R) AnonymousInterface39.t)
      =
      fun (x4426 : 'tags this) ->
        fun ~this:(x4419 : ('AX, 'R) AnonymousInterface39.t) ->
          fun ~thisArg:(x4420 : any) ->
            fun ~args:(x4421 : 'AX list) ->
              AnonymousInterface39.t_of_js Obj.magic Obj.magic
                (let x4428 = this_to_js Obj.magic x4426 in
                 Ojs.call (Ojs.get_prop_ascii x4428 "bind") "apply"
                   [|x4428;((let x4422 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4422 "push"
                                  [|(AnonymousInterface39.t_to_js Obj.magic
                                       Obj.magic x4419)|]);
                             ignore
                               (Ojs.call x4422 "push" [|(any_to_js x4420)|]);
                             List.iter
                               (fun (x4423 : 'AX) ->
                                  ignore
                                    (Ojs.call x4422 "push"
                                       [|(Obj.magic x4423)|])) x4421;
                             x4422))|])
    let cast_from = Obj.magic
  end
module TypedPropertyDescriptor =
  struct
    type 'T t = [ `TypedPropertyDescriptor of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4433 : Ojs.t) -> t_of_js __T_of_js x4433
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4431 : __T t) -> t_to_js __T_to_js x4431
    type 'T tags = [ `TypedPropertyDescriptor of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `TypedPropertyDescriptor of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4437 : Ojs.t) -> intf_of_js __tags_of_js x4437
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4435 : __tags intf) -> intf_to_js __tags_to_js x4435
    let (get_enumerable : ('tags, 'T) this -> bool) =
      fun (x4439 : ('tags, 'T) this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4439)
             "enumerable")
    let (set_enumerable : ('tags, 'T) this -> bool -> unit) =
      fun (x4442 : ('tags, 'T) this) ->
        fun (x4443 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x4442)
            "enumerable" (Ojs.bool_to_js x4443)
    let (get_configurable : ('tags, 'T) this -> bool) =
      fun (x4446 : ('tags, 'T) this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4446)
             "configurable")
    let (set_configurable : ('tags, 'T) this -> bool -> unit) =
      fun (x4449 : ('tags, 'T) this) ->
        fun (x4450 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x4449)
            "configurable" (Ojs.bool_to_js x4450)
    let (get_writable : ('tags, 'T) this -> bool) =
      fun (x4453 : ('tags, 'T) this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4453)
             "writable")
    let (set_writable : ('tags, 'T) this -> bool -> unit) =
      fun (x4456 : ('tags, 'T) this) ->
        fun (x4457 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x4456)
            "writable" (Ojs.bool_to_js x4457)
    let (get_value : ('tags, 'T) this -> 'T) =
      fun (x4460 : ('tags, 'T) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4460) "value")
    let (set_value : ('tags, 'T) this -> 'T -> unit) =
      fun (x4463 : ('tags, 'T) this) ->
        fun (x4464 : 'T) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x4463) "value"
            (Obj.magic x4464)
    let (get_ : ('tags, 'T) this -> 'T) =
      fun (x4467 : ('tags, 'T) this) ->
        Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x4467) "get" [||])
    let (set_ : ('tags, 'T) this -> value:'T -> unit) =
      fun (x4471 : ('tags, 'T) this) ->
        fun ~value:(x4470 : 'T) ->
          ignore
            (Ojs.call (this_to_js Obj.magic Obj.magic x4471) "set"
               [|(Obj.magic x4470)|])
    let cast_from = Obj.magic
  end
module MethodDecorator =
  struct
    type t = [ `MethodDecorator ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4475 : Ojs.t) -> t_of_js x4475
    and t_0_to_js : t_0 -> Ojs.t = fun (x4474 : t) -> t_to_js x4474
    type tags = [ `MethodDecorator ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `MethodDecorator ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4478 : Ojs.t) -> intf_of_js __tags_of_js x4478
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4476 : __tags intf) -> intf_to_js __tags_to_js x4476
    let (apply :
      'tags this ->
        target:Object.t ->
          propertyKey:symbol or_string ->
            descriptor:'T TypedPropertyDescriptor.t ->
              (unit, 'T TypedPropertyDescriptor.t) union2)
      =
      fun (x4485 : 'tags this) ->
        fun ~target:(x4480 : Object.t) ->
          fun ~propertyKey:(x4481 : symbol or_string) ->
            fun ~descriptor:(x4483 : 'T TypedPropertyDescriptor.t) ->
              union2_of_js Ojs.unit_of_js
                (fun (x4488 : Ojs.t) ->
                   TypedPropertyDescriptor.t_of_js Obj.magic x4488)
                (Ojs.apply (this_to_js Obj.magic x4485)
                   [|(Object.t_to_js x4480);(or_string_to_js symbol_to_js
                                               x4481);(TypedPropertyDescriptor.t_to_js
                                                         Obj.magic x4483)|])
    let cast_from = Obj.magic
  end
module Math =
  struct
    let (clz32 : float -> float) =
      fun (x4490 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "clz32"
             [|(Ojs.float_to_js x4490)|])
    let (imul : x:float -> y:float -> float) =
      fun ~x:(x4491 : float) ->
        fun ~y:(x4492 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "imul"
               [|(Ojs.float_to_js x4491);(Ojs.float_to_js x4492)|])
    let (sign : float -> float) =
      fun (x4493 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sign"
             [|(Ojs.float_to_js x4493)|])
    let (log10 : float -> float) =
      fun (x4494 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log10"
             [|(Ojs.float_to_js x4494)|])
    let (log2 : float -> float) =
      fun (x4495 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log2"
             [|(Ojs.float_to_js x4495)|])
    let (log1p : float -> float) =
      fun (x4496 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log1p"
             [|(Ojs.float_to_js x4496)|])
    let (expm1 : float -> float) =
      fun (x4497 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "expm1"
             [|(Ojs.float_to_js x4497)|])
    let (cosh : float -> float) =
      fun (x4498 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "cosh"
             [|(Ojs.float_to_js x4498)|])
    let (sinh : float -> float) =
      fun (x4499 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sinh"
             [|(Ojs.float_to_js x4499)|])
    let (tanh : float -> float) =
      fun (x4500 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "tanh"
             [|(Ojs.float_to_js x4500)|])
    let (acosh : float -> float) =
      fun (x4501 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "acosh"
             [|(Ojs.float_to_js x4501)|])
    let (asinh : float -> float) =
      fun (x4502 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "asinh"
             [|(Ojs.float_to_js x4502)|])
    let (atanh : float -> float) =
      fun (x4503 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atanh"
             [|(Ojs.float_to_js x4503)|])
    let (hypot : float list -> float) =
      fun (x4504 : float list) ->
        Ojs.float_of_js
          (let x4507 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x4507 "hypot") "apply"
             [|x4507;((let x4505 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x4506 : float) ->
                            ignore
                              (Ojs.call x4505 "push"
                                 [|(Ojs.float_to_js x4506)|])) x4504;
                       x4505))|])
    let (trunc : float -> float) =
      fun (x4508 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "trunc"
             [|(Ojs.float_to_js x4508)|])
    let (fround : float -> float) =
      fun (x4509 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "fround"
             [|(Ojs.float_to_js x4509)|])
    let (cbrt : float -> float) =
      fun (x4510 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "cbrt"
             [|(Ojs.float_to_js x4510)|])
    let (e : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "E")
    let (ln10 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LN10")
    let (ln2 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LN2")
    let (log2e : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LOG2E")
    let (log10e : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LOG10E")
    let (pi : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "PI")
    let (sqrt1_2 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math")
             "SQRT1_2")
    let (sqrt2 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "SQRT2")
    let (abs : float -> float) =
      fun (x4511 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "abs"
             [|(Ojs.float_to_js x4511)|])
    let (acos : float -> float) =
      fun (x4512 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "acos"
             [|(Ojs.float_to_js x4512)|])
    let (asin : float -> float) =
      fun (x4513 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "asin"
             [|(Ojs.float_to_js x4513)|])
    let (atan : float -> float) =
      fun (x4514 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atan"
             [|(Ojs.float_to_js x4514)|])
    let (atan2 : y:float -> x:float -> float) =
      fun ~y:(x4515 : float) ->
        fun ~x:(x4516 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atan2"
               [|(Ojs.float_to_js x4515);(Ojs.float_to_js x4516)|])
    let (ceil : float -> float) =
      fun (x4517 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "ceil"
             [|(Ojs.float_to_js x4517)|])
    let (cos : float -> float) =
      fun (x4518 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "cos"
             [|(Ojs.float_to_js x4518)|])
    let (exp : float -> float) =
      fun (x4519 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "exp"
             [|(Ojs.float_to_js x4519)|])
    let (floor : float -> float) =
      fun (x4520 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "floor"
             [|(Ojs.float_to_js x4520)|])
    let (log : float -> float) =
      fun (x4521 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log"
             [|(Ojs.float_to_js x4521)|])
    let (max : float list -> float) =
      fun (x4522 : float list) ->
        Ojs.float_of_js
          (let x4525 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x4525 "max") "apply"
             [|x4525;((let x4523 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x4524 : float) ->
                            ignore
                              (Ojs.call x4523 "push"
                                 [|(Ojs.float_to_js x4524)|])) x4522;
                       x4523))|])
    let (min : float list -> float) =
      fun (x4526 : float list) ->
        Ojs.float_of_js
          (let x4529 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x4529 "min") "apply"
             [|x4529;((let x4527 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x4528 : float) ->
                            ignore
                              (Ojs.call x4527 "push"
                                 [|(Ojs.float_to_js x4528)|])) x4526;
                       x4527))|])
    let (pow : x:float -> y:float -> float) =
      fun ~x:(x4530 : float) ->
        fun ~y:(x4531 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "pow"
               [|(Ojs.float_to_js x4530);(Ojs.float_to_js x4531)|])
    let (random : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "random" [||])
    let (round : float -> float) =
      fun (x4532 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "round"
             [|(Ojs.float_to_js x4532)|])
    let (sin : float -> float) =
      fun (x4533 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sin"
             [|(Ojs.float_to_js x4533)|])
    let (sqrt : float -> float) =
      fun (x4534 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sqrt"
             [|(Ojs.float_to_js x4534)|])
    let (tan : float -> float) =
      fun (x4535 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "tan"
             [|(Ojs.float_to_js x4535)|])
  end
module Map =
  struct
    type ('K, 'V) t =
      [ `Map of ('K * 'V)  | ('K * 'V) IterableIterator.tags_1] intf
    let rec t_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t =
      fun _K -> fun _V -> Obj.magic
    and t_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t -> Ojs.t =
      fun _K -> fun _V -> Obj.magic
    type ('K, 'V) t_2 = ('K, 'V) t
    let rec t_2_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t_2 = fun
      (type __K) -> fun (type __V) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__V_of_js : Ojs.t -> __V) ->
          fun (x4539 : Ojs.t) -> t_of_js __K_of_js __V_of_js x4539
    and t_2_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t_2 -> Ojs.t = fun
      (type __K) -> fun (type __V) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__V_to_js : __V -> Ojs.t) ->
          fun (x4536 : (__K, __V) t) -> t_to_js __K_to_js __V_to_js x4536
    type ('K, 'V) tags =
      [ `Map of ('K * 'V)  | ('K * 'V) IterableIterator.tags_1]
    type ('K, 'V) tags_2 = ('K, 'V) tags
    type ('tags, 'K, 'V) this =
      'tags intf constraint 'tags = [> `Map of ('K * 'V) ]
    let rec this_of_js :
      'tags 'K 'V .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('tags, 'K, 'V) this
      = fun (type __tags) -> fun (type __K) -> fun (type __V) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (__V_of_js : Ojs.t -> __V) ->
            fun (x4544 : Ojs.t) -> intf_of_js __tags_of_js x4544
    and this_to_js :
      'tags 'K 'V .
        ('tags -> Ojs.t) ->
          ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('tags, 'K, 'V) this -> Ojs.t
      = fun (type __tags) -> fun (type __K) -> fun (type __V) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (__V_to_js : __V -> Ojs.t) ->
            fun (x4542 : __tags intf) -> intf_to_js __tags_to_js x4542
    let (entries : ('tags, 'K, 'V) this -> ('K * 'V) IterableIterator.t) =
      fun (x4546 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js
          (fun (x4550 : Ojs.t) ->
             let x4551 = x4550 in
             ((Obj.magic (Ojs.array_get x4551 0)),
               (Obj.magic (Ojs.array_get x4551 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4546)
             "entries" [||])
    let (keys : ('tags, 'K, 'V) this -> 'K IterableIterator.t) =
      fun (x4552 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4552) "keys"
             [||])
    let (values : ('tags, 'K, 'V) this -> 'V IterableIterator.t) =
      fun (x4557 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4557) "values"
             [||])
    let (clear : ('tags, 'K, 'V) this -> unit) =
      fun (x4562 : ('tags, 'K, 'V) this) ->
        ignore
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4562) "clear"
             [||])
    let (delete : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x4567 : ('tags, 'K, 'V) this) ->
        fun ~key:(x4566 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4567)
               "delete" [|(Obj.magic x4566)|])
    let (forEach :
      ('tags, 'K, 'V) this ->
        callbackfn:(value:'V -> key:'K -> map:('K, 'V) t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x4580 : ('tags, 'K, 'V) this) ->
        fun
          ~callbackfn:(x4571 : value:'V -> key:'K -> map:('K, 'V) t -> unit)
          ->
          fun ?thisArg:(x4572 : any option) ->
            fun () ->
              ignore
                (let x4584 = this_to_js Obj.magic Obj.magic Obj.magic x4580 in
                 Ojs.call (Ojs.get_prop_ascii x4584 "forEach") "apply"
                   [|x4584;((let x4573 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4573 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4575 : Ojs.t) ->
                                          fun (x4576 : Ojs.t) ->
                                            fun (x4577 : Ojs.t) ->
                                              x4571 ~value:(Obj.magic x4575)
                                                ~key:(Obj.magic x4576)
                                                ~map:(t_of_js Obj.magic
                                                        Obj.magic x4577)))|]);
                             (match x4572 with
                              | Some x4574 ->
                                  ignore
                                    (Ojs.call x4573 "push"
                                       [|(any_to_js x4574)|])
                              | None -> ());
                             x4573))|])
    let (get_ : ('tags, 'K, 'V) this -> key:'K -> 'V or_undefined) =
      fun (x4586 : ('tags, 'K, 'V) this) ->
        fun ~key:(x4585 : 'K) ->
          or_undefined_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4586) "get"
               [|(Obj.magic x4585)|])
    let (has : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x4592 : ('tags, 'K, 'V) this) ->
        fun ~key:(x4591 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4592) "has"
               [|(Obj.magic x4591)|])
    let (set_ :
      ('tags, 'K, 'V) this -> key:'K -> value:'V -> ('tags, 'K, 'V) this) =
      fun (x4598 : ('tags, 'K, 'V) this) ->
        fun ~key:(x4596 : 'K) ->
          fun ~value:(x4597 : 'V) ->
            this_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4598)
                 "set" [|(Obj.magic x4596);(Obj.magic x4597)|])
    let (get_size : ('tags, 'K, 'V) this -> float) =
      fun (x4605 : ('tags, 'K, 'V) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (this_to_js Obj.magic Obj.magic Obj.magic x4605) "size")
    let (create : ('K * 'V) Iterable.t -> ('K, 'V) t) =
      fun (x4609 : ('K * 'V) Iterable.t) ->
        t_of_js Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map")
             [|(Iterable.t_to_js
                  (fun (x4610 : ('K * 'V)) ->
                     let (x4611, x4612) = x4610 in
                     let x4613 = Ojs.array_make 2 in
                     Ojs.array_set x4613 0 (Obj.magic x4611);
                     Ojs.array_set x4613 1 (Obj.magic x4612);
                     x4613) x4609)|])
    let (create' : unit -> (any, any) t) =
      fun () ->
        t_of_js any_of_js any_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map") [||])
    let (create'' : ?entries:('K * 'V) list or_null -> unit -> ('K, 'V) t) =
      fun ?entries:(x4618 : ('K * 'V) list or_null option) ->
        fun () ->
          t_of_js Obj.magic Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Map")
               (let x4619 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4618 with
                 | Some x4620 ->
                     ignore
                       (Ojs.call x4619 "push"
                          [|(or_null_to_js
                               (fun (x4621 : ('K * 'V) list) ->
                                  Ojs.list_to_js
                                    (fun (x4622 : ('K * 'V)) ->
                                       let (x4623, x4624) = x4622 in
                                       let x4625 = Ojs.array_make 2 in
                                       Ojs.array_set x4625 0
                                         (Obj.magic x4623);
                                       Ojs.array_set x4625 1
                                         (Obj.magic x4624);
                                       x4625) x4621) x4620)|])
                 | None -> ());
                x4619))
    let (prototype : unit -> (any, any) t) =
      fun () ->
        t_of_js any_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Map")
             "prototype")
    let cast_from = Obj.magic
  end
module Lowercase =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t = fun (type __S) ->
      fun (__S_of_js : Ojs.t -> __S) -> fun (x4631 : Ojs.t) -> x4631
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) -> fun (x4630 : Ojs.t) -> x4630
    type 'S t_1 = 'S t
    let rec t_1_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t_1 = fun (type
      __S) ->
      fun (__S_of_js : Ojs.t -> __S) ->
        fun (x4634 : Ojs.t) -> t_of_js __S_of_js x4634
    and t_1_to_js : 'S . ('S -> Ojs.t) -> 'S t_1 -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) ->
        fun (x4632 : __S t) -> t_to_js __S_to_js x4632
  end
module JSON =
  struct
    let (parse :
      text:string ->
        ?reviver:(this:any -> key:string -> value:any -> any) -> unit -> any)
      =
      fun ~text:(x4636 : string) ->
        fun
          ?reviver:(x4637 :
                     (this:any -> key:string -> value:any -> any) option)
          ->
          fun () ->
            any_of_js
              (let x4643 = Ojs.get_prop_ascii Ojs.global "JSON" in
               Ojs.call (Ojs.get_prop_ascii x4643 "parse") "apply"
                 [|x4643;((let x4638 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x4638 "push"
                                [|(Ojs.string_to_js x4636)|]);
                           (match x4637 with
                            | Some x4639 ->
                                ignore
                                  (Ojs.call x4638 "push"
                                     [|(Ojs.fun_to_js 3
                                          (fun (x4640 : Ojs.t) ->
                                             fun (x4641 : Ojs.t) ->
                                               fun (x4642 : Ojs.t) ->
                                                 any_to_js
                                                   (x4639
                                                      ~this:(any_of_js x4640)
                                                      ~key:(Ojs.string_of_js
                                                              x4641)
                                                      ~value:(any_of_js x4642))))|])
                            | None -> ());
                           x4638))|])
    let (stringify :
      value:any ->
        ?replacer:(this:any -> key:string -> value:any -> any) ->
          ?space:string or_number -> unit -> string)
      =
      fun ~value:(x4644 : any) ->
        fun
          ?replacer:(x4645 :
                      (this:any -> key:string -> value:any -> any) option)
          ->
          fun ?space:(x4646 : string or_number option) ->
            fun () ->
              Ojs.string_of_js
                (let x4654 = Ojs.get_prop_ascii Ojs.global "JSON" in
                 Ojs.call (Ojs.get_prop_ascii x4654 "stringify") "apply"
                   [|x4654;((let x4647 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4647 "push" [|(any_to_js x4644)|]);
                             (match x4645 with
                              | Some x4650 ->
                                  ignore
                                    (Ojs.call x4647 "push"
                                       [|(Ojs.fun_to_js 3
                                            (fun (x4651 : Ojs.t) ->
                                               fun (x4652 : Ojs.t) ->
                                                 fun (x4653 : Ojs.t) ->
                                                   any_to_js
                                                     (x4650
                                                        ~this:(any_of_js
                                                                 x4651)
                                                        ~key:(Ojs.string_of_js
                                                                x4652)
                                                        ~value:(any_of_js
                                                                  x4653))))|])
                              | None -> ());
                             (match x4646 with
                              | Some x4648 ->
                                  ignore
                                    (Ojs.call x4647 "push"
                                       [|(or_number_to_js Ojs.string_to_js
                                            x4648)|])
                              | None -> ());
                             x4647))|])
    let (stringify' :
      value:any ->
        ?replacer:string or_number list or_null ->
          ?space:string or_number -> unit -> string)
      =
      fun ~value:(x4655 : any) ->
        fun ?replacer:(x4656 : string or_number list or_null option) ->
          fun ?space:(x4657 : string or_number option) ->
            fun () ->
              Ojs.string_of_js
                (let x4665 = Ojs.get_prop_ascii Ojs.global "JSON" in
                 Ojs.call (Ojs.get_prop_ascii x4665 "stringify") "apply"
                   [|x4665;((let x4658 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4658 "push" [|(any_to_js x4655)|]);
                             (match x4656 with
                              | Some x4661 ->
                                  ignore
                                    (Ojs.call x4658 "push"
                                       [|(or_null_to_js
                                            (fun
                                               (x4662 :
                                                 string or_number list)
                                               ->
                                               Ojs.list_to_js
                                                 (fun
                                                    (x4663 :
                                                      string or_number)
                                                    ->
                                                    or_number_to_js
                                                      Ojs.string_to_js x4663)
                                                 x4662) x4661)|])
                              | None -> ());
                             (match x4657 with
                              | Some x4659 ->
                                  ignore
                                    (Ojs.call x4658 "push"
                                       [|(or_number_to_js Ojs.string_to_js
                                            x4659)|])
                              | None -> ());
                             x4658))|])
  end
module InstanceType =
  struct
    module AnonymousInterface8 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x4667 : Ojs.t) -> x4667
        and t_to_js : t -> Ojs.t = fun (x4666 : Ojs.t) -> x4666
        let (create : t -> args:any list -> any) =
          fun (x4671 : t) ->
            fun ~args:(x4668 : any list) ->
              any_of_js
                (Ojs.new_obj_arr (t_to_js x4671)
                   (let x4669 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x4670 : any) ->
                         ignore (Ojs.call x4669 "push" [|(any_to_js x4670)|]))
                      x4668;
                    x4669))
      end
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4673 : Ojs.t) -> any_of_js x4673
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x4672 : any) -> any_to_js x4672
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4676 : Ojs.t) -> t_of_js __T_of_js x4676
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4674 : __T t) -> t_to_js __T_to_js x4674
  end
module ImportMeta =
  struct
    type t = [ `ImportMeta ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4679 : Ojs.t) -> t_of_js x4679
    and t_0_to_js : t_0 -> Ojs.t = fun (x4678 : t) -> t_to_js x4678
    type tags = [ `ImportMeta ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ImportMeta ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4682 : Ojs.t) -> intf_of_js __tags_of_js x4682
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4680 : __tags intf) -> intf_to_js __tags_to_js x4680
    let cast_from = Obj.magic
  end
module ImportAssertions =
  struct
    type t = [ `ImportAssertions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4685 : Ojs.t) -> t_of_js x4685
    and t_0_to_js : t_0 -> Ojs.t = fun (x4684 : t) -> t_to_js x4684
    type tags = [ `ImportAssertions ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ImportAssertions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4688 : Ojs.t) -> intf_of_js __tags_of_js x4688
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4686 : __tags intf) -> intf_to_js __tags_to_js x4686
    let (get : 'tags this -> string -> string) =
      fun (x4690 : 'tags this) ->
        fun (x4692 : string) ->
          Ojs.string_of_js
            (Ojs.get_prop (this_to_js Obj.magic x4690)
               (Ojs.string_to_js x4692))
    let (set : 'tags this -> string -> string -> unit) =
      fun (x4693 : 'tags this) ->
        fun (x4695 : string) ->
          fun (x4696 : string) ->
            Ojs.set_prop (this_to_js Obj.magic x4693)
              (Ojs.string_to_js x4695) (Ojs.string_to_js x4696)
    let cast_from = Obj.magic
  end
module ImportCallOptions =
  struct
    type t = [ `ImportCallOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4698 : Ojs.t) -> t_of_js x4698
    and t_0_to_js : t_0 -> Ojs.t = fun (x4697 : t) -> t_to_js x4697
    type tags = [ `ImportCallOptions ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ImportCallOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4701 : Ojs.t) -> intf_of_js __tags_of_js x4701
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4699 : __tags intf) -> intf_to_js __tags_to_js x4699
    let (get_assert : 'tags this -> ImportAssertions.t) =
      fun (x4703 : 'tags this) ->
        ImportAssertions.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4703) "assert")
    let (set_assert : 'tags this -> ImportAssertions.t -> unit) =
      fun (x4705 : 'tags this) ->
        fun (x4706 : ImportAssertions.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4705) "assert"
            (ImportAssertions.t_to_js x4706)
    let cast_from = Obj.magic
  end
module IArguments =
  struct
    type t =
      [ `IArguments  | any ArrayLike.tags_1 | any IterableIterator.tags_1]
        intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4709 : Ojs.t) -> t_of_js x4709
    and t_0_to_js : t_0 -> Ojs.t = fun (x4708 : t) -> t_to_js x4708
    type tags =
      [ `IArguments  | any ArrayLike.tags_1 | any IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `IArguments ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4712 : Ojs.t) -> intf_of_js __tags_of_js x4712
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4710 : __tags intf) -> intf_to_js __tags_to_js x4710
    let (get : 'tags this -> float -> any) =
      fun (x4714 : 'tags this) ->
        fun (x4716 : float) ->
          any_of_js
            (Ojs.get_prop (this_to_js Obj.magic x4714)
               (Ojs.float_to_js x4716))
    let (set : 'tags this -> float -> any -> unit) =
      fun (x4717 : 'tags this) ->
        fun (x4719 : float) ->
          fun (x4720 : any) ->
            Ojs.set_prop (this_to_js Obj.magic x4717) (Ojs.float_to_js x4719)
              (any_to_js x4720)
    let (get_length : 'tags this -> float) =
      fun (x4721 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4721) "length")
    let (set_length : 'tags this -> float -> unit) =
      fun (x4723 : 'tags this) ->
        fun (x4724 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4723) "length"
            (Ojs.float_to_js x4724)
    let (get_callee : 'tags this -> Function.t) =
      fun (x4726 : 'tags this) ->
        Function.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4726) "callee")
    let (set_callee : 'tags this -> Function.t -> unit) =
      fun (x4728 : 'tags this) ->
        fun (x4729 : Function.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4728) "callee"
            (Function.t_to_js x4729)
    let cast_from = Obj.magic
  end
module Generator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `Generator of ('T * 'TReturn * 'TNext) 
      | `Iterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn, 'TNext) t_3 = ('T, 'TReturn, 'TNext) t
    let rec t_3_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t_3
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (__TNext_of_js : Ojs.t -> __TNext) ->
            fun (x4735 : Ojs.t) ->
              t_of_js __T_of_js __TReturn_of_js __TNext_of_js x4735
    and t_3_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t_3 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (__TNext_to_js : __TNext -> Ojs.t) ->
            fun (x4731 : (__T, __TReturn, __TNext) t) ->
              t_to_js __T_to_js __TReturn_to_js __TNext_to_js x4731
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, unknown) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x4743 : Ojs.t) ->
            t_of_js __T_of_js __TReturn_of_js unknown_of_js x4743
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x4739 : (__T, __TReturn, unknown) t) ->
            t_to_js __T_to_js __TReturn_to_js unknown_to_js x4739
    type 'T t_1 = ('T, any, unknown) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4751 : Ojs.t) ->
          t_of_js __T_of_js any_of_js unknown_of_js x4751
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4747 : (__T, any, unknown) t) ->
          t_to_js __T_to_js any_to_js unknown_to_js x4747
    type t_0 = (unknown, any, unknown) t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x4759 : Ojs.t) ->
        t_of_js unknown_of_js any_of_js unknown_of_js x4759
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x4755 : (unknown, any, unknown) t) ->
        t_to_js unknown_to_js any_to_js unknown_to_js x4755
    type ('T, 'TReturn, 'TNext) tags =
      [ `Generator of ('T * 'TReturn * 'TNext) 
      | `Iterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn, 'TNext) tags_3 = ('T, 'TReturn, 'TNext) tags
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, unknown) tags
    type 'T tags_1 = ('T, any, unknown) tags
    type tags_0 = (unknown, any, unknown) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `Generator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
            fun (__TNext_of_js : Ojs.t -> __TNext) ->
              fun (x4765 : Ojs.t) -> intf_of_js __tags_of_js x4765
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
            fun (__TNext_to_js : __TNext -> Ojs.t) ->
              fun (x4763 : __tags intf) -> intf_to_js __tags_to_js x4763
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x4770 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x4767 : any list) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (let x4775 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x4770 in
             Ojs.call (Ojs.get_prop_ascii x4775 "next") "apply"
               [|x4775;((let x4768 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x4769 : any) ->
                              ignore
                                (Ojs.call x4768 "push" [|(any_to_js x4769)|]))
                           x4767;
                         x4768))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        value:'TReturn -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x4779 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~value:(x4778 : 'TReturn) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x4779)
               "return" [|(Obj.magic x4778)|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        e:any -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x4787 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~e:(x4786 : any) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x4787)
               "throw" [|(any_to_js x4786)|])
    let cast_from = Obj.magic
  end
module GeneratorFunction =
  struct
    type t = [ `GeneratorFunction ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4795 : Ojs.t) -> t_of_js x4795
    and t_0_to_js : t_0 -> Ojs.t = fun (x4794 : t) -> t_to_js x4794
    type tags = [ `GeneratorFunction ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `GeneratorFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4798 : Ojs.t) -> intf_of_js __tags_of_js x4798
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4796 : __tags intf) -> intf_to_js __tags_to_js x4796
    let (create : 'tags this -> args:any list -> Generator.t_0) =
      fun (x4803 : 'tags this) ->
        fun ~args:(x4800 : any list) ->
          Generator.t_0_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x4803)
               (let x4801 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x4802 : any) ->
                     ignore (Ojs.call x4801 "push" [|(any_to_js x4802)|]))
                  x4800;
                x4801))
    let (apply : 'tags this -> args:any list -> Generator.t_0) =
      fun (x4808 : 'tags this) ->
        fun ~args:(x4805 : any list) ->
          Generator.t_0_of_js
            (Ojs.call (this_to_js Obj.magic x4808) "apply"
               [|Ojs.null;((let x4806 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x4807 : any) ->
                                 ignore
                                   (Ojs.call x4806 "push"
                                      [|(any_to_js x4807)|])) x4805;
                            x4806))|])
    let (get_length : 'tags this -> float) =
      fun (x4810 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4810) "length")
    let (get_name : 'tags this -> string) =
      fun (x4812 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4812) "name")
    let (get_prototype : 'tags this -> Generator.t_0) =
      fun (x4814 : 'tags this) ->
        Generator.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4814) "prototype")
    let cast_from = Obj.magic
  end
module GeneratorFunctionConstructor =
  struct
    type t = [ `GeneratorFunctionConstructor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4817 : Ojs.t) -> t_of_js x4817
    and t_0_to_js : t_0 -> Ojs.t = fun (x4816 : t) -> t_to_js x4816
    type tags = [ `GeneratorFunctionConstructor ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `GeneratorFunctionConstructor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4820 : Ojs.t) -> intf_of_js __tags_of_js x4820
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4818 : __tags intf) -> intf_to_js __tags_to_js x4818
    let (create : 'tags this -> args:string list -> GeneratorFunction.t) =
      fun (x4825 : 'tags this) ->
        fun ~args:(x4822 : string list) ->
          GeneratorFunction.t_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x4825)
               (let x4823 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x4824 : string) ->
                     ignore
                       (Ojs.call x4823 "push" [|(Ojs.string_to_js x4824)|]))
                  x4822;
                x4823))
    let (apply : 'tags this -> args:string list -> GeneratorFunction.t) =
      fun (x4830 : 'tags this) ->
        fun ~args:(x4827 : string list) ->
          GeneratorFunction.t_of_js
            (Ojs.call (this_to_js Obj.magic x4830) "apply"
               [|Ojs.null;((let x4828 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x4829 : string) ->
                                 ignore
                                   (Ojs.call x4828 "push"
                                      [|(Ojs.string_to_js x4829)|])) x4827;
                            x4828))|])
    let (get_length : 'tags this -> float) =
      fun (x4832 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4832) "length")
    let (get_name : 'tags this -> string) =
      fun (x4834 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4834) "name")
    let (get_prototype : 'tags this -> GeneratorFunction.t) =
      fun (x4836 : 'tags this) ->
        GeneratorFunction.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4836) "prototype")
    let cast_from = Obj.magic
  end
module Float64Array =
  struct
    type t =
      [ `Float64Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4839 : Ojs.t) -> t_of_js x4839
    and t_0_to_js : t_0 -> Ojs.t = fun (x4838 : t) -> t_to_js x4838
    type tags =
      [ `Float64Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Float64Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4842 : Ojs.t) -> intf_of_js __tags_of_js x4842
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4840 : __tags intf) -> intf_to_js __tags_to_js x4840
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x4848 : 'tags this) ->
        fun ~searchElement:(x4844 : float) ->
          fun ?fromIndex:(x4845 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x4850 = this_to_js Obj.magic x4848 in
                 Ojs.call (Ojs.get_prop_ascii x4850 "includes") "apply"
                   [|x4850;((let x4846 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4846 "push"
                                  [|(Ojs.float_to_js x4844)|]);
                             (match x4845 with
                              | Some x4847 ->
                                  ignore
                                    (Ojs.call x4846 "push"
                                       [|(Ojs.float_to_js x4847)|])
                              | None -> ());
                             x4846))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x4851 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x4853 : Ojs.t) ->
             let x4854 = x4853 in
             ((Ojs.float_of_js (Ojs.array_get x4854 0)),
               (Ojs.float_of_js (Ojs.array_get x4854 1))))
          (Ojs.call (this_to_js Obj.magic x4851) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x4855 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x4855) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x4858 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x4858) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x4861 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4861)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x4863 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4863) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x4865 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4865) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x4867 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4867) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x4874 : 'tags this) ->
        fun ~target:(x4869 : float) ->
          fun ~start:(x4870 : float) ->
            fun ?end_:(x4871 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x4876 = this_to_js Obj.magic x4874 in
                   Ojs.call (Ojs.get_prop_ascii x4876 "copyWithin") "apply"
                     [|x4876;((let x4872 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4872 "push"
                                    [|(Ojs.float_to_js x4869)|]);
                               ignore
                                 (Ojs.call x4872 "push"
                                    [|(Ojs.float_to_js x4870)|]);
                               (match x4871 with
                                | Some x4873 ->
                                    ignore
                                      (Ojs.call x4872 "push"
                                         [|(Ojs.float_to_js x4873)|])
                                | None -> ());
                               x4872))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x4885 : 'tags this) ->
        fun
          ~predicate:(x4878 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x4879 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x4887 = this_to_js Obj.magic x4885 in
                 Ojs.call (Ojs.get_prop_ascii x4887 "every") "apply"
                   [|x4887;((let x4880 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4880 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4882 : Ojs.t) ->
                                          fun (x4883 : Ojs.t) ->
                                            fun (x4884 : Ojs.t) ->
                                              unknown_to_js
                                                (x4878
                                                   ~value:(Ojs.float_of_js
                                                             x4882)
                                                   ~index:(Ojs.float_of_js
                                                             x4883)
                                                   ~array:(t_of_js x4884))))|]);
                             (match x4879 with
                              | Some x4881 ->
                                  ignore
                                    (Ojs.call x4880 "push"
                                       [|(any_to_js x4881)|])
                              | None -> ());
                             x4880))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x4894 : 'tags this) ->
        fun ~value:(x4888 : float) ->
          fun ?start:(x4889 : float option) ->
            fun ?end_:(x4890 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x4896 = this_to_js Obj.magic x4894 in
                   Ojs.call (Ojs.get_prop_ascii x4896 "fill") "apply"
                     [|x4896;((let x4891 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4891 "push"
                                    [|(Ojs.float_to_js x4888)|]);
                               (match x4889 with
                                | Some x4893 ->
                                    ignore
                                      (Ojs.call x4891 "push"
                                         [|(Ojs.float_to_js x4893)|])
                                | None -> ());
                               (match x4890 with
                                | Some x4892 ->
                                    ignore
                                      (Ojs.call x4891 "push"
                                         [|(Ojs.float_to_js x4892)|])
                                | None -> ());
                               x4891))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x4905 : 'tags this) ->
        fun ~predicate:(x4898 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x4899 : any option) ->
            fun () ->
              t_of_js
                (let x4907 = this_to_js Obj.magic x4905 in
                 Ojs.call (Ojs.get_prop_ascii x4907 "filter") "apply"
                   [|x4907;((let x4900 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4900 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4902 : Ojs.t) ->
                                          fun (x4903 : Ojs.t) ->
                                            fun (x4904 : Ojs.t) ->
                                              any_to_js
                                                (x4898
                                                   ~value:(Ojs.float_of_js
                                                             x4902)
                                                   ~index:(Ojs.float_of_js
                                                             x4903)
                                                   ~array:(t_of_js x4904))))|]);
                             (match x4899 with
                              | Some x4901 ->
                                  ignore
                                    (Ojs.call x4900 "push"
                                       [|(any_to_js x4901)|])
                              | None -> ());
                             x4900))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x4915 : 'tags this) ->
        fun ~predicate:(x4908 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x4909 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x4917 = this_to_js Obj.magic x4915 in
                 Ojs.call (Ojs.get_prop_ascii x4917 "find") "apply"
                   [|x4917;((let x4910 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4910 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4912 : Ojs.t) ->
                                          fun (x4913 : Ojs.t) ->
                                            fun (x4914 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x4908
                                                   ~value:(Ojs.float_of_js
                                                             x4912)
                                                   ~index:(Ojs.float_of_js
                                                             x4913)
                                                   ~obj:(t_of_js x4914))))|]);
                             (match x4909 with
                              | Some x4911 ->
                                  ignore
                                    (Ojs.call x4910 "push"
                                       [|(any_to_js x4911)|])
                              | None -> ());
                             x4910))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x4926 : 'tags this) ->
        fun ~predicate:(x4919 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x4920 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x4928 = this_to_js Obj.magic x4926 in
                 Ojs.call (Ojs.get_prop_ascii x4928 "findIndex") "apply"
                   [|x4928;((let x4921 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4921 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4923 : Ojs.t) ->
                                          fun (x4924 : Ojs.t) ->
                                            fun (x4925 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x4919
                                                   ~value:(Ojs.float_of_js
                                                             x4923)
                                                   ~index:(Ojs.float_of_js
                                                             x4924)
                                                   ~obj:(t_of_js x4925))))|]);
                             (match x4920 with
                              | Some x4922 ->
                                  ignore
                                    (Ojs.call x4921 "push"
                                       [|(any_to_js x4922)|])
                              | None -> ());
                             x4921))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x4936 : 'tags this) ->
        fun
          ~callbackfn:(x4929 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x4930 : any option) ->
            fun () ->
              ignore
                (let x4938 = this_to_js Obj.magic x4936 in
                 Ojs.call (Ojs.get_prop_ascii x4938 "forEach") "apply"
                   [|x4938;((let x4931 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4931 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4933 : Ojs.t) ->
                                          fun (x4934 : Ojs.t) ->
                                            fun (x4935 : Ojs.t) ->
                                              x4929
                                                ~value:(Ojs.float_of_js x4933)
                                                ~index:(Ojs.float_of_js x4934)
                                                ~array:(t_of_js x4935)))|]);
                             (match x4930 with
                              | Some x4932 ->
                                  ignore
                                    (Ojs.call x4931 "push"
                                       [|(any_to_js x4932)|])
                              | None -> ());
                             x4931))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x4943 : 'tags this) ->
        fun ~searchElement:(x4939 : float) ->
          fun ?fromIndex:(x4940 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x4945 = this_to_js Obj.magic x4943 in
                 Ojs.call (Ojs.get_prop_ascii x4945 "indexOf") "apply"
                   [|x4945;((let x4941 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4941 "push"
                                  [|(Ojs.float_to_js x4939)|]);
                             (match x4940 with
                              | Some x4942 ->
                                  ignore
                                    (Ojs.call x4941 "push"
                                       [|(Ojs.float_to_js x4942)|])
                              | None -> ());
                             x4941))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x4949 : 'tags this) ->
        fun ?separator:(x4946 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x4951 = this_to_js Obj.magic x4949 in
               Ojs.call (Ojs.get_prop_ascii x4951 "join") "apply"
                 [|x4951;((let x4947 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4946 with
                            | Some x4948 ->
                                ignore
                                  (Ojs.call x4947 "push"
                                     [|(Ojs.string_to_js x4948)|])
                            | None -> ());
                           x4947))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x4956 : 'tags this) ->
        fun ~searchElement:(x4952 : float) ->
          fun ?fromIndex:(x4953 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x4958 = this_to_js Obj.magic x4956 in
                 Ojs.call (Ojs.get_prop_ascii x4958 "lastIndexOf") "apply"
                   [|x4958;((let x4954 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4954 "push"
                                  [|(Ojs.float_to_js x4952)|]);
                             (match x4953 with
                              | Some x4955 ->
                                  ignore
                                    (Ojs.call x4954 "push"
                                       [|(Ojs.float_to_js x4955)|])
                              | None -> ());
                             x4954))|])
    let (get_length : 'tags this -> float) =
      fun (x4959 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4959) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x4968 : 'tags this) ->
        fun
          ~callbackfn:(x4961 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x4962 : any option) ->
            fun () ->
              t_of_js
                (let x4970 = this_to_js Obj.magic x4968 in
                 Ojs.call (Ojs.get_prop_ascii x4970 "map") "apply"
                   [|x4970;((let x4963 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4963 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4965 : Ojs.t) ->
                                          fun (x4966 : Ojs.t) ->
                                            fun (x4967 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x4961
                                                   ~value:(Ojs.float_of_js
                                                             x4965)
                                                   ~index:(Ojs.float_of_js
                                                             x4966)
                                                   ~array:(t_of_js x4967))))|]);
                             (match x4962 with
                              | Some x4964 ->
                                  ignore
                                    (Ojs.call x4963 "push"
                                       [|(any_to_js x4964)|])
                              | None -> ());
                             x4963))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x4976 : 'tags this) ->
        fun
          ~callbackfn:(x4971 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x4976) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x4972 : Ojs.t) ->
                       fun (x4973 : Ojs.t) ->
                         fun (x4974 : Ojs.t) ->
                           fun (x4975 : Ojs.t) ->
                             Ojs.float_to_js
                               (x4971 ~previousValue:(Ojs.float_of_js x4972)
                                  ~currentValue:(Ojs.float_of_js x4973)
                                  ~currentIndex:(Ojs.float_of_js x4974)
                                  ~array:(t_of_js x4975))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x4984 : 'tags this) ->
        fun
          ~callbackfn:(x4978 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x4983 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x4984) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x4979 : Ojs.t) ->
                         fun (x4980 : Ojs.t) ->
                           fun (x4981 : Ojs.t) ->
                             fun (x4982 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x4978
                                    ~previousValue:(Ojs.float_of_js x4979)
                                    ~currentValue:(Ojs.float_of_js x4980)
                                    ~currentIndex:(Ojs.float_of_js x4981)
                                    ~array:(t_of_js x4982))));(Ojs.float_to_js
                                                                 x4983)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x4992 : 'tags this) ->
        fun
          ~callbackfn:(x4986 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x4991 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x4992) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x4987 : Ojs.t) ->
                         fun (x4988 : Ojs.t) ->
                           fun (x4989 : Ojs.t) ->
                             fun (x4990 : Ojs.t) ->
                               Obj.magic
                                 (x4986 ~previousValue:(Obj.magic x4987)
                                    ~currentValue:(Ojs.float_of_js x4988)
                                    ~currentIndex:(Ojs.float_of_js x4989)
                                    ~array:(t_of_js x4990))));(Obj.magic
                                                                 x4991)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x4999 : 'tags this) ->
        fun
          ~callbackfn:(x4994 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x4999) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x4995 : Ojs.t) ->
                       fun (x4996 : Ojs.t) ->
                         fun (x4997 : Ojs.t) ->
                           fun (x4998 : Ojs.t) ->
                             Ojs.float_to_js
                               (x4994 ~previousValue:(Ojs.float_of_js x4995)
                                  ~currentValue:(Ojs.float_of_js x4996)
                                  ~currentIndex:(Ojs.float_of_js x4997)
                                  ~array:(t_of_js x4998))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x5007 : 'tags this) ->
        fun
          ~callbackfn:(x5001 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x5006 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x5007) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x5002 : Ojs.t) ->
                         fun (x5003 : Ojs.t) ->
                           fun (x5004 : Ojs.t) ->
                             fun (x5005 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x5001
                                    ~previousValue:(Ojs.float_of_js x5002)
                                    ~currentValue:(Ojs.float_of_js x5003)
                                    ~currentIndex:(Ojs.float_of_js x5004)
                                    ~array:(t_of_js x5005))));(Ojs.float_to_js
                                                                 x5006)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x5015 : 'tags this) ->
        fun
          ~callbackfn:(x5009 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x5014 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x5015) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x5010 : Ojs.t) ->
                         fun (x5011 : Ojs.t) ->
                           fun (x5012 : Ojs.t) ->
                             fun (x5013 : Ojs.t) ->
                               Obj.magic
                                 (x5009 ~previousValue:(Obj.magic x5010)
                                    ~currentValue:(Ojs.float_of_js x5011)
                                    ~currentIndex:(Ojs.float_of_js x5012)
                                    ~array:(t_of_js x5013))));(Obj.magic
                                                                 x5014)|])
    let (reverse : 'tags this -> t) =
      fun (x5017 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x5017) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x5024 : 'tags this) ->
        fun ~array:(x5019 : float ArrayLike.t) ->
          fun ?offset:(x5020 : float option) ->
            fun () ->
              ignore
                (let x5026 = this_to_js Obj.magic x5024 in
                 Ojs.call (Ojs.get_prop_ascii x5026 "set") "apply"
                   [|x5026;((let x5021 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5021 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x5019)|]);
                             (match x5020 with
                              | Some x5022 ->
                                  ignore
                                    (Ojs.call x5021 "push"
                                       [|(Ojs.float_to_js x5022)|])
                              | None -> ());
                             x5021))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x5032 : 'tags this) ->
        fun ?start:(x5027 : float option) ->
          fun ?end_:(x5028 : float option) ->
            fun () ->
              t_of_js
                (let x5034 = this_to_js Obj.magic x5032 in
                 Ojs.call (Ojs.get_prop_ascii x5034 "slice") "apply"
                   [|x5034;((let x5029 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5027 with
                              | Some x5031 ->
                                  ignore
                                    (Ojs.call x5029 "push"
                                       [|(Ojs.float_to_js x5031)|])
                              | None -> ());
                             (match x5028 with
                              | Some x5030 ->
                                  ignore
                                    (Ojs.call x5029 "push"
                                       [|(Ojs.float_to_js x5030)|])
                              | None -> ());
                             x5029))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x5042 : 'tags this) ->
        fun
          ~predicate:(x5035 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x5036 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5044 = this_to_js Obj.magic x5042 in
                 Ojs.call (Ojs.get_prop_ascii x5044 "some") "apply"
                   [|x5044;((let x5037 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5037 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5039 : Ojs.t) ->
                                          fun (x5040 : Ojs.t) ->
                                            fun (x5041 : Ojs.t) ->
                                              unknown_to_js
                                                (x5035
                                                   ~value:(Ojs.float_of_js
                                                             x5039)
                                                   ~index:(Ojs.float_of_js
                                                             x5040)
                                                   ~array:(t_of_js x5041))))|]);
                             (match x5036 with
                              | Some x5038 ->
                                  ignore
                                    (Ojs.call x5037 "push"
                                       [|(any_to_js x5038)|])
                              | None -> ());
                             x5037))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x5050 : 'tags this) ->
        fun ?compareFn:(x5045 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x5052 = this_to_js Obj.magic x5050 in
               Ojs.call (Ojs.get_prop_ascii x5052 "sort") "apply"
                 [|x5052;((let x5046 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5045 with
                            | Some x5047 ->
                                ignore
                                  (Ojs.call x5046 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x5048 : Ojs.t) ->
                                             fun (x5049 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x5047
                                                    ~a:(Ojs.float_of_js x5048)
                                                    ~b:(Ojs.float_of_js x5049))))|])
                            | None -> ());
                           x5046))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x5059 : 'tags this) ->
        fun ?begin_:(x5054 : float option) ->
          fun ?end_:(x5055 : float option) ->
            fun () ->
              t_of_js
                (let x5061 = this_to_js Obj.magic x5059 in
                 Ojs.call (Ojs.get_prop_ascii x5061 "subarray") "apply"
                   [|x5061;((let x5056 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5054 with
                              | Some x5058 ->
                                  ignore
                                    (Ojs.call x5056 "push"
                                       [|(Ojs.float_to_js x5058)|])
                              | None -> ());
                             (match x5055 with
                              | Some x5057 ->
                                  ignore
                                    (Ojs.call x5056 "push"
                                       [|(Ojs.float_to_js x5057)|])
                              | None -> ());
                             x5056))|])
    let (toString : 'tags this -> string) =
      fun (x5062 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x5062) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x5064 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x5064) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x5066 : 'tags this) ->
        fun (x5068 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x5066)
               (Ojs.float_to_js x5068))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x5069 : 'tags this) ->
        fun (x5071 : float) ->
          fun (x5072 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x5069) (Ojs.float_to_js x5071)
              (Ojs.float_to_js x5072)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x5073 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|(Iterable.t_to_js Ojs.float_to_js x5073)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x5075 : float Iterable.t) ->
        fun ?mapfn:(x5076 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x5077 : any option) ->
            fun () ->
              t_of_js
                (let x5084 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
                 Ojs.call (Ojs.get_prop_ascii x5084 "from") "apply"
                   [|x5084;((let x5078 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5078 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x5075)|]);
                             (match x5076 with
                              | Some x5080 ->
                                  ignore
                                    (Ojs.call x5078 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x5081 : Ojs.t) ->
                                               fun (x5082 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x5080
                                                      ~v:(Ojs.float_of_js
                                                            x5081)
                                                      ~k:(Ojs.float_of_js
                                                            x5082))))|])
                              | None -> ());
                             (match x5077 with
                              | Some x5079 ->
                                  ignore
                                    (Ojs.call x5078 "push"
                                       [|(any_to_js x5079)|])
                              | None -> ());
                             x5078))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float64Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x5085 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|(Ojs.float_to_js x5085)|])
    let (create''' : (ArrayBufferLike.t, float ArrayLike.t) union2 -> t) =
      fun (x5086 : (ArrayBufferLike.t, float ArrayLike.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|(union2_to_js ArrayBufferLike.t_to_js
                  (fun (x5088 : float ArrayLike.t) ->
                     ArrayLike.t_to_js Ojs.float_to_js x5088) x5086)|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x5090 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x5091 : float option) ->
          fun ?length:(x5092 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Float64Array")
                   (let x5093 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x5093 "push"
                         [|(ArrayBufferLike.t_to_js x5090)|]);
                    (match x5091 with
                     | Some x5095 ->
                         ignore
                           (Ojs.call x5093 "push" [|(Ojs.float_to_js x5095)|])
                     | None -> ());
                    (match x5092 with
                     | Some x5094 ->
                         ignore
                           (Ojs.call x5093 "push" [|(Ojs.float_to_js x5094)|])
                     | None -> ());
                    x5093))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float64Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x5096 : float list) ->
        t_of_js
          (let x5099 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
           Ojs.call (Ojs.get_prop_ascii x5099 "of") "apply"
             [|x5099;((let x5097 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x5098 : float) ->
                            ignore
                              (Ojs.call x5097 "push"
                                 [|(Ojs.float_to_js x5098)|])) x5096;
                       x5097))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x5100 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Float64Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x5100)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x5102 : 'T ArrayLike.t) ->
        fun ~mapfn:(x5103 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x5104 : any option) ->
            fun () ->
              t_of_js
                (let x5110 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
                 Ojs.call (Ojs.get_prop_ascii x5110 "from") "apply"
                   [|x5110;((let x5105 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5105 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x5102)|]);
                             ignore
                               (Ojs.call x5105 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x5107 : Ojs.t) ->
                                          fun (x5108 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x5103 ~v:(Obj.magic x5107)
                                                 ~k:(Ojs.float_of_js x5108))))|]);
                             (match x5104 with
                              | Some x5106 ->
                                  ignore
                                    (Ojs.call x5105 "push"
                                       [|(any_to_js x5106)|])
                              | None -> ());
                             x5105))|])
    let cast_from = Obj.magic
  end
module Float32Array =
  struct
    type t =
      [ `Float32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5112 : Ojs.t) -> t_of_js x5112
    and t_0_to_js : t_0 -> Ojs.t = fun (x5111 : t) -> t_to_js x5111
    type tags =
      [ `Float32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Float32Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5115 : Ojs.t) -> intf_of_js __tags_of_js x5115
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5113 : __tags intf) -> intf_to_js __tags_to_js x5113
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x5121 : 'tags this) ->
        fun ~searchElement:(x5117 : float) ->
          fun ?fromIndex:(x5118 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5123 = this_to_js Obj.magic x5121 in
                 Ojs.call (Ojs.get_prop_ascii x5123 "includes") "apply"
                   [|x5123;((let x5119 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5119 "push"
                                  [|(Ojs.float_to_js x5117)|]);
                             (match x5118 with
                              | Some x5120 ->
                                  ignore
                                    (Ojs.call x5119 "push"
                                       [|(Ojs.float_to_js x5120)|])
                              | None -> ());
                             x5119))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x5124 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x5126 : Ojs.t) ->
             let x5127 = x5126 in
             ((Ojs.float_of_js (Ojs.array_get x5127 0)),
               (Ojs.float_of_js (Ojs.array_get x5127 1))))
          (Ojs.call (this_to_js Obj.magic x5124) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x5128 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x5128) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x5131 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x5131) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x5134 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5134)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x5136 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5136) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x5138 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5138) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x5140 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5140) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x5147 : 'tags this) ->
        fun ~target:(x5142 : float) ->
          fun ~start:(x5143 : float) ->
            fun ?end_:(x5144 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x5149 = this_to_js Obj.magic x5147 in
                   Ojs.call (Ojs.get_prop_ascii x5149 "copyWithin") "apply"
                     [|x5149;((let x5145 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5145 "push"
                                    [|(Ojs.float_to_js x5142)|]);
                               ignore
                                 (Ojs.call x5145 "push"
                                    [|(Ojs.float_to_js x5143)|]);
                               (match x5144 with
                                | Some x5146 ->
                                    ignore
                                      (Ojs.call x5145 "push"
                                         [|(Ojs.float_to_js x5146)|])
                                | None -> ());
                               x5145))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x5158 : 'tags this) ->
        fun
          ~predicate:(x5151 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x5152 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5160 = this_to_js Obj.magic x5158 in
                 Ojs.call (Ojs.get_prop_ascii x5160 "every") "apply"
                   [|x5160;((let x5153 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5153 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5155 : Ojs.t) ->
                                          fun (x5156 : Ojs.t) ->
                                            fun (x5157 : Ojs.t) ->
                                              unknown_to_js
                                                (x5151
                                                   ~value:(Ojs.float_of_js
                                                             x5155)
                                                   ~index:(Ojs.float_of_js
                                                             x5156)
                                                   ~array:(t_of_js x5157))))|]);
                             (match x5152 with
                              | Some x5154 ->
                                  ignore
                                    (Ojs.call x5153 "push"
                                       [|(any_to_js x5154)|])
                              | None -> ());
                             x5153))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x5167 : 'tags this) ->
        fun ~value:(x5161 : float) ->
          fun ?start:(x5162 : float option) ->
            fun ?end_:(x5163 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x5169 = this_to_js Obj.magic x5167 in
                   Ojs.call (Ojs.get_prop_ascii x5169 "fill") "apply"
                     [|x5169;((let x5164 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5164 "push"
                                    [|(Ojs.float_to_js x5161)|]);
                               (match x5162 with
                                | Some x5166 ->
                                    ignore
                                      (Ojs.call x5164 "push"
                                         [|(Ojs.float_to_js x5166)|])
                                | None -> ());
                               (match x5163 with
                                | Some x5165 ->
                                    ignore
                                      (Ojs.call x5164 "push"
                                         [|(Ojs.float_to_js x5165)|])
                                | None -> ());
                               x5164))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x5178 : 'tags this) ->
        fun ~predicate:(x5171 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x5172 : any option) ->
            fun () ->
              t_of_js
                (let x5180 = this_to_js Obj.magic x5178 in
                 Ojs.call (Ojs.get_prop_ascii x5180 "filter") "apply"
                   [|x5180;((let x5173 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5173 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5175 : Ojs.t) ->
                                          fun (x5176 : Ojs.t) ->
                                            fun (x5177 : Ojs.t) ->
                                              any_to_js
                                                (x5171
                                                   ~value:(Ojs.float_of_js
                                                             x5175)
                                                   ~index:(Ojs.float_of_js
                                                             x5176)
                                                   ~array:(t_of_js x5177))))|]);
                             (match x5172 with
                              | Some x5174 ->
                                  ignore
                                    (Ojs.call x5173 "push"
                                       [|(any_to_js x5174)|])
                              | None -> ());
                             x5173))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x5188 : 'tags this) ->
        fun ~predicate:(x5181 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x5182 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x5190 = this_to_js Obj.magic x5188 in
                 Ojs.call (Ojs.get_prop_ascii x5190 "find") "apply"
                   [|x5190;((let x5183 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5183 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5185 : Ojs.t) ->
                                          fun (x5186 : Ojs.t) ->
                                            fun (x5187 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x5181
                                                   ~value:(Ojs.float_of_js
                                                             x5185)
                                                   ~index:(Ojs.float_of_js
                                                             x5186)
                                                   ~obj:(t_of_js x5187))))|]);
                             (match x5182 with
                              | Some x5184 ->
                                  ignore
                                    (Ojs.call x5183 "push"
                                       [|(any_to_js x5184)|])
                              | None -> ());
                             x5183))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x5199 : 'tags this) ->
        fun ~predicate:(x5192 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x5193 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x5201 = this_to_js Obj.magic x5199 in
                 Ojs.call (Ojs.get_prop_ascii x5201 "findIndex") "apply"
                   [|x5201;((let x5194 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5194 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5196 : Ojs.t) ->
                                          fun (x5197 : Ojs.t) ->
                                            fun (x5198 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x5192
                                                   ~value:(Ojs.float_of_js
                                                             x5196)
                                                   ~index:(Ojs.float_of_js
                                                             x5197)
                                                   ~obj:(t_of_js x5198))))|]);
                             (match x5193 with
                              | Some x5195 ->
                                  ignore
                                    (Ojs.call x5194 "push"
                                       [|(any_to_js x5195)|])
                              | None -> ());
                             x5194))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x5209 : 'tags this) ->
        fun
          ~callbackfn:(x5202 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x5203 : any option) ->
            fun () ->
              ignore
                (let x5211 = this_to_js Obj.magic x5209 in
                 Ojs.call (Ojs.get_prop_ascii x5211 "forEach") "apply"
                   [|x5211;((let x5204 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5204 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5206 : Ojs.t) ->
                                          fun (x5207 : Ojs.t) ->
                                            fun (x5208 : Ojs.t) ->
                                              x5202
                                                ~value:(Ojs.float_of_js x5206)
                                                ~index:(Ojs.float_of_js x5207)
                                                ~array:(t_of_js x5208)))|]);
                             (match x5203 with
                              | Some x5205 ->
                                  ignore
                                    (Ojs.call x5204 "push"
                                       [|(any_to_js x5205)|])
                              | None -> ());
                             x5204))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x5216 : 'tags this) ->
        fun ~searchElement:(x5212 : float) ->
          fun ?fromIndex:(x5213 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x5218 = this_to_js Obj.magic x5216 in
                 Ojs.call (Ojs.get_prop_ascii x5218 "indexOf") "apply"
                   [|x5218;((let x5214 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5214 "push"
                                  [|(Ojs.float_to_js x5212)|]);
                             (match x5213 with
                              | Some x5215 ->
                                  ignore
                                    (Ojs.call x5214 "push"
                                       [|(Ojs.float_to_js x5215)|])
                              | None -> ());
                             x5214))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x5222 : 'tags this) ->
        fun ?separator:(x5219 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x5224 = this_to_js Obj.magic x5222 in
               Ojs.call (Ojs.get_prop_ascii x5224 "join") "apply"
                 [|x5224;((let x5220 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5219 with
                            | Some x5221 ->
                                ignore
                                  (Ojs.call x5220 "push"
                                     [|(Ojs.string_to_js x5221)|])
                            | None -> ());
                           x5220))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x5229 : 'tags this) ->
        fun ~searchElement:(x5225 : float) ->
          fun ?fromIndex:(x5226 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x5231 = this_to_js Obj.magic x5229 in
                 Ojs.call (Ojs.get_prop_ascii x5231 "lastIndexOf") "apply"
                   [|x5231;((let x5227 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5227 "push"
                                  [|(Ojs.float_to_js x5225)|]);
                             (match x5226 with
                              | Some x5228 ->
                                  ignore
                                    (Ojs.call x5227 "push"
                                       [|(Ojs.float_to_js x5228)|])
                              | None -> ());
                             x5227))|])
    let (get_length : 'tags this -> float) =
      fun (x5232 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5232) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x5241 : 'tags this) ->
        fun
          ~callbackfn:(x5234 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x5235 : any option) ->
            fun () ->
              t_of_js
                (let x5243 = this_to_js Obj.magic x5241 in
                 Ojs.call (Ojs.get_prop_ascii x5243 "map") "apply"
                   [|x5243;((let x5236 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5236 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5238 : Ojs.t) ->
                                          fun (x5239 : Ojs.t) ->
                                            fun (x5240 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x5234
                                                   ~value:(Ojs.float_of_js
                                                             x5238)
                                                   ~index:(Ojs.float_of_js
                                                             x5239)
                                                   ~array:(t_of_js x5240))))|]);
                             (match x5235 with
                              | Some x5237 ->
                                  ignore
                                    (Ojs.call x5236 "push"
                                       [|(any_to_js x5237)|])
                              | None -> ());
                             x5236))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x5249 : 'tags this) ->
        fun
          ~callbackfn:(x5244 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x5249) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x5245 : Ojs.t) ->
                       fun (x5246 : Ojs.t) ->
                         fun (x5247 : Ojs.t) ->
                           fun (x5248 : Ojs.t) ->
                             Ojs.float_to_js
                               (x5244 ~previousValue:(Ojs.float_of_js x5245)
                                  ~currentValue:(Ojs.float_of_js x5246)
                                  ~currentIndex:(Ojs.float_of_js x5247)
                                  ~array:(t_of_js x5248))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x5257 : 'tags this) ->
        fun
          ~callbackfn:(x5251 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x5256 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x5257) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x5252 : Ojs.t) ->
                         fun (x5253 : Ojs.t) ->
                           fun (x5254 : Ojs.t) ->
                             fun (x5255 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x5251
                                    ~previousValue:(Ojs.float_of_js x5252)
                                    ~currentValue:(Ojs.float_of_js x5253)
                                    ~currentIndex:(Ojs.float_of_js x5254)
                                    ~array:(t_of_js x5255))));(Ojs.float_to_js
                                                                 x5256)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x5265 : 'tags this) ->
        fun
          ~callbackfn:(x5259 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x5264 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x5265) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x5260 : Ojs.t) ->
                         fun (x5261 : Ojs.t) ->
                           fun (x5262 : Ojs.t) ->
                             fun (x5263 : Ojs.t) ->
                               Obj.magic
                                 (x5259 ~previousValue:(Obj.magic x5260)
                                    ~currentValue:(Ojs.float_of_js x5261)
                                    ~currentIndex:(Ojs.float_of_js x5262)
                                    ~array:(t_of_js x5263))));(Obj.magic
                                                                 x5264)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x5272 : 'tags this) ->
        fun
          ~callbackfn:(x5267 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x5272) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x5268 : Ojs.t) ->
                       fun (x5269 : Ojs.t) ->
                         fun (x5270 : Ojs.t) ->
                           fun (x5271 : Ojs.t) ->
                             Ojs.float_to_js
                               (x5267 ~previousValue:(Ojs.float_of_js x5268)
                                  ~currentValue:(Ojs.float_of_js x5269)
                                  ~currentIndex:(Ojs.float_of_js x5270)
                                  ~array:(t_of_js x5271))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x5280 : 'tags this) ->
        fun
          ~callbackfn:(x5274 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x5279 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x5280) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x5275 : Ojs.t) ->
                         fun (x5276 : Ojs.t) ->
                           fun (x5277 : Ojs.t) ->
                             fun (x5278 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x5274
                                    ~previousValue:(Ojs.float_of_js x5275)
                                    ~currentValue:(Ojs.float_of_js x5276)
                                    ~currentIndex:(Ojs.float_of_js x5277)
                                    ~array:(t_of_js x5278))));(Ojs.float_to_js
                                                                 x5279)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x5288 : 'tags this) ->
        fun
          ~callbackfn:(x5282 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x5287 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x5288) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x5283 : Ojs.t) ->
                         fun (x5284 : Ojs.t) ->
                           fun (x5285 : Ojs.t) ->
                             fun (x5286 : Ojs.t) ->
                               Obj.magic
                                 (x5282 ~previousValue:(Obj.magic x5283)
                                    ~currentValue:(Ojs.float_of_js x5284)
                                    ~currentIndex:(Ojs.float_of_js x5285)
                                    ~array:(t_of_js x5286))));(Obj.magic
                                                                 x5287)|])
    let (reverse : 'tags this -> t) =
      fun (x5290 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x5290) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x5297 : 'tags this) ->
        fun ~array:(x5292 : float ArrayLike.t) ->
          fun ?offset:(x5293 : float option) ->
            fun () ->
              ignore
                (let x5299 = this_to_js Obj.magic x5297 in
                 Ojs.call (Ojs.get_prop_ascii x5299 "set") "apply"
                   [|x5299;((let x5294 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5294 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x5292)|]);
                             (match x5293 with
                              | Some x5295 ->
                                  ignore
                                    (Ojs.call x5294 "push"
                                       [|(Ojs.float_to_js x5295)|])
                              | None -> ());
                             x5294))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x5305 : 'tags this) ->
        fun ?start:(x5300 : float option) ->
          fun ?end_:(x5301 : float option) ->
            fun () ->
              t_of_js
                (let x5307 = this_to_js Obj.magic x5305 in
                 Ojs.call (Ojs.get_prop_ascii x5307 "slice") "apply"
                   [|x5307;((let x5302 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5300 with
                              | Some x5304 ->
                                  ignore
                                    (Ojs.call x5302 "push"
                                       [|(Ojs.float_to_js x5304)|])
                              | None -> ());
                             (match x5301 with
                              | Some x5303 ->
                                  ignore
                                    (Ojs.call x5302 "push"
                                       [|(Ojs.float_to_js x5303)|])
                              | None -> ());
                             x5302))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x5315 : 'tags this) ->
        fun
          ~predicate:(x5308 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x5309 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5317 = this_to_js Obj.magic x5315 in
                 Ojs.call (Ojs.get_prop_ascii x5317 "some") "apply"
                   [|x5317;((let x5310 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5310 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5312 : Ojs.t) ->
                                          fun (x5313 : Ojs.t) ->
                                            fun (x5314 : Ojs.t) ->
                                              unknown_to_js
                                                (x5308
                                                   ~value:(Ojs.float_of_js
                                                             x5312)
                                                   ~index:(Ojs.float_of_js
                                                             x5313)
                                                   ~array:(t_of_js x5314))))|]);
                             (match x5309 with
                              | Some x5311 ->
                                  ignore
                                    (Ojs.call x5310 "push"
                                       [|(any_to_js x5311)|])
                              | None -> ());
                             x5310))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x5323 : 'tags this) ->
        fun ?compareFn:(x5318 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x5325 = this_to_js Obj.magic x5323 in
               Ojs.call (Ojs.get_prop_ascii x5325 "sort") "apply"
                 [|x5325;((let x5319 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5318 with
                            | Some x5320 ->
                                ignore
                                  (Ojs.call x5319 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x5321 : Ojs.t) ->
                                             fun (x5322 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x5320
                                                    ~a:(Ojs.float_of_js x5321)
                                                    ~b:(Ojs.float_of_js x5322))))|])
                            | None -> ());
                           x5319))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x5332 : 'tags this) ->
        fun ?begin_:(x5327 : float option) ->
          fun ?end_:(x5328 : float option) ->
            fun () ->
              t_of_js
                (let x5334 = this_to_js Obj.magic x5332 in
                 Ojs.call (Ojs.get_prop_ascii x5334 "subarray") "apply"
                   [|x5334;((let x5329 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5327 with
                              | Some x5331 ->
                                  ignore
                                    (Ojs.call x5329 "push"
                                       [|(Ojs.float_to_js x5331)|])
                              | None -> ());
                             (match x5328 with
                              | Some x5330 ->
                                  ignore
                                    (Ojs.call x5329 "push"
                                       [|(Ojs.float_to_js x5330)|])
                              | None -> ());
                             x5329))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x5335 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x5335) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x5337 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x5337) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x5339 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x5339) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x5341 : 'tags this) ->
        fun (x5343 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x5341)
               (Ojs.float_to_js x5343))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x5344 : 'tags this) ->
        fun (x5346 : float) ->
          fun (x5347 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x5344) (Ojs.float_to_js x5346)
              (Ojs.float_to_js x5347)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x5348 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|(Iterable.t_to_js Ojs.float_to_js x5348)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x5350 : float Iterable.t) ->
        fun ?mapfn:(x5351 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x5352 : any option) ->
            fun () ->
              t_of_js
                (let x5359 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
                 Ojs.call (Ojs.get_prop_ascii x5359 "from") "apply"
                   [|x5359;((let x5353 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5353 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x5350)|]);
                             (match x5351 with
                              | Some x5355 ->
                                  ignore
                                    (Ojs.call x5353 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x5356 : Ojs.t) ->
                                               fun (x5357 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x5355
                                                      ~v:(Ojs.float_of_js
                                                            x5356)
                                                      ~k:(Ojs.float_of_js
                                                            x5357))))|])
                              | None -> ());
                             (match x5352 with
                              | Some x5354 ->
                                  ignore
                                    (Ojs.call x5353 "push"
                                       [|(any_to_js x5354)|])
                              | None -> ());
                             x5353))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float32Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x5360 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|(Ojs.float_to_js x5360)|])
    let (create''' : (ArrayBufferLike.t, float ArrayLike.t) union2 -> t) =
      fun (x5361 : (ArrayBufferLike.t, float ArrayLike.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|(union2_to_js ArrayBufferLike.t_to_js
                  (fun (x5363 : float ArrayLike.t) ->
                     ArrayLike.t_to_js Ojs.float_to_js x5363) x5361)|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x5365 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x5366 : float option) ->
          fun ?length:(x5367 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Float32Array")
                   (let x5368 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x5368 "push"
                         [|(ArrayBufferLike.t_to_js x5365)|]);
                    (match x5366 with
                     | Some x5370 ->
                         ignore
                           (Ojs.call x5368 "push" [|(Ojs.float_to_js x5370)|])
                     | None -> ());
                    (match x5367 with
                     | Some x5369 ->
                         ignore
                           (Ojs.call x5368 "push" [|(Ojs.float_to_js x5369)|])
                     | None -> ());
                    x5368))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float32Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x5371 : float list) ->
        t_of_js
          (let x5374 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
           Ojs.call (Ojs.get_prop_ascii x5374 "of") "apply"
             [|x5374;((let x5372 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x5373 : float) ->
                            ignore
                              (Ojs.call x5372 "push"
                                 [|(Ojs.float_to_js x5373)|])) x5371;
                       x5372))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x5375 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Float32Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x5375)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x5377 : 'T ArrayLike.t) ->
        fun ~mapfn:(x5378 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x5379 : any option) ->
            fun () ->
              t_of_js
                (let x5385 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
                 Ojs.call (Ojs.get_prop_ascii x5385 "from") "apply"
                   [|x5385;((let x5380 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5380 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x5377)|]);
                             ignore
                               (Ojs.call x5380 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x5382 : Ojs.t) ->
                                          fun (x5383 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x5378 ~v:(Obj.magic x5382)
                                                 ~k:(Ojs.float_of_js x5383))))|]);
                             (match x5379 with
                              | Some x5381 ->
                                  ignore
                                    (Ojs.call x5380 "push"
                                       [|(any_to_js x5381)|])
                              | None -> ());
                             x5380))|])
    let cast_from = Obj.magic
  end
module FinalizationRegistry =
  struct
    type 'T t = [ `FinalizationRegistry of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x5388 : Ojs.t) -> t_of_js __T_of_js x5388
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x5386 : __T t) -> t_to_js __T_to_js x5386
    type t_0 = any t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x5392 : Ojs.t) -> t_of_js any_of_js x5392
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x5390 : any t) -> t_to_js any_to_js x5390
    type 'T tags = [ `FinalizationRegistry of 'T ]
    type 'T tags_1 = 'T tags
    type tags_0 = any tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `FinalizationRegistry of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x5396 : Ojs.t) -> intf_of_js __tags_of_js x5396
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x5394 : __tags intf) -> intf_to_js __tags_to_js x5394
    let (register :
      ('tags, 'T) this ->
        target:untyped_object ->
          heldValue:any -> ?unregisterToken:untyped_object -> unit -> unit)
      =
      fun (x5403 : ('tags, 'T) this) ->
        fun ~target:(x5398 : untyped_object) ->
          fun ~heldValue:(x5399 : any) ->
            fun ?unregisterToken:(x5400 : untyped_object option) ->
              fun () ->
                ignore
                  (let x5406 = this_to_js Obj.magic Obj.magic x5403 in
                   Ojs.call (Ojs.get_prop_ascii x5406 "register") "apply"
                     [|x5406;((let x5401 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5401 "push"
                                    [|(untyped_object_to_js x5398)|]);
                               ignore
                                 (Ojs.call x5401 "push" [|(any_to_js x5399)|]);
                               (match x5400 with
                                | Some x5402 ->
                                    ignore
                                      (Ojs.call x5401 "push"
                                         [|(untyped_object_to_js x5402)|])
                                | None -> ());
                               x5401))|])
    let (unregister :
      ('tags, 'T) this -> unregisterToken:untyped_object -> unit) =
      fun (x5408 : ('tags, 'T) this) ->
        fun ~unregisterToken:(x5407 : untyped_object) ->
          ignore
            (Ojs.call (this_to_js Obj.magic Obj.magic x5408) "unregister"
               [|(untyped_object_to_js x5407)|])
    let (register' :
      ('tags, 'T) this ->
        target:untyped_object ->
          heldValue:'T -> ?unregisterToken:untyped_object -> unit -> unit)
      =
      fun (x5416 : ('tags, 'T) this) ->
        fun ~target:(x5411 : untyped_object) ->
          fun ~heldValue:(x5412 : 'T) ->
            fun ?unregisterToken:(x5413 : untyped_object option) ->
              fun () ->
                ignore
                  (let x5419 = this_to_js Obj.magic Obj.magic x5416 in
                   Ojs.call (Ojs.get_prop_ascii x5419 "register") "apply"
                     [|x5419;((let x5414 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5414 "push"
                                    [|(untyped_object_to_js x5411)|]);
                               ignore
                                 (Ojs.call x5414 "push" [|(Obj.magic x5412)|]);
                               (match x5413 with
                                | Some x5415 ->
                                    ignore
                                      (Ojs.call x5414 "push"
                                         [|(untyped_object_to_js x5415)|])
                                | None -> ());
                               x5414))|])
    let (unregister' :
      ('tags, 'T) this -> unregisterToken:untyped_object -> unit) =
      fun (x5421 : ('tags, 'T) this) ->
        fun ~unregisterToken:(x5420 : untyped_object) ->
          ignore
            (Ojs.call (this_to_js Obj.magic Obj.magic x5421) "unregister"
               [|(untyped_object_to_js x5420)|])
    let (prototype : unit -> t_0) =
      fun () ->
        t_0_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             "prototype")
    let (create : (any -> unit) -> t_0) =
      fun (x5424 : any -> unit) ->
        t_0_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             [|(Ojs.fun_to_js 1
                  (fun (x5425 : Ojs.t) -> x5424 (any_of_js x5425)))|])
    let (prototype' : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             "prototype")
    let (create' : ('T -> unit) -> 'T t) =
      fun (x5427 : 'T -> unit) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             [|(Ojs.fun_to_js 1
                  (fun (x5428 : Ojs.t) -> x5427 (Obj.magic x5428)))|])
    let cast_from = Obj.magic
  end
module Extract =
  struct
    type ('T, 'U) t = any
    let rec t_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__U_of_js : Ojs.t -> __U) ->
          fun (x5431 : Ojs.t) -> any_of_js x5431
    and t_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t -> Ojs.t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__U_to_js : __U -> Ojs.t) ->
          fun (x5430 : any) -> any_to_js x5430
    type ('T, 'U) t_2 = ('T, 'U) t
    let rec t_2_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t_2 = fun
      (type __T) -> fun (type __U) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__U_of_js : Ojs.t -> __U) ->
          fun (x5435 : Ojs.t) -> t_of_js __T_of_js __U_of_js x5435
    and t_2_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t_2 -> Ojs.t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__U_to_js : __U -> Ojs.t) ->
          fun (x5432 : (__T, __U) t) -> t_to_js __T_to_js __U_to_js x5432
  end
module EvalError =
  struct
    type t = [ `Error  | `EvalError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5439 : Ojs.t) -> t_of_js x5439
    and t_0_to_js : t_0 -> Ojs.t = fun (x5438 : t) -> t_to_js x5438
    type tags = [ `Error  | `EvalError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `EvalError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5442 : Ojs.t) -> intf_of_js __tags_of_js x5442
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5440 : __tags intf) -> intf_to_js __tags_to_js x5440
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x5444 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "EvalError")
               (let x5445 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x5444 with
                 | Some x5446 ->
                     ignore
                       (Ojs.call x5445 "push" [|(Ojs.string_to_js x5446)|])
                 | None -> ());
                x5445))
    let (invoke : ?message:string -> unit -> t) =
      fun ?message:(x5447 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "EvalError") "apply"
               [|Ojs.null;((let x5448 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x5447 with
                             | Some x5449 ->
                                 ignore
                                   (Ojs.call x5448 "push"
                                      [|(Ojs.string_to_js x5449)|])
                             | None -> ());
                            x5448))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "EvalError")
             "prototype")
    let cast_from = Obj.magic
  end
module DataView =
  struct
    type t = [ `DataView ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5451 : Ojs.t) -> t_of_js x5451
    and t_0_to_js : t_0 -> Ojs.t = fun (x5450 : t) -> t_to_js x5450
    type tags = [ `DataView ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `DataView ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5454 : Ojs.t) -> intf_of_js __tags_of_js x5454
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5452 : __tags intf) -> intf_to_js __tags_to_js x5452
    let (getBigInt64 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> bigint)
      =
      fun (x5460 : 'tags this) ->
        fun ~byteOffset:(x5456 : float) ->
          fun ?littleEndian:(x5457 : bool option) ->
            fun () ->
              bigint_of_js
                (let x5462 = this_to_js Obj.magic x5460 in
                 Ojs.call (Ojs.get_prop_ascii x5462 "getBigInt64") "apply"
                   [|x5462;((let x5458 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5458 "push"
                                  [|(Ojs.float_to_js x5456)|]);
                             (match x5457 with
                              | Some x5459 ->
                                  ignore
                                    (Ojs.call x5458 "push"
                                       [|(Ojs.bool_to_js x5459)|])
                              | None -> ());
                             x5458))|])
    let (getBigUint64 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> bigint)
      =
      fun (x5467 : 'tags this) ->
        fun ~byteOffset:(x5463 : float) ->
          fun ?littleEndian:(x5464 : bool option) ->
            fun () ->
              bigint_of_js
                (let x5469 = this_to_js Obj.magic x5467 in
                 Ojs.call (Ojs.get_prop_ascii x5469 "getBigUint64") "apply"
                   [|x5469;((let x5465 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5465 "push"
                                  [|(Ojs.float_to_js x5463)|]);
                             (match x5464 with
                              | Some x5466 ->
                                  ignore
                                    (Ojs.call x5465 "push"
                                       [|(Ojs.bool_to_js x5466)|])
                              | None -> ());
                             x5465))|])
    let (setBigInt64 :
      'tags this ->
        byteOffset:float ->
          value:bigint -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x5475 : 'tags this) ->
        fun ~byteOffset:(x5470 : float) ->
          fun ~value:(x5471 : bigint) ->
            fun ?littleEndian:(x5472 : bool option) ->
              fun () ->
                ignore
                  (let x5477 = this_to_js Obj.magic x5475 in
                   Ojs.call (Ojs.get_prop_ascii x5477 "setBigInt64") "apply"
                     [|x5477;((let x5473 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5473 "push"
                                    [|(Ojs.float_to_js x5470)|]);
                               ignore
                                 (Ojs.call x5473 "push"
                                    [|(bigint_to_js x5471)|]);
                               (match x5472 with
                                | Some x5474 ->
                                    ignore
                                      (Ojs.call x5473 "push"
                                         [|(Ojs.bool_to_js x5474)|])
                                | None -> ());
                               x5473))|])
    let (setBigUint64 :
      'tags this ->
        byteOffset:float ->
          value:bigint -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x5483 : 'tags this) ->
        fun ~byteOffset:(x5478 : float) ->
          fun ~value:(x5479 : bigint) ->
            fun ?littleEndian:(x5480 : bool option) ->
              fun () ->
                ignore
                  (let x5485 = this_to_js Obj.magic x5483 in
                   Ojs.call (Ojs.get_prop_ascii x5485 "setBigUint64") "apply"
                     [|x5485;((let x5481 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5481 "push"
                                    [|(Ojs.float_to_js x5478)|]);
                               ignore
                                 (Ojs.call x5481 "push"
                                    [|(bigint_to_js x5479)|]);
                               (match x5480 with
                                | Some x5482 ->
                                    ignore
                                      (Ojs.call x5481 "push"
                                         [|(Ojs.bool_to_js x5482)|])
                                | None -> ());
                               x5481))|])
    let (get_buffer : 'tags this -> ArrayBuffer.t) =
      fun (x5486 : 'tags this) ->
        ArrayBuffer.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5486) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x5488 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5488) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x5490 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5490) "byteOffset")
    let (getFloat32 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x5496 : 'tags this) ->
        fun ~byteOffset:(x5492 : float) ->
          fun ?littleEndian:(x5493 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x5498 = this_to_js Obj.magic x5496 in
                 Ojs.call (Ojs.get_prop_ascii x5498 "getFloat32") "apply"
                   [|x5498;((let x5494 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5494 "push"
                                  [|(Ojs.float_to_js x5492)|]);
                             (match x5493 with
                              | Some x5495 ->
                                  ignore
                                    (Ojs.call x5494 "push"
                                       [|(Ojs.bool_to_js x5495)|])
                              | None -> ());
                             x5494))|])
    let (getFloat64 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x5503 : 'tags this) ->
        fun ~byteOffset:(x5499 : float) ->
          fun ?littleEndian:(x5500 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x5505 = this_to_js Obj.magic x5503 in
                 Ojs.call (Ojs.get_prop_ascii x5505 "getFloat64") "apply"
                   [|x5505;((let x5501 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5501 "push"
                                  [|(Ojs.float_to_js x5499)|]);
                             (match x5500 with
                              | Some x5502 ->
                                  ignore
                                    (Ojs.call x5501 "push"
                                       [|(Ojs.bool_to_js x5502)|])
                              | None -> ());
                             x5501))|])
    let (getInt8 : 'tags this -> byteOffset:float -> float) =
      fun (x5507 : 'tags this) ->
        fun ~byteOffset:(x5506 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x5507) "getInt8"
               [|(Ojs.float_to_js x5506)|])
    let (getInt16 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x5513 : 'tags this) ->
        fun ~byteOffset:(x5509 : float) ->
          fun ?littleEndian:(x5510 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x5515 = this_to_js Obj.magic x5513 in
                 Ojs.call (Ojs.get_prop_ascii x5515 "getInt16") "apply"
                   [|x5515;((let x5511 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5511 "push"
                                  [|(Ojs.float_to_js x5509)|]);
                             (match x5510 with
                              | Some x5512 ->
                                  ignore
                                    (Ojs.call x5511 "push"
                                       [|(Ojs.bool_to_js x5512)|])
                              | None -> ());
                             x5511))|])
    let (getInt32 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x5520 : 'tags this) ->
        fun ~byteOffset:(x5516 : float) ->
          fun ?littleEndian:(x5517 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x5522 = this_to_js Obj.magic x5520 in
                 Ojs.call (Ojs.get_prop_ascii x5522 "getInt32") "apply"
                   [|x5522;((let x5518 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5518 "push"
                                  [|(Ojs.float_to_js x5516)|]);
                             (match x5517 with
                              | Some x5519 ->
                                  ignore
                                    (Ojs.call x5518 "push"
                                       [|(Ojs.bool_to_js x5519)|])
                              | None -> ());
                             x5518))|])
    let (getUint8 : 'tags this -> byteOffset:float -> float) =
      fun (x5524 : 'tags this) ->
        fun ~byteOffset:(x5523 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x5524) "getUint8"
               [|(Ojs.float_to_js x5523)|])
    let (getUint16 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x5530 : 'tags this) ->
        fun ~byteOffset:(x5526 : float) ->
          fun ?littleEndian:(x5527 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x5532 = this_to_js Obj.magic x5530 in
                 Ojs.call (Ojs.get_prop_ascii x5532 "getUint16") "apply"
                   [|x5532;((let x5528 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5528 "push"
                                  [|(Ojs.float_to_js x5526)|]);
                             (match x5527 with
                              | Some x5529 ->
                                  ignore
                                    (Ojs.call x5528 "push"
                                       [|(Ojs.bool_to_js x5529)|])
                              | None -> ());
                             x5528))|])
    let (getUint32 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x5537 : 'tags this) ->
        fun ~byteOffset:(x5533 : float) ->
          fun ?littleEndian:(x5534 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x5539 = this_to_js Obj.magic x5537 in
                 Ojs.call (Ojs.get_prop_ascii x5539 "getUint32") "apply"
                   [|x5539;((let x5535 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5535 "push"
                                  [|(Ojs.float_to_js x5533)|]);
                             (match x5534 with
                              | Some x5536 ->
                                  ignore
                                    (Ojs.call x5535 "push"
                                       [|(Ojs.bool_to_js x5536)|])
                              | None -> ());
                             x5535))|])
    let (setFloat32 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x5545 : 'tags this) ->
        fun ~byteOffset:(x5540 : float) ->
          fun ~value:(x5541 : float) ->
            fun ?littleEndian:(x5542 : bool option) ->
              fun () ->
                ignore
                  (let x5547 = this_to_js Obj.magic x5545 in
                   Ojs.call (Ojs.get_prop_ascii x5547 "setFloat32") "apply"
                     [|x5547;((let x5543 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5543 "push"
                                    [|(Ojs.float_to_js x5540)|]);
                               ignore
                                 (Ojs.call x5543 "push"
                                    [|(Ojs.float_to_js x5541)|]);
                               (match x5542 with
                                | Some x5544 ->
                                    ignore
                                      (Ojs.call x5543 "push"
                                         [|(Ojs.bool_to_js x5544)|])
                                | None -> ());
                               x5543))|])
    let (setFloat64 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x5553 : 'tags this) ->
        fun ~byteOffset:(x5548 : float) ->
          fun ~value:(x5549 : float) ->
            fun ?littleEndian:(x5550 : bool option) ->
              fun () ->
                ignore
                  (let x5555 = this_to_js Obj.magic x5553 in
                   Ojs.call (Ojs.get_prop_ascii x5555 "setFloat64") "apply"
                     [|x5555;((let x5551 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5551 "push"
                                    [|(Ojs.float_to_js x5548)|]);
                               ignore
                                 (Ojs.call x5551 "push"
                                    [|(Ojs.float_to_js x5549)|]);
                               (match x5550 with
                                | Some x5552 ->
                                    ignore
                                      (Ojs.call x5551 "push"
                                         [|(Ojs.bool_to_js x5552)|])
                                | None -> ());
                               x5551))|])
    let (setInt8 : 'tags this -> byteOffset:float -> value:float -> unit) =
      fun (x5558 : 'tags this) ->
        fun ~byteOffset:(x5556 : float) ->
          fun ~value:(x5557 : float) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x5558) "setInt8"
                 [|(Ojs.float_to_js x5556);(Ojs.float_to_js x5557)|])
    let (setInt16 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x5565 : 'tags this) ->
        fun ~byteOffset:(x5560 : float) ->
          fun ~value:(x5561 : float) ->
            fun ?littleEndian:(x5562 : bool option) ->
              fun () ->
                ignore
                  (let x5567 = this_to_js Obj.magic x5565 in
                   Ojs.call (Ojs.get_prop_ascii x5567 "setInt16") "apply"
                     [|x5567;((let x5563 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5563 "push"
                                    [|(Ojs.float_to_js x5560)|]);
                               ignore
                                 (Ojs.call x5563 "push"
                                    [|(Ojs.float_to_js x5561)|]);
                               (match x5562 with
                                | Some x5564 ->
                                    ignore
                                      (Ojs.call x5563 "push"
                                         [|(Ojs.bool_to_js x5564)|])
                                | None -> ());
                               x5563))|])
    let (setInt32 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x5573 : 'tags this) ->
        fun ~byteOffset:(x5568 : float) ->
          fun ~value:(x5569 : float) ->
            fun ?littleEndian:(x5570 : bool option) ->
              fun () ->
                ignore
                  (let x5575 = this_to_js Obj.magic x5573 in
                   Ojs.call (Ojs.get_prop_ascii x5575 "setInt32") "apply"
                     [|x5575;((let x5571 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5571 "push"
                                    [|(Ojs.float_to_js x5568)|]);
                               ignore
                                 (Ojs.call x5571 "push"
                                    [|(Ojs.float_to_js x5569)|]);
                               (match x5570 with
                                | Some x5572 ->
                                    ignore
                                      (Ojs.call x5571 "push"
                                         [|(Ojs.bool_to_js x5572)|])
                                | None -> ());
                               x5571))|])
    let (setUint8 : 'tags this -> byteOffset:float -> value:float -> unit) =
      fun (x5578 : 'tags this) ->
        fun ~byteOffset:(x5576 : float) ->
          fun ~value:(x5577 : float) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x5578) "setUint8"
                 [|(Ojs.float_to_js x5576);(Ojs.float_to_js x5577)|])
    let (setUint16 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x5585 : 'tags this) ->
        fun ~byteOffset:(x5580 : float) ->
          fun ~value:(x5581 : float) ->
            fun ?littleEndian:(x5582 : bool option) ->
              fun () ->
                ignore
                  (let x5587 = this_to_js Obj.magic x5585 in
                   Ojs.call (Ojs.get_prop_ascii x5587 "setUint16") "apply"
                     [|x5587;((let x5583 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5583 "push"
                                    [|(Ojs.float_to_js x5580)|]);
                               ignore
                                 (Ojs.call x5583 "push"
                                    [|(Ojs.float_to_js x5581)|]);
                               (match x5582 with
                                | Some x5584 ->
                                    ignore
                                      (Ojs.call x5583 "push"
                                         [|(Ojs.bool_to_js x5584)|])
                                | None -> ());
                               x5583))|])
    let (setUint32 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x5593 : 'tags this) ->
        fun ~byteOffset:(x5588 : float) ->
          fun ~value:(x5589 : float) ->
            fun ?littleEndian:(x5590 : bool option) ->
              fun () ->
                ignore
                  (let x5595 = this_to_js Obj.magic x5593 in
                   Ojs.call (Ojs.get_prop_ascii x5595 "setUint32") "apply"
                     [|x5595;((let x5591 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5591 "push"
                                    [|(Ojs.float_to_js x5588)|]);
                               ignore
                                 (Ojs.call x5591 "push"
                                    [|(Ojs.float_to_js x5589)|]);
                               (match x5590 with
                                | Some x5592 ->
                                    ignore
                                      (Ojs.call x5591 "push"
                                         [|(Ojs.bool_to_js x5592)|])
                                | None -> ());
                               x5591))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DataView")
             "prototype")
    let (create :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?byteLength:float -> unit -> t)
      =
      fun ~buffer:(x5596 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x5597 : float option) ->
          fun ?byteLength:(x5598 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "DataView")
                   (let x5599 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x5599 "push"
                         [|(ArrayBufferLike.t_to_js x5596)|]);
                    (match x5597 with
                     | Some x5601 ->
                         ignore
                           (Ojs.call x5599 "push" [|(Ojs.float_to_js x5601)|])
                     | None -> ());
                    (match x5598 with
                     | Some x5600 ->
                         ignore
                           (Ojs.call x5599 "push" [|(Ojs.float_to_js x5600)|])
                     | None -> ());
                    x5599))
    let cast_from = Obj.magic
  end
module ConstructorParameters =
  struct
    module AnonymousInterface8 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x5603 : Ojs.t) -> x5603
        and t_to_js : t -> Ojs.t = fun (x5602 : Ojs.t) -> x5602
        let (create : t -> args:any list -> any) =
          fun (x5607 : t) ->
            fun ~args:(x5604 : any list) ->
              any_of_js
                (Ojs.new_obj_arr (t_to_js x5607)
                   (let x5605 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x5606 : any) ->
                         ignore (Ojs.call x5605 "push" [|(any_to_js x5606)|]))
                      x5604;
                    x5605))
      end
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x5609 : Ojs.t) -> any_of_js x5609
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x5608 : any) -> any_to_js x5608
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x5612 : Ojs.t) -> t_of_js __T_of_js x5612
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x5610 : __T t) -> t_to_js __T_to_js x5610
  end
module ClassDecorator =
  struct
    type t = [ `ClassDecorator ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5615 : Ojs.t) -> t_of_js x5615
    and t_0_to_js : t_0 -> Ojs.t = fun (x5614 : t) -> t_to_js x5614
    type tags = [ `ClassDecorator ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ClassDecorator ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5618 : Ojs.t) -> intf_of_js __tags_of_js x5618
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5616 : __tags intf) -> intf_to_js __tags_to_js x5616
    let (apply :
      'tags this -> target:'TFunction -> ('TFunction, unit) union2) =
      fun (x5621 : 'tags this) ->
        fun ~target:(x5620 : 'TFunction) ->
          union2_of_js Obj.magic Ojs.unit_of_js
            (Ojs.apply (this_to_js Obj.magic x5621) [|(Obj.magic x5620)|])
    let cast_from = Obj.magic
  end
module Capitalize =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t = fun (type __S) ->
      fun (__S_of_js : Ojs.t -> __S) -> fun (x5626 : Ojs.t) -> x5626
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) -> fun (x5625 : Ojs.t) -> x5625
    type 'S t_1 = 'S t
    let rec t_1_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t_1 = fun (type
      __S) ->
      fun (__S_of_js : Ojs.t -> __S) ->
        fun (x5629 : Ojs.t) -> t_of_js __S_of_js x5629
    and t_1_to_js : 'S . ('S -> Ojs.t) -> 'S t_1 -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) ->
        fun (x5627 : __S t) -> t_to_js __S_to_js x5627
  end
module ThisParameterType =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x5632 : Ojs.t) -> any_of_js x5632
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x5631 : any) -> any_to_js x5631
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x5635 : Ojs.t) -> t_of_js __T_of_js x5635
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x5633 : __T t) -> t_to_js __T_to_js x5633
  end
module OmitThisParameter =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x5638 : Ojs.t) -> any_of_js x5638
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x5637 : any) -> any_to_js x5637
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x5641 : Ojs.t) -> t_of_js __T_of_js x5641
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x5639 : __T t) -> t_to_js __T_to_js x5639
  end
module CallableFunction =
  struct
    type t = [ `CallableFunction  | `Function  | `Function ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5644 : Ojs.t) -> t_of_js x5644
    and t_0_to_js : t_0 -> Ojs.t = fun (x5643 : t) -> t_to_js x5643
    type tags = [ `CallableFunction  | `Function  | `Function ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `CallableFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5647 : Ojs.t) -> intf_of_js __tags_of_js x5647
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5645 : __tags intf) -> intf_to_js __tags_to_js x5645
    let (apply_ : 'tags this -> this:('T -> 'R) -> thisArg:'T -> 'R) =
      fun (x5652 : 'tags this) ->
        fun ~this:(x5649 : 'T -> 'R) ->
          fun ~thisArg:(x5651 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x5652) "apply"
                 [|(Ojs.fun_to_js 1
                      (fun (x5650 : Ojs.t) ->
                         Obj.magic (x5649 (Obj.magic x5650))));(Obj.magic
                                                                  x5651)|])
    let (apply_' :
      'tags this ->
        this:(this:'T -> args:any list -> 'R) -> thisArg:'T -> args:'A -> 'R)
      =
      fun (x5659 : 'tags this) ->
        fun ~this:(x5654 : this:'T -> args:any list -> 'R) ->
          fun ~thisArg:(x5657 : 'T) ->
            fun ~args:(x5658 : 'A) ->
              Obj.magic
                (Ojs.call (this_to_js Obj.magic x5659) "apply"
                   [|(Ojs.fun_to_js_args
                        (fun (x5655 : _) ->
                           Obj.magic
                             (x5654 ~this:(Obj.magic (Ojs.array_get x5655 0))
                                ~args:(Ojs.list_of_js_from any_of_js x5655 1))));(
                     Obj.magic x5657);(Obj.magic x5658)|])
    let (call :
      'tags this ->
        this:(this:'T -> args:any list -> 'R) ->
          thisArg:'T -> args:any list -> 'R)
      =
      fun (x5668 : 'tags this) ->
        fun ~this:(x5661 : this:'T -> args:any list -> 'R) ->
          fun ~thisArg:(x5662 : 'T) ->
            fun ~args:(x5663 : any list) ->
              Obj.magic
                (let x5670 = this_to_js Obj.magic x5668 in
                 Ojs.call (Ojs.get_prop_ascii x5670 "call") "apply"
                   [|x5670;((let x5664 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5664 "push"
                                  [|(Ojs.fun_to_js_args
                                       (fun (x5666 : _) ->
                                          Obj.magic
                                            (x5661
                                               ~this:(Obj.magic
                                                        (Ojs.array_get x5666
                                                           0))
                                               ~args:(Ojs.list_of_js_from
                                                        any_of_js x5666 1))))|]);
                             ignore
                               (Ojs.call x5664 "push" [|(Obj.magic x5662)|]);
                             List.iter
                               (fun (x5665 : any) ->
                                  ignore
                                    (Ojs.call x5664 "push"
                                       [|(any_to_js x5665)|])) x5663;
                             x5664))|])
    let (bind :
      'tags this ->
        this:'T -> thisArg:'T ThisParameterType.t -> 'T OmitThisParameter.t)
      =
      fun (x5674 : 'tags this) ->
        fun ~this:(x5671 : 'T) ->
          fun ~thisArg:(x5672 : 'T ThisParameterType.t) ->
            OmitThisParameter.t_of_js Obj.magic
              (Ojs.call (this_to_js Obj.magic x5674) "bind"
                 [|(Obj.magic x5671);(ThisParameterType.t_to_js Obj.magic
                                        x5672)|])
    let (bind' :
      'tags this ->
        this:(this:'T -> arg0:'A0 -> args:any list -> 'R) ->
          thisArg:'T -> arg0:'A0 -> any list -> 'R)
      =
      fun (x5682 : 'tags this) ->
        fun ~this:(x5677 : this:'T -> arg0:'A0 -> args:any list -> 'R) ->
          fun ~thisArg:(x5680 : 'T) ->
            fun ~arg0:(x5681 : 'A0) ->
              fun (x5684 : any list) ->
                Obj.magic
                  (Ojs.call
                     (Ojs.call (this_to_js Obj.magic x5682) "bind"
                        [|(Ojs.fun_to_js_args
                             (fun (x5678 : _) ->
                                Obj.magic
                                  (x5677
                                     ~this:(Obj.magic (Ojs.array_get x5678 0))
                                     ~arg0:(Obj.magic (Ojs.array_get x5678 1))
                                     ~args:(Ojs.list_of_js_from any_of_js
                                              x5678 2))));(Obj.magic x5680);(
                          Obj.magic x5681)|]) "apply"
                     [|Ojs.null;((let x5685 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  List.iter
                                    (fun (x5686 : any) ->
                                       ignore
                                         (Ojs.call x5685 "push"
                                            [|(any_to_js x5686)|])) x5684;
                                  x5685))|])
    let (bind'' :
      'tags this ->
        this:(this:'T -> arg0:'A0 -> arg1:'A1 -> args:any list -> 'R) ->
          thisArg:'T -> arg0:'A0 -> arg1:'A1 -> any list -> 'R)
      =
      fun (x5693 : 'tags this) ->
        fun
          ~this:(x5687 :
                  this:'T -> arg0:'A0 -> arg1:'A1 -> args:any list -> 'R)
          ->
          fun ~thisArg:(x5690 : 'T) ->
            fun ~arg0:(x5691 : 'A0) ->
              fun ~arg1:(x5692 : 'A1) ->
                fun (x5695 : any list) ->
                  Obj.magic
                    (Ojs.call
                       (Ojs.call (this_to_js Obj.magic x5693) "bind"
                          [|(Ojs.fun_to_js_args
                               (fun (x5688 : _) ->
                                  Obj.magic
                                    (x5687
                                       ~this:(Obj.magic
                                                (Ojs.array_get x5688 0))
                                       ~arg0:(Obj.magic
                                                (Ojs.array_get x5688 1))
                                       ~arg1:(Obj.magic
                                                (Ojs.array_get x5688 2))
                                       ~args:(Ojs.list_of_js_from any_of_js
                                                x5688 3))));(Obj.magic x5690);(
                            Obj.magic x5691);(Obj.magic x5692)|]) "apply"
                       [|Ojs.null;((let x5696 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    List.iter
                                      (fun (x5697 : any) ->
                                         ignore
                                           (Ojs.call x5696 "push"
                                              [|(any_to_js x5697)|])) x5695;
                                    x5696))|])
    let (bind''' :
      'tags this ->
        this:(this:'T ->
                arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> args:any list -> 'R)
          -> thisArg:'T -> arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> any list -> 'R)
      =
      fun (x5705 : 'tags this) ->
        fun
          ~this:(x5698 :
                  this:'T ->
                    arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> args:any list -> 'R)
          ->
          fun ~thisArg:(x5701 : 'T) ->
            fun ~arg0:(x5702 : 'A0) ->
              fun ~arg1:(x5703 : 'A1) ->
                fun ~arg2:(x5704 : 'A2) ->
                  fun (x5707 : any list) ->
                    Obj.magic
                      (Ojs.call
                         (Ojs.call (this_to_js Obj.magic x5705) "bind"
                            [|(Ojs.fun_to_js_args
                                 (fun (x5699 : _) ->
                                    Obj.magic
                                      (x5698
                                         ~this:(Obj.magic
                                                  (Ojs.array_get x5699 0))
                                         ~arg0:(Obj.magic
                                                  (Ojs.array_get x5699 1))
                                         ~arg1:(Obj.magic
                                                  (Ojs.array_get x5699 2))
                                         ~arg2:(Obj.magic
                                                  (Ojs.array_get x5699 3))
                                         ~args:(Ojs.list_of_js_from any_of_js
                                                  x5699 4))));(Obj.magic
                                                                 x5701);(
                              Obj.magic x5702);(Obj.magic x5703);(Obj.magic
                                                                    x5704)|])
                         "apply"
                         [|Ojs.null;((let x5708 =
                                        Ojs.new_obj
                                          (Ojs.get_prop_ascii Ojs.global
                                             "Array") [||] in
                                      List.iter
                                        (fun (x5709 : any) ->
                                           ignore
                                             (Ojs.call x5708 "push"
                                                [|(any_to_js x5709)|])) x5707;
                                      x5708))|])
    let (bind'''' :
      'tags this ->
        this:(this:'T ->
                arg0:'A0 ->
                  arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> args:any list -> 'R)
          ->
          thisArg:'T ->
            arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> any list -> 'R)
      =
      fun (x5718 : 'tags this) ->
        fun
          ~this:(x5710 :
                  this:'T ->
                    arg0:'A0 ->
                      arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> args:any list -> 'R)
          ->
          fun ~thisArg:(x5713 : 'T) ->
            fun ~arg0:(x5714 : 'A0) ->
              fun ~arg1:(x5715 : 'A1) ->
                fun ~arg2:(x5716 : 'A2) ->
                  fun ~arg3:(x5717 : 'A3) ->
                    fun (x5720 : any list) ->
                      Obj.magic
                        (Ojs.call
                           (Ojs.call (this_to_js Obj.magic x5718) "bind"
                              [|(Ojs.fun_to_js_args
                                   (fun (x5711 : _) ->
                                      Obj.magic
                                        (x5710
                                           ~this:(Obj.magic
                                                    (Ojs.array_get x5711 0))
                                           ~arg0:(Obj.magic
                                                    (Ojs.array_get x5711 1))
                                           ~arg1:(Obj.magic
                                                    (Ojs.array_get x5711 2))
                                           ~arg2:(Obj.magic
                                                    (Ojs.array_get x5711 3))
                                           ~arg3:(Obj.magic
                                                    (Ojs.array_get x5711 4))
                                           ~args:(Ojs.list_of_js_from
                                                    any_of_js x5711 5))));(
                                Obj.magic x5713);(Obj.magic x5714);(Obj.magic
                                                                    x5715);(
                                Obj.magic x5716);(Obj.magic x5717)|]) "apply"
                           [|Ojs.null;((let x5721 =
                                          Ojs.new_obj
                                            (Ojs.get_prop_ascii Ojs.global
                                               "Array") [||] in
                                        List.iter
                                          (fun (x5722 : any) ->
                                             ignore
                                               (Ojs.call x5721 "push"
                                                  [|(any_to_js x5722)|]))
                                          x5720;
                                        x5721))|])
    let (bind''''' :
      'tags this ->
        this:(this:'T -> args:'AX list -> 'R) ->
          thisArg:'T -> args:'AX list -> 'AX list -> 'R)
      =
      fun (x5730 : 'tags this) ->
        fun ~this:(x5723 : this:'T -> args:'AX list -> 'R) ->
          fun ~thisArg:(x5724 : 'T) ->
            fun ~args:(x5725 : 'AX list) ->
              fun (x5733 : 'AX list) ->
                Obj.magic
                  (Ojs.call
                     (let x5732 = this_to_js Obj.magic x5730 in
                      Ojs.call (Ojs.get_prop_ascii x5732 "bind") "apply"
                        [|x5732;((let x5726 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x5726 "push"
                                       [|(Ojs.fun_to_js_args
                                            (fun (x5728 : _) ->
                                               Obj.magic
                                                 (x5723
                                                    ~this:(Obj.magic
                                                             (Ojs.array_get
                                                                x5728 0))
                                                    ~args:(Ojs.list_of_js_from
                                                             Obj.magic x5728
                                                             1))))|]);
                                  ignore
                                    (Ojs.call x5726 "push"
                                       [|(Obj.magic x5724)|]);
                                  List.iter
                                    (fun (x5727 : 'AX) ->
                                       ignore
                                         (Ojs.call x5726 "push"
                                            [|(Obj.magic x5727)|])) x5725;
                                  x5726))|]) "apply"
                     [|Ojs.null;((let x5734 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  List.iter
                                    (fun (x5735 : 'AX) ->
                                       ignore
                                         (Ojs.call x5734 "push"
                                            [|(Obj.magic x5735)|])) x5733;
                                  x5734))|])
    let cast_from = Obj.magic
  end
module Boolean =
  struct
    type t = [ `Boolean ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5737 : Ojs.t) -> t_of_js x5737
    and t_0_to_js : t_0 -> Ojs.t = fun (x5736 : t) -> t_to_js x5736
    type tags = [ `Boolean ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Boolean ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5740 : Ojs.t) -> intf_of_js __tags_of_js x5740
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5738 : __tags intf) -> intf_to_js __tags_to_js x5738
    let (valueOf : 'tags this -> bool) =
      fun (x5742 : 'tags this) ->
        Ojs.bool_of_js (Ojs.call (this_to_js Obj.magic x5742) "valueOf" [||])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x5744 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Boolean")
               (let x5745 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x5744 with
                 | Some x5746 ->
                     ignore (Ojs.call x5745 "push" [|(any_to_js x5746)|])
                 | None -> ());
                x5745))
    let (invoke : ?value:'T -> unit -> bool) =
      fun ?value:(x5747 : 'T option) ->
        fun () ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Boolean") "apply"
               [|Ojs.null;((let x5748 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x5747 with
                             | Some x5749 ->
                                 ignore
                                   (Ojs.call x5748 "push"
                                      [|(Obj.magic x5749)|])
                             | None -> ());
                            x5748))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Boolean")
             "prototype")
    let cast_from = Obj.magic
  end
module BigIntToLocaleStringOptions =
  struct
    type t = [ `BigIntToLocaleStringOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5751 : Ojs.t) -> t_of_js x5751
    and t_0_to_js : t_0 -> Ojs.t = fun (x5750 : t) -> t_to_js x5750
    type tags = [ `BigIntToLocaleStringOptions ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `BigIntToLocaleStringOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5754 : Ojs.t) -> intf_of_js __tags_of_js x5754
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5752 : __tags intf) -> intf_to_js __tags_to_js x5752
    let (get_localeMatcher : 'tags this -> string) =
      fun (x5756 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5756) "localeMatcher")
    let (set_localeMatcher : 'tags this -> string -> unit) =
      fun (x5758 : 'tags this) ->
        fun (x5759 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5758) "localeMatcher"
            (Ojs.string_to_js x5759)
    let (get_style : 'tags this -> string) =
      fun (x5761 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5761) "style")
    let (set_style : 'tags this -> string -> unit) =
      fun (x5763 : 'tags this) ->
        fun (x5764 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5763) "style"
            (Ojs.string_to_js x5764)
    let (get_numberingSystem : 'tags this -> string) =
      fun (x5766 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5766) "numberingSystem")
    let (set_numberingSystem : 'tags this -> string -> unit) =
      fun (x5768 : 'tags this) ->
        fun (x5769 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5768) "numberingSystem"
            (Ojs.string_to_js x5769)
    let (get_unit : 'tags this -> string) =
      fun (x5771 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5771) "unit")
    let (set_unit : 'tags this -> string -> unit) =
      fun (x5773 : 'tags this) ->
        fun (x5774 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5773) "unit"
            (Ojs.string_to_js x5774)
    let (get_unitDisplay : 'tags this -> string) =
      fun (x5776 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5776) "unitDisplay")
    let (set_unitDisplay : 'tags this -> string -> unit) =
      fun (x5778 : 'tags this) ->
        fun (x5779 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5778) "unitDisplay"
            (Ojs.string_to_js x5779)
    let (get_currency : 'tags this -> string) =
      fun (x5781 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5781) "currency")
    let (set_currency : 'tags this -> string -> unit) =
      fun (x5783 : 'tags this) ->
        fun (x5784 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5783) "currency"
            (Ojs.string_to_js x5784)
    let (get_currencyDisplay : 'tags this -> string) =
      fun (x5786 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5786) "currencyDisplay")
    let (set_currencyDisplay : 'tags this -> string -> unit) =
      fun (x5788 : 'tags this) ->
        fun (x5789 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5788) "currencyDisplay"
            (Ojs.string_to_js x5789)
    let (get_useGrouping : 'tags this -> bool) =
      fun (x5791 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5791) "useGrouping")
    let (set_useGrouping : 'tags this -> bool -> unit) =
      fun (x5793 : 'tags this) ->
        fun (x5794 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5793) "useGrouping"
            (Ojs.bool_to_js x5794)
    let (get_minimumIntegerDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ])
      =
      fun (x5796 : 'tags this) ->
        let x5798 =
          Ojs.get_prop_ascii (this_to_js Obj.magic x5796)
            "minimumIntegerDigits" in
        match Ojs.int_of_js x5798 with
        | 1 -> `L_n_1
        | 10 -> `L_n_10
        | 11 -> `L_n_11
        | 12 -> `L_n_12
        | 13 -> `L_n_13
        | 14 -> `L_n_14
        | 15 -> `L_n_15
        | 16 -> `L_n_16
        | 17 -> `L_n_17
        | 18 -> `L_n_18
        | 19 -> `L_n_19
        | 2 -> `L_n_2
        | 20 -> `L_n_20
        | 21 -> `L_n_21
        | 3 -> `L_n_3
        | 4 -> `L_n_4
        | 5 -> `L_n_5
        | 6 -> `L_n_6
        | 7 -> `L_n_7
        | 8 -> `L_n_8
        | 9 -> `L_n_9
        | _ -> assert false
    let (set_minimumIntegerDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] -> unit)
      =
      fun (x5799 : 'tags this) ->
        fun
          (x5800 :
            [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
            | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | 
              `L_n_2 
            | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
            | `L_n_7  | `L_n_8  | `L_n_9 ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5799)
            "minimumIntegerDigits"
            (match x5800 with
             | `L_n_1 -> Ojs.int_to_js 1
             | `L_n_10 -> Ojs.int_to_js 10
             | `L_n_11 -> Ojs.int_to_js 11
             | `L_n_12 -> Ojs.int_to_js 12
             | `L_n_13 -> Ojs.int_to_js 13
             | `L_n_14 -> Ojs.int_to_js 14
             | `L_n_15 -> Ojs.int_to_js 15
             | `L_n_16 -> Ojs.int_to_js 16
             | `L_n_17 -> Ojs.int_to_js 17
             | `L_n_18 -> Ojs.int_to_js 18
             | `L_n_19 -> Ojs.int_to_js 19
             | `L_n_2 -> Ojs.int_to_js 2
             | `L_n_20 -> Ojs.int_to_js 20
             | `L_n_21 -> Ojs.int_to_js 21
             | `L_n_3 -> Ojs.int_to_js 3
             | `L_n_4 -> Ojs.int_to_js 4
             | `L_n_5 -> Ojs.int_to_js 5
             | `L_n_6 -> Ojs.int_to_js 6
             | `L_n_7 -> Ojs.int_to_js 7
             | `L_n_8 -> Ojs.int_to_js 8
             | `L_n_9 -> Ojs.int_to_js 9)
    let (get_minimumFractionDigits :
      'tags this ->
        [ `L_n_0  | `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
        | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19 
        | `L_n_2  | `L_n_20  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ])
      =
      fun (x5802 : 'tags this) ->
        let x5804 =
          Ojs.get_prop_ascii (this_to_js Obj.magic x5802)
            "minimumFractionDigits" in
        match Ojs.int_of_js x5804 with
        | 0 -> `L_n_0
        | 1 -> `L_n_1
        | 10 -> `L_n_10
        | 11 -> `L_n_11
        | 12 -> `L_n_12
        | 13 -> `L_n_13
        | 14 -> `L_n_14
        | 15 -> `L_n_15
        | 16 -> `L_n_16
        | 17 -> `L_n_17
        | 18 -> `L_n_18
        | 19 -> `L_n_19
        | 2 -> `L_n_2
        | 20 -> `L_n_20
        | 3 -> `L_n_3
        | 4 -> `L_n_4
        | 5 -> `L_n_5
        | 6 -> `L_n_6
        | 7 -> `L_n_7
        | 8 -> `L_n_8
        | 9 -> `L_n_9
        | _ -> assert false
    let (set_minimumFractionDigits :
      'tags this ->
        [ `L_n_0  | `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
        | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19 
        | `L_n_2  | `L_n_20  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] -> unit)
      =
      fun (x5805 : 'tags this) ->
        fun
          (x5806 :
            [ `L_n_0  | `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
            | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | 
              `L_n_19 
            | `L_n_2  | `L_n_20  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
            | `L_n_7  | `L_n_8  | `L_n_9 ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5805)
            "minimumFractionDigits"
            (match x5806 with
             | `L_n_0 -> Ojs.int_to_js 0
             | `L_n_1 -> Ojs.int_to_js 1
             | `L_n_10 -> Ojs.int_to_js 10
             | `L_n_11 -> Ojs.int_to_js 11
             | `L_n_12 -> Ojs.int_to_js 12
             | `L_n_13 -> Ojs.int_to_js 13
             | `L_n_14 -> Ojs.int_to_js 14
             | `L_n_15 -> Ojs.int_to_js 15
             | `L_n_16 -> Ojs.int_to_js 16
             | `L_n_17 -> Ojs.int_to_js 17
             | `L_n_18 -> Ojs.int_to_js 18
             | `L_n_19 -> Ojs.int_to_js 19
             | `L_n_2 -> Ojs.int_to_js 2
             | `L_n_20 -> Ojs.int_to_js 20
             | `L_n_3 -> Ojs.int_to_js 3
             | `L_n_4 -> Ojs.int_to_js 4
             | `L_n_5 -> Ojs.int_to_js 5
             | `L_n_6 -> Ojs.int_to_js 6
             | `L_n_7 -> Ojs.int_to_js 7
             | `L_n_8 -> Ojs.int_to_js 8
             | `L_n_9 -> Ojs.int_to_js 9)
    let (get_maximumFractionDigits :
      'tags this ->
        [ `L_n_0  | `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
        | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19 
        | `L_n_2  | `L_n_20  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ])
      =
      fun (x5808 : 'tags this) ->
        let x5810 =
          Ojs.get_prop_ascii (this_to_js Obj.magic x5808)
            "maximumFractionDigits" in
        match Ojs.int_of_js x5810 with
        | 0 -> `L_n_0
        | 1 -> `L_n_1
        | 10 -> `L_n_10
        | 11 -> `L_n_11
        | 12 -> `L_n_12
        | 13 -> `L_n_13
        | 14 -> `L_n_14
        | 15 -> `L_n_15
        | 16 -> `L_n_16
        | 17 -> `L_n_17
        | 18 -> `L_n_18
        | 19 -> `L_n_19
        | 2 -> `L_n_2
        | 20 -> `L_n_20
        | 3 -> `L_n_3
        | 4 -> `L_n_4
        | 5 -> `L_n_5
        | 6 -> `L_n_6
        | 7 -> `L_n_7
        | 8 -> `L_n_8
        | 9 -> `L_n_9
        | _ -> assert false
    let (set_maximumFractionDigits :
      'tags this ->
        [ `L_n_0  | `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
        | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19 
        | `L_n_2  | `L_n_20  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] -> unit)
      =
      fun (x5811 : 'tags this) ->
        fun
          (x5812 :
            [ `L_n_0  | `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
            | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | 
              `L_n_19 
            | `L_n_2  | `L_n_20  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
            | `L_n_7  | `L_n_8  | `L_n_9 ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5811)
            "maximumFractionDigits"
            (match x5812 with
             | `L_n_0 -> Ojs.int_to_js 0
             | `L_n_1 -> Ojs.int_to_js 1
             | `L_n_10 -> Ojs.int_to_js 10
             | `L_n_11 -> Ojs.int_to_js 11
             | `L_n_12 -> Ojs.int_to_js 12
             | `L_n_13 -> Ojs.int_to_js 13
             | `L_n_14 -> Ojs.int_to_js 14
             | `L_n_15 -> Ojs.int_to_js 15
             | `L_n_16 -> Ojs.int_to_js 16
             | `L_n_17 -> Ojs.int_to_js 17
             | `L_n_18 -> Ojs.int_to_js 18
             | `L_n_19 -> Ojs.int_to_js 19
             | `L_n_2 -> Ojs.int_to_js 2
             | `L_n_20 -> Ojs.int_to_js 20
             | `L_n_3 -> Ojs.int_to_js 3
             | `L_n_4 -> Ojs.int_to_js 4
             | `L_n_5 -> Ojs.int_to_js 5
             | `L_n_6 -> Ojs.int_to_js 6
             | `L_n_7 -> Ojs.int_to_js 7
             | `L_n_8 -> Ojs.int_to_js 8
             | `L_n_9 -> Ojs.int_to_js 9)
    let (get_minimumSignificantDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ])
      =
      fun (x5814 : 'tags this) ->
        let x5816 =
          Ojs.get_prop_ascii (this_to_js Obj.magic x5814)
            "minimumSignificantDigits" in
        match Ojs.int_of_js x5816 with
        | 1 -> `L_n_1
        | 10 -> `L_n_10
        | 11 -> `L_n_11
        | 12 -> `L_n_12
        | 13 -> `L_n_13
        | 14 -> `L_n_14
        | 15 -> `L_n_15
        | 16 -> `L_n_16
        | 17 -> `L_n_17
        | 18 -> `L_n_18
        | 19 -> `L_n_19
        | 2 -> `L_n_2
        | 20 -> `L_n_20
        | 21 -> `L_n_21
        | 3 -> `L_n_3
        | 4 -> `L_n_4
        | 5 -> `L_n_5
        | 6 -> `L_n_6
        | 7 -> `L_n_7
        | 8 -> `L_n_8
        | 9 -> `L_n_9
        | _ -> assert false
    let (set_minimumSignificantDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] -> unit)
      =
      fun (x5817 : 'tags this) ->
        fun
          (x5818 :
            [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
            | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | 
              `L_n_2 
            | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
            | `L_n_7  | `L_n_8  | `L_n_9 ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5817)
            "minimumSignificantDigits"
            (match x5818 with
             | `L_n_1 -> Ojs.int_to_js 1
             | `L_n_10 -> Ojs.int_to_js 10
             | `L_n_11 -> Ojs.int_to_js 11
             | `L_n_12 -> Ojs.int_to_js 12
             | `L_n_13 -> Ojs.int_to_js 13
             | `L_n_14 -> Ojs.int_to_js 14
             | `L_n_15 -> Ojs.int_to_js 15
             | `L_n_16 -> Ojs.int_to_js 16
             | `L_n_17 -> Ojs.int_to_js 17
             | `L_n_18 -> Ojs.int_to_js 18
             | `L_n_19 -> Ojs.int_to_js 19
             | `L_n_2 -> Ojs.int_to_js 2
             | `L_n_20 -> Ojs.int_to_js 20
             | `L_n_21 -> Ojs.int_to_js 21
             | `L_n_3 -> Ojs.int_to_js 3
             | `L_n_4 -> Ojs.int_to_js 4
             | `L_n_5 -> Ojs.int_to_js 5
             | `L_n_6 -> Ojs.int_to_js 6
             | `L_n_7 -> Ojs.int_to_js 7
             | `L_n_8 -> Ojs.int_to_js 8
             | `L_n_9 -> Ojs.int_to_js 9)
    let (get_maximumSignificantDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ])
      =
      fun (x5820 : 'tags this) ->
        let x5822 =
          Ojs.get_prop_ascii (this_to_js Obj.magic x5820)
            "maximumSignificantDigits" in
        match Ojs.int_of_js x5822 with
        | 1 -> `L_n_1
        | 10 -> `L_n_10
        | 11 -> `L_n_11
        | 12 -> `L_n_12
        | 13 -> `L_n_13
        | 14 -> `L_n_14
        | 15 -> `L_n_15
        | 16 -> `L_n_16
        | 17 -> `L_n_17
        | 18 -> `L_n_18
        | 19 -> `L_n_19
        | 2 -> `L_n_2
        | 20 -> `L_n_20
        | 21 -> `L_n_21
        | 3 -> `L_n_3
        | 4 -> `L_n_4
        | 5 -> `L_n_5
        | 6 -> `L_n_6
        | 7 -> `L_n_7
        | 8 -> `L_n_8
        | 9 -> `L_n_9
        | _ -> assert false
    let (set_maximumSignificantDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] -> unit)
      =
      fun (x5823 : 'tags this) ->
        fun
          (x5824 :
            [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
            | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | 
              `L_n_2 
            | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
            | `L_n_7  | `L_n_8  | `L_n_9 ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5823)
            "maximumSignificantDigits"
            (match x5824 with
             | `L_n_1 -> Ojs.int_to_js 1
             | `L_n_10 -> Ojs.int_to_js 10
             | `L_n_11 -> Ojs.int_to_js 11
             | `L_n_12 -> Ojs.int_to_js 12
             | `L_n_13 -> Ojs.int_to_js 13
             | `L_n_14 -> Ojs.int_to_js 14
             | `L_n_15 -> Ojs.int_to_js 15
             | `L_n_16 -> Ojs.int_to_js 16
             | `L_n_17 -> Ojs.int_to_js 17
             | `L_n_18 -> Ojs.int_to_js 18
             | `L_n_19 -> Ojs.int_to_js 19
             | `L_n_2 -> Ojs.int_to_js 2
             | `L_n_20 -> Ojs.int_to_js 20
             | `L_n_21 -> Ojs.int_to_js 21
             | `L_n_3 -> Ojs.int_to_js 3
             | `L_n_4 -> Ojs.int_to_js 4
             | `L_n_5 -> Ojs.int_to_js 5
             | `L_n_6 -> Ojs.int_to_js 6
             | `L_n_7 -> Ojs.int_to_js 7
             | `L_n_8 -> Ojs.int_to_js 8
             | `L_n_9 -> Ojs.int_to_js 9)
    let (get_notation : 'tags this -> string) =
      fun (x5826 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5826) "notation")
    let (set_notation : 'tags this -> string -> unit) =
      fun (x5828 : 'tags this) ->
        fun (x5829 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5828) "notation"
            (Ojs.string_to_js x5829)
    let (get_compactDisplay : 'tags this -> string) =
      fun (x5831 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5831) "compactDisplay")
    let (set_compactDisplay : 'tags this -> string -> unit) =
      fun (x5833 : 'tags this) ->
        fun (x5834 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5833) "compactDisplay"
            (Ojs.string_to_js x5834)
    let cast_from = Obj.magic
  end
module BigInt =
  struct
    type t = [ `BigInt ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5837 : Ojs.t) -> t_of_js x5837
    and t_0_to_js : t_0 -> Ojs.t = fun (x5836 : t) -> t_to_js x5836
    type tags = [ `BigInt ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `BigInt ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5840 : Ojs.t) -> intf_of_js __tags_of_js x5840
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5838 : __tags intf) -> intf_to_js __tags_to_js x5838
    let (toString : 'tags this -> ?radix:float -> unit -> string) =
      fun (x5845 : 'tags this) ->
        fun ?radix:(x5842 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x5847 = this_to_js Obj.magic x5845 in
               Ojs.call (Ojs.get_prop_ascii x5847 "toString") "apply"
                 [|x5847;((let x5843 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5842 with
                            | Some x5844 ->
                                ignore
                                  (Ojs.call x5843 "push"
                                     [|(Ojs.float_to_js x5844)|])
                            | None -> ());
                           x5843))|])
    let (toLocaleString :
      'tags this ->
        ?locales:string ->
          ?options:BigIntToLocaleStringOptions.t -> unit -> string)
      =
      fun (x5853 : 'tags this) ->
        fun ?locales:(x5848 : string option) ->
          fun ?options:(x5849 : BigIntToLocaleStringOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x5855 = this_to_js Obj.magic x5853 in
                 Ojs.call (Ojs.get_prop_ascii x5855 "toLocaleString") "apply"
                   [|x5855;((let x5850 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5848 with
                              | Some x5852 ->
                                  ignore
                                    (Ojs.call x5850 "push"
                                       [|(Ojs.string_to_js x5852)|])
                              | None -> ());
                             (match x5849 with
                              | Some x5851 ->
                                  ignore
                                    (Ojs.call x5850 "push"
                                       [|(BigIntToLocaleStringOptions.t_to_js
                                            x5851)|])
                              | None -> ());
                             x5850))|])
    let (valueOf : 'tags this -> bigint) =
      fun (x5856 : 'tags this) ->
        bigint_of_js (Ojs.call (this_to_js Obj.magic x5856) "valueOf" [||])
    let (invoke : bigint or_boolean or_string or_number -> bigint) =
      fun (x5858 : bigint or_boolean or_string or_number) ->
        bigint_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "BigInt")
             [|(or_number_to_js
                  (fun (x5859 : bigint or_boolean or_string) ->
                     or_string_to_js
                       (fun (x5860 : bigint or_boolean) ->
                          or_boolean_to_js bigint_to_js x5860) x5859) x5858)|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "BigInt")
             "prototype")
    let (asIntN : bits:float -> int:bigint -> bigint) =
      fun ~bits:(x5862 : float) ->
        fun ~int:(x5863 : bigint) ->
          bigint_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigInt") "asIntN"
               [|(Ojs.float_to_js x5862);(bigint_to_js x5863)|])
    let (asUintN : bits:float -> int:bigint -> bigint) =
      fun ~bits:(x5864 : float) ->
        fun ~int:(x5865 : bigint) ->
          bigint_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigInt") "asUintN"
               [|(Ojs.float_to_js x5864);(bigint_to_js x5865)|])
    let cast_from = Obj.magic
  end
module Uint8Array =
  struct
    type t =
      [ `Uint8Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5867 : Ojs.t) -> t_of_js x5867
    and t_0_to_js : t_0 -> Ojs.t = fun (x5866 : t) -> t_to_js x5866
    type tags =
      [ `Uint8Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Uint8Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5870 : Ojs.t) -> intf_of_js __tags_of_js x5870
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5868 : __tags intf) -> intf_to_js __tags_to_js x5868
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x5876 : 'tags this) ->
        fun ~searchElement:(x5872 : float) ->
          fun ?fromIndex:(x5873 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5878 = this_to_js Obj.magic x5876 in
                 Ojs.call (Ojs.get_prop_ascii x5878 "includes") "apply"
                   [|x5878;((let x5874 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5874 "push"
                                  [|(Ojs.float_to_js x5872)|]);
                             (match x5873 with
                              | Some x5875 ->
                                  ignore
                                    (Ojs.call x5874 "push"
                                       [|(Ojs.float_to_js x5875)|])
                              | None -> ());
                             x5874))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x5879 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x5881 : Ojs.t) ->
             let x5882 = x5881 in
             ((Ojs.float_of_js (Ojs.array_get x5882 0)),
               (Ojs.float_of_js (Ojs.array_get x5882 1))))
          (Ojs.call (this_to_js Obj.magic x5879) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x5883 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x5883) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x5886 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x5886) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x5889 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5889)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x5891 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5891) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x5893 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5893) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x5895 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5895) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x5902 : 'tags this) ->
        fun ~target:(x5897 : float) ->
          fun ~start:(x5898 : float) ->
            fun ?end_:(x5899 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x5904 = this_to_js Obj.magic x5902 in
                   Ojs.call (Ojs.get_prop_ascii x5904 "copyWithin") "apply"
                     [|x5904;((let x5900 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5900 "push"
                                    [|(Ojs.float_to_js x5897)|]);
                               ignore
                                 (Ojs.call x5900 "push"
                                    [|(Ojs.float_to_js x5898)|]);
                               (match x5899 with
                                | Some x5901 ->
                                    ignore
                                      (Ojs.call x5900 "push"
                                         [|(Ojs.float_to_js x5901)|])
                                | None -> ());
                               x5900))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x5913 : 'tags this) ->
        fun
          ~predicate:(x5906 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x5907 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5915 = this_to_js Obj.magic x5913 in
                 Ojs.call (Ojs.get_prop_ascii x5915 "every") "apply"
                   [|x5915;((let x5908 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5908 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5910 : Ojs.t) ->
                                          fun (x5911 : Ojs.t) ->
                                            fun (x5912 : Ojs.t) ->
                                              unknown_to_js
                                                (x5906
                                                   ~value:(Ojs.float_of_js
                                                             x5910)
                                                   ~index:(Ojs.float_of_js
                                                             x5911)
                                                   ~array:(t_of_js x5912))))|]);
                             (match x5907 with
                              | Some x5909 ->
                                  ignore
                                    (Ojs.call x5908 "push"
                                       [|(any_to_js x5909)|])
                              | None -> ());
                             x5908))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x5922 : 'tags this) ->
        fun ~value:(x5916 : float) ->
          fun ?start:(x5917 : float option) ->
            fun ?end_:(x5918 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x5924 = this_to_js Obj.magic x5922 in
                   Ojs.call (Ojs.get_prop_ascii x5924 "fill") "apply"
                     [|x5924;((let x5919 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5919 "push"
                                    [|(Ojs.float_to_js x5916)|]);
                               (match x5917 with
                                | Some x5921 ->
                                    ignore
                                      (Ojs.call x5919 "push"
                                         [|(Ojs.float_to_js x5921)|])
                                | None -> ());
                               (match x5918 with
                                | Some x5920 ->
                                    ignore
                                      (Ojs.call x5919 "push"
                                         [|(Ojs.float_to_js x5920)|])
                                | None -> ());
                               x5919))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x5933 : 'tags this) ->
        fun ~predicate:(x5926 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x5927 : any option) ->
            fun () ->
              t_of_js
                (let x5935 = this_to_js Obj.magic x5933 in
                 Ojs.call (Ojs.get_prop_ascii x5935 "filter") "apply"
                   [|x5935;((let x5928 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5928 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5930 : Ojs.t) ->
                                          fun (x5931 : Ojs.t) ->
                                            fun (x5932 : Ojs.t) ->
                                              any_to_js
                                                (x5926
                                                   ~value:(Ojs.float_of_js
                                                             x5930)
                                                   ~index:(Ojs.float_of_js
                                                             x5931)
                                                   ~array:(t_of_js x5932))))|]);
                             (match x5927 with
                              | Some x5929 ->
                                  ignore
                                    (Ojs.call x5928 "push"
                                       [|(any_to_js x5929)|])
                              | None -> ());
                             x5928))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x5943 : 'tags this) ->
        fun ~predicate:(x5936 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x5937 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x5945 = this_to_js Obj.magic x5943 in
                 Ojs.call (Ojs.get_prop_ascii x5945 "find") "apply"
                   [|x5945;((let x5938 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5938 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5940 : Ojs.t) ->
                                          fun (x5941 : Ojs.t) ->
                                            fun (x5942 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x5936
                                                   ~value:(Ojs.float_of_js
                                                             x5940)
                                                   ~index:(Ojs.float_of_js
                                                             x5941)
                                                   ~obj:(t_of_js x5942))))|]);
                             (match x5937 with
                              | Some x5939 ->
                                  ignore
                                    (Ojs.call x5938 "push"
                                       [|(any_to_js x5939)|])
                              | None -> ());
                             x5938))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x5954 : 'tags this) ->
        fun ~predicate:(x5947 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x5948 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x5956 = this_to_js Obj.magic x5954 in
                 Ojs.call (Ojs.get_prop_ascii x5956 "findIndex") "apply"
                   [|x5956;((let x5949 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5949 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5951 : Ojs.t) ->
                                          fun (x5952 : Ojs.t) ->
                                            fun (x5953 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x5947
                                                   ~value:(Ojs.float_of_js
                                                             x5951)
                                                   ~index:(Ojs.float_of_js
                                                             x5952)
                                                   ~obj:(t_of_js x5953))))|]);
                             (match x5948 with
                              | Some x5950 ->
                                  ignore
                                    (Ojs.call x5949 "push"
                                       [|(any_to_js x5950)|])
                              | None -> ());
                             x5949))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x5964 : 'tags this) ->
        fun
          ~callbackfn:(x5957 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x5958 : any option) ->
            fun () ->
              ignore
                (let x5966 = this_to_js Obj.magic x5964 in
                 Ojs.call (Ojs.get_prop_ascii x5966 "forEach") "apply"
                   [|x5966;((let x5959 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5959 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5961 : Ojs.t) ->
                                          fun (x5962 : Ojs.t) ->
                                            fun (x5963 : Ojs.t) ->
                                              x5957
                                                ~value:(Ojs.float_of_js x5961)
                                                ~index:(Ojs.float_of_js x5962)
                                                ~array:(t_of_js x5963)))|]);
                             (match x5958 with
                              | Some x5960 ->
                                  ignore
                                    (Ojs.call x5959 "push"
                                       [|(any_to_js x5960)|])
                              | None -> ());
                             x5959))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x5971 : 'tags this) ->
        fun ~searchElement:(x5967 : float) ->
          fun ?fromIndex:(x5968 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x5973 = this_to_js Obj.magic x5971 in
                 Ojs.call (Ojs.get_prop_ascii x5973 "indexOf") "apply"
                   [|x5973;((let x5969 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5969 "push"
                                  [|(Ojs.float_to_js x5967)|]);
                             (match x5968 with
                              | Some x5970 ->
                                  ignore
                                    (Ojs.call x5969 "push"
                                       [|(Ojs.float_to_js x5970)|])
                              | None -> ());
                             x5969))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x5977 : 'tags this) ->
        fun ?separator:(x5974 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x5979 = this_to_js Obj.magic x5977 in
               Ojs.call (Ojs.get_prop_ascii x5979 "join") "apply"
                 [|x5979;((let x5975 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5974 with
                            | Some x5976 ->
                                ignore
                                  (Ojs.call x5975 "push"
                                     [|(Ojs.string_to_js x5976)|])
                            | None -> ());
                           x5975))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x5984 : 'tags this) ->
        fun ~searchElement:(x5980 : float) ->
          fun ?fromIndex:(x5981 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x5986 = this_to_js Obj.magic x5984 in
                 Ojs.call (Ojs.get_prop_ascii x5986 "lastIndexOf") "apply"
                   [|x5986;((let x5982 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5982 "push"
                                  [|(Ojs.float_to_js x5980)|]);
                             (match x5981 with
                              | Some x5983 ->
                                  ignore
                                    (Ojs.call x5982 "push"
                                       [|(Ojs.float_to_js x5983)|])
                              | None -> ());
                             x5982))|])
    let (get_length : 'tags this -> float) =
      fun (x5987 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5987) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x5996 : 'tags this) ->
        fun
          ~callbackfn:(x5989 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x5990 : any option) ->
            fun () ->
              t_of_js
                (let x5998 = this_to_js Obj.magic x5996 in
                 Ojs.call (Ojs.get_prop_ascii x5998 "map") "apply"
                   [|x5998;((let x5991 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5991 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5993 : Ojs.t) ->
                                          fun (x5994 : Ojs.t) ->
                                            fun (x5995 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x5989
                                                   ~value:(Ojs.float_of_js
                                                             x5993)
                                                   ~index:(Ojs.float_of_js
                                                             x5994)
                                                   ~array:(t_of_js x5995))))|]);
                             (match x5990 with
                              | Some x5992 ->
                                  ignore
                                    (Ojs.call x5991 "push"
                                       [|(any_to_js x5992)|])
                              | None -> ());
                             x5991))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6004 : 'tags this) ->
        fun
          ~callbackfn:(x5999 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6004) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x6000 : Ojs.t) ->
                       fun (x6001 : Ojs.t) ->
                         fun (x6002 : Ojs.t) ->
                           fun (x6003 : Ojs.t) ->
                             Ojs.float_to_js
                               (x5999 ~previousValue:(Ojs.float_of_js x6000)
                                  ~currentValue:(Ojs.float_of_js x6001)
                                  ~currentIndex:(Ojs.float_of_js x6002)
                                  ~array:(t_of_js x6003))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6012 : 'tags this) ->
        fun
          ~callbackfn:(x6006 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6011 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6012) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6007 : Ojs.t) ->
                         fun (x6008 : Ojs.t) ->
                           fun (x6009 : Ojs.t) ->
                             fun (x6010 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6006
                                    ~previousValue:(Ojs.float_of_js x6007)
                                    ~currentValue:(Ojs.float_of_js x6008)
                                    ~currentIndex:(Ojs.float_of_js x6009)
                                    ~array:(t_of_js x6010))));(Ojs.float_to_js
                                                                 x6011)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6020 : 'tags this) ->
        fun
          ~callbackfn:(x6014 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6019 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6020) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6015 : Ojs.t) ->
                         fun (x6016 : Ojs.t) ->
                           fun (x6017 : Ojs.t) ->
                             fun (x6018 : Ojs.t) ->
                               Obj.magic
                                 (x6014 ~previousValue:(Obj.magic x6015)
                                    ~currentValue:(Ojs.float_of_js x6016)
                                    ~currentIndex:(Ojs.float_of_js x6017)
                                    ~array:(t_of_js x6018))));(Obj.magic
                                                                 x6019)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6027 : 'tags this) ->
        fun
          ~callbackfn:(x6022 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6027) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x6023 : Ojs.t) ->
                       fun (x6024 : Ojs.t) ->
                         fun (x6025 : Ojs.t) ->
                           fun (x6026 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6022 ~previousValue:(Ojs.float_of_js x6023)
                                  ~currentValue:(Ojs.float_of_js x6024)
                                  ~currentIndex:(Ojs.float_of_js x6025)
                                  ~array:(t_of_js x6026))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6035 : 'tags this) ->
        fun
          ~callbackfn:(x6029 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6034 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6035) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6030 : Ojs.t) ->
                         fun (x6031 : Ojs.t) ->
                           fun (x6032 : Ojs.t) ->
                             fun (x6033 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6029
                                    ~previousValue:(Ojs.float_of_js x6030)
                                    ~currentValue:(Ojs.float_of_js x6031)
                                    ~currentIndex:(Ojs.float_of_js x6032)
                                    ~array:(t_of_js x6033))));(Ojs.float_to_js
                                                                 x6034)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6043 : 'tags this) ->
        fun
          ~callbackfn:(x6037 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6042 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6043) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6038 : Ojs.t) ->
                         fun (x6039 : Ojs.t) ->
                           fun (x6040 : Ojs.t) ->
                             fun (x6041 : Ojs.t) ->
                               Obj.magic
                                 (x6037 ~previousValue:(Obj.magic x6038)
                                    ~currentValue:(Ojs.float_of_js x6039)
                                    ~currentIndex:(Ojs.float_of_js x6040)
                                    ~array:(t_of_js x6041))));(Obj.magic
                                                                 x6042)|])
    let (reverse : 'tags this -> t) =
      fun (x6045 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6045) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x6052 : 'tags this) ->
        fun ~array:(x6047 : float ArrayLike.t) ->
          fun ?offset:(x6048 : float option) ->
            fun () ->
              ignore
                (let x6054 = this_to_js Obj.magic x6052 in
                 Ojs.call (Ojs.get_prop_ascii x6054 "set") "apply"
                   [|x6054;((let x6049 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6049 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x6047)|]);
                             (match x6048 with
                              | Some x6050 ->
                                  ignore
                                    (Ojs.call x6049 "push"
                                       [|(Ojs.float_to_js x6050)|])
                              | None -> ());
                             x6049))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x6060 : 'tags this) ->
        fun ?start:(x6055 : float option) ->
          fun ?end_:(x6056 : float option) ->
            fun () ->
              t_of_js
                (let x6062 = this_to_js Obj.magic x6060 in
                 Ojs.call (Ojs.get_prop_ascii x6062 "slice") "apply"
                   [|x6062;((let x6057 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6055 with
                              | Some x6059 ->
                                  ignore
                                    (Ojs.call x6057 "push"
                                       [|(Ojs.float_to_js x6059)|])
                              | None -> ());
                             (match x6056 with
                              | Some x6058 ->
                                  ignore
                                    (Ojs.call x6057 "push"
                                       [|(Ojs.float_to_js x6058)|])
                              | None -> ());
                             x6057))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6070 : 'tags this) ->
        fun
          ~predicate:(x6063 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6064 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6072 = this_to_js Obj.magic x6070 in
                 Ojs.call (Ojs.get_prop_ascii x6072 "some") "apply"
                   [|x6072;((let x6065 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6065 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6067 : Ojs.t) ->
                                          fun (x6068 : Ojs.t) ->
                                            fun (x6069 : Ojs.t) ->
                                              unknown_to_js
                                                (x6063
                                                   ~value:(Ojs.float_of_js
                                                             x6067)
                                                   ~index:(Ojs.float_of_js
                                                             x6068)
                                                   ~array:(t_of_js x6069))))|]);
                             (match x6064 with
                              | Some x6066 ->
                                  ignore
                                    (Ojs.call x6065 "push"
                                       [|(any_to_js x6066)|])
                              | None -> ());
                             x6065))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x6078 : 'tags this) ->
        fun ?compareFn:(x6073 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x6080 = this_to_js Obj.magic x6078 in
               Ojs.call (Ojs.get_prop_ascii x6080 "sort") "apply"
                 [|x6080;((let x6074 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6073 with
                            | Some x6075 ->
                                ignore
                                  (Ojs.call x6074 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x6076 : Ojs.t) ->
                                             fun (x6077 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x6075
                                                    ~a:(Ojs.float_of_js x6076)
                                                    ~b:(Ojs.float_of_js x6077))))|])
                            | None -> ());
                           x6074))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x6087 : 'tags this) ->
        fun ?begin_:(x6082 : float option) ->
          fun ?end_:(x6083 : float option) ->
            fun () ->
              t_of_js
                (let x6089 = this_to_js Obj.magic x6087 in
                 Ojs.call (Ojs.get_prop_ascii x6089 "subarray") "apply"
                   [|x6089;((let x6084 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6082 with
                              | Some x6086 ->
                                  ignore
                                    (Ojs.call x6084 "push"
                                       [|(Ojs.float_to_js x6086)|])
                              | None -> ());
                             (match x6083 with
                              | Some x6085 ->
                                  ignore
                                    (Ojs.call x6084 "push"
                                       [|(Ojs.float_to_js x6085)|])
                              | None -> ());
                             x6084))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x6090 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6090) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x6092 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6092) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x6094 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6094) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x6096 : 'tags this) ->
        fun (x6098 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x6096)
               (Ojs.float_to_js x6098))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x6099 : 'tags this) ->
        fun (x6101 : float) ->
          fun (x6102 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x6099) (Ojs.float_to_js x6101)
              (Ojs.float_to_js x6102)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x6103 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|(Iterable.t_to_js Ojs.float_to_js x6103)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6105 : float Iterable.t) ->
        fun ?mapfn:(x6106 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x6107 : any option) ->
            fun () ->
              t_of_js
                (let x6114 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
                 Ojs.call (Ojs.get_prop_ascii x6114 "from") "apply"
                   [|x6114;((let x6108 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6108 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x6105)|]);
                             (match x6106 with
                              | Some x6110 ->
                                  ignore
                                    (Ojs.call x6108 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x6111 : Ojs.t) ->
                                               fun (x6112 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x6110
                                                      ~v:(Ojs.float_of_js
                                                            x6111)
                                                      ~k:(Ojs.float_of_js
                                                            x6112))))|])
                              | None -> ());
                             (match x6107 with
                              | Some x6109 ->
                                  ignore
                                    (Ojs.call x6108 "push"
                                       [|(any_to_js x6109)|])
                              | None -> ());
                             x6108))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x6115 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|(Ojs.float_to_js x6115)|])
    let (create''' : (ArrayBufferLike.t, float ArrayLike.t) union2 -> t) =
      fun (x6116 : (ArrayBufferLike.t, float ArrayLike.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|(union2_to_js ArrayBufferLike.t_to_js
                  (fun (x6118 : float ArrayLike.t) ->
                     ArrayLike.t_to_js Ojs.float_to_js x6118) x6116)|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x6120 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x6121 : float option) ->
          fun ?length:(x6122 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Uint8Array")
                   (let x6123 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x6123 "push"
                         [|(ArrayBufferLike.t_to_js x6120)|]);
                    (match x6121 with
                     | Some x6125 ->
                         ignore
                           (Ojs.call x6123 "push" [|(Ojs.float_to_js x6125)|])
                     | None -> ());
                    (match x6122 with
                     | Some x6124 ->
                         ignore
                           (Ojs.call x6123 "push" [|(Ojs.float_to_js x6124)|])
                     | None -> ());
                    x6123))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x6126 : float list) ->
        t_of_js
          (let x6129 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
           Ojs.call (Ojs.get_prop_ascii x6129 "of") "apply"
             [|x6129;((let x6127 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x6128 : float) ->
                            ignore
                              (Ojs.call x6127 "push"
                                 [|(Ojs.float_to_js x6128)|])) x6126;
                       x6127))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x6130 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint8Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x6130)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6132 : 'T ArrayLike.t) ->
        fun ~mapfn:(x6133 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x6134 : any option) ->
            fun () ->
              t_of_js
                (let x6140 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
                 Ojs.call (Ojs.get_prop_ascii x6140 "from") "apply"
                   [|x6140;((let x6135 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6135 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x6132)|]);
                             ignore
                               (Ojs.call x6135 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x6137 : Ojs.t) ->
                                          fun (x6138 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x6133 ~v:(Obj.magic x6137)
                                                 ~k:(Ojs.float_of_js x6138))))|]);
                             (match x6134 with
                              | Some x6136 ->
                                  ignore
                                    (Ojs.call x6135 "push"
                                       [|(any_to_js x6136)|])
                              | None -> ());
                             x6135))|])
    let cast_from = Obj.magic
  end
module Uint32Array =
  struct
    type t =
      [ `Uint32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6142 : Ojs.t) -> t_of_js x6142
    and t_0_to_js : t_0 -> Ojs.t = fun (x6141 : t) -> t_to_js x6141
    type tags =
      [ `Uint32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Uint32Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6145 : Ojs.t) -> intf_of_js __tags_of_js x6145
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6143 : __tags intf) -> intf_to_js __tags_to_js x6143
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x6151 : 'tags this) ->
        fun ~searchElement:(x6147 : float) ->
          fun ?fromIndex:(x6148 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6153 = this_to_js Obj.magic x6151 in
                 Ojs.call (Ojs.get_prop_ascii x6153 "includes") "apply"
                   [|x6153;((let x6149 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6149 "push"
                                  [|(Ojs.float_to_js x6147)|]);
                             (match x6148 with
                              | Some x6150 ->
                                  ignore
                                    (Ojs.call x6149 "push"
                                       [|(Ojs.float_to_js x6150)|])
                              | None -> ());
                             x6149))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x6154 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x6156 : Ojs.t) ->
             let x6157 = x6156 in
             ((Ojs.float_of_js (Ojs.array_get x6157 0)),
               (Ojs.float_of_js (Ojs.array_get x6157 1))))
          (Ojs.call (this_to_js Obj.magic x6154) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x6158 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6158) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x6161 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6161) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x6164 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6164)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x6166 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6166) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x6168 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6168) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x6170 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6170) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6177 : 'tags this) ->
        fun ~target:(x6172 : float) ->
          fun ~start:(x6173 : float) ->
            fun ?end_:(x6174 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6179 = this_to_js Obj.magic x6177 in
                   Ojs.call (Ojs.get_prop_ascii x6179 "copyWithin") "apply"
                     [|x6179;((let x6175 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6175 "push"
                                    [|(Ojs.float_to_js x6172)|]);
                               ignore
                                 (Ojs.call x6175 "push"
                                    [|(Ojs.float_to_js x6173)|]);
                               (match x6174 with
                                | Some x6176 ->
                                    ignore
                                      (Ojs.call x6175 "push"
                                         [|(Ojs.float_to_js x6176)|])
                                | None -> ());
                               x6175))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6188 : 'tags this) ->
        fun
          ~predicate:(x6181 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6182 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6190 = this_to_js Obj.magic x6188 in
                 Ojs.call (Ojs.get_prop_ascii x6190 "every") "apply"
                   [|x6190;((let x6183 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6183 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6185 : Ojs.t) ->
                                          fun (x6186 : Ojs.t) ->
                                            fun (x6187 : Ojs.t) ->
                                              unknown_to_js
                                                (x6181
                                                   ~value:(Ojs.float_of_js
                                                             x6185)
                                                   ~index:(Ojs.float_of_js
                                                             x6186)
                                                   ~array:(t_of_js x6187))))|]);
                             (match x6182 with
                              | Some x6184 ->
                                  ignore
                                    (Ojs.call x6183 "push"
                                       [|(any_to_js x6184)|])
                              | None -> ());
                             x6183))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6197 : 'tags this) ->
        fun ~value:(x6191 : float) ->
          fun ?start:(x6192 : float option) ->
            fun ?end_:(x6193 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6199 = this_to_js Obj.magic x6197 in
                   Ojs.call (Ojs.get_prop_ascii x6199 "fill") "apply"
                     [|x6199;((let x6194 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6194 "push"
                                    [|(Ojs.float_to_js x6191)|]);
                               (match x6192 with
                                | Some x6196 ->
                                    ignore
                                      (Ojs.call x6194 "push"
                                         [|(Ojs.float_to_js x6196)|])
                                | None -> ());
                               (match x6193 with
                                | Some x6195 ->
                                    ignore
                                      (Ojs.call x6194 "push"
                                         [|(Ojs.float_to_js x6195)|])
                                | None -> ());
                               x6194))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6208 : 'tags this) ->
        fun ~predicate:(x6201 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x6202 : any option) ->
            fun () ->
              t_of_js
                (let x6210 = this_to_js Obj.magic x6208 in
                 Ojs.call (Ojs.get_prop_ascii x6210 "filter") "apply"
                   [|x6210;((let x6203 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6203 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6205 : Ojs.t) ->
                                          fun (x6206 : Ojs.t) ->
                                            fun (x6207 : Ojs.t) ->
                                              any_to_js
                                                (x6201
                                                   ~value:(Ojs.float_of_js
                                                             x6205)
                                                   ~index:(Ojs.float_of_js
                                                             x6206)
                                                   ~array:(t_of_js x6207))))|]);
                             (match x6202 with
                              | Some x6204 ->
                                  ignore
                                    (Ojs.call x6203 "push"
                                       [|(any_to_js x6204)|])
                              | None -> ());
                             x6203))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x6218 : 'tags this) ->
        fun ~predicate:(x6211 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6212 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x6220 = this_to_js Obj.magic x6218 in
                 Ojs.call (Ojs.get_prop_ascii x6220 "find") "apply"
                   [|x6220;((let x6213 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6213 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6215 : Ojs.t) ->
                                          fun (x6216 : Ojs.t) ->
                                            fun (x6217 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6211
                                                   ~value:(Ojs.float_of_js
                                                             x6215)
                                                   ~index:(Ojs.float_of_js
                                                             x6216)
                                                   ~obj:(t_of_js x6217))))|]);
                             (match x6212 with
                              | Some x6214 ->
                                  ignore
                                    (Ojs.call x6213 "push"
                                       [|(any_to_js x6214)|])
                              | None -> ());
                             x6213))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x6229 : 'tags this) ->
        fun ~predicate:(x6222 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6223 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x6231 = this_to_js Obj.magic x6229 in
                 Ojs.call (Ojs.get_prop_ascii x6231 "findIndex") "apply"
                   [|x6231;((let x6224 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6224 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6226 : Ojs.t) ->
                                          fun (x6227 : Ojs.t) ->
                                            fun (x6228 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6222
                                                   ~value:(Ojs.float_of_js
                                                             x6226)
                                                   ~index:(Ojs.float_of_js
                                                             x6227)
                                                   ~obj:(t_of_js x6228))))|]);
                             (match x6223 with
                              | Some x6225 ->
                                  ignore
                                    (Ojs.call x6224 "push"
                                       [|(any_to_js x6225)|])
                              | None -> ());
                             x6224))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x6239 : 'tags this) ->
        fun
          ~callbackfn:(x6232 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x6233 : any option) ->
            fun () ->
              ignore
                (let x6241 = this_to_js Obj.magic x6239 in
                 Ojs.call (Ojs.get_prop_ascii x6241 "forEach") "apply"
                   [|x6241;((let x6234 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6234 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6236 : Ojs.t) ->
                                          fun (x6237 : Ojs.t) ->
                                            fun (x6238 : Ojs.t) ->
                                              x6232
                                                ~value:(Ojs.float_of_js x6236)
                                                ~index:(Ojs.float_of_js x6237)
                                                ~array:(t_of_js x6238)))|]);
                             (match x6233 with
                              | Some x6235 ->
                                  ignore
                                    (Ojs.call x6234 "push"
                                       [|(any_to_js x6235)|])
                              | None -> ());
                             x6234))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6246 : 'tags this) ->
        fun ~searchElement:(x6242 : float) ->
          fun ?fromIndex:(x6243 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6248 = this_to_js Obj.magic x6246 in
                 Ojs.call (Ojs.get_prop_ascii x6248 "indexOf") "apply"
                   [|x6248;((let x6244 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6244 "push"
                                  [|(Ojs.float_to_js x6242)|]);
                             (match x6243 with
                              | Some x6245 ->
                                  ignore
                                    (Ojs.call x6244 "push"
                                       [|(Ojs.float_to_js x6245)|])
                              | None -> ());
                             x6244))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x6252 : 'tags this) ->
        fun ?separator:(x6249 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x6254 = this_to_js Obj.magic x6252 in
               Ojs.call (Ojs.get_prop_ascii x6254 "join") "apply"
                 [|x6254;((let x6250 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6249 with
                            | Some x6251 ->
                                ignore
                                  (Ojs.call x6250 "push"
                                     [|(Ojs.string_to_js x6251)|])
                            | None -> ());
                           x6250))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6259 : 'tags this) ->
        fun ~searchElement:(x6255 : float) ->
          fun ?fromIndex:(x6256 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6261 = this_to_js Obj.magic x6259 in
                 Ojs.call (Ojs.get_prop_ascii x6261 "lastIndexOf") "apply"
                   [|x6261;((let x6257 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6257 "push"
                                  [|(Ojs.float_to_js x6255)|]);
                             (match x6256 with
                              | Some x6258 ->
                                  ignore
                                    (Ojs.call x6257 "push"
                                       [|(Ojs.float_to_js x6258)|])
                              | None -> ());
                             x6257))|])
    let (get_length : 'tags this -> float) =
      fun (x6262 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6262) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6271 : 'tags this) ->
        fun
          ~callbackfn:(x6264 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x6265 : any option) ->
            fun () ->
              t_of_js
                (let x6273 = this_to_js Obj.magic x6271 in
                 Ojs.call (Ojs.get_prop_ascii x6273 "map") "apply"
                   [|x6273;((let x6266 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6266 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6268 : Ojs.t) ->
                                          fun (x6269 : Ojs.t) ->
                                            fun (x6270 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x6264
                                                   ~value:(Ojs.float_of_js
                                                             x6268)
                                                   ~index:(Ojs.float_of_js
                                                             x6269)
                                                   ~array:(t_of_js x6270))))|]);
                             (match x6265 with
                              | Some x6267 ->
                                  ignore
                                    (Ojs.call x6266 "push"
                                       [|(any_to_js x6267)|])
                              | None -> ());
                             x6266))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6279 : 'tags this) ->
        fun
          ~callbackfn:(x6274 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6279) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x6275 : Ojs.t) ->
                       fun (x6276 : Ojs.t) ->
                         fun (x6277 : Ojs.t) ->
                           fun (x6278 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6274 ~previousValue:(Ojs.float_of_js x6275)
                                  ~currentValue:(Ojs.float_of_js x6276)
                                  ~currentIndex:(Ojs.float_of_js x6277)
                                  ~array:(t_of_js x6278))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6287 : 'tags this) ->
        fun
          ~callbackfn:(x6281 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6286 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6287) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6282 : Ojs.t) ->
                         fun (x6283 : Ojs.t) ->
                           fun (x6284 : Ojs.t) ->
                             fun (x6285 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6281
                                    ~previousValue:(Ojs.float_of_js x6282)
                                    ~currentValue:(Ojs.float_of_js x6283)
                                    ~currentIndex:(Ojs.float_of_js x6284)
                                    ~array:(t_of_js x6285))));(Ojs.float_to_js
                                                                 x6286)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6295 : 'tags this) ->
        fun
          ~callbackfn:(x6289 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6294 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6295) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6290 : Ojs.t) ->
                         fun (x6291 : Ojs.t) ->
                           fun (x6292 : Ojs.t) ->
                             fun (x6293 : Ojs.t) ->
                               Obj.magic
                                 (x6289 ~previousValue:(Obj.magic x6290)
                                    ~currentValue:(Ojs.float_of_js x6291)
                                    ~currentIndex:(Ojs.float_of_js x6292)
                                    ~array:(t_of_js x6293))));(Obj.magic
                                                                 x6294)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6302 : 'tags this) ->
        fun
          ~callbackfn:(x6297 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6302) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x6298 : Ojs.t) ->
                       fun (x6299 : Ojs.t) ->
                         fun (x6300 : Ojs.t) ->
                           fun (x6301 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6297 ~previousValue:(Ojs.float_of_js x6298)
                                  ~currentValue:(Ojs.float_of_js x6299)
                                  ~currentIndex:(Ojs.float_of_js x6300)
                                  ~array:(t_of_js x6301))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6310 : 'tags this) ->
        fun
          ~callbackfn:(x6304 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6309 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6310) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6305 : Ojs.t) ->
                         fun (x6306 : Ojs.t) ->
                           fun (x6307 : Ojs.t) ->
                             fun (x6308 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6304
                                    ~previousValue:(Ojs.float_of_js x6305)
                                    ~currentValue:(Ojs.float_of_js x6306)
                                    ~currentIndex:(Ojs.float_of_js x6307)
                                    ~array:(t_of_js x6308))));(Ojs.float_to_js
                                                                 x6309)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6318 : 'tags this) ->
        fun
          ~callbackfn:(x6312 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6317 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6318) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6313 : Ojs.t) ->
                         fun (x6314 : Ojs.t) ->
                           fun (x6315 : Ojs.t) ->
                             fun (x6316 : Ojs.t) ->
                               Obj.magic
                                 (x6312 ~previousValue:(Obj.magic x6313)
                                    ~currentValue:(Ojs.float_of_js x6314)
                                    ~currentIndex:(Ojs.float_of_js x6315)
                                    ~array:(t_of_js x6316))));(Obj.magic
                                                                 x6317)|])
    let (reverse : 'tags this -> t) =
      fun (x6320 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6320) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x6327 : 'tags this) ->
        fun ~array:(x6322 : float ArrayLike.t) ->
          fun ?offset:(x6323 : float option) ->
            fun () ->
              ignore
                (let x6329 = this_to_js Obj.magic x6327 in
                 Ojs.call (Ojs.get_prop_ascii x6329 "set") "apply"
                   [|x6329;((let x6324 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6324 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x6322)|]);
                             (match x6323 with
                              | Some x6325 ->
                                  ignore
                                    (Ojs.call x6324 "push"
                                       [|(Ojs.float_to_js x6325)|])
                              | None -> ());
                             x6324))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x6335 : 'tags this) ->
        fun ?start:(x6330 : float option) ->
          fun ?end_:(x6331 : float option) ->
            fun () ->
              t_of_js
                (let x6337 = this_to_js Obj.magic x6335 in
                 Ojs.call (Ojs.get_prop_ascii x6337 "slice") "apply"
                   [|x6337;((let x6332 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6330 with
                              | Some x6334 ->
                                  ignore
                                    (Ojs.call x6332 "push"
                                       [|(Ojs.float_to_js x6334)|])
                              | None -> ());
                             (match x6331 with
                              | Some x6333 ->
                                  ignore
                                    (Ojs.call x6332 "push"
                                       [|(Ojs.float_to_js x6333)|])
                              | None -> ());
                             x6332))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6345 : 'tags this) ->
        fun
          ~predicate:(x6338 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6339 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6347 = this_to_js Obj.magic x6345 in
                 Ojs.call (Ojs.get_prop_ascii x6347 "some") "apply"
                   [|x6347;((let x6340 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6340 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6342 : Ojs.t) ->
                                          fun (x6343 : Ojs.t) ->
                                            fun (x6344 : Ojs.t) ->
                                              unknown_to_js
                                                (x6338
                                                   ~value:(Ojs.float_of_js
                                                             x6342)
                                                   ~index:(Ojs.float_of_js
                                                             x6343)
                                                   ~array:(t_of_js x6344))))|]);
                             (match x6339 with
                              | Some x6341 ->
                                  ignore
                                    (Ojs.call x6340 "push"
                                       [|(any_to_js x6341)|])
                              | None -> ());
                             x6340))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x6353 : 'tags this) ->
        fun ?compareFn:(x6348 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x6355 = this_to_js Obj.magic x6353 in
               Ojs.call (Ojs.get_prop_ascii x6355 "sort") "apply"
                 [|x6355;((let x6349 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6348 with
                            | Some x6350 ->
                                ignore
                                  (Ojs.call x6349 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x6351 : Ojs.t) ->
                                             fun (x6352 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x6350
                                                    ~a:(Ojs.float_of_js x6351)
                                                    ~b:(Ojs.float_of_js x6352))))|])
                            | None -> ());
                           x6349))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x6362 : 'tags this) ->
        fun ?begin_:(x6357 : float option) ->
          fun ?end_:(x6358 : float option) ->
            fun () ->
              t_of_js
                (let x6364 = this_to_js Obj.magic x6362 in
                 Ojs.call (Ojs.get_prop_ascii x6364 "subarray") "apply"
                   [|x6364;((let x6359 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6357 with
                              | Some x6361 ->
                                  ignore
                                    (Ojs.call x6359 "push"
                                       [|(Ojs.float_to_js x6361)|])
                              | None -> ());
                             (match x6358 with
                              | Some x6360 ->
                                  ignore
                                    (Ojs.call x6359 "push"
                                       [|(Ojs.float_to_js x6360)|])
                              | None -> ());
                             x6359))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x6365 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6365) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x6367 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6367) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x6369 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6369) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x6371 : 'tags this) ->
        fun (x6373 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x6371)
               (Ojs.float_to_js x6373))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x6374 : 'tags this) ->
        fun (x6376 : float) ->
          fun (x6377 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x6374) (Ojs.float_to_js x6376)
              (Ojs.float_to_js x6377)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x6378 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|(Iterable.t_to_js Ojs.float_to_js x6378)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6380 : float Iterable.t) ->
        fun ?mapfn:(x6381 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x6382 : any option) ->
            fun () ->
              t_of_js
                (let x6389 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
                 Ojs.call (Ojs.get_prop_ascii x6389 "from") "apply"
                   [|x6389;((let x6383 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6383 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x6380)|]);
                             (match x6381 with
                              | Some x6385 ->
                                  ignore
                                    (Ojs.call x6383 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x6386 : Ojs.t) ->
                                               fun (x6387 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x6385
                                                      ~v:(Ojs.float_of_js
                                                            x6386)
                                                      ~k:(Ojs.float_of_js
                                                            x6387))))|])
                              | None -> ());
                             (match x6382 with
                              | Some x6384 ->
                                  ignore
                                    (Ojs.call x6383 "push"
                                       [|(any_to_js x6384)|])
                              | None -> ());
                             x6383))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x6390 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|(Ojs.float_to_js x6390)|])
    let (create''' : (ArrayBufferLike.t, float ArrayLike.t) union2 -> t) =
      fun (x6391 : (ArrayBufferLike.t, float ArrayLike.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|(union2_to_js ArrayBufferLike.t_to_js
                  (fun (x6393 : float ArrayLike.t) ->
                     ArrayLike.t_to_js Ojs.float_to_js x6393) x6391)|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x6395 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x6396 : float option) ->
          fun ?length:(x6397 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint32Array")
                   (let x6398 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x6398 "push"
                         [|(ArrayBufferLike.t_to_js x6395)|]);
                    (match x6396 with
                     | Some x6400 ->
                         ignore
                           (Ojs.call x6398 "push" [|(Ojs.float_to_js x6400)|])
                     | None -> ());
                    (match x6397 with
                     | Some x6399 ->
                         ignore
                           (Ojs.call x6398 "push" [|(Ojs.float_to_js x6399)|])
                     | None -> ());
                    x6398))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x6401 : float list) ->
        t_of_js
          (let x6404 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
           Ojs.call (Ojs.get_prop_ascii x6404 "of") "apply"
             [|x6404;((let x6402 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x6403 : float) ->
                            ignore
                              (Ojs.call x6402 "push"
                                 [|(Ojs.float_to_js x6403)|])) x6401;
                       x6402))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x6405 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint32Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x6405)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6407 : 'T ArrayLike.t) ->
        fun ~mapfn:(x6408 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x6409 : any option) ->
            fun () ->
              t_of_js
                (let x6415 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
                 Ojs.call (Ojs.get_prop_ascii x6415 "from") "apply"
                   [|x6415;((let x6410 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6410 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x6407)|]);
                             ignore
                               (Ojs.call x6410 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x6412 : Ojs.t) ->
                                          fun (x6413 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x6408 ~v:(Obj.magic x6412)
                                                 ~k:(Ojs.float_of_js x6413))))|]);
                             (match x6409 with
                              | Some x6411 ->
                                  ignore
                                    (Ojs.call x6410 "push"
                                       [|(any_to_js x6411)|])
                              | None -> ());
                             x6410))|])
    let cast_from = Obj.magic
  end
module Uint16Array =
  struct
    type t =
      [ `Uint16Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6417 : Ojs.t) -> t_of_js x6417
    and t_0_to_js : t_0 -> Ojs.t = fun (x6416 : t) -> t_to_js x6416
    type tags =
      [ `Uint16Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Uint16Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6420 : Ojs.t) -> intf_of_js __tags_of_js x6420
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6418 : __tags intf) -> intf_to_js __tags_to_js x6418
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x6426 : 'tags this) ->
        fun ~searchElement:(x6422 : float) ->
          fun ?fromIndex:(x6423 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6428 = this_to_js Obj.magic x6426 in
                 Ojs.call (Ojs.get_prop_ascii x6428 "includes") "apply"
                   [|x6428;((let x6424 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6424 "push"
                                  [|(Ojs.float_to_js x6422)|]);
                             (match x6423 with
                              | Some x6425 ->
                                  ignore
                                    (Ojs.call x6424 "push"
                                       [|(Ojs.float_to_js x6425)|])
                              | None -> ());
                             x6424))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x6429 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x6431 : Ojs.t) ->
             let x6432 = x6431 in
             ((Ojs.float_of_js (Ojs.array_get x6432 0)),
               (Ojs.float_of_js (Ojs.array_get x6432 1))))
          (Ojs.call (this_to_js Obj.magic x6429) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x6433 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6433) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x6436 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6436) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x6439 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6439)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x6441 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6441) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x6443 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6443) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x6445 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6445) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6452 : 'tags this) ->
        fun ~target:(x6447 : float) ->
          fun ~start:(x6448 : float) ->
            fun ?end_:(x6449 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6454 = this_to_js Obj.magic x6452 in
                   Ojs.call (Ojs.get_prop_ascii x6454 "copyWithin") "apply"
                     [|x6454;((let x6450 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6450 "push"
                                    [|(Ojs.float_to_js x6447)|]);
                               ignore
                                 (Ojs.call x6450 "push"
                                    [|(Ojs.float_to_js x6448)|]);
                               (match x6449 with
                                | Some x6451 ->
                                    ignore
                                      (Ojs.call x6450 "push"
                                         [|(Ojs.float_to_js x6451)|])
                                | None -> ());
                               x6450))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6463 : 'tags this) ->
        fun
          ~predicate:(x6456 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6457 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6465 = this_to_js Obj.magic x6463 in
                 Ojs.call (Ojs.get_prop_ascii x6465 "every") "apply"
                   [|x6465;((let x6458 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6458 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6460 : Ojs.t) ->
                                          fun (x6461 : Ojs.t) ->
                                            fun (x6462 : Ojs.t) ->
                                              unknown_to_js
                                                (x6456
                                                   ~value:(Ojs.float_of_js
                                                             x6460)
                                                   ~index:(Ojs.float_of_js
                                                             x6461)
                                                   ~array:(t_of_js x6462))))|]);
                             (match x6457 with
                              | Some x6459 ->
                                  ignore
                                    (Ojs.call x6458 "push"
                                       [|(any_to_js x6459)|])
                              | None -> ());
                             x6458))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6472 : 'tags this) ->
        fun ~value:(x6466 : float) ->
          fun ?start:(x6467 : float option) ->
            fun ?end_:(x6468 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6474 = this_to_js Obj.magic x6472 in
                   Ojs.call (Ojs.get_prop_ascii x6474 "fill") "apply"
                     [|x6474;((let x6469 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6469 "push"
                                    [|(Ojs.float_to_js x6466)|]);
                               (match x6467 with
                                | Some x6471 ->
                                    ignore
                                      (Ojs.call x6469 "push"
                                         [|(Ojs.float_to_js x6471)|])
                                | None -> ());
                               (match x6468 with
                                | Some x6470 ->
                                    ignore
                                      (Ojs.call x6469 "push"
                                         [|(Ojs.float_to_js x6470)|])
                                | None -> ());
                               x6469))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6483 : 'tags this) ->
        fun ~predicate:(x6476 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x6477 : any option) ->
            fun () ->
              t_of_js
                (let x6485 = this_to_js Obj.magic x6483 in
                 Ojs.call (Ojs.get_prop_ascii x6485 "filter") "apply"
                   [|x6485;((let x6478 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6478 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6480 : Ojs.t) ->
                                          fun (x6481 : Ojs.t) ->
                                            fun (x6482 : Ojs.t) ->
                                              any_to_js
                                                (x6476
                                                   ~value:(Ojs.float_of_js
                                                             x6480)
                                                   ~index:(Ojs.float_of_js
                                                             x6481)
                                                   ~array:(t_of_js x6482))))|]);
                             (match x6477 with
                              | Some x6479 ->
                                  ignore
                                    (Ojs.call x6478 "push"
                                       [|(any_to_js x6479)|])
                              | None -> ());
                             x6478))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x6493 : 'tags this) ->
        fun ~predicate:(x6486 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6487 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x6495 = this_to_js Obj.magic x6493 in
                 Ojs.call (Ojs.get_prop_ascii x6495 "find") "apply"
                   [|x6495;((let x6488 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6488 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6490 : Ojs.t) ->
                                          fun (x6491 : Ojs.t) ->
                                            fun (x6492 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6486
                                                   ~value:(Ojs.float_of_js
                                                             x6490)
                                                   ~index:(Ojs.float_of_js
                                                             x6491)
                                                   ~obj:(t_of_js x6492))))|]);
                             (match x6487 with
                              | Some x6489 ->
                                  ignore
                                    (Ojs.call x6488 "push"
                                       [|(any_to_js x6489)|])
                              | None -> ());
                             x6488))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x6504 : 'tags this) ->
        fun ~predicate:(x6497 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6498 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x6506 = this_to_js Obj.magic x6504 in
                 Ojs.call (Ojs.get_prop_ascii x6506 "findIndex") "apply"
                   [|x6506;((let x6499 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6499 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6501 : Ojs.t) ->
                                          fun (x6502 : Ojs.t) ->
                                            fun (x6503 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6497
                                                   ~value:(Ojs.float_of_js
                                                             x6501)
                                                   ~index:(Ojs.float_of_js
                                                             x6502)
                                                   ~obj:(t_of_js x6503))))|]);
                             (match x6498 with
                              | Some x6500 ->
                                  ignore
                                    (Ojs.call x6499 "push"
                                       [|(any_to_js x6500)|])
                              | None -> ());
                             x6499))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x6514 : 'tags this) ->
        fun
          ~callbackfn:(x6507 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x6508 : any option) ->
            fun () ->
              ignore
                (let x6516 = this_to_js Obj.magic x6514 in
                 Ojs.call (Ojs.get_prop_ascii x6516 "forEach") "apply"
                   [|x6516;((let x6509 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6509 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6511 : Ojs.t) ->
                                          fun (x6512 : Ojs.t) ->
                                            fun (x6513 : Ojs.t) ->
                                              x6507
                                                ~value:(Ojs.float_of_js x6511)
                                                ~index:(Ojs.float_of_js x6512)
                                                ~array:(t_of_js x6513)))|]);
                             (match x6508 with
                              | Some x6510 ->
                                  ignore
                                    (Ojs.call x6509 "push"
                                       [|(any_to_js x6510)|])
                              | None -> ());
                             x6509))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6521 : 'tags this) ->
        fun ~searchElement:(x6517 : float) ->
          fun ?fromIndex:(x6518 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6523 = this_to_js Obj.magic x6521 in
                 Ojs.call (Ojs.get_prop_ascii x6523 "indexOf") "apply"
                   [|x6523;((let x6519 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6519 "push"
                                  [|(Ojs.float_to_js x6517)|]);
                             (match x6518 with
                              | Some x6520 ->
                                  ignore
                                    (Ojs.call x6519 "push"
                                       [|(Ojs.float_to_js x6520)|])
                              | None -> ());
                             x6519))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x6527 : 'tags this) ->
        fun ?separator:(x6524 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x6529 = this_to_js Obj.magic x6527 in
               Ojs.call (Ojs.get_prop_ascii x6529 "join") "apply"
                 [|x6529;((let x6525 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6524 with
                            | Some x6526 ->
                                ignore
                                  (Ojs.call x6525 "push"
                                     [|(Ojs.string_to_js x6526)|])
                            | None -> ());
                           x6525))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6534 : 'tags this) ->
        fun ~searchElement:(x6530 : float) ->
          fun ?fromIndex:(x6531 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6536 = this_to_js Obj.magic x6534 in
                 Ojs.call (Ojs.get_prop_ascii x6536 "lastIndexOf") "apply"
                   [|x6536;((let x6532 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6532 "push"
                                  [|(Ojs.float_to_js x6530)|]);
                             (match x6531 with
                              | Some x6533 ->
                                  ignore
                                    (Ojs.call x6532 "push"
                                       [|(Ojs.float_to_js x6533)|])
                              | None -> ());
                             x6532))|])
    let (get_length : 'tags this -> float) =
      fun (x6537 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6537) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6546 : 'tags this) ->
        fun
          ~callbackfn:(x6539 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x6540 : any option) ->
            fun () ->
              t_of_js
                (let x6548 = this_to_js Obj.magic x6546 in
                 Ojs.call (Ojs.get_prop_ascii x6548 "map") "apply"
                   [|x6548;((let x6541 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6541 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6543 : Ojs.t) ->
                                          fun (x6544 : Ojs.t) ->
                                            fun (x6545 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x6539
                                                   ~value:(Ojs.float_of_js
                                                             x6543)
                                                   ~index:(Ojs.float_of_js
                                                             x6544)
                                                   ~array:(t_of_js x6545))))|]);
                             (match x6540 with
                              | Some x6542 ->
                                  ignore
                                    (Ojs.call x6541 "push"
                                       [|(any_to_js x6542)|])
                              | None -> ());
                             x6541))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6554 : 'tags this) ->
        fun
          ~callbackfn:(x6549 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6554) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x6550 : Ojs.t) ->
                       fun (x6551 : Ojs.t) ->
                         fun (x6552 : Ojs.t) ->
                           fun (x6553 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6549 ~previousValue:(Ojs.float_of_js x6550)
                                  ~currentValue:(Ojs.float_of_js x6551)
                                  ~currentIndex:(Ojs.float_of_js x6552)
                                  ~array:(t_of_js x6553))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6562 : 'tags this) ->
        fun
          ~callbackfn:(x6556 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6561 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6562) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6557 : Ojs.t) ->
                         fun (x6558 : Ojs.t) ->
                           fun (x6559 : Ojs.t) ->
                             fun (x6560 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6556
                                    ~previousValue:(Ojs.float_of_js x6557)
                                    ~currentValue:(Ojs.float_of_js x6558)
                                    ~currentIndex:(Ojs.float_of_js x6559)
                                    ~array:(t_of_js x6560))));(Ojs.float_to_js
                                                                 x6561)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6570 : 'tags this) ->
        fun
          ~callbackfn:(x6564 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6569 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6570) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6565 : Ojs.t) ->
                         fun (x6566 : Ojs.t) ->
                           fun (x6567 : Ojs.t) ->
                             fun (x6568 : Ojs.t) ->
                               Obj.magic
                                 (x6564 ~previousValue:(Obj.magic x6565)
                                    ~currentValue:(Ojs.float_of_js x6566)
                                    ~currentIndex:(Ojs.float_of_js x6567)
                                    ~array:(t_of_js x6568))));(Obj.magic
                                                                 x6569)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6577 : 'tags this) ->
        fun
          ~callbackfn:(x6572 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6577) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x6573 : Ojs.t) ->
                       fun (x6574 : Ojs.t) ->
                         fun (x6575 : Ojs.t) ->
                           fun (x6576 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6572 ~previousValue:(Ojs.float_of_js x6573)
                                  ~currentValue:(Ojs.float_of_js x6574)
                                  ~currentIndex:(Ojs.float_of_js x6575)
                                  ~array:(t_of_js x6576))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6585 : 'tags this) ->
        fun
          ~callbackfn:(x6579 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6584 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6585) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6580 : Ojs.t) ->
                         fun (x6581 : Ojs.t) ->
                           fun (x6582 : Ojs.t) ->
                             fun (x6583 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6579
                                    ~previousValue:(Ojs.float_of_js x6580)
                                    ~currentValue:(Ojs.float_of_js x6581)
                                    ~currentIndex:(Ojs.float_of_js x6582)
                                    ~array:(t_of_js x6583))));(Ojs.float_to_js
                                                                 x6584)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6593 : 'tags this) ->
        fun
          ~callbackfn:(x6587 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6592 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6593) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6588 : Ojs.t) ->
                         fun (x6589 : Ojs.t) ->
                           fun (x6590 : Ojs.t) ->
                             fun (x6591 : Ojs.t) ->
                               Obj.magic
                                 (x6587 ~previousValue:(Obj.magic x6588)
                                    ~currentValue:(Ojs.float_of_js x6589)
                                    ~currentIndex:(Ojs.float_of_js x6590)
                                    ~array:(t_of_js x6591))));(Obj.magic
                                                                 x6592)|])
    let (reverse : 'tags this -> t) =
      fun (x6595 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6595) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x6602 : 'tags this) ->
        fun ~array:(x6597 : float ArrayLike.t) ->
          fun ?offset:(x6598 : float option) ->
            fun () ->
              ignore
                (let x6604 = this_to_js Obj.magic x6602 in
                 Ojs.call (Ojs.get_prop_ascii x6604 "set") "apply"
                   [|x6604;((let x6599 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6599 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x6597)|]);
                             (match x6598 with
                              | Some x6600 ->
                                  ignore
                                    (Ojs.call x6599 "push"
                                       [|(Ojs.float_to_js x6600)|])
                              | None -> ());
                             x6599))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x6610 : 'tags this) ->
        fun ?start:(x6605 : float option) ->
          fun ?end_:(x6606 : float option) ->
            fun () ->
              t_of_js
                (let x6612 = this_to_js Obj.magic x6610 in
                 Ojs.call (Ojs.get_prop_ascii x6612 "slice") "apply"
                   [|x6612;((let x6607 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6605 with
                              | Some x6609 ->
                                  ignore
                                    (Ojs.call x6607 "push"
                                       [|(Ojs.float_to_js x6609)|])
                              | None -> ());
                             (match x6606 with
                              | Some x6608 ->
                                  ignore
                                    (Ojs.call x6607 "push"
                                       [|(Ojs.float_to_js x6608)|])
                              | None -> ());
                             x6607))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6620 : 'tags this) ->
        fun
          ~predicate:(x6613 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6614 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6622 = this_to_js Obj.magic x6620 in
                 Ojs.call (Ojs.get_prop_ascii x6622 "some") "apply"
                   [|x6622;((let x6615 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6615 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6617 : Ojs.t) ->
                                          fun (x6618 : Ojs.t) ->
                                            fun (x6619 : Ojs.t) ->
                                              unknown_to_js
                                                (x6613
                                                   ~value:(Ojs.float_of_js
                                                             x6617)
                                                   ~index:(Ojs.float_of_js
                                                             x6618)
                                                   ~array:(t_of_js x6619))))|]);
                             (match x6614 with
                              | Some x6616 ->
                                  ignore
                                    (Ojs.call x6615 "push"
                                       [|(any_to_js x6616)|])
                              | None -> ());
                             x6615))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x6628 : 'tags this) ->
        fun ?compareFn:(x6623 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x6630 = this_to_js Obj.magic x6628 in
               Ojs.call (Ojs.get_prop_ascii x6630 "sort") "apply"
                 [|x6630;((let x6624 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6623 with
                            | Some x6625 ->
                                ignore
                                  (Ojs.call x6624 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x6626 : Ojs.t) ->
                                             fun (x6627 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x6625
                                                    ~a:(Ojs.float_of_js x6626)
                                                    ~b:(Ojs.float_of_js x6627))))|])
                            | None -> ());
                           x6624))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x6637 : 'tags this) ->
        fun ?begin_:(x6632 : float option) ->
          fun ?end_:(x6633 : float option) ->
            fun () ->
              t_of_js
                (let x6639 = this_to_js Obj.magic x6637 in
                 Ojs.call (Ojs.get_prop_ascii x6639 "subarray") "apply"
                   [|x6639;((let x6634 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6632 with
                              | Some x6636 ->
                                  ignore
                                    (Ojs.call x6634 "push"
                                       [|(Ojs.float_to_js x6636)|])
                              | None -> ());
                             (match x6633 with
                              | Some x6635 ->
                                  ignore
                                    (Ojs.call x6634 "push"
                                       [|(Ojs.float_to_js x6635)|])
                              | None -> ());
                             x6634))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x6640 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6640) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x6642 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6642) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x6644 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6644) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x6646 : 'tags this) ->
        fun (x6648 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x6646)
               (Ojs.float_to_js x6648))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x6649 : 'tags this) ->
        fun (x6651 : float) ->
          fun (x6652 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x6649) (Ojs.float_to_js x6651)
              (Ojs.float_to_js x6652)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x6653 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|(Iterable.t_to_js Ojs.float_to_js x6653)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6655 : float Iterable.t) ->
        fun ?mapfn:(x6656 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x6657 : any option) ->
            fun () ->
              t_of_js
                (let x6664 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
                 Ojs.call (Ojs.get_prop_ascii x6664 "from") "apply"
                   [|x6664;((let x6658 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6658 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x6655)|]);
                             (match x6656 with
                              | Some x6660 ->
                                  ignore
                                    (Ojs.call x6658 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x6661 : Ojs.t) ->
                                               fun (x6662 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x6660
                                                      ~v:(Ojs.float_of_js
                                                            x6661)
                                                      ~k:(Ojs.float_of_js
                                                            x6662))))|])
                              | None -> ());
                             (match x6657 with
                              | Some x6659 ->
                                  ignore
                                    (Ojs.call x6658 "push"
                                       [|(any_to_js x6659)|])
                              | None -> ());
                             x6658))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x6665 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|(Ojs.float_to_js x6665)|])
    let (create''' : (ArrayBufferLike.t, float ArrayLike.t) union2 -> t) =
      fun (x6666 : (ArrayBufferLike.t, float ArrayLike.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|(union2_to_js ArrayBufferLike.t_to_js
                  (fun (x6668 : float ArrayLike.t) ->
                     ArrayLike.t_to_js Ojs.float_to_js x6668) x6666)|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x6670 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x6671 : float option) ->
          fun ?length:(x6672 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint16Array")
                   (let x6673 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x6673 "push"
                         [|(ArrayBufferLike.t_to_js x6670)|]);
                    (match x6671 with
                     | Some x6675 ->
                         ignore
                           (Ojs.call x6673 "push" [|(Ojs.float_to_js x6675)|])
                     | None -> ());
                    (match x6672 with
                     | Some x6674 ->
                         ignore
                           (Ojs.call x6673 "push" [|(Ojs.float_to_js x6674)|])
                     | None -> ());
                    x6673))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x6676 : float list) ->
        t_of_js
          (let x6679 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
           Ojs.call (Ojs.get_prop_ascii x6679 "of") "apply"
             [|x6679;((let x6677 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x6678 : float) ->
                            ignore
                              (Ojs.call x6677 "push"
                                 [|(Ojs.float_to_js x6678)|])) x6676;
                       x6677))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x6680 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint16Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x6680)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6682 : 'T ArrayLike.t) ->
        fun ~mapfn:(x6683 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x6684 : any option) ->
            fun () ->
              t_of_js
                (let x6690 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
                 Ojs.call (Ojs.get_prop_ascii x6690 "from") "apply"
                   [|x6690;((let x6685 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6685 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x6682)|]);
                             ignore
                               (Ojs.call x6685 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x6687 : Ojs.t) ->
                                          fun (x6688 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x6683 ~v:(Obj.magic x6687)
                                                 ~k:(Ojs.float_of_js x6688))))|]);
                             (match x6684 with
                              | Some x6686 ->
                                  ignore
                                    (Ojs.call x6685 "push"
                                       [|(any_to_js x6686)|])
                              | None -> ());
                             x6685))|])
    let cast_from = Obj.magic
  end
module Int8Array =
  struct
    type t =
      [ `Int8Array  | float ArrayLike.tags_1 | float IterableIterator.tags_1]
        intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6692 : Ojs.t) -> t_of_js x6692
    and t_0_to_js : t_0 -> Ojs.t = fun (x6691 : t) -> t_to_js x6691
    type tags =
      [ `Int8Array  | float ArrayLike.tags_1 | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Int8Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6695 : Ojs.t) -> intf_of_js __tags_of_js x6695
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6693 : __tags intf) -> intf_to_js __tags_to_js x6693
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x6701 : 'tags this) ->
        fun ~searchElement:(x6697 : float) ->
          fun ?fromIndex:(x6698 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6703 = this_to_js Obj.magic x6701 in
                 Ojs.call (Ojs.get_prop_ascii x6703 "includes") "apply"
                   [|x6703;((let x6699 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6699 "push"
                                  [|(Ojs.float_to_js x6697)|]);
                             (match x6698 with
                              | Some x6700 ->
                                  ignore
                                    (Ojs.call x6699 "push"
                                       [|(Ojs.float_to_js x6700)|])
                              | None -> ());
                             x6699))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x6704 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x6706 : Ojs.t) ->
             let x6707 = x6706 in
             ((Ojs.float_of_js (Ojs.array_get x6707 0)),
               (Ojs.float_of_js (Ojs.array_get x6707 1))))
          (Ojs.call (this_to_js Obj.magic x6704) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x6708 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6708) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x6711 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6711) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x6714 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6714)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x6716 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6716) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x6718 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6718) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x6720 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6720) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6727 : 'tags this) ->
        fun ~target:(x6722 : float) ->
          fun ~start:(x6723 : float) ->
            fun ?end_:(x6724 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6729 = this_to_js Obj.magic x6727 in
                   Ojs.call (Ojs.get_prop_ascii x6729 "copyWithin") "apply"
                     [|x6729;((let x6725 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6725 "push"
                                    [|(Ojs.float_to_js x6722)|]);
                               ignore
                                 (Ojs.call x6725 "push"
                                    [|(Ojs.float_to_js x6723)|]);
                               (match x6724 with
                                | Some x6726 ->
                                    ignore
                                      (Ojs.call x6725 "push"
                                         [|(Ojs.float_to_js x6726)|])
                                | None -> ());
                               x6725))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6738 : 'tags this) ->
        fun
          ~predicate:(x6731 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6732 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6740 = this_to_js Obj.magic x6738 in
                 Ojs.call (Ojs.get_prop_ascii x6740 "every") "apply"
                   [|x6740;((let x6733 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6733 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6735 : Ojs.t) ->
                                          fun (x6736 : Ojs.t) ->
                                            fun (x6737 : Ojs.t) ->
                                              unknown_to_js
                                                (x6731
                                                   ~value:(Ojs.float_of_js
                                                             x6735)
                                                   ~index:(Ojs.float_of_js
                                                             x6736)
                                                   ~array:(t_of_js x6737))))|]);
                             (match x6732 with
                              | Some x6734 ->
                                  ignore
                                    (Ojs.call x6733 "push"
                                       [|(any_to_js x6734)|])
                              | None -> ());
                             x6733))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6747 : 'tags this) ->
        fun ~value:(x6741 : float) ->
          fun ?start:(x6742 : float option) ->
            fun ?end_:(x6743 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6749 = this_to_js Obj.magic x6747 in
                   Ojs.call (Ojs.get_prop_ascii x6749 "fill") "apply"
                     [|x6749;((let x6744 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6744 "push"
                                    [|(Ojs.float_to_js x6741)|]);
                               (match x6742 with
                                | Some x6746 ->
                                    ignore
                                      (Ojs.call x6744 "push"
                                         [|(Ojs.float_to_js x6746)|])
                                | None -> ());
                               (match x6743 with
                                | Some x6745 ->
                                    ignore
                                      (Ojs.call x6744 "push"
                                         [|(Ojs.float_to_js x6745)|])
                                | None -> ());
                               x6744))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6758 : 'tags this) ->
        fun ~predicate:(x6751 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x6752 : any option) ->
            fun () ->
              t_of_js
                (let x6760 = this_to_js Obj.magic x6758 in
                 Ojs.call (Ojs.get_prop_ascii x6760 "filter") "apply"
                   [|x6760;((let x6753 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6753 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6755 : Ojs.t) ->
                                          fun (x6756 : Ojs.t) ->
                                            fun (x6757 : Ojs.t) ->
                                              any_to_js
                                                (x6751
                                                   ~value:(Ojs.float_of_js
                                                             x6755)
                                                   ~index:(Ojs.float_of_js
                                                             x6756)
                                                   ~array:(t_of_js x6757))))|]);
                             (match x6752 with
                              | Some x6754 ->
                                  ignore
                                    (Ojs.call x6753 "push"
                                       [|(any_to_js x6754)|])
                              | None -> ());
                             x6753))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x6768 : 'tags this) ->
        fun ~predicate:(x6761 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6762 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x6770 = this_to_js Obj.magic x6768 in
                 Ojs.call (Ojs.get_prop_ascii x6770 "find") "apply"
                   [|x6770;((let x6763 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6763 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6765 : Ojs.t) ->
                                          fun (x6766 : Ojs.t) ->
                                            fun (x6767 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6761
                                                   ~value:(Ojs.float_of_js
                                                             x6765)
                                                   ~index:(Ojs.float_of_js
                                                             x6766)
                                                   ~obj:(t_of_js x6767))))|]);
                             (match x6762 with
                              | Some x6764 ->
                                  ignore
                                    (Ojs.call x6763 "push"
                                       [|(any_to_js x6764)|])
                              | None -> ());
                             x6763))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x6779 : 'tags this) ->
        fun ~predicate:(x6772 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6773 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x6781 = this_to_js Obj.magic x6779 in
                 Ojs.call (Ojs.get_prop_ascii x6781 "findIndex") "apply"
                   [|x6781;((let x6774 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6774 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6776 : Ojs.t) ->
                                          fun (x6777 : Ojs.t) ->
                                            fun (x6778 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6772
                                                   ~value:(Ojs.float_of_js
                                                             x6776)
                                                   ~index:(Ojs.float_of_js
                                                             x6777)
                                                   ~obj:(t_of_js x6778))))|]);
                             (match x6773 with
                              | Some x6775 ->
                                  ignore
                                    (Ojs.call x6774 "push"
                                       [|(any_to_js x6775)|])
                              | None -> ());
                             x6774))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x6789 : 'tags this) ->
        fun
          ~callbackfn:(x6782 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x6783 : any option) ->
            fun () ->
              ignore
                (let x6791 = this_to_js Obj.magic x6789 in
                 Ojs.call (Ojs.get_prop_ascii x6791 "forEach") "apply"
                   [|x6791;((let x6784 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6784 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6786 : Ojs.t) ->
                                          fun (x6787 : Ojs.t) ->
                                            fun (x6788 : Ojs.t) ->
                                              x6782
                                                ~value:(Ojs.float_of_js x6786)
                                                ~index:(Ojs.float_of_js x6787)
                                                ~array:(t_of_js x6788)))|]);
                             (match x6783 with
                              | Some x6785 ->
                                  ignore
                                    (Ojs.call x6784 "push"
                                       [|(any_to_js x6785)|])
                              | None -> ());
                             x6784))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6796 : 'tags this) ->
        fun ~searchElement:(x6792 : float) ->
          fun ?fromIndex:(x6793 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6798 = this_to_js Obj.magic x6796 in
                 Ojs.call (Ojs.get_prop_ascii x6798 "indexOf") "apply"
                   [|x6798;((let x6794 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6794 "push"
                                  [|(Ojs.float_to_js x6792)|]);
                             (match x6793 with
                              | Some x6795 ->
                                  ignore
                                    (Ojs.call x6794 "push"
                                       [|(Ojs.float_to_js x6795)|])
                              | None -> ());
                             x6794))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x6802 : 'tags this) ->
        fun ?separator:(x6799 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x6804 = this_to_js Obj.magic x6802 in
               Ojs.call (Ojs.get_prop_ascii x6804 "join") "apply"
                 [|x6804;((let x6800 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6799 with
                            | Some x6801 ->
                                ignore
                                  (Ojs.call x6800 "push"
                                     [|(Ojs.string_to_js x6801)|])
                            | None -> ());
                           x6800))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6809 : 'tags this) ->
        fun ~searchElement:(x6805 : float) ->
          fun ?fromIndex:(x6806 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6811 = this_to_js Obj.magic x6809 in
                 Ojs.call (Ojs.get_prop_ascii x6811 "lastIndexOf") "apply"
                   [|x6811;((let x6807 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6807 "push"
                                  [|(Ojs.float_to_js x6805)|]);
                             (match x6806 with
                              | Some x6808 ->
                                  ignore
                                    (Ojs.call x6807 "push"
                                       [|(Ojs.float_to_js x6808)|])
                              | None -> ());
                             x6807))|])
    let (get_length : 'tags this -> float) =
      fun (x6812 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6812) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6821 : 'tags this) ->
        fun
          ~callbackfn:(x6814 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x6815 : any option) ->
            fun () ->
              t_of_js
                (let x6823 = this_to_js Obj.magic x6821 in
                 Ojs.call (Ojs.get_prop_ascii x6823 "map") "apply"
                   [|x6823;((let x6816 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6816 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6818 : Ojs.t) ->
                                          fun (x6819 : Ojs.t) ->
                                            fun (x6820 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x6814
                                                   ~value:(Ojs.float_of_js
                                                             x6818)
                                                   ~index:(Ojs.float_of_js
                                                             x6819)
                                                   ~array:(t_of_js x6820))))|]);
                             (match x6815 with
                              | Some x6817 ->
                                  ignore
                                    (Ojs.call x6816 "push"
                                       [|(any_to_js x6817)|])
                              | None -> ());
                             x6816))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6829 : 'tags this) ->
        fun
          ~callbackfn:(x6824 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6829) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x6825 : Ojs.t) ->
                       fun (x6826 : Ojs.t) ->
                         fun (x6827 : Ojs.t) ->
                           fun (x6828 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6824 ~previousValue:(Ojs.float_of_js x6825)
                                  ~currentValue:(Ojs.float_of_js x6826)
                                  ~currentIndex:(Ojs.float_of_js x6827)
                                  ~array:(t_of_js x6828))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6837 : 'tags this) ->
        fun
          ~callbackfn:(x6831 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6836 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6837) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6832 : Ojs.t) ->
                         fun (x6833 : Ojs.t) ->
                           fun (x6834 : Ojs.t) ->
                             fun (x6835 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6831
                                    ~previousValue:(Ojs.float_of_js x6832)
                                    ~currentValue:(Ojs.float_of_js x6833)
                                    ~currentIndex:(Ojs.float_of_js x6834)
                                    ~array:(t_of_js x6835))));(Ojs.float_to_js
                                                                 x6836)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6845 : 'tags this) ->
        fun
          ~callbackfn:(x6839 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6844 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6845) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6840 : Ojs.t) ->
                         fun (x6841 : Ojs.t) ->
                           fun (x6842 : Ojs.t) ->
                             fun (x6843 : Ojs.t) ->
                               Obj.magic
                                 (x6839 ~previousValue:(Obj.magic x6840)
                                    ~currentValue:(Ojs.float_of_js x6841)
                                    ~currentIndex:(Ojs.float_of_js x6842)
                                    ~array:(t_of_js x6843))));(Obj.magic
                                                                 x6844)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6852 : 'tags this) ->
        fun
          ~callbackfn:(x6847 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6852) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x6848 : Ojs.t) ->
                       fun (x6849 : Ojs.t) ->
                         fun (x6850 : Ojs.t) ->
                           fun (x6851 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6847 ~previousValue:(Ojs.float_of_js x6848)
                                  ~currentValue:(Ojs.float_of_js x6849)
                                  ~currentIndex:(Ojs.float_of_js x6850)
                                  ~array:(t_of_js x6851))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6860 : 'tags this) ->
        fun
          ~callbackfn:(x6854 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6859 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6860) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6855 : Ojs.t) ->
                         fun (x6856 : Ojs.t) ->
                           fun (x6857 : Ojs.t) ->
                             fun (x6858 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6854
                                    ~previousValue:(Ojs.float_of_js x6855)
                                    ~currentValue:(Ojs.float_of_js x6856)
                                    ~currentIndex:(Ojs.float_of_js x6857)
                                    ~array:(t_of_js x6858))));(Ojs.float_to_js
                                                                 x6859)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6868 : 'tags this) ->
        fun
          ~callbackfn:(x6862 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6867 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6868) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6863 : Ojs.t) ->
                         fun (x6864 : Ojs.t) ->
                           fun (x6865 : Ojs.t) ->
                             fun (x6866 : Ojs.t) ->
                               Obj.magic
                                 (x6862 ~previousValue:(Obj.magic x6863)
                                    ~currentValue:(Ojs.float_of_js x6864)
                                    ~currentIndex:(Ojs.float_of_js x6865)
                                    ~array:(t_of_js x6866))));(Obj.magic
                                                                 x6867)|])
    let (reverse : 'tags this -> t) =
      fun (x6870 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6870) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x6877 : 'tags this) ->
        fun ~array:(x6872 : float ArrayLike.t) ->
          fun ?offset:(x6873 : float option) ->
            fun () ->
              ignore
                (let x6879 = this_to_js Obj.magic x6877 in
                 Ojs.call (Ojs.get_prop_ascii x6879 "set") "apply"
                   [|x6879;((let x6874 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6874 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x6872)|]);
                             (match x6873 with
                              | Some x6875 ->
                                  ignore
                                    (Ojs.call x6874 "push"
                                       [|(Ojs.float_to_js x6875)|])
                              | None -> ());
                             x6874))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x6885 : 'tags this) ->
        fun ?start:(x6880 : float option) ->
          fun ?end_:(x6881 : float option) ->
            fun () ->
              t_of_js
                (let x6887 = this_to_js Obj.magic x6885 in
                 Ojs.call (Ojs.get_prop_ascii x6887 "slice") "apply"
                   [|x6887;((let x6882 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6880 with
                              | Some x6884 ->
                                  ignore
                                    (Ojs.call x6882 "push"
                                       [|(Ojs.float_to_js x6884)|])
                              | None -> ());
                             (match x6881 with
                              | Some x6883 ->
                                  ignore
                                    (Ojs.call x6882 "push"
                                       [|(Ojs.float_to_js x6883)|])
                              | None -> ());
                             x6882))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6895 : 'tags this) ->
        fun
          ~predicate:(x6888 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6889 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6897 = this_to_js Obj.magic x6895 in
                 Ojs.call (Ojs.get_prop_ascii x6897 "some") "apply"
                   [|x6897;((let x6890 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6890 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6892 : Ojs.t) ->
                                          fun (x6893 : Ojs.t) ->
                                            fun (x6894 : Ojs.t) ->
                                              unknown_to_js
                                                (x6888
                                                   ~value:(Ojs.float_of_js
                                                             x6892)
                                                   ~index:(Ojs.float_of_js
                                                             x6893)
                                                   ~array:(t_of_js x6894))))|]);
                             (match x6889 with
                              | Some x6891 ->
                                  ignore
                                    (Ojs.call x6890 "push"
                                       [|(any_to_js x6891)|])
                              | None -> ());
                             x6890))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x6903 : 'tags this) ->
        fun ?compareFn:(x6898 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x6905 = this_to_js Obj.magic x6903 in
               Ojs.call (Ojs.get_prop_ascii x6905 "sort") "apply"
                 [|x6905;((let x6899 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6898 with
                            | Some x6900 ->
                                ignore
                                  (Ojs.call x6899 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x6901 : Ojs.t) ->
                                             fun (x6902 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x6900
                                                    ~a:(Ojs.float_of_js x6901)
                                                    ~b:(Ojs.float_of_js x6902))))|])
                            | None -> ());
                           x6899))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x6912 : 'tags this) ->
        fun ?begin_:(x6907 : float option) ->
          fun ?end_:(x6908 : float option) ->
            fun () ->
              t_of_js
                (let x6914 = this_to_js Obj.magic x6912 in
                 Ojs.call (Ojs.get_prop_ascii x6914 "subarray") "apply"
                   [|x6914;((let x6909 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6907 with
                              | Some x6911 ->
                                  ignore
                                    (Ojs.call x6909 "push"
                                       [|(Ojs.float_to_js x6911)|])
                              | None -> ());
                             (match x6908 with
                              | Some x6910 ->
                                  ignore
                                    (Ojs.call x6909 "push"
                                       [|(Ojs.float_to_js x6910)|])
                              | None -> ());
                             x6909))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x6915 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6915) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x6917 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6917) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x6919 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6919) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x6921 : 'tags this) ->
        fun (x6923 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x6921)
               (Ojs.float_to_js x6923))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x6924 : 'tags this) ->
        fun (x6926 : float) ->
          fun (x6927 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x6924) (Ojs.float_to_js x6926)
              (Ojs.float_to_js x6927)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x6928 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|(Iterable.t_to_js Ojs.float_to_js x6928)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6930 : float Iterable.t) ->
        fun ?mapfn:(x6931 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x6932 : any option) ->
            fun () ->
              t_of_js
                (let x6939 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
                 Ojs.call (Ojs.get_prop_ascii x6939 "from") "apply"
                   [|x6939;((let x6933 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6933 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x6930)|]);
                             (match x6931 with
                              | Some x6935 ->
                                  ignore
                                    (Ojs.call x6933 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x6936 : Ojs.t) ->
                                               fun (x6937 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x6935
                                                      ~v:(Ojs.float_of_js
                                                            x6936)
                                                      ~k:(Ojs.float_of_js
                                                            x6937))))|])
                              | None -> ());
                             (match x6932 with
                              | Some x6934 ->
                                  ignore
                                    (Ojs.call x6933 "push"
                                       [|(any_to_js x6934)|])
                              | None -> ());
                             x6933))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int8Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x6940 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|(Ojs.float_to_js x6940)|])
    let (create''' : (ArrayBufferLike.t, float ArrayLike.t) union2 -> t) =
      fun (x6941 : (ArrayBufferLike.t, float ArrayLike.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|(union2_to_js ArrayBufferLike.t_to_js
                  (fun (x6943 : float ArrayLike.t) ->
                     ArrayLike.t_to_js Ojs.float_to_js x6943) x6941)|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x6945 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x6946 : float option) ->
          fun ?length:(x6947 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int8Array")
                   (let x6948 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x6948 "push"
                         [|(ArrayBufferLike.t_to_js x6945)|]);
                    (match x6946 with
                     | Some x6950 ->
                         ignore
                           (Ojs.call x6948 "push" [|(Ojs.float_to_js x6950)|])
                     | None -> ());
                    (match x6947 with
                     | Some x6949 ->
                         ignore
                           (Ojs.call x6948 "push" [|(Ojs.float_to_js x6949)|])
                     | None -> ());
                    x6948))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int8Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x6951 : float list) ->
        t_of_js
          (let x6954 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
           Ojs.call (Ojs.get_prop_ascii x6954 "of") "apply"
             [|x6954;((let x6952 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x6953 : float) ->
                            ignore
                              (Ojs.call x6952 "push"
                                 [|(Ojs.float_to_js x6953)|])) x6951;
                       x6952))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x6955 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int8Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x6955)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6957 : 'T ArrayLike.t) ->
        fun ~mapfn:(x6958 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x6959 : any option) ->
            fun () ->
              t_of_js
                (let x6965 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
                 Ojs.call (Ojs.get_prop_ascii x6965 "from") "apply"
                   [|x6965;((let x6960 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6960 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x6957)|]);
                             ignore
                               (Ojs.call x6960 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x6962 : Ojs.t) ->
                                          fun (x6963 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x6958 ~v:(Obj.magic x6962)
                                                 ~k:(Ojs.float_of_js x6963))))|]);
                             (match x6959 with
                              | Some x6961 ->
                                  ignore
                                    (Ojs.call x6960 "push"
                                       [|(any_to_js x6961)|])
                              | None -> ());
                             x6960))|])
    let cast_from = Obj.magic
  end
module Int32Array =
  struct
    type t =
      [ `Int32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6967 : Ojs.t) -> t_of_js x6967
    and t_0_to_js : t_0 -> Ojs.t = fun (x6966 : t) -> t_to_js x6966
    type tags =
      [ `Int32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Int32Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6970 : Ojs.t) -> intf_of_js __tags_of_js x6970
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6968 : __tags intf) -> intf_to_js __tags_to_js x6968
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x6976 : 'tags this) ->
        fun ~searchElement:(x6972 : float) ->
          fun ?fromIndex:(x6973 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6978 = this_to_js Obj.magic x6976 in
                 Ojs.call (Ojs.get_prop_ascii x6978 "includes") "apply"
                   [|x6978;((let x6974 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6974 "push"
                                  [|(Ojs.float_to_js x6972)|]);
                             (match x6973 with
                              | Some x6975 ->
                                  ignore
                                    (Ojs.call x6974 "push"
                                       [|(Ojs.float_to_js x6975)|])
                              | None -> ());
                             x6974))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x6979 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x6981 : Ojs.t) ->
             let x6982 = x6981 in
             ((Ojs.float_of_js (Ojs.array_get x6982 0)),
               (Ojs.float_of_js (Ojs.array_get x6982 1))))
          (Ojs.call (this_to_js Obj.magic x6979) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x6983 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6983) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x6986 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6986) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x6989 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6989)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x6991 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6991) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x6993 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6993) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x6995 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6995) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7002 : 'tags this) ->
        fun ~target:(x6997 : float) ->
          fun ~start:(x6998 : float) ->
            fun ?end_:(x6999 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7004 = this_to_js Obj.magic x7002 in
                   Ojs.call (Ojs.get_prop_ascii x7004 "copyWithin") "apply"
                     [|x7004;((let x7000 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7000 "push"
                                    [|(Ojs.float_to_js x6997)|]);
                               ignore
                                 (Ojs.call x7000 "push"
                                    [|(Ojs.float_to_js x6998)|]);
                               (match x6999 with
                                | Some x7001 ->
                                    ignore
                                      (Ojs.call x7000 "push"
                                         [|(Ojs.float_to_js x7001)|])
                                | None -> ());
                               x7000))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7013 : 'tags this) ->
        fun
          ~predicate:(x7006 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7007 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7015 = this_to_js Obj.magic x7013 in
                 Ojs.call (Ojs.get_prop_ascii x7015 "every") "apply"
                   [|x7015;((let x7008 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7008 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7010 : Ojs.t) ->
                                          fun (x7011 : Ojs.t) ->
                                            fun (x7012 : Ojs.t) ->
                                              unknown_to_js
                                                (x7006
                                                   ~value:(Ojs.float_of_js
                                                             x7010)
                                                   ~index:(Ojs.float_of_js
                                                             x7011)
                                                   ~array:(t_of_js x7012))))|]);
                             (match x7007 with
                              | Some x7009 ->
                                  ignore
                                    (Ojs.call x7008 "push"
                                       [|(any_to_js x7009)|])
                              | None -> ());
                             x7008))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7022 : 'tags this) ->
        fun ~value:(x7016 : float) ->
          fun ?start:(x7017 : float option) ->
            fun ?end_:(x7018 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7024 = this_to_js Obj.magic x7022 in
                   Ojs.call (Ojs.get_prop_ascii x7024 "fill") "apply"
                     [|x7024;((let x7019 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7019 "push"
                                    [|(Ojs.float_to_js x7016)|]);
                               (match x7017 with
                                | Some x7021 ->
                                    ignore
                                      (Ojs.call x7019 "push"
                                         [|(Ojs.float_to_js x7021)|])
                                | None -> ());
                               (match x7018 with
                                | Some x7020 ->
                                    ignore
                                      (Ojs.call x7019 "push"
                                         [|(Ojs.float_to_js x7020)|])
                                | None -> ());
                               x7019))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7033 : 'tags this) ->
        fun ~predicate:(x7026 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7027 : any option) ->
            fun () ->
              t_of_js
                (let x7035 = this_to_js Obj.magic x7033 in
                 Ojs.call (Ojs.get_prop_ascii x7035 "filter") "apply"
                   [|x7035;((let x7028 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7028 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7030 : Ojs.t) ->
                                          fun (x7031 : Ojs.t) ->
                                            fun (x7032 : Ojs.t) ->
                                              any_to_js
                                                (x7026
                                                   ~value:(Ojs.float_of_js
                                                             x7030)
                                                   ~index:(Ojs.float_of_js
                                                             x7031)
                                                   ~array:(t_of_js x7032))))|]);
                             (match x7027 with
                              | Some x7029 ->
                                  ignore
                                    (Ojs.call x7028 "push"
                                       [|(any_to_js x7029)|])
                              | None -> ());
                             x7028))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x7043 : 'tags this) ->
        fun ~predicate:(x7036 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7037 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x7045 = this_to_js Obj.magic x7043 in
                 Ojs.call (Ojs.get_prop_ascii x7045 "find") "apply"
                   [|x7045;((let x7038 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7038 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7040 : Ojs.t) ->
                                          fun (x7041 : Ojs.t) ->
                                            fun (x7042 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7036
                                                   ~value:(Ojs.float_of_js
                                                             x7040)
                                                   ~index:(Ojs.float_of_js
                                                             x7041)
                                                   ~obj:(t_of_js x7042))))|]);
                             (match x7037 with
                              | Some x7039 ->
                                  ignore
                                    (Ojs.call x7038 "push"
                                       [|(any_to_js x7039)|])
                              | None -> ());
                             x7038))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7054 : 'tags this) ->
        fun ~predicate:(x7047 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7048 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7056 = this_to_js Obj.magic x7054 in
                 Ojs.call (Ojs.get_prop_ascii x7056 "findIndex") "apply"
                   [|x7056;((let x7049 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7049 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7051 : Ojs.t) ->
                                          fun (x7052 : Ojs.t) ->
                                            fun (x7053 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7047
                                                   ~value:(Ojs.float_of_js
                                                             x7051)
                                                   ~index:(Ojs.float_of_js
                                                             x7052)
                                                   ~obj:(t_of_js x7053))))|]);
                             (match x7048 with
                              | Some x7050 ->
                                  ignore
                                    (Ojs.call x7049 "push"
                                       [|(any_to_js x7050)|])
                              | None -> ());
                             x7049))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x7064 : 'tags this) ->
        fun
          ~callbackfn:(x7057 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x7058 : any option) ->
            fun () ->
              ignore
                (let x7066 = this_to_js Obj.magic x7064 in
                 Ojs.call (Ojs.get_prop_ascii x7066 "forEach") "apply"
                   [|x7066;((let x7059 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7059 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7061 : Ojs.t) ->
                                          fun (x7062 : Ojs.t) ->
                                            fun (x7063 : Ojs.t) ->
                                              x7057
                                                ~value:(Ojs.float_of_js x7061)
                                                ~index:(Ojs.float_of_js x7062)
                                                ~array:(t_of_js x7063)))|]);
                             (match x7058 with
                              | Some x7060 ->
                                  ignore
                                    (Ojs.call x7059 "push"
                                       [|(any_to_js x7060)|])
                              | None -> ());
                             x7059))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7071 : 'tags this) ->
        fun ~searchElement:(x7067 : float) ->
          fun ?fromIndex:(x7068 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7073 = this_to_js Obj.magic x7071 in
                 Ojs.call (Ojs.get_prop_ascii x7073 "indexOf") "apply"
                   [|x7073;((let x7069 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7069 "push"
                                  [|(Ojs.float_to_js x7067)|]);
                             (match x7068 with
                              | Some x7070 ->
                                  ignore
                                    (Ojs.call x7069 "push"
                                       [|(Ojs.float_to_js x7070)|])
                              | None -> ());
                             x7069))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x7077 : 'tags this) ->
        fun ?separator:(x7074 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x7079 = this_to_js Obj.magic x7077 in
               Ojs.call (Ojs.get_prop_ascii x7079 "join") "apply"
                 [|x7079;((let x7075 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7074 with
                            | Some x7076 ->
                                ignore
                                  (Ojs.call x7075 "push"
                                     [|(Ojs.string_to_js x7076)|])
                            | None -> ());
                           x7075))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7084 : 'tags this) ->
        fun ~searchElement:(x7080 : float) ->
          fun ?fromIndex:(x7081 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7086 = this_to_js Obj.magic x7084 in
                 Ojs.call (Ojs.get_prop_ascii x7086 "lastIndexOf") "apply"
                   [|x7086;((let x7082 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7082 "push"
                                  [|(Ojs.float_to_js x7080)|]);
                             (match x7081 with
                              | Some x7083 ->
                                  ignore
                                    (Ojs.call x7082 "push"
                                       [|(Ojs.float_to_js x7083)|])
                              | None -> ());
                             x7082))|])
    let (get_length : 'tags this -> float) =
      fun (x7087 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7087) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7096 : 'tags this) ->
        fun
          ~callbackfn:(x7089 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x7090 : any option) ->
            fun () ->
              t_of_js
                (let x7098 = this_to_js Obj.magic x7096 in
                 Ojs.call (Ojs.get_prop_ascii x7098 "map") "apply"
                   [|x7098;((let x7091 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7091 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7093 : Ojs.t) ->
                                          fun (x7094 : Ojs.t) ->
                                            fun (x7095 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x7089
                                                   ~value:(Ojs.float_of_js
                                                             x7093)
                                                   ~index:(Ojs.float_of_js
                                                             x7094)
                                                   ~array:(t_of_js x7095))))|]);
                             (match x7090 with
                              | Some x7092 ->
                                  ignore
                                    (Ojs.call x7091 "push"
                                       [|(any_to_js x7092)|])
                              | None -> ());
                             x7091))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7104 : 'tags this) ->
        fun
          ~callbackfn:(x7099 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7104) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x7100 : Ojs.t) ->
                       fun (x7101 : Ojs.t) ->
                         fun (x7102 : Ojs.t) ->
                           fun (x7103 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7099 ~previousValue:(Ojs.float_of_js x7100)
                                  ~currentValue:(Ojs.float_of_js x7101)
                                  ~currentIndex:(Ojs.float_of_js x7102)
                                  ~array:(t_of_js x7103))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7112 : 'tags this) ->
        fun
          ~callbackfn:(x7106 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7111 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7112) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7107 : Ojs.t) ->
                         fun (x7108 : Ojs.t) ->
                           fun (x7109 : Ojs.t) ->
                             fun (x7110 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7106
                                    ~previousValue:(Ojs.float_of_js x7107)
                                    ~currentValue:(Ojs.float_of_js x7108)
                                    ~currentIndex:(Ojs.float_of_js x7109)
                                    ~array:(t_of_js x7110))));(Ojs.float_to_js
                                                                 x7111)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7120 : 'tags this) ->
        fun
          ~callbackfn:(x7114 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7119 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7120) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7115 : Ojs.t) ->
                         fun (x7116 : Ojs.t) ->
                           fun (x7117 : Ojs.t) ->
                             fun (x7118 : Ojs.t) ->
                               Obj.magic
                                 (x7114 ~previousValue:(Obj.magic x7115)
                                    ~currentValue:(Ojs.float_of_js x7116)
                                    ~currentIndex:(Ojs.float_of_js x7117)
                                    ~array:(t_of_js x7118))));(Obj.magic
                                                                 x7119)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7127 : 'tags this) ->
        fun
          ~callbackfn:(x7122 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7127) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7123 : Ojs.t) ->
                       fun (x7124 : Ojs.t) ->
                         fun (x7125 : Ojs.t) ->
                           fun (x7126 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7122 ~previousValue:(Ojs.float_of_js x7123)
                                  ~currentValue:(Ojs.float_of_js x7124)
                                  ~currentIndex:(Ojs.float_of_js x7125)
                                  ~array:(t_of_js x7126))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7135 : 'tags this) ->
        fun
          ~callbackfn:(x7129 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7134 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7135) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7130 : Ojs.t) ->
                         fun (x7131 : Ojs.t) ->
                           fun (x7132 : Ojs.t) ->
                             fun (x7133 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7129
                                    ~previousValue:(Ojs.float_of_js x7130)
                                    ~currentValue:(Ojs.float_of_js x7131)
                                    ~currentIndex:(Ojs.float_of_js x7132)
                                    ~array:(t_of_js x7133))));(Ojs.float_to_js
                                                                 x7134)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7143 : 'tags this) ->
        fun
          ~callbackfn:(x7137 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7142 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7143) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7138 : Ojs.t) ->
                         fun (x7139 : Ojs.t) ->
                           fun (x7140 : Ojs.t) ->
                             fun (x7141 : Ojs.t) ->
                               Obj.magic
                                 (x7137 ~previousValue:(Obj.magic x7138)
                                    ~currentValue:(Ojs.float_of_js x7139)
                                    ~currentIndex:(Ojs.float_of_js x7140)
                                    ~array:(t_of_js x7141))));(Obj.magic
                                                                 x7142)|])
    let (reverse : 'tags this -> t) =
      fun (x7145 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7145) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7152 : 'tags this) ->
        fun ~array:(x7147 : float ArrayLike.t) ->
          fun ?offset:(x7148 : float option) ->
            fun () ->
              ignore
                (let x7154 = this_to_js Obj.magic x7152 in
                 Ojs.call (Ojs.get_prop_ascii x7154 "set") "apply"
                   [|x7154;((let x7149 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7149 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x7147)|]);
                             (match x7148 with
                              | Some x7150 ->
                                  ignore
                                    (Ojs.call x7149 "push"
                                       [|(Ojs.float_to_js x7150)|])
                              | None -> ());
                             x7149))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7160 : 'tags this) ->
        fun ?start:(x7155 : float option) ->
          fun ?end_:(x7156 : float option) ->
            fun () ->
              t_of_js
                (let x7162 = this_to_js Obj.magic x7160 in
                 Ojs.call (Ojs.get_prop_ascii x7162 "slice") "apply"
                   [|x7162;((let x7157 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7155 with
                              | Some x7159 ->
                                  ignore
                                    (Ojs.call x7157 "push"
                                       [|(Ojs.float_to_js x7159)|])
                              | None -> ());
                             (match x7156 with
                              | Some x7158 ->
                                  ignore
                                    (Ojs.call x7157 "push"
                                       [|(Ojs.float_to_js x7158)|])
                              | None -> ());
                             x7157))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7170 : 'tags this) ->
        fun
          ~predicate:(x7163 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7164 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7172 = this_to_js Obj.magic x7170 in
                 Ojs.call (Ojs.get_prop_ascii x7172 "some") "apply"
                   [|x7172;((let x7165 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7165 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7167 : Ojs.t) ->
                                          fun (x7168 : Ojs.t) ->
                                            fun (x7169 : Ojs.t) ->
                                              unknown_to_js
                                                (x7163
                                                   ~value:(Ojs.float_of_js
                                                             x7167)
                                                   ~index:(Ojs.float_of_js
                                                             x7168)
                                                   ~array:(t_of_js x7169))))|]);
                             (match x7164 with
                              | Some x7166 ->
                                  ignore
                                    (Ojs.call x7165 "push"
                                       [|(any_to_js x7166)|])
                              | None -> ());
                             x7165))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x7178 : 'tags this) ->
        fun ?compareFn:(x7173 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x7180 = this_to_js Obj.magic x7178 in
               Ojs.call (Ojs.get_prop_ascii x7180 "sort") "apply"
                 [|x7180;((let x7174 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7173 with
                            | Some x7175 ->
                                ignore
                                  (Ojs.call x7174 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7176 : Ojs.t) ->
                                             fun (x7177 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x7175
                                                    ~a:(Ojs.float_of_js x7176)
                                                    ~b:(Ojs.float_of_js x7177))))|])
                            | None -> ());
                           x7174))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x7187 : 'tags this) ->
        fun ?begin_:(x7182 : float option) ->
          fun ?end_:(x7183 : float option) ->
            fun () ->
              t_of_js
                (let x7189 = this_to_js Obj.magic x7187 in
                 Ojs.call (Ojs.get_prop_ascii x7189 "subarray") "apply"
                   [|x7189;((let x7184 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7182 with
                              | Some x7186 ->
                                  ignore
                                    (Ojs.call x7184 "push"
                                       [|(Ojs.float_to_js x7186)|])
                              | None -> ());
                             (match x7183 with
                              | Some x7185 ->
                                  ignore
                                    (Ojs.call x7184 "push"
                                       [|(Ojs.float_to_js x7185)|])
                              | None -> ());
                             x7184))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x7190 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7190) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x7192 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7192) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x7194 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7194) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x7196 : 'tags this) ->
        fun (x7198 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x7196)
               (Ojs.float_to_js x7198))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x7199 : 'tags this) ->
        fun (x7201 : float) ->
          fun (x7202 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x7199) (Ojs.float_to_js x7201)
              (Ojs.float_to_js x7202)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x7203 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|(Iterable.t_to_js Ojs.float_to_js x7203)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7205 : float Iterable.t) ->
        fun ?mapfn:(x7206 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x7207 : any option) ->
            fun () ->
              t_of_js
                (let x7214 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
                 Ojs.call (Ojs.get_prop_ascii x7214 "from") "apply"
                   [|x7214;((let x7208 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7208 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x7205)|]);
                             (match x7206 with
                              | Some x7210 ->
                                  ignore
                                    (Ojs.call x7208 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x7211 : Ojs.t) ->
                                               fun (x7212 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x7210
                                                      ~v:(Ojs.float_of_js
                                                            x7211)
                                                      ~k:(Ojs.float_of_js
                                                            x7212))))|])
                              | None -> ());
                             (match x7207 with
                              | Some x7209 ->
                                  ignore
                                    (Ojs.call x7208 "push"
                                       [|(any_to_js x7209)|])
                              | None -> ());
                             x7208))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int32Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x7215 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|(Ojs.float_to_js x7215)|])
    let (create''' : (ArrayBufferLike.t, float ArrayLike.t) union2 -> t) =
      fun (x7216 : (ArrayBufferLike.t, float ArrayLike.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|(union2_to_js ArrayBufferLike.t_to_js
                  (fun (x7218 : float ArrayLike.t) ->
                     ArrayLike.t_to_js Ojs.float_to_js x7218) x7216)|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x7220 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x7221 : float option) ->
          fun ?length:(x7222 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int32Array")
                   (let x7223 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x7223 "push"
                         [|(ArrayBufferLike.t_to_js x7220)|]);
                    (match x7221 with
                     | Some x7225 ->
                         ignore
                           (Ojs.call x7223 "push" [|(Ojs.float_to_js x7225)|])
                     | None -> ());
                    (match x7222 with
                     | Some x7224 ->
                         ignore
                           (Ojs.call x7223 "push" [|(Ojs.float_to_js x7224)|])
                     | None -> ());
                    x7223))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int32Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x7226 : float list) ->
        t_of_js
          (let x7229 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
           Ojs.call (Ojs.get_prop_ascii x7229 "of") "apply"
             [|x7229;((let x7227 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x7228 : float) ->
                            ignore
                              (Ojs.call x7227 "push"
                                 [|(Ojs.float_to_js x7228)|])) x7226;
                       x7227))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x7230 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int32Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x7230)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7232 : 'T ArrayLike.t) ->
        fun ~mapfn:(x7233 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x7234 : any option) ->
            fun () ->
              t_of_js
                (let x7240 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
                 Ojs.call (Ojs.get_prop_ascii x7240 "from") "apply"
                   [|x7240;((let x7235 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7235 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x7232)|]);
                             ignore
                               (Ojs.call x7235 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x7237 : Ojs.t) ->
                                          fun (x7238 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x7233 ~v:(Obj.magic x7237)
                                                 ~k:(Ojs.float_of_js x7238))))|]);
                             (match x7234 with
                              | Some x7236 ->
                                  ignore
                                    (Ojs.call x7235 "push"
                                       [|(any_to_js x7236)|])
                              | None -> ());
                             x7235))|])
    let cast_from = Obj.magic
  end
module Int16Array =
  struct
    type t =
      [ `Int16Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7242 : Ojs.t) -> t_of_js x7242
    and t_0_to_js : t_0 -> Ojs.t = fun (x7241 : t) -> t_to_js x7241
    type tags =
      [ `Int16Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Int16Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7245 : Ojs.t) -> intf_of_js __tags_of_js x7245
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7243 : __tags intf) -> intf_to_js __tags_to_js x7243
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x7251 : 'tags this) ->
        fun ~searchElement:(x7247 : float) ->
          fun ?fromIndex:(x7248 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7253 = this_to_js Obj.magic x7251 in
                 Ojs.call (Ojs.get_prop_ascii x7253 "includes") "apply"
                   [|x7253;((let x7249 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7249 "push"
                                  [|(Ojs.float_to_js x7247)|]);
                             (match x7248 with
                              | Some x7250 ->
                                  ignore
                                    (Ojs.call x7249 "push"
                                       [|(Ojs.float_to_js x7250)|])
                              | None -> ());
                             x7249))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x7254 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x7256 : Ojs.t) ->
             let x7257 = x7256 in
             ((Ojs.float_of_js (Ojs.array_get x7257 0)),
               (Ojs.float_of_js (Ojs.array_get x7257 1))))
          (Ojs.call (this_to_js Obj.magic x7254) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x7258 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7258) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x7261 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7261) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x7264 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7264)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x7266 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7266) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x7268 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7268) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x7270 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7270) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7277 : 'tags this) ->
        fun ~target:(x7272 : float) ->
          fun ~start:(x7273 : float) ->
            fun ?end_:(x7274 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7279 = this_to_js Obj.magic x7277 in
                   Ojs.call (Ojs.get_prop_ascii x7279 "copyWithin") "apply"
                     [|x7279;((let x7275 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7275 "push"
                                    [|(Ojs.float_to_js x7272)|]);
                               ignore
                                 (Ojs.call x7275 "push"
                                    [|(Ojs.float_to_js x7273)|]);
                               (match x7274 with
                                | Some x7276 ->
                                    ignore
                                      (Ojs.call x7275 "push"
                                         [|(Ojs.float_to_js x7276)|])
                                | None -> ());
                               x7275))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7288 : 'tags this) ->
        fun
          ~predicate:(x7281 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7282 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7290 = this_to_js Obj.magic x7288 in
                 Ojs.call (Ojs.get_prop_ascii x7290 "every") "apply"
                   [|x7290;((let x7283 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7283 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7285 : Ojs.t) ->
                                          fun (x7286 : Ojs.t) ->
                                            fun (x7287 : Ojs.t) ->
                                              unknown_to_js
                                                (x7281
                                                   ~value:(Ojs.float_of_js
                                                             x7285)
                                                   ~index:(Ojs.float_of_js
                                                             x7286)
                                                   ~array:(t_of_js x7287))))|]);
                             (match x7282 with
                              | Some x7284 ->
                                  ignore
                                    (Ojs.call x7283 "push"
                                       [|(any_to_js x7284)|])
                              | None -> ());
                             x7283))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7297 : 'tags this) ->
        fun ~value:(x7291 : float) ->
          fun ?start:(x7292 : float option) ->
            fun ?end_:(x7293 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7299 = this_to_js Obj.magic x7297 in
                   Ojs.call (Ojs.get_prop_ascii x7299 "fill") "apply"
                     [|x7299;((let x7294 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7294 "push"
                                    [|(Ojs.float_to_js x7291)|]);
                               (match x7292 with
                                | Some x7296 ->
                                    ignore
                                      (Ojs.call x7294 "push"
                                         [|(Ojs.float_to_js x7296)|])
                                | None -> ());
                               (match x7293 with
                                | Some x7295 ->
                                    ignore
                                      (Ojs.call x7294 "push"
                                         [|(Ojs.float_to_js x7295)|])
                                | None -> ());
                               x7294))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7308 : 'tags this) ->
        fun ~predicate:(x7301 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7302 : any option) ->
            fun () ->
              t_of_js
                (let x7310 = this_to_js Obj.magic x7308 in
                 Ojs.call (Ojs.get_prop_ascii x7310 "filter") "apply"
                   [|x7310;((let x7303 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7303 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7305 : Ojs.t) ->
                                          fun (x7306 : Ojs.t) ->
                                            fun (x7307 : Ojs.t) ->
                                              any_to_js
                                                (x7301
                                                   ~value:(Ojs.float_of_js
                                                             x7305)
                                                   ~index:(Ojs.float_of_js
                                                             x7306)
                                                   ~array:(t_of_js x7307))))|]);
                             (match x7302 with
                              | Some x7304 ->
                                  ignore
                                    (Ojs.call x7303 "push"
                                       [|(any_to_js x7304)|])
                              | None -> ());
                             x7303))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x7318 : 'tags this) ->
        fun ~predicate:(x7311 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7312 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x7320 = this_to_js Obj.magic x7318 in
                 Ojs.call (Ojs.get_prop_ascii x7320 "find") "apply"
                   [|x7320;((let x7313 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7313 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7315 : Ojs.t) ->
                                          fun (x7316 : Ojs.t) ->
                                            fun (x7317 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7311
                                                   ~value:(Ojs.float_of_js
                                                             x7315)
                                                   ~index:(Ojs.float_of_js
                                                             x7316)
                                                   ~obj:(t_of_js x7317))))|]);
                             (match x7312 with
                              | Some x7314 ->
                                  ignore
                                    (Ojs.call x7313 "push"
                                       [|(any_to_js x7314)|])
                              | None -> ());
                             x7313))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7329 : 'tags this) ->
        fun ~predicate:(x7322 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7323 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7331 = this_to_js Obj.magic x7329 in
                 Ojs.call (Ojs.get_prop_ascii x7331 "findIndex") "apply"
                   [|x7331;((let x7324 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7324 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7326 : Ojs.t) ->
                                          fun (x7327 : Ojs.t) ->
                                            fun (x7328 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7322
                                                   ~value:(Ojs.float_of_js
                                                             x7326)
                                                   ~index:(Ojs.float_of_js
                                                             x7327)
                                                   ~obj:(t_of_js x7328))))|]);
                             (match x7323 with
                              | Some x7325 ->
                                  ignore
                                    (Ojs.call x7324 "push"
                                       [|(any_to_js x7325)|])
                              | None -> ());
                             x7324))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x7339 : 'tags this) ->
        fun
          ~callbackfn:(x7332 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x7333 : any option) ->
            fun () ->
              ignore
                (let x7341 = this_to_js Obj.magic x7339 in
                 Ojs.call (Ojs.get_prop_ascii x7341 "forEach") "apply"
                   [|x7341;((let x7334 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7334 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7336 : Ojs.t) ->
                                          fun (x7337 : Ojs.t) ->
                                            fun (x7338 : Ojs.t) ->
                                              x7332
                                                ~value:(Ojs.float_of_js x7336)
                                                ~index:(Ojs.float_of_js x7337)
                                                ~array:(t_of_js x7338)))|]);
                             (match x7333 with
                              | Some x7335 ->
                                  ignore
                                    (Ojs.call x7334 "push"
                                       [|(any_to_js x7335)|])
                              | None -> ());
                             x7334))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7346 : 'tags this) ->
        fun ~searchElement:(x7342 : float) ->
          fun ?fromIndex:(x7343 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7348 = this_to_js Obj.magic x7346 in
                 Ojs.call (Ojs.get_prop_ascii x7348 "indexOf") "apply"
                   [|x7348;((let x7344 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7344 "push"
                                  [|(Ojs.float_to_js x7342)|]);
                             (match x7343 with
                              | Some x7345 ->
                                  ignore
                                    (Ojs.call x7344 "push"
                                       [|(Ojs.float_to_js x7345)|])
                              | None -> ());
                             x7344))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x7352 : 'tags this) ->
        fun ?separator:(x7349 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x7354 = this_to_js Obj.magic x7352 in
               Ojs.call (Ojs.get_prop_ascii x7354 "join") "apply"
                 [|x7354;((let x7350 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7349 with
                            | Some x7351 ->
                                ignore
                                  (Ojs.call x7350 "push"
                                     [|(Ojs.string_to_js x7351)|])
                            | None -> ());
                           x7350))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7359 : 'tags this) ->
        fun ~searchElement:(x7355 : float) ->
          fun ?fromIndex:(x7356 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7361 = this_to_js Obj.magic x7359 in
                 Ojs.call (Ojs.get_prop_ascii x7361 "lastIndexOf") "apply"
                   [|x7361;((let x7357 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7357 "push"
                                  [|(Ojs.float_to_js x7355)|]);
                             (match x7356 with
                              | Some x7358 ->
                                  ignore
                                    (Ojs.call x7357 "push"
                                       [|(Ojs.float_to_js x7358)|])
                              | None -> ());
                             x7357))|])
    let (get_length : 'tags this -> float) =
      fun (x7362 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7362) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7371 : 'tags this) ->
        fun
          ~callbackfn:(x7364 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x7365 : any option) ->
            fun () ->
              t_of_js
                (let x7373 = this_to_js Obj.magic x7371 in
                 Ojs.call (Ojs.get_prop_ascii x7373 "map") "apply"
                   [|x7373;((let x7366 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7366 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7368 : Ojs.t) ->
                                          fun (x7369 : Ojs.t) ->
                                            fun (x7370 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x7364
                                                   ~value:(Ojs.float_of_js
                                                             x7368)
                                                   ~index:(Ojs.float_of_js
                                                             x7369)
                                                   ~array:(t_of_js x7370))))|]);
                             (match x7365 with
                              | Some x7367 ->
                                  ignore
                                    (Ojs.call x7366 "push"
                                       [|(any_to_js x7367)|])
                              | None -> ());
                             x7366))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7379 : 'tags this) ->
        fun
          ~callbackfn:(x7374 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7379) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x7375 : Ojs.t) ->
                       fun (x7376 : Ojs.t) ->
                         fun (x7377 : Ojs.t) ->
                           fun (x7378 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7374 ~previousValue:(Ojs.float_of_js x7375)
                                  ~currentValue:(Ojs.float_of_js x7376)
                                  ~currentIndex:(Ojs.float_of_js x7377)
                                  ~array:(t_of_js x7378))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7387 : 'tags this) ->
        fun
          ~callbackfn:(x7381 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7386 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7387) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7382 : Ojs.t) ->
                         fun (x7383 : Ojs.t) ->
                           fun (x7384 : Ojs.t) ->
                             fun (x7385 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7381
                                    ~previousValue:(Ojs.float_of_js x7382)
                                    ~currentValue:(Ojs.float_of_js x7383)
                                    ~currentIndex:(Ojs.float_of_js x7384)
                                    ~array:(t_of_js x7385))));(Ojs.float_to_js
                                                                 x7386)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7395 : 'tags this) ->
        fun
          ~callbackfn:(x7389 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7394 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7395) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7390 : Ojs.t) ->
                         fun (x7391 : Ojs.t) ->
                           fun (x7392 : Ojs.t) ->
                             fun (x7393 : Ojs.t) ->
                               Obj.magic
                                 (x7389 ~previousValue:(Obj.magic x7390)
                                    ~currentValue:(Ojs.float_of_js x7391)
                                    ~currentIndex:(Ojs.float_of_js x7392)
                                    ~array:(t_of_js x7393))));(Obj.magic
                                                                 x7394)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7402 : 'tags this) ->
        fun
          ~callbackfn:(x7397 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7402) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7398 : Ojs.t) ->
                       fun (x7399 : Ojs.t) ->
                         fun (x7400 : Ojs.t) ->
                           fun (x7401 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7397 ~previousValue:(Ojs.float_of_js x7398)
                                  ~currentValue:(Ojs.float_of_js x7399)
                                  ~currentIndex:(Ojs.float_of_js x7400)
                                  ~array:(t_of_js x7401))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7410 : 'tags this) ->
        fun
          ~callbackfn:(x7404 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7409 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7410) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7405 : Ojs.t) ->
                         fun (x7406 : Ojs.t) ->
                           fun (x7407 : Ojs.t) ->
                             fun (x7408 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7404
                                    ~previousValue:(Ojs.float_of_js x7405)
                                    ~currentValue:(Ojs.float_of_js x7406)
                                    ~currentIndex:(Ojs.float_of_js x7407)
                                    ~array:(t_of_js x7408))));(Ojs.float_to_js
                                                                 x7409)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7418 : 'tags this) ->
        fun
          ~callbackfn:(x7412 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7417 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7418) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7413 : Ojs.t) ->
                         fun (x7414 : Ojs.t) ->
                           fun (x7415 : Ojs.t) ->
                             fun (x7416 : Ojs.t) ->
                               Obj.magic
                                 (x7412 ~previousValue:(Obj.magic x7413)
                                    ~currentValue:(Ojs.float_of_js x7414)
                                    ~currentIndex:(Ojs.float_of_js x7415)
                                    ~array:(t_of_js x7416))));(Obj.magic
                                                                 x7417)|])
    let (reverse : 'tags this -> t) =
      fun (x7420 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7420) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7427 : 'tags this) ->
        fun ~array:(x7422 : float ArrayLike.t) ->
          fun ?offset:(x7423 : float option) ->
            fun () ->
              ignore
                (let x7429 = this_to_js Obj.magic x7427 in
                 Ojs.call (Ojs.get_prop_ascii x7429 "set") "apply"
                   [|x7429;((let x7424 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7424 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x7422)|]);
                             (match x7423 with
                              | Some x7425 ->
                                  ignore
                                    (Ojs.call x7424 "push"
                                       [|(Ojs.float_to_js x7425)|])
                              | None -> ());
                             x7424))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7435 : 'tags this) ->
        fun ?start:(x7430 : float option) ->
          fun ?end_:(x7431 : float option) ->
            fun () ->
              t_of_js
                (let x7437 = this_to_js Obj.magic x7435 in
                 Ojs.call (Ojs.get_prop_ascii x7437 "slice") "apply"
                   [|x7437;((let x7432 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7430 with
                              | Some x7434 ->
                                  ignore
                                    (Ojs.call x7432 "push"
                                       [|(Ojs.float_to_js x7434)|])
                              | None -> ());
                             (match x7431 with
                              | Some x7433 ->
                                  ignore
                                    (Ojs.call x7432 "push"
                                       [|(Ojs.float_to_js x7433)|])
                              | None -> ());
                             x7432))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7445 : 'tags this) ->
        fun
          ~predicate:(x7438 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7439 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7447 = this_to_js Obj.magic x7445 in
                 Ojs.call (Ojs.get_prop_ascii x7447 "some") "apply"
                   [|x7447;((let x7440 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7440 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7442 : Ojs.t) ->
                                          fun (x7443 : Ojs.t) ->
                                            fun (x7444 : Ojs.t) ->
                                              unknown_to_js
                                                (x7438
                                                   ~value:(Ojs.float_of_js
                                                             x7442)
                                                   ~index:(Ojs.float_of_js
                                                             x7443)
                                                   ~array:(t_of_js x7444))))|]);
                             (match x7439 with
                              | Some x7441 ->
                                  ignore
                                    (Ojs.call x7440 "push"
                                       [|(any_to_js x7441)|])
                              | None -> ());
                             x7440))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x7453 : 'tags this) ->
        fun ?compareFn:(x7448 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x7455 = this_to_js Obj.magic x7453 in
               Ojs.call (Ojs.get_prop_ascii x7455 "sort") "apply"
                 [|x7455;((let x7449 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7448 with
                            | Some x7450 ->
                                ignore
                                  (Ojs.call x7449 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7451 : Ojs.t) ->
                                             fun (x7452 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x7450
                                                    ~a:(Ojs.float_of_js x7451)
                                                    ~b:(Ojs.float_of_js x7452))))|])
                            | None -> ());
                           x7449))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x7462 : 'tags this) ->
        fun ?begin_:(x7457 : float option) ->
          fun ?end_:(x7458 : float option) ->
            fun () ->
              t_of_js
                (let x7464 = this_to_js Obj.magic x7462 in
                 Ojs.call (Ojs.get_prop_ascii x7464 "subarray") "apply"
                   [|x7464;((let x7459 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7457 with
                              | Some x7461 ->
                                  ignore
                                    (Ojs.call x7459 "push"
                                       [|(Ojs.float_to_js x7461)|])
                              | None -> ());
                             (match x7458 with
                              | Some x7460 ->
                                  ignore
                                    (Ojs.call x7459 "push"
                                       [|(Ojs.float_to_js x7460)|])
                              | None -> ());
                             x7459))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x7465 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7465) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x7467 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7467) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x7469 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7469) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x7471 : 'tags this) ->
        fun (x7473 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x7471)
               (Ojs.float_to_js x7473))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x7474 : 'tags this) ->
        fun (x7476 : float) ->
          fun (x7477 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x7474) (Ojs.float_to_js x7476)
              (Ojs.float_to_js x7477)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x7478 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|(Iterable.t_to_js Ojs.float_to_js x7478)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7480 : float Iterable.t) ->
        fun ?mapfn:(x7481 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x7482 : any option) ->
            fun () ->
              t_of_js
                (let x7489 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
                 Ojs.call (Ojs.get_prop_ascii x7489 "from") "apply"
                   [|x7489;((let x7483 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7483 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x7480)|]);
                             (match x7481 with
                              | Some x7485 ->
                                  ignore
                                    (Ojs.call x7483 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x7486 : Ojs.t) ->
                                               fun (x7487 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x7485
                                                      ~v:(Ojs.float_of_js
                                                            x7486)
                                                      ~k:(Ojs.float_of_js
                                                            x7487))))|])
                              | None -> ());
                             (match x7482 with
                              | Some x7484 ->
                                  ignore
                                    (Ojs.call x7483 "push"
                                       [|(any_to_js x7484)|])
                              | None -> ());
                             x7483))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int16Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x7490 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|(Ojs.float_to_js x7490)|])
    let (create''' : (ArrayBufferLike.t, float ArrayLike.t) union2 -> t) =
      fun (x7491 : (ArrayBufferLike.t, float ArrayLike.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|(union2_to_js ArrayBufferLike.t_to_js
                  (fun (x7493 : float ArrayLike.t) ->
                     ArrayLike.t_to_js Ojs.float_to_js x7493) x7491)|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x7495 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x7496 : float option) ->
          fun ?length:(x7497 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int16Array")
                   (let x7498 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x7498 "push"
                         [|(ArrayBufferLike.t_to_js x7495)|]);
                    (match x7496 with
                     | Some x7500 ->
                         ignore
                           (Ojs.call x7498 "push" [|(Ojs.float_to_js x7500)|])
                     | None -> ());
                    (match x7497 with
                     | Some x7499 ->
                         ignore
                           (Ojs.call x7498 "push" [|(Ojs.float_to_js x7499)|])
                     | None -> ());
                    x7498))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int16Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x7501 : float list) ->
        t_of_js
          (let x7504 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
           Ojs.call (Ojs.get_prop_ascii x7504 "of") "apply"
             [|x7504;((let x7502 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x7503 : float) ->
                            ignore
                              (Ojs.call x7502 "push"
                                 [|(Ojs.float_to_js x7503)|])) x7501;
                       x7502))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x7505 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int16Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x7505)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7507 : 'T ArrayLike.t) ->
        fun ~mapfn:(x7508 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x7509 : any option) ->
            fun () ->
              t_of_js
                (let x7515 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
                 Ojs.call (Ojs.get_prop_ascii x7515 "from") "apply"
                   [|x7515;((let x7510 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7510 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x7507)|]);
                             ignore
                               (Ojs.call x7510 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x7512 : Ojs.t) ->
                                          fun (x7513 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x7508 ~v:(Obj.magic x7512)
                                                 ~k:(Ojs.float_of_js x7513))))|]);
                             (match x7509 with
                              | Some x7511 ->
                                  ignore
                                    (Ojs.call x7510 "push"
                                       [|(any_to_js x7511)|])
                              | None -> ());
                             x7510))|])
    let cast_from = Obj.magic
  end
module BigUint64Array =
  struct
    type t =
      [ `BigUint64Array  | bigint ArrayLike.tags_1
      | bigint IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7517 : Ojs.t) -> t_of_js x7517
    and t_0_to_js : t_0 -> Ojs.t = fun (x7516 : t) -> t_to_js x7516
    type tags =
      [ `BigUint64Array  | bigint ArrayLike.tags_1
      | bigint IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `BigUint64Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7520 : Ojs.t) -> intf_of_js __tags_of_js x7520
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7518 : __tags intf) -> intf_to_js __tags_to_js x7518
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x7522 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7522)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x7524 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7524) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x7526 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7526) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x7528 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7528) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7535 : 'tags this) ->
        fun ~target:(x7530 : float) ->
          fun ~start:(x7531 : float) ->
            fun ?end_:(x7532 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7537 = this_to_js Obj.magic x7535 in
                   Ojs.call (Ojs.get_prop_ascii x7537 "copyWithin") "apply"
                     [|x7537;((let x7533 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7533 "push"
                                    [|(Ojs.float_to_js x7530)|]);
                               ignore
                                 (Ojs.call x7533 "push"
                                    [|(Ojs.float_to_js x7531)|]);
                               (match x7532 with
                                | Some x7534 ->
                                    ignore
                                      (Ojs.call x7533 "push"
                                         [|(Ojs.float_to_js x7534)|])
                                | None -> ());
                               x7533))|])
    let (entries : 'tags this -> (float * bigint) IterableIterator.t) =
      fun (x7539 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x7541 : Ojs.t) ->
             let x7542 = x7541 in
             ((Ojs.float_of_js (Ojs.array_get x7542 0)),
               (bigint_of_js (Ojs.array_get x7542 1))))
          (Ojs.call (this_to_js Obj.magic x7539) "entries" [||])
    let (every :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7550 : 'tags this) ->
        fun
          ~predicate:(x7543 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x7544 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7552 = this_to_js Obj.magic x7550 in
                 Ojs.call (Ojs.get_prop_ascii x7552 "every") "apply"
                   [|x7552;((let x7545 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7545 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7547 : Ojs.t) ->
                                          fun (x7548 : Ojs.t) ->
                                            fun (x7549 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7543
                                                   ~value:(bigint_of_js x7547)
                                                   ~index:(Ojs.float_of_js
                                                             x7548)
                                                   ~array:(t_of_js x7549))))|]);
                             (match x7544 with
                              | Some x7546 ->
                                  ignore
                                    (Ojs.call x7545 "push"
                                       [|(any_to_js x7546)|])
                              | None -> ());
                             x7545))|])
    let (fill :
      'tags this ->
        value:bigint -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7559 : 'tags this) ->
        fun ~value:(x7553 : bigint) ->
          fun ?start:(x7554 : float option) ->
            fun ?end_:(x7555 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7561 = this_to_js Obj.magic x7559 in
                   Ojs.call (Ojs.get_prop_ascii x7561 "fill") "apply"
                     [|x7561;((let x7556 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7556 "push"
                                    [|(bigint_to_js x7553)|]);
                               (match x7554 with
                                | Some x7558 ->
                                    ignore
                                      (Ojs.call x7556 "push"
                                         [|(Ojs.float_to_js x7558)|])
                                | None -> ());
                               (match x7555 with
                                | Some x7557 ->
                                    ignore
                                      (Ojs.call x7556 "push"
                                         [|(Ojs.float_to_js x7557)|])
                                | None -> ());
                               x7556))|])
    let (filter :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7570 : 'tags this) ->
        fun
          ~predicate:(x7563 : value:bigint -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7564 : any option) ->
            fun () ->
              t_of_js
                (let x7572 = this_to_js Obj.magic x7570 in
                 Ojs.call (Ojs.get_prop_ascii x7572 "filter") "apply"
                   [|x7572;((let x7565 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7565 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7567 : Ojs.t) ->
                                          fun (x7568 : Ojs.t) ->
                                            fun (x7569 : Ojs.t) ->
                                              any_to_js
                                                (x7563
                                                   ~value:(bigint_of_js x7567)
                                                   ~index:(Ojs.float_of_js
                                                             x7568)
                                                   ~array:(t_of_js x7569))))|]);
                             (match x7564 with
                              | Some x7566 ->
                                  ignore
                                    (Ojs.call x7565 "push"
                                       [|(any_to_js x7566)|])
                              | None -> ());
                             x7565))|])
    let (find :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bigint or_undefined)
      =
      fun (x7580 : 'tags this) ->
        fun
          ~predicate:(x7573 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x7574 : any option) ->
            fun () ->
              or_undefined_of_js bigint_of_js
                (let x7582 = this_to_js Obj.magic x7580 in
                 Ojs.call (Ojs.get_prop_ascii x7582 "find") "apply"
                   [|x7582;((let x7575 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7575 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7577 : Ojs.t) ->
                                          fun (x7578 : Ojs.t) ->
                                            fun (x7579 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7573
                                                   ~value:(bigint_of_js x7577)
                                                   ~index:(Ojs.float_of_js
                                                             x7578)
                                                   ~array:(t_of_js x7579))))|]);
                             (match x7574 with
                              | Some x7576 ->
                                  ignore
                                    (Ojs.call x7575 "push"
                                       [|(any_to_js x7576)|])
                              | None -> ());
                             x7575))|])
    let (findIndex :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7591 : 'tags this) ->
        fun
          ~predicate:(x7584 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x7585 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7593 = this_to_js Obj.magic x7591 in
                 Ojs.call (Ojs.get_prop_ascii x7593 "findIndex") "apply"
                   [|x7593;((let x7586 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7586 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7588 : Ojs.t) ->
                                          fun (x7589 : Ojs.t) ->
                                            fun (x7590 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7584
                                                   ~value:(bigint_of_js x7588)
                                                   ~index:(Ojs.float_of_js
                                                             x7589)
                                                   ~array:(t_of_js x7590))))|]);
                             (match x7585 with
                              | Some x7587 ->
                                  ignore
                                    (Ojs.call x7586 "push"
                                       [|(any_to_js x7587)|])
                              | None -> ());
                             x7586))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x7601 : 'tags this) ->
        fun
          ~callbackfn:(x7594 :
                        value:bigint -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x7595 : any option) ->
            fun () ->
              ignore
                (let x7603 = this_to_js Obj.magic x7601 in
                 Ojs.call (Ojs.get_prop_ascii x7603 "forEach") "apply"
                   [|x7603;((let x7596 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7596 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7598 : Ojs.t) ->
                                          fun (x7599 : Ojs.t) ->
                                            fun (x7600 : Ojs.t) ->
                                              x7594
                                                ~value:(bigint_of_js x7598)
                                                ~index:(Ojs.float_of_js x7599)
                                                ~array:(t_of_js x7600)))|]);
                             (match x7595 with
                              | Some x7597 ->
                                  ignore
                                    (Ojs.call x7596 "push"
                                       [|(any_to_js x7597)|])
                              | None -> ());
                             x7596))|])
    let (includes :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> bool)
      =
      fun (x7608 : 'tags this) ->
        fun ~searchElement:(x7604 : bigint) ->
          fun ?fromIndex:(x7605 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7610 = this_to_js Obj.magic x7608 in
                 Ojs.call (Ojs.get_prop_ascii x7610 "includes") "apply"
                   [|x7610;((let x7606 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7606 "push"
                                  [|(bigint_to_js x7604)|]);
                             (match x7605 with
                              | Some x7607 ->
                                  ignore
                                    (Ojs.call x7606 "push"
                                       [|(Ojs.float_to_js x7607)|])
                              | None -> ());
                             x7606))|])
    let (indexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x7615 : 'tags this) ->
        fun ~searchElement:(x7611 : bigint) ->
          fun ?fromIndex:(x7612 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7617 = this_to_js Obj.magic x7615 in
                 Ojs.call (Ojs.get_prop_ascii x7617 "indexOf") "apply"
                   [|x7617;((let x7613 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7613 "push"
                                  [|(bigint_to_js x7611)|]);
                             (match x7612 with
                              | Some x7614 ->
                                  ignore
                                    (Ojs.call x7613 "push"
                                       [|(Ojs.float_to_js x7614)|])
                              | None -> ());
                             x7613))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x7621 : 'tags this) ->
        fun ?separator:(x7618 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x7623 = this_to_js Obj.magic x7621 in
               Ojs.call (Ojs.get_prop_ascii x7623 "join") "apply"
                 [|x7623;((let x7619 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7618 with
                            | Some x7620 ->
                                ignore
                                  (Ojs.call x7619 "push"
                                     [|(Ojs.string_to_js x7620)|])
                            | None -> ());
                           x7619))|])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x7624 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7624) "keys" [||])
    let (lastIndexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x7631 : 'tags this) ->
        fun ~searchElement:(x7627 : bigint) ->
          fun ?fromIndex:(x7628 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7633 = this_to_js Obj.magic x7631 in
                 Ojs.call (Ojs.get_prop_ascii x7633 "lastIndexOf") "apply"
                   [|x7633;((let x7629 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7629 "push"
                                  [|(bigint_to_js x7627)|]);
                             (match x7628 with
                              | Some x7630 ->
                                  ignore
                                    (Ojs.call x7629 "push"
                                       [|(Ojs.float_to_js x7630)|])
                              | None -> ());
                             x7629))|])
    let (get_length : 'tags this -> float) =
      fun (x7634 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7634) "length")
    let (map :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> bigint) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7643 : 'tags this) ->
        fun
          ~callbackfn:(x7636 :
                        value:bigint -> index:float -> array:t -> bigint)
          ->
          fun ?thisArg:(x7637 : any option) ->
            fun () ->
              t_of_js
                (let x7645 = this_to_js Obj.magic x7643 in
                 Ojs.call (Ojs.get_prop_ascii x7645 "map") "apply"
                   [|x7645;((let x7638 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7638 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7640 : Ojs.t) ->
                                          fun (x7641 : Ojs.t) ->
                                            fun (x7642 : Ojs.t) ->
                                              bigint_to_js
                                                (x7636
                                                   ~value:(bigint_of_js x7640)
                                                   ~index:(Ojs.float_of_js
                                                             x7641)
                                                   ~array:(t_of_js x7642))))|]);
                             (match x7637 with
                              | Some x7639 ->
                                  ignore
                                    (Ojs.call x7638 "push"
                                       [|(any_to_js x7639)|])
                              | None -> ());
                             x7638))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x7651 : 'tags this) ->
        fun
          ~callbackfn:(x7646 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x7651) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x7647 : Ojs.t) ->
                       fun (x7648 : Ojs.t) ->
                         fun (x7649 : Ojs.t) ->
                           fun (x7650 : Ojs.t) ->
                             bigint_to_js
                               (x7646 ~previousValue:(bigint_of_js x7647)
                                  ~currentValue:(bigint_of_js x7648)
                                  ~currentIndex:(Ojs.float_of_js x7649)
                                  ~array:(t_of_js x7650))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7659 : 'tags this) ->
        fun
          ~callbackfn:(x7653 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7658 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7659) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7654 : Ojs.t) ->
                         fun (x7655 : Ojs.t) ->
                           fun (x7656 : Ojs.t) ->
                             fun (x7657 : Ojs.t) ->
                               Obj.magic
                                 (x7653 ~previousValue:(Obj.magic x7654)
                                    ~currentValue:(bigint_of_js x7655)
                                    ~currentIndex:(Ojs.float_of_js x7656)
                                    ~array:(t_of_js x7657))));(Obj.magic
                                                                 x7658)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x7666 : 'tags this) ->
        fun
          ~callbackfn:(x7661 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x7666) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7662 : Ojs.t) ->
                       fun (x7663 : Ojs.t) ->
                         fun (x7664 : Ojs.t) ->
                           fun (x7665 : Ojs.t) ->
                             bigint_to_js
                               (x7661 ~previousValue:(bigint_of_js x7662)
                                  ~currentValue:(bigint_of_js x7663)
                                  ~currentIndex:(Ojs.float_of_js x7664)
                                  ~array:(t_of_js x7665))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7674 : 'tags this) ->
        fun
          ~callbackfn:(x7668 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7673 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7674) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7669 : Ojs.t) ->
                         fun (x7670 : Ojs.t) ->
                           fun (x7671 : Ojs.t) ->
                             fun (x7672 : Ojs.t) ->
                               Obj.magic
                                 (x7668 ~previousValue:(Obj.magic x7669)
                                    ~currentValue:(bigint_of_js x7670)
                                    ~currentIndex:(Ojs.float_of_js x7671)
                                    ~array:(t_of_js x7672))));(Obj.magic
                                                                 x7673)|])
    let (reverse : 'tags this -> 'tags this) =
      fun (x7676 : 'tags this) ->
        this_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic x7676) "reverse" [||])
    let (set_ :
      'tags this -> array:bigint ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7684 : 'tags this) ->
        fun ~array:(x7679 : bigint ArrayLike.t) ->
          fun ?offset:(x7680 : float option) ->
            fun () ->
              ignore
                (let x7686 = this_to_js Obj.magic x7684 in
                 Ojs.call (Ojs.get_prop_ascii x7686 "set") "apply"
                   [|x7686;((let x7681 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7681 "push"
                                  [|(ArrayLike.t_to_js bigint_to_js x7679)|]);
                             (match x7680 with
                              | Some x7682 ->
                                  ignore
                                    (Ojs.call x7681 "push"
                                       [|(Ojs.float_to_js x7682)|])
                              | None -> ());
                             x7681))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7692 : 'tags this) ->
        fun ?start:(x7687 : float option) ->
          fun ?end_:(x7688 : float option) ->
            fun () ->
              t_of_js
                (let x7694 = this_to_js Obj.magic x7692 in
                 Ojs.call (Ojs.get_prop_ascii x7694 "slice") "apply"
                   [|x7694;((let x7689 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7687 with
                              | Some x7691 ->
                                  ignore
                                    (Ojs.call x7689 "push"
                                       [|(Ojs.float_to_js x7691)|])
                              | None -> ());
                             (match x7688 with
                              | Some x7690 ->
                                  ignore
                                    (Ojs.call x7689 "push"
                                       [|(Ojs.float_to_js x7690)|])
                              | None -> ());
                             x7689))|])
    let (some :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7702 : 'tags this) ->
        fun
          ~predicate:(x7695 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x7696 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7704 = this_to_js Obj.magic x7702 in
                 Ojs.call (Ojs.get_prop_ascii x7704 "some") "apply"
                   [|x7704;((let x7697 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7697 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7699 : Ojs.t) ->
                                          fun (x7700 : Ojs.t) ->
                                            fun (x7701 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7695
                                                   ~value:(bigint_of_js x7699)
                                                   ~index:(Ojs.float_of_js
                                                             x7700)
                                                   ~array:(t_of_js x7701))))|]);
                             (match x7696 with
                              | Some x7698 ->
                                  ignore
                                    (Ojs.call x7697 "push"
                                       [|(any_to_js x7698)|])
                              | None -> ());
                             x7697))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:bigint -> b:bigint -> bigint or_number) ->
          unit -> 'tags this)
      =
      fun (x7711 : 'tags this) ->
        fun
          ?compareFn:(x7705 :
                       (a:bigint -> b:bigint -> bigint or_number) option)
          ->
          fun () ->
            this_of_js Obj.magic
              (let x7713 = this_to_js Obj.magic x7711 in
               Ojs.call (Ojs.get_prop_ascii x7713 "sort") "apply"
                 [|x7713;((let x7706 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7705 with
                            | Some x7707 ->
                                ignore
                                  (Ojs.call x7706 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7708 : Ojs.t) ->
                                             fun (x7709 : Ojs.t) ->
                                               or_number_to_js bigint_to_js
                                                 (x7707
                                                    ~a:(bigint_of_js x7708)
                                                    ~b:(bigint_of_js x7709))))|])
                            | None -> ());
                           x7706))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x7720 : 'tags this) ->
        fun ?begin_:(x7715 : float option) ->
          fun ?end_:(x7716 : float option) ->
            fun () ->
              t_of_js
                (let x7722 = this_to_js Obj.magic x7720 in
                 Ojs.call (Ojs.get_prop_ascii x7722 "subarray") "apply"
                   [|x7722;((let x7717 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7715 with
                              | Some x7719 ->
                                  ignore
                                    (Ojs.call x7717 "push"
                                       [|(Ojs.float_to_js x7719)|])
                              | None -> ());
                             (match x7716 with
                              | Some x7718 ->
                                  ignore
                                    (Ojs.call x7717 "push"
                                       [|(Ojs.float_to_js x7718)|])
                              | None -> ());
                             x7717))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x7723 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7723) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x7725 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7725) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x7727 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7727) "valueOf" [||])
    let (values : 'tags this -> bigint IterableIterator.t) =
      fun (x7729 : 'tags this) ->
        IterableIterator.t_of_js bigint_of_js
          (Ojs.call (this_to_js Obj.magic x7729) "values" [||])
    let (get : 'tags this -> float -> bigint) =
      fun (x7732 : 'tags this) ->
        fun (x7734 : float) ->
          bigint_of_js
            (Ojs.get_prop (this_to_js Obj.magic x7732)
               (Ojs.float_to_js x7734))
    let (set : 'tags this -> float -> bigint -> unit) =
      fun (x7735 : 'tags this) ->
        fun (x7737 : float) ->
          fun (x7738 : bigint) ->
            Ojs.set_prop (this_to_js Obj.magic x7735) (Ojs.float_to_js x7737)
              (bigint_to_js x7738)
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "BigUint64Array") "prototype")
    let (create : ?length:float -> unit -> t) =
      fun ?length:(x7739 : float option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
               (let x7740 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x7739 with
                 | Some x7741 ->
                     ignore
                       (Ojs.call x7740 "push" [|(Ojs.float_to_js x7741)|])
                 | None -> ());
                x7740))
    let (create' : bigint Iterable.t -> t) =
      fun (x7742 : bigint Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
             [|(Iterable.t_to_js bigint_to_js x7742)|])
    let (create'' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x7744 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x7745 : float option) ->
          fun ?length:(x7746 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
                   (let x7747 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x7747 "push"
                         [|(ArrayBufferLike.t_to_js x7744)|]);
                    (match x7745 with
                     | Some x7749 ->
                         ignore
                           (Ojs.call x7747 "push" [|(Ojs.float_to_js x7749)|])
                     | None -> ());
                    (match x7746 with
                     | Some x7748 ->
                         ignore
                           (Ojs.call x7747 "push" [|(Ojs.float_to_js x7748)|])
                     | None -> ());
                    x7747))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
             "BYTES_PER_ELEMENT")
    let (of_ : bigint list -> t) =
      fun (x7750 : bigint list) ->
        t_of_js
          (let x7753 = Ojs.get_prop_ascii Ojs.global "BigUint64Array" in
           Ojs.call (Ojs.get_prop_ascii x7753 "of") "apply"
             [|x7753;((let x7751 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x7752 : bigint) ->
                            ignore
                              (Ojs.call x7751 "push" [|(bigint_to_js x7752)|]))
                         x7750;
                       x7751))|])
    let (from : bigint ArrayLike.t -> t) =
      fun (x7754 : bigint ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigUint64Array") "from"
             [|(ArrayLike.t_to_js bigint_to_js x7754)|])
    let (from' :
      arrayLike:'U ArrayLike.t ->
        mapfn:(v:'U -> k:float -> bigint) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7756 : 'U ArrayLike.t) ->
        fun ~mapfn:(x7757 : v:'U -> k:float -> bigint) ->
          fun ?thisArg:(x7758 : any option) ->
            fun () ->
              t_of_js
                (let x7764 = Ojs.get_prop_ascii Ojs.global "BigUint64Array" in
                 Ojs.call (Ojs.get_prop_ascii x7764 "from") "apply"
                   [|x7764;((let x7759 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7759 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x7756)|]);
                             ignore
                               (Ojs.call x7759 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x7761 : Ojs.t) ->
                                          fun (x7762 : Ojs.t) ->
                                            bigint_to_js
                                              (x7757 ~v:(Obj.magic x7761)
                                                 ~k:(Ojs.float_of_js x7762))))|]);
                             (match x7758 with
                              | Some x7760 ->
                                  ignore
                                    (Ojs.call x7759 "push"
                                       [|(any_to_js x7760)|])
                              | None -> ());
                             x7759))|])
    let cast_from = Obj.magic
  end
module BigInt64Array =
  struct
    type t =
      [ `BigInt64Array  | bigint ArrayLike.tags_1
      | bigint IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7766 : Ojs.t) -> t_of_js x7766
    and t_0_to_js : t_0 -> Ojs.t = fun (x7765 : t) -> t_to_js x7765
    type tags =
      [ `BigInt64Array  | bigint ArrayLike.tags_1
      | bigint IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `BigInt64Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7769 : Ojs.t) -> intf_of_js __tags_of_js x7769
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7767 : __tags intf) -> intf_to_js __tags_to_js x7767
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x7771 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7771)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x7773 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7773) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x7775 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7775) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x7777 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7777) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7784 : 'tags this) ->
        fun ~target:(x7779 : float) ->
          fun ~start:(x7780 : float) ->
            fun ?end_:(x7781 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7786 = this_to_js Obj.magic x7784 in
                   Ojs.call (Ojs.get_prop_ascii x7786 "copyWithin") "apply"
                     [|x7786;((let x7782 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7782 "push"
                                    [|(Ojs.float_to_js x7779)|]);
                               ignore
                                 (Ojs.call x7782 "push"
                                    [|(Ojs.float_to_js x7780)|]);
                               (match x7781 with
                                | Some x7783 ->
                                    ignore
                                      (Ojs.call x7782 "push"
                                         [|(Ojs.float_to_js x7783)|])
                                | None -> ());
                               x7782))|])
    let (entries : 'tags this -> (float * bigint) IterableIterator.t) =
      fun (x7788 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x7790 : Ojs.t) ->
             let x7791 = x7790 in
             ((Ojs.float_of_js (Ojs.array_get x7791 0)),
               (bigint_of_js (Ojs.array_get x7791 1))))
          (Ojs.call (this_to_js Obj.magic x7788) "entries" [||])
    let (every :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7799 : 'tags this) ->
        fun
          ~predicate:(x7792 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x7793 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7801 = this_to_js Obj.magic x7799 in
                 Ojs.call (Ojs.get_prop_ascii x7801 "every") "apply"
                   [|x7801;((let x7794 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7794 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7796 : Ojs.t) ->
                                          fun (x7797 : Ojs.t) ->
                                            fun (x7798 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7792
                                                   ~value:(bigint_of_js x7796)
                                                   ~index:(Ojs.float_of_js
                                                             x7797)
                                                   ~array:(t_of_js x7798))))|]);
                             (match x7793 with
                              | Some x7795 ->
                                  ignore
                                    (Ojs.call x7794 "push"
                                       [|(any_to_js x7795)|])
                              | None -> ());
                             x7794))|])
    let (fill :
      'tags this ->
        value:bigint -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7808 : 'tags this) ->
        fun ~value:(x7802 : bigint) ->
          fun ?start:(x7803 : float option) ->
            fun ?end_:(x7804 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7810 = this_to_js Obj.magic x7808 in
                   Ojs.call (Ojs.get_prop_ascii x7810 "fill") "apply"
                     [|x7810;((let x7805 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7805 "push"
                                    [|(bigint_to_js x7802)|]);
                               (match x7803 with
                                | Some x7807 ->
                                    ignore
                                      (Ojs.call x7805 "push"
                                         [|(Ojs.float_to_js x7807)|])
                                | None -> ());
                               (match x7804 with
                                | Some x7806 ->
                                    ignore
                                      (Ojs.call x7805 "push"
                                         [|(Ojs.float_to_js x7806)|])
                                | None -> ());
                               x7805))|])
    let (filter :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7819 : 'tags this) ->
        fun
          ~predicate:(x7812 : value:bigint -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7813 : any option) ->
            fun () ->
              t_of_js
                (let x7821 = this_to_js Obj.magic x7819 in
                 Ojs.call (Ojs.get_prop_ascii x7821 "filter") "apply"
                   [|x7821;((let x7814 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7814 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7816 : Ojs.t) ->
                                          fun (x7817 : Ojs.t) ->
                                            fun (x7818 : Ojs.t) ->
                                              any_to_js
                                                (x7812
                                                   ~value:(bigint_of_js x7816)
                                                   ~index:(Ojs.float_of_js
                                                             x7817)
                                                   ~array:(t_of_js x7818))))|]);
                             (match x7813 with
                              | Some x7815 ->
                                  ignore
                                    (Ojs.call x7814 "push"
                                       [|(any_to_js x7815)|])
                              | None -> ());
                             x7814))|])
    let (find :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bigint or_undefined)
      =
      fun (x7829 : 'tags this) ->
        fun
          ~predicate:(x7822 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x7823 : any option) ->
            fun () ->
              or_undefined_of_js bigint_of_js
                (let x7831 = this_to_js Obj.magic x7829 in
                 Ojs.call (Ojs.get_prop_ascii x7831 "find") "apply"
                   [|x7831;((let x7824 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7824 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7826 : Ojs.t) ->
                                          fun (x7827 : Ojs.t) ->
                                            fun (x7828 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7822
                                                   ~value:(bigint_of_js x7826)
                                                   ~index:(Ojs.float_of_js
                                                             x7827)
                                                   ~array:(t_of_js x7828))))|]);
                             (match x7823 with
                              | Some x7825 ->
                                  ignore
                                    (Ojs.call x7824 "push"
                                       [|(any_to_js x7825)|])
                              | None -> ());
                             x7824))|])
    let (findIndex :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7840 : 'tags this) ->
        fun
          ~predicate:(x7833 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x7834 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7842 = this_to_js Obj.magic x7840 in
                 Ojs.call (Ojs.get_prop_ascii x7842 "findIndex") "apply"
                   [|x7842;((let x7835 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7835 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7837 : Ojs.t) ->
                                          fun (x7838 : Ojs.t) ->
                                            fun (x7839 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7833
                                                   ~value:(bigint_of_js x7837)
                                                   ~index:(Ojs.float_of_js
                                                             x7838)
                                                   ~array:(t_of_js x7839))))|]);
                             (match x7834 with
                              | Some x7836 ->
                                  ignore
                                    (Ojs.call x7835 "push"
                                       [|(any_to_js x7836)|])
                              | None -> ());
                             x7835))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x7850 : 'tags this) ->
        fun
          ~callbackfn:(x7843 :
                        value:bigint -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x7844 : any option) ->
            fun () ->
              ignore
                (let x7852 = this_to_js Obj.magic x7850 in
                 Ojs.call (Ojs.get_prop_ascii x7852 "forEach") "apply"
                   [|x7852;((let x7845 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7845 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7847 : Ojs.t) ->
                                          fun (x7848 : Ojs.t) ->
                                            fun (x7849 : Ojs.t) ->
                                              x7843
                                                ~value:(bigint_of_js x7847)
                                                ~index:(Ojs.float_of_js x7848)
                                                ~array:(t_of_js x7849)))|]);
                             (match x7844 with
                              | Some x7846 ->
                                  ignore
                                    (Ojs.call x7845 "push"
                                       [|(any_to_js x7846)|])
                              | None -> ());
                             x7845))|])
    let (includes :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> bool)
      =
      fun (x7857 : 'tags this) ->
        fun ~searchElement:(x7853 : bigint) ->
          fun ?fromIndex:(x7854 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7859 = this_to_js Obj.magic x7857 in
                 Ojs.call (Ojs.get_prop_ascii x7859 "includes") "apply"
                   [|x7859;((let x7855 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7855 "push"
                                  [|(bigint_to_js x7853)|]);
                             (match x7854 with
                              | Some x7856 ->
                                  ignore
                                    (Ojs.call x7855 "push"
                                       [|(Ojs.float_to_js x7856)|])
                              | None -> ());
                             x7855))|])
    let (indexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x7864 : 'tags this) ->
        fun ~searchElement:(x7860 : bigint) ->
          fun ?fromIndex:(x7861 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7866 = this_to_js Obj.magic x7864 in
                 Ojs.call (Ojs.get_prop_ascii x7866 "indexOf") "apply"
                   [|x7866;((let x7862 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7862 "push"
                                  [|(bigint_to_js x7860)|]);
                             (match x7861 with
                              | Some x7863 ->
                                  ignore
                                    (Ojs.call x7862 "push"
                                       [|(Ojs.float_to_js x7863)|])
                              | None -> ());
                             x7862))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x7870 : 'tags this) ->
        fun ?separator:(x7867 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x7872 = this_to_js Obj.magic x7870 in
               Ojs.call (Ojs.get_prop_ascii x7872 "join") "apply"
                 [|x7872;((let x7868 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7867 with
                            | Some x7869 ->
                                ignore
                                  (Ojs.call x7868 "push"
                                     [|(Ojs.string_to_js x7869)|])
                            | None -> ());
                           x7868))|])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x7873 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7873) "keys" [||])
    let (lastIndexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x7880 : 'tags this) ->
        fun ~searchElement:(x7876 : bigint) ->
          fun ?fromIndex:(x7877 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7882 = this_to_js Obj.magic x7880 in
                 Ojs.call (Ojs.get_prop_ascii x7882 "lastIndexOf") "apply"
                   [|x7882;((let x7878 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7878 "push"
                                  [|(bigint_to_js x7876)|]);
                             (match x7877 with
                              | Some x7879 ->
                                  ignore
                                    (Ojs.call x7878 "push"
                                       [|(Ojs.float_to_js x7879)|])
                              | None -> ());
                             x7878))|])
    let (get_length : 'tags this -> float) =
      fun (x7883 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7883) "length")
    let (map :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> bigint) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7892 : 'tags this) ->
        fun
          ~callbackfn:(x7885 :
                        value:bigint -> index:float -> array:t -> bigint)
          ->
          fun ?thisArg:(x7886 : any option) ->
            fun () ->
              t_of_js
                (let x7894 = this_to_js Obj.magic x7892 in
                 Ojs.call (Ojs.get_prop_ascii x7894 "map") "apply"
                   [|x7894;((let x7887 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7887 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7889 : Ojs.t) ->
                                          fun (x7890 : Ojs.t) ->
                                            fun (x7891 : Ojs.t) ->
                                              bigint_to_js
                                                (x7885
                                                   ~value:(bigint_of_js x7889)
                                                   ~index:(Ojs.float_of_js
                                                             x7890)
                                                   ~array:(t_of_js x7891))))|]);
                             (match x7886 with
                              | Some x7888 ->
                                  ignore
                                    (Ojs.call x7887 "push"
                                       [|(any_to_js x7888)|])
                              | None -> ());
                             x7887))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x7900 : 'tags this) ->
        fun
          ~callbackfn:(x7895 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x7900) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x7896 : Ojs.t) ->
                       fun (x7897 : Ojs.t) ->
                         fun (x7898 : Ojs.t) ->
                           fun (x7899 : Ojs.t) ->
                             bigint_to_js
                               (x7895 ~previousValue:(bigint_of_js x7896)
                                  ~currentValue:(bigint_of_js x7897)
                                  ~currentIndex:(Ojs.float_of_js x7898)
                                  ~array:(t_of_js x7899))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7908 : 'tags this) ->
        fun
          ~callbackfn:(x7902 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7907 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7908) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7903 : Ojs.t) ->
                         fun (x7904 : Ojs.t) ->
                           fun (x7905 : Ojs.t) ->
                             fun (x7906 : Ojs.t) ->
                               Obj.magic
                                 (x7902 ~previousValue:(Obj.magic x7903)
                                    ~currentValue:(bigint_of_js x7904)
                                    ~currentIndex:(Ojs.float_of_js x7905)
                                    ~array:(t_of_js x7906))));(Obj.magic
                                                                 x7907)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x7915 : 'tags this) ->
        fun
          ~callbackfn:(x7910 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x7915) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7911 : Ojs.t) ->
                       fun (x7912 : Ojs.t) ->
                         fun (x7913 : Ojs.t) ->
                           fun (x7914 : Ojs.t) ->
                             bigint_to_js
                               (x7910 ~previousValue:(bigint_of_js x7911)
                                  ~currentValue:(bigint_of_js x7912)
                                  ~currentIndex:(Ojs.float_of_js x7913)
                                  ~array:(t_of_js x7914))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7923 : 'tags this) ->
        fun
          ~callbackfn:(x7917 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7922 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7923) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7918 : Ojs.t) ->
                         fun (x7919 : Ojs.t) ->
                           fun (x7920 : Ojs.t) ->
                             fun (x7921 : Ojs.t) ->
                               Obj.magic
                                 (x7917 ~previousValue:(Obj.magic x7918)
                                    ~currentValue:(bigint_of_js x7919)
                                    ~currentIndex:(Ojs.float_of_js x7920)
                                    ~array:(t_of_js x7921))));(Obj.magic
                                                                 x7922)|])
    let (reverse : 'tags this -> 'tags this) =
      fun (x7925 : 'tags this) ->
        this_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic x7925) "reverse" [||])
    let (set_ :
      'tags this -> array:bigint ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7933 : 'tags this) ->
        fun ~array:(x7928 : bigint ArrayLike.t) ->
          fun ?offset:(x7929 : float option) ->
            fun () ->
              ignore
                (let x7935 = this_to_js Obj.magic x7933 in
                 Ojs.call (Ojs.get_prop_ascii x7935 "set") "apply"
                   [|x7935;((let x7930 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7930 "push"
                                  [|(ArrayLike.t_to_js bigint_to_js x7928)|]);
                             (match x7929 with
                              | Some x7931 ->
                                  ignore
                                    (Ojs.call x7930 "push"
                                       [|(Ojs.float_to_js x7931)|])
                              | None -> ());
                             x7930))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7941 : 'tags this) ->
        fun ?start:(x7936 : float option) ->
          fun ?end_:(x7937 : float option) ->
            fun () ->
              t_of_js
                (let x7943 = this_to_js Obj.magic x7941 in
                 Ojs.call (Ojs.get_prop_ascii x7943 "slice") "apply"
                   [|x7943;((let x7938 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7936 with
                              | Some x7940 ->
                                  ignore
                                    (Ojs.call x7938 "push"
                                       [|(Ojs.float_to_js x7940)|])
                              | None -> ());
                             (match x7937 with
                              | Some x7939 ->
                                  ignore
                                    (Ojs.call x7938 "push"
                                       [|(Ojs.float_to_js x7939)|])
                              | None -> ());
                             x7938))|])
    let (some :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7951 : 'tags this) ->
        fun
          ~predicate:(x7944 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x7945 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7953 = this_to_js Obj.magic x7951 in
                 Ojs.call (Ojs.get_prop_ascii x7953 "some") "apply"
                   [|x7953;((let x7946 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7946 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7948 : Ojs.t) ->
                                          fun (x7949 : Ojs.t) ->
                                            fun (x7950 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7944
                                                   ~value:(bigint_of_js x7948)
                                                   ~index:(Ojs.float_of_js
                                                             x7949)
                                                   ~array:(t_of_js x7950))))|]);
                             (match x7945 with
                              | Some x7947 ->
                                  ignore
                                    (Ojs.call x7946 "push"
                                       [|(any_to_js x7947)|])
                              | None -> ());
                             x7946))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:bigint -> b:bigint -> bigint or_number) ->
          unit -> 'tags this)
      =
      fun (x7960 : 'tags this) ->
        fun
          ?compareFn:(x7954 :
                       (a:bigint -> b:bigint -> bigint or_number) option)
          ->
          fun () ->
            this_of_js Obj.magic
              (let x7962 = this_to_js Obj.magic x7960 in
               Ojs.call (Ojs.get_prop_ascii x7962 "sort") "apply"
                 [|x7962;((let x7955 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7954 with
                            | Some x7956 ->
                                ignore
                                  (Ojs.call x7955 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7957 : Ojs.t) ->
                                             fun (x7958 : Ojs.t) ->
                                               or_number_to_js bigint_to_js
                                                 (x7956
                                                    ~a:(bigint_of_js x7957)
                                                    ~b:(bigint_of_js x7958))))|])
                            | None -> ());
                           x7955))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x7969 : 'tags this) ->
        fun ?begin_:(x7964 : float option) ->
          fun ?end_:(x7965 : float option) ->
            fun () ->
              t_of_js
                (let x7971 = this_to_js Obj.magic x7969 in
                 Ojs.call (Ojs.get_prop_ascii x7971 "subarray") "apply"
                   [|x7971;((let x7966 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7964 with
                              | Some x7968 ->
                                  ignore
                                    (Ojs.call x7966 "push"
                                       [|(Ojs.float_to_js x7968)|])
                              | None -> ());
                             (match x7965 with
                              | Some x7967 ->
                                  ignore
                                    (Ojs.call x7966 "push"
                                       [|(Ojs.float_to_js x7967)|])
                              | None -> ());
                             x7966))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x7972 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7972) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x7974 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7974) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x7976 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7976) "valueOf" [||])
    let (values : 'tags this -> bigint IterableIterator.t) =
      fun (x7978 : 'tags this) ->
        IterableIterator.t_of_js bigint_of_js
          (Ojs.call (this_to_js Obj.magic x7978) "values" [||])
    let (get : 'tags this -> float -> bigint) =
      fun (x7981 : 'tags this) ->
        fun (x7983 : float) ->
          bigint_of_js
            (Ojs.get_prop (this_to_js Obj.magic x7981)
               (Ojs.float_to_js x7983))
    let (set : 'tags this -> float -> bigint -> unit) =
      fun (x7984 : 'tags this) ->
        fun (x7986 : float) ->
          fun (x7987 : bigint) ->
            Ojs.set_prop (this_to_js Obj.magic x7984) (Ojs.float_to_js x7986)
              (bigint_to_js x7987)
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
             "prototype")
    let (create : ?length:float -> unit -> t) =
      fun ?length:(x7988 : float option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
               (let x7989 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x7988 with
                 | Some x7990 ->
                     ignore
                       (Ojs.call x7989 "push" [|(Ojs.float_to_js x7990)|])
                 | None -> ());
                x7989))
    let (create' : bigint Iterable.t -> t) =
      fun (x7991 : bigint Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
             [|(Iterable.t_to_js bigint_to_js x7991)|])
    let (create'' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x7993 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x7994 : float option) ->
          fun ?length:(x7995 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
                   (let x7996 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x7996 "push"
                         [|(ArrayBufferLike.t_to_js x7993)|]);
                    (match x7994 with
                     | Some x7998 ->
                         ignore
                           (Ojs.call x7996 "push" [|(Ojs.float_to_js x7998)|])
                     | None -> ());
                    (match x7995 with
                     | Some x7997 ->
                         ignore
                           (Ojs.call x7996 "push" [|(Ojs.float_to_js x7997)|])
                     | None -> ());
                    x7996))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
             "BYTES_PER_ELEMENT")
    let (of_ : bigint list -> t) =
      fun (x7999 : bigint list) ->
        t_of_js
          (let x8002 = Ojs.get_prop_ascii Ojs.global "BigInt64Array" in
           Ojs.call (Ojs.get_prop_ascii x8002 "of") "apply"
             [|x8002;((let x8000 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x8001 : bigint) ->
                            ignore
                              (Ojs.call x8000 "push" [|(bigint_to_js x8001)|]))
                         x7999;
                       x8000))|])
    let (from : bigint ArrayLike.t -> t) =
      fun (x8003 : bigint ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigInt64Array") "from"
             [|(ArrayLike.t_to_js bigint_to_js x8003)|])
    let (from' :
      arrayLike:'U ArrayLike.t ->
        mapfn:(v:'U -> k:float -> bigint) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8005 : 'U ArrayLike.t) ->
        fun ~mapfn:(x8006 : v:'U -> k:float -> bigint) ->
          fun ?thisArg:(x8007 : any option) ->
            fun () ->
              t_of_js
                (let x8013 = Ojs.get_prop_ascii Ojs.global "BigInt64Array" in
                 Ojs.call (Ojs.get_prop_ascii x8013 "from") "apply"
                   [|x8013;((let x8008 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8008 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x8005)|]);
                             ignore
                               (Ojs.call x8008 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x8010 : Ojs.t) ->
                                          fun (x8011 : Ojs.t) ->
                                            bigint_to_js
                                              (x8006 ~v:(Obj.magic x8010)
                                                 ~k:(Ojs.float_of_js x8011))))|]);
                             (match x8007 with
                              | Some x8009 ->
                                  ignore
                                    (Ojs.call x8008 "push"
                                       [|(any_to_js x8009)|])
                              | None -> ());
                             x8008))|])
    let cast_from = Obj.magic
  end
module Atomics =
  struct
    let (add :
      typedArray:(Int16Array.t, Int32Array.t, Int8Array.t, Uint16Array.t,
        Uint32Array.t, Uint8Array.t) union6 ->
        index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x8014 :
                      (Int16Array.t, Int32Array.t, Int8Array.t,
                        Uint16Array.t, Uint32Array.t, Uint8Array.t) union6)
        ->
        fun ~index:(x8021 : float) ->
          fun ~value:(x8022 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "add"
                 [|(union6_to_js Int16Array.t_to_js Int32Array.t_to_js
                      Int8Array.t_to_js Uint16Array.t_to_js
                      Uint32Array.t_to_js Uint8Array.t_to_js x8014);(
                   Ojs.float_to_js x8021);(Ojs.float_to_js x8022)|])
    let (and_ :
      typedArray:(Int16Array.t, Int32Array.t, Int8Array.t, Uint16Array.t,
        Uint32Array.t, Uint8Array.t) union6 ->
        index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x8023 :
                      (Int16Array.t, Int32Array.t, Int8Array.t,
                        Uint16Array.t, Uint32Array.t, Uint8Array.t) union6)
        ->
        fun ~index:(x8030 : float) ->
          fun ~value:(x8031 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "and"
                 [|(union6_to_js Int16Array.t_to_js Int32Array.t_to_js
                      Int8Array.t_to_js Uint16Array.t_to_js
                      Uint32Array.t_to_js Uint8Array.t_to_js x8023);(
                   Ojs.float_to_js x8030);(Ojs.float_to_js x8031)|])
    let (compareExchange :
      typedArray:(Int16Array.t, Int32Array.t, Int8Array.t, Uint16Array.t,
        Uint32Array.t, Uint8Array.t) union6 ->
        index:float -> expectedValue:float -> replacementValue:float -> float)
      =
      fun
        ~typedArray:(x8032 :
                      (Int16Array.t, Int32Array.t, Int8Array.t,
                        Uint16Array.t, Uint32Array.t, Uint8Array.t) union6)
        ->
        fun ~index:(x8039 : float) ->
          fun ~expectedValue:(x8040 : float) ->
            fun ~replacementValue:(x8041 : float) ->
              Ojs.float_of_js
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics")
                   "compareExchange"
                   [|(union6_to_js Int16Array.t_to_js Int32Array.t_to_js
                        Int8Array.t_to_js Uint16Array.t_to_js
                        Uint32Array.t_to_js Uint8Array.t_to_js x8032);(
                     Ojs.float_to_js x8039);(Ojs.float_to_js x8040);(
                     Ojs.float_to_js x8041)|])
    let (exchange :
      typedArray:(Int16Array.t, Int32Array.t, Int8Array.t, Uint16Array.t,
        Uint32Array.t, Uint8Array.t) union6 ->
        index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x8042 :
                      (Int16Array.t, Int32Array.t, Int8Array.t,
                        Uint16Array.t, Uint32Array.t, Uint8Array.t) union6)
        ->
        fun ~index:(x8049 : float) ->
          fun ~value:(x8050 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "exchange"
                 [|(union6_to_js Int16Array.t_to_js Int32Array.t_to_js
                      Int8Array.t_to_js Uint16Array.t_to_js
                      Uint32Array.t_to_js Uint8Array.t_to_js x8042);(
                   Ojs.float_to_js x8049);(Ojs.float_to_js x8050)|])
    let (isLockFree : float -> bool) =
      fun (x8051 : float) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "isLockFree"
             [|(Ojs.float_to_js x8051)|])
    let (load :
      typedArray:(Int16Array.t, Int32Array.t, Int8Array.t, Uint16Array.t,
        Uint32Array.t, Uint8Array.t) union6 -> index:float -> float)
      =
      fun
        ~typedArray:(x8052 :
                      (Int16Array.t, Int32Array.t, Int8Array.t,
                        Uint16Array.t, Uint32Array.t, Uint8Array.t) union6)
        ->
        fun ~index:(x8059 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "load"
               [|(union6_to_js Int16Array.t_to_js Int32Array.t_to_js
                    Int8Array.t_to_js Uint16Array.t_to_js Uint32Array.t_to_js
                    Uint8Array.t_to_js x8052);(Ojs.float_to_js x8059)|])
    let (or_ :
      typedArray:(Int16Array.t, Int32Array.t, Int8Array.t, Uint16Array.t,
        Uint32Array.t, Uint8Array.t) union6 ->
        index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x8060 :
                      (Int16Array.t, Int32Array.t, Int8Array.t,
                        Uint16Array.t, Uint32Array.t, Uint8Array.t) union6)
        ->
        fun ~index:(x8067 : float) ->
          fun ~value:(x8068 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "or"
                 [|(union6_to_js Int16Array.t_to_js Int32Array.t_to_js
                      Int8Array.t_to_js Uint16Array.t_to_js
                      Uint32Array.t_to_js Uint8Array.t_to_js x8060);(
                   Ojs.float_to_js x8067);(Ojs.float_to_js x8068)|])
    let (store :
      typedArray:(Int16Array.t, Int32Array.t, Int8Array.t, Uint16Array.t,
        Uint32Array.t, Uint8Array.t) union6 ->
        index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x8069 :
                      (Int16Array.t, Int32Array.t, Int8Array.t,
                        Uint16Array.t, Uint32Array.t, Uint8Array.t) union6)
        ->
        fun ~index:(x8076 : float) ->
          fun ~value:(x8077 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "store"
                 [|(union6_to_js Int16Array.t_to_js Int32Array.t_to_js
                      Int8Array.t_to_js Uint16Array.t_to_js
                      Uint32Array.t_to_js Uint8Array.t_to_js x8069);(
                   Ojs.float_to_js x8076);(Ojs.float_to_js x8077)|])
    let (sub :
      typedArray:(Int16Array.t, Int32Array.t, Int8Array.t, Uint16Array.t,
        Uint32Array.t, Uint8Array.t) union6 ->
        index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x8078 :
                      (Int16Array.t, Int32Array.t, Int8Array.t,
                        Uint16Array.t, Uint32Array.t, Uint8Array.t) union6)
        ->
        fun ~index:(x8085 : float) ->
          fun ~value:(x8086 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "sub"
                 [|(union6_to_js Int16Array.t_to_js Int32Array.t_to_js
                      Int8Array.t_to_js Uint16Array.t_to_js
                      Uint32Array.t_to_js Uint8Array.t_to_js x8078);(
                   Ojs.float_to_js x8085);(Ojs.float_to_js x8086)|])
    let (wait :
      typedArray:Int32Array.t ->
        index:float ->
          value:float ->
            ?timeout:float ->
              unit -> [ `L_s70_not_equal  | `L_s73_ok  | `L_s93_timed_out ])
      =
      fun ~typedArray:(x8087 : Int32Array.t) ->
        fun ~index:(x8088 : float) ->
          fun ~value:(x8089 : float) ->
            fun ?timeout:(x8090 : float option) ->
              fun () ->
                let x8094 =
                  let x8093 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                  Ojs.call (Ojs.get_prop_ascii x8093 "wait") "apply"
                    [|x8093;((let x8091 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x8091 "push"
                                   [|(Int32Array.t_to_js x8087)|]);
                              ignore
                                (Ojs.call x8091 "push"
                                   [|(Ojs.float_to_js x8088)|]);
                              ignore
                                (Ojs.call x8091 "push"
                                   [|(Ojs.float_to_js x8089)|]);
                              (match x8090 with
                               | Some x8092 ->
                                   ignore
                                     (Ojs.call x8091 "push"
                                        [|(Ojs.float_to_js x8092)|])
                               | None -> ());
                              x8091))|] in
                match Ojs.string_of_js x8094 with
                | "not-equal" -> `L_s70_not_equal
                | "ok" -> `L_s73_ok
                | "timed-out" -> `L_s93_timed_out
                | _ -> assert false
    let (notify :
      typedArray:Int32Array.t -> index:float -> ?count:float -> unit -> float)
      =
      fun ~typedArray:(x8095 : Int32Array.t) ->
        fun ~index:(x8096 : float) ->
          fun ?count:(x8097 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8100 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                 Ojs.call (Ojs.get_prop_ascii x8100 "notify") "apply"
                   [|x8100;((let x8098 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8098 "push"
                                  [|(Int32Array.t_to_js x8095)|]);
                             ignore
                               (Ojs.call x8098 "push"
                                  [|(Ojs.float_to_js x8096)|]);
                             (match x8097 with
                              | Some x8099 ->
                                  ignore
                                    (Ojs.call x8098 "push"
                                       [|(Ojs.float_to_js x8099)|])
                              | None -> ());
                             x8098))|])
    let (xor :
      typedArray:(Int16Array.t, Int32Array.t, Int8Array.t, Uint16Array.t,
        Uint32Array.t, Uint8Array.t) union6 ->
        index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x8101 :
                      (Int16Array.t, Int32Array.t, Int8Array.t,
                        Uint16Array.t, Uint32Array.t, Uint8Array.t) union6)
        ->
        fun ~index:(x8108 : float) ->
          fun ~value:(x8109 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "xor"
                 [|(union6_to_js Int16Array.t_to_js Int32Array.t_to_js
                      Int8Array.t_to_js Uint16Array.t_to_js
                      Uint32Array.t_to_js Uint8Array.t_to_js x8101);(
                   Ojs.float_to_js x8108);(Ojs.float_to_js x8109)|])
    let (add' :
      typedArray:(BigInt64Array.t, BigUint64Array.t) union2 ->
        index:float -> value:bigint -> bigint)
      =
      fun ~typedArray:(x8110 : (BigInt64Array.t, BigUint64Array.t) union2) ->
        fun ~index:(x8113 : float) ->
          fun ~value:(x8114 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "add"
                 [|(union2_to_js BigInt64Array.t_to_js BigUint64Array.t_to_js
                      x8110);(Ojs.float_to_js x8113);(bigint_to_js x8114)|])
    let (and_' :
      typedArray:(BigInt64Array.t, BigUint64Array.t) union2 ->
        index:float -> value:bigint -> bigint)
      =
      fun ~typedArray:(x8115 : (BigInt64Array.t, BigUint64Array.t) union2) ->
        fun ~index:(x8118 : float) ->
          fun ~value:(x8119 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "and"
                 [|(union2_to_js BigInt64Array.t_to_js BigUint64Array.t_to_js
                      x8115);(Ojs.float_to_js x8118);(bigint_to_js x8119)|])
    let (compareExchange' :
      typedArray:(BigInt64Array.t, BigUint64Array.t) union2 ->
        index:float ->
          expectedValue:bigint -> replacementValue:bigint -> bigint)
      =
      fun ~typedArray:(x8120 : (BigInt64Array.t, BigUint64Array.t) union2) ->
        fun ~index:(x8123 : float) ->
          fun ~expectedValue:(x8124 : bigint) ->
            fun ~replacementValue:(x8125 : bigint) ->
              bigint_of_js
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics")
                   "compareExchange"
                   [|(union2_to_js BigInt64Array.t_to_js
                        BigUint64Array.t_to_js x8120);(Ojs.float_to_js x8123);(
                     bigint_to_js x8124);(bigint_to_js x8125)|])
    let (exchange' :
      typedArray:(BigInt64Array.t, BigUint64Array.t) union2 ->
        index:float -> value:bigint -> bigint)
      =
      fun ~typedArray:(x8126 : (BigInt64Array.t, BigUint64Array.t) union2) ->
        fun ~index:(x8129 : float) ->
          fun ~value:(x8130 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "exchange"
                 [|(union2_to_js BigInt64Array.t_to_js BigUint64Array.t_to_js
                      x8126);(Ojs.float_to_js x8129);(bigint_to_js x8130)|])
    let (load' :
      typedArray:(BigInt64Array.t, BigUint64Array.t) union2 ->
        index:float -> bigint)
      =
      fun ~typedArray:(x8131 : (BigInt64Array.t, BigUint64Array.t) union2) ->
        fun ~index:(x8134 : float) ->
          bigint_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "load"
               [|(union2_to_js BigInt64Array.t_to_js BigUint64Array.t_to_js
                    x8131);(Ojs.float_to_js x8134)|])
    let (or_' :
      typedArray:(BigInt64Array.t, BigUint64Array.t) union2 ->
        index:float -> value:bigint -> bigint)
      =
      fun ~typedArray:(x8135 : (BigInt64Array.t, BigUint64Array.t) union2) ->
        fun ~index:(x8138 : float) ->
          fun ~value:(x8139 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "or"
                 [|(union2_to_js BigInt64Array.t_to_js BigUint64Array.t_to_js
                      x8135);(Ojs.float_to_js x8138);(bigint_to_js x8139)|])
    let (store' :
      typedArray:(BigInt64Array.t, BigUint64Array.t) union2 ->
        index:float -> value:bigint -> bigint)
      =
      fun ~typedArray:(x8140 : (BigInt64Array.t, BigUint64Array.t) union2) ->
        fun ~index:(x8143 : float) ->
          fun ~value:(x8144 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "store"
                 [|(union2_to_js BigInt64Array.t_to_js BigUint64Array.t_to_js
                      x8140);(Ojs.float_to_js x8143);(bigint_to_js x8144)|])
    let (sub' :
      typedArray:(BigInt64Array.t, BigUint64Array.t) union2 ->
        index:float -> value:bigint -> bigint)
      =
      fun ~typedArray:(x8145 : (BigInt64Array.t, BigUint64Array.t) union2) ->
        fun ~index:(x8148 : float) ->
          fun ~value:(x8149 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "sub"
                 [|(union2_to_js BigInt64Array.t_to_js BigUint64Array.t_to_js
                      x8145);(Ojs.float_to_js x8148);(bigint_to_js x8149)|])
    let (wait' :
      typedArray:BigInt64Array.t ->
        index:float ->
          value:bigint ->
            ?timeout:float ->
              unit -> [ `L_s70_not_equal  | `L_s73_ok  | `L_s93_timed_out ])
      =
      fun ~typedArray:(x8150 : BigInt64Array.t) ->
        fun ~index:(x8151 : float) ->
          fun ~value:(x8152 : bigint) ->
            fun ?timeout:(x8153 : float option) ->
              fun () ->
                let x8157 =
                  let x8156 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                  Ojs.call (Ojs.get_prop_ascii x8156 "wait") "apply"
                    [|x8156;((let x8154 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x8154 "push"
                                   [|(BigInt64Array.t_to_js x8150)|]);
                              ignore
                                (Ojs.call x8154 "push"
                                   [|(Ojs.float_to_js x8151)|]);
                              ignore
                                (Ojs.call x8154 "push"
                                   [|(bigint_to_js x8152)|]);
                              (match x8153 with
                               | Some x8155 ->
                                   ignore
                                     (Ojs.call x8154 "push"
                                        [|(Ojs.float_to_js x8155)|])
                               | None -> ());
                              x8154))|] in
                match Ojs.string_of_js x8157 with
                | "not-equal" -> `L_s70_not_equal
                | "ok" -> `L_s73_ok
                | "timed-out" -> `L_s93_timed_out
                | _ -> assert false
    let (notify' :
      typedArray:BigInt64Array.t ->
        index:float -> ?count:float -> unit -> float)
      =
      fun ~typedArray:(x8158 : BigInt64Array.t) ->
        fun ~index:(x8159 : float) ->
          fun ?count:(x8160 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8163 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                 Ojs.call (Ojs.get_prop_ascii x8163 "notify") "apply"
                   [|x8163;((let x8161 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8161 "push"
                                  [|(BigInt64Array.t_to_js x8158)|]);
                             ignore
                               (Ojs.call x8161 "push"
                                  [|(Ojs.float_to_js x8159)|]);
                             (match x8160 with
                              | Some x8162 ->
                                  ignore
                                    (Ojs.call x8161 "push"
                                       [|(Ojs.float_to_js x8162)|])
                              | None -> ());
                             x8161))|])
    let (xor' :
      typedArray:(BigInt64Array.t, BigUint64Array.t) union2 ->
        index:float -> value:bigint -> bigint)
      =
      fun ~typedArray:(x8164 : (BigInt64Array.t, BigUint64Array.t) union2) ->
        fun ~index:(x8167 : float) ->
          fun ~value:(x8168 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "xor"
                 [|(union2_to_js BigInt64Array.t_to_js BigUint64Array.t_to_js
                      x8164);(Ojs.float_to_js x8167);(bigint_to_js x8168)|])
  end
module PromiseRejectedResult =
  struct
    type t = [ `PromiseRejectedResult ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8170 : Ojs.t) -> t_of_js x8170
    and t_0_to_js : t_0 -> Ojs.t = fun (x8169 : t) -> t_to_js x8169
    type tags = [ `PromiseRejectedResult ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `PromiseRejectedResult ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8173 : Ojs.t) -> intf_of_js __tags_of_js x8173
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8171 : __tags intf) -> intf_to_js __tags_to_js x8171
    let (get_status : 'tags this -> [ `L_s83_rejected ]) =
      fun (x8175 : 'tags this) ->
        let x8177 = Ojs.get_prop_ascii (this_to_js Obj.magic x8175) "status" in
        match Ojs.string_of_js x8177 with
        | "rejected" -> `L_s83_rejected
        | _ -> assert false
    let (set_status : 'tags this -> [ `L_s83_rejected ] -> unit) =
      fun (x8178 : 'tags this) ->
        fun (x8179 : [ `L_s83_rejected ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8178) "status"
            (match x8179 with
             | `L_s83_rejected -> Ojs.string_to_js "rejected")
    let (get_reason : 'tags this -> any) =
      fun (x8181 : 'tags this) ->
        any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x8181) "reason")
    let (set_reason : 'tags this -> any -> unit) =
      fun (x8183 : 'tags this) ->
        fun (x8184 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8183) "reason"
            (any_to_js x8184)
    let cast_from = Obj.magic
  end
module PromiseFulfilledResult =
  struct
    type 'T t = [ `PromiseFulfilledResult of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x8188 : Ojs.t) -> t_of_js __T_of_js x8188
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x8186 : __T t) -> t_to_js __T_to_js x8186
    type 'T tags = [ `PromiseFulfilledResult of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `PromiseFulfilledResult of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x8192 : Ojs.t) -> intf_of_js __tags_of_js x8192
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x8190 : __tags intf) -> intf_to_js __tags_to_js x8190
    let (get_status : ('tags, 'T) this -> [ `L_s42_fulfilled ]) =
      fun (x8194 : ('tags, 'T) this) ->
        let x8197 =
          Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x8194) "status" in
        match Ojs.string_of_js x8197 with
        | "fulfilled" -> `L_s42_fulfilled
        | _ -> assert false
    let (set_status : ('tags, 'T) this -> [ `L_s42_fulfilled ] -> unit) =
      fun (x8198 : ('tags, 'T) this) ->
        fun (x8199 : [ `L_s42_fulfilled ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x8198) "status"
            (match x8199 with
             | `L_s42_fulfilled -> Ojs.string_to_js "fulfilled")
    let (get_value : ('tags, 'T) this -> 'T) =
      fun (x8202 : ('tags, 'T) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x8202) "value")
    let (set_value : ('tags, 'T) this -> 'T -> unit) =
      fun (x8205 : ('tags, 'T) this) ->
        fun (x8206 : 'T) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x8205) "value"
            (Obj.magic x8206)
    let cast_from = Obj.magic
  end
module PromiseSettledResult =
  struct
    type 'T t =
      [ `U_s42_fulfilled of 'T PromiseFulfilledResult.t 
      | `U_s83_rejected of PromiseRejectedResult.t ]
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x8213 : Ojs.t) ->
          let x8214 = x8213 in
          match Ojs.string_of_js (Ojs.get_prop_ascii x8214 "status") with
          | "fulfilled" ->
              `U_s42_fulfilled
                (PromiseFulfilledResult.t_of_js __T_of_js x8214)
          | "rejected" ->
              `U_s83_rejected (PromiseRejectedResult.t_of_js x8214)
          | _ -> assert false
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun
          (x8209 :
            [ `U_s42_fulfilled of __T PromiseFulfilledResult.t 
            | `U_s83_rejected of PromiseRejectedResult.t ])
          ->
          match x8209 with
          | `U_s42_fulfilled x8210 ->
              PromiseFulfilledResult.t_to_js __T_to_js x8210
          | `U_s83_rejected x8212 -> PromiseRejectedResult.t_to_js x8212
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x8218 : Ojs.t) -> t_of_js __T_of_js x8218
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x8216 : __T t) -> t_to_js __T_to_js x8216
  end
module Awaited =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x8221 : Ojs.t) -> any_of_js x8221
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x8220 : any) -> any_to_js x8220
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x8224 : Ojs.t) -> t_of_js __T_of_js x8224
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x8222 : __T t) -> t_to_js __T_to_js x8222
  end
module Promise =
  struct
    type 'T t = [ `Promise of 'T  | 'T PromiseLike.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x8228 : Ojs.t) -> t_of_js __T_of_js x8228
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x8226 : __T t) -> t_to_js __T_to_js x8226
    type 'T tags = [ `Promise of 'T  | 'T PromiseLike.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `Promise of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x8232 : Ojs.t) -> intf_of_js __tags_of_js x8232
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x8230 : __tags intf) -> intf_to_js __tags_to_js x8230
    let (finally :
      ('tags, 'T) this ->
        ?onfinally:(unit -> unit) or_null_or_undefined -> unit -> 'T t)
      =
      fun (x8238 : ('tags, 'T) this) ->
        fun ?onfinally:(x8234 : (unit -> unit) or_null_or_undefined option)
          ->
          fun () ->
            t_of_js Obj.magic
              (let x8241 = this_to_js Obj.magic Obj.magic x8238 in
               Ojs.call (Ojs.get_prop_ascii x8241 "finally") "apply"
                 [|x8241;((let x8235 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8234 with
                            | Some x8236 ->
                                ignore
                                  (Ojs.call x8235 "push"
                                     [|(or_null_or_undefined_to_js
                                          (fun (x8237 : unit -> unit) ->
                                             Ojs.fun_to_js 1
                                               (fun _ -> x8237 ())) x8236)|])
                            | None -> ());
                           x8235))|])
    let (then_ :
      ('tags, 'T) this ->
        ?onfulfilled:('T -> ('TResult1, 'TResult1 PromiseLike.t) union2)
          or_null_or_undefined ->
          ?onrejected:(any -> ('TResult2, 'TResult2 PromiseLike.t) union2)
            or_null_or_undefined -> unit -> ('TResult1, 'TResult2) union2 t)
      =
      fun (x8258 : ('tags, 'T) this) ->
        fun
          ?onfulfilled:(x8243 :
                         ('T -> ('TResult1, 'TResult1 PromiseLike.t) union2)
                           or_null_or_undefined option)
          ->
          fun
            ?onrejected:(x8244 :
                          (any -> ('TResult2, 'TResult2 PromiseLike.t) union2)
                            or_null_or_undefined option)
            ->
            fun () ->
              t_of_js
                (fun (x8262 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x8262)
                (let x8261 = this_to_js Obj.magic Obj.magic x8258 in
                 Ojs.call (Ojs.get_prop_ascii x8261 "then") "apply"
                   [|x8261;((let x8245 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8243 with
                              | Some x8252 ->
                                  ignore
                                    (Ojs.call x8245 "push"
                                       [|(or_null_or_undefined_to_js
                                            (fun
                                               (x8253 :
                                                 'T ->
                                                   ('TResult1,
                                                     'TResult1 PromiseLike.t)
                                                     union2)
                                               ->
                                               Ojs.fun_to_js 1
                                                 (fun (x8254 : Ojs.t) ->
                                                    union2_to_js Obj.magic
                                                      (fun
                                                         (x8256 :
                                                           'TResult1
                                                             PromiseLike.t)
                                                         ->
                                                         PromiseLike.t_to_js
                                                           Obj.magic x8256)
                                                      (x8253
                                                         (Obj.magic x8254))))
                                            x8252)|])
                              | None -> ());
                             (match x8244 with
                              | Some x8246 ->
                                  ignore
                                    (Ojs.call x8245 "push"
                                       [|(or_null_or_undefined_to_js
                                            (fun
                                               (x8247 :
                                                 any ->
                                                   ('TResult2,
                                                     'TResult2 PromiseLike.t)
                                                     union2)
                                               ->
                                               Ojs.fun_to_js 1
                                                 (fun (x8248 : Ojs.t) ->
                                                    union2_to_js Obj.magic
                                                      (fun
                                                         (x8250 :
                                                           'TResult2
                                                             PromiseLike.t)
                                                         ->
                                                         PromiseLike.t_to_js
                                                           Obj.magic x8250)
                                                      (x8247
                                                         (any_of_js x8248))))
                                            x8246)|])
                              | None -> ());
                             x8245))|])
    let (catch :
      ('tags, 'T) this ->
        ?onrejected:(any -> ('TResult, 'TResult PromiseLike.t) union2)
          or_null_or_undefined -> unit -> ('T, 'TResult) union2 t)
      =
      fun (x8273 : ('tags, 'T) this) ->
        fun
          ?onrejected:(x8265 :
                        (any -> ('TResult, 'TResult PromiseLike.t) union2)
                          or_null_or_undefined option)
          ->
          fun () ->
            t_of_js
              (fun (x8277 : Ojs.t) -> union2_of_js Obj.magic Obj.magic x8277)
              (let x8276 = this_to_js Obj.magic Obj.magic x8273 in
               Ojs.call (Ojs.get_prop_ascii x8276 "catch") "apply"
                 [|x8276;((let x8266 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8265 with
                            | Some x8267 ->
                                ignore
                                  (Ojs.call x8266 "push"
                                     [|(or_null_or_undefined_to_js
                                          (fun
                                             (x8268 :
                                               any ->
                                                 ('TResult,
                                                   'TResult PromiseLike.t)
                                                   union2)
                                             ->
                                             Ojs.fun_to_js 1
                                               (fun (x8269 : Ojs.t) ->
                                                  union2_to_js Obj.magic
                                                    (fun
                                                       (x8271 :
                                                         'TResult
                                                           PromiseLike.t)
                                                       ->
                                                       PromiseLike.t_to_js
                                                         Obj.magic x8271)
                                                    (x8268 (any_of_js x8269))))
                                          x8267)|])
                            | None -> ());
                           x8266))|])
    let (any :
      (('T, 'T PromiseLike.t) union2 Iterable.t,
        ('T, 'T PromiseLike.t) union2) or_array -> 'T t)
      =
      fun
        (x8280 :
          (('T, 'T PromiseLike.t) union2 Iterable.t,
            ('T, 'T PromiseLike.t) union2) or_array)
        ->
        t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(or_array_to_js
                  (fun (x8281 : ('T, 'T PromiseLike.t) union2 Iterable.t) ->
                     Iterable.t_to_js
                       (fun (x8282 : ('T, 'T PromiseLike.t) union2) ->
                          union2_to_js Obj.magic
                            (fun (x8284 : 'T PromiseLike.t) ->
                               PromiseLike.t_to_js Obj.magic x8284) x8282)
                       x8281)
                  (fun (x8286 : ('T, 'T PromiseLike.t) union2) ->
                     union2_to_js Obj.magic
                       (fun (x8288 : 'T PromiseLike.t) ->
                          PromiseLike.t_to_js Obj.magic x8288) x8286) x8280)|])
    let (allSettled : 'T -> any t) =
      fun (x8291 : 'T) ->
        t_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(Obj.magic x8291)|])
    let (allSettled' :
      ('T, 'T PromiseLike.t) union2 Iterable.t ->
        'T Awaited.t PromiseSettledResult.t list t)
      =
      fun (x8293 : ('T, 'T PromiseLike.t) union2 Iterable.t) ->
        t_of_js
          (fun (x8298 : Ojs.t) ->
             Ojs.list_of_js
               (fun (x8299 : Ojs.t) ->
                  PromiseSettledResult.t_of_js
                    (fun (x8300 : Ojs.t) -> Awaited.t_of_js Obj.magic x8300)
                    x8299) x8298)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(Iterable.t_to_js
                  (fun (x8294 : ('T, 'T PromiseLike.t) union2) ->
                     union2_to_js Obj.magic
                       (fun (x8296 : 'T PromiseLike.t) ->
                          PromiseLike.t_to_js Obj.magic x8296) x8294) x8293)|])
    let (any' : 'T -> any Awaited.t t) =
      fun (x8302 : 'T) ->
        t_of_js (fun (x8303 : Ojs.t) -> Awaited.t_of_js any_of_js x8303)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(Obj.magic x8302)|])
    let (any'' : ('T, 'T PromiseLike.t) union2 Iterable.t -> 'T Awaited.t t)
      =
      fun (x8305 : ('T, 'T PromiseLike.t) union2 Iterable.t) ->
        t_of_js (fun (x8310 : Ojs.t) -> Awaited.t_of_js Obj.magic x8310)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(Iterable.t_to_js
                  (fun (x8306 : ('T, 'T PromiseLike.t) union2) ->
                     union2_to_js Obj.magic
                       (fun (x8308 : 'T PromiseLike.t) ->
                          PromiseLike.t_to_js Obj.magic x8308) x8306) x8305)|])
    let (prototype : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Promise")
             "prototype")
    let (create :
      (resolve:(('T, 'T PromiseLike.t) union2 -> unit) ->
         reject:(?reason:any -> unit -> unit) -> unit)
        -> 'T t)
      =
      fun
        (x8313 :
          resolve:(('T, 'T PromiseLike.t) union2 -> unit) ->
            reject:(?reason:any -> unit -> unit) -> unit)
        ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Promise")
             [|(Ojs.fun_to_js 2
                  (fun (x8314 : Ojs.t) ->
                     fun (x8319 : Ojs.t) ->
                       x8313
                         ~resolve:(fun
                                     (x8315 : ('T, 'T PromiseLike.t) union2)
                                     ->
                                     ignore
                                       (Ojs.apply x8314
                                          [|(union2_to_js Obj.magic
                                               (fun
                                                  (x8317 : 'T PromiseLike.t)
                                                  ->
                                                  PromiseLike.t_to_js
                                                    Obj.magic x8317) x8315)|]))
                         ~reject:(fun ?reason:(x8320 : any option) ->
                                    fun () ->
                                      ignore
                                        (Ojs.call x8319 "apply"
                                           [|Ojs.null;((let x8321 =
                                                          Ojs.new_obj
                                                            (Ojs.get_prop_ascii
                                                               Ojs.global
                                                               "Array") 
                                                            [||] in
                                                        (match x8320 with
                                                         | Some x8322 ->
                                                             ignore
                                                               (Ojs.call
                                                                  x8321
                                                                  "push"
                                                                  [|(
                                                                    any_to_js
                                                                    x8322)|])
                                                         | None -> ());
                                                        x8321))|]))))|])
    let (all : 'T -> any t) =
      fun (x8324 : 'T) ->
        t_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(Obj.magic x8324)|])
    let (race : 'T -> any Awaited.t t) =
      fun (x8326 : 'T) ->
        t_of_js (fun (x8327 : Ojs.t) -> Awaited.t_of_js any_of_js x8327)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(Obj.magic x8326)|])
    let (reject : ?reason:any -> unit -> 'T t) =
      fun ?reason:(x8329 : any option) ->
        fun () ->
          t_of_js Obj.magic
            (let x8332 = Ojs.get_prop_ascii Ojs.global "Promise" in
             Ojs.call (Ojs.get_prop_ascii x8332 "reject") "apply"
               [|x8332;((let x8330 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         (match x8329 with
                          | Some x8331 ->
                              ignore
                                (Ojs.call x8330 "push" [|(any_to_js x8331)|])
                          | None -> ());
                         x8330))|])
    let (resolve : unit -> unit t) =
      fun () ->
        t_of_js Ojs.unit_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve" [||])
    let (resolve' : ('T, 'T PromiseLike.t) union2 -> 'T t) =
      fun (x8335 : ('T, 'T PromiseLike.t) union2) ->
        t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve"
             [|(union2_to_js Obj.magic
                  (fun (x8337 : 'T PromiseLike.t) ->
                     PromiseLike.t_to_js Obj.magic x8337) x8335)|])
    let (all' :
      ('T, 'T PromiseLike.t) union2 Iterable.t -> 'T Awaited.t list t) =
      fun (x8340 : ('T, 'T PromiseLike.t) union2 Iterable.t) ->
        t_of_js
          (fun (x8345 : Ojs.t) ->
             Ojs.list_of_js
               (fun (x8346 : Ojs.t) -> Awaited.t_of_js Obj.magic x8346) x8345)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(Iterable.t_to_js
                  (fun (x8341 : ('T, 'T PromiseLike.t) union2) ->
                     union2_to_js Obj.magic
                       (fun (x8343 : 'T PromiseLike.t) ->
                          PromiseLike.t_to_js Obj.magic x8343) x8341) x8340)|])
    let (race' : ('T, 'T PromiseLike.t) union2 Iterable.t -> 'T Awaited.t t)
      =
      fun (x8348 : ('T, 'T PromiseLike.t) union2 Iterable.t) ->
        t_of_js (fun (x8353 : Ojs.t) -> Awaited.t_of_js Obj.magic x8353)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(Iterable.t_to_js
                  (fun (x8349 : ('T, 'T PromiseLike.t) union2) ->
                     union2_to_js Obj.magic
                       (fun (x8351 : 'T PromiseLike.t) ->
                          PromiseLike.t_to_js Obj.magic x8351) x8349) x8348)|])
    let cast_from = Obj.magic
  end
module AsyncIterator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `AsyncIterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn, 'TNext) t_3 = ('T, 'TReturn, 'TNext) t
    let rec t_3_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t_3
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (__TNext_of_js : Ojs.t -> __TNext) ->
            fun (x8359 : Ojs.t) ->
              t_of_js __T_of_js __TReturn_of_js __TNext_of_js x8359
    and t_3_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t_3 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (__TNext_to_js : __TNext -> Ojs.t) ->
            fun (x8355 : (__T, __TReturn, __TNext) t) ->
              t_to_js __T_to_js __TReturn_to_js __TNext_to_js x8355
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, never or_undefined) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x8368 : Ojs.t) ->
            t_of_js __T_of_js __TReturn_of_js
              (fun (x8371 : Ojs.t) -> or_undefined_of_js never_of_js x8371)
              x8368
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x8363 : (__T, __TReturn, never or_undefined) t) ->
            t_to_js __T_to_js __TReturn_to_js
              (fun (x8366 : never or_undefined) ->
                 or_undefined_to_js never_to_js x8366) x8363
    type 'T t_1 = ('T, any, never or_undefined) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x8378 : Ojs.t) ->
          t_of_js __T_of_js any_of_js
            (fun (x8381 : Ojs.t) -> or_undefined_of_js never_of_js x8381)
            x8378
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x8373 : (__T, any, never or_undefined) t) ->
          t_to_js __T_to_js any_to_js
            (fun (x8376 : never or_undefined) ->
               or_undefined_to_js never_to_js x8376) x8373
    type ('T, 'TReturn, 'TNext) tags =
      [ `AsyncIterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn, 'TNext) tags_3 = ('T, 'TReturn, 'TNext) tags
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, never or_undefined) tags
    type 'T tags_1 = ('T, any, never or_undefined) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `AsyncIterator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
            fun (__TNext_of_js : Ojs.t -> __TNext) ->
              fun (x8385 : Ojs.t) -> intf_of_js __tags_of_js x8385
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
            fun (__TNext_to_js : __TNext -> Ojs.t) ->
              fun (x8383 : __tags intf) -> intf_to_js __tags_to_js x8383
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x8390 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x8387 : any list) ->
          Promise.t_of_js
            (fun (x8396 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x8396)
            (let x8395 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x8390 in
             Ojs.call (Ojs.get_prop_ascii x8395 "next") "apply"
               [|x8395;((let x8388 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x8389 : any) ->
                              ignore
                                (Ojs.call x8388 "push" [|(any_to_js x8389)|]))
                           x8387;
                         x8388))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?value:('TReturn, 'TReturn PromiseLike.t) union2 ->
          unit -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x8405 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?value:(x8399 : ('TReturn, 'TReturn PromiseLike.t) union2 option)
          ->
          fun () ->
            Promise.t_of_js
              (fun (x8411 : Ojs.t) ->
                 IteratorResult.t_of_js Obj.magic Obj.magic x8411)
              (let x8410 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x8405 in
               Ojs.call (Ojs.get_prop_ascii x8410 "return") "apply"
                 [|x8410;((let x8400 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8399 with
                            | Some x8401 ->
                                ignore
                                  (Ojs.call x8400 "push"
                                     [|(union2_to_js Obj.magic
                                          (fun
                                             (x8403 : 'TReturn PromiseLike.t)
                                             ->
                                             PromiseLike.t_to_js Obj.magic
                                               x8403) x8401)|])
                            | None -> ());
                           x8400))|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?e:any -> unit -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x8417 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?e:(x8414 : any option) ->
          fun () ->
            Promise.t_of_js
              (fun (x8423 : Ojs.t) ->
                 IteratorResult.t_of_js Obj.magic Obj.magic x8423)
              (let x8422 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x8417 in
               Ojs.call (Ojs.get_prop_ascii x8422 "throw") "apply"
                 [|x8422;((let x8415 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8414 with
                            | Some x8416 ->
                                ignore
                                  (Ojs.call x8415 "push"
                                     [|(any_to_js x8416)|])
                            | None -> ());
                           x8415))|])
    let cast_from = Obj.magic
  end
module AsyncIterableIterator =
  struct
    type 'T t =
      [ `AsyncIterableIterator of 'T 
      | `AsyncIterator of ('T * any * never or_undefined) ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x8428 : Ojs.t) -> t_of_js __T_of_js x8428
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x8426 : __T t) -> t_to_js __T_to_js x8426
    type 'T tags =
      [ `AsyncIterableIterator of 'T 
      | `AsyncIterator of ('T * any * never or_undefined) ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `AsyncIterableIterator of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x8432 : Ojs.t) -> intf_of_js __tags_of_js x8432
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x8430 : __tags intf) -> intf_to_js __tags_to_js x8430
    let cast_from = Obj.magic
  end
module AsyncIterable =
  struct
    type 'T t = [ `AsyncIterable of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x8436 : Ojs.t) -> t_of_js __T_of_js x8436
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x8434 : __T t) -> t_to_js __T_to_js x8434
    type 'T tags = [ `AsyncIterable of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `AsyncIterable of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x8440 : Ojs.t) -> intf_of_js __tags_of_js x8440
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x8438 : __tags intf) -> intf_to_js __tags_to_js x8438
    let cast_from = Obj.magic
  end
module AsyncGenerator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `AsyncGenerator of ('T * 'TReturn * 'TNext) 
      | `AsyncIterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn, 'TNext) t_3 = ('T, 'TReturn, 'TNext) t
    let rec t_3_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t_3
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (__TNext_of_js : Ojs.t -> __TNext) ->
            fun (x8446 : Ojs.t) ->
              t_of_js __T_of_js __TReturn_of_js __TNext_of_js x8446
    and t_3_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t_3 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (__TNext_to_js : __TNext -> Ojs.t) ->
            fun (x8442 : (__T, __TReturn, __TNext) t) ->
              t_to_js __T_to_js __TReturn_to_js __TNext_to_js x8442
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, unknown) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x8454 : Ojs.t) ->
            t_of_js __T_of_js __TReturn_of_js unknown_of_js x8454
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x8450 : (__T, __TReturn, unknown) t) ->
            t_to_js __T_to_js __TReturn_to_js unknown_to_js x8450
    type 'T t_1 = ('T, any, unknown) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x8462 : Ojs.t) ->
          t_of_js __T_of_js any_of_js unknown_of_js x8462
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x8458 : (__T, any, unknown) t) ->
          t_to_js __T_to_js any_to_js unknown_to_js x8458
    type t_0 = (unknown, any, unknown) t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x8470 : Ojs.t) ->
        t_of_js unknown_of_js any_of_js unknown_of_js x8470
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x8466 : (unknown, any, unknown) t) ->
        t_to_js unknown_to_js any_to_js unknown_to_js x8466
    type ('T, 'TReturn, 'TNext) tags =
      [ `AsyncGenerator of ('T * 'TReturn * 'TNext) 
      | `AsyncIterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn, 'TNext) tags_3 = ('T, 'TReturn, 'TNext) tags
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, unknown) tags
    type 'T tags_1 = ('T, any, unknown) tags
    type tags_0 = (unknown, any, unknown) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `AsyncGenerator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
            fun (__TNext_of_js : Ojs.t -> __TNext) ->
              fun (x8476 : Ojs.t) -> intf_of_js __tags_of_js x8476
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
            fun (__TNext_to_js : __TNext -> Ojs.t) ->
              fun (x8474 : __tags intf) -> intf_to_js __tags_to_js x8474
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x8481 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x8478 : any list) ->
          Promise.t_of_js
            (fun (x8487 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x8487)
            (let x8486 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x8481 in
             Ojs.call (Ojs.get_prop_ascii x8486 "next") "apply"
               [|x8486;((let x8479 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x8480 : any) ->
                              ignore
                                (Ojs.call x8479 "push" [|(any_to_js x8480)|]))
                           x8478;
                         x8479))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        value:('TReturn, 'TReturn PromiseLike.t) union2 ->
          ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x8494 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~value:(x8490 : ('TReturn, 'TReturn PromiseLike.t) union2) ->
          Promise.t_of_js
            (fun (x8499 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x8499)
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x8494)
               "return"
               [|(union2_to_js Obj.magic
                    (fun (x8492 : 'TReturn PromiseLike.t) ->
                       PromiseLike.t_to_js Obj.magic x8492) x8490)|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        e:any -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x8503 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~e:(x8502 : any) ->
          Promise.t_of_js
            (fun (x8508 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x8508)
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x8503)
               "throw" [|(any_to_js x8502)|])
    let cast_from = Obj.magic
  end
module AsyncGeneratorFunction =
  struct
    type t = [ `AsyncGeneratorFunction ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8512 : Ojs.t) -> t_of_js x8512
    and t_0_to_js : t_0 -> Ojs.t = fun (x8511 : t) -> t_to_js x8511
    type tags = [ `AsyncGeneratorFunction ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `AsyncGeneratorFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8515 : Ojs.t) -> intf_of_js __tags_of_js x8515
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8513 : __tags intf) -> intf_to_js __tags_to_js x8513
    let (create : 'tags this -> args:any list -> AsyncGenerator.t_0) =
      fun (x8520 : 'tags this) ->
        fun ~args:(x8517 : any list) ->
          AsyncGenerator.t_0_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x8520)
               (let x8518 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x8519 : any) ->
                     ignore (Ojs.call x8518 "push" [|(any_to_js x8519)|]))
                  x8517;
                x8518))
    let (apply : 'tags this -> args:any list -> AsyncGenerator.t_0) =
      fun (x8525 : 'tags this) ->
        fun ~args:(x8522 : any list) ->
          AsyncGenerator.t_0_of_js
            (Ojs.call (this_to_js Obj.magic x8525) "apply"
               [|Ojs.null;((let x8523 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x8524 : any) ->
                                 ignore
                                   (Ojs.call x8523 "push"
                                      [|(any_to_js x8524)|])) x8522;
                            x8523))|])
    let (get_length : 'tags this -> float) =
      fun (x8527 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8527) "length")
    let (get_name : 'tags this -> string) =
      fun (x8529 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8529) "name")
    let (get_prototype : 'tags this -> AsyncGenerator.t_0) =
      fun (x8531 : 'tags this) ->
        AsyncGenerator.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8531) "prototype")
    let cast_from = Obj.magic
  end
module AsyncGeneratorFunctionConstructor =
  struct
    type t = [ `AsyncGeneratorFunctionConstructor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8534 : Ojs.t) -> t_of_js x8534
    and t_0_to_js : t_0 -> Ojs.t = fun (x8533 : t) -> t_to_js x8533
    type tags = [ `AsyncGeneratorFunctionConstructor ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `AsyncGeneratorFunctionConstructor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8537 : Ojs.t) -> intf_of_js __tags_of_js x8537
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8535 : __tags intf) -> intf_to_js __tags_to_js x8535
    let (create : 'tags this -> args:string list -> AsyncGeneratorFunction.t)
      =
      fun (x8542 : 'tags this) ->
        fun ~args:(x8539 : string list) ->
          AsyncGeneratorFunction.t_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x8542)
               (let x8540 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x8541 : string) ->
                     ignore
                       (Ojs.call x8540 "push" [|(Ojs.string_to_js x8541)|]))
                  x8539;
                x8540))
    let (apply : 'tags this -> args:string list -> AsyncGeneratorFunction.t)
      =
      fun (x8547 : 'tags this) ->
        fun ~args:(x8544 : string list) ->
          AsyncGeneratorFunction.t_of_js
            (Ojs.call (this_to_js Obj.magic x8547) "apply"
               [|Ojs.null;((let x8545 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x8546 : string) ->
                                 ignore
                                   (Ojs.call x8545 "push"
                                      [|(Ojs.string_to_js x8546)|])) x8544;
                            x8545))|])
    let (get_length : 'tags this -> float) =
      fun (x8549 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8549) "length")
    let (get_name : 'tags this -> string) =
      fun (x8551 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8551) "name")
    let (get_prototype : 'tags this -> AsyncGeneratorFunction.t) =
      fun (x8553 : 'tags this) ->
        AsyncGeneratorFunction.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8553) "prototype")
    let cast_from = Obj.magic
  end
module ArrayBufferView =
  struct
    type t = [ `ArrayBufferView ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8556 : Ojs.t) -> t_of_js x8556
    and t_0_to_js : t_0 -> Ojs.t = fun (x8555 : t) -> t_to_js x8555
    type tags = [ `ArrayBufferView ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ArrayBufferView ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8559 : Ojs.t) -> intf_of_js __tags_of_js x8559
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8557 : __tags intf) -> intf_to_js __tags_to_js x8557
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x8561 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8561) "buffer")
    let (set_buffer : 'tags this -> ArrayBufferLike.t -> unit) =
      fun (x8563 : 'tags this) ->
        fun (x8564 : ArrayBufferLike.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8563) "buffer"
            (ArrayBufferLike.t_to_js x8564)
    let (get_byteLength : 'tags this -> float) =
      fun (x8566 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8566) "byteLength")
    let (set_byteLength : 'tags this -> float -> unit) =
      fun (x8568 : 'tags this) ->
        fun (x8569 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8568) "byteLength"
            (Ojs.float_to_js x8569)
    let (get_byteOffset : 'tags this -> float) =
      fun (x8571 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8571) "byteOffset")
    let (set_byteOffset : 'tags this -> float -> unit) =
      fun (x8573 : 'tags this) ->
        fun (x8574 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8573) "byteOffset"
            (Ojs.float_to_js x8574)
    let cast_from = Obj.magic
  end
module ArrayBufferTypes =
  struct
    type t = [ `ArrayBufferTypes ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8577 : Ojs.t) -> t_of_js x8577
    and t_0_to_js : t_0 -> Ojs.t = fun (x8576 : t) -> t_to_js x8576
    type tags = [ `ArrayBufferTypes ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ArrayBufferTypes ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8580 : Ojs.t) -> intf_of_js __tags_of_js x8580
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8578 : __tags intf) -> intf_to_js __tags_to_js x8578
    let (get_SharedArrayBuffer : 'tags this -> SharedArrayBuffer.t) =
      fun (x8582 : 'tags this) ->
        SharedArrayBuffer.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8582)
             "SharedArrayBuffer")
    let (set_SharedArrayBuffer : 'tags this -> SharedArrayBuffer.t -> unit) =
      fun (x8584 : 'tags this) ->
        fun (x8585 : SharedArrayBuffer.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8584) "SharedArrayBuffer"
            (SharedArrayBuffer.t_to_js x8585)
    let (get_ArrayBuffer : 'tags this -> ArrayBuffer.t) =
      fun (x8587 : 'tags this) ->
        ArrayBuffer.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8587) "ArrayBuffer")
    let (set_ArrayBuffer : 'tags this -> ArrayBuffer.t -> unit) =
      fun (x8589 : 'tags this) ->
        fun (x8590 : ArrayBuffer.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8589) "ArrayBuffer"
            (ArrayBuffer.t_to_js x8590)
    let cast_from = Obj.magic
  end
module AggregateError =
  struct
    type t = [ `AggregateError  | `Error ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8593 : Ojs.t) -> t_of_js x8593
    and t_0_to_js : t_0 -> Ojs.t = fun (x8592 : t) -> t_to_js x8592
    type tags = [ `AggregateError  | `Error ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `AggregateError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8596 : Ojs.t) -> intf_of_js __tags_of_js x8596
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8594 : __tags intf) -> intf_to_js __tags_to_js x8594
    let (get_errors : 'tags this -> any list) =
      fun (x8598 : 'tags this) ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8598) "errors")
    let (set_errors : 'tags this -> any list -> unit) =
      fun (x8601 : 'tags this) ->
        fun (x8602 : any list) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8601) "errors"
            (Ojs.list_to_js any_to_js x8602)
    let (get_errors' : 'tags this -> any list) =
      fun (x8605 : 'tags this) ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8605) "errors")
    let (set_errors' : 'tags this -> any list -> unit) =
      fun (x8608 : 'tags this) ->
        fun (x8609 : any list) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8608) "errors"
            (Ojs.list_to_js any_to_js x8609)
    let (create : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x8612 : any Iterable.t) ->
        fun ?message:(x8613 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 (let x8614 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x8614 "push"
                       [|(Iterable.t_to_js any_to_js x8612)|]);
                  (match x8613 with
                   | Some x8615 ->
                       ignore
                         (Ojs.call x8614 "push" [|(Ojs.string_to_js x8615)|])
                   | None -> ());
                  x8614))
    let (invoke : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x8617 : any Iterable.t) ->
        fun ?message:(x8618 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 "apply"
                 [|Ojs.null;((let x8619 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x8619 "push"
                                   [|(Iterable.t_to_js any_to_js x8617)|]);
                              (match x8618 with
                               | Some x8620 ->
                                   ignore
                                     (Ojs.call x8619 "push"
                                        [|(Ojs.string_to_js x8620)|])
                               | None -> ());
                              x8619))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "AggregateError") "prototype")
    let (create' : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x8622 : any Iterable.t) ->
        fun ?message:(x8623 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 (let x8624 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x8624 "push"
                       [|(Iterable.t_to_js any_to_js x8622)|]);
                  (match x8623 with
                   | Some x8625 ->
                       ignore
                         (Ojs.call x8624 "push" [|(Ojs.string_to_js x8625)|])
                   | None -> ());
                  x8624))
    let (invoke' : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x8627 : any Iterable.t) ->
        fun ?message:(x8628 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 "apply"
                 [|Ojs.null;((let x8629 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x8629 "push"
                                   [|(Iterable.t_to_js any_to_js x8627)|]);
                              (match x8628 with
                               | Some x8630 ->
                                   ignore
                                     (Ojs.call x8629 "push"
                                        [|(Ojs.string_to_js x8630)|])
                               | None -> ());
                              x8629))|])
    let (prototype' : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "AggregateError") "prototype")
    let cast_from = Obj.magic
  end
let (nan : unit -> float) =
  fun () -> Ojs.float_of_js (Ojs.get_prop_ascii Ojs.global "NaN")
let (infinity : unit -> float) =
  fun () -> Ojs.float_of_js (Ojs.get_prop_ascii Ojs.global "Infinity")
let (eval : string -> any) =
  fun (x8632 : string) ->
    any_of_js (Ojs.call Ojs.global "eval" [|(Ojs.string_to_js x8632)|])
let (parseInt : string:string -> ?radix:float -> unit -> float) =
  fun ~string:(x8633 : string) ->
    fun ?radix:(x8634 : float option) ->
      fun () ->
        Ojs.float_of_js
          (let x8637 = Ojs.global in
           Ojs.call (Ojs.get_prop_ascii x8637 "parseInt") "apply"
             [|x8637;((let x8635 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       ignore
                         (Ojs.call x8635 "push" [|(Ojs.string_to_js x8633)|]);
                       (match x8634 with
                        | Some x8636 ->
                            ignore
                              (Ojs.call x8635 "push"
                                 [|(Ojs.float_to_js x8636)|])
                        | None -> ());
                       x8635))|])
let (parseFloat : string -> float) =
  fun (x8638 : string) ->
    Ojs.float_of_js
      (Ojs.call Ojs.global "parseFloat" [|(Ojs.string_to_js x8638)|])
let (isNaN : float -> bool) =
  fun (x8639 : float) ->
    Ojs.bool_of_js (Ojs.call Ojs.global "isNaN" [|(Ojs.float_to_js x8639)|])
let (isFinite : float -> bool) =
  fun (x8640 : float) ->
    Ojs.bool_of_js
      (Ojs.call Ojs.global "isFinite" [|(Ojs.float_to_js x8640)|])
let (decodeURI : string -> string) =
  fun (x8641 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "decodeURI" [|(Ojs.string_to_js x8641)|])
let (decodeURIComponent : string -> string) =
  fun (x8642 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "decodeURIComponent" [|(Ojs.string_to_js x8642)|])
let (encodeURI : string -> string) =
  fun (x8643 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "encodeURI" [|(Ojs.string_to_js x8643)|])
let (encodeURIComponent : bool or_string or_number -> string) =
  fun (x8644 : bool or_string or_number) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "encodeURIComponent"
         [|(or_number_to_js
              (fun (x8645 : bool or_string) ->
                 or_string_to_js Ojs.bool_to_js x8645) x8644)|])
let (escape : string -> string) =
  fun (x8647 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "escape" [|(Ojs.string_to_js x8647)|])
let (unescape : string -> string) =
  fun (x8648 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "unescape" [|(Ojs.string_to_js x8648)|])
let (proxy : unit -> ProxyConstructor.t) =
  fun () -> ProxyConstructor.t_of_js (Ojs.get_prop_ascii Ojs.global "Proxy")
