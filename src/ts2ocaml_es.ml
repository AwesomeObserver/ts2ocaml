[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Ts2ocaml_min
module IteratorYieldResult =
  struct
    type 'TYield t = [ `IteratorYieldResult of 'TYield ] intf
    let rec t_of_js : 'TYield . (Ojs.t -> 'TYield) -> Ojs.t -> 'TYield t =
      fun _TYield -> Obj.magic
    and t_to_js : 'TYield . ('TYield -> Ojs.t) -> 'TYield t -> Ojs.t =
      fun _TYield -> Obj.magic
    type 'TYield t_1 = 'TYield t
    let rec t_1_of_js : 'TYield . (Ojs.t -> 'TYield) -> Ojs.t -> 'TYield t_1
      = fun (type __TYield) ->
      fun (__TYield_of_js : Ojs.t -> __TYield) ->
        fun (x3 : Ojs.t) -> t_of_js __TYield_of_js x3
    and t_1_to_js : 'TYield . ('TYield -> Ojs.t) -> 'TYield t_1 -> Ojs.t =
      fun (type __TYield) ->
      fun (__TYield_to_js : __TYield -> Ojs.t) ->
        fun (x1 : __TYield t) -> t_to_js __TYield_to_js x1
    type 'TYield tags = [ `IteratorYieldResult of 'TYield ]
    type 'TYield tags_1 = 'TYield tags
    type ('tags, 'TYield) this =
      'tags intf constraint 'tags = [> `IteratorYieldResult of 'TYield ]
    let rec this_of_js :
      'tags 'TYield .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'TYield) -> Ojs.t -> ('tags, 'TYield) this
      = fun (type __tags) -> fun (type __TYield) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__TYield_of_js : Ojs.t -> __TYield) ->
          fun (x7 : Ojs.t) -> intf_of_js __tags_of_js x7
    and this_to_js :
      'tags 'TYield .
        ('tags -> Ojs.t) ->
          ('TYield -> Ojs.t) -> ('tags, 'TYield) this -> Ojs.t
      = fun (type __tags) -> fun (type __TYield) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__TYield_to_js : __TYield -> Ojs.t) ->
          fun (x5 : __tags intf) -> intf_to_js __tags_to_js x5
    let (get_done : ('tags, 'TYield) this -> [ `L_b_false ]) =
      fun (x9 : ('tags, 'TYield) this) ->
        let x12 =
          Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x9) "done" in
        match Ojs.bool_of_js x12 with
        | false -> `L_b_false
        | _ -> assert false
    let (set_done : ('tags, 'TYield) this -> [ `L_b_false ] -> unit) =
      fun (x13 : ('tags, 'TYield) this) ->
        fun (x14 : [ `L_b_false ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x13) "done"
            (match x14 with | `L_b_false -> Ojs.bool_to_js false)
    let (get_value : ('tags, 'TYield) this -> 'TYield) =
      fun (x17 : ('tags, 'TYield) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x17) "value")
    let (set_value : ('tags, 'TYield) this -> 'TYield -> unit) =
      fun (x20 : ('tags, 'TYield) this) ->
        fun (x21 : 'TYield) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x20) "value"
            (Obj.magic x21)
    let cast_from = Obj.magic
  end
module IteratorReturnResult =
  struct
    type 'TReturn t = [ `IteratorReturnResult of 'TReturn ] intf
    let rec t_of_js : 'TReturn . (Ojs.t -> 'TReturn) -> Ojs.t -> 'TReturn t =
      fun _TReturn -> Obj.magic
    and t_to_js : 'TReturn . ('TReturn -> Ojs.t) -> 'TReturn t -> Ojs.t =
      fun _TReturn -> Obj.magic
    type 'TReturn t_1 = 'TReturn t
    let rec t_1_of_js :
      'TReturn . (Ojs.t -> 'TReturn) -> Ojs.t -> 'TReturn t_1 = fun (type
      __TReturn) ->
      fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
        fun (x26 : Ojs.t) -> t_of_js __TReturn_of_js x26
    and t_1_to_js : 'TReturn . ('TReturn -> Ojs.t) -> 'TReturn t_1 -> Ojs.t =
      fun (type __TReturn) ->
      fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
        fun (x24 : __TReturn t) -> t_to_js __TReturn_to_js x24
    type 'TReturn tags = [ `IteratorReturnResult of 'TReturn ]
    type 'TReturn tags_1 = 'TReturn tags
    type ('tags, 'TReturn) this =
      'tags intf constraint 'tags = [> `IteratorReturnResult of 'TReturn ]
    let rec this_of_js :
      'tags 'TReturn .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'TReturn) -> Ojs.t -> ('tags, 'TReturn) this
      = fun (type __tags) -> fun (type __TReturn) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x30 : Ojs.t) -> intf_of_js __tags_of_js x30
    and this_to_js :
      'tags 'TReturn .
        ('tags -> Ojs.t) ->
          ('TReturn -> Ojs.t) -> ('tags, 'TReturn) this -> Ojs.t
      = fun (type __tags) -> fun (type __TReturn) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x28 : __tags intf) -> intf_to_js __tags_to_js x28
    let (get_done : ('tags, 'TReturn) this -> [ `L_b_true ]) =
      fun (x32 : ('tags, 'TReturn) this) ->
        let x35 =
          Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x32) "done" in
        match Ojs.bool_of_js x35 with | true -> `L_b_true | _ -> assert false
    let (set_done : ('tags, 'TReturn) this -> [ `L_b_true ] -> unit) =
      fun (x36 : ('tags, 'TReturn) this) ->
        fun (x37 : [ `L_b_true ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x36) "done"
            (match x37 with | `L_b_true -> Ojs.bool_to_js true)
    let (get_value : ('tags, 'TReturn) this -> 'TReturn) =
      fun (x40 : ('tags, 'TReturn) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x40) "value")
    let (set_value : ('tags, 'TReturn) this -> 'TReturn -> unit) =
      fun (x43 : ('tags, 'TReturn) this) ->
        fun (x44 : 'TReturn) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x43) "value"
            (Obj.magic x44)
    let cast_from = Obj.magic
  end
module IteratorResult =
  struct
    type ('T, 'TReturn) t =
      [ `U_b_false of 'T IteratorYieldResult.t 
      | `U_b_true of 'TReturn IteratorReturnResult.t ]
    let rec t_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x52 : Ojs.t) ->
            let x53 = x52 in
            match Ojs.bool_of_js (Ojs.get_prop_ascii x53 "done") with
            | false -> `U_b_false (IteratorYieldResult.t_of_js __T_of_js x53)
            | true ->
                `U_b_true (IteratorReturnResult.t_of_js __TReturn_of_js x53)
    and t_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun
            (x47 :
              [ `U_b_false of __T IteratorYieldResult.t 
              | `U_b_true of __TReturn IteratorReturnResult.t ])
            ->
            match x47 with
            | `U_b_false x48 -> IteratorYieldResult.t_to_js __T_to_js x48
            | `U_b_true x50 ->
                IteratorReturnResult.t_to_js __TReturn_to_js x50
    type ('T, 'TReturn) t_2 = ('T, 'TReturn) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x59 : Ojs.t) -> t_of_js __T_of_js __TReturn_of_js x59
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x56 : (__T, __TReturn) t) ->
            t_to_js __T_to_js __TReturn_to_js x56
    type 'T t_1 = ('T, any) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x65 : Ojs.t) -> t_of_js __T_of_js any_of_js x65
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x62 : (__T, any) t) -> t_to_js __T_to_js any_to_js x62
  end
module Iterator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `Iterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn, 'TNext) t_3 = ('T, 'TReturn, 'TNext) t
    let rec t_3_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t_3
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (__TNext_of_js : Ojs.t -> __TNext) ->
            fun (x72 : Ojs.t) ->
              t_of_js __T_of_js __TReturn_of_js __TNext_of_js x72
    and t_3_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t_3 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (__TNext_to_js : __TNext -> Ojs.t) ->
            fun (x68 : (__T, __TReturn, __TNext) t) ->
              t_to_js __T_to_js __TReturn_to_js __TNext_to_js x68
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, never or_undefined) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x81 : Ojs.t) ->
            t_of_js __T_of_js __TReturn_of_js
              (fun (x84 : Ojs.t) -> or_undefined_of_js never_of_js x84) x81
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x76 : (__T, __TReturn, never or_undefined) t) ->
            t_to_js __T_to_js __TReturn_to_js
              (fun (x79 : never or_undefined) ->
                 or_undefined_to_js never_to_js x79) x76
    type 'T t_1 = ('T, any, never or_undefined) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x91 : Ojs.t) ->
          t_of_js __T_of_js any_of_js
            (fun (x94 : Ojs.t) -> or_undefined_of_js never_of_js x94) x91
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x86 : (__T, any, never or_undefined) t) ->
          t_to_js __T_to_js any_to_js
            (fun (x89 : never or_undefined) ->
               or_undefined_to_js never_to_js x89) x86
    type ('T, 'TReturn, 'TNext) tags =
      [ `Iterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn, 'TNext) tags_3 = ('T, 'TReturn, 'TNext) tags
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, never or_undefined) tags
    type 'T tags_1 = ('T, any, never or_undefined) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `Iterator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
            fun (__TNext_of_js : Ojs.t -> __TNext) ->
              fun (x98 : Ojs.t) -> intf_of_js __tags_of_js x98
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
            fun (__TNext_to_js : __TNext -> Ojs.t) ->
              fun (x96 : __tags intf) -> intf_to_js __tags_to_js x96
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x103 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x100 : any list) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (let x108 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x103 in
             Ojs.call (Ojs.get_prop_ascii x108 "next") "apply"
               [|x108;((let x101 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x102 : any) ->
                             ignore
                               (Ojs.call x101 "push" [|(any_to_js x102)|]))
                          x100;
                        x101))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?value:'TReturn -> unit -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x114 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?value:(x111 : 'TReturn option) ->
          fun () ->
            IteratorResult.t_of_js Obj.magic Obj.magic
              (let x119 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x114 in
               Ojs.call (Ojs.get_prop_ascii x119 "return") "apply"
                 [|x119;((let x112 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x111 with
                           | Some x113 ->
                               ignore
                                 (Ojs.call x112 "push" [|(Obj.magic x113)|])
                           | None -> ());
                          x112))|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?e:any -> unit -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x125 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?e:(x122 : any option) ->
          fun () ->
            IteratorResult.t_of_js Obj.magic Obj.magic
              (let x130 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x125 in
               Ojs.call (Ojs.get_prop_ascii x130 "throw") "apply"
                 [|x130;((let x123 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x122 with
                           | Some x124 ->
                               ignore
                                 (Ojs.call x123 "push" [|(any_to_js x124)|])
                           | None -> ());
                          x123))|])
    let cast_from = Obj.magic
  end
module Iterable =
  struct
    type 'T t = [ `Iterable of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x135 : Ojs.t) -> t_of_js __T_of_js x135
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x133 : __T t) -> t_to_js __T_to_js x133
    type 'T tags = [ `Iterable of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `Iterable of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x139 : Ojs.t) -> intf_of_js __tags_of_js x139
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x137 : __tags intf) -> intf_to_js __tags_to_js x137
    let cast_from = Obj.magic
  end
module WeakSet =
  struct
    type 'T t = [ `WeakSet of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x143 : Ojs.t) -> t_of_js __T_of_js x143
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x141 : __T t) -> t_to_js __T_to_js x141
    type 'T tags = [ `WeakSet of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `WeakSet of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x147 : Ojs.t) -> intf_of_js __tags_of_js x147
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x145 : __tags intf) -> intf_to_js __tags_to_js x145
    let (add : ('tags, 'T) this -> value:'T -> ('tags, 'T) this) =
      fun (x150 : ('tags, 'T) this) ->
        fun ~value:(x149 : 'T) ->
          this_of_js Obj.magic Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x150) "add"
               [|(Obj.magic x149)|])
    let (delete : ('tags, 'T) this -> value:'T -> bool) =
      fun (x156 : ('tags, 'T) this) ->
        fun ~value:(x155 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x156) "delete"
               [|(Obj.magic x155)|])
    let (has : ('tags, 'T) this -> value:'T -> bool) =
      fun (x160 : ('tags, 'T) this) ->
        fun ~value:(x159 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x160) "has"
               [|(Obj.magic x159)|])
    let (create : ?values:'T list or_null -> unit -> 'T t) =
      fun ?values:(x163 : 'T list or_null option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakSet")
               (let x164 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x163 with
                 | Some x165 ->
                     ignore
                       (Ojs.call x164 "push"
                          [|(or_null_to_js
                               (fun (x166 : 'T list) ->
                                  Ojs.list_to_js Obj.magic x166) x165)|])
                 | None -> ());
                x164))
    let (prototype : unit -> untyped_object t) =
      fun () ->
        t_of_js untyped_object_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakSet")
             "prototype")
    let (create' : 'T Iterable.t -> 'T t) =
      fun (x170 : 'T Iterable.t) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakSet")
             [|(Iterable.t_to_js Obj.magic x170)|])
    let cast_from = Obj.magic
  end
module WeakRef =
  struct
    type 'T t = [ `WeakRef of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x175 : Ojs.t) -> t_of_js __T_of_js x175
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x173 : __T t) -> t_to_js __T_to_js x173
    type 'T tags = [ `WeakRef of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `WeakRef of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x179 : Ojs.t) -> intf_of_js __tags_of_js x179
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x177 : __tags intf) -> intf_to_js __tags_to_js x177
    let (deref : ('tags, 'T) this -> 'T or_undefined) =
      fun (x181 : ('tags, 'T) this) ->
        or_undefined_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x181) "deref" [||])
    let (deref' : ('tags, 'T) this -> 'T or_undefined) =
      fun (x185 : ('tags, 'T) this) ->
        or_undefined_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x185) "deref" [||])
    let (prototype : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakRef")
             "prototype")
    let (create : ?target:'T -> unit -> 'T t) =
      fun ?target:(x190 : 'T option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakRef")
               (let x191 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x190 with
                 | Some x192 ->
                     ignore (Ojs.call x191 "push" [|(Obj.magic x192)|])
                 | None -> ());
                x191))
    let (prototype' : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakRef")
             "prototype")
    let (create' : 'T -> 'T t) =
      fun (x195 : 'T) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakRef")
             [|(Obj.magic x195)|])
    let cast_from = Obj.magic
  end
module WeakMap =
  struct
    type ('K, 'V) t = [ `WeakMap of ('K * 'V) ] intf
    let rec t_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t =
      fun _K -> fun _V -> Obj.magic
    and t_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t -> Ojs.t =
      fun _K -> fun _V -> Obj.magic
    type ('K, 'V) t_2 = ('K, 'V) t
    let rec t_2_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t_2 = fun
      (type __K) -> fun (type __V) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__V_of_js : Ojs.t -> __V) ->
          fun (x200 : Ojs.t) -> t_of_js __K_of_js __V_of_js x200
    and t_2_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t_2 -> Ojs.t = fun
      (type __K) -> fun (type __V) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__V_to_js : __V -> Ojs.t) ->
          fun (x197 : (__K, __V) t) -> t_to_js __K_to_js __V_to_js x197
    type ('K, 'V) tags = [ `WeakMap of ('K * 'V) ]
    type ('K, 'V) tags_2 = ('K, 'V) tags
    type ('tags, 'K, 'V) this =
      'tags intf constraint 'tags = [> `WeakMap of ('K * 'V) ]
    let rec this_of_js :
      'tags 'K 'V .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('tags, 'K, 'V) this
      = fun (type __tags) -> fun (type __K) -> fun (type __V) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (__V_of_js : Ojs.t -> __V) ->
            fun (x205 : Ojs.t) -> intf_of_js __tags_of_js x205
    and this_to_js :
      'tags 'K 'V .
        ('tags -> Ojs.t) ->
          ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('tags, 'K, 'V) this -> Ojs.t
      = fun (type __tags) -> fun (type __K) -> fun (type __V) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (__V_to_js : __V -> Ojs.t) ->
            fun (x203 : __tags intf) -> intf_to_js __tags_to_js x203
    let (delete : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x208 : ('tags, 'K, 'V) this) ->
        fun ~key:(x207 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x208)
               "delete" [|(Obj.magic x207)|])
    let (get_ : ('tags, 'K, 'V) this -> key:'K -> 'V or_undefined) =
      fun (x213 : ('tags, 'K, 'V) this) ->
        fun ~key:(x212 : 'K) ->
          or_undefined_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x213) "get"
               [|(Obj.magic x212)|])
    let (has : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x219 : ('tags, 'K, 'V) this) ->
        fun ~key:(x218 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x219) "has"
               [|(Obj.magic x218)|])
    let (set_ :
      ('tags, 'K, 'V) this -> key:'K -> value:'V -> ('tags, 'K, 'V) this) =
      fun (x225 : ('tags, 'K, 'V) this) ->
        fun ~key:(x223 : 'K) ->
          fun ~value:(x224 : 'V) ->
            this_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x225) "set"
                 [|(Obj.magic x223);(Obj.magic x224)|])
    let (create : ?entries:('K * 'V) list or_null -> unit -> ('K, 'V) t) =
      fun ?entries:(x232 : ('K * 'V) list or_null option) ->
        fun () ->
          t_of_js Obj.magic Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakMap")
               (let x233 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x232 with
                 | Some x234 ->
                     ignore
                       (Ojs.call x233 "push"
                          [|(or_null_to_js
                               (fun (x235 : ('K * 'V) list) ->
                                  Ojs.list_to_js
                                    (fun (x236 : ('K * 'V)) ->
                                       let (x237, x238) = x236 in
                                       let x239 = Ojs.array_make 2 in
                                       Ojs.array_set x239 0 (Obj.magic x237);
                                       Ojs.array_set x239 1 (Obj.magic x238);
                                       x239) x235) x234)|])
                 | None -> ());
                x233))
    let (prototype : unit -> (untyped_object, any) t) =
      fun () ->
        t_of_js untyped_object_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakMap")
             "prototype")
    let (create' : ('K * 'V) Iterable.t -> ('K, 'V) t) =
      fun (x244 : ('K * 'V) Iterable.t) ->
        t_of_js Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakMap")
             [|(Iterable.t_to_js
                  (fun (x245 : ('K * 'V)) ->
                     let (x246, x247) = x245 in
                     let x248 = Ojs.array_make 2 in
                     Ojs.array_set x248 0 (Obj.magic x246);
                     Ojs.array_set x248 1 (Obj.magic x247);
                     x248) x244)|])
    let cast_from = Obj.magic
  end
module Uppercase =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t = fun (type __S) ->
      fun (__S_of_js : Ojs.t -> __S) -> fun (x252 : Ojs.t) -> x252
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) -> fun (x251 : Ojs.t) -> x251
    type 'S t_1 = 'S t
    let rec t_1_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t_1 = fun (type
      __S) ->
      fun (__S_of_js : Ojs.t -> __S) ->
        fun (x255 : Ojs.t) -> t_of_js __S_of_js x255
    and t_1_to_js : 'S . ('S -> Ojs.t) -> 'S t_1 -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) ->
        fun (x253 : __S t) -> t_to_js __S_to_js x253
  end
module Uncapitalize =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t = fun (type __S) ->
      fun (__S_of_js : Ojs.t -> __S) -> fun (x258 : Ojs.t) -> x258
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) -> fun (x257 : Ojs.t) -> x257
    type 'S t_1 = 'S t
    let rec t_1_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t_1 = fun (type
      __S) ->
      fun (__S_of_js : Ojs.t -> __S) ->
        fun (x261 : Ojs.t) -> t_of_js __S_of_js x261
    and t_1_to_js : 'S . ('S -> Ojs.t) -> 'S t_1 -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) ->
        fun (x259 : __S t) -> t_to_js __S_to_js x259
  end
module SharedArrayBuffer =
  struct
    type t = [ `SharedArrayBuffer ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x264 : Ojs.t) -> t_of_js x264
    and t_0_to_js : t_0 -> Ojs.t = fun (x263 : t) -> t_to_js x263
    type tags = [ `SharedArrayBuffer ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `SharedArrayBuffer ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x267 : Ojs.t) -> intf_of_js __tags_of_js x267
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x265 : __tags intf) -> intf_to_js __tags_to_js x265
    let (get_byteLength : 'tags this -> float) =
      fun (x269 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x269) "byteLength")
    let (slice : 'tags this -> begin_:float -> ?end_:float -> unit -> t) =
      fun (x275 : 'tags this) ->
        fun ~begin_:(x271 : float) ->
          fun ?end_:(x272 : float option) ->
            fun () ->
              t_of_js
                (let x277 = this_to_js Obj.magic x275 in
                 Ojs.call (Ojs.get_prop_ascii x277 "slice") "apply"
                   [|x277;((let x273 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x273 "push"
                                 [|(Ojs.float_to_js x271)|]);
                            (match x272 with
                             | Some x274 ->
                                 ignore
                                   (Ojs.call x273 "push"
                                      [|(Ojs.float_to_js x274)|])
                             | None -> ());
                            x273))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "SharedArrayBuffer") "prototype")
    let (create : float -> t) =
      fun (x278 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "SharedArrayBuffer")
             [|(Ojs.float_to_js x278)|])
    let cast_from = Obj.magic
  end
module ArrayBuffer =
  struct
    type t = [ `ArrayBuffer ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x280 : Ojs.t) -> t_of_js x280
    and t_0_to_js : t_0 -> Ojs.t = fun (x279 : t) -> t_to_js x279
    type tags = [ `ArrayBuffer ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ArrayBuffer ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x283 : Ojs.t) -> intf_of_js __tags_of_js x283
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x281 : __tags intf) -> intf_to_js __tags_to_js x281
    let (get_byteLength : 'tags this -> float) =
      fun (x285 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x285) "byteLength")
    let (slice : 'tags this -> begin_:float -> ?end_:float -> unit -> t) =
      fun (x291 : 'tags this) ->
        fun ~begin_:(x287 : float) ->
          fun ?end_:(x288 : float option) ->
            fun () ->
              t_of_js
                (let x293 = this_to_js Obj.magic x291 in
                 Ojs.call (Ojs.get_prop_ascii x293 "slice") "apply"
                   [|x293;((let x289 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x289 "push"
                                 [|(Ojs.float_to_js x287)|]);
                            (match x288 with
                             | Some x290 ->
                                 ignore
                                   (Ojs.call x289 "push"
                                      [|(Ojs.float_to_js x290)|])
                             | None -> ());
                            x289))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ArrayBuffer")
             "prototype")
    let (create : float -> t) =
      fun (x294 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "ArrayBuffer")
             [|(Ojs.float_to_js x294)|])
    let (isView : any -> bool) =
      fun (x295 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "ArrayBuffer") "isView"
             [|(any_to_js x295)|])
    let cast_from = Obj.magic
  end
module ArrayBufferLike =
  struct
    type t = (ArrayBuffer.t, SharedArrayBuffer.t) union2
    let rec t_of_js : Ojs.t -> t =
      fun (x299 : Ojs.t) ->
        union2_of_js ArrayBuffer.t_of_js SharedArrayBuffer.t_of_js x299
    and t_to_js : t -> Ojs.t =
      fun (x296 : (ArrayBuffer.t, SharedArrayBuffer.t) union2) ->
        union2_to_js ArrayBuffer.t_to_js SharedArrayBuffer.t_to_js x296
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x303 : Ojs.t) -> t_of_js x303
    and t_0_to_js : t_0 -> Ojs.t = fun (x302 : t) -> t_to_js x302
  end
module IterableIterator =
  struct
    type 'T t =
      [ `IterableIterator of 'T 
      | `Iterator of ('T * any * never or_undefined) ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x306 : Ojs.t) -> t_of_js __T_of_js x306
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x304 : __T t) -> t_to_js __T_to_js x304
    type 'T tags =
      [ `IterableIterator of 'T 
      | `Iterator of ('T * any * never or_undefined) ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `IterableIterator of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x310 : Ojs.t) -> intf_of_js __tags_of_js x310
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x308 : __tags intf) -> intf_to_js __tags_to_js x308
    let cast_from = Obj.magic
  end
module ArrayLike =
  struct
    type 'T t = [ `ArrayLike of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x314 : Ojs.t) -> t_of_js __T_of_js x314
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x312 : __T t) -> t_to_js __T_to_js x312
    type 'T tags = [ `ArrayLike of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ArrayLike of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x318 : Ojs.t) -> intf_of_js __tags_of_js x318
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x316 : __tags intf) -> intf_to_js __tags_to_js x316
    let (get_length : ('tags, 'T) this -> float) =
      fun (x320 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x320) "length")
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x323 : ('tags, 'T) this) ->
        fun (x326 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x323)
               (Ojs.float_to_js x326))
    let cast_from = Obj.magic
  end
module Uint8ClampedArray =
  struct
    type t =
      [ `Uint8ClampedArray  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x328 : Ojs.t) -> t_of_js x328
    and t_0_to_js : t_0 -> Ojs.t = fun (x327 : t) -> t_to_js x327
    type tags =
      [ `Uint8ClampedArray  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Uint8ClampedArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x331 : Ojs.t) -> intf_of_js __tags_of_js x331
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x329 : __tags intf) -> intf_to_js __tags_to_js x329
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x337 : 'tags this) ->
        fun ~searchElement:(x333 : float) ->
          fun ?fromIndex:(x334 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x339 = this_to_js Obj.magic x337 in
                 Ojs.call (Ojs.get_prop_ascii x339 "includes") "apply"
                   [|x339;((let x335 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x335 "push"
                                 [|(Ojs.float_to_js x333)|]);
                            (match x334 with
                             | Some x336 ->
                                 ignore
                                   (Ojs.call x335 "push"
                                      [|(Ojs.float_to_js x336)|])
                             | None -> ());
                            x335))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x340 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x342 : Ojs.t) ->
             let x343 = x342 in
             ((Ojs.float_of_js (Ojs.array_get x343 0)),
               (Ojs.float_of_js (Ojs.array_get x343 1))))
          (Ojs.call (this_to_js Obj.magic x340) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x344 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x344) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x347 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x347) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x350 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x350) "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x352 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x352) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x354 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x354) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x356 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x356) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x363 : 'tags this) ->
        fun ~target:(x358 : float) ->
          fun ~start:(x359 : float) ->
            fun ?end_:(x360 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x365 = this_to_js Obj.magic x363 in
                   Ojs.call (Ojs.get_prop_ascii x365 "copyWithin") "apply"
                     [|x365;((let x361 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x361 "push"
                                   [|(Ojs.float_to_js x358)|]);
                              ignore
                                (Ojs.call x361 "push"
                                   [|(Ojs.float_to_js x359)|]);
                              (match x360 with
                               | Some x362 ->
                                   ignore
                                     (Ojs.call x361 "push"
                                        [|(Ojs.float_to_js x362)|])
                               | None -> ());
                              x361))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x374 : 'tags this) ->
        fun
          ~predicate:(x367 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x368 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x376 = this_to_js Obj.magic x374 in
                 Ojs.call (Ojs.get_prop_ascii x376 "every") "apply"
                   [|x376;((let x369 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x369 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x371 : Ojs.t) ->
                                         fun (x372 : Ojs.t) ->
                                           fun (x373 : Ojs.t) ->
                                             unknown_to_js
                                               (x367
                                                  ~value:(Ojs.float_of_js
                                                            x371)
                                                  ~index:(Ojs.float_of_js
                                                            x372)
                                                  ~array:(t_of_js x373))))|]);
                            (match x368 with
                             | Some x370 ->
                                 ignore
                                   (Ojs.call x369 "push" [|(any_to_js x370)|])
                             | None -> ());
                            x369))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x383 : 'tags this) ->
        fun ~value:(x377 : float) ->
          fun ?start:(x378 : float option) ->
            fun ?end_:(x379 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x385 = this_to_js Obj.magic x383 in
                   Ojs.call (Ojs.get_prop_ascii x385 "fill") "apply"
                     [|x385;((let x380 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x380 "push"
                                   [|(Ojs.float_to_js x377)|]);
                              (match x378 with
                               | Some x382 ->
                                   ignore
                                     (Ojs.call x380 "push"
                                        [|(Ojs.float_to_js x382)|])
                               | None -> ());
                              (match x379 with
                               | Some x381 ->
                                   ignore
                                     (Ojs.call x380 "push"
                                        [|(Ojs.float_to_js x381)|])
                               | None -> ());
                              x380))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x394 : 'tags this) ->
        fun ~predicate:(x387 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x388 : any option) ->
            fun () ->
              t_of_js
                (let x396 = this_to_js Obj.magic x394 in
                 Ojs.call (Ojs.get_prop_ascii x396 "filter") "apply"
                   [|x396;((let x389 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x389 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x391 : Ojs.t) ->
                                         fun (x392 : Ojs.t) ->
                                           fun (x393 : Ojs.t) ->
                                             any_to_js
                                               (x387
                                                  ~value:(Ojs.float_of_js
                                                            x391)
                                                  ~index:(Ojs.float_of_js
                                                            x392)
                                                  ~array:(t_of_js x393))))|]);
                            (match x388 with
                             | Some x390 ->
                                 ignore
                                   (Ojs.call x389 "push" [|(any_to_js x390)|])
                             | None -> ());
                            x389))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x404 : 'tags this) ->
        fun ~predicate:(x397 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x398 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x406 = this_to_js Obj.magic x404 in
                 Ojs.call (Ojs.get_prop_ascii x406 "find") "apply"
                   [|x406;((let x399 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x399 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x401 : Ojs.t) ->
                                         fun (x402 : Ojs.t) ->
                                           fun (x403 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x397
                                                  ~value:(Ojs.float_of_js
                                                            x401)
                                                  ~index:(Ojs.float_of_js
                                                            x402)
                                                  ~obj:(t_of_js x403))))|]);
                            (match x398 with
                             | Some x400 ->
                                 ignore
                                   (Ojs.call x399 "push" [|(any_to_js x400)|])
                             | None -> ());
                            x399))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x415 : 'tags this) ->
        fun ~predicate:(x408 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x409 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x417 = this_to_js Obj.magic x415 in
                 Ojs.call (Ojs.get_prop_ascii x417 "findIndex") "apply"
                   [|x417;((let x410 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x410 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x412 : Ojs.t) ->
                                         fun (x413 : Ojs.t) ->
                                           fun (x414 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x408
                                                  ~value:(Ojs.float_of_js
                                                            x412)
                                                  ~index:(Ojs.float_of_js
                                                            x413)
                                                  ~obj:(t_of_js x414))))|]);
                            (match x409 with
                             | Some x411 ->
                                 ignore
                                   (Ojs.call x410 "push" [|(any_to_js x411)|])
                             | None -> ());
                            x410))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x425 : 'tags this) ->
        fun
          ~callbackfn:(x418 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x419 : any option) ->
            fun () ->
              ignore
                (let x427 = this_to_js Obj.magic x425 in
                 Ojs.call (Ojs.get_prop_ascii x427 "forEach") "apply"
                   [|x427;((let x420 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x420 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x422 : Ojs.t) ->
                                         fun (x423 : Ojs.t) ->
                                           fun (x424 : Ojs.t) ->
                                             x418
                                               ~value:(Ojs.float_of_js x422)
                                               ~index:(Ojs.float_of_js x423)
                                               ~array:(t_of_js x424)))|]);
                            (match x419 with
                             | Some x421 ->
                                 ignore
                                   (Ojs.call x420 "push" [|(any_to_js x421)|])
                             | None -> ());
                            x420))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x432 : 'tags this) ->
        fun ~searchElement:(x428 : float) ->
          fun ?fromIndex:(x429 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x434 = this_to_js Obj.magic x432 in
                 Ojs.call (Ojs.get_prop_ascii x434 "indexOf") "apply"
                   [|x434;((let x430 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x430 "push"
                                 [|(Ojs.float_to_js x428)|]);
                            (match x429 with
                             | Some x431 ->
                                 ignore
                                   (Ojs.call x430 "push"
                                      [|(Ojs.float_to_js x431)|])
                             | None -> ());
                            x430))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x438 : 'tags this) ->
        fun ?separator:(x435 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x440 = this_to_js Obj.magic x438 in
               Ojs.call (Ojs.get_prop_ascii x440 "join") "apply"
                 [|x440;((let x436 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x435 with
                           | Some x437 ->
                               ignore
                                 (Ojs.call x436 "push"
                                    [|(Ojs.string_to_js x437)|])
                           | None -> ());
                          x436))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x445 : 'tags this) ->
        fun ~searchElement:(x441 : float) ->
          fun ?fromIndex:(x442 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x447 = this_to_js Obj.magic x445 in
                 Ojs.call (Ojs.get_prop_ascii x447 "lastIndexOf") "apply"
                   [|x447;((let x443 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x443 "push"
                                 [|(Ojs.float_to_js x441)|]);
                            (match x442 with
                             | Some x444 ->
                                 ignore
                                   (Ojs.call x443 "push"
                                      [|(Ojs.float_to_js x444)|])
                             | None -> ());
                            x443))|])
    let (get_length : 'tags this -> float) =
      fun (x448 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x448) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x457 : 'tags this) ->
        fun
          ~callbackfn:(x450 : value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x451 : any option) ->
            fun () ->
              t_of_js
                (let x459 = this_to_js Obj.magic x457 in
                 Ojs.call (Ojs.get_prop_ascii x459 "map") "apply"
                   [|x459;((let x452 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x452 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x454 : Ojs.t) ->
                                         fun (x455 : Ojs.t) ->
                                           fun (x456 : Ojs.t) ->
                                             Ojs.float_to_js
                                               (x450
                                                  ~value:(Ojs.float_of_js
                                                            x454)
                                                  ~index:(Ojs.float_of_js
                                                            x455)
                                                  ~array:(t_of_js x456))))|]);
                            (match x451 with
                             | Some x453 ->
                                 ignore
                                   (Ojs.call x452 "push" [|(any_to_js x453)|])
                             | None -> ());
                            x452))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x465 : 'tags this) ->
        fun
          ~callbackfn:(x460 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x465) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x461 : Ojs.t) ->
                       fun (x462 : Ojs.t) ->
                         fun (x463 : Ojs.t) ->
                           fun (x464 : Ojs.t) ->
                             Ojs.float_to_js
                               (x460 ~previousValue:(Ojs.float_of_js x461)
                                  ~currentValue:(Ojs.float_of_js x462)
                                  ~currentIndex:(Ojs.float_of_js x463)
                                  ~array:(t_of_js x464))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x473 : 'tags this) ->
        fun
          ~callbackfn:(x467 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x472 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x473) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x468 : Ojs.t) ->
                         fun (x469 : Ojs.t) ->
                           fun (x470 : Ojs.t) ->
                             fun (x471 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x467 ~previousValue:(Ojs.float_of_js x468)
                                    ~currentValue:(Ojs.float_of_js x469)
                                    ~currentIndex:(Ojs.float_of_js x470)
                                    ~array:(t_of_js x471))));(Ojs.float_to_js
                                                                x472)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x481 : 'tags this) ->
        fun
          ~callbackfn:(x475 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x480 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x481) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x476 : Ojs.t) ->
                         fun (x477 : Ojs.t) ->
                           fun (x478 : Ojs.t) ->
                             fun (x479 : Ojs.t) ->
                               Obj.magic
                                 (x475 ~previousValue:(Obj.magic x476)
                                    ~currentValue:(Ojs.float_of_js x477)
                                    ~currentIndex:(Ojs.float_of_js x478)
                                    ~array:(t_of_js x479))));(Obj.magic x480)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x488 : 'tags this) ->
        fun
          ~callbackfn:(x483 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x488) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x484 : Ojs.t) ->
                       fun (x485 : Ojs.t) ->
                         fun (x486 : Ojs.t) ->
                           fun (x487 : Ojs.t) ->
                             Ojs.float_to_js
                               (x483 ~previousValue:(Ojs.float_of_js x484)
                                  ~currentValue:(Ojs.float_of_js x485)
                                  ~currentIndex:(Ojs.float_of_js x486)
                                  ~array:(t_of_js x487))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x496 : 'tags this) ->
        fun
          ~callbackfn:(x490 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x495 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x496) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x491 : Ojs.t) ->
                         fun (x492 : Ojs.t) ->
                           fun (x493 : Ojs.t) ->
                             fun (x494 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x490 ~previousValue:(Ojs.float_of_js x491)
                                    ~currentValue:(Ojs.float_of_js x492)
                                    ~currentIndex:(Ojs.float_of_js x493)
                                    ~array:(t_of_js x494))));(Ojs.float_to_js
                                                                x495)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x504 : 'tags this) ->
        fun
          ~callbackfn:(x498 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x503 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x504) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x499 : Ojs.t) ->
                         fun (x500 : Ojs.t) ->
                           fun (x501 : Ojs.t) ->
                             fun (x502 : Ojs.t) ->
                               Obj.magic
                                 (x498 ~previousValue:(Obj.magic x499)
                                    ~currentValue:(Ojs.float_of_js x500)
                                    ~currentIndex:(Ojs.float_of_js x501)
                                    ~array:(t_of_js x502))));(Obj.magic x503)|])
    let (reverse : 'tags this -> t) =
      fun (x506 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x506) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x513 : 'tags this) ->
        fun ~array:(x508 : float ArrayLike.t) ->
          fun ?offset:(x509 : float option) ->
            fun () ->
              ignore
                (let x515 = this_to_js Obj.magic x513 in
                 Ojs.call (Ojs.get_prop_ascii x515 "set") "apply"
                   [|x515;((let x510 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x510 "push"
                                 [|(ArrayLike.t_to_js Ojs.float_to_js x508)|]);
                            (match x509 with
                             | Some x511 ->
                                 ignore
                                   (Ojs.call x510 "push"
                                      [|(Ojs.float_to_js x511)|])
                             | None -> ());
                            x510))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x521 : 'tags this) ->
        fun ?start:(x516 : float option) ->
          fun ?end_:(x517 : float option) ->
            fun () ->
              t_of_js
                (let x523 = this_to_js Obj.magic x521 in
                 Ojs.call (Ojs.get_prop_ascii x523 "slice") "apply"
                   [|x523;((let x518 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x516 with
                             | Some x520 ->
                                 ignore
                                   (Ojs.call x518 "push"
                                      [|(Ojs.float_to_js x520)|])
                             | None -> ());
                            (match x517 with
                             | Some x519 ->
                                 ignore
                                   (Ojs.call x518 "push"
                                      [|(Ojs.float_to_js x519)|])
                             | None -> ());
                            x518))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x531 : 'tags this) ->
        fun
          ~predicate:(x524 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x525 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x533 = this_to_js Obj.magic x531 in
                 Ojs.call (Ojs.get_prop_ascii x533 "some") "apply"
                   [|x533;((let x526 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x526 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x528 : Ojs.t) ->
                                         fun (x529 : Ojs.t) ->
                                           fun (x530 : Ojs.t) ->
                                             unknown_to_js
                                               (x524
                                                  ~value:(Ojs.float_of_js
                                                            x528)
                                                  ~index:(Ojs.float_of_js
                                                            x529)
                                                  ~array:(t_of_js x530))))|]);
                            (match x525 with
                             | Some x527 ->
                                 ignore
                                   (Ojs.call x526 "push" [|(any_to_js x527)|])
                             | None -> ());
                            x526))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x539 : 'tags this) ->
        fun ?compareFn:(x534 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x541 = this_to_js Obj.magic x539 in
               Ojs.call (Ojs.get_prop_ascii x541 "sort") "apply"
                 [|x541;((let x535 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x534 with
                           | Some x536 ->
                               ignore
                                 (Ojs.call x535 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x537 : Ojs.t) ->
                                            fun (x538 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x536
                                                   ~a:(Ojs.float_of_js x537)
                                                   ~b:(Ojs.float_of_js x538))))|])
                           | None -> ());
                          x535))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x548 : 'tags this) ->
        fun ?begin_:(x543 : float option) ->
          fun ?end_:(x544 : float option) ->
            fun () ->
              t_of_js
                (let x550 = this_to_js Obj.magic x548 in
                 Ojs.call (Ojs.get_prop_ascii x550 "subarray") "apply"
                   [|x550;((let x545 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x543 with
                             | Some x547 ->
                                 ignore
                                   (Ojs.call x545 "push"
                                      [|(Ojs.float_to_js x547)|])
                             | None -> ());
                            (match x544 with
                             | Some x546 ->
                                 ignore
                                   (Ojs.call x545 "push"
                                      [|(Ojs.float_to_js x546)|])
                             | None -> ());
                            x545))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x551 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x551) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x553 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x553) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x555 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x555) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x557 : 'tags this) ->
        fun (x559 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x557) (Ojs.float_to_js x559))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x560 : 'tags this) ->
        fun (x562 : float) ->
          fun (x563 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x560) (Ojs.float_to_js x562)
              (Ojs.float_to_js x563)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [||])
    let (create' : float Iterable.t -> t) =
      fun (x564 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|(Iterable.t_to_js Ojs.float_to_js x564)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x566 : float Iterable.t) ->
        fun ?mapfn:(x567 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x568 : any option) ->
            fun () ->
              t_of_js
                (let x575 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
                 Ojs.call (Ojs.get_prop_ascii x575 "from") "apply"
                   [|x575;((let x569 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x569 "push"
                                 [|(Iterable.t_to_js Ojs.float_to_js x566)|]);
                            (match x567 with
                             | Some x571 ->
                                 ignore
                                   (Ojs.call x569 "push"
                                      [|(Ojs.fun_to_js 2
                                           (fun (x572 : Ojs.t) ->
                                              fun (x573 : Ojs.t) ->
                                                Ojs.float_to_js
                                                  (x571
                                                     ~v:(Ojs.float_of_js x572)
                                                     ~k:(Ojs.float_of_js x573))))|])
                             | None -> ());
                            (match x568 with
                             | Some x570 ->
                                 ignore
                                   (Ojs.call x569 "push" [|(any_to_js x570)|])
                             | None -> ());
                            x569))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray") "prototype")
    let (create'' : float -> t) =
      fun (x576 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|(Ojs.float_to_js x576)|])
    let (create''' : (ArrayBufferLike.t, float ArrayLike.t) union2 -> t) =
      fun (x577 : (ArrayBufferLike.t, float ArrayLike.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|(union2_to_js ArrayBufferLike.t_to_js
                  (fun (x579 : float ArrayLike.t) ->
                     ArrayLike.t_to_js Ojs.float_to_js x579) x577)|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x581 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x582 : float option) ->
          fun ?length:(x583 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
                   (let x584 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x584 "push"
                         [|(ArrayBufferLike.t_to_js x581)|]);
                    (match x582 with
                     | Some x586 ->
                         ignore
                           (Ojs.call x584 "push" [|(Ojs.float_to_js x586)|])
                     | None -> ());
                    (match x583 with
                     | Some x585 ->
                         ignore
                           (Ojs.call x584 "push" [|(Ojs.float_to_js x585)|])
                     | None -> ());
                    x584))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x587 : float list) ->
        t_of_js
          (let x590 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
           Ojs.call (Ojs.get_prop_ascii x590 "of") "apply"
             [|x590;((let x588 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      List.iter
                        (fun (x589 : float) ->
                           ignore
                             (Ojs.call x588 "push" [|(Ojs.float_to_js x589)|]))
                        x587;
                      x588))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x591 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             "from" [|(ArrayLike.t_to_js Ojs.float_to_js x591)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x593 : 'T ArrayLike.t) ->
        fun ~mapfn:(x594 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x595 : any option) ->
            fun () ->
              t_of_js
                (let x601 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
                 Ojs.call (Ojs.get_prop_ascii x601 "from") "apply"
                   [|x601;((let x596 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x596 "push"
                                 [|(ArrayLike.t_to_js Obj.magic x593)|]);
                            ignore
                              (Ojs.call x596 "push"
                                 [|(Ojs.fun_to_js 2
                                      (fun (x598 : Ojs.t) ->
                                         fun (x599 : Ojs.t) ->
                                           Ojs.float_to_js
                                             (x594 ~v:(Obj.magic x598)
                                                ~k:(Ojs.float_of_js x599))))|]);
                            (match x595 with
                             | Some x597 ->
                                 ignore
                                   (Ojs.call x596 "push" [|(any_to_js x597)|])
                             | None -> ());
                            x596))|])
    let cast_from = Obj.magic
  end
module Error =
  struct
    type t = [ `Error ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x603 : Ojs.t) -> t_of_js x603
    and t_0_to_js : t_0 -> Ojs.t = fun (x602 : t) -> t_to_js x602
    type tags = [ `Error ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Error ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x606 : Ojs.t) -> intf_of_js __tags_of_js x606
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x604 : __tags intf) -> intf_to_js __tags_to_js x604
    let (get_name : 'tags this -> string) =
      fun (x608 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x608) "name")
    let (set_name : 'tags this -> string -> unit) =
      fun (x610 : 'tags this) ->
        fun (x611 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x610) "name"
            (Ojs.string_to_js x611)
    let (get_message : 'tags this -> string) =
      fun (x613 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x613) "message")
    let (set_message : 'tags this -> string -> unit) =
      fun (x615 : 'tags this) ->
        fun (x616 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x615) "message"
            (Ojs.string_to_js x616)
    let (get_stack : 'tags this -> string) =
      fun (x618 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x618) "stack")
    let (set_stack : 'tags this -> string -> unit) =
      fun (x620 : 'tags this) ->
        fun (x621 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x620) "stack"
            (Ojs.string_to_js x621)
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x623 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Error")
               (let x624 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x623 with
                 | Some x625 ->
                     ignore
                       (Ojs.call x624 "push" [|(Ojs.string_to_js x625)|])
                 | None -> ());
                x624))
    let (invoke : ?message:string -> unit -> t) =
      fun ?message:(x626 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Error") "apply"
               [|Ojs.null;((let x627 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x626 with
                             | Some x628 ->
                                 ignore
                                   (Ojs.call x627 "push"
                                      [|(Ojs.string_to_js x628)|])
                             | None -> ());
                            x627))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Error")
             "prototype")
    let cast_from = Obj.magic
  end
module URIError =
  struct
    type t = [ `Error  | `URIError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x630 : Ojs.t) -> t_of_js x630
    and t_0_to_js : t_0 -> Ojs.t = fun (x629 : t) -> t_to_js x629
    type tags = [ `Error  | `URIError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `URIError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x633 : Ojs.t) -> intf_of_js __tags_of_js x633
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x631 : __tags intf) -> intf_to_js __tags_to_js x631
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x635 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "URIError")
               (let x636 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x635 with
                 | Some x637 ->
                     ignore
                       (Ojs.call x636 "push" [|(Ojs.string_to_js x637)|])
                 | None -> ());
                x636))
    let (invoke : ?message:string -> unit -> t) =
      fun ?message:(x638 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "URIError") "apply"
               [|Ojs.null;((let x639 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x638 with
                             | Some x640 ->
                                 ignore
                                   (Ojs.call x639 "push"
                                      [|(Ojs.string_to_js x640)|])
                             | None -> ());
                            x639))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "URIError")
             "prototype")
    let cast_from = Obj.magic
  end
module TypeError =
  struct
    type t = [ `Error  | `TypeError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x642 : Ojs.t) -> t_of_js x642
    and t_0_to_js : t_0 -> Ojs.t = fun (x641 : t) -> t_to_js x641
    type tags = [ `Error  | `TypeError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `TypeError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x645 : Ojs.t) -> intf_of_js __tags_of_js x645
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x643 : __tags intf) -> intf_to_js __tags_to_js x643
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x647 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "TypeError")
               (let x648 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x647 with
                 | Some x649 ->
                     ignore
                       (Ojs.call x648 "push" [|(Ojs.string_to_js x649)|])
                 | None -> ());
                x648))
    let (invoke : ?message:string -> unit -> t) =
      fun ?message:(x650 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "TypeError") "apply"
               [|Ojs.null;((let x651 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x650 with
                             | Some x652 ->
                                 ignore
                                   (Ojs.call x651 "push"
                                      [|(Ojs.string_to_js x652)|])
                             | None -> ());
                            x651))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "TypeError")
             "prototype")
    let cast_from = Obj.magic
  end
module FlatArray =
  struct
    type ('Arr, 'Depth) t = any
    let rec t_of_js :
      'Arr 'Depth .
        (Ojs.t -> 'Arr) -> (Ojs.t -> 'Depth) -> Ojs.t -> ('Arr, 'Depth) t
      = fun (type __Arr) -> fun (type __Depth) ->
      fun (__Arr_of_js : Ojs.t -> __Arr) ->
        fun (__Depth_of_js : Ojs.t -> __Depth) ->
          fun (x654 : Ojs.t) -> any_of_js x654
    and t_to_js :
      'Arr 'Depth .
        ('Arr -> Ojs.t) -> ('Depth -> Ojs.t) -> ('Arr, 'Depth) t -> Ojs.t
      = fun (type __Arr) -> fun (type __Depth) ->
      fun (__Arr_to_js : __Arr -> Ojs.t) ->
        fun (__Depth_to_js : __Depth -> Ojs.t) ->
          fun (x653 : any) -> any_to_js x653
    type ('Arr, 'Depth) t_2 = ('Arr, 'Depth) t
    let rec t_2_of_js :
      'Arr 'Depth .
        (Ojs.t -> 'Arr) -> (Ojs.t -> 'Depth) -> Ojs.t -> ('Arr, 'Depth) t_2
      = fun (type __Arr) -> fun (type __Depth) ->
      fun (__Arr_of_js : Ojs.t -> __Arr) ->
        fun (__Depth_of_js : Ojs.t -> __Depth) ->
          fun (x658 : Ojs.t) -> t_of_js __Arr_of_js __Depth_of_js x658
    and t_2_to_js :
      'Arr 'Depth .
        ('Arr -> Ojs.t) -> ('Depth -> Ojs.t) -> ('Arr, 'Depth) t_2 -> Ojs.t
      = fun (type __Arr) -> fun (type __Depth) ->
      fun (__Arr_to_js : __Arr -> Ojs.t) ->
        fun (__Depth_to_js : __Depth -> Ojs.t) ->
          fun (x655 : (__Arr, __Depth) t) ->
            t_to_js __Arr_to_js __Depth_to_js x655
  end
module ConcatArray =
  struct
    type 'T t = [ `ConcatArray of 'T  | 'T ArrayLike.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x663 : Ojs.t) -> t_of_js __T_of_js x663
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x661 : __T t) -> t_to_js __T_to_js x661
    type 'T tags = [ `ConcatArray of 'T  | 'T ArrayLike.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ConcatArray of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x667 : Ojs.t) -> intf_of_js __tags_of_js x667
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x665 : __tags intf) -> intf_to_js __tags_to_js x665
    let (get_length : ('tags, 'T) this -> float) =
      fun (x669 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x669) "length")
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x672 : ('tags, 'T) this) ->
        fun (x675 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x672)
               (Ojs.float_to_js x675))
    let (join : ('tags, 'T) this -> ?separator:string -> unit -> string) =
      fun (x679 : ('tags, 'T) this) ->
        fun ?separator:(x676 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x682 = this_to_js Obj.magic Obj.magic x679 in
               Ojs.call (Ojs.get_prop_ascii x682 "join") "apply"
                 [|x682;((let x677 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x676 with
                           | Some x678 ->
                               ignore
                                 (Ojs.call x677 "push"
                                    [|(Ojs.string_to_js x678)|])
                           | None -> ());
                          x677))|])
    let (slice :
      ('tags, 'T) this -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x688 : ('tags, 'T) this) ->
        fun ?start:(x683 : float option) ->
          fun ?end_:(x684 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x691 = this_to_js Obj.magic Obj.magic x688 in
                 Ojs.call (Ojs.get_prop_ascii x691 "slice") "apply"
                   [|x691;((let x685 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x683 with
                             | Some x687 ->
                                 ignore
                                   (Ojs.call x685 "push"
                                      [|(Ojs.float_to_js x687)|])
                             | None -> ());
                            (match x684 with
                             | Some x686 ->
                                 ignore
                                   (Ojs.call x685 "push"
                                      [|(Ojs.float_to_js x686)|])
                             | None -> ());
                            x685))|])
    let cast_from = Obj.magic
  end
module ReadonlyArray =
  struct
    type 'T t =
      [ `ReadonlyArray of 'T  | 'T ArrayLike.tags_1
      | 'T IterableIterator.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x695 : Ojs.t) -> t_of_js __T_of_js x695
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x693 : __T t) -> t_to_js __T_to_js x693
    type 'T tags =
      [ `ReadonlyArray of 'T  | 'T ArrayLike.tags_1
      | 'T IterableIterator.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ReadonlyArray of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x699 : Ojs.t) -> intf_of_js __tags_of_js x699
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x697 : __tags intf) -> intf_to_js __tags_to_js x697
    let (flatMap :
      ('tags, 'T) this ->
        callback:(this:'This ->
                    value:'T ->
                      index:float -> array:'T list -> ('U, 'U t) union2)
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x713 : ('tags, 'T) this) ->
        fun
          ~callback:(x701 :
                      this:'This ->
                        value:'T ->
                          index:float -> array:'T list -> ('U, 'U t) union2)
          ->
          fun ?thisArg:(x702 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x716 = this_to_js Obj.magic Obj.magic x713 in
                 Ojs.call (Ojs.get_prop_ascii x716 "flatMap") "apply"
                   [|x716;((let x703 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x703 "push"
                                 [|(Ojs.fun_to_js 4
                                      (fun (x705 : Ojs.t) ->
                                         fun (x706 : Ojs.t) ->
                                           fun (x707 : Ojs.t) ->
                                             fun (x708 : Ojs.t) ->
                                               union2_to_js Obj.magic
                                                 (fun (x711 : 'U t) ->
                                                    t_to_js Obj.magic x711)
                                                 (x701 ~this:(Obj.magic x705)
                                                    ~value:(Obj.magic x706)
                                                    ~index:(Ojs.float_of_js
                                                              x707)
                                                    ~array:(Ojs.list_of_js
                                                              Obj.magic x708))))|]);
                            (match x702 with
                             | Some x704 ->
                                 ignore
                                   (Ojs.call x703 "push" [|(Obj.magic x704)|])
                             | None -> ());
                            x703))|])
    let (flat :
      ('tags, 'T) this ->
        this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list)
      =
      fun (x722 : ('tags, 'T) this) ->
        fun ~this:(x718 : 'A) ->
          fun ?depth:(x719 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x726 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x726)
                (let x725 = this_to_js Obj.magic Obj.magic x722 in
                 Ojs.call (Ojs.get_prop_ascii x725 "flat") "apply"
                   [|x725;((let x720 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x720 "push" [|(Obj.magic x718)|]);
                            (match x719 with
                             | Some x721 ->
                                 ignore
                                   (Ojs.call x720 "push" [|(Obj.magic x721)|])
                             | None -> ());
                            x720))|])
    let (includes :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> bool)
      =
      fun (x733 : ('tags, 'T) this) ->
        fun ~searchElement:(x729 : 'T) ->
          fun ?fromIndex:(x730 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x736 = this_to_js Obj.magic Obj.magic x733 in
                 Ojs.call (Ojs.get_prop_ascii x736 "includes") "apply"
                   [|x736;((let x731 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x731 "push" [|(Obj.magic x729)|]);
                            (match x730 with
                             | Some x732 ->
                                 ignore
                                   (Ojs.call x731 "push"
                                      [|(Ojs.float_to_js x732)|])
                             | None -> ());
                            x731))|])
    let (entries : ('tags, 'T) this -> (float * 'T) IterableIterator.t) =
      fun (x737 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x740 : Ojs.t) ->
             let x741 = x740 in
             ((Ojs.float_of_js (Ojs.array_get x741 0)),
               (Obj.magic (Ojs.array_get x741 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x737) "entries" [||])
    let (keys : ('tags, 'T) this -> float IterableIterator.t) =
      fun (x742 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x742) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x746 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x746) "values" [||])
    let (find :
      ('tags, 'T) this ->
        predicate:(this:unit ->
                     value:'T -> index:float -> obj:'T list -> bool)
          -> ?thisArg:any -> unit -> 'S or_undefined)
      =
      fun (x759 : ('tags, 'T) this) ->
        fun
          ~predicate:(x750 :
                       this:unit ->
                         value:'T -> index:float -> obj:'T list -> bool)
          ->
          fun ?thisArg:(x751 : any option) ->
            fun () ->
              or_undefined_of_js Obj.magic
                (let x762 = this_to_js Obj.magic Obj.magic x759 in
                 Ojs.call (Ojs.get_prop_ascii x762 "find") "apply"
                   [|x762;((let x752 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x752 "push"
                                 [|(Ojs.fun_to_js 4
                                      (fun (x754 : Ojs.t) ->
                                         fun (x755 : Ojs.t) ->
                                           fun (x756 : Ojs.t) ->
                                             fun (x757 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x750
                                                    ~this:(Ojs.unit_of_js
                                                             x754)
                                                    ~value:(Obj.magic x755)
                                                    ~index:(Ojs.float_of_js
                                                              x756)
                                                    ~obj:(Ojs.list_of_js
                                                            Obj.magic x757))))|]);
                            (match x751 with
                             | Some x753 ->
                                 ignore
                                   (Ojs.call x752 "push" [|(any_to_js x753)|])
                             | None -> ());
                            x752))|])
    let (find' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T or_undefined)
      =
      fun (x772 : ('tags, 'T) this) ->
        fun
          ~predicate:(x764 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x765 : any option) ->
            fun () ->
              or_undefined_of_js Obj.magic
                (let x775 = this_to_js Obj.magic Obj.magic x772 in
                 Ojs.call (Ojs.get_prop_ascii x775 "find") "apply"
                   [|x775;((let x766 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x766 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x768 : Ojs.t) ->
                                         fun (x769 : Ojs.t) ->
                                           fun (x770 : Ojs.t) ->
                                             unknown_to_js
                                               (x764 ~value:(Obj.magic x768)
                                                  ~index:(Ojs.float_of_js
                                                            x769)
                                                  ~obj:(Ojs.list_of_js
                                                          Obj.magic x770))))|]);
                            (match x765 with
                             | Some x767 ->
                                 ignore
                                   (Ojs.call x766 "push" [|(any_to_js x767)|])
                             | None -> ());
                            x766))|])
    let (findIndex :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x785 : ('tags, 'T) this) ->
        fun
          ~predicate:(x777 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x778 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x788 = this_to_js Obj.magic Obj.magic x785 in
                 Ojs.call (Ojs.get_prop_ascii x788 "findIndex") "apply"
                   [|x788;((let x779 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x779 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x781 : Ojs.t) ->
                                         fun (x782 : Ojs.t) ->
                                           fun (x783 : Ojs.t) ->
                                             unknown_to_js
                                               (x777 ~value:(Obj.magic x781)
                                                  ~index:(Ojs.float_of_js
                                                            x782)
                                                  ~obj:(Ojs.list_of_js
                                                          Obj.magic x783))))|]);
                            (match x778 with
                             | Some x780 ->
                                 ignore
                                   (Ojs.call x779 "push" [|(any_to_js x780)|])
                             | None -> ());
                            x779))|])
    let (get_length : ('tags, 'T) this -> float) =
      fun (x789 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x789) "length")
    let (toString : ('tags, 'T) this -> string) =
      fun (x792 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x792) "toString" [||])
    let (toLocaleString : ('tags, 'T) this -> string) =
      fun (x795 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x795) "toLocaleString"
             [||])
    let (concat : ('tags, 'T) this -> items:'T ConcatArray.t list -> 'T list)
      =
      fun (x802 : ('tags, 'T) this) ->
        fun ~items:(x798 : 'T ConcatArray.t list) ->
          Ojs.list_of_js Obj.magic
            (let x805 = this_to_js Obj.magic Obj.magic x802 in
             Ojs.call (Ojs.get_prop_ascii x805 "concat") "apply"
               [|x805;((let x799 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x800 : 'T ConcatArray.t) ->
                             ignore
                               (Ojs.call x799 "push"
                                  [|(ConcatArray.t_to_js Obj.magic x800)|]))
                          x798;
                        x799))|])
    let (concat' :
      ('tags, 'T) this -> items:('T, 'T ConcatArray.t) union2 list -> 'T list)
      =
      fun (x813 : ('tags, 'T) this) ->
        fun ~items:(x807 : ('T, 'T ConcatArray.t) union2 list) ->
          Ojs.list_of_js Obj.magic
            (let x816 = this_to_js Obj.magic Obj.magic x813 in
             Ojs.call (Ojs.get_prop_ascii x816 "concat") "apply"
               [|x816;((let x808 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x809 : ('T, 'T ConcatArray.t) union2) ->
                             ignore
                               (Ojs.call x808 "push"
                                  [|(union2_to_js Obj.magic
                                       (fun (x811 : 'T ConcatArray.t) ->
                                          ConcatArray.t_to_js Obj.magic x811)
                                       x809)|])) x807;
                        x808))|])
    let (join : ('tags, 'T) this -> ?separator:string -> unit -> string) =
      fun (x821 : ('tags, 'T) this) ->
        fun ?separator:(x818 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x824 = this_to_js Obj.magic Obj.magic x821 in
               Ojs.call (Ojs.get_prop_ascii x824 "join") "apply"
                 [|x824;((let x819 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x818 with
                           | Some x820 ->
                               ignore
                                 (Ojs.call x819 "push"
                                    [|(Ojs.string_to_js x820)|])
                           | None -> ());
                          x819))|])
    let (slice :
      ('tags, 'T) this -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x830 : ('tags, 'T) this) ->
        fun ?start:(x825 : float option) ->
          fun ?end_:(x826 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x833 = this_to_js Obj.magic Obj.magic x830 in
                 Ojs.call (Ojs.get_prop_ascii x833 "slice") "apply"
                   [|x833;((let x827 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x825 with
                             | Some x829 ->
                                 ignore
                                   (Ojs.call x827 "push"
                                      [|(Ojs.float_to_js x829)|])
                             | None -> ());
                            (match x826 with
                             | Some x828 ->
                                 ignore
                                   (Ojs.call x827 "push"
                                      [|(Ojs.float_to_js x828)|])
                             | None -> ());
                            x827))|])
    let (indexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x839 : ('tags, 'T) this) ->
        fun ~searchElement:(x835 : 'T) ->
          fun ?fromIndex:(x836 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x842 = this_to_js Obj.magic Obj.magic x839 in
                 Ojs.call (Ojs.get_prop_ascii x842 "indexOf") "apply"
                   [|x842;((let x837 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x837 "push" [|(Obj.magic x835)|]);
                            (match x836 with
                             | Some x838 ->
                                 ignore
                                   (Ojs.call x837 "push"
                                      [|(Ojs.float_to_js x838)|])
                             | None -> ());
                            x837))|])
    let (lastIndexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x847 : ('tags, 'T) this) ->
        fun ~searchElement:(x843 : 'T) ->
          fun ?fromIndex:(x844 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x850 = this_to_js Obj.magic Obj.magic x847 in
                 Ojs.call (Ojs.get_prop_ascii x850 "lastIndexOf") "apply"
                   [|x850;((let x845 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x845 "push" [|(Obj.magic x843)|]);
                            (match x844 with
                             | Some x846 ->
                                 ignore
                                   (Ojs.call x845 "push"
                                      [|(Ojs.float_to_js x846)|])
                             | None -> ());
                            x845))|])
    let (every :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x859 : ('tags, 'T) this) ->
        fun
          ~predicate:(x851 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x852 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x862 = this_to_js Obj.magic Obj.magic x859 in
                 Ojs.call (Ojs.get_prop_ascii x862 "every") "apply"
                   [|x862;((let x853 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x853 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x855 : Ojs.t) ->
                                         fun (x856 : Ojs.t) ->
                                           fun (x857 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x851 ~value:(Obj.magic x855)
                                                  ~index:(Ojs.float_of_js
                                                            x856)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x857))))|]);
                            (match x852 with
                             | Some x854 ->
                                 ignore
                                   (Ojs.call x853 "push" [|(any_to_js x854)|])
                             | None -> ());
                            x853))|])
    let (every' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x871 : ('tags, 'T) this) ->
        fun
          ~predicate:(x863 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x864 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x874 = this_to_js Obj.magic Obj.magic x871 in
                 Ojs.call (Ojs.get_prop_ascii x874 "every") "apply"
                   [|x874;((let x865 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x865 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x867 : Ojs.t) ->
                                         fun (x868 : Ojs.t) ->
                                           fun (x869 : Ojs.t) ->
                                             unknown_to_js
                                               (x863 ~value:(Obj.magic x867)
                                                  ~index:(Ojs.float_of_js
                                                            x868)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x869))))|]);
                            (match x864 with
                             | Some x866 ->
                                 ignore
                                   (Ojs.call x865 "push" [|(any_to_js x866)|])
                             | None -> ());
                            x865))|])
    let (some :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x883 : ('tags, 'T) this) ->
        fun
          ~predicate:(x875 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x876 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x886 = this_to_js Obj.magic Obj.magic x883 in
                 Ojs.call (Ojs.get_prop_ascii x886 "some") "apply"
                   [|x886;((let x877 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x877 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x879 : Ojs.t) ->
                                         fun (x880 : Ojs.t) ->
                                           fun (x881 : Ojs.t) ->
                                             unknown_to_js
                                               (x875 ~value:(Obj.magic x879)
                                                  ~index:(Ojs.float_of_js
                                                            x880)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x881))))|]);
                            (match x876 with
                             | Some x878 ->
                                 ignore
                                   (Ojs.call x877 "push" [|(any_to_js x878)|])
                             | None -> ());
                            x877))|])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x895 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x887 :
                        value:'T -> index:float -> array:'T list -> unit)
          ->
          fun ?thisArg:(x888 : any option) ->
            fun () ->
              ignore
                (let x898 = this_to_js Obj.magic Obj.magic x895 in
                 Ojs.call (Ojs.get_prop_ascii x898 "forEach") "apply"
                   [|x898;((let x889 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x889 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x891 : Ojs.t) ->
                                         fun (x892 : Ojs.t) ->
                                           fun (x893 : Ojs.t) ->
                                             x887 ~value:(Obj.magic x891)
                                               ~index:(Ojs.float_of_js x892)
                                               ~array:(Ojs.list_of_js
                                                         Obj.magic x893)))|]);
                            (match x888 with
                             | Some x890 ->
                                 ignore
                                   (Ojs.call x889 "push" [|(any_to_js x890)|])
                             | None -> ());
                            x889))|])
    let (map :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x907 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x899 : value:'T -> index:float -> array:'T list -> 'U)
          ->
          fun ?thisArg:(x900 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x910 = this_to_js Obj.magic Obj.magic x907 in
                 Ojs.call (Ojs.get_prop_ascii x910 "map") "apply"
                   [|x910;((let x901 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x901 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x903 : Ojs.t) ->
                                         fun (x904 : Ojs.t) ->
                                           fun (x905 : Ojs.t) ->
                                             Obj.magic
                                               (x899 ~value:(Obj.magic x903)
                                                  ~index:(Ojs.float_of_js
                                                            x904)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x905))))|]);
                            (match x900 with
                             | Some x902 ->
                                 ignore
                                   (Ojs.call x901 "push" [|(any_to_js x902)|])
                             | None -> ());
                            x901))|])
    let (filter :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x920 : ('tags, 'T) this) ->
        fun
          ~predicate:(x912 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x913 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x923 = this_to_js Obj.magic Obj.magic x920 in
                 Ojs.call (Ojs.get_prop_ascii x923 "filter") "apply"
                   [|x923;((let x914 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x914 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x916 : Ojs.t) ->
                                         fun (x917 : Ojs.t) ->
                                           fun (x918 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x912 ~value:(Obj.magic x916)
                                                  ~index:(Ojs.float_of_js
                                                            x917)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x918))))|]);
                            (match x913 with
                             | Some x915 ->
                                 ignore
                                   (Ojs.call x914 "push" [|(any_to_js x915)|])
                             | None -> ());
                            x914))|])
    let (filter' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T list)
      =
      fun (x933 : ('tags, 'T) this) ->
        fun
          ~predicate:(x925 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x926 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x936 = this_to_js Obj.magic Obj.magic x933 in
                 Ojs.call (Ojs.get_prop_ascii x936 "filter") "apply"
                   [|x936;((let x927 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x927 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x929 : Ojs.t) ->
                                         fun (x930 : Ojs.t) ->
                                           fun (x931 : Ojs.t) ->
                                             unknown_to_js
                                               (x925 ~value:(Obj.magic x929)
                                                  ~index:(Ojs.float_of_js
                                                            x930)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x931))))|]);
                            (match x926 with
                             | Some x928 ->
                                 ignore
                                   (Ojs.call x927 "push" [|(any_to_js x928)|])
                             | None -> ());
                            x927))|])
    let (reduce :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x944 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x938 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x944) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x939 : Ojs.t) ->
                       fun (x940 : Ojs.t) ->
                         fun (x941 : Ojs.t) ->
                           fun (x942 : Ojs.t) ->
                             Obj.magic
                               (x938 ~previousValue:(Obj.magic x939)
                                  ~currentValue:(Obj.magic x940)
                                  ~currentIndex:(Ojs.float_of_js x941)
                                  ~array:(Ojs.list_of_js Obj.magic x942))))|])
    let (reduce' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x954 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x947 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x953 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x954) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x948 : Ojs.t) ->
                         fun (x949 : Ojs.t) ->
                           fun (x950 : Ojs.t) ->
                             fun (x951 : Ojs.t) ->
                               Obj.magic
                                 (x947 ~previousValue:(Obj.magic x948)
                                    ~currentValue:(Obj.magic x949)
                                    ~currentIndex:(Ojs.float_of_js x950)
                                    ~array:(Ojs.list_of_js Obj.magic x951))));(
                   Obj.magic x953)|])
    let (reduce'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x964 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x957 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x963 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x964) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x958 : Ojs.t) ->
                         fun (x959 : Ojs.t) ->
                           fun (x960 : Ojs.t) ->
                             fun (x961 : Ojs.t) ->
                               Obj.magic
                                 (x957 ~previousValue:(Obj.magic x958)
                                    ~currentValue:(Obj.magic x959)
                                    ~currentIndex:(Ojs.float_of_js x960)
                                    ~array:(Ojs.list_of_js Obj.magic x961))));(
                   Obj.magic x963)|])
    let (reduceRight :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x973 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x967 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x973) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x968 : Ojs.t) ->
                       fun (x969 : Ojs.t) ->
                         fun (x970 : Ojs.t) ->
                           fun (x971 : Ojs.t) ->
                             Obj.magic
                               (x967 ~previousValue:(Obj.magic x968)
                                  ~currentValue:(Obj.magic x969)
                                  ~currentIndex:(Ojs.float_of_js x970)
                                  ~array:(Ojs.list_of_js Obj.magic x971))))|])
    let (reduceRight' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x983 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x976 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x982 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x983) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x977 : Ojs.t) ->
                         fun (x978 : Ojs.t) ->
                           fun (x979 : Ojs.t) ->
                             fun (x980 : Ojs.t) ->
                               Obj.magic
                                 (x976 ~previousValue:(Obj.magic x977)
                                    ~currentValue:(Obj.magic x978)
                                    ~currentIndex:(Ojs.float_of_js x979)
                                    ~array:(Ojs.list_of_js Obj.magic x980))));(
                   Obj.magic x982)|])
    let (reduceRight'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x993 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x986 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x992 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x993) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x987 : Ojs.t) ->
                         fun (x988 : Ojs.t) ->
                           fun (x989 : Ojs.t) ->
                             fun (x990 : Ojs.t) ->
                               Obj.magic
                                 (x986 ~previousValue:(Obj.magic x987)
                                    ~currentValue:(Obj.magic x988)
                                    ~currentIndex:(Ojs.float_of_js x989)
                                    ~array:(Ojs.list_of_js Obj.magic x990))));(
                   Obj.magic x992)|])
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x996 : ('tags, 'T) this) ->
        fun (x999 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x996)
               (Ojs.float_to_js x999))
    let cast_from = Obj.magic
    let (to_ml : 'T t -> 'T list) =
      fun (x1000 : 'T t) ->
        Ojs.list_of_js Obj.magic (t_to_js Obj.magic x1000)
    let (of_ml : 'T list -> 'T t) =
      fun (x1003 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x1003)
  end
module TemplateStringsArray =
  struct
    type t =
      [ `ReadonlyArray of string  | `ReadonlyArray of string 
      | `TemplateStringsArray  | string ArrayLike.tags_1
      | string IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1007 : Ojs.t) -> t_of_js x1007
    and t_0_to_js : t_0 -> Ojs.t = fun (x1006 : t) -> t_to_js x1006
    type tags =
      [ `ReadonlyArray of string  | `ReadonlyArray of string 
      | `TemplateStringsArray  | string ArrayLike.tags_1
      | string IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `TemplateStringsArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1010 : Ojs.t) -> intf_of_js __tags_of_js x1010
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1008 : __tags intf) -> intf_to_js __tags_to_js x1008
    let (get_raw : 'tags this -> string list) =
      fun (x1012 : 'tags this) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1012) "raw")
    let cast_from = Obj.magic
  end
module SyntaxError =
  struct
    type t = [ `Error  | `SyntaxError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1016 : Ojs.t) -> t_of_js x1016
    and t_0_to_js : t_0 -> Ojs.t = fun (x1015 : t) -> t_to_js x1015
    type tags = [ `Error  | `SyntaxError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `SyntaxError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1019 : Ojs.t) -> intf_of_js __tags_of_js x1019
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1017 : __tags intf) -> intf_to_js __tags_to_js x1017
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x1021 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "SyntaxError")
               (let x1022 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1021 with
                 | Some x1023 ->
                     ignore
                       (Ojs.call x1022 "push" [|(Ojs.string_to_js x1023)|])
                 | None -> ());
                x1022))
    let (invoke : ?message:string -> unit -> t) =
      fun ?message:(x1024 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "SyntaxError") "apply"
               [|Ojs.null;((let x1025 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x1024 with
                             | Some x1026 ->
                                 ignore
                                   (Ojs.call x1025 "push"
                                      [|(Ojs.string_to_js x1026)|])
                             | None -> ());
                            x1025))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "SyntaxError")
             "prototype")
    let cast_from = Obj.magic
  end
module Symbol =
  struct
    type t = [ `Symbol ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1028 : Ojs.t) -> t_of_js x1028
    and t_0_to_js : t_0 -> Ojs.t = fun (x1027 : t) -> t_to_js x1027
    type tags = [ `Symbol ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Symbol ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1031 : Ojs.t) -> intf_of_js __tags_of_js x1031
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1029 : __tags intf) -> intf_to_js __tags_to_js x1029
    let (get_description : 'tags this -> string or_undefined) =
      fun (x1033 : 'tags this) ->
        or_undefined_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1033) "description")
    let (toString : 'tags this -> string) =
      fun (x1036 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1036) "toString" [||])
    let (valueOf : 'tags this -> symbol) =
      fun (x1038 : 'tags this) ->
        symbol_of_js (Ojs.call (this_to_js Obj.magic x1038) "valueOf" [||])
    let (matchAll : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "matchAll")
    let (asyncIterator : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "asyncIterator")
    let (hasInstance : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "hasInstance")
    let (isConcatSpreadable : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "isConcatSpreadable")
    let (match_ : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "match")
    let (replace : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "replace")
    let (search : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "search")
    let (species : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "species")
    let (split : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "split")
    let (toPrimitive : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "toPrimitive")
    let (toStringTag : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "toStringTag")
    let (unscopables : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "unscopables")
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "prototype")
    let (invoke : ?description:string or_number -> unit -> symbol) =
      fun ?description:(x1040 : string or_number option) ->
        fun () ->
          symbol_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Symbol") "apply"
               [|Ojs.null;((let x1041 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x1040 with
                             | Some x1042 ->
                                 ignore
                                   (Ojs.call x1041 "push"
                                      [|(or_number_to_js Ojs.string_to_js
                                           x1042)|])
                             | None -> ());
                            x1041))|])
    let (for_ : string -> symbol) =
      fun (x1044 : string) ->
        symbol_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Symbol") "for"
             [|(Ojs.string_to_js x1044)|])
    let (keyFor : symbol -> string or_undefined) =
      fun (x1045 : symbol) ->
        or_undefined_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Symbol") "keyFor"
             [|(symbol_to_js x1045)|])
    let (iterator : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "iterator")
    let cast_from = Obj.magic
  end
module Array =
  struct
    module AnonymousInterface1 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x1048 : Ojs.t) -> x1048
        and t_to_js : t -> Ojs.t = fun (x1047 : Ojs.t) -> x1047
        let (get_copyWithin : t -> bool) =
          fun (x1049 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1049) "copyWithin")
        let (set_copyWithin : t -> bool -> unit) =
          fun (x1050 : t) ->
            fun (x1051 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1050) "copyWithin"
                (Ojs.bool_to_js x1051)
        let (get_entries : t -> bool) =
          fun (x1052 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1052) "entries")
        let (set_entries : t -> bool -> unit) =
          fun (x1053 : t) ->
            fun (x1054 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1053) "entries"
                (Ojs.bool_to_js x1054)
        let (get_fill : t -> bool) =
          fun (x1055 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1055) "fill")
        let (set_fill : t -> bool -> unit) =
          fun (x1056 : t) ->
            fun (x1057 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1056) "fill"
                (Ojs.bool_to_js x1057)
        let (get_find : t -> bool) =
          fun (x1058 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1058) "find")
        let (set_find : t -> bool -> unit) =
          fun (x1059 : t) ->
            fun (x1060 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1059) "find"
                (Ojs.bool_to_js x1060)
        let (get_findIndex : t -> bool) =
          fun (x1061 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1061) "findIndex")
        let (set_findIndex : t -> bool -> unit) =
          fun (x1062 : t) ->
            fun (x1063 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1062) "findIndex"
                (Ojs.bool_to_js x1063)
        let (get_keys : t -> bool) =
          fun (x1064 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1064) "keys")
        let (set_keys : t -> bool -> unit) =
          fun (x1065 : t) ->
            fun (x1066 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1065) "keys"
                (Ojs.bool_to_js x1066)
        let (get_values : t -> bool) =
          fun (x1067 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1067) "values")
        let (set_values : t -> bool -> unit) =
          fun (x1068 : t) ->
            fun (x1069 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1068) "values"
                (Ojs.bool_to_js x1069)
      end
    type 'T t =
      [ `Array of 'T  | 'T ArrayLike.tags_1 | 'T IterableIterator.tags_1]
        intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1072 : Ojs.t) -> t_of_js __T_of_js x1072
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1070 : __T t) -> t_to_js __T_to_js x1070
    type 'T tags =
      [ `Array of 'T  | 'T ArrayLike.tags_1 | 'T IterableIterator.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `Array of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x1076 : Ojs.t) -> intf_of_js __tags_of_js x1076
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x1074 : __tags intf) -> intf_to_js __tags_to_js x1074
    let (flatMap :
      ('tags, 'T) this ->
        callback:(this:'This ->
                    value:'T ->
                      index:float ->
                        array:'T list -> ('U, 'U ReadonlyArray.t) union2)
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x1090 : ('tags, 'T) this) ->
        fun
          ~callback:(x1078 :
                      this:'This ->
                        value:'T ->
                          index:float ->
                            array:'T list -> ('U, 'U ReadonlyArray.t) union2)
          ->
          fun ?thisArg:(x1079 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1093 = this_to_js Obj.magic Obj.magic x1090 in
                 Ojs.call (Ojs.get_prop_ascii x1093 "flatMap") "apply"
                   [|x1093;((let x1080 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1080 "push"
                                  [|(Ojs.fun_to_js 4
                                       (fun (x1082 : Ojs.t) ->
                                          fun (x1083 : Ojs.t) ->
                                            fun (x1084 : Ojs.t) ->
                                              fun (x1085 : Ojs.t) ->
                                                union2_to_js Obj.magic
                                                  (fun
                                                     (x1088 :
                                                       'U ReadonlyArray.t)
                                                     ->
                                                     ReadonlyArray.t_to_js
                                                       Obj.magic x1088)
                                                  (x1078
                                                     ~this:(Obj.magic x1082)
                                                     ~value:(Obj.magic x1083)
                                                     ~index:(Ojs.float_of_js
                                                               x1084)
                                                     ~array:(Ojs.list_of_js
                                                               Obj.magic
                                                               x1085))))|]);
                             (match x1079 with
                              | Some x1081 ->
                                  ignore
                                    (Ojs.call x1080 "push"
                                       [|(Obj.magic x1081)|])
                              | None -> ());
                             x1080))|])
    let (flat :
      ('tags, 'T) this ->
        this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list)
      =
      fun (x1099 : ('tags, 'T) this) ->
        fun ~this:(x1095 : 'A) ->
          fun ?depth:(x1096 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x1103 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x1103)
                (let x1102 = this_to_js Obj.magic Obj.magic x1099 in
                 Ojs.call (Ojs.get_prop_ascii x1102 "flat") "apply"
                   [|x1102;((let x1097 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1097 "push" [|(Obj.magic x1095)|]);
                             (match x1096 with
                              | Some x1098 ->
                                  ignore
                                    (Ojs.call x1097 "push"
                                       [|(Obj.magic x1098)|])
                              | None -> ());
                             x1097))|])
    let (includes :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> bool)
      =
      fun (x1110 : ('tags, 'T) this) ->
        fun ~searchElement:(x1106 : 'T) ->
          fun ?fromIndex:(x1107 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1113 = this_to_js Obj.magic Obj.magic x1110 in
                 Ojs.call (Ojs.get_prop_ascii x1113 "includes") "apply"
                   [|x1113;((let x1108 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1108 "push" [|(Obj.magic x1106)|]);
                             (match x1107 with
                              | Some x1109 ->
                                  ignore
                                    (Ojs.call x1108 "push"
                                       [|(Ojs.float_to_js x1109)|])
                              | None -> ());
                             x1108))|])
    let (entries : ('tags, 'T) this -> (float * 'T) IterableIterator.t) =
      fun (x1114 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x1117 : Ojs.t) ->
             let x1118 = x1117 in
             ((Ojs.float_of_js (Ojs.array_get x1118 0)),
               (Obj.magic (Ojs.array_get x1118 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x1114) "entries" [||])
    let (keys : ('tags, 'T) this -> float IterableIterator.t) =
      fun (x1119 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x1119) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x1123 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1123) "values" [||])
    let (find :
      ('tags, 'T) this ->
        predicate:(this:unit ->
                     value:'T -> index:float -> obj:'T list -> bool)
          -> ?thisArg:any -> unit -> 'S or_undefined)
      =
      fun (x1136 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1127 :
                       this:unit ->
                         value:'T -> index:float -> obj:'T list -> bool)
          ->
          fun ?thisArg:(x1128 : any option) ->
            fun () ->
              or_undefined_of_js Obj.magic
                (let x1139 = this_to_js Obj.magic Obj.magic x1136 in
                 Ojs.call (Ojs.get_prop_ascii x1139 "find") "apply"
                   [|x1139;((let x1129 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1129 "push"
                                  [|(Ojs.fun_to_js 4
                                       (fun (x1131 : Ojs.t) ->
                                          fun (x1132 : Ojs.t) ->
                                            fun (x1133 : Ojs.t) ->
                                              fun (x1134 : Ojs.t) ->
                                                Ojs.bool_to_js
                                                  (x1127
                                                     ~this:(Ojs.unit_of_js
                                                              x1131)
                                                     ~value:(Obj.magic x1132)
                                                     ~index:(Ojs.float_of_js
                                                               x1133)
                                                     ~obj:(Ojs.list_of_js
                                                             Obj.magic x1134))))|]);
                             (match x1128 with
                              | Some x1130 ->
                                  ignore
                                    (Ojs.call x1129 "push"
                                       [|(any_to_js x1130)|])
                              | None -> ());
                             x1129))|])
    let (find' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T or_undefined)
      =
      fun (x1149 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1141 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x1142 : any option) ->
            fun () ->
              or_undefined_of_js Obj.magic
                (let x1152 = this_to_js Obj.magic Obj.magic x1149 in
                 Ojs.call (Ojs.get_prop_ascii x1152 "find") "apply"
                   [|x1152;((let x1143 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1143 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1145 : Ojs.t) ->
                                          fun (x1146 : Ojs.t) ->
                                            fun (x1147 : Ojs.t) ->
                                              unknown_to_js
                                                (x1141
                                                   ~value:(Obj.magic x1145)
                                                   ~index:(Ojs.float_of_js
                                                             x1146)
                                                   ~obj:(Ojs.list_of_js
                                                           Obj.magic x1147))))|]);
                             (match x1142 with
                              | Some x1144 ->
                                  ignore
                                    (Ojs.call x1143 "push"
                                       [|(any_to_js x1144)|])
                              | None -> ());
                             x1143))|])
    let (findIndex :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x1162 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1154 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x1155 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x1165 = this_to_js Obj.magic Obj.magic x1162 in
                 Ojs.call (Ojs.get_prop_ascii x1165 "findIndex") "apply"
                   [|x1165;((let x1156 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1156 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1158 : Ojs.t) ->
                                          fun (x1159 : Ojs.t) ->
                                            fun (x1160 : Ojs.t) ->
                                              unknown_to_js
                                                (x1154
                                                   ~value:(Obj.magic x1158)
                                                   ~index:(Ojs.float_of_js
                                                             x1159)
                                                   ~obj:(Ojs.list_of_js
                                                           Obj.magic x1160))))|]);
                             (match x1155 with
                              | Some x1157 ->
                                  ignore
                                    (Ojs.call x1156 "push"
                                       [|(any_to_js x1157)|])
                              | None -> ());
                             x1156))|])
    let (fill :
      ('tags, 'T) this ->
        value:'T -> ?start:float -> ?end_:float -> unit -> ('tags, 'T) this)
      =
      fun (x1172 : ('tags, 'T) this) ->
        fun ~value:(x1166 : 'T) ->
          fun ?start:(x1167 : float option) ->
            fun ?end_:(x1168 : float option) ->
              fun () ->
                this_of_js Obj.magic Obj.magic
                  (let x1175 = this_to_js Obj.magic Obj.magic x1172 in
                   Ojs.call (Ojs.get_prop_ascii x1175 "fill") "apply"
                     [|x1175;((let x1169 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1169 "push" [|(Obj.magic x1166)|]);
                               (match x1167 with
                                | Some x1171 ->
                                    ignore
                                      (Ojs.call x1169 "push"
                                         [|(Ojs.float_to_js x1171)|])
                                | None -> ());
                               (match x1168 with
                                | Some x1170 ->
                                    ignore
                                      (Ojs.call x1169 "push"
                                         [|(Ojs.float_to_js x1170)|])
                                | None -> ());
                               x1169))|])
    let (copyWithin :
      ('tags, 'T) this ->
        target:float ->
          start:float -> ?end_:float -> unit -> ('tags, 'T) this)
      =
      fun (x1183 : ('tags, 'T) this) ->
        fun ~target:(x1178 : float) ->
          fun ~start:(x1179 : float) ->
            fun ?end_:(x1180 : float option) ->
              fun () ->
                this_of_js Obj.magic Obj.magic
                  (let x1186 = this_to_js Obj.magic Obj.magic x1183 in
                   Ojs.call (Ojs.get_prop_ascii x1186 "copyWithin") "apply"
                     [|x1186;((let x1181 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1181 "push"
                                    [|(Ojs.float_to_js x1178)|]);
                               ignore
                                 (Ojs.call x1181 "push"
                                    [|(Ojs.float_to_js x1179)|]);
                               (match x1180 with
                                | Some x1182 ->
                                    ignore
                                      (Ojs.call x1181 "push"
                                         [|(Ojs.float_to_js x1182)|])
                                | None -> ());
                               x1181))|])
    let (get_length : ('tags, 'T) this -> float) =
      fun (x1189 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x1189) "length")
    let (set_length : ('tags, 'T) this -> float -> unit) =
      fun (x1192 : ('tags, 'T) this) ->
        fun (x1193 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x1192) "length"
            (Ojs.float_to_js x1193)
    let (toString : ('tags, 'T) this -> string) =
      fun (x1196 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x1196) "toString" [||])
    let (toLocaleString : ('tags, 'T) this -> string) =
      fun (x1199 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x1199) "toLocaleString"
             [||])
    let (pop : ('tags, 'T) this -> 'T or_undefined) =
      fun (x1202 : ('tags, 'T) this) ->
        or_undefined_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1202) "pop" [||])
    let (push : ('tags, 'T) this -> items:'T list -> float) =
      fun (x1209 : ('tags, 'T) this) ->
        fun ~items:(x1206 : 'T list) ->
          Ojs.float_of_js
            (let x1212 = this_to_js Obj.magic Obj.magic x1209 in
             Ojs.call (Ojs.get_prop_ascii x1212 "push") "apply"
               [|x1212;((let x1207 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1208 : 'T) ->
                              ignore
                                (Ojs.call x1207 "push" [|(Obj.magic x1208)|]))
                           x1206;
                         x1207))|])
    let (concat : ('tags, 'T) this -> items:'T ConcatArray.t list -> 'T list)
      =
      fun (x1217 : ('tags, 'T) this) ->
        fun ~items:(x1213 : 'T ConcatArray.t list) ->
          Ojs.list_of_js Obj.magic
            (let x1220 = this_to_js Obj.magic Obj.magic x1217 in
             Ojs.call (Ojs.get_prop_ascii x1220 "concat") "apply"
               [|x1220;((let x1214 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1215 : 'T ConcatArray.t) ->
                              ignore
                                (Ojs.call x1214 "push"
                                   [|(ConcatArray.t_to_js Obj.magic x1215)|]))
                           x1213;
                         x1214))|])
    let (concat' :
      ('tags, 'T) this -> items:('T, 'T ConcatArray.t) union2 list -> 'T list)
      =
      fun (x1228 : ('tags, 'T) this) ->
        fun ~items:(x1222 : ('T, 'T ConcatArray.t) union2 list) ->
          Ojs.list_of_js Obj.magic
            (let x1231 = this_to_js Obj.magic Obj.magic x1228 in
             Ojs.call (Ojs.get_prop_ascii x1231 "concat") "apply"
               [|x1231;((let x1223 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1224 : ('T, 'T ConcatArray.t) union2) ->
                              ignore
                                (Ojs.call x1223 "push"
                                   [|(union2_to_js Obj.magic
                                        (fun (x1226 : 'T ConcatArray.t) ->
                                           ConcatArray.t_to_js Obj.magic
                                             x1226) x1224)|])) x1222;
                         x1223))|])
    let (join : ('tags, 'T) this -> ?separator:string -> unit -> string) =
      fun (x1236 : ('tags, 'T) this) ->
        fun ?separator:(x1233 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x1239 = this_to_js Obj.magic Obj.magic x1236 in
               Ojs.call (Ojs.get_prop_ascii x1239 "join") "apply"
                 [|x1239;((let x1234 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1233 with
                            | Some x1235 ->
                                ignore
                                  (Ojs.call x1234 "push"
                                     [|(Ojs.string_to_js x1235)|])
                            | None -> ());
                           x1234))|])
    let (reverse : ('tags, 'T) this -> 'T list) =
      fun (x1240 : ('tags, 'T) this) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1240) "reverse" [||])
    let (shift : ('tags, 'T) this -> 'T or_undefined) =
      fun (x1244 : ('tags, 'T) this) ->
        or_undefined_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1244) "shift" [||])
    let (slice :
      ('tags, 'T) this -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x1253 : ('tags, 'T) this) ->
        fun ?start:(x1248 : float option) ->
          fun ?end_:(x1249 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1256 = this_to_js Obj.magic Obj.magic x1253 in
                 Ojs.call (Ojs.get_prop_ascii x1256 "slice") "apply"
                   [|x1256;((let x1250 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1248 with
                              | Some x1252 ->
                                  ignore
                                    (Ojs.call x1250 "push"
                                       [|(Ojs.float_to_js x1252)|])
                              | None -> ());
                             (match x1249 with
                              | Some x1251 ->
                                  ignore
                                    (Ojs.call x1250 "push"
                                       [|(Ojs.float_to_js x1251)|])
                              | None -> ());
                             x1250))|])
    let (sort :
      ('tags, 'T) this ->
        ?compareFn:(a:'T -> b:'T -> float) -> unit -> ('tags, 'T) this)
      =
      fun (x1263 : ('tags, 'T) this) ->
        fun ?compareFn:(x1258 : (a:'T -> b:'T -> float) option) ->
          fun () ->
            this_of_js Obj.magic Obj.magic
              (let x1266 = this_to_js Obj.magic Obj.magic x1263 in
               Ojs.call (Ojs.get_prop_ascii x1266 "sort") "apply"
                 [|x1266;((let x1259 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1258 with
                            | Some x1260 ->
                                ignore
                                  (Ojs.call x1259 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x1261 : Ojs.t) ->
                                             fun (x1262 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x1260 ~a:(Obj.magic x1261)
                                                    ~b:(Obj.magic x1262))))|])
                            | None -> ());
                           x1259))|])
    let (splice :
      ('tags, 'T) this ->
        start:float -> ?deleteCount:float -> unit -> 'T list)
      =
      fun (x1273 : ('tags, 'T) this) ->
        fun ~start:(x1269 : float) ->
          fun ?deleteCount:(x1270 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1276 = this_to_js Obj.magic Obj.magic x1273 in
                 Ojs.call (Ojs.get_prop_ascii x1276 "splice") "apply"
                   [|x1276;((let x1271 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1271 "push"
                                  [|(Ojs.float_to_js x1269)|]);
                             (match x1270 with
                              | Some x1272 ->
                                  ignore
                                    (Ojs.call x1271 "push"
                                       [|(Ojs.float_to_js x1272)|])
                              | None -> ());
                             x1271))|])
    let (splice' :
      ('tags, 'T) this ->
        start:float -> deleteCount:float -> items:'T list -> 'T list)
      =
      fun (x1283 : ('tags, 'T) this) ->
        fun ~start:(x1278 : float) ->
          fun ~deleteCount:(x1279 : float) ->
            fun ~items:(x1280 : 'T list) ->
              Ojs.list_of_js Obj.magic
                (let x1286 = this_to_js Obj.magic Obj.magic x1283 in
                 Ojs.call (Ojs.get_prop_ascii x1286 "splice") "apply"
                   [|x1286;((let x1281 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1281 "push"
                                  [|(Ojs.float_to_js x1278)|]);
                             ignore
                               (Ojs.call x1281 "push"
                                  [|(Ojs.float_to_js x1279)|]);
                             List.iter
                               (fun (x1282 : 'T) ->
                                  ignore
                                    (Ojs.call x1281 "push"
                                       [|(Obj.magic x1282)|])) x1280;
                             x1281))|])
    let (unshift : ('tags, 'T) this -> items:'T list -> float) =
      fun (x1291 : ('tags, 'T) this) ->
        fun ~items:(x1288 : 'T list) ->
          Ojs.float_of_js
            (let x1294 = this_to_js Obj.magic Obj.magic x1291 in
             Ojs.call (Ojs.get_prop_ascii x1294 "unshift") "apply"
               [|x1294;((let x1289 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1290 : 'T) ->
                              ignore
                                (Ojs.call x1289 "push" [|(Obj.magic x1290)|]))
                           x1288;
                         x1289))|])
    let (indexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x1299 : ('tags, 'T) this) ->
        fun ~searchElement:(x1295 : 'T) ->
          fun ?fromIndex:(x1296 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1302 = this_to_js Obj.magic Obj.magic x1299 in
                 Ojs.call (Ojs.get_prop_ascii x1302 "indexOf") "apply"
                   [|x1302;((let x1297 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1297 "push" [|(Obj.magic x1295)|]);
                             (match x1296 with
                              | Some x1298 ->
                                  ignore
                                    (Ojs.call x1297 "push"
                                       [|(Ojs.float_to_js x1298)|])
                              | None -> ());
                             x1297))|])
    let (lastIndexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x1307 : ('tags, 'T) this) ->
        fun ~searchElement:(x1303 : 'T) ->
          fun ?fromIndex:(x1304 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1310 = this_to_js Obj.magic Obj.magic x1307 in
                 Ojs.call (Ojs.get_prop_ascii x1310 "lastIndexOf") "apply"
                   [|x1310;((let x1305 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1305 "push" [|(Obj.magic x1303)|]);
                             (match x1304 with
                              | Some x1306 ->
                                  ignore
                                    (Ojs.call x1305 "push"
                                       [|(Ojs.float_to_js x1306)|])
                              | None -> ());
                             x1305))|])
    let (every :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1319 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1311 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x1312 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1322 = this_to_js Obj.magic Obj.magic x1319 in
                 Ojs.call (Ojs.get_prop_ascii x1322 "every") "apply"
                   [|x1322;((let x1313 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1313 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1315 : Ojs.t) ->
                                          fun (x1316 : Ojs.t) ->
                                            fun (x1317 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1311
                                                   ~value:(Obj.magic x1315)
                                                   ~index:(Ojs.float_of_js
                                                             x1316)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1317))))|]);
                             (match x1312 with
                              | Some x1314 ->
                                  ignore
                                    (Ojs.call x1313 "push"
                                       [|(any_to_js x1314)|])
                              | None -> ());
                             x1313))|])
    let (every' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1331 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1323 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1324 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1334 = this_to_js Obj.magic Obj.magic x1331 in
                 Ojs.call (Ojs.get_prop_ascii x1334 "every") "apply"
                   [|x1334;((let x1325 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1325 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1327 : Ojs.t) ->
                                          fun (x1328 : Ojs.t) ->
                                            fun (x1329 : Ojs.t) ->
                                              unknown_to_js
                                                (x1323
                                                   ~value:(Obj.magic x1327)
                                                   ~index:(Ojs.float_of_js
                                                             x1328)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1329))))|]);
                             (match x1324 with
                              | Some x1326 ->
                                  ignore
                                    (Ojs.call x1325 "push"
                                       [|(any_to_js x1326)|])
                              | None -> ());
                             x1325))|])
    let (some :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1343 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1335 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1336 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1346 = this_to_js Obj.magic Obj.magic x1343 in
                 Ojs.call (Ojs.get_prop_ascii x1346 "some") "apply"
                   [|x1346;((let x1337 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1337 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1339 : Ojs.t) ->
                                          fun (x1340 : Ojs.t) ->
                                            fun (x1341 : Ojs.t) ->
                                              unknown_to_js
                                                (x1335
                                                   ~value:(Obj.magic x1339)
                                                   ~index:(Ojs.float_of_js
                                                             x1340)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1341))))|]);
                             (match x1336 with
                              | Some x1338 ->
                                  ignore
                                    (Ojs.call x1337 "push"
                                       [|(any_to_js x1338)|])
                              | None -> ());
                             x1337))|])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x1355 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1347 :
                        value:'T -> index:float -> array:'T list -> unit)
          ->
          fun ?thisArg:(x1348 : any option) ->
            fun () ->
              ignore
                (let x1358 = this_to_js Obj.magic Obj.magic x1355 in
                 Ojs.call (Ojs.get_prop_ascii x1358 "forEach") "apply"
                   [|x1358;((let x1349 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1349 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1351 : Ojs.t) ->
                                          fun (x1352 : Ojs.t) ->
                                            fun (x1353 : Ojs.t) ->
                                              x1347 ~value:(Obj.magic x1351)
                                                ~index:(Ojs.float_of_js x1352)
                                                ~array:(Ojs.list_of_js
                                                          Obj.magic x1353)))|]);
                             (match x1348 with
                              | Some x1350 ->
                                  ignore
                                    (Ojs.call x1349 "push"
                                       [|(any_to_js x1350)|])
                              | None -> ());
                             x1349))|])
    let (map :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x1367 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1359 :
                        value:'T -> index:float -> array:'T list -> 'U)
          ->
          fun ?thisArg:(x1360 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1370 = this_to_js Obj.magic Obj.magic x1367 in
                 Ojs.call (Ojs.get_prop_ascii x1370 "map") "apply"
                   [|x1370;((let x1361 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1361 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1363 : Ojs.t) ->
                                          fun (x1364 : Ojs.t) ->
                                            fun (x1365 : Ojs.t) ->
                                              Obj.magic
                                                (x1359
                                                   ~value:(Obj.magic x1363)
                                                   ~index:(Ojs.float_of_js
                                                             x1364)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1365))))|]);
                             (match x1360 with
                              | Some x1362 ->
                                  ignore
                                    (Ojs.call x1361 "push"
                                       [|(any_to_js x1362)|])
                              | None -> ());
                             x1361))|])
    let (filter :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x1380 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1372 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x1373 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1383 = this_to_js Obj.magic Obj.magic x1380 in
                 Ojs.call (Ojs.get_prop_ascii x1383 "filter") "apply"
                   [|x1383;((let x1374 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1374 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1376 : Ojs.t) ->
                                          fun (x1377 : Ojs.t) ->
                                            fun (x1378 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1372
                                                   ~value:(Obj.magic x1376)
                                                   ~index:(Ojs.float_of_js
                                                             x1377)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1378))))|]);
                             (match x1373 with
                              | Some x1375 ->
                                  ignore
                                    (Ojs.call x1374 "push"
                                       [|(any_to_js x1375)|])
                              | None -> ());
                             x1374))|])
    let (filter' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T list)
      =
      fun (x1393 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1385 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1386 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1396 = this_to_js Obj.magic Obj.magic x1393 in
                 Ojs.call (Ojs.get_prop_ascii x1396 "filter") "apply"
                   [|x1396;((let x1387 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1387 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1389 : Ojs.t) ->
                                          fun (x1390 : Ojs.t) ->
                                            fun (x1391 : Ojs.t) ->
                                              unknown_to_js
                                                (x1385
                                                   ~value:(Obj.magic x1389)
                                                   ~index:(Ojs.float_of_js
                                                             x1390)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1391))))|]);
                             (match x1386 with
                              | Some x1388 ->
                                  ignore
                                    (Ojs.call x1387 "push"
                                       [|(any_to_js x1388)|])
                              | None -> ());
                             x1387))|])
    let (reduce :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1404 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1398 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1404) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x1399 : Ojs.t) ->
                       fun (x1400 : Ojs.t) ->
                         fun (x1401 : Ojs.t) ->
                           fun (x1402 : Ojs.t) ->
                             Obj.magic
                               (x1398 ~previousValue:(Obj.magic x1399)
                                  ~currentValue:(Obj.magic x1400)
                                  ~currentIndex:(Ojs.float_of_js x1401)
                                  ~array:(Ojs.list_of_js Obj.magic x1402))))|])
    let (reduce' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1414 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1407 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1413 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1414) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1408 : Ojs.t) ->
                         fun (x1409 : Ojs.t) ->
                           fun (x1410 : Ojs.t) ->
                             fun (x1411 : Ojs.t) ->
                               Obj.magic
                                 (x1407 ~previousValue:(Obj.magic x1408)
                                    ~currentValue:(Obj.magic x1409)
                                    ~currentIndex:(Ojs.float_of_js x1410)
                                    ~array:(Ojs.list_of_js Obj.magic x1411))));(
                   Obj.magic x1413)|])
    let (reduce'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1424 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1417 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1423 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1424) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1418 : Ojs.t) ->
                         fun (x1419 : Ojs.t) ->
                           fun (x1420 : Ojs.t) ->
                             fun (x1421 : Ojs.t) ->
                               Obj.magic
                                 (x1417 ~previousValue:(Obj.magic x1418)
                                    ~currentValue:(Obj.magic x1419)
                                    ~currentIndex:(Ojs.float_of_js x1420)
                                    ~array:(Ojs.list_of_js Obj.magic x1421))));(
                   Obj.magic x1423)|])
    let (reduceRight :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1433 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1427 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1433) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x1428 : Ojs.t) ->
                       fun (x1429 : Ojs.t) ->
                         fun (x1430 : Ojs.t) ->
                           fun (x1431 : Ojs.t) ->
                             Obj.magic
                               (x1427 ~previousValue:(Obj.magic x1428)
                                  ~currentValue:(Obj.magic x1429)
                                  ~currentIndex:(Ojs.float_of_js x1430)
                                  ~array:(Ojs.list_of_js Obj.magic x1431))))|])
    let (reduceRight' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1443 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1436 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1442 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1443) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1437 : Ojs.t) ->
                         fun (x1438 : Ojs.t) ->
                           fun (x1439 : Ojs.t) ->
                             fun (x1440 : Ojs.t) ->
                               Obj.magic
                                 (x1436 ~previousValue:(Obj.magic x1437)
                                    ~currentValue:(Obj.magic x1438)
                                    ~currentIndex:(Ojs.float_of_js x1439)
                                    ~array:(Ojs.list_of_js Obj.magic x1440))));(
                   Obj.magic x1442)|])
    let (reduceRight'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1453 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1446 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1452 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1453) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1447 : Ojs.t) ->
                         fun (x1448 : Ojs.t) ->
                           fun (x1449 : Ojs.t) ->
                             fun (x1450 : Ojs.t) ->
                               Obj.magic
                                 (x1446 ~previousValue:(Obj.magic x1447)
                                    ~currentValue:(Obj.magic x1448)
                                    ~currentIndex:(Ojs.float_of_js x1449)
                                    ~array:(Ojs.list_of_js Obj.magic x1450))));(
                   Obj.magic x1452)|])
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x1456 : ('tags, 'T) this) ->
        fun (x1459 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x1456)
               (Ojs.float_to_js x1459))
    let (set : ('tags, 'T) this -> float -> 'T -> unit) =
      fun (x1460 : ('tags, 'T) this) ->
        fun (x1463 : float) ->
          fun (x1464 : 'T) ->
            Ojs.set_prop (this_to_js Obj.magic Obj.magic x1460)
              (Ojs.float_to_js x1463) (Obj.magic x1464)
    let (from : ('T ArrayLike.t, 'T Iterable.t) union2 -> 'T list) =
      fun (x1465 : ('T ArrayLike.t, 'T Iterable.t) union2) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|(union2_to_js
                  (fun (x1466 : 'T ArrayLike.t) ->
                     ArrayLike.t_to_js Obj.magic x1466)
                  (fun (x1468 : 'T Iterable.t) ->
                     Iterable.t_to_js Obj.magic x1468) x1465)|])
    let (from' :
      iterable:('T ArrayLike.t, 'T Iterable.t) union2 ->
        mapfn:(v:'T -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun ~iterable:(x1471 : ('T ArrayLike.t, 'T Iterable.t) union2) ->
        fun ~mapfn:(x1472 : v:'T -> k:float -> 'U) ->
          fun ?thisArg:(x1473 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1482 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x1482 "from") "apply"
                   [|x1482;((let x1474 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1474 "push"
                                  [|(union2_to_js
                                       (fun (x1478 : 'T ArrayLike.t) ->
                                          ArrayLike.t_to_js Obj.magic x1478)
                                       (fun (x1480 : 'T Iterable.t) ->
                                          Iterable.t_to_js Obj.magic x1480)
                                       x1471)|]);
                             ignore
                               (Ojs.call x1474 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x1476 : Ojs.t) ->
                                          fun (x1477 : Ojs.t) ->
                                            Obj.magic
                                              (x1472 ~v:(Obj.magic x1476)
                                                 ~k:(Ojs.float_of_js x1477))))|]);
                             (match x1473 with
                              | Some x1475 ->
                                  ignore
                                    (Ojs.call x1474 "push"
                                       [|(any_to_js x1475)|])
                              | None -> ());
                             x1474))|])
    let (from'' : 'T ArrayLike.t -> 'T list) =
      fun (x1484 : 'T ArrayLike.t) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|(ArrayLike.t_to_js Obj.magic x1484)|])
    let (from''' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun ~arrayLike:(x1487 : 'T ArrayLike.t) ->
        fun ~mapfn:(x1488 : v:'T -> k:float -> 'U) ->
          fun ?thisArg:(x1489 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1495 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x1495 "from") "apply"
                   [|x1495;((let x1490 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1490 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x1487)|]);
                             ignore
                               (Ojs.call x1490 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x1492 : Ojs.t) ->
                                          fun (x1493 : Ojs.t) ->
                                            Obj.magic
                                              (x1488 ~v:(Obj.magic x1492)
                                                 ~k:(Ojs.float_of_js x1493))))|]);
                             (match x1489 with
                              | Some x1491 ->
                                  ignore
                                    (Ojs.call x1490 "push"
                                       [|(any_to_js x1491)|])
                              | None -> ());
                             x1490))|])
    let (of_ : 'T list -> 'T list) =
      fun (x1497 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (let x1500 = Ojs.get_prop_ascii Ojs.global "Array" in
           Ojs.call (Ojs.get_prop_ascii x1500 "of") "apply"
             [|x1500;((let x1498 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x1499 : 'T) ->
                            ignore
                              (Ojs.call x1498 "push" [|(Obj.magic x1499)|]))
                         x1497;
                       x1498))|])
    let (create : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x1502 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
               (let x1503 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1502 with
                 | Some x1504 ->
                     ignore
                       (Ojs.call x1503 "push" [|(Ojs.float_to_js x1504)|])
                 | None -> ());
                x1503))
    let (create' : float -> 'T list) =
      fun (x1506 : float) ->
        Ojs.list_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x1506)|])
    let (create'' : 'T list -> 'T list) =
      fun (x1508 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
             (let x1509 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x1510 : 'T) ->
                   ignore (Ojs.call x1509 "push" [|(Obj.magic x1510)|]))
                x1508;
              x1509))
    let (invoke : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x1512 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
               [|Ojs.null;((let x1513 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x1512 with
                             | Some x1514 ->
                                 ignore
                                   (Ojs.call x1513 "push"
                                      [|(Ojs.float_to_js x1514)|])
                             | None -> ());
                            x1513))|])
    let (invoke' : float -> 'T list) =
      fun (x1516 : float) ->
        Ojs.list_of_js Obj.magic
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x1516)|])
    let (invoke'' : 'T list -> 'T list) =
      fun (x1518 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
             [|Ojs.null;((let x1519 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x1520 : 'T) ->
                               ignore
                                 (Ojs.call x1519 "push" [|(Obj.magic x1520)|]))
                            x1518;
                          x1519))|])
    let (isArray : any -> bool) =
      fun (x1522 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "isArray"
             [|(any_to_js x1522)|])
    let (prototype : unit -> any list) =
      fun () ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Array")
             "prototype")
    let cast_from = Obj.magic
    let (to_ml : 'T t -> 'T list) =
      fun (x1524 : 'T t) ->
        Ojs.list_of_js Obj.magic (t_to_js Obj.magic x1524)
    let (of_ml : 'T list -> 'T t) =
      fun (x1527 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x1527)
  end
module RegExpMatchArray =
  struct
    module AnonymousInterface13 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x1531 : Ojs.t) -> x1531
        and t_to_js : t -> Ojs.t = fun (x1530 : Ojs.t) -> x1530
        let (get : t -> string -> string) =
          fun (x1532 : t) ->
            fun (x1533 : string) ->
              Ojs.string_of_js
                (Ojs.get_prop (t_to_js x1532) (Ojs.string_to_js x1533))
        let (set : t -> string -> string -> unit) =
          fun (x1534 : t) ->
            fun (x1535 : string) ->
              fun (x1536 : string) ->
                Ojs.set_prop (t_to_js x1534) (Ojs.string_to_js x1535)
                  (Ojs.string_to_js x1536)
      end
    type t =
      [ `Array of string  | `Array of string  | `RegExpMatchArray 
      | string ArrayLike.tags_1 | string IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1538 : Ojs.t) -> t_of_js x1538
    and t_0_to_js : t_0 -> Ojs.t = fun (x1537 : t) -> t_to_js x1537
    type tags =
      [ `Array of string  | `Array of string  | `RegExpMatchArray 
      | string ArrayLike.tags_1 | string IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RegExpMatchArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1541 : Ojs.t) -> intf_of_js __tags_of_js x1541
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1539 : __tags intf) -> intf_to_js __tags_to_js x1539
    let (get_groups : 'tags this -> AnonymousInterface13.t) =
      fun (x1543 : 'tags this) ->
        AnonymousInterface13.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1543) "groups")
    let (set_groups : 'tags this -> AnonymousInterface13.t -> unit) =
      fun (x1545 : 'tags this) ->
        fun (x1546 : AnonymousInterface13.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1545) "groups"
            (AnonymousInterface13.t_to_js x1546)
    let (get_index : 'tags this -> float) =
      fun (x1548 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1548) "index")
    let (set_index : 'tags this -> float -> unit) =
      fun (x1550 : 'tags this) ->
        fun (x1551 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1550) "index"
            (Ojs.float_to_js x1551)
    let (get_input : 'tags this -> string) =
      fun (x1553 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1553) "input")
    let (set_input : 'tags this -> string -> unit) =
      fun (x1555 : 'tags this) ->
        fun (x1556 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1555) "input"
            (Ojs.string_to_js x1556)
    let cast_from = Obj.magic
  end
module RegExpExecArray =
  struct
    module AnonymousInterface13 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x1559 : Ojs.t) -> x1559
        and t_to_js : t -> Ojs.t = fun (x1558 : Ojs.t) -> x1558
        let (get : t -> string -> string) =
          fun (x1560 : t) ->
            fun (x1561 : string) ->
              Ojs.string_of_js
                (Ojs.get_prop (t_to_js x1560) (Ojs.string_to_js x1561))
        let (set : t -> string -> string -> unit) =
          fun (x1562 : t) ->
            fun (x1563 : string) ->
              fun (x1564 : string) ->
                Ojs.set_prop (t_to_js x1562) (Ojs.string_to_js x1563)
                  (Ojs.string_to_js x1564)
      end
    type t =
      [ `Array of string  | `Array of string  | `RegExpExecArray 
      | string ArrayLike.tags_1 | string IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1566 : Ojs.t) -> t_of_js x1566
    and t_0_to_js : t_0 -> Ojs.t = fun (x1565 : t) -> t_to_js x1565
    type tags =
      [ `Array of string  | `Array of string  | `RegExpExecArray 
      | string ArrayLike.tags_1 | string IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RegExpExecArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1569 : Ojs.t) -> intf_of_js __tags_of_js x1569
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1567 : __tags intf) -> intf_to_js __tags_to_js x1567
    let (get_groups : 'tags this -> AnonymousInterface13.t) =
      fun (x1571 : 'tags this) ->
        AnonymousInterface13.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1571) "groups")
    let (set_groups : 'tags this -> AnonymousInterface13.t -> unit) =
      fun (x1573 : 'tags this) ->
        fun (x1574 : AnonymousInterface13.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1573) "groups"
            (AnonymousInterface13.t_to_js x1574)
    let (get_index : 'tags this -> float) =
      fun (x1576 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1576) "index")
    let (set_index : 'tags this -> float -> unit) =
      fun (x1578 : 'tags this) ->
        fun (x1579 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1578) "index"
            (Ojs.float_to_js x1579)
    let (get_input : 'tags this -> string) =
      fun (x1581 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1581) "input")
    let (set_input : 'tags this -> string -> unit) =
      fun (x1583 : 'tags this) ->
        fun (x1584 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1583) "input"
            (Ojs.string_to_js x1584)
    let cast_from = Obj.magic
  end
module RegExp =
  struct
    type t = [ `RegExp ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1587 : Ojs.t) -> t_of_js x1587
    and t_0_to_js : t_0 -> Ojs.t = fun (x1586 : t) -> t_to_js x1586
    type tags = [ `RegExp ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RegExp ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1590 : Ojs.t) -> intf_of_js __tags_of_js x1590
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1588 : __tags intf) -> intf_to_js __tags_to_js x1588
    let (get_dotAll : 'tags this -> bool) =
      fun (x1592 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1592) "dotAll")
    let (get_flags : 'tags this -> string) =
      fun (x1594 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1594) "flags")
    let (get_sticky : 'tags this -> bool) =
      fun (x1596 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1596) "sticky")
    let (get_unicode : 'tags this -> bool) =
      fun (x1598 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1598) "unicode")
    let (exec : 'tags this -> string:string -> RegExpExecArray.t or_null) =
      fun (x1601 : 'tags this) ->
        fun ~string:(x1600 : string) ->
          or_null_of_js RegExpExecArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x1601) "exec"
               [|(Ojs.string_to_js x1600)|])
    let (test : 'tags this -> string:string -> bool) =
      fun (x1605 : 'tags this) ->
        fun ~string:(x1604 : string) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x1605) "test"
               [|(Ojs.string_to_js x1604)|])
    let (get_source : 'tags this -> string) =
      fun (x1607 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1607) "source")
    let (get_global : 'tags this -> bool) =
      fun (x1609 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1609) "global")
    let (get_ignoreCase : 'tags this -> bool) =
      fun (x1611 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1611) "ignoreCase")
    let (get_multiline : 'tags this -> bool) =
      fun (x1613 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1613) "multiline")
    let (get_lastIndex : 'tags this -> float) =
      fun (x1615 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1615) "lastIndex")
    let (set_lastIndex : 'tags this -> float -> unit) =
      fun (x1617 : 'tags this) ->
        fun (x1618 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1617) "lastIndex"
            (Ojs.float_to_js x1618)
    let (compile :
      'tags this -> pattern:string -> ?flags:string -> unit -> 'tags this) =
      fun (x1624 : 'tags this) ->
        fun ~pattern:(x1620 : string) ->
          fun ?flags:(x1621 : string option) ->
            fun () ->
              this_of_js Obj.magic
                (let x1626 = this_to_js Obj.magic x1624 in
                 Ojs.call (Ojs.get_prop_ascii x1626 "compile") "apply"
                   [|x1626;((let x1622 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1622 "push"
                                  [|(Ojs.string_to_js x1620)|]);
                             (match x1621 with
                              | Some x1623 ->
                                  ignore
                                    (Ojs.call x1622 "push"
                                       [|(Ojs.string_to_js x1623)|])
                              | None -> ());
                             x1622))|])
    let (create : pattern:t or_string -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1628 : t or_string) ->
        fun ?flags:(x1629 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RegExp")
                 (let x1630 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x1630 "push"
                       [|(or_string_to_js t_to_js x1628)|]);
                  (match x1629 with
                   | Some x1631 ->
                       ignore
                         (Ojs.call x1630 "push" [|(Ojs.string_to_js x1631)|])
                   | None -> ());
                  x1630))
    let (invoke : pattern:t or_string -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1633 : t or_string) ->
        fun ?flags:(x1634 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "apply"
                 [|Ojs.null;((let x1635 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x1635 "push"
                                   [|(or_string_to_js t_to_js x1633)|]);
                              (match x1634 with
                               | Some x1636 ->
                                   ignore
                                     (Ojs.call x1635 "push"
                                        [|(Ojs.string_to_js x1636)|])
                               | None -> ());
                              x1635))|])
    let (create' : t or_string -> t) =
      fun (x1638 : t or_string) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "RegExp")
             [|(or_string_to_js t_to_js x1638)|])
    let (create'' : pattern:string -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1640 : string) ->
        fun ?flags:(x1641 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RegExp")
                 (let x1642 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x1642 "push" [|(Ojs.string_to_js x1640)|]);
                  (match x1641 with
                   | Some x1643 ->
                       ignore
                         (Ojs.call x1642 "push" [|(Ojs.string_to_js x1643)|])
                   | None -> ());
                  x1642))
    let (invoke' : t or_string -> t) =
      fun (x1644 : t or_string) ->
        t_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "RegExp")
             [|(or_string_to_js t_to_js x1644)|])
    let (invoke'' : pattern:string -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1646 : string) ->
        fun ?flags:(x1647 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "apply"
                 [|Ojs.null;((let x1648 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x1648 "push"
                                   [|(Ojs.string_to_js x1646)|]);
                              (match x1647 with
                               | Some x1649 ->
                                   ignore
                                     (Ojs.call x1648 "push"
                                        [|(Ojs.string_to_js x1649)|])
                               | None -> ());
                              x1648))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "prototype")
    let (_1 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$1")
    let (_2 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$2")
    let (_3 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$3")
    let (_4 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$4")
    let (_5 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$5")
    let (_6 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$6")
    let (_7 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$7")
    let (_8 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$8")
    let (_9 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$9")
    let (input : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "input")
    let (__ : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$_")
    let (lastMatch : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "lastMatch")
    let (__' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$&")
    let (lastParen : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "lastParen")
    let (__'' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$+")
    let (leftContext : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "leftContext")
    let (__''' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$`")
    let (rightContext : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "rightContext")
    let (__'''' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$'")
    let cast_from = Obj.magic
  end
module Partial =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1651 : Ojs.t) -> any_of_js x1651
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x1650 : any) -> any_to_js x1650
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1654 : Ojs.t) -> t_of_js __T_of_js x1654
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1652 : __T t) -> t_to_js __T_to_js x1652
  end
module rec
  Date:sig
         type t = [ `Date ] intf
         type t_0 = t
         [@@@js.stop ]
         type tags = [ `Date ]
         type tags_0 = tags
         [@@@js.start ]
         [@@@js.implem type tags = [ `Date ]
           type tags_0 = tags]
         type 'tags this = 'tags intf constraint 'tags = [> `Date ]
         val t_to_js : t -> Ojs.t
         val t_of_js : Ojs.t -> t
         val t_0_to_js : t_0 -> Ojs.t
         val t_0_of_js : Ojs.t -> t_0
         val toLocaleString :
           'tags this ->
             ?locales:string list or_string ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toLocaleDateString :
           'tags this ->
             ?locales:string list or_string ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toLocaleTimeString :
           'tags this ->
             ?locales:string list or_string ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toString : 'tags this -> string
         val toDateString : 'tags this -> string
         val toTimeString : 'tags this -> string
         val toLocaleString' : 'tags this -> string
         val toLocaleDateString' : 'tags this -> string
         val toLocaleTimeString' : 'tags this -> string
         val valueOf : 'tags this -> float
         val getTime : 'tags this -> float
         val getFullYear : 'tags this -> float
         val getUTCFullYear : 'tags this -> float
         val getMonth : 'tags this -> float
         val getUTCMonth : 'tags this -> float
         val getDate : 'tags this -> float
         val getUTCDate : 'tags this -> float
         val getDay : 'tags this -> float
         val getUTCDay : 'tags this -> float
         val getHours : 'tags this -> float
         val getUTCHours : 'tags this -> float
         val getMinutes : 'tags this -> float
         val getUTCMinutes : 'tags this -> float
         val getSeconds : 'tags this -> float
         val getUTCSeconds : 'tags this -> float
         val getMilliseconds : 'tags this -> float
         val getUTCMilliseconds : 'tags this -> float
         val getTimezoneOffset : 'tags this -> float
         val setTime : 'tags this -> time:float -> float
         val setMilliseconds : 'tags this -> ms:float -> float
         val setUTCMilliseconds : 'tags this -> ms:float -> float
         val setSeconds :
           'tags this -> sec:float -> ?ms:float -> unit -> float
         val setUTCSeconds :
           'tags this -> sec:float -> ?ms:float -> unit -> float
         val setMinutes :
           'tags this ->
             min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setUTCMinutes :
           'tags this ->
             min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setHours :
           'tags this ->
             hours:float ->
               ?min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setUTCHours :
           'tags this ->
             hours:float ->
               ?min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setDate : 'tags this -> date:float -> float
         val setUTCDate : 'tags this -> date:float -> float
         val setMonth :
           'tags this -> month:float -> ?date:float -> unit -> float
         val setUTCMonth :
           'tags this -> month:float -> ?date:float -> unit -> float
         val setFullYear :
           'tags this ->
             year:float -> ?month:float -> ?date:float -> unit -> float
         val setUTCFullYear :
           'tags this ->
             year:float -> ?month:float -> ?date:float -> unit -> float
         val toUTCString : 'tags this -> string
         val toISOString : 'tags this -> string
         val toJSON : 'tags this -> ?key:any -> unit -> string
         val create : t or_string or_number -> t
         val create' : unit -> t
         val create'' : string or_number -> t
         val create''' :
           year:float ->
             month:float ->
               ?date:float ->
                 ?hours:float ->
                   ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> t
         val invoke : unit -> string
         val prototype : unit -> t
         val parse : string -> float
         val utc :
           year:float ->
             month:float ->
               ?date:float ->
                 ?hours:float ->
                   ?minutes:float ->
                     ?seconds:float -> ?ms:float -> unit -> float
         val now : unit -> float
         val cast_from : 'tags this -> t
       end =
  struct
    type t = [ `Date ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1657 : Ojs.t) -> t_of_js x1657
    and t_0_to_js : t_0 -> Ojs.t = fun (x1656 : t) -> t_to_js x1656
    type tags = [ `Date ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Date ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1660 : Ojs.t) -> intf_of_js __tags_of_js x1660
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1658 : __tags intf) -> intf_to_js __tags_to_js x1658
    let (toLocaleString :
      'tags this ->
        ?locales:string list or_string ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1669 : 'tags this) ->
        fun ?locales:(x1662 : string list or_string option) ->
          fun ?options:(x1663 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1671 = this_to_js Obj.magic x1669 in
                 Ojs.call (Ojs.get_prop_ascii x1671 "toLocaleString") "apply"
                   [|x1671;((let x1664 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1662 with
                              | Some x1666 ->
                                  ignore
                                    (Ojs.call x1664 "push"
                                       [|(or_string_to_js
                                            (fun (x1667 : string list) ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x1667)
                                            x1666)|])
                              | None -> ());
                             (match x1663 with
                              | Some x1665 ->
                                  ignore
                                    (Ojs.call x1664 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1665)|])
                              | None -> ());
                             x1664))|])
    let (toLocaleDateString :
      'tags this ->
        ?locales:string list or_string ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1679 : 'tags this) ->
        fun ?locales:(x1672 : string list or_string option) ->
          fun ?options:(x1673 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1681 = this_to_js Obj.magic x1679 in
                 Ojs.call (Ojs.get_prop_ascii x1681 "toLocaleDateString")
                   "apply"
                   [|x1681;((let x1674 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1672 with
                              | Some x1676 ->
                                  ignore
                                    (Ojs.call x1674 "push"
                                       [|(or_string_to_js
                                            (fun (x1677 : string list) ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x1677)
                                            x1676)|])
                              | None -> ());
                             (match x1673 with
                              | Some x1675 ->
                                  ignore
                                    (Ojs.call x1674 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1675)|])
                              | None -> ());
                             x1674))|])
    let (toLocaleTimeString :
      'tags this ->
        ?locales:string list or_string ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1689 : 'tags this) ->
        fun ?locales:(x1682 : string list or_string option) ->
          fun ?options:(x1683 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1691 = this_to_js Obj.magic x1689 in
                 Ojs.call (Ojs.get_prop_ascii x1691 "toLocaleTimeString")
                   "apply"
                   [|x1691;((let x1684 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1682 with
                              | Some x1686 ->
                                  ignore
                                    (Ojs.call x1684 "push"
                                       [|(or_string_to_js
                                            (fun (x1687 : string list) ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x1687)
                                            x1686)|])
                              | None -> ());
                             (match x1683 with
                              | Some x1685 ->
                                  ignore
                                    (Ojs.call x1684 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1685)|])
                              | None -> ());
                             x1684))|])
    let (toString : 'tags this -> string) =
      fun (x1692 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1692) "toString" [||])
    let (toDateString : 'tags this -> string) =
      fun (x1694 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1694) "toDateString" [||])
    let (toTimeString : 'tags this -> string) =
      fun (x1696 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1696) "toTimeString" [||])
    let (toLocaleString' : 'tags this -> string) =
      fun (x1698 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1698) "toLocaleString" [||])
    let (toLocaleDateString' : 'tags this -> string) =
      fun (x1700 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1700) "toLocaleDateString" [||])
    let (toLocaleTimeString' : 'tags this -> string) =
      fun (x1702 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1702) "toLocaleTimeString" [||])
    let (valueOf : 'tags this -> float) =
      fun (x1704 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1704) "valueOf" [||])
    let (getTime : 'tags this -> float) =
      fun (x1706 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1706) "getTime" [||])
    let (getFullYear : 'tags this -> float) =
      fun (x1708 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1708) "getFullYear" [||])
    let (getUTCFullYear : 'tags this -> float) =
      fun (x1710 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1710) "getUTCFullYear" [||])
    let (getMonth : 'tags this -> float) =
      fun (x1712 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1712) "getMonth" [||])
    let (getUTCMonth : 'tags this -> float) =
      fun (x1714 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1714) "getUTCMonth" [||])
    let (getDate : 'tags this -> float) =
      fun (x1716 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1716) "getDate" [||])
    let (getUTCDate : 'tags this -> float) =
      fun (x1718 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1718) "getUTCDate" [||])
    let (getDay : 'tags this -> float) =
      fun (x1720 : 'tags this) ->
        Ojs.float_of_js (Ojs.call (this_to_js Obj.magic x1720) "getDay" [||])
    let (getUTCDay : 'tags this -> float) =
      fun (x1722 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1722) "getUTCDay" [||])
    let (getHours : 'tags this -> float) =
      fun (x1724 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1724) "getHours" [||])
    let (getUTCHours : 'tags this -> float) =
      fun (x1726 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1726) "getUTCHours" [||])
    let (getMinutes : 'tags this -> float) =
      fun (x1728 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1728) "getMinutes" [||])
    let (getUTCMinutes : 'tags this -> float) =
      fun (x1730 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1730) "getUTCMinutes" [||])
    let (getSeconds : 'tags this -> float) =
      fun (x1732 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1732) "getSeconds" [||])
    let (getUTCSeconds : 'tags this -> float) =
      fun (x1734 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1734) "getUTCSeconds" [||])
    let (getMilliseconds : 'tags this -> float) =
      fun (x1736 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1736) "getMilliseconds" [||])
    let (getUTCMilliseconds : 'tags this -> float) =
      fun (x1738 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1738) "getUTCMilliseconds" [||])
    let (getTimezoneOffset : 'tags this -> float) =
      fun (x1740 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1740) "getTimezoneOffset" [||])
    let (setTime : 'tags this -> time:float -> float) =
      fun (x1743 : 'tags this) ->
        fun ~time:(x1742 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1743) "setTime"
               [|(Ojs.float_to_js x1742)|])
    let (setMilliseconds : 'tags this -> ms:float -> float) =
      fun (x1746 : 'tags this) ->
        fun ~ms:(x1745 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1746) "setMilliseconds"
               [|(Ojs.float_to_js x1745)|])
    let (setUTCMilliseconds : 'tags this -> ms:float -> float) =
      fun (x1749 : 'tags this) ->
        fun ~ms:(x1748 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1749) "setUTCMilliseconds"
               [|(Ojs.float_to_js x1748)|])
    let (setSeconds : 'tags this -> sec:float -> ?ms:float -> unit -> float)
      =
      fun (x1755 : 'tags this) ->
        fun ~sec:(x1751 : float) ->
          fun ?ms:(x1752 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1757 = this_to_js Obj.magic x1755 in
                 Ojs.call (Ojs.get_prop_ascii x1757 "setSeconds") "apply"
                   [|x1757;((let x1753 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1753 "push"
                                  [|(Ojs.float_to_js x1751)|]);
                             (match x1752 with
                              | Some x1754 ->
                                  ignore
                                    (Ojs.call x1753 "push"
                                       [|(Ojs.float_to_js x1754)|])
                              | None -> ());
                             x1753))|])
    let (setUTCSeconds :
      'tags this -> sec:float -> ?ms:float -> unit -> float) =
      fun (x1762 : 'tags this) ->
        fun ~sec:(x1758 : float) ->
          fun ?ms:(x1759 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1764 = this_to_js Obj.magic x1762 in
                 Ojs.call (Ojs.get_prop_ascii x1764 "setUTCSeconds") "apply"
                   [|x1764;((let x1760 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1760 "push"
                                  [|(Ojs.float_to_js x1758)|]);
                             (match x1759 with
                              | Some x1761 ->
                                  ignore
                                    (Ojs.call x1760 "push"
                                       [|(Ojs.float_to_js x1761)|])
                              | None -> ());
                             x1760))|])
    let (setMinutes :
      'tags this -> min:float -> ?sec:float -> ?ms:float -> unit -> float) =
      fun (x1771 : 'tags this) ->
        fun ~min:(x1765 : float) ->
          fun ?sec:(x1766 : float option) ->
            fun ?ms:(x1767 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1773 = this_to_js Obj.magic x1771 in
                   Ojs.call (Ojs.get_prop_ascii x1773 "setMinutes") "apply"
                     [|x1773;((let x1768 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1768 "push"
                                    [|(Ojs.float_to_js x1765)|]);
                               (match x1766 with
                                | Some x1770 ->
                                    ignore
                                      (Ojs.call x1768 "push"
                                         [|(Ojs.float_to_js x1770)|])
                                | None -> ());
                               (match x1767 with
                                | Some x1769 ->
                                    ignore
                                      (Ojs.call x1768 "push"
                                         [|(Ojs.float_to_js x1769)|])
                                | None -> ());
                               x1768))|])
    let (setUTCMinutes :
      'tags this -> min:float -> ?sec:float -> ?ms:float -> unit -> float) =
      fun (x1780 : 'tags this) ->
        fun ~min:(x1774 : float) ->
          fun ?sec:(x1775 : float option) ->
            fun ?ms:(x1776 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1782 = this_to_js Obj.magic x1780 in
                   Ojs.call (Ojs.get_prop_ascii x1782 "setUTCMinutes")
                     "apply"
                     [|x1782;((let x1777 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1777 "push"
                                    [|(Ojs.float_to_js x1774)|]);
                               (match x1775 with
                                | Some x1779 ->
                                    ignore
                                      (Ojs.call x1777 "push"
                                         [|(Ojs.float_to_js x1779)|])
                                | None -> ());
                               (match x1776 with
                                | Some x1778 ->
                                    ignore
                                      (Ojs.call x1777 "push"
                                         [|(Ojs.float_to_js x1778)|])
                                | None -> ());
                               x1777))|])
    let (setHours :
      'tags this ->
        hours:float -> ?min:float -> ?sec:float -> ?ms:float -> unit -> float)
      =
      fun (x1791 : 'tags this) ->
        fun ~hours:(x1783 : float) ->
          fun ?min:(x1784 : float option) ->
            fun ?sec:(x1785 : float option) ->
              fun ?ms:(x1786 : float option) ->
                fun () ->
                  Ojs.float_of_js
                    (let x1793 = this_to_js Obj.magic x1791 in
                     Ojs.call (Ojs.get_prop_ascii x1793 "setHours") "apply"
                       [|x1793;((let x1787 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1787 "push"
                                      [|(Ojs.float_to_js x1783)|]);
                                 (match x1784 with
                                  | Some x1790 ->
                                      ignore
                                        (Ojs.call x1787 "push"
                                           [|(Ojs.float_to_js x1790)|])
                                  | None -> ());
                                 (match x1785 with
                                  | Some x1789 ->
                                      ignore
                                        (Ojs.call x1787 "push"
                                           [|(Ojs.float_to_js x1789)|])
                                  | None -> ());
                                 (match x1786 with
                                  | Some x1788 ->
                                      ignore
                                        (Ojs.call x1787 "push"
                                           [|(Ojs.float_to_js x1788)|])
                                  | None -> ());
                                 x1787))|])
    let (setUTCHours :
      'tags this ->
        hours:float -> ?min:float -> ?sec:float -> ?ms:float -> unit -> float)
      =
      fun (x1802 : 'tags this) ->
        fun ~hours:(x1794 : float) ->
          fun ?min:(x1795 : float option) ->
            fun ?sec:(x1796 : float option) ->
              fun ?ms:(x1797 : float option) ->
                fun () ->
                  Ojs.float_of_js
                    (let x1804 = this_to_js Obj.magic x1802 in
                     Ojs.call (Ojs.get_prop_ascii x1804 "setUTCHours")
                       "apply"
                       [|x1804;((let x1798 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1798 "push"
                                      [|(Ojs.float_to_js x1794)|]);
                                 (match x1795 with
                                  | Some x1801 ->
                                      ignore
                                        (Ojs.call x1798 "push"
                                           [|(Ojs.float_to_js x1801)|])
                                  | None -> ());
                                 (match x1796 with
                                  | Some x1800 ->
                                      ignore
                                        (Ojs.call x1798 "push"
                                           [|(Ojs.float_to_js x1800)|])
                                  | None -> ());
                                 (match x1797 with
                                  | Some x1799 ->
                                      ignore
                                        (Ojs.call x1798 "push"
                                           [|(Ojs.float_to_js x1799)|])
                                  | None -> ());
                                 x1798))|])
    let (setDate : 'tags this -> date:float -> float) =
      fun (x1806 : 'tags this) ->
        fun ~date:(x1805 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1806) "setDate"
               [|(Ojs.float_to_js x1805)|])
    let (setUTCDate : 'tags this -> date:float -> float) =
      fun (x1809 : 'tags this) ->
        fun ~date:(x1808 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1809) "setUTCDate"
               [|(Ojs.float_to_js x1808)|])
    let (setMonth :
      'tags this -> month:float -> ?date:float -> unit -> float) =
      fun (x1815 : 'tags this) ->
        fun ~month:(x1811 : float) ->
          fun ?date:(x1812 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1817 = this_to_js Obj.magic x1815 in
                 Ojs.call (Ojs.get_prop_ascii x1817 "setMonth") "apply"
                   [|x1817;((let x1813 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1813 "push"
                                  [|(Ojs.float_to_js x1811)|]);
                             (match x1812 with
                              | Some x1814 ->
                                  ignore
                                    (Ojs.call x1813 "push"
                                       [|(Ojs.float_to_js x1814)|])
                              | None -> ());
                             x1813))|])
    let (setUTCMonth :
      'tags this -> month:float -> ?date:float -> unit -> float) =
      fun (x1822 : 'tags this) ->
        fun ~month:(x1818 : float) ->
          fun ?date:(x1819 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1824 = this_to_js Obj.magic x1822 in
                 Ojs.call (Ojs.get_prop_ascii x1824 "setUTCMonth") "apply"
                   [|x1824;((let x1820 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1820 "push"
                                  [|(Ojs.float_to_js x1818)|]);
                             (match x1819 with
                              | Some x1821 ->
                                  ignore
                                    (Ojs.call x1820 "push"
                                       [|(Ojs.float_to_js x1821)|])
                              | None -> ());
                             x1820))|])
    let (setFullYear :
      'tags this ->
        year:float -> ?month:float -> ?date:float -> unit -> float)
      =
      fun (x1831 : 'tags this) ->
        fun ~year:(x1825 : float) ->
          fun ?month:(x1826 : float option) ->
            fun ?date:(x1827 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1833 = this_to_js Obj.magic x1831 in
                   Ojs.call (Ojs.get_prop_ascii x1833 "setFullYear") "apply"
                     [|x1833;((let x1828 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1828 "push"
                                    [|(Ojs.float_to_js x1825)|]);
                               (match x1826 with
                                | Some x1830 ->
                                    ignore
                                      (Ojs.call x1828 "push"
                                         [|(Ojs.float_to_js x1830)|])
                                | None -> ());
                               (match x1827 with
                                | Some x1829 ->
                                    ignore
                                      (Ojs.call x1828 "push"
                                         [|(Ojs.float_to_js x1829)|])
                                | None -> ());
                               x1828))|])
    let (setUTCFullYear :
      'tags this ->
        year:float -> ?month:float -> ?date:float -> unit -> float)
      =
      fun (x1840 : 'tags this) ->
        fun ~year:(x1834 : float) ->
          fun ?month:(x1835 : float option) ->
            fun ?date:(x1836 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1842 = this_to_js Obj.magic x1840 in
                   Ojs.call (Ojs.get_prop_ascii x1842 "setUTCFullYear")
                     "apply"
                     [|x1842;((let x1837 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1837 "push"
                                    [|(Ojs.float_to_js x1834)|]);
                               (match x1835 with
                                | Some x1839 ->
                                    ignore
                                      (Ojs.call x1837 "push"
                                         [|(Ojs.float_to_js x1839)|])
                                | None -> ());
                               (match x1836 with
                                | Some x1838 ->
                                    ignore
                                      (Ojs.call x1837 "push"
                                         [|(Ojs.float_to_js x1838)|])
                                | None -> ());
                               x1837))|])
    let (toUTCString : 'tags this -> string) =
      fun (x1843 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1843) "toUTCString" [||])
    let (toISOString : 'tags this -> string) =
      fun (x1845 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1845) "toISOString" [||])
    let (toJSON : 'tags this -> ?key:any -> unit -> string) =
      fun (x1850 : 'tags this) ->
        fun ?key:(x1847 : any option) ->
          fun () ->
            Ojs.string_of_js
              (let x1852 = this_to_js Obj.magic x1850 in
               Ojs.call (Ojs.get_prop_ascii x1852 "toJSON") "apply"
                 [|x1852;((let x1848 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1847 with
                            | Some x1849 ->
                                ignore
                                  (Ojs.call x1848 "push"
                                     [|(any_to_js x1849)|])
                            | None -> ());
                           x1848))|])
    let (create : t or_string or_number -> t) =
      fun (x1853 : t or_string or_number) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date")
             [|(or_number_to_js
                  (fun (x1854 : t or_string) -> or_string_to_js t_to_js x1854)
                  x1853)|])
    let (create' : unit -> t) =
      fun () ->
        t_of_js (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date") [||])
    let (create'' : string or_number -> t) =
      fun (x1856 : string or_number) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date")
             [|(or_number_to_js Ojs.string_to_js x1856)|])
    let (create''' :
      year:float ->
        month:float ->
          ?date:float ->
            ?hours:float ->
              ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> t)
      =
      fun ~year:(x1858 : float) ->
        fun ~month:(x1859 : float) ->
          fun ?date:(x1860 : float option) ->
            fun ?hours:(x1861 : float option) ->
              fun ?minutes:(x1862 : float option) ->
                fun ?seconds:(x1863 : float option) ->
                  fun ?ms:(x1864 : float option) ->
                    fun () ->
                      t_of_js
                        (Ojs.new_obj_arr
                           (Ojs.get_prop_ascii Ojs.global "Date")
                           (let x1865 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x1865 "push"
                                 [|(Ojs.float_to_js x1858)|]);
                            ignore
                              (Ojs.call x1865 "push"
                                 [|(Ojs.float_to_js x1859)|]);
                            (match x1860 with
                             | Some x1870 ->
                                 ignore
                                   (Ojs.call x1865 "push"
                                      [|(Ojs.float_to_js x1870)|])
                             | None -> ());
                            (match x1861 with
                             | Some x1869 ->
                                 ignore
                                   (Ojs.call x1865 "push"
                                      [|(Ojs.float_to_js x1869)|])
                             | None -> ());
                            (match x1862 with
                             | Some x1868 ->
                                 ignore
                                   (Ojs.call x1865 "push"
                                      [|(Ojs.float_to_js x1868)|])
                             | None -> ());
                            (match x1863 with
                             | Some x1867 ->
                                 ignore
                                   (Ojs.call x1865 "push"
                                      [|(Ojs.float_to_js x1867)|])
                             | None -> ());
                            (match x1864 with
                             | Some x1866 ->
                                 ignore
                                   (Ojs.call x1865 "push"
                                      [|(Ojs.float_to_js x1866)|])
                             | None -> ());
                            x1865))
    let (invoke : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Date") [||])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Date")
             "prototype")
    let (parse : string -> float) =
      fun (x1871 : string) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Date") "parse"
             [|(Ojs.string_to_js x1871)|])
    let (utc :
      year:float ->
        month:float ->
          ?date:float ->
            ?hours:float ->
              ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> float)
      =
      fun ~year:(x1872 : float) ->
        fun ~month:(x1873 : float) ->
          fun ?date:(x1874 : float option) ->
            fun ?hours:(x1875 : float option) ->
              fun ?minutes:(x1876 : float option) ->
                fun ?seconds:(x1877 : float option) ->
                  fun ?ms:(x1878 : float option) ->
                    fun () ->
                      Ojs.float_of_js
                        (let x1885 = Ojs.get_prop_ascii Ojs.global "Date" in
                         Ojs.call (Ojs.get_prop_ascii x1885 "UTC") "apply"
                           [|x1885;((let x1879 =
                                       Ojs.new_obj
                                         (Ojs.get_prop_ascii Ojs.global
                                            "Array") [||] in
                                     ignore
                                       (Ojs.call x1879 "push"
                                          [|(Ojs.float_to_js x1872)|]);
                                     ignore
                                       (Ojs.call x1879 "push"
                                          [|(Ojs.float_to_js x1873)|]);
                                     (match x1874 with
                                      | Some x1884 ->
                                          ignore
                                            (Ojs.call x1879 "push"
                                               [|(Ojs.float_to_js x1884)|])
                                      | None -> ());
                                     (match x1875 with
                                      | Some x1883 ->
                                          ignore
                                            (Ojs.call x1879 "push"
                                               [|(Ojs.float_to_js x1883)|])
                                      | None -> ());
                                     (match x1876 with
                                      | Some x1882 ->
                                          ignore
                                            (Ojs.call x1879 "push"
                                               [|(Ojs.float_to_js x1882)|])
                                      | None -> ());
                                     (match x1877 with
                                      | Some x1881 ->
                                          ignore
                                            (Ojs.call x1879 "push"
                                               [|(Ojs.float_to_js x1881)|])
                                      | None -> ());
                                     (match x1878 with
                                      | Some x1880 ->
                                          ignore
                                            (Ojs.call x1879 "push"
                                               [|(Ojs.float_to_js x1880)|])
                                      | None -> ());
                                     x1879))|])
    let (now : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Date") "now" [||])
    let cast_from = Obj.magic
  end
 and
  Intl:sig
         module ResolvedDateTimeFormatOptions :
         sig
           type t = [ `Intl_ResolvedDateTimeFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedDateTimeFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedDateTimeFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedDateTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_formatMatcher :
             'tags this -> [ `L_s23_basic  | `L_s24_best_fit ]
           val set_formatMatcher :
             'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] -> unit
           val get_dateStyle :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ]
           val set_dateStyle :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ] -> unit
           val get_timeStyle :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ]
           val set_timeStyle :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ] -> unit
           val get_hourCycle :
             'tags this ->
               [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ]
           val set_hourCycle :
             'tags this ->
               [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ] ->
                 unit
           val get_dayPeriod :
             'tags this -> [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ]
           val set_dayPeriod :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] -> unit
           val get_fractionalSecondDigits :
             'tags this -> [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ]
           val set_fractionalSecondDigits :
             'tags this -> [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ] -> unit
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_calendar : 'tags this -> string
           val set_calendar : 'tags this -> string -> unit
           val get_numberingSystem : 'tags this -> string
           val set_numberingSystem : 'tags this -> string -> unit
           val get_timeZone : 'tags this -> string
           val set_timeZone : 'tags this -> string -> unit
           val get_hour12 : 'tags this -> bool
           val set_hour12 : 'tags this -> bool -> unit
           val get_weekday : 'tags this -> string
           val set_weekday : 'tags this -> string -> unit
           val get_era : 'tags this -> string
           val set_era : 'tags this -> string -> unit
           val get_year : 'tags this -> string
           val set_year : 'tags this -> string -> unit
           val get_month : 'tags this -> string
           val set_month : 'tags this -> string -> unit
           val get_day : 'tags this -> string
           val set_day : 'tags this -> string -> unit
           val get_hour : 'tags this -> string
           val set_hour : 'tags this -> string -> unit
           val get_minute : 'tags this -> string
           val set_minute : 'tags this -> string -> unit
           val get_second : 'tags this -> string
           val set_second : 'tags this -> string -> unit
           val get_timeZoneName : 'tags this -> string
           val set_timeZoneName : 'tags this -> string -> unit
           val cast_from : 'tags this -> t
         end
         module DateTimeFormatPartTypes :
         sig
           type t =
             [ `L_s101_year  | `L_s29_day  | `L_s30_dayPeriod  | `L_s35_era 
             | `L_s49_hour  | `L_s54_literal  | `L_s61_minute 
             | `L_s63_month  | `L_s86_second  | `L_s92_timeZoneName 
             | `L_s99_weekday ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module DateTimeFormatPart :
         sig
           type t = [ `Intl_DateTimeFormatPart ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DateTimeFormatPart ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DateTimeFormatPart ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DateTimeFormatPart ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_type : 'tags this -> DateTimeFormatPartTypes.t
           val set_type : 'tags this -> DateTimeFormatPartTypes.t -> unit
           val get_value : 'tags this -> string
           val set_value : 'tags this -> string -> unit
           val cast_from : 'tags this -> t
         end
         module DateTimeFormatOptions :
         sig
           type t = [ `Intl_DateTimeFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DateTimeFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DateTimeFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DateTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_formatMatcher :
             'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] or_undefined
           val set_formatMatcher :
             'tags this ->
               [ `L_s23_basic  | `L_s24_best_fit ] or_undefined -> unit
           val get_dateStyle :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ] or_undefined
           val set_dateStyle :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ] or_undefined -> unit
           val get_timeStyle :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ] or_undefined
           val set_timeStyle :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ] or_undefined -> unit
           val get_dayPeriod :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined
           val set_dayPeriod :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined
                 -> unit
           val get_fractionalSecondDigits :
             'tags this ->
               [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ] or_undefined
           val set_fractionalSecondDigits :
             'tags this ->
               [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ] or_undefined -> unit
           val get_calendar : 'tags this -> string or_undefined
           val set_calendar : 'tags this -> string or_undefined -> unit
           val get_dayPeriod' :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined
           val set_dayPeriod' :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined
                 -> unit
           val get_numberingSystem : 'tags this -> string or_undefined
           val set_numberingSystem :
             'tags this -> string or_undefined -> unit
           val get_dateStyle' :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ] or_undefined
           val set_dateStyle' :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ] or_undefined -> unit
           val get_timeStyle' :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ] or_undefined
           val set_timeStyle' :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ] or_undefined -> unit
           val get_hourCycle :
             'tags this ->
               [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ]
                 or_undefined
           val set_hourCycle :
             'tags this ->
               [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ]
                 or_undefined -> unit
           val get_localeMatcher :
             'tags this -> [ `L_s24_best_fit  | `L_s56_lookup ] or_undefined
           val set_localeMatcher :
             'tags this ->
               [ `L_s24_best_fit  | `L_s56_lookup ] or_undefined -> unit
           val get_weekday :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined
           val set_weekday :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined
                 -> unit
           val get_era :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined
           val set_era :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined
                 -> unit
           val get_year :
             'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined
           val set_year :
             'tags this ->
               [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined -> unit
           val get_month :
             'tags this ->
               [ `L_s0_2_digit  | `L_s55_long  | `L_s67_narrow 
               | `L_s72_numeric  | `L_s88_short ] or_undefined
           val set_month :
             'tags this ->
               [ `L_s0_2_digit  | `L_s55_long  | `L_s67_narrow 
               | `L_s72_numeric  | `L_s88_short ] or_undefined -> unit
           val get_day :
             'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined
           val set_day :
             'tags this ->
               [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined -> unit
           val get_hour :
             'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined
           val set_hour :
             'tags this ->
               [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined -> unit
           val get_minute :
             'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined
           val set_minute :
             'tags this ->
               [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined -> unit
           val get_second :
             'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined
           val set_second :
             'tags this ->
               [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined -> unit
           val get_timeZoneName :
             'tags this -> [ `L_s55_long  | `L_s88_short ] or_undefined
           val set_timeZoneName :
             'tags this ->
               [ `L_s55_long  | `L_s88_short ] or_undefined -> unit
           val get_formatMatcher' :
             'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] or_undefined
           val set_formatMatcher' :
             'tags this ->
               [ `L_s23_basic  | `L_s24_best_fit ] or_undefined -> unit
           val get_hour12 : 'tags this -> bool or_undefined
           val set_hour12 : 'tags this -> bool or_undefined -> unit
           val get_timeZone : 'tags this -> string or_undefined
           val set_timeZone : 'tags this -> string or_undefined -> unit
           val cast_from : 'tags this -> t
         end
         module DateTimeFormat :
         sig
           type t = [ `Intl_DateTimeFormat ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DateTimeFormat ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DateTimeFormat ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DateTimeFormat ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val formatToParts :
             'tags this ->
               ?date:Date.t or_number -> unit -> DateTimeFormatPart.t list
           val format :
             'tags this -> ?date:Date.t or_number -> unit -> string
           val resolvedOptions :
             'tags this -> ResolvedDateTimeFormatOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:string list or_string ->
               ?options:DateTimeFormatOptions.t -> unit -> t
           val invoke :
             ?locales:string list or_string ->
               ?options:DateTimeFormatOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:string list or_string ->
               ?options:DateTimeFormatOptions.t -> unit -> string list
         end
         module AnonymousInterface9 :
         sig
           type t = private Ojs.t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val create :
             t ->
               ?locales:string list or_string ->
                 ?options:DateTimeFormatOptions.t -> unit -> DateTimeFormat.t
           val apply :
             t ->
               ?locales:string list or_string ->
                 ?options:DateTimeFormatOptions.t -> unit -> DateTimeFormat.t
           val supportedLocalesOf :
             t ->
               locales:string list or_string ->
                 ?options:DateTimeFormatOptions.t -> unit -> string list
         end
         module ResolvedCollatorOptions :
         sig
           type t = [ `Intl_ResolvedCollatorOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedCollatorOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedCollatorOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_ResolvedCollatorOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_usage : 'tags this -> string
           val set_usage : 'tags this -> string -> unit
           val get_sensitivity : 'tags this -> string
           val set_sensitivity : 'tags this -> string -> unit
           val get_ignorePunctuation : 'tags this -> bool
           val set_ignorePunctuation : 'tags this -> bool -> unit
           val get_collation : 'tags this -> string
           val set_collation : 'tags this -> string -> unit
           val get_caseFirst : 'tags this -> string
           val set_caseFirst : 'tags this -> string -> unit
           val get_numeric : 'tags this -> bool
           val set_numeric : 'tags this -> bool -> unit
           val cast_from : 'tags this -> t
         end
         module CollatorOptions :
         sig
           type t = [ `Intl_CollatorOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_CollatorOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_CollatorOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_CollatorOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_usage : 'tags this -> string or_undefined
           val set_usage : 'tags this -> string or_undefined -> unit
           val get_localeMatcher : 'tags this -> string or_undefined
           val set_localeMatcher : 'tags this -> string or_undefined -> unit
           val get_numeric : 'tags this -> bool or_undefined
           val set_numeric : 'tags this -> bool or_undefined -> unit
           val get_caseFirst : 'tags this -> string or_undefined
           val set_caseFirst : 'tags this -> string or_undefined -> unit
           val get_sensitivity : 'tags this -> string or_undefined
           val set_sensitivity : 'tags this -> string or_undefined -> unit
           val get_ignorePunctuation : 'tags this -> bool or_undefined
           val set_ignorePunctuation :
             'tags this -> bool or_undefined -> unit
           val cast_from : 'tags this -> t
         end
         module Collator :
         sig
           type t = [ `Intl_Collator ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_Collator ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_Collator ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_Collator ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val compare : 'tags this -> x:string -> y:string -> float
           val resolvedOptions : 'tags this -> ResolvedCollatorOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:string list or_string ->
               ?options:CollatorOptions.t -> unit -> t
           val invoke :
             ?locales:string list or_string ->
               ?options:CollatorOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:string list or_string ->
               ?options:CollatorOptions.t -> unit -> string list
         end
         module AnonymousInterface8 :
         sig
           type t = private Ojs.t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val create :
             t ->
               ?locales:string list or_string ->
                 ?options:CollatorOptions.t -> unit -> Collator.t
           val apply :
             t ->
               ?locales:string list or_string ->
                 ?options:CollatorOptions.t -> unit -> Collator.t
           val supportedLocalesOf :
             t ->
               locales:string list or_string ->
                 ?options:CollatorOptions.t -> unit -> string list
         end
         module RelativeTimeFormatStyle :
         sig
           type t = [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module RelativeTimeFormatLocaleMatcher :
         sig
           type t = [ `L_s24_best_fit  | `L_s56_lookup ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module DisplayNamesOptions :
         sig
           type t = [ `Intl_DisplayNamesOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DisplayNamesOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DisplayNamesOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DisplayNamesOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t
           val set_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit
           val get_style : 'tags this -> RelativeTimeFormatStyle.t
           val set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit
           val get_type :
             'tags this ->
               [ `L_s28_currency  | `L_s53_language  | `L_s82_region 
               | `L_s85_script ]
           val set_type :
             'tags this ->
               [ `L_s28_currency  | `L_s53_language  | `L_s82_region 
               | `L_s85_script ] -> unit
           val get_fallback : 'tags this -> [ `L_s26_code  | `L_s69_none ]
           val set_fallback :
             'tags this -> [ `L_s26_code  | `L_s69_none ] -> unit
           val cast_from : 'tags this -> t
         end
         module BCP47LanguageTag :
         sig
           type t = string
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module DisplayNames :
         sig
           module AnonymousInterface2 :
           sig
             type t = private Ojs.t
             val t_to_js : t -> Ojs.t
             val t_of_js : Ojs.t -> t
             val get_localeMatcher : t -> RelativeTimeFormatLocaleMatcher.t
             val set_localeMatcher :
               t -> RelativeTimeFormatLocaleMatcher.t -> unit
           end
           type t = [ `Intl_DisplayNames ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DisplayNames ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DisplayNames ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DisplayNames ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val of_ : 'tags this -> code:string -> string
           val resolvedOptions : 'tags this -> DisplayNamesOptions.t
           val cast_from : 'tags this -> t
           val prototype : unit -> t
           val create :
             ?locales:(BCP47LanguageTag.t, BCP47LanguageTag.t) or_array ->
               ?options:DisplayNamesOptions.t Partial.t -> unit -> t
           val supportedLocalesOf :
             locales:(BCP47LanguageTag.t, BCP47LanguageTag.t) or_array ->
               ?options:AnonymousInterface2.t ->
                 unit -> BCP47LanguageTag.t list
         end
         module AnonymousInterface2 :
         sig
           type t = private Ojs.t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_localeMatcher : t -> RelativeTimeFormatLocaleMatcher.t
           val set_localeMatcher :
             t -> RelativeTimeFormatLocaleMatcher.t -> unit
         end
         module AnonymousInterface4 :
         sig
           module AnonymousInterface2 :
           sig
             type t = private Ojs.t
             val t_to_js : t -> Ojs.t
             val t_of_js : Ojs.t -> t
             val get_localeMatcher : t -> RelativeTimeFormatLocaleMatcher.t
             val set_localeMatcher :
               t -> RelativeTimeFormatLocaleMatcher.t -> unit
           end
           type t = private Ojs.t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_prototype : t -> DisplayNames.t
           val set_prototype : t -> DisplayNames.t -> unit
           val create :
             t ->
               ?locales:(BCP47LanguageTag.t, BCP47LanguageTag.t) or_array ->
                 ?options:DisplayNamesOptions.t Partial.t ->
                   unit -> DisplayNames.t
           val supportedLocalesOf :
             t ->
               locales:(BCP47LanguageTag.t, BCP47LanguageTag.t) or_array ->
                 ?options:AnonymousInterface2.t ->
                   unit -> BCP47LanguageTag.t list
         end
         module UnicodeBCP47LocaleIdentifier :
         sig
           type t = string
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module RelativeTimeFormatNumeric :
         sig
           type t = [ `L_s21_always  | `L_s22_auto ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module ResolvedRelativeTimeFormatOptions :
         sig
           type t = [ `Intl_ResolvedRelativeTimeFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedRelativeTimeFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedRelativeTimeFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedRelativeTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_locale : 'tags this -> UnicodeBCP47LocaleIdentifier.t
           val set_locale :
             'tags this -> UnicodeBCP47LocaleIdentifier.t -> unit
           val get_style : 'tags this -> RelativeTimeFormatStyle.t
           val set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit
           val get_numeric : 'tags this -> RelativeTimeFormatNumeric.t
           val set_numeric :
             'tags this -> RelativeTimeFormatNumeric.t -> unit
           val get_numberingSystem : 'tags this -> string
           val set_numberingSystem : 'tags this -> string -> unit
           val cast_from : 'tags this -> t
         end
         module RelativeTimeFormatUnit :
         sig
           type t =
             [ `L_s100_weeks  | `L_s101_year  | `L_s102_years  | `L_s29_day 
             | `L_s31_days  | `L_s49_hour  | `L_s50_hours  | `L_s61_minute 
             | `L_s62_minutes  | `L_s63_month  | `L_s64_months 
             | `L_s80_quarter  | `L_s81_quarters  | `L_s86_second 
             | `L_s87_seconds  | `L_s98_week ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module RelativeTimeFormatPart :
         sig
           type t = [ `Intl_RelativeTimeFormatPart ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_RelativeTimeFormatPart ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_RelativeTimeFormatPart ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_RelativeTimeFormatPart ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_type : 'tags this -> string
           val set_type : 'tags this -> string -> unit
           val get_value : 'tags this -> string
           val set_value : 'tags this -> string -> unit
           val get_unit : 'tags this -> RelativeTimeFormatUnit.t
           val set_unit : 'tags this -> RelativeTimeFormatUnit.t -> unit
           val cast_from : 'tags this -> t
         end
         module RelativeTimeFormatOptions :
         sig
           type t = [ `Intl_RelativeTimeFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_RelativeTimeFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_RelativeTimeFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_RelativeTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t
           val set_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit
           val get_numeric : 'tags this -> RelativeTimeFormatNumeric.t
           val set_numeric :
             'tags this -> RelativeTimeFormatNumeric.t -> unit
           val get_style : 'tags this -> RelativeTimeFormatStyle.t
           val set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit
           val cast_from : 'tags this -> t
         end
         module RelativeTimeFormat :
         sig
           type t = [ `Intl_RelativeTimeFormat ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_RelativeTimeFormat ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_RelativeTimeFormat ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_RelativeTimeFormat ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val format :
             'tags this ->
               value:float -> unit:RelativeTimeFormatUnit.t -> string
           val formatToParts :
             'tags this ->
               value:float ->
                 unit:RelativeTimeFormatUnit.t ->
                   RelativeTimeFormatPart.t list
           val resolvedOptions :
             'tags this -> ResolvedRelativeTimeFormatOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:(UnicodeBCP47LocaleIdentifier.t,
               UnicodeBCP47LocaleIdentifier.t) or_array ->
               ?options:RelativeTimeFormatOptions.t -> unit -> t
           val supportedLocalesOf :
             ?locales:(UnicodeBCP47LocaleIdentifier.t,
               UnicodeBCP47LocaleIdentifier.t) or_array ->
               ?options:RelativeTimeFormatOptions.t ->
                 unit -> UnicodeBCP47LocaleIdentifier.t list
         end
         module AnonymousInterface20 :
         sig
           type t = private Ojs.t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val create :
             t ->
               ?locales:(UnicodeBCP47LocaleIdentifier.t,
                 UnicodeBCP47LocaleIdentifier.t) or_array ->
                 ?options:RelativeTimeFormatOptions.t ->
                   unit -> RelativeTimeFormat.t
           val supportedLocalesOf :
             t ->
               ?locales:(UnicodeBCP47LocaleIdentifier.t,
                 UnicodeBCP47LocaleIdentifier.t) or_array ->
                 ?options:RelativeTimeFormatOptions.t ->
                   unit -> UnicodeBCP47LocaleIdentifier.t list
         end
         module LocaleHourCycleKey :
         sig
           type t = [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module LocaleCollationCaseFirst :
         sig
           type t = [ `L_s39_false  | `L_s57_lower  | `L_s97_upper ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module LocaleOptions :
         sig
           type t = [ `Intl_LocaleOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_LocaleOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_LocaleOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_LocaleOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_baseName : 'tags this -> string
           val set_baseName : 'tags this -> string -> unit
           val get_calendar : 'tags this -> string
           val set_calendar : 'tags this -> string -> unit
           val get_caseFirst : 'tags this -> LocaleCollationCaseFirst.t
           val set_caseFirst :
             'tags this -> LocaleCollationCaseFirst.t -> unit
           val get_collation : 'tags this -> string
           val set_collation : 'tags this -> string -> unit
           val get_hourCycle : 'tags this -> LocaleHourCycleKey.t
           val set_hourCycle : 'tags this -> LocaleHourCycleKey.t -> unit
           val get_language : 'tags this -> string
           val set_language : 'tags this -> string -> unit
           val get_numberingSystem : 'tags this -> string
           val set_numberingSystem : 'tags this -> string -> unit
           val get_numeric : 'tags this -> bool
           val set_numeric : 'tags this -> bool -> unit
           val get_region : 'tags this -> string
           val set_region : 'tags this -> string -> unit
           val get_script : 'tags this -> string
           val set_script : 'tags this -> string -> unit
           val cast_from : 'tags this -> t
         end
         module Locale :
         sig
           type t = [ `Intl_Locale  | `Intl_LocaleOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_Locale  | `Intl_LocaleOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_Locale  | `Intl_LocaleOptions ]
             type tags_0 = tags]
           type 'tags this = 'tags intf constraint 'tags = [> `Intl_Locale ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val maximize : 'tags this -> t
           val minimize : 'tags this -> t
           val toString : 'tags this -> BCP47LanguageTag.t
           val cast_from : 'tags this -> t
           val create :
             ?tag:BCP47LanguageTag.t -> ?options:LocaleOptions.t -> unit -> t
         end
         module AnonymousInterface12 :
         sig
           type t = private Ojs.t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val create :
             t ->
               ?tag:BCP47LanguageTag.t ->
                 ?options:LocaleOptions.t -> unit -> Locale.t
         end
         module PluralRuleType :
         sig
           type t = [ `L_s25_cardinal  | `L_s75_ordinal ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module LDMLPluralRule :
         sig
           type t =
             [ `L_s103_zero  | `L_s40_few  | `L_s58_many  | `L_s74_one 
             | `L_s76_other  | `L_s94_two ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module ResolvedPluralRulesOptions :
         sig
           type t = [ `Intl_ResolvedPluralRulesOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedPluralRulesOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedPluralRulesOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedPluralRulesOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_pluralCategories : 'tags this -> LDMLPluralRule.t list
           val set_pluralCategories :
             'tags this -> LDMLPluralRule.t list -> unit
           val get_type : 'tags this -> PluralRuleType.t
           val set_type : 'tags this -> PluralRuleType.t -> unit
           val get_minimumIntegerDigits : 'tags this -> float
           val set_minimumIntegerDigits : 'tags this -> float -> unit
           val get_minimumFractionDigits : 'tags this -> float
           val set_minimumFractionDigits : 'tags this -> float -> unit
           val get_maximumFractionDigits : 'tags this -> float
           val set_maximumFractionDigits : 'tags this -> float -> unit
           val get_minimumSignificantDigits : 'tags this -> float
           val set_minimumSignificantDigits : 'tags this -> float -> unit
           val get_maximumSignificantDigits : 'tags this -> float
           val set_maximumSignificantDigits : 'tags this -> float -> unit
           val cast_from : 'tags this -> t
         end
         module PluralRulesOptions :
         sig
           type t = [ `Intl_PluralRulesOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_PluralRulesOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_PluralRulesOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_PluralRulesOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_localeMatcher :
             'tags this -> [ `L_s24_best_fit  | `L_s56_lookup ] or_undefined
           val set_localeMatcher :
             'tags this ->
               [ `L_s24_best_fit  | `L_s56_lookup ] or_undefined -> unit
           val get_type : 'tags this -> PluralRuleType.t or_undefined
           val set_type : 'tags this -> PluralRuleType.t or_undefined -> unit
           val get_minimumIntegerDigits : 'tags this -> float or_undefined
           val set_minimumIntegerDigits :
             'tags this -> float or_undefined -> unit
           val get_minimumFractionDigits : 'tags this -> float or_undefined
           val set_minimumFractionDigits :
             'tags this -> float or_undefined -> unit
           val get_maximumFractionDigits : 'tags this -> float or_undefined
           val set_maximumFractionDigits :
             'tags this -> float or_undefined -> unit
           val get_minimumSignificantDigits :
             'tags this -> float or_undefined
           val set_minimumSignificantDigits :
             'tags this -> float or_undefined -> unit
           val get_maximumSignificantDigits :
             'tags this -> float or_undefined
           val set_maximumSignificantDigits :
             'tags this -> float or_undefined -> unit
           val cast_from : 'tags this -> t
         end
         module PluralRules :
         sig
           module AnonymousInterface3 :
           sig
             type t = private Ojs.t
             val t_to_js : t -> Ojs.t
             val t_of_js : Ojs.t -> t
             val get_localeMatcher :
               t -> [ `L_s24_best_fit  | `L_s56_lookup ]
             val set_localeMatcher :
               t -> [ `L_s24_best_fit  | `L_s56_lookup ] -> unit
           end
           type t = [ `Intl_PluralRules ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_PluralRules ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_PluralRules ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_PluralRules ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val resolvedOptions : 'tags this -> ResolvedPluralRulesOptions.t
           val select : 'tags this -> n:float -> LDMLPluralRule.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:string list or_string ->
               ?options:PluralRulesOptions.t -> unit -> t
           val invoke :
             ?locales:string list or_string ->
               ?options:PluralRulesOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:string list or_string ->
               ?options:AnonymousInterface3.t -> unit -> string list
         end
         module AnonymousInterface3 :
         sig
           type t = private Ojs.t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val get_localeMatcher : t -> [ `L_s24_best_fit  | `L_s56_lookup ]
           val set_localeMatcher :
             t -> [ `L_s24_best_fit  | `L_s56_lookup ] -> unit
         end
         module AnonymousInterface11 :
         sig
           module AnonymousInterface3 :
           sig
             type t = private Ojs.t
             val t_to_js : t -> Ojs.t
             val t_of_js : Ojs.t -> t
             val get_localeMatcher :
               t -> [ `L_s24_best_fit  | `L_s56_lookup ]
             val set_localeMatcher :
               t -> [ `L_s24_best_fit  | `L_s56_lookup ] -> unit
           end
           type t = private Ojs.t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val create :
             t ->
               ?locales:string list or_string ->
                 ?options:PluralRulesOptions.t -> unit -> PluralRules.t
           val apply :
             t ->
               ?locales:string list or_string ->
                 ?options:PluralRulesOptions.t -> unit -> PluralRules.t
           val supportedLocalesOf :
             t ->
               locales:string list or_string ->
                 ?options:AnonymousInterface3.t -> unit -> string list
         end
         module ResolvedNumberFormatOptions :
         sig
           type t = [ `Intl_ResolvedNumberFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedNumberFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedNumberFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedNumberFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_compactDisplay :
             'tags this -> [ `L_s55_long  | `L_s88_short ]
           val set_compactDisplay :
             'tags this -> [ `L_s55_long  | `L_s88_short ] -> unit
           val get_notation :
             'tags this ->
               [ `L_s27_compact  | `L_s34_engineering  | `L_s84_scientific 
               | `L_s89_standard ]
           val set_notation :
             'tags this ->
               [ `L_s27_compact  | `L_s34_engineering  | `L_s84_scientific 
               | `L_s89_standard ] -> unit
           val get_signDisplay :
             'tags this -> [ `L_s21_always  | `L_s22_auto  | `L_s68_never ]
           val set_signDisplay :
             'tags this ->
               [ `L_s21_always  | `L_s22_auto  | `L_s68_never ] -> unit
           val get_unit : 'tags this -> string
           val set_unit : 'tags this -> string -> unit
           val get_unitDisplay :
             'tags this -> [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ]
           val set_unitDisplay :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] -> unit
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_numberingSystem : 'tags this -> string
           val set_numberingSystem : 'tags this -> string -> unit
           val get_style : 'tags this -> string
           val set_style : 'tags this -> string -> unit
           val get_currency : 'tags this -> string
           val set_currency : 'tags this -> string -> unit
           val get_currencyDisplay : 'tags this -> string
           val set_currencyDisplay : 'tags this -> string -> unit
           val get_minimumIntegerDigits : 'tags this -> float
           val set_minimumIntegerDigits : 'tags this -> float -> unit
           val get_minimumFractionDigits : 'tags this -> float
           val set_minimumFractionDigits : 'tags this -> float -> unit
           val get_maximumFractionDigits : 'tags this -> float
           val set_maximumFractionDigits : 'tags this -> float -> unit
           val get_minimumSignificantDigits : 'tags this -> float
           val set_minimumSignificantDigits : 'tags this -> float -> unit
           val get_maximumSignificantDigits : 'tags this -> float
           val set_maximumSignificantDigits : 'tags this -> float -> unit
           val get_useGrouping : 'tags this -> bool
           val set_useGrouping : 'tags this -> bool -> unit
           val cast_from : 'tags this -> t
         end
         module ES2020NumberFormatPartType :
         sig
           type t =
             [ `L_s27_compact  | `L_s36_exponentInteger 
             | `L_s37_exponentMinusSign  | `L_s38_exponentSeparator 
             | `L_s95_unit  | `L_s96_unknown ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module ES2018NumberFormatPartType :
         sig
           type t =
             [ `L_s26_code  | `L_s28_currency  | `L_s32_decimal 
             | `L_s41_fraction  | `L_s44_group  | `L_s51_infinity 
             | `L_s52_integer  | `L_s54_literal  | `L_s60_minusSign 
             | `L_s65_name  | `L_s66_nan  | `L_s77_percent 
             | `L_s78_percentSign  | `L_s79_plusSign  | `L_s91_symbol ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module NumberFormatPartTypes :
         sig
           type t =
             [ `L_s26_code  | `L_s27_compact  | `L_s28_currency 
             | `L_s32_decimal  | `L_s36_exponentInteger 
             | `L_s37_exponentMinusSign  | `L_s38_exponentSeparator 
             | `L_s41_fraction  | `L_s44_group  | `L_s51_infinity 
             | `L_s52_integer  | `L_s54_literal  | `L_s60_minusSign 
             | `L_s65_name  | `L_s66_nan  | `L_s77_percent 
             | `L_s78_percentSign  | `L_s79_plusSign  | `L_s91_symbol 
             | `L_s95_unit  | `L_s96_unknown ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module NumberFormatPart :
         sig
           type t = [ `Intl_NumberFormatPart ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_NumberFormatPart ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_NumberFormatPart ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_NumberFormatPart ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_type : 'tags this -> NumberFormatPartTypes.t
           val set_type : 'tags this -> NumberFormatPartTypes.t -> unit
           val get_value : 'tags this -> string
           val set_value : 'tags this -> string -> unit
           val cast_from : 'tags this -> t
         end
         module NumberFormatOptions :
         sig
           type t = [ `Intl_NumberFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_NumberFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_NumberFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_NumberFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_compactDisplay :
             'tags this -> [ `L_s55_long  | `L_s88_short ] or_undefined
           val set_compactDisplay :
             'tags this ->
               [ `L_s55_long  | `L_s88_short ] or_undefined -> unit
           val get_notation :
             'tags this ->
               [ `L_s27_compact  | `L_s34_engineering  | `L_s84_scientific 
               | `L_s89_standard ] or_undefined
           val set_notation :
             'tags this ->
               [ `L_s27_compact  | `L_s34_engineering  | `L_s84_scientific 
               | `L_s89_standard ] or_undefined -> unit
           val get_signDisplay :
             'tags this ->
               [ `L_s21_always  | `L_s22_auto  | `L_s68_never ] or_undefined
           val set_signDisplay :
             'tags this ->
               [ `L_s21_always  | `L_s22_auto  | `L_s68_never ] or_undefined
                 -> unit
           val get_unit : 'tags this -> string or_undefined
           val set_unit : 'tags this -> string or_undefined -> unit
           val get_unitDisplay :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined
           val set_unitDisplay :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined
                 -> unit
           val get_localeMatcher : 'tags this -> string or_undefined
           val set_localeMatcher : 'tags this -> string or_undefined -> unit
           val get_style : 'tags this -> string or_undefined
           val set_style : 'tags this -> string or_undefined -> unit
           val get_currency : 'tags this -> string or_undefined
           val set_currency : 'tags this -> string or_undefined -> unit
           val get_currencyDisplay : 'tags this -> string or_undefined
           val set_currencyDisplay :
             'tags this -> string or_undefined -> unit
           val get_currencySign : 'tags this -> string or_undefined
           val set_currencySign : 'tags this -> string or_undefined -> unit
           val get_useGrouping : 'tags this -> bool or_undefined
           val set_useGrouping : 'tags this -> bool or_undefined -> unit
           val get_minimumIntegerDigits : 'tags this -> float or_undefined
           val set_minimumIntegerDigits :
             'tags this -> float or_undefined -> unit
           val get_minimumFractionDigits : 'tags this -> float or_undefined
           val set_minimumFractionDigits :
             'tags this -> float or_undefined -> unit
           val get_maximumFractionDigits : 'tags this -> float or_undefined
           val set_maximumFractionDigits :
             'tags this -> float or_undefined -> unit
           val get_minimumSignificantDigits :
             'tags this -> float or_undefined
           val set_minimumSignificantDigits :
             'tags this -> float or_undefined -> unit
           val get_maximumSignificantDigits :
             'tags this -> float or_undefined
           val set_maximumSignificantDigits :
             'tags this -> float or_undefined -> unit
           val cast_from : 'tags this -> t
         end
         module NumberFormat :
         sig
           type t = [ `Intl_NumberFormat ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_NumberFormat ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_NumberFormat ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_NumberFormat ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val formatRange :
             'tags this ->
               startDate:bigint or_number ->
                 endDate:bigint or_number -> string
           val formatRangeToParts :
             'tags this ->
               startDate:bigint or_number ->
                 endDate:bigint or_number -> NumberFormatPart.t list
           val format : 'tags this -> value:bigint or_number -> string
           val resolvedOptions : 'tags this -> ResolvedNumberFormatOptions.t
           val formatToParts :
             'tags this ->
               ?number:bigint or_number -> unit -> NumberFormatPart.t list
           val format' : 'tags this -> value:float -> string
           val resolvedOptions' : 'tags this -> ResolvedNumberFormatOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:string list or_string ->
               ?options:NumberFormatOptions.t -> unit -> t
           val invoke :
             ?locales:string list or_string ->
               ?options:NumberFormatOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:string list or_string ->
               ?options:NumberFormatOptions.t -> unit -> string list
         end
         module AnonymousInterface10 :
         sig
           type t = private Ojs.t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val create :
             t ->
               ?locales:string list or_string ->
                 ?options:NumberFormatOptions.t -> unit -> NumberFormat.t
           val apply :
             t ->
               ?locales:string list or_string ->
                 ?options:NumberFormatOptions.t -> unit -> NumberFormat.t
           val supportedLocalesOf :
             t ->
               locales:string list or_string ->
                 ?options:NumberFormatOptions.t -> unit -> string list
         end
         val collator : unit -> AnonymousInterface8.t
         val numberFormat : unit -> AnonymousInterface10.t
         val dateTimeFormat : unit -> AnonymousInterface9.t
         val pluralRules : unit -> AnonymousInterface11.t
         val relativeTimeFormat : unit -> AnonymousInterface20.t
         val locale : unit -> AnonymousInterface12.t
         val displayNames : unit -> AnonymousInterface4.t
       end =
  struct
    module ResolvedDateTimeFormatOptions =
      struct
        type t = [ `Intl_ResolvedDateTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x1887 : Ojs.t) -> t_of_js x1887
        and t_0_to_js : t_0 -> Ojs.t = fun (x1886 : t) -> t_to_js x1886
        type tags = [ `Intl_ResolvedDateTimeFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `Intl_ResolvedDateTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x1890 : Ojs.t) -> intf_of_js __tags_of_js x1890
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x1888 : __tags intf) -> intf_to_js __tags_to_js x1888
        let (get_formatMatcher :
          'tags this -> [ `L_s23_basic  | `L_s24_best_fit ]) =
          fun (x1892 : 'tags this) ->
            let x1894 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x1892) "formatMatcher" in
            match Ojs.string_of_js x1894 with
            | "basic" -> `L_s23_basic
            | "best fit" -> `L_s24_best_fit
            | _ -> assert false
        let (set_formatMatcher :
          'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] -> unit) =
          fun (x1895 : 'tags this) ->
            fun (x1896 : [ `L_s23_basic  | `L_s24_best_fit ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1895) "formatMatcher"
                (match x1896 with
                 | `L_s23_basic -> Ojs.string_to_js "basic"
                 | `L_s24_best_fit -> Ojs.string_to_js "best fit")
        let (get_dateStyle :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ])
          =
          fun (x1898 : 'tags this) ->
            let x1900 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x1898) "dateStyle" in
            match Ojs.string_of_js x1900 with
            | "full" -> `L_s43_full
            | "long" -> `L_s55_long
            | "medium" -> `L_s59_medium
            | "short" -> `L_s88_short
            | _ -> assert false
        let (set_dateStyle :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ]
              -> unit)
          =
          fun (x1901 : 'tags this) ->
            fun
              (x1902 :
                [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                | `L_s88_short ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1901) "dateStyle"
                (match x1902 with
                 | `L_s43_full -> Ojs.string_to_js "full"
                 | `L_s55_long -> Ojs.string_to_js "long"
                 | `L_s59_medium -> Ojs.string_to_js "medium"
                 | `L_s88_short -> Ojs.string_to_js "short")
        let (get_timeStyle :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ])
          =
          fun (x1904 : 'tags this) ->
            let x1906 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x1904) "timeStyle" in
            match Ojs.string_of_js x1906 with
            | "full" -> `L_s43_full
            | "long" -> `L_s55_long
            | "medium" -> `L_s59_medium
            | "short" -> `L_s88_short
            | _ -> assert false
        let (set_timeStyle :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ]
              -> unit)
          =
          fun (x1907 : 'tags this) ->
            fun
              (x1908 :
                [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                | `L_s88_short ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1907) "timeStyle"
                (match x1908 with
                 | `L_s43_full -> Ojs.string_to_js "full"
                 | `L_s55_long -> Ojs.string_to_js "long"
                 | `L_s59_medium -> Ojs.string_to_js "medium"
                 | `L_s88_short -> Ojs.string_to_js "short")
        let (get_hourCycle :
          'tags this ->
            [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ])
          =
          fun (x1910 : 'tags this) ->
            let x1912 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x1910) "hourCycle" in
            match Ojs.string_of_js x1912 with
            | "h11" -> `L_s45_h11
            | "h12" -> `L_s46_h12
            | "h23" -> `L_s47_h23
            | "h24" -> `L_s48_h24
            | _ -> assert false
        let (set_hourCycle :
          'tags this ->
            [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ] -> unit)
          =
          fun (x1913 : 'tags this) ->
            fun
              (x1914 :
                [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1913) "hourCycle"
                (match x1914 with
                 | `L_s45_h11 -> Ojs.string_to_js "h11"
                 | `L_s46_h12 -> Ojs.string_to_js "h12"
                 | `L_s47_h23 -> Ojs.string_to_js "h23"
                 | `L_s48_h24 -> Ojs.string_to_js "h24")
        let (get_dayPeriod :
          'tags this -> [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ]) =
          fun (x1916 : 'tags this) ->
            let x1918 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x1916) "dayPeriod" in
            match Ojs.string_of_js x1918 with
            | "long" -> `L_s55_long
            | "narrow" -> `L_s67_narrow
            | "short" -> `L_s88_short
            | _ -> assert false
        let (set_dayPeriod :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] -> unit)
          =
          fun (x1919 : 'tags this) ->
            fun (x1920 : [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1919) "dayPeriod"
                (match x1920 with
                 | `L_s55_long -> Ojs.string_to_js "long"
                 | `L_s67_narrow -> Ojs.string_to_js "narrow"
                 | `L_s88_short -> Ojs.string_to_js "short")
        let (get_fractionalSecondDigits :
          'tags this -> [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ]) =
          fun (x1922 : 'tags this) ->
            let x1924 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x1922)
                "fractionalSecondDigits" in
            match Ojs.int_of_js x1924 with
            | 0 -> `L_n_0
            | 1 -> `L_n_1
            | 2 -> `L_n_2
            | 3 -> `L_n_3
            | _ -> assert false
        let (set_fractionalSecondDigits :
          'tags this -> [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ] -> unit) =
          fun (x1925 : 'tags this) ->
            fun (x1926 : [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1925)
                "fractionalSecondDigits"
                (match x1926 with
                 | `L_n_0 -> Ojs.int_to_js 0
                 | `L_n_1 -> Ojs.int_to_js 1
                 | `L_n_2 -> Ojs.int_to_js 2
                 | `L_n_3 -> Ojs.int_to_js 3)
        let (get_locale : 'tags this -> string) =
          fun (x1928 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x1928) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x1930 : 'tags this) ->
            fun (x1931 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1930) "locale"
                (Ojs.string_to_js x1931)
        let (get_calendar : 'tags this -> string) =
          fun (x1933 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x1933) "calendar")
        let (set_calendar : 'tags this -> string -> unit) =
          fun (x1935 : 'tags this) ->
            fun (x1936 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1935) "calendar"
                (Ojs.string_to_js x1936)
        let (get_numberingSystem : 'tags this -> string) =
          fun (x1938 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x1938)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x1940 : 'tags this) ->
            fun (x1941 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1940)
                "numberingSystem" (Ojs.string_to_js x1941)
        let (get_timeZone : 'tags this -> string) =
          fun (x1943 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x1943) "timeZone")
        let (set_timeZone : 'tags this -> string -> unit) =
          fun (x1945 : 'tags this) ->
            fun (x1946 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1945) "timeZone"
                (Ojs.string_to_js x1946)
        let (get_hour12 : 'tags this -> bool) =
          fun (x1948 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x1948) "hour12")
        let (set_hour12 : 'tags this -> bool -> unit) =
          fun (x1950 : 'tags this) ->
            fun (x1951 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1950) "hour12"
                (Ojs.bool_to_js x1951)
        let (get_weekday : 'tags this -> string) =
          fun (x1953 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x1953) "weekday")
        let (set_weekday : 'tags this -> string -> unit) =
          fun (x1955 : 'tags this) ->
            fun (x1956 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1955) "weekday"
                (Ojs.string_to_js x1956)
        let (get_era : 'tags this -> string) =
          fun (x1958 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x1958) "era")
        let (set_era : 'tags this -> string -> unit) =
          fun (x1960 : 'tags this) ->
            fun (x1961 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1960) "era"
                (Ojs.string_to_js x1961)
        let (get_year : 'tags this -> string) =
          fun (x1963 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x1963) "year")
        let (set_year : 'tags this -> string -> unit) =
          fun (x1965 : 'tags this) ->
            fun (x1966 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1965) "year"
                (Ojs.string_to_js x1966)
        let (get_month : 'tags this -> string) =
          fun (x1968 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x1968) "month")
        let (set_month : 'tags this -> string -> unit) =
          fun (x1970 : 'tags this) ->
            fun (x1971 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1970) "month"
                (Ojs.string_to_js x1971)
        let (get_day : 'tags this -> string) =
          fun (x1973 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x1973) "day")
        let (set_day : 'tags this -> string -> unit) =
          fun (x1975 : 'tags this) ->
            fun (x1976 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1975) "day"
                (Ojs.string_to_js x1976)
        let (get_hour : 'tags this -> string) =
          fun (x1978 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x1978) "hour")
        let (set_hour : 'tags this -> string -> unit) =
          fun (x1980 : 'tags this) ->
            fun (x1981 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1980) "hour"
                (Ojs.string_to_js x1981)
        let (get_minute : 'tags this -> string) =
          fun (x1983 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x1983) "minute")
        let (set_minute : 'tags this -> string -> unit) =
          fun (x1985 : 'tags this) ->
            fun (x1986 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1985) "minute"
                (Ojs.string_to_js x1986)
        let (get_second : 'tags this -> string) =
          fun (x1988 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x1988) "second")
        let (set_second : 'tags this -> string -> unit) =
          fun (x1990 : 'tags this) ->
            fun (x1991 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1990) "second"
                (Ojs.string_to_js x1991)
        let (get_timeZoneName : 'tags this -> string) =
          fun (x1993 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x1993) "timeZoneName")
        let (set_timeZoneName : 'tags this -> string -> unit) =
          fun (x1995 : 'tags this) ->
            fun (x1996 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1995) "timeZoneName"
                (Ojs.string_to_js x1996)
        let cast_from = Obj.magic
      end
    module DateTimeFormatPartTypes =
      struct
        type t =
          [ `L_s101_year  | `L_s29_day  | `L_s30_dayPeriod  | `L_s35_era 
          | `L_s49_hour  | `L_s54_literal  | `L_s61_minute  | `L_s63_month 
          | `L_s86_second  | `L_s92_timeZoneName  | `L_s99_weekday ]
        let rec t_of_js : Ojs.t -> t =
          fun (x1999 : Ojs.t) ->
            let x2000 = x1999 in
            match Ojs.string_of_js x2000 with
            | "year" -> `L_s101_year
            | "day" -> `L_s29_day
            | "dayPeriod" -> `L_s30_dayPeriod
            | "era" -> `L_s35_era
            | "hour" -> `L_s49_hour
            | "literal" -> `L_s54_literal
            | "minute" -> `L_s61_minute
            | "month" -> `L_s63_month
            | "second" -> `L_s86_second
            | "timeZoneName" -> `L_s92_timeZoneName
            | "weekday" -> `L_s99_weekday
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x1998 :
              [ `L_s101_year  | `L_s29_day  | `L_s30_dayPeriod  | `L_s35_era 
              | `L_s49_hour  | `L_s54_literal  | `L_s61_minute 
              | `L_s63_month  | `L_s86_second  | `L_s92_timeZoneName 
              | `L_s99_weekday ])
            ->
            match x1998 with
            | `L_s101_year -> Ojs.string_to_js "year"
            | `L_s29_day -> Ojs.string_to_js "day"
            | `L_s30_dayPeriod -> Ojs.string_to_js "dayPeriod"
            | `L_s35_era -> Ojs.string_to_js "era"
            | `L_s49_hour -> Ojs.string_to_js "hour"
            | `L_s54_literal -> Ojs.string_to_js "literal"
            | `L_s61_minute -> Ojs.string_to_js "minute"
            | `L_s63_month -> Ojs.string_to_js "month"
            | `L_s86_second -> Ojs.string_to_js "second"
            | `L_s92_timeZoneName -> Ojs.string_to_js "timeZoneName"
            | `L_s99_weekday -> Ojs.string_to_js "weekday"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2002 : Ojs.t) -> t_of_js x2002
        and t_0_to_js : t_0 -> Ojs.t = fun (x2001 : t) -> t_to_js x2001
      end
    module DateTimeFormatPart =
      struct
        type t = [ `Intl_DateTimeFormatPart ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2004 : Ojs.t) -> t_of_js x2004
        and t_0_to_js : t_0 -> Ojs.t = fun (x2003 : t) -> t_to_js x2003
        type tags = [ `Intl_DateTimeFormatPart ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DateTimeFormatPart ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2007 : Ojs.t) -> intf_of_js __tags_of_js x2007
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2005 : __tags intf) -> intf_to_js __tags_to_js x2005
        let (get_type : 'tags this -> DateTimeFormatPartTypes.t) =
          fun (x2009 : 'tags this) ->
            DateTimeFormatPartTypes.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2009) "type")
        let (set_type : 'tags this -> DateTimeFormatPartTypes.t -> unit) =
          fun (x2011 : 'tags this) ->
            fun (x2012 : DateTimeFormatPartTypes.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2011) "type"
                (DateTimeFormatPartTypes.t_to_js x2012)
        let (get_value : 'tags this -> string) =
          fun (x2014 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2014) "value")
        let (set_value : 'tags this -> string -> unit) =
          fun (x2016 : 'tags this) ->
            fun (x2017 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2016) "value"
                (Ojs.string_to_js x2017)
        let cast_from = Obj.magic
      end
    module DateTimeFormatOptions =
      struct
        type t = [ `Intl_DateTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2020 : Ojs.t) -> t_of_js x2020
        and t_0_to_js : t_0 -> Ojs.t = fun (x2019 : t) -> t_to_js x2019
        type tags = [ `Intl_DateTimeFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DateTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2023 : Ojs.t) -> intf_of_js __tags_of_js x2023
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2021 : __tags intf) -> intf_to_js __tags_to_js x2021
        let (get_formatMatcher :
          'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] or_undefined) =
          fun (x2025 : 'tags this) ->
            or_undefined_of_js
              (fun (x2027 : Ojs.t) ->
                 let x2028 = x2027 in
                 match Ojs.string_of_js x2028 with
                 | "basic" -> `L_s23_basic
                 | "best fit" -> `L_s24_best_fit
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2025)
                 "formatMatcher")
        let (set_formatMatcher :
          'tags this ->
            [ `L_s23_basic  | `L_s24_best_fit ] or_undefined -> unit)
          =
          fun (x2029 : 'tags this) ->
            fun (x2030 : [ `L_s23_basic  | `L_s24_best_fit ] or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2029) "formatMatcher"
                (or_undefined_to_js
                   (fun (x2031 : [ `L_s23_basic  | `L_s24_best_fit ]) ->
                      match x2031 with
                      | `L_s23_basic -> Ojs.string_to_js "basic"
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit") x2030)
        let (get_dateStyle :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ]
              or_undefined)
          =
          fun (x2033 : 'tags this) ->
            or_undefined_of_js
              (fun (x2035 : Ojs.t) ->
                 let x2036 = x2035 in
                 match Ojs.string_of_js x2036 with
                 | "full" -> `L_s43_full
                 | "long" -> `L_s55_long
                 | "medium" -> `L_s59_medium
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2033) "dateStyle")
        let (set_dateStyle :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ]
              or_undefined -> unit)
          =
          fun (x2037 : 'tags this) ->
            fun
              (x2038 :
                [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                | `L_s88_short ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2037) "dateStyle"
                (or_undefined_to_js
                   (fun
                      (x2039 :
                        [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                        | `L_s88_short ])
                      ->
                      match x2039 with
                      | `L_s43_full -> Ojs.string_to_js "full"
                      | `L_s55_long -> Ojs.string_to_js "long"
                      | `L_s59_medium -> Ojs.string_to_js "medium"
                      | `L_s88_short -> Ojs.string_to_js "short") x2038)
        let (get_timeStyle :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ]
              or_undefined)
          =
          fun (x2041 : 'tags this) ->
            or_undefined_of_js
              (fun (x2043 : Ojs.t) ->
                 let x2044 = x2043 in
                 match Ojs.string_of_js x2044 with
                 | "full" -> `L_s43_full
                 | "long" -> `L_s55_long
                 | "medium" -> `L_s59_medium
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2041) "timeStyle")
        let (set_timeStyle :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ]
              or_undefined -> unit)
          =
          fun (x2045 : 'tags this) ->
            fun
              (x2046 :
                [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                | `L_s88_short ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2045) "timeStyle"
                (or_undefined_to_js
                   (fun
                      (x2047 :
                        [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                        | `L_s88_short ])
                      ->
                      match x2047 with
                      | `L_s43_full -> Ojs.string_to_js "full"
                      | `L_s55_long -> Ojs.string_to_js "long"
                      | `L_s59_medium -> Ojs.string_to_js "medium"
                      | `L_s88_short -> Ojs.string_to_js "short") x2046)
        let (get_dayPeriod :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined)
          =
          fun (x2049 : 'tags this) ->
            or_undefined_of_js
              (fun (x2051 : Ojs.t) ->
                 let x2052 = x2051 in
                 match Ojs.string_of_js x2052 with
                 | "long" -> `L_s55_long
                 | "narrow" -> `L_s67_narrow
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2049) "dayPeriod")
        let (set_dayPeriod :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined ->
              unit)
          =
          fun (x2053 : 'tags this) ->
            fun
              (x2054 :
                [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2053) "dayPeriod"
                (or_undefined_to_js
                   (fun
                      (x2055 :
                        [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ])
                      ->
                      match x2055 with
                      | `L_s55_long -> Ojs.string_to_js "long"
                      | `L_s67_narrow -> Ojs.string_to_js "narrow"
                      | `L_s88_short -> Ojs.string_to_js "short") x2054)
        let (get_fractionalSecondDigits :
          'tags this -> [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ] or_undefined)
          =
          fun (x2057 : 'tags this) ->
            or_undefined_of_js
              (fun (x2059 : Ojs.t) ->
                 let x2060 = x2059 in
                 match Ojs.int_of_js x2060 with
                 | 0 -> `L_n_0
                 | 1 -> `L_n_1
                 | 2 -> `L_n_2
                 | 3 -> `L_n_3
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2057)
                 "fractionalSecondDigits")
        let (set_fractionalSecondDigits :
          'tags this ->
            [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ] or_undefined -> unit)
          =
          fun (x2061 : 'tags this) ->
            fun
              (x2062 : [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2061)
                "fractionalSecondDigits"
                (or_undefined_to_js
                   (fun (x2063 : [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ]) ->
                      match x2063 with
                      | `L_n_0 -> Ojs.int_to_js 0
                      | `L_n_1 -> Ojs.int_to_js 1
                      | `L_n_2 -> Ojs.int_to_js 2
                      | `L_n_3 -> Ojs.int_to_js 3) x2062)
        let (get_calendar : 'tags this -> string or_undefined) =
          fun (x2065 : 'tags this) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2065) "calendar")
        let (set_calendar : 'tags this -> string or_undefined -> unit) =
          fun (x2068 : 'tags this) ->
            fun (x2069 : string or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2068) "calendar"
                (or_undefined_to_js Ojs.string_to_js x2069)
        let (get_dayPeriod' :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined)
          =
          fun (x2072 : 'tags this) ->
            or_undefined_of_js
              (fun (x2074 : Ojs.t) ->
                 let x2075 = x2074 in
                 match Ojs.string_of_js x2075 with
                 | "long" -> `L_s55_long
                 | "narrow" -> `L_s67_narrow
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2072) "dayPeriod")
        let (set_dayPeriod' :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined ->
              unit)
          =
          fun (x2076 : 'tags this) ->
            fun
              (x2077 :
                [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2076) "dayPeriod"
                (or_undefined_to_js
                   (fun
                      (x2078 :
                        [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ])
                      ->
                      match x2078 with
                      | `L_s55_long -> Ojs.string_to_js "long"
                      | `L_s67_narrow -> Ojs.string_to_js "narrow"
                      | `L_s88_short -> Ojs.string_to_js "short") x2077)
        let (get_numberingSystem : 'tags this -> string or_undefined) =
          fun (x2080 : 'tags this) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2080)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string or_undefined -> unit)
          =
          fun (x2083 : 'tags this) ->
            fun (x2084 : string or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2083)
                "numberingSystem" (or_undefined_to_js Ojs.string_to_js x2084)
        let (get_dateStyle' :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ]
              or_undefined)
          =
          fun (x2087 : 'tags this) ->
            or_undefined_of_js
              (fun (x2089 : Ojs.t) ->
                 let x2090 = x2089 in
                 match Ojs.string_of_js x2090 with
                 | "full" -> `L_s43_full
                 | "long" -> `L_s55_long
                 | "medium" -> `L_s59_medium
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2087) "dateStyle")
        let (set_dateStyle' :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ]
              or_undefined -> unit)
          =
          fun (x2091 : 'tags this) ->
            fun
              (x2092 :
                [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                | `L_s88_short ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2091) "dateStyle"
                (or_undefined_to_js
                   (fun
                      (x2093 :
                        [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                        | `L_s88_short ])
                      ->
                      match x2093 with
                      | `L_s43_full -> Ojs.string_to_js "full"
                      | `L_s55_long -> Ojs.string_to_js "long"
                      | `L_s59_medium -> Ojs.string_to_js "medium"
                      | `L_s88_short -> Ojs.string_to_js "short") x2092)
        let (get_timeStyle' :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ]
              or_undefined)
          =
          fun (x2095 : 'tags this) ->
            or_undefined_of_js
              (fun (x2097 : Ojs.t) ->
                 let x2098 = x2097 in
                 match Ojs.string_of_js x2098 with
                 | "full" -> `L_s43_full
                 | "long" -> `L_s55_long
                 | "medium" -> `L_s59_medium
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2095) "timeStyle")
        let (set_timeStyle' :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ]
              or_undefined -> unit)
          =
          fun (x2099 : 'tags this) ->
            fun
              (x2100 :
                [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                | `L_s88_short ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2099) "timeStyle"
                (or_undefined_to_js
                   (fun
                      (x2101 :
                        [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                        | `L_s88_short ])
                      ->
                      match x2101 with
                      | `L_s43_full -> Ojs.string_to_js "full"
                      | `L_s55_long -> Ojs.string_to_js "long"
                      | `L_s59_medium -> Ojs.string_to_js "medium"
                      | `L_s88_short -> Ojs.string_to_js "short") x2100)
        let (get_hourCycle :
          'tags this ->
            [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ]
              or_undefined)
          =
          fun (x2103 : 'tags this) ->
            or_undefined_of_js
              (fun (x2105 : Ojs.t) ->
                 let x2106 = x2105 in
                 match Ojs.string_of_js x2106 with
                 | "h11" -> `L_s45_h11
                 | "h12" -> `L_s46_h12
                 | "h23" -> `L_s47_h23
                 | "h24" -> `L_s48_h24
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2103) "hourCycle")
        let (set_hourCycle :
          'tags this ->
            [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ]
              or_undefined -> unit)
          =
          fun (x2107 : 'tags this) ->
            fun
              (x2108 :
                [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ]
                  or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2107) "hourCycle"
                (or_undefined_to_js
                   (fun
                      (x2109 :
                        [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23 
                        | `L_s48_h24 ])
                      ->
                      match x2109 with
                      | `L_s45_h11 -> Ojs.string_to_js "h11"
                      | `L_s46_h12 -> Ojs.string_to_js "h12"
                      | `L_s47_h23 -> Ojs.string_to_js "h23"
                      | `L_s48_h24 -> Ojs.string_to_js "h24") x2108)
        let (get_localeMatcher :
          'tags this -> [ `L_s24_best_fit  | `L_s56_lookup ] or_undefined) =
          fun (x2111 : 'tags this) ->
            or_undefined_of_js
              (fun (x2113 : Ojs.t) ->
                 let x2114 = x2113 in
                 match Ojs.string_of_js x2114 with
                 | "best fit" -> `L_s24_best_fit
                 | "lookup" -> `L_s56_lookup
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2111)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this ->
            [ `L_s24_best_fit  | `L_s56_lookup ] or_undefined -> unit)
          =
          fun (x2115 : 'tags this) ->
            fun (x2116 : [ `L_s24_best_fit  | `L_s56_lookup ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2115) "localeMatcher"
                (or_undefined_to_js
                   (fun (x2117 : [ `L_s24_best_fit  | `L_s56_lookup ]) ->
                      match x2117 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit"
                      | `L_s56_lookup -> Ojs.string_to_js "lookup") x2116)
        let (get_weekday :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined)
          =
          fun (x2119 : 'tags this) ->
            or_undefined_of_js
              (fun (x2121 : Ojs.t) ->
                 let x2122 = x2121 in
                 match Ojs.string_of_js x2122 with
                 | "long" -> `L_s55_long
                 | "narrow" -> `L_s67_narrow
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2119) "weekday")
        let (set_weekday :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined ->
              unit)
          =
          fun (x2123 : 'tags this) ->
            fun
              (x2124 :
                [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2123) "weekday"
                (or_undefined_to_js
                   (fun
                      (x2125 :
                        [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ])
                      ->
                      match x2125 with
                      | `L_s55_long -> Ojs.string_to_js "long"
                      | `L_s67_narrow -> Ojs.string_to_js "narrow"
                      | `L_s88_short -> Ojs.string_to_js "short") x2124)
        let (get_era :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined)
          =
          fun (x2127 : 'tags this) ->
            or_undefined_of_js
              (fun (x2129 : Ojs.t) ->
                 let x2130 = x2129 in
                 match Ojs.string_of_js x2130 with
                 | "long" -> `L_s55_long
                 | "narrow" -> `L_s67_narrow
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2127) "era")
        let (set_era :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined ->
              unit)
          =
          fun (x2131 : 'tags this) ->
            fun
              (x2132 :
                [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2131) "era"
                (or_undefined_to_js
                   (fun
                      (x2133 :
                        [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ])
                      ->
                      match x2133 with
                      | `L_s55_long -> Ojs.string_to_js "long"
                      | `L_s67_narrow -> Ojs.string_to_js "narrow"
                      | `L_s88_short -> Ojs.string_to_js "short") x2132)
        let (get_year :
          'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined) =
          fun (x2135 : 'tags this) ->
            or_undefined_of_js
              (fun (x2137 : Ojs.t) ->
                 let x2138 = x2137 in
                 match Ojs.string_of_js x2138 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s72_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2135) "year")
        let (set_year :
          'tags this ->
            [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined -> unit)
          =
          fun (x2139 : 'tags this) ->
            fun (x2140 : [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2139) "year"
                (or_undefined_to_js
                   (fun (x2141 : [ `L_s0_2_digit  | `L_s72_numeric ]) ->
                      match x2141 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"
                      | `L_s72_numeric -> Ojs.string_to_js "numeric") x2140)
        let (get_month :
          'tags this ->
            [ `L_s0_2_digit  | `L_s55_long  | `L_s67_narrow 
            | `L_s72_numeric  | `L_s88_short ] or_undefined)
          =
          fun (x2143 : 'tags this) ->
            or_undefined_of_js
              (fun (x2145 : Ojs.t) ->
                 let x2146 = x2145 in
                 match Ojs.string_of_js x2146 with
                 | "2-digit" -> `L_s0_2_digit
                 | "long" -> `L_s55_long
                 | "narrow" -> `L_s67_narrow
                 | "numeric" -> `L_s72_numeric
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2143) "month")
        let (set_month :
          'tags this ->
            [ `L_s0_2_digit  | `L_s55_long  | `L_s67_narrow 
            | `L_s72_numeric  | `L_s88_short ] or_undefined -> unit)
          =
          fun (x2147 : 'tags this) ->
            fun
              (x2148 :
                [ `L_s0_2_digit  | `L_s55_long  | `L_s67_narrow 
                | `L_s72_numeric  | `L_s88_short ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2147) "month"
                (or_undefined_to_js
                   (fun
                      (x2149 :
                        [ `L_s0_2_digit  | `L_s55_long  | `L_s67_narrow 
                        | `L_s72_numeric  | `L_s88_short ])
                      ->
                      match x2149 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"
                      | `L_s55_long -> Ojs.string_to_js "long"
                      | `L_s67_narrow -> Ojs.string_to_js "narrow"
                      | `L_s72_numeric -> Ojs.string_to_js "numeric"
                      | `L_s88_short -> Ojs.string_to_js "short") x2148)
        let (get_day :
          'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined) =
          fun (x2151 : 'tags this) ->
            or_undefined_of_js
              (fun (x2153 : Ojs.t) ->
                 let x2154 = x2153 in
                 match Ojs.string_of_js x2154 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s72_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2151) "day")
        let (set_day :
          'tags this ->
            [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined -> unit)
          =
          fun (x2155 : 'tags this) ->
            fun (x2156 : [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2155) "day"
                (or_undefined_to_js
                   (fun (x2157 : [ `L_s0_2_digit  | `L_s72_numeric ]) ->
                      match x2157 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"
                      | `L_s72_numeric -> Ojs.string_to_js "numeric") x2156)
        let (get_hour :
          'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined) =
          fun (x2159 : 'tags this) ->
            or_undefined_of_js
              (fun (x2161 : Ojs.t) ->
                 let x2162 = x2161 in
                 match Ojs.string_of_js x2162 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s72_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2159) "hour")
        let (set_hour :
          'tags this ->
            [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined -> unit)
          =
          fun (x2163 : 'tags this) ->
            fun (x2164 : [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2163) "hour"
                (or_undefined_to_js
                   (fun (x2165 : [ `L_s0_2_digit  | `L_s72_numeric ]) ->
                      match x2165 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"
                      | `L_s72_numeric -> Ojs.string_to_js "numeric") x2164)
        let (get_minute :
          'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined) =
          fun (x2167 : 'tags this) ->
            or_undefined_of_js
              (fun (x2169 : Ojs.t) ->
                 let x2170 = x2169 in
                 match Ojs.string_of_js x2170 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s72_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2167) "minute")
        let (set_minute :
          'tags this ->
            [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined -> unit)
          =
          fun (x2171 : 'tags this) ->
            fun (x2172 : [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2171) "minute"
                (or_undefined_to_js
                   (fun (x2173 : [ `L_s0_2_digit  | `L_s72_numeric ]) ->
                      match x2173 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"
                      | `L_s72_numeric -> Ojs.string_to_js "numeric") x2172)
        let (get_second :
          'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined) =
          fun (x2175 : 'tags this) ->
            or_undefined_of_js
              (fun (x2177 : Ojs.t) ->
                 let x2178 = x2177 in
                 match Ojs.string_of_js x2178 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s72_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2175) "second")
        let (set_second :
          'tags this ->
            [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined -> unit)
          =
          fun (x2179 : 'tags this) ->
            fun (x2180 : [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2179) "second"
                (or_undefined_to_js
                   (fun (x2181 : [ `L_s0_2_digit  | `L_s72_numeric ]) ->
                      match x2181 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"
                      | `L_s72_numeric -> Ojs.string_to_js "numeric") x2180)
        let (get_timeZoneName :
          'tags this -> [ `L_s55_long  | `L_s88_short ] or_undefined) =
          fun (x2183 : 'tags this) ->
            or_undefined_of_js
              (fun (x2185 : Ojs.t) ->
                 let x2186 = x2185 in
                 match Ojs.string_of_js x2186 with
                 | "long" -> `L_s55_long
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2183) "timeZoneName")
        let (set_timeZoneName :
          'tags this -> [ `L_s55_long  | `L_s88_short ] or_undefined -> unit)
          =
          fun (x2187 : 'tags this) ->
            fun (x2188 : [ `L_s55_long  | `L_s88_short ] or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2187) "timeZoneName"
                (or_undefined_to_js
                   (fun (x2189 : [ `L_s55_long  | `L_s88_short ]) ->
                      match x2189 with
                      | `L_s55_long -> Ojs.string_to_js "long"
                      | `L_s88_short -> Ojs.string_to_js "short") x2188)
        let (get_formatMatcher' :
          'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] or_undefined) =
          fun (x2191 : 'tags this) ->
            or_undefined_of_js
              (fun (x2193 : Ojs.t) ->
                 let x2194 = x2193 in
                 match Ojs.string_of_js x2194 with
                 | "basic" -> `L_s23_basic
                 | "best fit" -> `L_s24_best_fit
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2191)
                 "formatMatcher")
        let (set_formatMatcher' :
          'tags this ->
            [ `L_s23_basic  | `L_s24_best_fit ] or_undefined -> unit)
          =
          fun (x2195 : 'tags this) ->
            fun (x2196 : [ `L_s23_basic  | `L_s24_best_fit ] or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2195) "formatMatcher"
                (or_undefined_to_js
                   (fun (x2197 : [ `L_s23_basic  | `L_s24_best_fit ]) ->
                      match x2197 with
                      | `L_s23_basic -> Ojs.string_to_js "basic"
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit") x2196)
        let (get_hour12 : 'tags this -> bool or_undefined) =
          fun (x2199 : 'tags this) ->
            or_undefined_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2199) "hour12")
        let (set_hour12 : 'tags this -> bool or_undefined -> unit) =
          fun (x2202 : 'tags this) ->
            fun (x2203 : bool or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2202) "hour12"
                (or_undefined_to_js Ojs.bool_to_js x2203)
        let (get_timeZone : 'tags this -> string or_undefined) =
          fun (x2206 : 'tags this) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2206) "timeZone")
        let (set_timeZone : 'tags this -> string or_undefined -> unit) =
          fun (x2209 : 'tags this) ->
            fun (x2210 : string or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2209) "timeZone"
                (or_undefined_to_js Ojs.string_to_js x2210)
        let cast_from = Obj.magic
      end
    module DateTimeFormat =
      struct
        type t = [ `Intl_DateTimeFormat ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2214 : Ojs.t) -> t_of_js x2214
        and t_0_to_js : t_0 -> Ojs.t = fun (x2213 : t) -> t_to_js x2213
        type tags = [ `Intl_DateTimeFormat ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DateTimeFormat ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2217 : Ojs.t) -> intf_of_js __tags_of_js x2217
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2215 : __tags intf) -> intf_to_js __tags_to_js x2215
        let (formatToParts :
          'tags this ->
            ?date:Date.t or_number -> unit -> DateTimeFormatPart.t list)
          =
          fun (x2223 : 'tags this) ->
            fun ?date:(x2219 : Date.t or_number option) ->
              fun () ->
                Ojs.list_of_js DateTimeFormatPart.t_of_js
                  (let x2225 = this_to_js Obj.magic x2223 in
                   Ojs.call (Ojs.get_prop_ascii x2225 "formatToParts")
                     "apply"
                     [|x2225;((let x2220 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x2219 with
                                | Some x2221 ->
                                    ignore
                                      (Ojs.call x2220 "push"
                                         [|(or_number_to_js Date.t_to_js
                                              x2221)|])
                                | None -> ());
                               x2220))|])
        let (format : 'tags this -> ?date:Date.t or_number -> unit -> string)
          =
          fun (x2231 : 'tags this) ->
            fun ?date:(x2227 : Date.t or_number option) ->
              fun () ->
                Ojs.string_of_js
                  (let x2233 = this_to_js Obj.magic x2231 in
                   Ojs.call (Ojs.get_prop_ascii x2233 "format") "apply"
                     [|x2233;((let x2228 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x2227 with
                                | Some x2229 ->
                                    ignore
                                      (Ojs.call x2228 "push"
                                         [|(or_number_to_js Date.t_to_js
                                              x2229)|])
                                | None -> ());
                               x2228))|])
        let (resolvedOptions : 'tags this -> ResolvedDateTimeFormatOptions.t)
          =
          fun (x2234 : 'tags this) ->
            ResolvedDateTimeFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2234) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:string list or_string ->
            ?options:DateTimeFormatOptions.t -> unit -> t)
          =
          fun ?locales:(x2236 : string list or_string option) ->
            fun ?options:(x2237 : DateTimeFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl")
                        "DateTimeFormat")
                     (let x2238 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2236 with
                       | Some x2240 ->
                           ignore
                             (Ojs.call x2238 "push"
                                [|(or_string_to_js
                                     (fun (x2241 : string list) ->
                                        Ojs.list_to_js Ojs.string_to_js x2241)
                                     x2240)|])
                       | None -> ());
                      (match x2237 with
                       | Some x2239 ->
                           ignore
                             (Ojs.call x2238 "push"
                                [|(DateTimeFormatOptions.t_to_js x2239)|])
                       | None -> ());
                      x2238))
        let (invoke :
          ?locales:string list or_string ->
            ?options:DateTimeFormatOptions.t -> unit -> t)
          =
          fun ?locales:(x2243 : string list or_string option) ->
            fun ?options:(x2244 : DateTimeFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl")
                        "DateTimeFormat") "apply"
                     [|Ojs.null;((let x2245 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x2243 with
                                   | Some x2247 ->
                                       ignore
                                         (Ojs.call x2245 "push"
                                            [|(or_string_to_js
                                                 (fun (x2248 : string list)
                                                    ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x2248)
                                                 x2247)|])
                                   | None -> ());
                                  (match x2244 with
                                   | Some x2246 ->
                                       ignore
                                         (Ojs.call x2245 "push"
                                            [|(DateTimeFormatOptions.t_to_js
                                                 x2246)|])
                                   | None -> ());
                                  x2245))|])
        let (supportedLocalesOf :
          locales:string list or_string ->
            ?options:DateTimeFormatOptions.t -> unit -> string list)
          =
          fun ~locales:(x2250 : string list or_string) ->
            fun ?options:(x2251 : DateTimeFormatOptions.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x2256 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl")
                       "DateTimeFormat" in
                   Ojs.call (Ojs.get_prop_ascii x2256 "supportedLocalesOf")
                     "apply"
                     [|x2256;((let x2252 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2252 "push"
                                    [|(or_string_to_js
                                         (fun (x2254 : string list) ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x2254) x2250)|]);
                               (match x2251 with
                                | Some x2253 ->
                                    ignore
                                      (Ojs.call x2252 "push"
                                         [|(DateTimeFormatOptions.t_to_js
                                              x2253)|])
                                | None -> ());
                               x2252))|])
      end
    module AnonymousInterface9 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x2259 : Ojs.t) -> x2259
        and t_to_js : t -> Ojs.t = fun (x2258 : Ojs.t) -> x2258
        let (create :
          t ->
            ?locales:string list or_string ->
              ?options:DateTimeFormatOptions.t -> unit -> DateTimeFormat.t)
          =
          fun (x2267 : t) ->
            fun ?locales:(x2260 : string list or_string option) ->
              fun ?options:(x2261 : DateTimeFormatOptions.t option) ->
                fun () ->
                  DateTimeFormat.t_of_js
                    (Ojs.new_obj_arr (t_to_js x2267)
                       (let x2262 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        (match x2260 with
                         | Some x2264 ->
                             ignore
                               (Ojs.call x2262 "push"
                                  [|(or_string_to_js
                                       (fun (x2265 : string list) ->
                                          Ojs.list_to_js Ojs.string_to_js
                                            x2265) x2264)|])
                         | None -> ());
                        (match x2261 with
                         | Some x2263 ->
                             ignore
                               (Ojs.call x2262 "push"
                                  [|(DateTimeFormatOptions.t_to_js x2263)|])
                         | None -> ());
                        x2262))
        let (apply :
          t ->
            ?locales:string list or_string ->
              ?options:DateTimeFormatOptions.t -> unit -> DateTimeFormat.t)
          =
          fun (x2275 : t) ->
            fun ?locales:(x2268 : string list or_string option) ->
              fun ?options:(x2269 : DateTimeFormatOptions.t option) ->
                fun () ->
                  DateTimeFormat.t_of_js
                    (Ojs.call (t_to_js x2275) "apply"
                       [|Ojs.null;((let x2270 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    (match x2268 with
                                     | Some x2272 ->
                                         ignore
                                           (Ojs.call x2270 "push"
                                              [|(or_string_to_js
                                                   (fun (x2273 : string list)
                                                      ->
                                                      Ojs.list_to_js
                                                        Ojs.string_to_js
                                                        x2273) x2272)|])
                                     | None -> ());
                                    (match x2269 with
                                     | Some x2271 ->
                                         ignore
                                           (Ojs.call x2270 "push"
                                              [|(DateTimeFormatOptions.t_to_js
                                                   x2271)|])
                                     | None -> ());
                                    x2270))|])
        let (supportedLocalesOf :
          t ->
            locales:string list or_string ->
              ?options:DateTimeFormatOptions.t -> unit -> string list)
          =
          fun (x2282 : t) ->
            fun ~locales:(x2276 : string list or_string) ->
              fun ?options:(x2277 : DateTimeFormatOptions.t option) ->
                fun () ->
                  Ojs.list_of_js Ojs.string_of_js
                    (let x2283 = t_to_js x2282 in
                     Ojs.call (Ojs.get_prop_ascii x2283 "supportedLocalesOf")
                       "apply"
                       [|x2283;((let x2278 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2278 "push"
                                      [|(or_string_to_js
                                           (fun (x2280 : string list) ->
                                              Ojs.list_to_js Ojs.string_to_js
                                                x2280) x2276)|]);
                                 (match x2277 with
                                  | Some x2279 ->
                                      ignore
                                        (Ojs.call x2278 "push"
                                           [|(DateTimeFormatOptions.t_to_js
                                                x2279)|])
                                  | None -> ());
                                 x2278))|])
      end
    module ResolvedCollatorOptions =
      struct
        type t = [ `Intl_ResolvedCollatorOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2286 : Ojs.t) -> t_of_js x2286
        and t_0_to_js : t_0 -> Ojs.t = fun (x2285 : t) -> t_to_js x2285
        type tags = [ `Intl_ResolvedCollatorOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_ResolvedCollatorOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2289 : Ojs.t) -> intf_of_js __tags_of_js x2289
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2287 : __tags intf) -> intf_to_js __tags_to_js x2287
        let (get_locale : 'tags this -> string) =
          fun (x2291 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2291) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x2293 : 'tags this) ->
            fun (x2294 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2293) "locale"
                (Ojs.string_to_js x2294)
        let (get_usage : 'tags this -> string) =
          fun (x2296 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2296) "usage")
        let (set_usage : 'tags this -> string -> unit) =
          fun (x2298 : 'tags this) ->
            fun (x2299 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2298) "usage"
                (Ojs.string_to_js x2299)
        let (get_sensitivity : 'tags this -> string) =
          fun (x2301 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2301) "sensitivity")
        let (set_sensitivity : 'tags this -> string -> unit) =
          fun (x2303 : 'tags this) ->
            fun (x2304 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2303) "sensitivity"
                (Ojs.string_to_js x2304)
        let (get_ignorePunctuation : 'tags this -> bool) =
          fun (x2306 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2306)
                 "ignorePunctuation")
        let (set_ignorePunctuation : 'tags this -> bool -> unit) =
          fun (x2308 : 'tags this) ->
            fun (x2309 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2308)
                "ignorePunctuation" (Ojs.bool_to_js x2309)
        let (get_collation : 'tags this -> string) =
          fun (x2311 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2311) "collation")
        let (set_collation : 'tags this -> string -> unit) =
          fun (x2313 : 'tags this) ->
            fun (x2314 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2313) "collation"
                (Ojs.string_to_js x2314)
        let (get_caseFirst : 'tags this -> string) =
          fun (x2316 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2316) "caseFirst")
        let (set_caseFirst : 'tags this -> string -> unit) =
          fun (x2318 : 'tags this) ->
            fun (x2319 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2318) "caseFirst"
                (Ojs.string_to_js x2319)
        let (get_numeric : 'tags this -> bool) =
          fun (x2321 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2321) "numeric")
        let (set_numeric : 'tags this -> bool -> unit) =
          fun (x2323 : 'tags this) ->
            fun (x2324 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2323) "numeric"
                (Ojs.bool_to_js x2324)
        let cast_from = Obj.magic
      end
    module CollatorOptions =
      struct
        type t = [ `Intl_CollatorOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2327 : Ojs.t) -> t_of_js x2327
        and t_0_to_js : t_0 -> Ojs.t = fun (x2326 : t) -> t_to_js x2326
        type tags = [ `Intl_CollatorOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_CollatorOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2330 : Ojs.t) -> intf_of_js __tags_of_js x2330
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2328 : __tags intf) -> intf_to_js __tags_to_js x2328
        let (get_usage : 'tags this -> string or_undefined) =
          fun (x2332 : 'tags this) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2332) "usage")
        let (set_usage : 'tags this -> string or_undefined -> unit) =
          fun (x2335 : 'tags this) ->
            fun (x2336 : string or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2335) "usage"
                (or_undefined_to_js Ojs.string_to_js x2336)
        let (get_localeMatcher : 'tags this -> string or_undefined) =
          fun (x2339 : 'tags this) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2339)
                 "localeMatcher")
        let (set_localeMatcher : 'tags this -> string or_undefined -> unit) =
          fun (x2342 : 'tags this) ->
            fun (x2343 : string or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2342) "localeMatcher"
                (or_undefined_to_js Ojs.string_to_js x2343)
        let (get_numeric : 'tags this -> bool or_undefined) =
          fun (x2346 : 'tags this) ->
            or_undefined_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2346) "numeric")
        let (set_numeric : 'tags this -> bool or_undefined -> unit) =
          fun (x2349 : 'tags this) ->
            fun (x2350 : bool or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2349) "numeric"
                (or_undefined_to_js Ojs.bool_to_js x2350)
        let (get_caseFirst : 'tags this -> string or_undefined) =
          fun (x2353 : 'tags this) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2353) "caseFirst")
        let (set_caseFirst : 'tags this -> string or_undefined -> unit) =
          fun (x2356 : 'tags this) ->
            fun (x2357 : string or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2356) "caseFirst"
                (or_undefined_to_js Ojs.string_to_js x2357)
        let (get_sensitivity : 'tags this -> string or_undefined) =
          fun (x2360 : 'tags this) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2360) "sensitivity")
        let (set_sensitivity : 'tags this -> string or_undefined -> unit) =
          fun (x2363 : 'tags this) ->
            fun (x2364 : string or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2363) "sensitivity"
                (or_undefined_to_js Ojs.string_to_js x2364)
        let (get_ignorePunctuation : 'tags this -> bool or_undefined) =
          fun (x2367 : 'tags this) ->
            or_undefined_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2367)
                 "ignorePunctuation")
        let (set_ignorePunctuation : 'tags this -> bool or_undefined -> unit)
          =
          fun (x2370 : 'tags this) ->
            fun (x2371 : bool or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2370)
                "ignorePunctuation" (or_undefined_to_js Ojs.bool_to_js x2371)
        let cast_from = Obj.magic
      end
    module Collator =
      struct
        type t = [ `Intl_Collator ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2375 : Ojs.t) -> t_of_js x2375
        and t_0_to_js : t_0 -> Ojs.t = fun (x2374 : t) -> t_to_js x2374
        type tags = [ `Intl_Collator ]
        type tags_0 = tags
        type 'tags this = 'tags intf constraint 'tags = [> `Intl_Collator ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2378 : Ojs.t) -> intf_of_js __tags_of_js x2378
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2376 : __tags intf) -> intf_to_js __tags_to_js x2376
        let (compare : 'tags this -> x:string -> y:string -> float) =
          fun (x2382 : 'tags this) ->
            fun ~x:(x2380 : string) ->
              fun ~y:(x2381 : string) ->
                Ojs.float_of_js
                  (Ojs.call (this_to_js Obj.magic x2382) "compare"
                     [|(Ojs.string_to_js x2380);(Ojs.string_to_js x2381)|])
        let (resolvedOptions : 'tags this -> ResolvedCollatorOptions.t) =
          fun (x2384 : 'tags this) ->
            ResolvedCollatorOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2384) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:string list or_string ->
            ?options:CollatorOptions.t -> unit -> t)
          =
          fun ?locales:(x2386 : string list or_string option) ->
            fun ?options:(x2387 : CollatorOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "Collator")
                     (let x2388 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2386 with
                       | Some x2390 ->
                           ignore
                             (Ojs.call x2388 "push"
                                [|(or_string_to_js
                                     (fun (x2391 : string list) ->
                                        Ojs.list_to_js Ojs.string_to_js x2391)
                                     x2390)|])
                       | None -> ());
                      (match x2387 with
                       | Some x2389 ->
                           ignore
                             (Ojs.call x2388 "push"
                                [|(CollatorOptions.t_to_js x2389)|])
                       | None -> ());
                      x2388))
        let (invoke :
          ?locales:string list or_string ->
            ?options:CollatorOptions.t -> unit -> t)
          =
          fun ?locales:(x2393 : string list or_string option) ->
            fun ?options:(x2394 : CollatorOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "Collator")
                     "apply"
                     [|Ojs.null;((let x2395 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x2393 with
                                   | Some x2397 ->
                                       ignore
                                         (Ojs.call x2395 "push"
                                            [|(or_string_to_js
                                                 (fun (x2398 : string list)
                                                    ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x2398)
                                                 x2397)|])
                                   | None -> ());
                                  (match x2394 with
                                   | Some x2396 ->
                                       ignore
                                         (Ojs.call x2395 "push"
                                            [|(CollatorOptions.t_to_js x2396)|])
                                   | None -> ());
                                  x2395))|])
        let (supportedLocalesOf :
          locales:string list or_string ->
            ?options:CollatorOptions.t -> unit -> string list)
          =
          fun ~locales:(x2400 : string list or_string) ->
            fun ?options:(x2401 : CollatorOptions.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x2406 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "Collator" in
                   Ojs.call (Ojs.get_prop_ascii x2406 "supportedLocalesOf")
                     "apply"
                     [|x2406;((let x2402 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2402 "push"
                                    [|(or_string_to_js
                                         (fun (x2404 : string list) ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x2404) x2400)|]);
                               (match x2401 with
                                | Some x2403 ->
                                    ignore
                                      (Ojs.call x2402 "push"
                                         [|(CollatorOptions.t_to_js x2403)|])
                                | None -> ());
                               x2402))|])
      end
    module AnonymousInterface8 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x2409 : Ojs.t) -> x2409
        and t_to_js : t -> Ojs.t = fun (x2408 : Ojs.t) -> x2408
        let (create :
          t ->
            ?locales:string list or_string ->
              ?options:CollatorOptions.t -> unit -> Collator.t)
          =
          fun (x2417 : t) ->
            fun ?locales:(x2410 : string list or_string option) ->
              fun ?options:(x2411 : CollatorOptions.t option) ->
                fun () ->
                  Collator.t_of_js
                    (Ojs.new_obj_arr (t_to_js x2417)
                       (let x2412 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        (match x2410 with
                         | Some x2414 ->
                             ignore
                               (Ojs.call x2412 "push"
                                  [|(or_string_to_js
                                       (fun (x2415 : string list) ->
                                          Ojs.list_to_js Ojs.string_to_js
                                            x2415) x2414)|])
                         | None -> ());
                        (match x2411 with
                         | Some x2413 ->
                             ignore
                               (Ojs.call x2412 "push"
                                  [|(CollatorOptions.t_to_js x2413)|])
                         | None -> ());
                        x2412))
        let (apply :
          t ->
            ?locales:string list or_string ->
              ?options:CollatorOptions.t -> unit -> Collator.t)
          =
          fun (x2425 : t) ->
            fun ?locales:(x2418 : string list or_string option) ->
              fun ?options:(x2419 : CollatorOptions.t option) ->
                fun () ->
                  Collator.t_of_js
                    (Ojs.call (t_to_js x2425) "apply"
                       [|Ojs.null;((let x2420 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    (match x2418 with
                                     | Some x2422 ->
                                         ignore
                                           (Ojs.call x2420 "push"
                                              [|(or_string_to_js
                                                   (fun (x2423 : string list)
                                                      ->
                                                      Ojs.list_to_js
                                                        Ojs.string_to_js
                                                        x2423) x2422)|])
                                     | None -> ());
                                    (match x2419 with
                                     | Some x2421 ->
                                         ignore
                                           (Ojs.call x2420 "push"
                                              [|(CollatorOptions.t_to_js
                                                   x2421)|])
                                     | None -> ());
                                    x2420))|])
        let (supportedLocalesOf :
          t ->
            locales:string list or_string ->
              ?options:CollatorOptions.t -> unit -> string list)
          =
          fun (x2432 : t) ->
            fun ~locales:(x2426 : string list or_string) ->
              fun ?options:(x2427 : CollatorOptions.t option) ->
                fun () ->
                  Ojs.list_of_js Ojs.string_of_js
                    (let x2433 = t_to_js x2432 in
                     Ojs.call (Ojs.get_prop_ascii x2433 "supportedLocalesOf")
                       "apply"
                       [|x2433;((let x2428 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2428 "push"
                                      [|(or_string_to_js
                                           (fun (x2430 : string list) ->
                                              Ojs.list_to_js Ojs.string_to_js
                                                x2430) x2426)|]);
                                 (match x2427 with
                                  | Some x2429 ->
                                      ignore
                                        (Ojs.call x2428 "push"
                                           [|(CollatorOptions.t_to_js x2429)|])
                                  | None -> ());
                                 x2428))|])
      end
    module RelativeTimeFormatStyle =
      struct
        type t = [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2436 : Ojs.t) ->
            let x2437 = x2436 in
            match Ojs.string_of_js x2437 with
            | "long" -> `L_s55_long
            | "narrow" -> `L_s67_narrow
            | "short" -> `L_s88_short
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2435 : [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ]) ->
            match x2435 with
            | `L_s55_long -> Ojs.string_to_js "long"
            | `L_s67_narrow -> Ojs.string_to_js "narrow"
            | `L_s88_short -> Ojs.string_to_js "short"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2439 : Ojs.t) -> t_of_js x2439
        and t_0_to_js : t_0 -> Ojs.t = fun (x2438 : t) -> t_to_js x2438
      end
    module RelativeTimeFormatLocaleMatcher =
      struct
        type t = [ `L_s24_best_fit  | `L_s56_lookup ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2441 : Ojs.t) ->
            let x2442 = x2441 in
            match Ojs.string_of_js x2442 with
            | "best fit" -> `L_s24_best_fit
            | "lookup" -> `L_s56_lookup
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2440 : [ `L_s24_best_fit  | `L_s56_lookup ]) ->
            match x2440 with
            | `L_s24_best_fit -> Ojs.string_to_js "best fit"
            | `L_s56_lookup -> Ojs.string_to_js "lookup"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2444 : Ojs.t) -> t_of_js x2444
        and t_0_to_js : t_0 -> Ojs.t = fun (x2443 : t) -> t_to_js x2443
      end
    module DisplayNamesOptions =
      struct
        type t = [ `Intl_DisplayNamesOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2446 : Ojs.t) -> t_of_js x2446
        and t_0_to_js : t_0 -> Ojs.t = fun (x2445 : t) -> t_to_js x2445
        type tags = [ `Intl_DisplayNamesOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DisplayNamesOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2449 : Ojs.t) -> intf_of_js __tags_of_js x2449
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2447 : __tags intf) -> intf_to_js __tags_to_js x2447
        let (get_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t) =
          fun (x2451 : 'tags this) ->
            RelativeTimeFormatLocaleMatcher.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2451)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit) =
          fun (x2453 : 'tags this) ->
            fun (x2454 : RelativeTimeFormatLocaleMatcher.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2453) "localeMatcher"
                (RelativeTimeFormatLocaleMatcher.t_to_js x2454)
        let (get_style : 'tags this -> RelativeTimeFormatStyle.t) =
          fun (x2456 : 'tags this) ->
            RelativeTimeFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2456) "style")
        let (set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit) =
          fun (x2458 : 'tags this) ->
            fun (x2459 : RelativeTimeFormatStyle.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2458) "style"
                (RelativeTimeFormatStyle.t_to_js x2459)
        let (get_type :
          'tags this ->
            [ `L_s28_currency  | `L_s53_language  | `L_s82_region 
            | `L_s85_script ])
          =
          fun (x2461 : 'tags this) ->
            let x2463 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2461) "type" in
            match Ojs.string_of_js x2463 with
            | "currency" -> `L_s28_currency
            | "language" -> `L_s53_language
            | "region" -> `L_s82_region
            | "script" -> `L_s85_script
            | _ -> assert false
        let (set_type :
          'tags this ->
            [ `L_s28_currency  | `L_s53_language  | `L_s82_region 
            | `L_s85_script ] -> unit)
          =
          fun (x2464 : 'tags this) ->
            fun
              (x2465 :
                [ `L_s28_currency  | `L_s53_language  | `L_s82_region 
                | `L_s85_script ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2464) "type"
                (match x2465 with
                 | `L_s28_currency -> Ojs.string_to_js "currency"
                 | `L_s53_language -> Ojs.string_to_js "language"
                 | `L_s82_region -> Ojs.string_to_js "region"
                 | `L_s85_script -> Ojs.string_to_js "script")
        let (get_fallback : 'tags this -> [ `L_s26_code  | `L_s69_none ]) =
          fun (x2467 : 'tags this) ->
            let x2469 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2467) "fallback" in
            match Ojs.string_of_js x2469 with
            | "code" -> `L_s26_code
            | "none" -> `L_s69_none
            | _ -> assert false
        let (set_fallback :
          'tags this -> [ `L_s26_code  | `L_s69_none ] -> unit) =
          fun (x2470 : 'tags this) ->
            fun (x2471 : [ `L_s26_code  | `L_s69_none ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2470) "fallback"
                (match x2471 with
                 | `L_s26_code -> Ojs.string_to_js "code"
                 | `L_s69_none -> Ojs.string_to_js "none")
        let cast_from = Obj.magic
      end
    module BCP47LanguageTag =
      struct
        type t = string
        let rec t_of_js : Ojs.t -> t =
          fun (x2474 : Ojs.t) -> Ojs.string_of_js x2474
        and t_to_js : t -> Ojs.t =
          fun (x2473 : string) -> Ojs.string_to_js x2473
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2476 : Ojs.t) -> t_of_js x2476
        and t_0_to_js : t_0 -> Ojs.t = fun (x2475 : t) -> t_to_js x2475
      end
    module DisplayNames =
      struct
        module AnonymousInterface2 =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x2478 : Ojs.t) -> x2478
            and t_to_js : t -> Ojs.t = fun (x2477 : Ojs.t) -> x2477
            let (get_localeMatcher : t -> RelativeTimeFormatLocaleMatcher.t)
              =
              fun (x2479 : t) ->
                RelativeTimeFormatLocaleMatcher.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x2479) "localeMatcher")
            let (set_localeMatcher :
              t -> RelativeTimeFormatLocaleMatcher.t -> unit) =
              fun (x2480 : t) ->
                fun (x2481 : RelativeTimeFormatLocaleMatcher.t) ->
                  Ojs.set_prop_ascii (t_to_js x2480) "localeMatcher"
                    (RelativeTimeFormatLocaleMatcher.t_to_js x2481)
          end
        type t = [ `Intl_DisplayNames ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2483 : Ojs.t) -> t_of_js x2483
        and t_0_to_js : t_0 -> Ojs.t = fun (x2482 : t) -> t_to_js x2482
        type tags = [ `Intl_DisplayNames ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DisplayNames ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2486 : Ojs.t) -> intf_of_js __tags_of_js x2486
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2484 : __tags intf) -> intf_to_js __tags_to_js x2484
        let (of_ : 'tags this -> code:string -> string) =
          fun (x2489 : 'tags this) ->
            fun ~code:(x2488 : string) ->
              Ojs.string_of_js
                (Ojs.call (this_to_js Obj.magic x2489) "of"
                   [|(Ojs.string_to_js x2488)|])
        let (resolvedOptions : 'tags this -> DisplayNamesOptions.t) =
          fun (x2491 : 'tags this) ->
            DisplayNamesOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2491) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (prototype : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl")
                    "DisplayNames") "prototype")
        let (create :
          ?locales:(BCP47LanguageTag.t, BCP47LanguageTag.t) or_array ->
            ?options:DisplayNamesOptions.t Partial.t -> unit -> t)
          =
          fun
            ?locales:(x2493 :
                       (BCP47LanguageTag.t, BCP47LanguageTag.t) or_array
                         option)
            ->
            fun ?options:(x2494 : DisplayNamesOptions.t Partial.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "DisplayNames")
                     (let x2495 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2493 with
                       | Some x2498 ->
                           ignore
                             (Ojs.call x2495 "push"
                                [|(or_array_to_js BCP47LanguageTag.t_to_js
                                     BCP47LanguageTag.t_to_js x2498)|])
                       | None -> ());
                      (match x2494 with
                       | Some x2496 ->
                           ignore
                             (Ojs.call x2495 "push"
                                [|(Partial.t_to_js
                                     DisplayNamesOptions.t_to_js x2496)|])
                       | None -> ());
                      x2495))
        let (supportedLocalesOf :
          locales:(BCP47LanguageTag.t, BCP47LanguageTag.t) or_array ->
            ?options:AnonymousInterface2.t -> unit -> BCP47LanguageTag.t list)
          =
          fun
            ~locales:(x2501 :
                       (BCP47LanguageTag.t, BCP47LanguageTag.t) or_array)
            ->
            fun ?options:(x2502 : AnonymousInterface2.t option) ->
              fun () ->
                Ojs.list_of_js BCP47LanguageTag.t_of_js
                  (let x2507 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "DisplayNames" in
                   Ojs.call (Ojs.get_prop_ascii x2507 "supportedLocalesOf")
                     "apply"
                     [|x2507;((let x2503 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2503 "push"
                                    [|(or_array_to_js
                                         BCP47LanguageTag.t_to_js
                                         BCP47LanguageTag.t_to_js x2501)|]);
                               (match x2502 with
                                | Some x2504 ->
                                    ignore
                                      (Ojs.call x2503 "push"
                                         [|(AnonymousInterface2.t_to_js x2504)|])
                                | None -> ());
                               x2503))|])
      end
    module AnonymousInterface2 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x2510 : Ojs.t) -> x2510
        and t_to_js : t -> Ojs.t = fun (x2509 : Ojs.t) -> x2509
        let (get_localeMatcher : t -> RelativeTimeFormatLocaleMatcher.t) =
          fun (x2511 : t) ->
            RelativeTimeFormatLocaleMatcher.t_of_js
              (Ojs.get_prop_ascii (t_to_js x2511) "localeMatcher")
        let (set_localeMatcher :
          t -> RelativeTimeFormatLocaleMatcher.t -> unit) =
          fun (x2512 : t) ->
            fun (x2513 : RelativeTimeFormatLocaleMatcher.t) ->
              Ojs.set_prop_ascii (t_to_js x2512) "localeMatcher"
                (RelativeTimeFormatLocaleMatcher.t_to_js x2513)
      end
    module AnonymousInterface4 =
      struct
        module AnonymousInterface2 =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x2515 : Ojs.t) -> x2515
            and t_to_js : t -> Ojs.t = fun (x2514 : Ojs.t) -> x2514
            let (get_localeMatcher : t -> RelativeTimeFormatLocaleMatcher.t)
              =
              fun (x2516 : t) ->
                RelativeTimeFormatLocaleMatcher.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x2516) "localeMatcher")
            let (set_localeMatcher :
              t -> RelativeTimeFormatLocaleMatcher.t -> unit) =
              fun (x2517 : t) ->
                fun (x2518 : RelativeTimeFormatLocaleMatcher.t) ->
                  Ojs.set_prop_ascii (t_to_js x2517) "localeMatcher"
                    (RelativeTimeFormatLocaleMatcher.t_to_js x2518)
          end
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x2520 : Ojs.t) -> x2520
        and t_to_js : t -> Ojs.t = fun (x2519 : Ojs.t) -> x2519
        let (get_prototype : t -> DisplayNames.t) =
          fun (x2521 : t) ->
            DisplayNames.t_of_js
              (Ojs.get_prop_ascii (t_to_js x2521) "prototype")
        let (set_prototype : t -> DisplayNames.t -> unit) =
          fun (x2522 : t) ->
            fun (x2523 : DisplayNames.t) ->
              Ojs.set_prop_ascii (t_to_js x2522) "prototype"
                (DisplayNames.t_to_js x2523)
        let (create :
          t ->
            ?locales:(BCP47LanguageTag.t, BCP47LanguageTag.t) or_array ->
              ?options:DisplayNamesOptions.t Partial.t ->
                unit -> DisplayNames.t)
          =
          fun (x2532 : t) ->
            fun
              ?locales:(x2524 :
                         (BCP47LanguageTag.t, BCP47LanguageTag.t) or_array
                           option)
              ->
              fun ?options:(x2525 : DisplayNamesOptions.t Partial.t option)
                ->
                fun () ->
                  DisplayNames.t_of_js
                    (Ojs.new_obj_arr (t_to_js x2532)
                       (let x2526 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        (match x2524 with
                         | Some x2529 ->
                             ignore
                               (Ojs.call x2526 "push"
                                  [|(or_array_to_js BCP47LanguageTag.t_to_js
                                       BCP47LanguageTag.t_to_js x2529)|])
                         | None -> ());
                        (match x2525 with
                         | Some x2527 ->
                             ignore
                               (Ojs.call x2526 "push"
                                  [|(Partial.t_to_js
                                       DisplayNamesOptions.t_to_js x2527)|])
                         | None -> ());
                        x2526))
        let (supportedLocalesOf :
          t ->
            locales:(BCP47LanguageTag.t, BCP47LanguageTag.t) or_array ->
              ?options:AnonymousInterface2.t ->
                unit -> BCP47LanguageTag.t list)
          =
          fun (x2539 : t) ->
            fun
              ~locales:(x2533 :
                         (BCP47LanguageTag.t, BCP47LanguageTag.t) or_array)
              ->
              fun ?options:(x2534 : AnonymousInterface2.t option) ->
                fun () ->
                  Ojs.list_of_js BCP47LanguageTag.t_of_js
                    (let x2540 = t_to_js x2539 in
                     Ojs.call (Ojs.get_prop_ascii x2540 "supportedLocalesOf")
                       "apply"
                       [|x2540;((let x2535 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2535 "push"
                                      [|(or_array_to_js
                                           BCP47LanguageTag.t_to_js
                                           BCP47LanguageTag.t_to_js x2533)|]);
                                 (match x2534 with
                                  | Some x2536 ->
                                      ignore
                                        (Ojs.call x2535 "push"
                                           [|(AnonymousInterface2.t_to_js
                                                x2536)|])
                                  | None -> ());
                                 x2535))|])
      end
    module UnicodeBCP47LocaleIdentifier =
      struct
        type t = string
        let rec t_of_js : Ojs.t -> t =
          fun (x2543 : Ojs.t) -> Ojs.string_of_js x2543
        and t_to_js : t -> Ojs.t =
          fun (x2542 : string) -> Ojs.string_to_js x2542
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2545 : Ojs.t) -> t_of_js x2545
        and t_0_to_js : t_0 -> Ojs.t = fun (x2544 : t) -> t_to_js x2544
      end
    module RelativeTimeFormatNumeric =
      struct
        type t = [ `L_s21_always  | `L_s22_auto ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2547 : Ojs.t) ->
            let x2548 = x2547 in
            match Ojs.string_of_js x2548 with
            | "always" -> `L_s21_always
            | "auto" -> `L_s22_auto
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2546 : [ `L_s21_always  | `L_s22_auto ]) ->
            match x2546 with
            | `L_s21_always -> Ojs.string_to_js "always"
            | `L_s22_auto -> Ojs.string_to_js "auto"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2550 : Ojs.t) -> t_of_js x2550
        and t_0_to_js : t_0 -> Ojs.t = fun (x2549 : t) -> t_to_js x2549
      end
    module ResolvedRelativeTimeFormatOptions =
      struct
        type t = [ `Intl_ResolvedRelativeTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2552 : Ojs.t) -> t_of_js x2552
        and t_0_to_js : t_0 -> Ojs.t = fun (x2551 : t) -> t_to_js x2551
        type tags = [ `Intl_ResolvedRelativeTimeFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `Intl_ResolvedRelativeTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2555 : Ojs.t) -> intf_of_js __tags_of_js x2555
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2553 : __tags intf) -> intf_to_js __tags_to_js x2553
        let (get_locale : 'tags this -> UnicodeBCP47LocaleIdentifier.t) =
          fun (x2557 : 'tags this) ->
            UnicodeBCP47LocaleIdentifier.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2557) "locale")
        let (set_locale :
          'tags this -> UnicodeBCP47LocaleIdentifier.t -> unit) =
          fun (x2559 : 'tags this) ->
            fun (x2560 : UnicodeBCP47LocaleIdentifier.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2559) "locale"
                (UnicodeBCP47LocaleIdentifier.t_to_js x2560)
        let (get_style : 'tags this -> RelativeTimeFormatStyle.t) =
          fun (x2562 : 'tags this) ->
            RelativeTimeFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2562) "style")
        let (set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit) =
          fun (x2564 : 'tags this) ->
            fun (x2565 : RelativeTimeFormatStyle.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2564) "style"
                (RelativeTimeFormatStyle.t_to_js x2565)
        let (get_numeric : 'tags this -> RelativeTimeFormatNumeric.t) =
          fun (x2567 : 'tags this) ->
            RelativeTimeFormatNumeric.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2567) "numeric")
        let (set_numeric : 'tags this -> RelativeTimeFormatNumeric.t -> unit)
          =
          fun (x2569 : 'tags this) ->
            fun (x2570 : RelativeTimeFormatNumeric.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2569) "numeric"
                (RelativeTimeFormatNumeric.t_to_js x2570)
        let (get_numberingSystem : 'tags this -> string) =
          fun (x2572 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2572)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x2574 : 'tags this) ->
            fun (x2575 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2574)
                "numberingSystem" (Ojs.string_to_js x2575)
        let cast_from = Obj.magic
      end
    module RelativeTimeFormatUnit =
      struct
        type t =
          [ `L_s100_weeks  | `L_s101_year  | `L_s102_years  | `L_s29_day 
          | `L_s31_days  | `L_s49_hour  | `L_s50_hours  | `L_s61_minute 
          | `L_s62_minutes  | `L_s63_month  | `L_s64_months 
          | `L_s80_quarter  | `L_s81_quarters  | `L_s86_second 
          | `L_s87_seconds  | `L_s98_week ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2578 : Ojs.t) ->
            let x2579 = x2578 in
            match Ojs.string_of_js x2579 with
            | "weeks" -> `L_s100_weeks
            | "year" -> `L_s101_year
            | "years" -> `L_s102_years
            | "day" -> `L_s29_day
            | "days" -> `L_s31_days
            | "hour" -> `L_s49_hour
            | "hours" -> `L_s50_hours
            | "minute" -> `L_s61_minute
            | "minutes" -> `L_s62_minutes
            | "month" -> `L_s63_month
            | "months" -> `L_s64_months
            | "quarter" -> `L_s80_quarter
            | "quarters" -> `L_s81_quarters
            | "second" -> `L_s86_second
            | "seconds" -> `L_s87_seconds
            | "week" -> `L_s98_week
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2577 :
              [ `L_s100_weeks  | `L_s101_year  | `L_s102_years  | `L_s29_day 
              | `L_s31_days  | `L_s49_hour  | `L_s50_hours  | `L_s61_minute 
              | `L_s62_minutes  | `L_s63_month  | `L_s64_months 
              | `L_s80_quarter  | `L_s81_quarters  | `L_s86_second 
              | `L_s87_seconds  | `L_s98_week ])
            ->
            match x2577 with
            | `L_s100_weeks -> Ojs.string_to_js "weeks"
            | `L_s101_year -> Ojs.string_to_js "year"
            | `L_s102_years -> Ojs.string_to_js "years"
            | `L_s29_day -> Ojs.string_to_js "day"
            | `L_s31_days -> Ojs.string_to_js "days"
            | `L_s49_hour -> Ojs.string_to_js "hour"
            | `L_s50_hours -> Ojs.string_to_js "hours"
            | `L_s61_minute -> Ojs.string_to_js "minute"
            | `L_s62_minutes -> Ojs.string_to_js "minutes"
            | `L_s63_month -> Ojs.string_to_js "month"
            | `L_s64_months -> Ojs.string_to_js "months"
            | `L_s80_quarter -> Ojs.string_to_js "quarter"
            | `L_s81_quarters -> Ojs.string_to_js "quarters"
            | `L_s86_second -> Ojs.string_to_js "second"
            | `L_s87_seconds -> Ojs.string_to_js "seconds"
            | `L_s98_week -> Ojs.string_to_js "week"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2581 : Ojs.t) -> t_of_js x2581
        and t_0_to_js : t_0 -> Ojs.t = fun (x2580 : t) -> t_to_js x2580
      end
    module RelativeTimeFormatPart =
      struct
        type t = [ `Intl_RelativeTimeFormatPart ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2583 : Ojs.t) -> t_of_js x2583
        and t_0_to_js : t_0 -> Ojs.t = fun (x2582 : t) -> t_to_js x2582
        type tags = [ `Intl_RelativeTimeFormatPart ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_RelativeTimeFormatPart ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2586 : Ojs.t) -> intf_of_js __tags_of_js x2586
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2584 : __tags intf) -> intf_to_js __tags_to_js x2584
        let (get_type : 'tags this -> string) =
          fun (x2588 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2588) "type")
        let (set_type : 'tags this -> string -> unit) =
          fun (x2590 : 'tags this) ->
            fun (x2591 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2590) "type"
                (Ojs.string_to_js x2591)
        let (get_value : 'tags this -> string) =
          fun (x2593 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2593) "value")
        let (set_value : 'tags this -> string -> unit) =
          fun (x2595 : 'tags this) ->
            fun (x2596 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2595) "value"
                (Ojs.string_to_js x2596)
        let (get_unit : 'tags this -> RelativeTimeFormatUnit.t) =
          fun (x2598 : 'tags this) ->
            RelativeTimeFormatUnit.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2598) "unit")
        let (set_unit : 'tags this -> RelativeTimeFormatUnit.t -> unit) =
          fun (x2600 : 'tags this) ->
            fun (x2601 : RelativeTimeFormatUnit.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2600) "unit"
                (RelativeTimeFormatUnit.t_to_js x2601)
        let cast_from = Obj.magic
      end
    module RelativeTimeFormatOptions =
      struct
        type t = [ `Intl_RelativeTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2604 : Ojs.t) -> t_of_js x2604
        and t_0_to_js : t_0 -> Ojs.t = fun (x2603 : t) -> t_to_js x2603
        type tags = [ `Intl_RelativeTimeFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_RelativeTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2607 : Ojs.t) -> intf_of_js __tags_of_js x2607
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2605 : __tags intf) -> intf_to_js __tags_to_js x2605
        let (get_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t) =
          fun (x2609 : 'tags this) ->
            RelativeTimeFormatLocaleMatcher.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2609)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit) =
          fun (x2611 : 'tags this) ->
            fun (x2612 : RelativeTimeFormatLocaleMatcher.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2611) "localeMatcher"
                (RelativeTimeFormatLocaleMatcher.t_to_js x2612)
        let (get_numeric : 'tags this -> RelativeTimeFormatNumeric.t) =
          fun (x2614 : 'tags this) ->
            RelativeTimeFormatNumeric.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2614) "numeric")
        let (set_numeric : 'tags this -> RelativeTimeFormatNumeric.t -> unit)
          =
          fun (x2616 : 'tags this) ->
            fun (x2617 : RelativeTimeFormatNumeric.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2616) "numeric"
                (RelativeTimeFormatNumeric.t_to_js x2617)
        let (get_style : 'tags this -> RelativeTimeFormatStyle.t) =
          fun (x2619 : 'tags this) ->
            RelativeTimeFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2619) "style")
        let (set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit) =
          fun (x2621 : 'tags this) ->
            fun (x2622 : RelativeTimeFormatStyle.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2621) "style"
                (RelativeTimeFormatStyle.t_to_js x2622)
        let cast_from = Obj.magic
      end
    module RelativeTimeFormat =
      struct
        type t = [ `Intl_RelativeTimeFormat ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2625 : Ojs.t) -> t_of_js x2625
        and t_0_to_js : t_0 -> Ojs.t = fun (x2624 : t) -> t_to_js x2624
        type tags = [ `Intl_RelativeTimeFormat ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_RelativeTimeFormat ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2628 : Ojs.t) -> intf_of_js __tags_of_js x2628
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2626 : __tags intf) -> intf_to_js __tags_to_js x2626
        let (format :
          'tags this ->
            value:float -> unit:RelativeTimeFormatUnit.t -> string)
          =
          fun (x2632 : 'tags this) ->
            fun ~value:(x2630 : float) ->
              fun ~unit:(x2631 : RelativeTimeFormatUnit.t) ->
                Ojs.string_of_js
                  (Ojs.call (this_to_js Obj.magic x2632) "format"
                     [|(Ojs.float_to_js x2630);(RelativeTimeFormatUnit.t_to_js
                                                  x2631)|])
        let (formatToParts :
          'tags this ->
            value:float ->
              unit:RelativeTimeFormatUnit.t -> RelativeTimeFormatPart.t list)
          =
          fun (x2636 : 'tags this) ->
            fun ~value:(x2634 : float) ->
              fun ~unit:(x2635 : RelativeTimeFormatUnit.t) ->
                Ojs.list_of_js RelativeTimeFormatPart.t_of_js
                  (Ojs.call (this_to_js Obj.magic x2636) "formatToParts"
                     [|(Ojs.float_to_js x2634);(RelativeTimeFormatUnit.t_to_js
                                                  x2635)|])
        let (resolvedOptions :
          'tags this -> ResolvedRelativeTimeFormatOptions.t) =
          fun (x2639 : 'tags this) ->
            ResolvedRelativeTimeFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2639) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:(UnicodeBCP47LocaleIdentifier.t,
            UnicodeBCP47LocaleIdentifier.t) or_array ->
            ?options:RelativeTimeFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x2641 :
                       (UnicodeBCP47LocaleIdentifier.t,
                         UnicodeBCP47LocaleIdentifier.t) or_array option)
            ->
            fun ?options:(x2642 : RelativeTimeFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl")
                        "RelativeTimeFormat")
                     (let x2643 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2641 with
                       | Some x2645 ->
                           ignore
                             (Ojs.call x2643 "push"
                                [|(or_array_to_js
                                     UnicodeBCP47LocaleIdentifier.t_to_js
                                     UnicodeBCP47LocaleIdentifier.t_to_js
                                     x2645)|])
                       | None -> ());
                      (match x2642 with
                       | Some x2644 ->
                           ignore
                             (Ojs.call x2643 "push"
                                [|(RelativeTimeFormatOptions.t_to_js x2644)|])
                       | None -> ());
                      x2643))
        let (supportedLocalesOf :
          ?locales:(UnicodeBCP47LocaleIdentifier.t,
            UnicodeBCP47LocaleIdentifier.t) or_array ->
            ?options:RelativeTimeFormatOptions.t ->
              unit -> UnicodeBCP47LocaleIdentifier.t list)
          =
          fun
            ?locales:(x2648 :
                       (UnicodeBCP47LocaleIdentifier.t,
                         UnicodeBCP47LocaleIdentifier.t) or_array option)
            ->
            fun ?options:(x2649 : RelativeTimeFormatOptions.t option) ->
              fun () ->
                Ojs.list_of_js UnicodeBCP47LocaleIdentifier.t_of_js
                  (let x2655 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl")
                       "RelativeTimeFormat" in
                   Ojs.call (Ojs.get_prop_ascii x2655 "supportedLocalesOf")
                     "apply"
                     [|x2655;((let x2650 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x2648 with
                                | Some x2652 ->
                                    ignore
                                      (Ojs.call x2650 "push"
                                         [|(or_array_to_js
                                              UnicodeBCP47LocaleIdentifier.t_to_js
                                              UnicodeBCP47LocaleIdentifier.t_to_js
                                              x2652)|])
                                | None -> ());
                               (match x2649 with
                                | Some x2651 ->
                                    ignore
                                      (Ojs.call x2650 "push"
                                         [|(RelativeTimeFormatOptions.t_to_js
                                              x2651)|])
                                | None -> ());
                               x2650))|])
      end
    module AnonymousInterface20 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x2658 : Ojs.t) -> x2658
        and t_to_js : t -> Ojs.t = fun (x2657 : Ojs.t) -> x2657
        let (create :
          t ->
            ?locales:(UnicodeBCP47LocaleIdentifier.t,
              UnicodeBCP47LocaleIdentifier.t) or_array ->
              ?options:RelativeTimeFormatOptions.t ->
                unit -> RelativeTimeFormat.t)
          =
          fun (x2666 : t) ->
            fun
              ?locales:(x2659 :
                         (UnicodeBCP47LocaleIdentifier.t,
                           UnicodeBCP47LocaleIdentifier.t) or_array option)
              ->
              fun ?options:(x2660 : RelativeTimeFormatOptions.t option) ->
                fun () ->
                  RelativeTimeFormat.t_of_js
                    (Ojs.new_obj_arr (t_to_js x2666)
                       (let x2661 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        (match x2659 with
                         | Some x2663 ->
                             ignore
                               (Ojs.call x2661 "push"
                                  [|(or_array_to_js
                                       UnicodeBCP47LocaleIdentifier.t_to_js
                                       UnicodeBCP47LocaleIdentifier.t_to_js
                                       x2663)|])
                         | None -> ());
                        (match x2660 with
                         | Some x2662 ->
                             ignore
                               (Ojs.call x2661 "push"
                                  [|(RelativeTimeFormatOptions.t_to_js x2662)|])
                         | None -> ());
                        x2661))
        let (supportedLocalesOf :
          t ->
            ?locales:(UnicodeBCP47LocaleIdentifier.t,
              UnicodeBCP47LocaleIdentifier.t) or_array ->
              ?options:RelativeTimeFormatOptions.t ->
                unit -> UnicodeBCP47LocaleIdentifier.t list)
          =
          fun (x2674 : t) ->
            fun
              ?locales:(x2667 :
                         (UnicodeBCP47LocaleIdentifier.t,
                           UnicodeBCP47LocaleIdentifier.t) or_array option)
              ->
              fun ?options:(x2668 : RelativeTimeFormatOptions.t option) ->
                fun () ->
                  Ojs.list_of_js UnicodeBCP47LocaleIdentifier.t_of_js
                    (let x2675 = t_to_js x2674 in
                     Ojs.call (Ojs.get_prop_ascii x2675 "supportedLocalesOf")
                       "apply"
                       [|x2675;((let x2669 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 (match x2667 with
                                  | Some x2671 ->
                                      ignore
                                        (Ojs.call x2669 "push"
                                           [|(or_array_to_js
                                                UnicodeBCP47LocaleIdentifier.t_to_js
                                                UnicodeBCP47LocaleIdentifier.t_to_js
                                                x2671)|])
                                  | None -> ());
                                 (match x2668 with
                                  | Some x2670 ->
                                      ignore
                                        (Ojs.call x2669 "push"
                                           [|(RelativeTimeFormatOptions.t_to_js
                                                x2670)|])
                                  | None -> ());
                                 x2669))|])
      end
    module LocaleHourCycleKey =
      struct
        type t = [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2678 : Ojs.t) ->
            let x2679 = x2678 in
            match Ojs.string_of_js x2679 with
            | "h11" -> `L_s45_h11
            | "h12" -> `L_s46_h12
            | "h23" -> `L_s47_h23
            | "h24" -> `L_s48_h24
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2677 :
              [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ])
            ->
            match x2677 with
            | `L_s45_h11 -> Ojs.string_to_js "h11"
            | `L_s46_h12 -> Ojs.string_to_js "h12"
            | `L_s47_h23 -> Ojs.string_to_js "h23"
            | `L_s48_h24 -> Ojs.string_to_js "h24"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2681 : Ojs.t) -> t_of_js x2681
        and t_0_to_js : t_0 -> Ojs.t = fun (x2680 : t) -> t_to_js x2680
      end
    module LocaleCollationCaseFirst =
      struct
        type t = [ `L_s39_false  | `L_s57_lower  | `L_s97_upper ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2683 : Ojs.t) ->
            let x2684 = x2683 in
            match Ojs.string_of_js x2684 with
            | "false" -> `L_s39_false
            | "lower" -> `L_s57_lower
            | "upper" -> `L_s97_upper
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2682 : [ `L_s39_false  | `L_s57_lower  | `L_s97_upper ]) ->
            match x2682 with
            | `L_s39_false -> Ojs.string_to_js "false"
            | `L_s57_lower -> Ojs.string_to_js "lower"
            | `L_s97_upper -> Ojs.string_to_js "upper"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2686 : Ojs.t) -> t_of_js x2686
        and t_0_to_js : t_0 -> Ojs.t = fun (x2685 : t) -> t_to_js x2685
      end
    module LocaleOptions =
      struct
        type t = [ `Intl_LocaleOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2688 : Ojs.t) -> t_of_js x2688
        and t_0_to_js : t_0 -> Ojs.t = fun (x2687 : t) -> t_to_js x2687
        type tags = [ `Intl_LocaleOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_LocaleOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2691 : Ojs.t) -> intf_of_js __tags_of_js x2691
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2689 : __tags intf) -> intf_to_js __tags_to_js x2689
        let (get_baseName : 'tags this -> string) =
          fun (x2693 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2693) "baseName")
        let (set_baseName : 'tags this -> string -> unit) =
          fun (x2695 : 'tags this) ->
            fun (x2696 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2695) "baseName"
                (Ojs.string_to_js x2696)
        let (get_calendar : 'tags this -> string) =
          fun (x2698 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2698) "calendar")
        let (set_calendar : 'tags this -> string -> unit) =
          fun (x2700 : 'tags this) ->
            fun (x2701 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2700) "calendar"
                (Ojs.string_to_js x2701)
        let (get_caseFirst : 'tags this -> LocaleCollationCaseFirst.t) =
          fun (x2703 : 'tags this) ->
            LocaleCollationCaseFirst.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2703) "caseFirst")
        let (set_caseFirst :
          'tags this -> LocaleCollationCaseFirst.t -> unit) =
          fun (x2705 : 'tags this) ->
            fun (x2706 : LocaleCollationCaseFirst.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2705) "caseFirst"
                (LocaleCollationCaseFirst.t_to_js x2706)
        let (get_collation : 'tags this -> string) =
          fun (x2708 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2708) "collation")
        let (set_collation : 'tags this -> string -> unit) =
          fun (x2710 : 'tags this) ->
            fun (x2711 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2710) "collation"
                (Ojs.string_to_js x2711)
        let (get_hourCycle : 'tags this -> LocaleHourCycleKey.t) =
          fun (x2713 : 'tags this) ->
            LocaleHourCycleKey.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2713) "hourCycle")
        let (set_hourCycle : 'tags this -> LocaleHourCycleKey.t -> unit) =
          fun (x2715 : 'tags this) ->
            fun (x2716 : LocaleHourCycleKey.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2715) "hourCycle"
                (LocaleHourCycleKey.t_to_js x2716)
        let (get_language : 'tags this -> string) =
          fun (x2718 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2718) "language")
        let (set_language : 'tags this -> string -> unit) =
          fun (x2720 : 'tags this) ->
            fun (x2721 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2720) "language"
                (Ojs.string_to_js x2721)
        let (get_numberingSystem : 'tags this -> string) =
          fun (x2723 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2723)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x2725 : 'tags this) ->
            fun (x2726 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2725)
                "numberingSystem" (Ojs.string_to_js x2726)
        let (get_numeric : 'tags this -> bool) =
          fun (x2728 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2728) "numeric")
        let (set_numeric : 'tags this -> bool -> unit) =
          fun (x2730 : 'tags this) ->
            fun (x2731 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2730) "numeric"
                (Ojs.bool_to_js x2731)
        let (get_region : 'tags this -> string) =
          fun (x2733 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2733) "region")
        let (set_region : 'tags this -> string -> unit) =
          fun (x2735 : 'tags this) ->
            fun (x2736 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2735) "region"
                (Ojs.string_to_js x2736)
        let (get_script : 'tags this -> string) =
          fun (x2738 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2738) "script")
        let (set_script : 'tags this -> string -> unit) =
          fun (x2740 : 'tags this) ->
            fun (x2741 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2740) "script"
                (Ojs.string_to_js x2741)
        let cast_from = Obj.magic
      end
    module Locale =
      struct
        type t = [ `Intl_Locale  | `Intl_LocaleOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2744 : Ojs.t) -> t_of_js x2744
        and t_0_to_js : t_0 -> Ojs.t = fun (x2743 : t) -> t_to_js x2743
        type tags = [ `Intl_Locale  | `Intl_LocaleOptions ]
        type tags_0 = tags
        type 'tags this = 'tags intf constraint 'tags = [> `Intl_Locale ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2747 : Ojs.t) -> intf_of_js __tags_of_js x2747
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2745 : __tags intf) -> intf_to_js __tags_to_js x2745
        let (maximize : 'tags this -> t) =
          fun (x2749 : 'tags this) ->
            t_of_js (Ojs.call (this_to_js Obj.magic x2749) "maximize" [||])
        let (minimize : 'tags this -> t) =
          fun (x2751 : 'tags this) ->
            t_of_js (Ojs.call (this_to_js Obj.magic x2751) "minimize" [||])
        let (toString : 'tags this -> BCP47LanguageTag.t) =
          fun (x2753 : 'tags this) ->
            BCP47LanguageTag.t_of_js
              (Ojs.call (this_to_js Obj.magic x2753) "toString" [||])
        let cast_from = Obj.magic
        let (create :
          ?tag:BCP47LanguageTag.t -> ?options:LocaleOptions.t -> unit -> t) =
          fun ?tag:(x2755 : BCP47LanguageTag.t option) ->
            fun ?options:(x2756 : LocaleOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "Locale")
                     (let x2757 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2755 with
                       | Some x2759 ->
                           ignore
                             (Ojs.call x2757 "push"
                                [|(BCP47LanguageTag.t_to_js x2759)|])
                       | None -> ());
                      (match x2756 with
                       | Some x2758 ->
                           ignore
                             (Ojs.call x2757 "push"
                                [|(LocaleOptions.t_to_js x2758)|])
                       | None -> ());
                      x2757))
      end
    module AnonymousInterface12 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x2761 : Ojs.t) -> x2761
        and t_to_js : t -> Ojs.t = fun (x2760 : Ojs.t) -> x2760
        let (create :
          t ->
            ?tag:BCP47LanguageTag.t ->
              ?options:LocaleOptions.t -> unit -> Locale.t)
          =
          fun (x2767 : t) ->
            fun ?tag:(x2762 : BCP47LanguageTag.t option) ->
              fun ?options:(x2763 : LocaleOptions.t option) ->
                fun () ->
                  Locale.t_of_js
                    (Ojs.new_obj_arr (t_to_js x2767)
                       (let x2764 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        (match x2762 with
                         | Some x2766 ->
                             ignore
                               (Ojs.call x2764 "push"
                                  [|(BCP47LanguageTag.t_to_js x2766)|])
                         | None -> ());
                        (match x2763 with
                         | Some x2765 ->
                             ignore
                               (Ojs.call x2764 "push"
                                  [|(LocaleOptions.t_to_js x2765)|])
                         | None -> ());
                        x2764))
      end
    module PluralRuleType =
      struct
        type t = [ `L_s25_cardinal  | `L_s75_ordinal ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2769 : Ojs.t) ->
            let x2770 = x2769 in
            match Ojs.string_of_js x2770 with
            | "cardinal" -> `L_s25_cardinal
            | "ordinal" -> `L_s75_ordinal
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2768 : [ `L_s25_cardinal  | `L_s75_ordinal ]) ->
            match x2768 with
            | `L_s25_cardinal -> Ojs.string_to_js "cardinal"
            | `L_s75_ordinal -> Ojs.string_to_js "ordinal"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2772 : Ojs.t) -> t_of_js x2772
        and t_0_to_js : t_0 -> Ojs.t = fun (x2771 : t) -> t_to_js x2771
      end
    module LDMLPluralRule =
      struct
        type t =
          [ `L_s103_zero  | `L_s40_few  | `L_s58_many  | `L_s74_one 
          | `L_s76_other  | `L_s94_two ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2774 : Ojs.t) ->
            let x2775 = x2774 in
            match Ojs.string_of_js x2775 with
            | "zero" -> `L_s103_zero
            | "few" -> `L_s40_few
            | "many" -> `L_s58_many
            | "one" -> `L_s74_one
            | "other" -> `L_s76_other
            | "two" -> `L_s94_two
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2773 :
              [ `L_s103_zero  | `L_s40_few  | `L_s58_many  | `L_s74_one 
              | `L_s76_other  | `L_s94_two ])
            ->
            match x2773 with
            | `L_s103_zero -> Ojs.string_to_js "zero"
            | `L_s40_few -> Ojs.string_to_js "few"
            | `L_s58_many -> Ojs.string_to_js "many"
            | `L_s74_one -> Ojs.string_to_js "one"
            | `L_s76_other -> Ojs.string_to_js "other"
            | `L_s94_two -> Ojs.string_to_js "two"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2777 : Ojs.t) -> t_of_js x2777
        and t_0_to_js : t_0 -> Ojs.t = fun (x2776 : t) -> t_to_js x2776
      end
    module ResolvedPluralRulesOptions =
      struct
        type t = [ `Intl_ResolvedPluralRulesOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2779 : Ojs.t) -> t_of_js x2779
        and t_0_to_js : t_0 -> Ojs.t = fun (x2778 : t) -> t_to_js x2778
        type tags = [ `Intl_ResolvedPluralRulesOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_ResolvedPluralRulesOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2782 : Ojs.t) -> intf_of_js __tags_of_js x2782
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2780 : __tags intf) -> intf_to_js __tags_to_js x2780
        let (get_locale : 'tags this -> string) =
          fun (x2784 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2784) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x2786 : 'tags this) ->
            fun (x2787 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2786) "locale"
                (Ojs.string_to_js x2787)
        let (get_pluralCategories : 'tags this -> LDMLPluralRule.t list) =
          fun (x2789 : 'tags this) ->
            Ojs.list_of_js LDMLPluralRule.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2789)
                 "pluralCategories")
        let (set_pluralCategories :
          'tags this -> LDMLPluralRule.t list -> unit) =
          fun (x2792 : 'tags this) ->
            fun (x2793 : LDMLPluralRule.t list) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2792)
                "pluralCategories"
                (Ojs.list_to_js LDMLPluralRule.t_to_js x2793)
        let (get_type : 'tags this -> PluralRuleType.t) =
          fun (x2796 : 'tags this) ->
            PluralRuleType.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2796) "type")
        let (set_type : 'tags this -> PluralRuleType.t -> unit) =
          fun (x2798 : 'tags this) ->
            fun (x2799 : PluralRuleType.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2798) "type"
                (PluralRuleType.t_to_js x2799)
        let (get_minimumIntegerDigits : 'tags this -> float) =
          fun (x2801 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2801)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits : 'tags this -> float -> unit) =
          fun (x2803 : 'tags this) ->
            fun (x2804 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2803)
                "minimumIntegerDigits" (Ojs.float_to_js x2804)
        let (get_minimumFractionDigits : 'tags this -> float) =
          fun (x2806 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2806)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits : 'tags this -> float -> unit) =
          fun (x2808 : 'tags this) ->
            fun (x2809 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2808)
                "minimumFractionDigits" (Ojs.float_to_js x2809)
        let (get_maximumFractionDigits : 'tags this -> float) =
          fun (x2811 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2811)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits : 'tags this -> float -> unit) =
          fun (x2813 : 'tags this) ->
            fun (x2814 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2813)
                "maximumFractionDigits" (Ojs.float_to_js x2814)
        let (get_minimumSignificantDigits : 'tags this -> float) =
          fun (x2816 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2816)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2818 : 'tags this) ->
            fun (x2819 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2818)
                "minimumSignificantDigits" (Ojs.float_to_js x2819)
        let (get_maximumSignificantDigits : 'tags this -> float) =
          fun (x2821 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2821)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2823 : 'tags this) ->
            fun (x2824 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2823)
                "maximumSignificantDigits" (Ojs.float_to_js x2824)
        let cast_from = Obj.magic
      end
    module PluralRulesOptions =
      struct
        type t = [ `Intl_PluralRulesOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2827 : Ojs.t) -> t_of_js x2827
        and t_0_to_js : t_0 -> Ojs.t = fun (x2826 : t) -> t_to_js x2826
        type tags = [ `Intl_PluralRulesOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_PluralRulesOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2830 : Ojs.t) -> intf_of_js __tags_of_js x2830
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2828 : __tags intf) -> intf_to_js __tags_to_js x2828
        let (get_localeMatcher :
          'tags this -> [ `L_s24_best_fit  | `L_s56_lookup ] or_undefined) =
          fun (x2832 : 'tags this) ->
            or_undefined_of_js
              (fun (x2834 : Ojs.t) ->
                 let x2835 = x2834 in
                 match Ojs.string_of_js x2835 with
                 | "best fit" -> `L_s24_best_fit
                 | "lookup" -> `L_s56_lookup
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2832)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this ->
            [ `L_s24_best_fit  | `L_s56_lookup ] or_undefined -> unit)
          =
          fun (x2836 : 'tags this) ->
            fun (x2837 : [ `L_s24_best_fit  | `L_s56_lookup ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2836) "localeMatcher"
                (or_undefined_to_js
                   (fun (x2838 : [ `L_s24_best_fit  | `L_s56_lookup ]) ->
                      match x2838 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit"
                      | `L_s56_lookup -> Ojs.string_to_js "lookup") x2837)
        let (get_type : 'tags this -> PluralRuleType.t or_undefined) =
          fun (x2840 : 'tags this) ->
            or_undefined_of_js PluralRuleType.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2840) "type")
        let (set_type : 'tags this -> PluralRuleType.t or_undefined -> unit)
          =
          fun (x2843 : 'tags this) ->
            fun (x2844 : PluralRuleType.t or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2843) "type"
                (or_undefined_to_js PluralRuleType.t_to_js x2844)
        let (get_minimumIntegerDigits : 'tags this -> float or_undefined) =
          fun (x2847 : 'tags this) ->
            or_undefined_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2847)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits :
          'tags this -> float or_undefined -> unit) =
          fun (x2850 : 'tags this) ->
            fun (x2851 : float or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2850)
                "minimumIntegerDigits"
                (or_undefined_to_js Ojs.float_to_js x2851)
        let (get_minimumFractionDigits : 'tags this -> float or_undefined) =
          fun (x2854 : 'tags this) ->
            or_undefined_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2854)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits :
          'tags this -> float or_undefined -> unit) =
          fun (x2857 : 'tags this) ->
            fun (x2858 : float or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2857)
                "minimumFractionDigits"
                (or_undefined_to_js Ojs.float_to_js x2858)
        let (get_maximumFractionDigits : 'tags this -> float or_undefined) =
          fun (x2861 : 'tags this) ->
            or_undefined_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2861)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits :
          'tags this -> float or_undefined -> unit) =
          fun (x2864 : 'tags this) ->
            fun (x2865 : float or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2864)
                "maximumFractionDigits"
                (or_undefined_to_js Ojs.float_to_js x2865)
        let (get_minimumSignificantDigits : 'tags this -> float or_undefined)
          =
          fun (x2868 : 'tags this) ->
            or_undefined_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2868)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits :
          'tags this -> float or_undefined -> unit) =
          fun (x2871 : 'tags this) ->
            fun (x2872 : float or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2871)
                "minimumSignificantDigits"
                (or_undefined_to_js Ojs.float_to_js x2872)
        let (get_maximumSignificantDigits : 'tags this -> float or_undefined)
          =
          fun (x2875 : 'tags this) ->
            or_undefined_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2875)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits :
          'tags this -> float or_undefined -> unit) =
          fun (x2878 : 'tags this) ->
            fun (x2879 : float or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2878)
                "maximumSignificantDigits"
                (or_undefined_to_js Ojs.float_to_js x2879)
        let cast_from = Obj.magic
      end
    module PluralRules =
      struct
        module AnonymousInterface3 =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x2883 : Ojs.t) -> x2883
            and t_to_js : t -> Ojs.t = fun (x2882 : Ojs.t) -> x2882
            let (get_localeMatcher :
              t -> [ `L_s24_best_fit  | `L_s56_lookup ]) =
              fun (x2884 : t) ->
                let x2885 =
                  Ojs.get_prop_ascii (t_to_js x2884) "localeMatcher" in
                match Ojs.string_of_js x2885 with
                | "best fit" -> `L_s24_best_fit
                | "lookup" -> `L_s56_lookup
                | _ -> assert false
            let (set_localeMatcher :
              t -> [ `L_s24_best_fit  | `L_s56_lookup ] -> unit) =
              fun (x2886 : t) ->
                fun (x2887 : [ `L_s24_best_fit  | `L_s56_lookup ]) ->
                  Ojs.set_prop_ascii (t_to_js x2886) "localeMatcher"
                    (match x2887 with
                     | `L_s24_best_fit -> Ojs.string_to_js "best fit"
                     | `L_s56_lookup -> Ojs.string_to_js "lookup")
          end
        type t = [ `Intl_PluralRules ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2889 : Ojs.t) -> t_of_js x2889
        and t_0_to_js : t_0 -> Ojs.t = fun (x2888 : t) -> t_to_js x2888
        type tags = [ `Intl_PluralRules ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_PluralRules ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2892 : Ojs.t) -> intf_of_js __tags_of_js x2892
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2890 : __tags intf) -> intf_to_js __tags_to_js x2890
        let (resolvedOptions : 'tags this -> ResolvedPluralRulesOptions.t) =
          fun (x2894 : 'tags this) ->
            ResolvedPluralRulesOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2894) "resolvedOptions" [||])
        let (select : 'tags this -> n:float -> LDMLPluralRule.t) =
          fun (x2897 : 'tags this) ->
            fun ~n:(x2896 : float) ->
              LDMLPluralRule.t_of_js
                (Ojs.call (this_to_js Obj.magic x2897) "select"
                   [|(Ojs.float_to_js x2896)|])
        let cast_from = Obj.magic
        let (create :
          ?locales:string list or_string ->
            ?options:PluralRulesOptions.t -> unit -> t)
          =
          fun ?locales:(x2899 : string list or_string option) ->
            fun ?options:(x2900 : PluralRulesOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "PluralRules")
                     (let x2901 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2899 with
                       | Some x2903 ->
                           ignore
                             (Ojs.call x2901 "push"
                                [|(or_string_to_js
                                     (fun (x2904 : string list) ->
                                        Ojs.list_to_js Ojs.string_to_js x2904)
                                     x2903)|])
                       | None -> ());
                      (match x2900 with
                       | Some x2902 ->
                           ignore
                             (Ojs.call x2901 "push"
                                [|(PluralRulesOptions.t_to_js x2902)|])
                       | None -> ());
                      x2901))
        let (invoke :
          ?locales:string list or_string ->
            ?options:PluralRulesOptions.t -> unit -> t)
          =
          fun ?locales:(x2906 : string list or_string option) ->
            fun ?options:(x2907 : PluralRulesOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "PluralRules")
                     "apply"
                     [|Ojs.null;((let x2908 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x2906 with
                                   | Some x2910 ->
                                       ignore
                                         (Ojs.call x2908 "push"
                                            [|(or_string_to_js
                                                 (fun (x2911 : string list)
                                                    ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x2911)
                                                 x2910)|])
                                   | None -> ());
                                  (match x2907 with
                                   | Some x2909 ->
                                       ignore
                                         (Ojs.call x2908 "push"
                                            [|(PluralRulesOptions.t_to_js
                                                 x2909)|])
                                   | None -> ());
                                  x2908))|])
        let (supportedLocalesOf :
          locales:string list or_string ->
            ?options:AnonymousInterface3.t -> unit -> string list)
          =
          fun ~locales:(x2913 : string list or_string) ->
            fun ?options:(x2914 : AnonymousInterface3.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x2919 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "PluralRules" in
                   Ojs.call (Ojs.get_prop_ascii x2919 "supportedLocalesOf")
                     "apply"
                     [|x2919;((let x2915 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2915 "push"
                                    [|(or_string_to_js
                                         (fun (x2917 : string list) ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x2917) x2913)|]);
                               (match x2914 with
                                | Some x2916 ->
                                    ignore
                                      (Ojs.call x2915 "push"
                                         [|(AnonymousInterface3.t_to_js x2916)|])
                                | None -> ());
                               x2915))|])
      end
    module AnonymousInterface3 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x2922 : Ojs.t) -> x2922
        and t_to_js : t -> Ojs.t = fun (x2921 : Ojs.t) -> x2921
        let (get_localeMatcher : t -> [ `L_s24_best_fit  | `L_s56_lookup ]) =
          fun (x2923 : t) ->
            let x2924 = Ojs.get_prop_ascii (t_to_js x2923) "localeMatcher" in
            match Ojs.string_of_js x2924 with
            | "best fit" -> `L_s24_best_fit
            | "lookup" -> `L_s56_lookup
            | _ -> assert false
        let (set_localeMatcher :
          t -> [ `L_s24_best_fit  | `L_s56_lookup ] -> unit) =
          fun (x2925 : t) ->
            fun (x2926 : [ `L_s24_best_fit  | `L_s56_lookup ]) ->
              Ojs.set_prop_ascii (t_to_js x2925) "localeMatcher"
                (match x2926 with
                 | `L_s24_best_fit -> Ojs.string_to_js "best fit"
                 | `L_s56_lookup -> Ojs.string_to_js "lookup")
      end
    module AnonymousInterface11 =
      struct
        module AnonymousInterface3 =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x2928 : Ojs.t) -> x2928
            and t_to_js : t -> Ojs.t = fun (x2927 : Ojs.t) -> x2927
            let (get_localeMatcher :
              t -> [ `L_s24_best_fit  | `L_s56_lookup ]) =
              fun (x2929 : t) ->
                let x2930 =
                  Ojs.get_prop_ascii (t_to_js x2929) "localeMatcher" in
                match Ojs.string_of_js x2930 with
                | "best fit" -> `L_s24_best_fit
                | "lookup" -> `L_s56_lookup
                | _ -> assert false
            let (set_localeMatcher :
              t -> [ `L_s24_best_fit  | `L_s56_lookup ] -> unit) =
              fun (x2931 : t) ->
                fun (x2932 : [ `L_s24_best_fit  | `L_s56_lookup ]) ->
                  Ojs.set_prop_ascii (t_to_js x2931) "localeMatcher"
                    (match x2932 with
                     | `L_s24_best_fit -> Ojs.string_to_js "best fit"
                     | `L_s56_lookup -> Ojs.string_to_js "lookup")
          end
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x2934 : Ojs.t) -> x2934
        and t_to_js : t -> Ojs.t = fun (x2933 : Ojs.t) -> x2933
        let (create :
          t ->
            ?locales:string list or_string ->
              ?options:PluralRulesOptions.t -> unit -> PluralRules.t)
          =
          fun (x2942 : t) ->
            fun ?locales:(x2935 : string list or_string option) ->
              fun ?options:(x2936 : PluralRulesOptions.t option) ->
                fun () ->
                  PluralRules.t_of_js
                    (Ojs.new_obj_arr (t_to_js x2942)
                       (let x2937 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        (match x2935 with
                         | Some x2939 ->
                             ignore
                               (Ojs.call x2937 "push"
                                  [|(or_string_to_js
                                       (fun (x2940 : string list) ->
                                          Ojs.list_to_js Ojs.string_to_js
                                            x2940) x2939)|])
                         | None -> ());
                        (match x2936 with
                         | Some x2938 ->
                             ignore
                               (Ojs.call x2937 "push"
                                  [|(PluralRulesOptions.t_to_js x2938)|])
                         | None -> ());
                        x2937))
        let (apply :
          t ->
            ?locales:string list or_string ->
              ?options:PluralRulesOptions.t -> unit -> PluralRules.t)
          =
          fun (x2950 : t) ->
            fun ?locales:(x2943 : string list or_string option) ->
              fun ?options:(x2944 : PluralRulesOptions.t option) ->
                fun () ->
                  PluralRules.t_of_js
                    (Ojs.call (t_to_js x2950) "apply"
                       [|Ojs.null;((let x2945 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    (match x2943 with
                                     | Some x2947 ->
                                         ignore
                                           (Ojs.call x2945 "push"
                                              [|(or_string_to_js
                                                   (fun (x2948 : string list)
                                                      ->
                                                      Ojs.list_to_js
                                                        Ojs.string_to_js
                                                        x2948) x2947)|])
                                     | None -> ());
                                    (match x2944 with
                                     | Some x2946 ->
                                         ignore
                                           (Ojs.call x2945 "push"
                                              [|(PluralRulesOptions.t_to_js
                                                   x2946)|])
                                     | None -> ());
                                    x2945))|])
        let (supportedLocalesOf :
          t ->
            locales:string list or_string ->
              ?options:AnonymousInterface3.t -> unit -> string list)
          =
          fun (x2957 : t) ->
            fun ~locales:(x2951 : string list or_string) ->
              fun ?options:(x2952 : AnonymousInterface3.t option) ->
                fun () ->
                  Ojs.list_of_js Ojs.string_of_js
                    (let x2958 = t_to_js x2957 in
                     Ojs.call (Ojs.get_prop_ascii x2958 "supportedLocalesOf")
                       "apply"
                       [|x2958;((let x2953 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x2953 "push"
                                      [|(or_string_to_js
                                           (fun (x2955 : string list) ->
                                              Ojs.list_to_js Ojs.string_to_js
                                                x2955) x2951)|]);
                                 (match x2952 with
                                  | Some x2954 ->
                                      ignore
                                        (Ojs.call x2953 "push"
                                           [|(AnonymousInterface3.t_to_js
                                                x2954)|])
                                  | None -> ());
                                 x2953))|])
      end
    module ResolvedNumberFormatOptions =
      struct
        type t = [ `Intl_ResolvedNumberFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2961 : Ojs.t) -> t_of_js x2961
        and t_0_to_js : t_0 -> Ojs.t = fun (x2960 : t) -> t_to_js x2960
        type tags = [ `Intl_ResolvedNumberFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `Intl_ResolvedNumberFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2964 : Ojs.t) -> intf_of_js __tags_of_js x2964
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2962 : __tags intf) -> intf_to_js __tags_to_js x2962
        let (get_compactDisplay :
          'tags this -> [ `L_s55_long  | `L_s88_short ]) =
          fun (x2966 : 'tags this) ->
            let x2968 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2966)
                "compactDisplay" in
            match Ojs.string_of_js x2968 with
            | "long" -> `L_s55_long
            | "short" -> `L_s88_short
            | _ -> assert false
        let (set_compactDisplay :
          'tags this -> [ `L_s55_long  | `L_s88_short ] -> unit) =
          fun (x2969 : 'tags this) ->
            fun (x2970 : [ `L_s55_long  | `L_s88_short ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2969)
                "compactDisplay"
                (match x2970 with
                 | `L_s55_long -> Ojs.string_to_js "long"
                 | `L_s88_short -> Ojs.string_to_js "short")
        let (get_notation :
          'tags this ->
            [ `L_s27_compact  | `L_s34_engineering  | `L_s84_scientific 
            | `L_s89_standard ])
          =
          fun (x2972 : 'tags this) ->
            let x2974 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2972) "notation" in
            match Ojs.string_of_js x2974 with
            | "compact" -> `L_s27_compact
            | "engineering" -> `L_s34_engineering
            | "scientific" -> `L_s84_scientific
            | "standard" -> `L_s89_standard
            | _ -> assert false
        let (set_notation :
          'tags this ->
            [ `L_s27_compact  | `L_s34_engineering  | `L_s84_scientific 
            | `L_s89_standard ] -> unit)
          =
          fun (x2975 : 'tags this) ->
            fun
              (x2976 :
                [ `L_s27_compact  | `L_s34_engineering  | `L_s84_scientific 
                | `L_s89_standard ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2975) "notation"
                (match x2976 with
                 | `L_s27_compact -> Ojs.string_to_js "compact"
                 | `L_s34_engineering -> Ojs.string_to_js "engineering"
                 | `L_s84_scientific -> Ojs.string_to_js "scientific"
                 | `L_s89_standard -> Ojs.string_to_js "standard")
        let (get_signDisplay :
          'tags this -> [ `L_s21_always  | `L_s22_auto  | `L_s68_never ]) =
          fun (x2978 : 'tags this) ->
            let x2980 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2978) "signDisplay" in
            match Ojs.string_of_js x2980 with
            | "always" -> `L_s21_always
            | "auto" -> `L_s22_auto
            | "never" -> `L_s68_never
            | _ -> assert false
        let (set_signDisplay :
          'tags this ->
            [ `L_s21_always  | `L_s22_auto  | `L_s68_never ] -> unit)
          =
          fun (x2981 : 'tags this) ->
            fun (x2982 : [ `L_s21_always  | `L_s22_auto  | `L_s68_never ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2981) "signDisplay"
                (match x2982 with
                 | `L_s21_always -> Ojs.string_to_js "always"
                 | `L_s22_auto -> Ojs.string_to_js "auto"
                 | `L_s68_never -> Ojs.string_to_js "never")
        let (get_unit : 'tags this -> string) =
          fun (x2984 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2984) "unit")
        let (set_unit : 'tags this -> string -> unit) =
          fun (x2986 : 'tags this) ->
            fun (x2987 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2986) "unit"
                (Ojs.string_to_js x2987)
        let (get_unitDisplay :
          'tags this -> [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ]) =
          fun (x2989 : 'tags this) ->
            let x2991 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2989) "unitDisplay" in
            match Ojs.string_of_js x2991 with
            | "long" -> `L_s55_long
            | "narrow" -> `L_s67_narrow
            | "short" -> `L_s88_short
            | _ -> assert false
        let (set_unitDisplay :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] -> unit)
          =
          fun (x2992 : 'tags this) ->
            fun (x2993 : [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2992) "unitDisplay"
                (match x2993 with
                 | `L_s55_long -> Ojs.string_to_js "long"
                 | `L_s67_narrow -> Ojs.string_to_js "narrow"
                 | `L_s88_short -> Ojs.string_to_js "short")
        let (get_locale : 'tags this -> string) =
          fun (x2995 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2995) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x2997 : 'tags this) ->
            fun (x2998 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2997) "locale"
                (Ojs.string_to_js x2998)
        let (get_numberingSystem : 'tags this -> string) =
          fun (x3000 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3000)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x3002 : 'tags this) ->
            fun (x3003 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3002)
                "numberingSystem" (Ojs.string_to_js x3003)
        let (get_style : 'tags this -> string) =
          fun (x3005 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3005) "style")
        let (set_style : 'tags this -> string -> unit) =
          fun (x3007 : 'tags this) ->
            fun (x3008 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3007) "style"
                (Ojs.string_to_js x3008)
        let (get_currency : 'tags this -> string) =
          fun (x3010 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3010) "currency")
        let (set_currency : 'tags this -> string -> unit) =
          fun (x3012 : 'tags this) ->
            fun (x3013 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3012) "currency"
                (Ojs.string_to_js x3013)
        let (get_currencyDisplay : 'tags this -> string) =
          fun (x3015 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3015)
                 "currencyDisplay")
        let (set_currencyDisplay : 'tags this -> string -> unit) =
          fun (x3017 : 'tags this) ->
            fun (x3018 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3017)
                "currencyDisplay" (Ojs.string_to_js x3018)
        let (get_minimumIntegerDigits : 'tags this -> float) =
          fun (x3020 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3020)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits : 'tags this -> float -> unit) =
          fun (x3022 : 'tags this) ->
            fun (x3023 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3022)
                "minimumIntegerDigits" (Ojs.float_to_js x3023)
        let (get_minimumFractionDigits : 'tags this -> float) =
          fun (x3025 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3025)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits : 'tags this -> float -> unit) =
          fun (x3027 : 'tags this) ->
            fun (x3028 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3027)
                "minimumFractionDigits" (Ojs.float_to_js x3028)
        let (get_maximumFractionDigits : 'tags this -> float) =
          fun (x3030 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3030)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits : 'tags this -> float -> unit) =
          fun (x3032 : 'tags this) ->
            fun (x3033 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3032)
                "maximumFractionDigits" (Ojs.float_to_js x3033)
        let (get_minimumSignificantDigits : 'tags this -> float) =
          fun (x3035 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3035)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits : 'tags this -> float -> unit) =
          fun (x3037 : 'tags this) ->
            fun (x3038 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3037)
                "minimumSignificantDigits" (Ojs.float_to_js x3038)
        let (get_maximumSignificantDigits : 'tags this -> float) =
          fun (x3040 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3040)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits : 'tags this -> float -> unit) =
          fun (x3042 : 'tags this) ->
            fun (x3043 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3042)
                "maximumSignificantDigits" (Ojs.float_to_js x3043)
        let (get_useGrouping : 'tags this -> bool) =
          fun (x3045 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3045) "useGrouping")
        let (set_useGrouping : 'tags this -> bool -> unit) =
          fun (x3047 : 'tags this) ->
            fun (x3048 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3047) "useGrouping"
                (Ojs.bool_to_js x3048)
        let cast_from = Obj.magic
      end
    module ES2020NumberFormatPartType =
      struct
        type t =
          [ `L_s27_compact  | `L_s36_exponentInteger 
          | `L_s37_exponentMinusSign  | `L_s38_exponentSeparator 
          | `L_s95_unit  | `L_s96_unknown ]
        let rec t_of_js : Ojs.t -> t =
          fun (x3051 : Ojs.t) ->
            let x3052 = x3051 in
            match Ojs.string_of_js x3052 with
            | "compact" -> `L_s27_compact
            | "exponentInteger" -> `L_s36_exponentInteger
            | "exponentMinusSign" -> `L_s37_exponentMinusSign
            | "exponentSeparator" -> `L_s38_exponentSeparator
            | "unit" -> `L_s95_unit
            | "unknown" -> `L_s96_unknown
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x3050 :
              [ `L_s27_compact  | `L_s36_exponentInteger 
              | `L_s37_exponentMinusSign  | `L_s38_exponentSeparator 
              | `L_s95_unit  | `L_s96_unknown ])
            ->
            match x3050 with
            | `L_s27_compact -> Ojs.string_to_js "compact"
            | `L_s36_exponentInteger -> Ojs.string_to_js "exponentInteger"
            | `L_s37_exponentMinusSign ->
                Ojs.string_to_js "exponentMinusSign"
            | `L_s38_exponentSeparator ->
                Ojs.string_to_js "exponentSeparator"
            | `L_s95_unit -> Ojs.string_to_js "unit"
            | `L_s96_unknown -> Ojs.string_to_js "unknown"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3054 : Ojs.t) -> t_of_js x3054
        and t_0_to_js : t_0 -> Ojs.t = fun (x3053 : t) -> t_to_js x3053
      end
    module ES2018NumberFormatPartType =
      struct
        type t =
          [ `L_s26_code  | `L_s28_currency  | `L_s32_decimal 
          | `L_s41_fraction  | `L_s44_group  | `L_s51_infinity 
          | `L_s52_integer  | `L_s54_literal  | `L_s60_minusSign 
          | `L_s65_name  | `L_s66_nan  | `L_s77_percent 
          | `L_s78_percentSign  | `L_s79_plusSign  | `L_s91_symbol ]
        let rec t_of_js : Ojs.t -> t =
          fun (x3056 : Ojs.t) ->
            let x3057 = x3056 in
            match Ojs.string_of_js x3057 with
            | "code" -> `L_s26_code
            | "currency" -> `L_s28_currency
            | "decimal" -> `L_s32_decimal
            | "fraction" -> `L_s41_fraction
            | "group" -> `L_s44_group
            | "infinity" -> `L_s51_infinity
            | "integer" -> `L_s52_integer
            | "literal" -> `L_s54_literal
            | "minusSign" -> `L_s60_minusSign
            | "name" -> `L_s65_name
            | "nan" -> `L_s66_nan
            | "percent" -> `L_s77_percent
            | "percentSign" -> `L_s78_percentSign
            | "plusSign" -> `L_s79_plusSign
            | "symbol" -> `L_s91_symbol
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x3055 :
              [ `L_s26_code  | `L_s28_currency  | `L_s32_decimal 
              | `L_s41_fraction  | `L_s44_group  | `L_s51_infinity 
              | `L_s52_integer  | `L_s54_literal  | `L_s60_minusSign 
              | `L_s65_name  | `L_s66_nan  | `L_s77_percent 
              | `L_s78_percentSign  | `L_s79_plusSign  | `L_s91_symbol ])
            ->
            match x3055 with
            | `L_s26_code -> Ojs.string_to_js "code"
            | `L_s28_currency -> Ojs.string_to_js "currency"
            | `L_s32_decimal -> Ojs.string_to_js "decimal"
            | `L_s41_fraction -> Ojs.string_to_js "fraction"
            | `L_s44_group -> Ojs.string_to_js "group"
            | `L_s51_infinity -> Ojs.string_to_js "infinity"
            | `L_s52_integer -> Ojs.string_to_js "integer"
            | `L_s54_literal -> Ojs.string_to_js "literal"
            | `L_s60_minusSign -> Ojs.string_to_js "minusSign"
            | `L_s65_name -> Ojs.string_to_js "name"
            | `L_s66_nan -> Ojs.string_to_js "nan"
            | `L_s77_percent -> Ojs.string_to_js "percent"
            | `L_s78_percentSign -> Ojs.string_to_js "percentSign"
            | `L_s79_plusSign -> Ojs.string_to_js "plusSign"
            | `L_s91_symbol -> Ojs.string_to_js "symbol"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3059 : Ojs.t) -> t_of_js x3059
        and t_0_to_js : t_0 -> Ojs.t = fun (x3058 : t) -> t_to_js x3058
      end
    module NumberFormatPartTypes =
      struct
        type t =
          [ `L_s26_code  | `L_s27_compact  | `L_s28_currency 
          | `L_s32_decimal  | `L_s36_exponentInteger 
          | `L_s37_exponentMinusSign  | `L_s38_exponentSeparator 
          | `L_s41_fraction  | `L_s44_group  | `L_s51_infinity 
          | `L_s52_integer  | `L_s54_literal  | `L_s60_minusSign 
          | `L_s65_name  | `L_s66_nan  | `L_s77_percent 
          | `L_s78_percentSign  | `L_s79_plusSign  | `L_s91_symbol 
          | `L_s95_unit  | `L_s96_unknown ]
        let rec t_of_js : Ojs.t -> t =
          fun (x3061 : Ojs.t) ->
            let x3062 = x3061 in
            match Ojs.string_of_js x3062 with
            | "code" -> `L_s26_code
            | "compact" -> `L_s27_compact
            | "currency" -> `L_s28_currency
            | "decimal" -> `L_s32_decimal
            | "exponentInteger" -> `L_s36_exponentInteger
            | "exponentMinusSign" -> `L_s37_exponentMinusSign
            | "exponentSeparator" -> `L_s38_exponentSeparator
            | "fraction" -> `L_s41_fraction
            | "group" -> `L_s44_group
            | "infinity" -> `L_s51_infinity
            | "integer" -> `L_s52_integer
            | "literal" -> `L_s54_literal
            | "minusSign" -> `L_s60_minusSign
            | "name" -> `L_s65_name
            | "nan" -> `L_s66_nan
            | "percent" -> `L_s77_percent
            | "percentSign" -> `L_s78_percentSign
            | "plusSign" -> `L_s79_plusSign
            | "symbol" -> `L_s91_symbol
            | "unit" -> `L_s95_unit
            | "unknown" -> `L_s96_unknown
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x3060 :
              [ `L_s26_code  | `L_s27_compact  | `L_s28_currency 
              | `L_s32_decimal  | `L_s36_exponentInteger 
              | `L_s37_exponentMinusSign  | `L_s38_exponentSeparator 
              | `L_s41_fraction  | `L_s44_group  | `L_s51_infinity 
              | `L_s52_integer  | `L_s54_literal  | `L_s60_minusSign 
              | `L_s65_name  | `L_s66_nan  | `L_s77_percent 
              | `L_s78_percentSign  | `L_s79_plusSign  | `L_s91_symbol 
              | `L_s95_unit  | `L_s96_unknown ])
            ->
            match x3060 with
            | `L_s26_code -> Ojs.string_to_js "code"
            | `L_s27_compact -> Ojs.string_to_js "compact"
            | `L_s28_currency -> Ojs.string_to_js "currency"
            | `L_s32_decimal -> Ojs.string_to_js "decimal"
            | `L_s36_exponentInteger -> Ojs.string_to_js "exponentInteger"
            | `L_s37_exponentMinusSign ->
                Ojs.string_to_js "exponentMinusSign"
            | `L_s38_exponentSeparator ->
                Ojs.string_to_js "exponentSeparator"
            | `L_s41_fraction -> Ojs.string_to_js "fraction"
            | `L_s44_group -> Ojs.string_to_js "group"
            | `L_s51_infinity -> Ojs.string_to_js "infinity"
            | `L_s52_integer -> Ojs.string_to_js "integer"
            | `L_s54_literal -> Ojs.string_to_js "literal"
            | `L_s60_minusSign -> Ojs.string_to_js "minusSign"
            | `L_s65_name -> Ojs.string_to_js "name"
            | `L_s66_nan -> Ojs.string_to_js "nan"
            | `L_s77_percent -> Ojs.string_to_js "percent"
            | `L_s78_percentSign -> Ojs.string_to_js "percentSign"
            | `L_s79_plusSign -> Ojs.string_to_js "plusSign"
            | `L_s91_symbol -> Ojs.string_to_js "symbol"
            | `L_s95_unit -> Ojs.string_to_js "unit"
            | `L_s96_unknown -> Ojs.string_to_js "unknown"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3064 : Ojs.t) -> t_of_js x3064
        and t_0_to_js : t_0 -> Ojs.t = fun (x3063 : t) -> t_to_js x3063
      end
    module NumberFormatPart =
      struct
        type t = [ `Intl_NumberFormatPart ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3066 : Ojs.t) -> t_of_js x3066
        and t_0_to_js : t_0 -> Ojs.t = fun (x3065 : t) -> t_to_js x3065
        type tags = [ `Intl_NumberFormatPart ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_NumberFormatPart ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x3069 : Ojs.t) -> intf_of_js __tags_of_js x3069
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x3067 : __tags intf) -> intf_to_js __tags_to_js x3067
        let (get_type : 'tags this -> NumberFormatPartTypes.t) =
          fun (x3071 : 'tags this) ->
            NumberFormatPartTypes.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3071) "type")
        let (set_type : 'tags this -> NumberFormatPartTypes.t -> unit) =
          fun (x3073 : 'tags this) ->
            fun (x3074 : NumberFormatPartTypes.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3073) "type"
                (NumberFormatPartTypes.t_to_js x3074)
        let (get_value : 'tags this -> string) =
          fun (x3076 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3076) "value")
        let (set_value : 'tags this -> string -> unit) =
          fun (x3078 : 'tags this) ->
            fun (x3079 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3078) "value"
                (Ojs.string_to_js x3079)
        let cast_from = Obj.magic
      end
    module NumberFormatOptions =
      struct
        type t = [ `Intl_NumberFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3082 : Ojs.t) -> t_of_js x3082
        and t_0_to_js : t_0 -> Ojs.t = fun (x3081 : t) -> t_to_js x3081
        type tags = [ `Intl_NumberFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_NumberFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x3085 : Ojs.t) -> intf_of_js __tags_of_js x3085
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x3083 : __tags intf) -> intf_to_js __tags_to_js x3083
        let (get_compactDisplay :
          'tags this -> [ `L_s55_long  | `L_s88_short ] or_undefined) =
          fun (x3087 : 'tags this) ->
            or_undefined_of_js
              (fun (x3089 : Ojs.t) ->
                 let x3090 = x3089 in
                 match Ojs.string_of_js x3090 with
                 | "long" -> `L_s55_long
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3087)
                 "compactDisplay")
        let (set_compactDisplay :
          'tags this -> [ `L_s55_long  | `L_s88_short ] or_undefined -> unit)
          =
          fun (x3091 : 'tags this) ->
            fun (x3092 : [ `L_s55_long  | `L_s88_short ] or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3091)
                "compactDisplay"
                (or_undefined_to_js
                   (fun (x3093 : [ `L_s55_long  | `L_s88_short ]) ->
                      match x3093 with
                      | `L_s55_long -> Ojs.string_to_js "long"
                      | `L_s88_short -> Ojs.string_to_js "short") x3092)
        let (get_notation :
          'tags this ->
            [ `L_s27_compact  | `L_s34_engineering  | `L_s84_scientific 
            | `L_s89_standard ] or_undefined)
          =
          fun (x3095 : 'tags this) ->
            or_undefined_of_js
              (fun (x3097 : Ojs.t) ->
                 let x3098 = x3097 in
                 match Ojs.string_of_js x3098 with
                 | "compact" -> `L_s27_compact
                 | "engineering" -> `L_s34_engineering
                 | "scientific" -> `L_s84_scientific
                 | "standard" -> `L_s89_standard
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3095) "notation")
        let (set_notation :
          'tags this ->
            [ `L_s27_compact  | `L_s34_engineering  | `L_s84_scientific 
            | `L_s89_standard ] or_undefined -> unit)
          =
          fun (x3099 : 'tags this) ->
            fun
              (x3100 :
                [ `L_s27_compact  | `L_s34_engineering  | `L_s84_scientific 
                | `L_s89_standard ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3099) "notation"
                (or_undefined_to_js
                   (fun
                      (x3101 :
                        [ `L_s27_compact  | `L_s34_engineering 
                        | `L_s84_scientific  | `L_s89_standard ])
                      ->
                      match x3101 with
                      | `L_s27_compact -> Ojs.string_to_js "compact"
                      | `L_s34_engineering -> Ojs.string_to_js "engineering"
                      | `L_s84_scientific -> Ojs.string_to_js "scientific"
                      | `L_s89_standard -> Ojs.string_to_js "standard") x3100)
        let (get_signDisplay :
          'tags this ->
            [ `L_s21_always  | `L_s22_auto  | `L_s68_never ] or_undefined)
          =
          fun (x3103 : 'tags this) ->
            or_undefined_of_js
              (fun (x3105 : Ojs.t) ->
                 let x3106 = x3105 in
                 match Ojs.string_of_js x3106 with
                 | "always" -> `L_s21_always
                 | "auto" -> `L_s22_auto
                 | "never" -> `L_s68_never
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3103) "signDisplay")
        let (set_signDisplay :
          'tags this ->
            [ `L_s21_always  | `L_s22_auto  | `L_s68_never ] or_undefined ->
              unit)
          =
          fun (x3107 : 'tags this) ->
            fun
              (x3108 :
                [ `L_s21_always  | `L_s22_auto  | `L_s68_never ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3107) "signDisplay"
                (or_undefined_to_js
                   (fun
                      (x3109 :
                        [ `L_s21_always  | `L_s22_auto  | `L_s68_never ])
                      ->
                      match x3109 with
                      | `L_s21_always -> Ojs.string_to_js "always"
                      | `L_s22_auto -> Ojs.string_to_js "auto"
                      | `L_s68_never -> Ojs.string_to_js "never") x3108)
        let (get_unit : 'tags this -> string or_undefined) =
          fun (x3111 : 'tags this) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3111) "unit")
        let (set_unit : 'tags this -> string or_undefined -> unit) =
          fun (x3114 : 'tags this) ->
            fun (x3115 : string or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3114) "unit"
                (or_undefined_to_js Ojs.string_to_js x3115)
        let (get_unitDisplay :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined)
          =
          fun (x3118 : 'tags this) ->
            or_undefined_of_js
              (fun (x3120 : Ojs.t) ->
                 let x3121 = x3120 in
                 match Ojs.string_of_js x3121 with
                 | "long" -> `L_s55_long
                 | "narrow" -> `L_s67_narrow
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3118) "unitDisplay")
        let (set_unitDisplay :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined ->
              unit)
          =
          fun (x3122 : 'tags this) ->
            fun
              (x3123 :
                [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3122) "unitDisplay"
                (or_undefined_to_js
                   (fun
                      (x3124 :
                        [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ])
                      ->
                      match x3124 with
                      | `L_s55_long -> Ojs.string_to_js "long"
                      | `L_s67_narrow -> Ojs.string_to_js "narrow"
                      | `L_s88_short -> Ojs.string_to_js "short") x3123)
        let (get_localeMatcher : 'tags this -> string or_undefined) =
          fun (x3126 : 'tags this) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3126)
                 "localeMatcher")
        let (set_localeMatcher : 'tags this -> string or_undefined -> unit) =
          fun (x3129 : 'tags this) ->
            fun (x3130 : string or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3129) "localeMatcher"
                (or_undefined_to_js Ojs.string_to_js x3130)
        let (get_style : 'tags this -> string or_undefined) =
          fun (x3133 : 'tags this) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3133) "style")
        let (set_style : 'tags this -> string or_undefined -> unit) =
          fun (x3136 : 'tags this) ->
            fun (x3137 : string or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3136) "style"
                (or_undefined_to_js Ojs.string_to_js x3137)
        let (get_currency : 'tags this -> string or_undefined) =
          fun (x3140 : 'tags this) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3140) "currency")
        let (set_currency : 'tags this -> string or_undefined -> unit) =
          fun (x3143 : 'tags this) ->
            fun (x3144 : string or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3143) "currency"
                (or_undefined_to_js Ojs.string_to_js x3144)
        let (get_currencyDisplay : 'tags this -> string or_undefined) =
          fun (x3147 : 'tags this) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3147)
                 "currencyDisplay")
        let (set_currencyDisplay : 'tags this -> string or_undefined -> unit)
          =
          fun (x3150 : 'tags this) ->
            fun (x3151 : string or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3150)
                "currencyDisplay" (or_undefined_to_js Ojs.string_to_js x3151)
        let (get_currencySign : 'tags this -> string or_undefined) =
          fun (x3154 : 'tags this) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3154) "currencySign")
        let (set_currencySign : 'tags this -> string or_undefined -> unit) =
          fun (x3157 : 'tags this) ->
            fun (x3158 : string or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3157) "currencySign"
                (or_undefined_to_js Ojs.string_to_js x3158)
        let (get_useGrouping : 'tags this -> bool or_undefined) =
          fun (x3161 : 'tags this) ->
            or_undefined_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3161) "useGrouping")
        let (set_useGrouping : 'tags this -> bool or_undefined -> unit) =
          fun (x3164 : 'tags this) ->
            fun (x3165 : bool or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3164) "useGrouping"
                (or_undefined_to_js Ojs.bool_to_js x3165)
        let (get_minimumIntegerDigits : 'tags this -> float or_undefined) =
          fun (x3168 : 'tags this) ->
            or_undefined_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3168)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits :
          'tags this -> float or_undefined -> unit) =
          fun (x3171 : 'tags this) ->
            fun (x3172 : float or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3171)
                "minimumIntegerDigits"
                (or_undefined_to_js Ojs.float_to_js x3172)
        let (get_minimumFractionDigits : 'tags this -> float or_undefined) =
          fun (x3175 : 'tags this) ->
            or_undefined_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3175)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits :
          'tags this -> float or_undefined -> unit) =
          fun (x3178 : 'tags this) ->
            fun (x3179 : float or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3178)
                "minimumFractionDigits"
                (or_undefined_to_js Ojs.float_to_js x3179)
        let (get_maximumFractionDigits : 'tags this -> float or_undefined) =
          fun (x3182 : 'tags this) ->
            or_undefined_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3182)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits :
          'tags this -> float or_undefined -> unit) =
          fun (x3185 : 'tags this) ->
            fun (x3186 : float or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3185)
                "maximumFractionDigits"
                (or_undefined_to_js Ojs.float_to_js x3186)
        let (get_minimumSignificantDigits : 'tags this -> float or_undefined)
          =
          fun (x3189 : 'tags this) ->
            or_undefined_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3189)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits :
          'tags this -> float or_undefined -> unit) =
          fun (x3192 : 'tags this) ->
            fun (x3193 : float or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3192)
                "minimumSignificantDigits"
                (or_undefined_to_js Ojs.float_to_js x3193)
        let (get_maximumSignificantDigits : 'tags this -> float or_undefined)
          =
          fun (x3196 : 'tags this) ->
            or_undefined_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3196)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits :
          'tags this -> float or_undefined -> unit) =
          fun (x3199 : 'tags this) ->
            fun (x3200 : float or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3199)
                "maximumSignificantDigits"
                (or_undefined_to_js Ojs.float_to_js x3200)
        let cast_from = Obj.magic
      end
    module NumberFormat =
      struct
        type t = [ `Intl_NumberFormat ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3204 : Ojs.t) -> t_of_js x3204
        and t_0_to_js : t_0 -> Ojs.t = fun (x3203 : t) -> t_to_js x3203
        type tags = [ `Intl_NumberFormat ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_NumberFormat ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x3207 : Ojs.t) -> intf_of_js __tags_of_js x3207
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x3205 : __tags intf) -> intf_to_js __tags_to_js x3205
        let (formatRange :
          'tags this ->
            startDate:bigint or_number -> endDate:bigint or_number -> string)
          =
          fun (x3213 : 'tags this) ->
            fun ~startDate:(x3209 : bigint or_number) ->
              fun ~endDate:(x3211 : bigint or_number) ->
                Ojs.string_of_js
                  (Ojs.call (this_to_js Obj.magic x3213) "formatRange"
                     [|(or_number_to_js bigint_to_js x3209);(or_number_to_js
                                                               bigint_to_js
                                                               x3211)|])
        let (formatRangeToParts :
          'tags this ->
            startDate:bigint or_number ->
              endDate:bigint or_number -> NumberFormatPart.t list)
          =
          fun (x3219 : 'tags this) ->
            fun ~startDate:(x3215 : bigint or_number) ->
              fun ~endDate:(x3217 : bigint or_number) ->
                Ojs.list_of_js NumberFormatPart.t_of_js
                  (Ojs.call (this_to_js Obj.magic x3219) "formatRangeToParts"
                     [|(or_number_to_js bigint_to_js x3215);(or_number_to_js
                                                               bigint_to_js
                                                               x3217)|])
        let (format : 'tags this -> value:bigint or_number -> string) =
          fun (x3224 : 'tags this) ->
            fun ~value:(x3222 : bigint or_number) ->
              Ojs.string_of_js
                (Ojs.call (this_to_js Obj.magic x3224) "format"
                   [|(or_number_to_js bigint_to_js x3222)|])
        let (resolvedOptions : 'tags this -> ResolvedNumberFormatOptions.t) =
          fun (x3226 : 'tags this) ->
            ResolvedNumberFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x3226) "resolvedOptions" [||])
        let (formatToParts :
          'tags this ->
            ?number:bigint or_number -> unit -> NumberFormatPart.t list)
          =
          fun (x3232 : 'tags this) ->
            fun ?number:(x3228 : bigint or_number option) ->
              fun () ->
                Ojs.list_of_js NumberFormatPart.t_of_js
                  (let x3234 = this_to_js Obj.magic x3232 in
                   Ojs.call (Ojs.get_prop_ascii x3234 "formatToParts")
                     "apply"
                     [|x3234;((let x3229 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x3228 with
                                | Some x3230 ->
                                    ignore
                                      (Ojs.call x3229 "push"
                                         [|(or_number_to_js bigint_to_js
                                              x3230)|])
                                | None -> ());
                               x3229))|])
        let (format' : 'tags this -> value:float -> string) =
          fun (x3237 : 'tags this) ->
            fun ~value:(x3236 : float) ->
              Ojs.string_of_js
                (Ojs.call (this_to_js Obj.magic x3237) "format"
                   [|(Ojs.float_to_js x3236)|])
        let (resolvedOptions' : 'tags this -> ResolvedNumberFormatOptions.t)
          =
          fun (x3239 : 'tags this) ->
            ResolvedNumberFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x3239) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:string list or_string ->
            ?options:NumberFormatOptions.t -> unit -> t)
          =
          fun ?locales:(x3241 : string list or_string option) ->
            fun ?options:(x3242 : NumberFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "NumberFormat")
                     (let x3243 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x3241 with
                       | Some x3245 ->
                           ignore
                             (Ojs.call x3243 "push"
                                [|(or_string_to_js
                                     (fun (x3246 : string list) ->
                                        Ojs.list_to_js Ojs.string_to_js x3246)
                                     x3245)|])
                       | None -> ());
                      (match x3242 with
                       | Some x3244 ->
                           ignore
                             (Ojs.call x3243 "push"
                                [|(NumberFormatOptions.t_to_js x3244)|])
                       | None -> ());
                      x3243))
        let (invoke :
          ?locales:string list or_string ->
            ?options:NumberFormatOptions.t -> unit -> t)
          =
          fun ?locales:(x3248 : string list or_string option) ->
            fun ?options:(x3249 : NumberFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "NumberFormat")
                     "apply"
                     [|Ojs.null;((let x3250 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x3248 with
                                   | Some x3252 ->
                                       ignore
                                         (Ojs.call x3250 "push"
                                            [|(or_string_to_js
                                                 (fun (x3253 : string list)
                                                    ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x3253)
                                                 x3252)|])
                                   | None -> ());
                                  (match x3249 with
                                   | Some x3251 ->
                                       ignore
                                         (Ojs.call x3250 "push"
                                            [|(NumberFormatOptions.t_to_js
                                                 x3251)|])
                                   | None -> ());
                                  x3250))|])
        let (supportedLocalesOf :
          locales:string list or_string ->
            ?options:NumberFormatOptions.t -> unit -> string list)
          =
          fun ~locales:(x3255 : string list or_string) ->
            fun ?options:(x3256 : NumberFormatOptions.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x3261 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "NumberFormat" in
                   Ojs.call (Ojs.get_prop_ascii x3261 "supportedLocalesOf")
                     "apply"
                     [|x3261;((let x3257 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3257 "push"
                                    [|(or_string_to_js
                                         (fun (x3259 : string list) ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x3259) x3255)|]);
                               (match x3256 with
                                | Some x3258 ->
                                    ignore
                                      (Ojs.call x3257 "push"
                                         [|(NumberFormatOptions.t_to_js x3258)|])
                                | None -> ());
                               x3257))|])
      end
    module AnonymousInterface10 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3264 : Ojs.t) -> x3264
        and t_to_js : t -> Ojs.t = fun (x3263 : Ojs.t) -> x3263
        let (create :
          t ->
            ?locales:string list or_string ->
              ?options:NumberFormatOptions.t -> unit -> NumberFormat.t)
          =
          fun (x3272 : t) ->
            fun ?locales:(x3265 : string list or_string option) ->
              fun ?options:(x3266 : NumberFormatOptions.t option) ->
                fun () ->
                  NumberFormat.t_of_js
                    (Ojs.new_obj_arr (t_to_js x3272)
                       (let x3267 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        (match x3265 with
                         | Some x3269 ->
                             ignore
                               (Ojs.call x3267 "push"
                                  [|(or_string_to_js
                                       (fun (x3270 : string list) ->
                                          Ojs.list_to_js Ojs.string_to_js
                                            x3270) x3269)|])
                         | None -> ());
                        (match x3266 with
                         | Some x3268 ->
                             ignore
                               (Ojs.call x3267 "push"
                                  [|(NumberFormatOptions.t_to_js x3268)|])
                         | None -> ());
                        x3267))
        let (apply :
          t ->
            ?locales:string list or_string ->
              ?options:NumberFormatOptions.t -> unit -> NumberFormat.t)
          =
          fun (x3280 : t) ->
            fun ?locales:(x3273 : string list or_string option) ->
              fun ?options:(x3274 : NumberFormatOptions.t option) ->
                fun () ->
                  NumberFormat.t_of_js
                    (Ojs.call (t_to_js x3280) "apply"
                       [|Ojs.null;((let x3275 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    (match x3273 with
                                     | Some x3277 ->
                                         ignore
                                           (Ojs.call x3275 "push"
                                              [|(or_string_to_js
                                                   (fun (x3278 : string list)
                                                      ->
                                                      Ojs.list_to_js
                                                        Ojs.string_to_js
                                                        x3278) x3277)|])
                                     | None -> ());
                                    (match x3274 with
                                     | Some x3276 ->
                                         ignore
                                           (Ojs.call x3275 "push"
                                              [|(NumberFormatOptions.t_to_js
                                                   x3276)|])
                                     | None -> ());
                                    x3275))|])
        let (supportedLocalesOf :
          t ->
            locales:string list or_string ->
              ?options:NumberFormatOptions.t -> unit -> string list)
          =
          fun (x3287 : t) ->
            fun ~locales:(x3281 : string list or_string) ->
              fun ?options:(x3282 : NumberFormatOptions.t option) ->
                fun () ->
                  Ojs.list_of_js Ojs.string_of_js
                    (let x3288 = t_to_js x3287 in
                     Ojs.call (Ojs.get_prop_ascii x3288 "supportedLocalesOf")
                       "apply"
                       [|x3288;((let x3283 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x3283 "push"
                                      [|(or_string_to_js
                                           (fun (x3285 : string list) ->
                                              Ojs.list_to_js Ojs.string_to_js
                                                x3285) x3281)|]);
                                 (match x3282 with
                                  | Some x3284 ->
                                      ignore
                                        (Ojs.call x3283 "push"
                                           [|(NumberFormatOptions.t_to_js
                                                x3284)|])
                                  | None -> ());
                                 x3283))|])
      end
    let (collator : unit -> AnonymousInterface8.t) =
      fun () ->
        AnonymousInterface8.t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl")
             "Collator")
    let (numberFormat : unit -> AnonymousInterface10.t) =
      fun () ->
        AnonymousInterface10.t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl")
             "NumberFormat")
    let (dateTimeFormat : unit -> AnonymousInterface9.t) =
      fun () ->
        AnonymousInterface9.t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl")
             "DateTimeFormat")
    let (pluralRules : unit -> AnonymousInterface11.t) =
      fun () ->
        AnonymousInterface11.t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl")
             "PluralRules")
    let (relativeTimeFormat : unit -> AnonymousInterface20.t) =
      fun () ->
        AnonymousInterface20.t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl")
             "RelativeTimeFormat")
    let (locale : unit -> AnonymousInterface12.t) =
      fun () ->
        AnonymousInterface12.t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl") "Locale")
    let (displayNames : unit -> AnonymousInterface4.t) =
      fun () ->
        AnonymousInterface4.t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl")
             "DisplayNames")
  end
module String =
  struct
    module AnonymousInterface5 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3291 : Ojs.t) -> x3291
        and t_to_js : t -> Ojs.t = fun (x3290 : Ojs.t) -> x3290
        let (get_raw : t -> (string ArrayLike.t, string list) union2) =
          fun (x3292 : t) ->
            union2_of_js
              (fun (x3293 : Ojs.t) ->
                 ArrayLike.t_of_js Ojs.string_of_js x3293)
              (fun (x3295 : Ojs.t) -> Ojs.list_of_js Ojs.string_of_js x3295)
              (Ojs.get_prop_ascii (t_to_js x3292) "raw")
        let (set_raw : t -> (string ArrayLike.t, string list) union2 -> unit)
          =
          fun (x3297 : t) ->
            fun (x3298 : (string ArrayLike.t, string list) union2) ->
              Ojs.set_prop_ascii (t_to_js x3297) "raw"
                (union2_to_js
                   (fun (x3299 : string ArrayLike.t) ->
                      ArrayLike.t_to_js Ojs.string_to_js x3299)
                   (fun (x3301 : string list) ->
                      Ojs.list_to_js Ojs.string_to_js x3301) x3298)
      end
    module AnonymousInterface19 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3304 : Ojs.t) -> x3304
        and t_to_js : t -> Ojs.t = fun (x3303 : Ojs.t) -> x3303
      end
    module AnonymousInterface18 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3306 : Ojs.t) -> x3306
        and t_to_js : t -> Ojs.t = fun (x3305 : Ojs.t) -> x3305
      end
    module AnonymousInterface17 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3308 : Ojs.t) -> x3308
        and t_to_js : t -> Ojs.t = fun (x3307 : Ojs.t) -> x3307
      end
    module AnonymousInterface16 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3310 : Ojs.t) -> x3310
        and t_to_js : t -> Ojs.t = fun (x3309 : Ojs.t) -> x3309
      end
    module AnonymousInterface15 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3312 : Ojs.t) -> x3312
        and t_to_js : t -> Ojs.t = fun (x3311 : Ojs.t) -> x3311
      end
    type t =
      [ `String  | string ArrayLike.tags_1 | string IterableIterator.tags_1]
        intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3314 : Ojs.t) -> t_of_js x3314
    and t_0_to_js : t_0 -> Ojs.t = fun (x3313 : t) -> t_to_js x3313
    type tags =
      [ `String  | string ArrayLike.tags_1 | string IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `String ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3317 : Ojs.t) -> intf_of_js __tags_of_js x3317
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3315 : __tags intf) -> intf_to_js __tags_to_js x3315
    let (replaceAll :
      'tags this ->
        searchValue:RegExp.t or_string -> replaceValue:string -> string)
      =
      fun (x3322 : 'tags this) ->
        fun ~searchValue:(x3319 : RegExp.t or_string) ->
          fun ~replaceValue:(x3321 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3322) "replaceAll"
                 [|(or_string_to_js RegExp.t_to_js x3319);(Ojs.string_to_js
                                                             x3321)|])
    let (replaceAll' :
      'tags this ->
        searchValue:RegExp.t or_string ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x3329 : 'tags this) ->
        fun ~searchValue:(x3324 : RegExp.t or_string) ->
          fun ~replacer:(x3326 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3329) "replaceAll"
                 [|(or_string_to_js RegExp.t_to_js x3324);(Ojs.fun_to_js_args
                                                             (fun (x3327 : _)
                                                                ->
                                                                Ojs.string_to_js
                                                                  (x3326
                                                                    ~substring:(
                                                                    Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x3327 0))
                                                                    ~args:(
                                                                    Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x3327 1))))|])
    let (replaceAll'' :
      'tags this ->
        searchValue:RegExp.t or_string -> replaceValue:string -> string)
      =
      fun (x3334 : 'tags this) ->
        fun ~searchValue:(x3331 : RegExp.t or_string) ->
          fun ~replaceValue:(x3333 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3334) "replaceAll"
                 [|(or_string_to_js RegExp.t_to_js x3331);(Ojs.string_to_js
                                                             x3333)|])
    let (replaceAll''' :
      'tags this ->
        searchValue:RegExp.t or_string ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x3341 : 'tags this) ->
        fun ~searchValue:(x3336 : RegExp.t or_string) ->
          fun ~replacer:(x3338 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3341) "replaceAll"
                 [|(or_string_to_js RegExp.t_to_js x3336);(Ojs.fun_to_js_args
                                                             (fun (x3339 : _)
                                                                ->
                                                                Ojs.string_to_js
                                                                  (x3338
                                                                    ~substring:(
                                                                    Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x3339 0))
                                                                    ~args:(
                                                                    Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x3339 1))))|])
    let (matchAll :
      'tags this -> regexp:RegExp.t -> RegExpMatchArray.t IterableIterator.t)
      =
      fun (x3344 : 'tags this) ->
        fun ~regexp:(x3343 : RegExp.t) ->
          IterableIterator.t_of_js RegExpMatchArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x3344) "matchAll"
               [|(RegExp.t_to_js x3343)|])
    let (trimEnd : 'tags this -> string) =
      fun (x3347 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3347) "trimEnd" [||])
    let (trimStart : 'tags this -> string) =
      fun (x3349 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3349) "trimStart" [||])
    let (trimLeft : 'tags this -> string) =
      fun (x3351 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3351) "trimLeft" [||])
    let (trimRight : 'tags this -> string) =
      fun (x3353 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3353) "trimRight" [||])
    let (padStart :
      'tags this -> maxLength:float -> ?fillString:string -> unit -> string)
      =
      fun (x3359 : 'tags this) ->
        fun ~maxLength:(x3355 : float) ->
          fun ?fillString:(x3356 : string option) ->
            fun () ->
              Ojs.string_of_js
                (let x3361 = this_to_js Obj.magic x3359 in
                 Ojs.call (Ojs.get_prop_ascii x3361 "padStart") "apply"
                   [|x3361;((let x3357 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3357 "push"
                                  [|(Ojs.float_to_js x3355)|]);
                             (match x3356 with
                              | Some x3358 ->
                                  ignore
                                    (Ojs.call x3357 "push"
                                       [|(Ojs.string_to_js x3358)|])
                              | None -> ());
                             x3357))|])
    let (padEnd :
      'tags this -> maxLength:float -> ?fillString:string -> unit -> string)
      =
      fun (x3366 : 'tags this) ->
        fun ~maxLength:(x3362 : float) ->
          fun ?fillString:(x3363 : string option) ->
            fun () ->
              Ojs.string_of_js
                (let x3368 = this_to_js Obj.magic x3366 in
                 Ojs.call (Ojs.get_prop_ascii x3368 "padEnd") "apply"
                   [|x3368;((let x3364 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3364 "push"
                                  [|(Ojs.float_to_js x3362)|]);
                             (match x3363 with
                              | Some x3365 ->
                                  ignore
                                    (Ojs.call x3364 "push"
                                       [|(Ojs.string_to_js x3365)|])
                              | None -> ());
                             x3364))|])
    let (match_ :
      'tags this ->
        matcher:AnonymousInterface15.t -> RegExpMatchArray.t or_null)
      =
      fun (x3370 : 'tags this) ->
        fun ~matcher:(x3369 : AnonymousInterface15.t) ->
          or_null_of_js RegExpMatchArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x3370) "match"
               [|(AnonymousInterface15.t_to_js x3369)|])
    let (replace :
      'tags this ->
        searchValue:AnonymousInterface16.t -> replaceValue:string -> string)
      =
      fun (x3375 : 'tags this) ->
        fun ~searchValue:(x3373 : AnonymousInterface16.t) ->
          fun ~replaceValue:(x3374 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3375) "replace"
                 [|(AnonymousInterface16.t_to_js x3373);(Ojs.string_to_js
                                                           x3374)|])
    let (replace' :
      'tags this ->
        searchValue:AnonymousInterface17.t ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x3381 : 'tags this) ->
        fun ~searchValue:(x3377 : AnonymousInterface17.t) ->
          fun ~replacer:(x3378 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3381) "replace"
                 [|(AnonymousInterface17.t_to_js x3377);(Ojs.fun_to_js_args
                                                           (fun (x3379 : _)
                                                              ->
                                                              Ojs.string_to_js
                                                                (x3378
                                                                   ~substring:(
                                                                   Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x3379 0))
                                                                   ~args:(
                                                                   Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x3379 1))))|])
    let (search : 'tags this -> searcher:AnonymousInterface18.t -> float) =
      fun (x3384 : 'tags this) ->
        fun ~searcher:(x3383 : AnonymousInterface18.t) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3384) "search"
               [|(AnonymousInterface18.t_to_js x3383)|])
    let (split :
      'tags this ->
        splitter:AnonymousInterface19.t ->
          ?limit:float -> unit -> string list)
      =
      fun (x3390 : 'tags this) ->
        fun ~splitter:(x3386 : AnonymousInterface19.t) ->
          fun ?limit:(x3387 : float option) ->
            fun () ->
              Ojs.list_of_js Ojs.string_of_js
                (let x3392 = this_to_js Obj.magic x3390 in
                 Ojs.call (Ojs.get_prop_ascii x3392 "split") "apply"
                   [|x3392;((let x3388 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3388 "push"
                                  [|(AnonymousInterface19.t_to_js x3386)|]);
                             (match x3387 with
                              | Some x3389 ->
                                  ignore
                                    (Ojs.call x3388 "push"
                                       [|(Ojs.float_to_js x3389)|])
                              | None -> ());
                             x3388))|])
    let (codePointAt : 'tags this -> pos:float -> float or_undefined) =
      fun (x3395 : 'tags this) ->
        fun ~pos:(x3394 : float) ->
          or_undefined_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3395) "codePointAt"
               [|(Ojs.float_to_js x3394)|])
    let (includes :
      'tags this -> searchString:string -> ?position:float -> unit -> bool) =
      fun (x3402 : 'tags this) ->
        fun ~searchString:(x3398 : string) ->
          fun ?position:(x3399 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3404 = this_to_js Obj.magic x3402 in
                 Ojs.call (Ojs.get_prop_ascii x3404 "includes") "apply"
                   [|x3404;((let x3400 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3400 "push"
                                  [|(Ojs.string_to_js x3398)|]);
                             (match x3399 with
                              | Some x3401 ->
                                  ignore
                                    (Ojs.call x3400 "push"
                                       [|(Ojs.float_to_js x3401)|])
                              | None -> ());
                             x3400))|])
    let (endsWith :
      'tags this -> searchString:string -> ?endPosition:float -> unit -> bool)
      =
      fun (x3409 : 'tags this) ->
        fun ~searchString:(x3405 : string) ->
          fun ?endPosition:(x3406 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3411 = this_to_js Obj.magic x3409 in
                 Ojs.call (Ojs.get_prop_ascii x3411 "endsWith") "apply"
                   [|x3411;((let x3407 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3407 "push"
                                  [|(Ojs.string_to_js x3405)|]);
                             (match x3406 with
                              | Some x3408 ->
                                  ignore
                                    (Ojs.call x3407 "push"
                                       [|(Ojs.float_to_js x3408)|])
                              | None -> ());
                             x3407))|])
    let (normalize :
      'tags this ->
        form:[ `L_s11_NFC  | `L_s12_NFD  | `L_s13_NFKC  | `L_s14_NFKD ] ->
          string)
      =
      fun (x3413 : 'tags this) ->
        fun
          ~form:(x3412 :
                  [ `L_s11_NFC  | `L_s12_NFD  | `L_s13_NFKC  | `L_s14_NFKD ])
          ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3413) "normalize"
               [|((match x3412 with
                   | `L_s11_NFC -> Ojs.string_to_js "NFC"
                   | `L_s12_NFD -> Ojs.string_to_js "NFD"
                   | `L_s13_NFKC -> Ojs.string_to_js "NFKC"
                   | `L_s14_NFKD -> Ojs.string_to_js "NFKD"))|])
    let (normalize' : 'tags this -> ?form:string -> unit -> string) =
      fun (x3418 : 'tags this) ->
        fun ?form:(x3415 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x3420 = this_to_js Obj.magic x3418 in
               Ojs.call (Ojs.get_prop_ascii x3420 "normalize") "apply"
                 [|x3420;((let x3416 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3415 with
                            | Some x3417 ->
                                ignore
                                  (Ojs.call x3416 "push"
                                     [|(Ojs.string_to_js x3417)|])
                            | None -> ());
                           x3416))|])
    let (repeat : 'tags this -> count:float -> string) =
      fun (x3422 : 'tags this) ->
        fun ~count:(x3421 : float) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3422) "repeat"
               [|(Ojs.float_to_js x3421)|])
    let (startsWith :
      'tags this -> searchString:string -> ?position:float -> unit -> bool) =
      fun (x3428 : 'tags this) ->
        fun ~searchString:(x3424 : string) ->
          fun ?position:(x3425 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3430 = this_to_js Obj.magic x3428 in
                 Ojs.call (Ojs.get_prop_ascii x3430 "startsWith") "apply"
                   [|x3430;((let x3426 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3426 "push"
                                  [|(Ojs.string_to_js x3424)|]);
                             (match x3425 with
                              | Some x3427 ->
                                  ignore
                                    (Ojs.call x3426 "push"
                                       [|(Ojs.float_to_js x3427)|])
                              | None -> ());
                             x3426))|])
    let (anchor : 'tags this -> name:string -> string) =
      fun (x3432 : 'tags this) ->
        fun ~name:(x3431 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3432) "anchor"
               [|(Ojs.string_to_js x3431)|])
    let (big : 'tags this -> string) =
      fun (x3434 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3434) "big" [||])
    let (blink : 'tags this -> string) =
      fun (x3436 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3436) "blink" [||])
    let (bold : 'tags this -> string) =
      fun (x3438 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3438) "bold" [||])
    let (fixed : 'tags this -> string) =
      fun (x3440 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3440) "fixed" [||])
    let (fontcolor : 'tags this -> color:string -> string) =
      fun (x3443 : 'tags this) ->
        fun ~color:(x3442 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3443) "fontcolor"
               [|(Ojs.string_to_js x3442)|])
    let (fontsize : 'tags this -> size:float -> string) =
      fun (x3446 : 'tags this) ->
        fun ~size:(x3445 : float) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3446) "fontsize"
               [|(Ojs.float_to_js x3445)|])
    let (fontsize' : 'tags this -> size:string -> string) =
      fun (x3449 : 'tags this) ->
        fun ~size:(x3448 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3449) "fontsize"
               [|(Ojs.string_to_js x3448)|])
    let (italics : 'tags this -> string) =
      fun (x3451 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3451) "italics" [||])
    let (link : 'tags this -> url:string -> string) =
      fun (x3454 : 'tags this) ->
        fun ~url:(x3453 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3454) "link"
               [|(Ojs.string_to_js x3453)|])
    let (small : 'tags this -> string) =
      fun (x3456 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3456) "small" [||])
    let (strike : 'tags this -> string) =
      fun (x3458 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3458) "strike" [||])
    let (sub : 'tags this -> string) =
      fun (x3460 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3460) "sub" [||])
    let (sup : 'tags this -> string) =
      fun (x3462 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3462) "sup" [||])
    let (localeCompare :
      'tags this ->
        that:string ->
          ?locales:string list or_string ->
            ?options:Intl.CollatorOptions.t -> unit -> float)
      =
      fun (x3472 : 'tags this) ->
        fun ~that:(x3464 : string) ->
          fun ?locales:(x3465 : string list or_string option) ->
            fun ?options:(x3466 : Intl.CollatorOptions.t option) ->
              fun () ->
                Ojs.float_of_js
                  (let x3474 = this_to_js Obj.magic x3472 in
                   Ojs.call (Ojs.get_prop_ascii x3474 "localeCompare")
                     "apply"
                     [|x3474;((let x3467 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3467 "push"
                                    [|(Ojs.string_to_js x3464)|]);
                               (match x3465 with
                                | Some x3469 ->
                                    ignore
                                      (Ojs.call x3467 "push"
                                         [|(or_string_to_js
                                              (fun (x3470 : string list) ->
                                                 Ojs.list_to_js
                                                   Ojs.string_to_js x3470)
                                              x3469)|])
                                | None -> ());
                               (match x3466 with
                                | Some x3468 ->
                                    ignore
                                      (Ojs.call x3467 "push"
                                         [|(Intl.CollatorOptions.t_to_js
                                              x3468)|])
                                | None -> ());
                               x3467))|])
    let (toString : 'tags this -> string) =
      fun (x3475 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3475) "toString" [||])
    let (charAt : 'tags this -> pos:float -> string) =
      fun (x3478 : 'tags this) ->
        fun ~pos:(x3477 : float) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3478) "charAt"
               [|(Ojs.float_to_js x3477)|])
    let (charCodeAt : 'tags this -> index:float -> float) =
      fun (x3481 : 'tags this) ->
        fun ~index:(x3480 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3481) "charCodeAt"
               [|(Ojs.float_to_js x3480)|])
    let (concat : 'tags this -> strings:string list -> string) =
      fun (x3486 : 'tags this) ->
        fun ~strings:(x3483 : string list) ->
          Ojs.string_of_js
            (let x3488 = this_to_js Obj.magic x3486 in
             Ojs.call (Ojs.get_prop_ascii x3488 "concat") "apply"
               [|x3488;((let x3484 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x3485 : string) ->
                              ignore
                                (Ojs.call x3484 "push"
                                   [|(Ojs.string_to_js x3485)|])) x3483;
                         x3484))|])
    let (indexOf :
      'tags this -> searchString:string -> ?position:float -> unit -> float)
      =
      fun (x3493 : 'tags this) ->
        fun ~searchString:(x3489 : string) ->
          fun ?position:(x3490 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3495 = this_to_js Obj.magic x3493 in
                 Ojs.call (Ojs.get_prop_ascii x3495 "indexOf") "apply"
                   [|x3495;((let x3491 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3491 "push"
                                  [|(Ojs.string_to_js x3489)|]);
                             (match x3490 with
                              | Some x3492 ->
                                  ignore
                                    (Ojs.call x3491 "push"
                                       [|(Ojs.float_to_js x3492)|])
                              | None -> ());
                             x3491))|])
    let (lastIndexOf :
      'tags this -> searchString:string -> ?position:float -> unit -> float)
      =
      fun (x3500 : 'tags this) ->
        fun ~searchString:(x3496 : string) ->
          fun ?position:(x3497 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3502 = this_to_js Obj.magic x3500 in
                 Ojs.call (Ojs.get_prop_ascii x3502 "lastIndexOf") "apply"
                   [|x3502;((let x3498 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3498 "push"
                                  [|(Ojs.string_to_js x3496)|]);
                             (match x3497 with
                              | Some x3499 ->
                                  ignore
                                    (Ojs.call x3498 "push"
                                       [|(Ojs.float_to_js x3499)|])
                              | None -> ());
                             x3498))|])
    let (localeCompare' : 'tags this -> that:string -> float) =
      fun (x3504 : 'tags this) ->
        fun ~that:(x3503 : string) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3504) "localeCompare"
               [|(Ojs.string_to_js x3503)|])
    let (match_' :
      'tags this -> regexp:RegExp.t or_string -> RegExpMatchArray.t or_null)
      =
      fun (x3508 : 'tags this) ->
        fun ~regexp:(x3506 : RegExp.t or_string) ->
          or_null_of_js RegExpMatchArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x3508) "match"
               [|(or_string_to_js RegExp.t_to_js x3506)|])
    let (replace'' :
      'tags this ->
        searchValue:RegExp.t or_string -> replaceValue:string -> string)
      =
      fun (x3514 : 'tags this) ->
        fun ~searchValue:(x3511 : RegExp.t or_string) ->
          fun ~replaceValue:(x3513 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3514) "replace"
                 [|(or_string_to_js RegExp.t_to_js x3511);(Ojs.string_to_js
                                                             x3513)|])
    let (replace''' :
      'tags this ->
        searchValue:RegExp.t or_string ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x3521 : 'tags this) ->
        fun ~searchValue:(x3516 : RegExp.t or_string) ->
          fun ~replacer:(x3518 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3521) "replace"
                 [|(or_string_to_js RegExp.t_to_js x3516);(Ojs.fun_to_js_args
                                                             (fun (x3519 : _)
                                                                ->
                                                                Ojs.string_to_js
                                                                  (x3518
                                                                    ~substring:(
                                                                    Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x3519 0))
                                                                    ~args:(
                                                                    Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x3519 1))))|])
    let (search' : 'tags this -> regexp:RegExp.t or_string -> float) =
      fun (x3525 : 'tags this) ->
        fun ~regexp:(x3523 : RegExp.t or_string) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3525) "search"
               [|(or_string_to_js RegExp.t_to_js x3523)|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> string)
      =
      fun (x3532 : 'tags this) ->
        fun ?start:(x3527 : float option) ->
          fun ?end_:(x3528 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x3534 = this_to_js Obj.magic x3532 in
                 Ojs.call (Ojs.get_prop_ascii x3534 "slice") "apply"
                   [|x3534;((let x3529 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3527 with
                              | Some x3531 ->
                                  ignore
                                    (Ojs.call x3529 "push"
                                       [|(Ojs.float_to_js x3531)|])
                              | None -> ());
                             (match x3528 with
                              | Some x3530 ->
                                  ignore
                                    (Ojs.call x3529 "push"
                                       [|(Ojs.float_to_js x3530)|])
                              | None -> ());
                             x3529))|])
    let (split' :
      'tags this ->
        separator:RegExp.t or_string -> ?limit:float -> unit -> string list)
      =
      fun (x3540 : 'tags this) ->
        fun ~separator:(x3535 : RegExp.t or_string) ->
          fun ?limit:(x3536 : float option) ->
            fun () ->
              Ojs.list_of_js Ojs.string_of_js
                (let x3542 = this_to_js Obj.magic x3540 in
                 Ojs.call (Ojs.get_prop_ascii x3542 "split") "apply"
                   [|x3542;((let x3537 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3537 "push"
                                  [|(or_string_to_js RegExp.t_to_js x3535)|]);
                             (match x3536 with
                              | Some x3538 ->
                                  ignore
                                    (Ojs.call x3537 "push"
                                       [|(Ojs.float_to_js x3538)|])
                              | None -> ());
                             x3537))|])
    let (substring :
      'tags this -> start:float -> ?end_:float -> unit -> string) =
      fun (x3548 : 'tags this) ->
        fun ~start:(x3544 : float) ->
          fun ?end_:(x3545 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x3550 = this_to_js Obj.magic x3548 in
                 Ojs.call (Ojs.get_prop_ascii x3550 "substring") "apply"
                   [|x3550;((let x3546 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3546 "push"
                                  [|(Ojs.float_to_js x3544)|]);
                             (match x3545 with
                              | Some x3547 ->
                                  ignore
                                    (Ojs.call x3546 "push"
                                       [|(Ojs.float_to_js x3547)|])
                              | None -> ());
                             x3546))|])
    let (toLowerCase : 'tags this -> string) =
      fun (x3551 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3551) "toLowerCase" [||])
    let (toLocaleLowerCase :
      'tags this -> ?locales:string list or_string -> unit -> string) =
      fun (x3558 : 'tags this) ->
        fun ?locales:(x3553 : string list or_string option) ->
          fun () ->
            Ojs.string_of_js
              (let x3560 = this_to_js Obj.magic x3558 in
               Ojs.call (Ojs.get_prop_ascii x3560 "toLocaleLowerCase")
                 "apply"
                 [|x3560;((let x3554 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3553 with
                            | Some x3555 ->
                                ignore
                                  (Ojs.call x3554 "push"
                                     [|(or_string_to_js
                                          (fun (x3556 : string list) ->
                                             Ojs.list_to_js Ojs.string_to_js
                                               x3556) x3555)|])
                            | None -> ());
                           x3554))|])
    let (toUpperCase : 'tags this -> string) =
      fun (x3561 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3561) "toUpperCase" [||])
    let (toLocaleUpperCase :
      'tags this -> ?locales:string list or_string -> unit -> string) =
      fun (x3568 : 'tags this) ->
        fun ?locales:(x3563 : string list or_string option) ->
          fun () ->
            Ojs.string_of_js
              (let x3570 = this_to_js Obj.magic x3568 in
               Ojs.call (Ojs.get_prop_ascii x3570 "toLocaleUpperCase")
                 "apply"
                 [|x3570;((let x3564 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3563 with
                            | Some x3565 ->
                                ignore
                                  (Ojs.call x3564 "push"
                                     [|(or_string_to_js
                                          (fun (x3566 : string list) ->
                                             Ojs.list_to_js Ojs.string_to_js
                                               x3566) x3565)|])
                            | None -> ());
                           x3564))|])
    let (trim : 'tags this -> string) =
      fun (x3571 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3571) "trim" [||])
    let (get_length : 'tags this -> float) =
      fun (x3573 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3573) "length")
    let (substr :
      'tags this -> from:float -> ?length:float -> unit -> string) =
      fun (x3579 : 'tags this) ->
        fun ~from:(x3575 : float) ->
          fun ?length:(x3576 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x3581 = this_to_js Obj.magic x3579 in
                 Ojs.call (Ojs.get_prop_ascii x3581 "substr") "apply"
                   [|x3581;((let x3577 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3577 "push"
                                  [|(Ojs.float_to_js x3575)|]);
                             (match x3576 with
                              | Some x3578 ->
                                  ignore
                                    (Ojs.call x3577 "push"
                                       [|(Ojs.float_to_js x3578)|])
                              | None -> ());
                             x3577))|])
    let (valueOf : 'tags this -> string) =
      fun (x3582 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3582) "valueOf" [||])
    let (get : 'tags this -> float -> string) =
      fun (x3584 : 'tags this) ->
        fun (x3586 : float) ->
          Ojs.string_of_js
            (Ojs.get_prop (this_to_js Obj.magic x3584)
               (Ojs.float_to_js x3586))
    let (fromCodePoint : float list -> string) =
      fun (x3587 : float list) ->
        Ojs.string_of_js
          (let x3590 = Ojs.get_prop_ascii Ojs.global "String" in
           Ojs.call (Ojs.get_prop_ascii x3590 "fromCodePoint") "apply"
             [|x3590;((let x3588 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x3589 : float) ->
                            ignore
                              (Ojs.call x3588 "push"
                                 [|(Ojs.float_to_js x3589)|])) x3587;
                       x3588))|])
    let (raw :
      template:AnonymousInterface5.t -> substitutions:any list -> string) =
      fun ~template:(x3591 : AnonymousInterface5.t) ->
        fun ~substitutions:(x3592 : any list) ->
          Ojs.string_of_js
            (let x3595 = Ojs.get_prop_ascii Ojs.global "String" in
             Ojs.call (Ojs.get_prop_ascii x3595 "raw") "apply"
               [|x3595;((let x3593 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         ignore
                           (Ojs.call x3593 "push"
                              [|(AnonymousInterface5.t_to_js x3591)|]);
                         List.iter
                           (fun (x3594 : any) ->
                              ignore
                                (Ojs.call x3593 "push" [|(any_to_js x3594)|]))
                           x3592;
                         x3593))|])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x3596 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "String")
               (let x3597 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x3596 with
                 | Some x3598 ->
                     ignore (Ojs.call x3597 "push" [|(any_to_js x3598)|])
                 | None -> ());
                x3597))
    let (invoke : ?value:any -> unit -> string) =
      fun ?value:(x3599 : any option) ->
        fun () ->
          Ojs.string_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "String") "apply"
               [|Ojs.null;((let x3600 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x3599 with
                             | Some x3601 ->
                                 ignore
                                   (Ojs.call x3600 "push"
                                      [|(any_to_js x3601)|])
                             | None -> ());
                            x3600))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "String")
             "prototype")
    let (fromCharCode : float list -> string) =
      fun (x3602 : float list) ->
        Ojs.string_of_js
          (let x3605 = Ojs.get_prop_ascii Ojs.global "String" in
           Ojs.call (Ojs.get_prop_ascii x3605 "fromCharCode") "apply"
             [|x3605;((let x3603 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x3604 : float) ->
                            ignore
                              (Ojs.call x3603 "push"
                                 [|(Ojs.float_to_js x3604)|])) x3602;
                       x3603))|])
    let cast_from = Obj.magic
  end
module Set =
  struct
    type 'T t = [ `Set of 'T  | 'T IterableIterator.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3608 : Ojs.t) -> t_of_js __T_of_js x3608
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x3606 : __T t) -> t_to_js __T_to_js x3606
    type 'T tags = [ `Set of 'T  | 'T IterableIterator.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `Set of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x3612 : Ojs.t) -> intf_of_js __tags_of_js x3612
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x3610 : __tags intf) -> intf_to_js __tags_to_js x3610
    let (add : ('tags, 'T) this -> value:'T -> ('tags, 'T) this) =
      fun (x3615 : ('tags, 'T) this) ->
        fun ~value:(x3614 : 'T) ->
          this_of_js Obj.magic Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x3615) "add"
               [|(Obj.magic x3614)|])
    let (clear : ('tags, 'T) this -> unit) =
      fun (x3620 : ('tags, 'T) this) ->
        ignore (Ojs.call (this_to_js Obj.magic Obj.magic x3620) "clear" [||])
    let (delete : ('tags, 'T) this -> value:'T -> bool) =
      fun (x3624 : ('tags, 'T) this) ->
        fun ~value:(x3623 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x3624) "delete"
               [|(Obj.magic x3623)|])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> value2:'T -> set_:'T t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x3635 : ('tags, 'T) this) ->
        fun ~callbackfn:(x3627 : value:'T -> value2:'T -> set_:'T t -> unit)
          ->
          fun ?thisArg:(x3628 : any option) ->
            fun () ->
              ignore
                (let x3638 = this_to_js Obj.magic Obj.magic x3635 in
                 Ojs.call (Ojs.get_prop_ascii x3638 "forEach") "apply"
                   [|x3638;((let x3629 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3629 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3631 : Ojs.t) ->
                                          fun (x3632 : Ojs.t) ->
                                            fun (x3633 : Ojs.t) ->
                                              x3627 ~value:(Obj.magic x3631)
                                                ~value2:(Obj.magic x3632)
                                                ~set_:(t_of_js Obj.magic
                                                         x3633)))|]);
                             (match x3628 with
                              | Some x3630 ->
                                  ignore
                                    (Ojs.call x3629 "push"
                                       [|(any_to_js x3630)|])
                              | None -> ());
                             x3629))|])
    let (has : ('tags, 'T) this -> value:'T -> bool) =
      fun (x3640 : ('tags, 'T) this) ->
        fun ~value:(x3639 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x3640) "has"
               [|(Obj.magic x3639)|])
    let (get_size : ('tags, 'T) this -> float) =
      fun (x3643 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x3643) "size")
    let (entries : ('tags, 'T) this -> ('T * 'T) IterableIterator.t) =
      fun (x3646 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x3649 : Ojs.t) ->
             let x3650 = x3649 in
             ((Obj.magic (Ojs.array_get x3650 0)),
               (Obj.magic (Ojs.array_get x3650 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x3646) "entries" [||])
    let (keys : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x3651 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x3651) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x3655 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x3655) "values" [||])
    let (create : ?values:'T list or_null -> unit -> 'T t) =
      fun ?values:(x3659 : 'T list or_null option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x3660 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x3659 with
                 | Some x3661 ->
                     ignore
                       (Ojs.call x3660 "push"
                          [|(or_null_to_js
                               (fun (x3662 : 'T list) ->
                                  Ojs.list_to_js Obj.magic x3662) x3661)|])
                 | None -> ());
                x3660))
    let (prototype : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Set")
             "prototype")
    let (create' : ?iterable:'T Iterable.t or_null -> unit -> 'T t) =
      fun ?iterable:(x3666 : 'T Iterable.t or_null option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x3667 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x3666 with
                 | Some x3668 ->
                     ignore
                       (Ojs.call x3667 "push"
                          [|(or_null_to_js
                               (fun (x3669 : 'T Iterable.t) ->
                                  Iterable.t_to_js Obj.magic x3669) x3668)|])
                 | None -> ());
                x3667))
    let cast_from = Obj.magic
  end
module ReturnType =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3673 : Ojs.t) -> any_of_js x3673
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x3672 : any) -> any_to_js x3672
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3676 : Ojs.t) -> t_of_js __T_of_js x3676
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x3674 : __T t) -> t_to_js __T_to_js x3674
  end
module Required =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3679 : Ojs.t) -> any_of_js x3679
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x3678 : any) -> any_to_js x3678
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3682 : Ojs.t) -> t_of_js __T_of_js x3682
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x3680 : __T t) -> t_to_js __T_to_js x3680
  end
module PropertyKey =
  struct
    type t = symbol or_string or_number
    let rec t_of_js : Ojs.t -> t =
      fun (x3687 : Ojs.t) ->
        or_number_of_js
          (fun (x3688 : Ojs.t) -> or_string_of_js symbol_of_js x3688) x3687
    and t_to_js : t -> Ojs.t =
      fun (x3684 : symbol or_string or_number) ->
        or_number_to_js
          (fun (x3685 : symbol or_string) ->
             or_string_to_js symbol_to_js x3685) x3684
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3691 : Ojs.t) -> t_of_js x3691
    and t_0_to_js : t_0 -> Ojs.t = fun (x3690 : t) -> t_to_js x3690
  end
module PropertyDescriptor =
  struct
    type t = [ `PropertyDescriptor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3693 : Ojs.t) -> t_of_js x3693
    and t_0_to_js : t_0 -> Ojs.t = fun (x3692 : t) -> t_to_js x3692
    type tags = [ `PropertyDescriptor ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `PropertyDescriptor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3696 : Ojs.t) -> intf_of_js __tags_of_js x3696
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3694 : __tags intf) -> intf_to_js __tags_to_js x3694
    let (get_configurable : 'tags this -> bool) =
      fun (x3698 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3698) "configurable")
    let (set_configurable : 'tags this -> bool -> unit) =
      fun (x3700 : 'tags this) ->
        fun (x3701 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3700) "configurable"
            (Ojs.bool_to_js x3701)
    let (get_enumerable : 'tags this -> bool) =
      fun (x3703 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3703) "enumerable")
    let (set_enumerable : 'tags this -> bool -> unit) =
      fun (x3705 : 'tags this) ->
        fun (x3706 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3705) "enumerable"
            (Ojs.bool_to_js x3706)
    let (get_value : 'tags this -> any) =
      fun (x3708 : 'tags this) ->
        any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x3708) "value")
    let (set_value : 'tags this -> any -> unit) =
      fun (x3710 : 'tags this) ->
        fun (x3711 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3710) "value"
            (any_to_js x3711)
    let (get_writable : 'tags this -> bool) =
      fun (x3713 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3713) "writable")
    let (set_writable : 'tags this -> bool -> unit) =
      fun (x3715 : 'tags this) ->
        fun (x3716 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3715) "writable"
            (Ojs.bool_to_js x3716)
    let (get_ : 'tags this -> any) =
      fun (x3718 : 'tags this) ->
        any_of_js (Ojs.call (this_to_js Obj.magic x3718) "get" [||])
    let (set_ : 'tags this -> v:any -> unit) =
      fun (x3721 : 'tags this) ->
        fun ~v:(x3720 : any) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x3721) "set"
               [|(any_to_js x3720)|])
    let cast_from = Obj.magic
  end
module Function =
  struct
    type t = [ `Function ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3724 : Ojs.t) -> t_of_js x3724
    and t_0_to_js : t_0 -> Ojs.t = fun (x3723 : t) -> t_to_js x3723
    type tags = [ `Function ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Function ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3727 : Ojs.t) -> intf_of_js __tags_of_js x3727
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3725 : __tags intf) -> intf_to_js __tags_to_js x3725
    let (get_name : 'tags this -> string) =
      fun (x3729 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3729) "name")
    let (apply_ :
      'tags this -> this:t -> thisArg:any -> ?argArray:any -> unit -> any) =
      fun (x3736 : 'tags this) ->
        fun ~this:(x3731 : t) ->
          fun ~thisArg:(x3732 : any) ->
            fun ?argArray:(x3733 : any option) ->
              fun () ->
                any_of_js
                  (let x3738 = this_to_js Obj.magic x3736 in
                   Ojs.call (Ojs.get_prop_ascii x3738 "apply") "apply"
                     [|x3738;((let x3734 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3734 "push" [|(t_to_js x3731)|]);
                               ignore
                                 (Ojs.call x3734 "push" [|(any_to_js x3732)|]);
                               (match x3733 with
                                | Some x3735 ->
                                    ignore
                                      (Ojs.call x3734 "push"
                                         [|(any_to_js x3735)|])
                                | None -> ());
                               x3734))|])
    let (call :
      'tags this -> this:t -> thisArg:any -> argArray:any list -> any) =
      fun (x3744 : 'tags this) ->
        fun ~this:(x3739 : t) ->
          fun ~thisArg:(x3740 : any) ->
            fun ~argArray:(x3741 : any list) ->
              any_of_js
                (let x3746 = this_to_js Obj.magic x3744 in
                 Ojs.call (Ojs.get_prop_ascii x3746 "call") "apply"
                   [|x3746;((let x3742 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3742 "push" [|(t_to_js x3739)|]);
                             ignore
                               (Ojs.call x3742 "push" [|(any_to_js x3740)|]);
                             List.iter
                               (fun (x3743 : any) ->
                                  ignore
                                    (Ojs.call x3742 "push"
                                       [|(any_to_js x3743)|])) x3741;
                             x3742))|])
    let (bind :
      'tags this -> this:t -> thisArg:any -> argArray:any list -> any) =
      fun (x3752 : 'tags this) ->
        fun ~this:(x3747 : t) ->
          fun ~thisArg:(x3748 : any) ->
            fun ~argArray:(x3749 : any list) ->
              any_of_js
                (let x3754 = this_to_js Obj.magic x3752 in
                 Ojs.call (Ojs.get_prop_ascii x3754 "bind") "apply"
                   [|x3754;((let x3750 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3750 "push" [|(t_to_js x3747)|]);
                             ignore
                               (Ojs.call x3750 "push" [|(any_to_js x3748)|]);
                             List.iter
                               (fun (x3751 : any) ->
                                  ignore
                                    (Ojs.call x3750 "push"
                                       [|(any_to_js x3751)|])) x3749;
                             x3750))|])
    let (toString : 'tags this -> string) =
      fun (x3755 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3755) "toString" [||])
    let (get_prototype : 'tags this -> any) =
      fun (x3757 : 'tags this) ->
        any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3757) "prototype")
    let (set_prototype : 'tags this -> any -> unit) =
      fun (x3759 : 'tags this) ->
        fun (x3760 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3759) "prototype"
            (any_to_js x3760)
    let (get_length : 'tags this -> float) =
      fun (x3762 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3762) "length")
    let (get_arguments : 'tags this -> any) =
      fun (x3764 : 'tags this) ->
        any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3764) "arguments")
    let (set_arguments : 'tags this -> any -> unit) =
      fun (x3766 : 'tags this) ->
        fun (x3767 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3766) "arguments"
            (any_to_js x3767)
    let (get_caller : 'tags this -> t) =
      fun (x3769 : 'tags this) ->
        t_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x3769) "caller")
    let (set_caller : 'tags this -> t -> unit) =
      fun (x3771 : 'tags this) ->
        fun (x3772 : t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3771) "caller"
            (t_to_js x3772)
    let (create : string list -> t) =
      fun (x3774 : string list) ->
        t_of_js
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Function")
             (let x3775 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x3776 : string) ->
                   ignore
                     (Ojs.call x3775 "push" [|(Ojs.string_to_js x3776)|]))
                x3774;
              x3775))
    let (invoke : string list -> t) =
      fun (x3777 : string list) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Function") "apply"
             [|Ojs.null;((let x3778 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x3779 : string) ->
                               ignore
                                 (Ojs.call x3778 "push"
                                    [|(Ojs.string_to_js x3779)|])) x3777;
                          x3778))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Function")
             "prototype")
    let cast_from = Obj.magic
  end
module Reflect =
  struct
    let (apply_ :
      target:Function.t ->
        thisArgument:any -> argumentsList:any ArrayLike.t -> any)
      =
      fun ~target:(x3780 : Function.t) ->
        fun ~thisArgument:(x3781 : any) ->
          fun ~argumentsList:(x3782 : any ArrayLike.t) ->
            any_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "apply"
                 [|(Function.t_to_js x3780);(any_to_js x3781);(ArrayLike.t_to_js
                                                                 any_to_js
                                                                 x3782)|])
    let (construct :
      target:Function.t ->
        argumentsList:any ArrayLike.t -> ?newTarget:Function.t -> unit -> any)
      =
      fun ~target:(x3784 : Function.t) ->
        fun ~argumentsList:(x3785 : any ArrayLike.t) ->
          fun ?newTarget:(x3786 : Function.t option) ->
            fun () ->
              any_of_js
                (let x3790 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                 Ojs.call (Ojs.get_prop_ascii x3790 "construct") "apply"
                   [|x3790;((let x3787 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3787 "push"
                                  [|(Function.t_to_js x3784)|]);
                             ignore
                               (Ojs.call x3787 "push"
                                  [|(ArrayLike.t_to_js any_to_js x3785)|]);
                             (match x3786 with
                              | Some x3788 ->
                                  ignore
                                    (Ojs.call x3787 "push"
                                       [|(Function.t_to_js x3788)|])
                              | None -> ());
                             x3787))|])
    let (defineProperty :
      target:untyped_object ->
        propertyKey:PropertyKey.t -> attributes:PropertyDescriptor.t -> bool)
      =
      fun ~target:(x3791 : untyped_object) ->
        fun ~propertyKey:(x3792 : PropertyKey.t) ->
          fun ~attributes:(x3793 : PropertyDescriptor.t) ->
            Ojs.bool_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
                 "defineProperty"
                 [|(untyped_object_to_js x3791);(PropertyKey.t_to_js x3792);(
                   PropertyDescriptor.t_to_js x3793)|])
    let (deleteProperty :
      target:untyped_object -> propertyKey:PropertyKey.t -> bool) =
      fun ~target:(x3794 : untyped_object) ->
        fun ~propertyKey:(x3795 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
               "deleteProperty"
               [|(untyped_object_to_js x3794);(PropertyKey.t_to_js x3795)|])
    let (get_ :
      target:untyped_object ->
        propertyKey:PropertyKey.t -> ?receiver:any -> unit -> any)
      =
      fun ~target:(x3796 : untyped_object) ->
        fun ~propertyKey:(x3797 : PropertyKey.t) ->
          fun ?receiver:(x3798 : any option) ->
            fun () ->
              any_of_js
                (let x3801 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                 Ojs.call (Ojs.get_prop_ascii x3801 "get") "apply"
                   [|x3801;((let x3799 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3799 "push"
                                  [|(untyped_object_to_js x3796)|]);
                             ignore
                               (Ojs.call x3799 "push"
                                  [|(PropertyKey.t_to_js x3797)|]);
                             (match x3798 with
                              | Some x3800 ->
                                  ignore
                                    (Ojs.call x3799 "push"
                                       [|(any_to_js x3800)|])
                              | None -> ());
                             x3799))|])
    let (getOwnPropertyDescriptor :
      target:untyped_object ->
        propertyKey:PropertyKey.t -> PropertyDescriptor.t or_undefined)
      =
      fun ~target:(x3802 : untyped_object) ->
        fun ~propertyKey:(x3803 : PropertyKey.t) ->
          or_undefined_of_js PropertyDescriptor.t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
               "getOwnPropertyDescriptor"
               [|(untyped_object_to_js x3802);(PropertyKey.t_to_js x3803)|])
    let (getPrototypeOf : untyped_object -> untyped_object or_null) =
      fun (x3805 : untyped_object) ->
        or_null_of_js untyped_object_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
             "getPrototypeOf" [|(untyped_object_to_js x3805)|])
    let (has : target:untyped_object -> propertyKey:PropertyKey.t -> bool) =
      fun ~target:(x3807 : untyped_object) ->
        fun ~propertyKey:(x3808 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "has"
               [|(untyped_object_to_js x3807);(PropertyKey.t_to_js x3808)|])
    let (isExtensible : untyped_object -> bool) =
      fun (x3809 : untyped_object) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "isExtensible"
             [|(untyped_object_to_js x3809)|])
    let (ownKeys : untyped_object -> symbol or_string list) =
      fun (x3810 : untyped_object) ->
        Ojs.list_of_js
          (fun (x3811 : Ojs.t) -> or_string_of_js symbol_of_js x3811)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "ownKeys"
             [|(untyped_object_to_js x3810)|])
    let (preventExtensions : untyped_object -> bool) =
      fun (x3813 : untyped_object) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
             "preventExtensions" [|(untyped_object_to_js x3813)|])
    let (set_ :
      target:untyped_object ->
        propertyKey:PropertyKey.t ->
          value:any -> ?receiver:any -> unit -> bool)
      =
      fun ~target:(x3814 : untyped_object) ->
        fun ~propertyKey:(x3815 : PropertyKey.t) ->
          fun ~value:(x3816 : any) ->
            fun ?receiver:(x3817 : any option) ->
              fun () ->
                Ojs.bool_of_js
                  (let x3820 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                   Ojs.call (Ojs.get_prop_ascii x3820 "set") "apply"
                     [|x3820;((let x3818 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3818 "push"
                                    [|(untyped_object_to_js x3814)|]);
                               ignore
                                 (Ojs.call x3818 "push"
                                    [|(PropertyKey.t_to_js x3815)|]);
                               ignore
                                 (Ojs.call x3818 "push" [|(any_to_js x3816)|]);
                               (match x3817 with
                                | Some x3819 ->
                                    ignore
                                      (Ojs.call x3818 "push"
                                         [|(any_to_js x3819)|])
                                | None -> ());
                               x3818))|])
    let (setPrototypeOf :
      target:untyped_object -> proto:untyped_object or_null -> bool) =
      fun ~target:(x3821 : untyped_object) ->
        fun ~proto:(x3822 : untyped_object or_null) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
               "setPrototypeOf"
               [|(untyped_object_to_js x3821);(or_null_to_js
                                                 untyped_object_to_js x3822)|])
  end
module ReferenceError =
  struct
    type t = [ `Error  | `ReferenceError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3825 : Ojs.t) -> t_of_js x3825
    and t_0_to_js : t_0 -> Ojs.t = fun (x3824 : t) -> t_to_js x3824
    type tags = [ `Error  | `ReferenceError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ReferenceError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3828 : Ojs.t) -> intf_of_js __tags_of_js x3828
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3826 : __tags intf) -> intf_to_js __tags_to_js x3826
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x3830 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "ReferenceError")
               (let x3831 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x3830 with
                 | Some x3832 ->
                     ignore
                       (Ojs.call x3831 "push" [|(Ojs.string_to_js x3832)|])
                 | None -> ());
                x3831))
    let (invoke : ?message:string -> unit -> t) =
      fun ?message:(x3833 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "ReferenceError")
               "apply"
               [|Ojs.null;((let x3834 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x3833 with
                             | Some x3835 ->
                                 ignore
                                   (Ojs.call x3834 "push"
                                      [|(Ojs.string_to_js x3835)|])
                             | None -> ());
                            x3834))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "ReferenceError") "prototype")
    let cast_from = Obj.magic
  end
module Record =
  struct
    type ('K, 'T) t = any
    let rec t_of_js :
      'K 'T . (Ojs.t -> 'K) -> (Ojs.t -> 'T) -> Ojs.t -> ('K, 'T) t = fun
      (type __K) -> fun (type __T) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x3837 : Ojs.t) -> any_of_js x3837
    and t_to_js :
      'K 'T . ('K -> Ojs.t) -> ('T -> Ojs.t) -> ('K, 'T) t -> Ojs.t = fun
      (type __K) -> fun (type __T) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x3836 : any) -> any_to_js x3836
    type ('K, 'T) t_2 = ('K, 'T) t
    let rec t_2_of_js :
      'K 'T . (Ojs.t -> 'K) -> (Ojs.t -> 'T) -> Ojs.t -> ('K, 'T) t_2 = fun
      (type __K) -> fun (type __T) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x3841 : Ojs.t) -> t_of_js __K_of_js __T_of_js x3841
    and t_2_to_js :
      'K 'T . ('K -> Ojs.t) -> ('T -> Ojs.t) -> ('K, 'T) t_2 -> Ojs.t = fun
      (type __K) -> fun (type __T) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x3838 : (__K, __T) t) -> t_to_js __K_to_js __T_to_js x3838
  end
module ReadonlySet =
  struct
    type 'T t = [ `ReadonlySet of 'T  | 'T IterableIterator.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3846 : Ojs.t) -> t_of_js __T_of_js x3846
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x3844 : __T t) -> t_to_js __T_to_js x3844
    type 'T tags = [ `ReadonlySet of 'T  | 'T IterableIterator.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ReadonlySet of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x3850 : Ojs.t) -> intf_of_js __tags_of_js x3850
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x3848 : __tags intf) -> intf_to_js __tags_to_js x3848
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> value2:'T -> set_:'T t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x3860 : ('tags, 'T) this) ->
        fun ~callbackfn:(x3852 : value:'T -> value2:'T -> set_:'T t -> unit)
          ->
          fun ?thisArg:(x3853 : any option) ->
            fun () ->
              ignore
                (let x3863 = this_to_js Obj.magic Obj.magic x3860 in
                 Ojs.call (Ojs.get_prop_ascii x3863 "forEach") "apply"
                   [|x3863;((let x3854 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3854 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3856 : Ojs.t) ->
                                          fun (x3857 : Ojs.t) ->
                                            fun (x3858 : Ojs.t) ->
                                              x3852 ~value:(Obj.magic x3856)
                                                ~value2:(Obj.magic x3857)
                                                ~set_:(t_of_js Obj.magic
                                                         x3858)))|]);
                             (match x3853 with
                              | Some x3855 ->
                                  ignore
                                    (Ojs.call x3854 "push"
                                       [|(any_to_js x3855)|])
                              | None -> ());
                             x3854))|])
    let (has : ('tags, 'T) this -> value:'T -> bool) =
      fun (x3865 : ('tags, 'T) this) ->
        fun ~value:(x3864 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x3865) "has"
               [|(Obj.magic x3864)|])
    let (get_size : ('tags, 'T) this -> float) =
      fun (x3868 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x3868) "size")
    let (entries : ('tags, 'T) this -> ('T * 'T) IterableIterator.t) =
      fun (x3871 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x3874 : Ojs.t) ->
             let x3875 = x3874 in
             ((Obj.magic (Ojs.array_get x3875 0)),
               (Obj.magic (Ojs.array_get x3875 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x3871) "entries" [||])
    let (keys : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x3876 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x3876) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x3880 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x3880) "values" [||])
    let cast_from = Obj.magic
  end
module ReadonlyMap =
  struct
    type ('K, 'V) t =
      [ `ReadonlyMap of ('K * 'V)  | ('K * 'V) IterableIterator.tags_1] intf
    let rec t_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t =
      fun _K -> fun _V -> Obj.magic
    and t_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t -> Ojs.t =
      fun _K -> fun _V -> Obj.magic
    type ('K, 'V) t_2 = ('K, 'V) t
    let rec t_2_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t_2 = fun
      (type __K) -> fun (type __V) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__V_of_js : Ojs.t -> __V) ->
          fun (x3887 : Ojs.t) -> t_of_js __K_of_js __V_of_js x3887
    and t_2_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t_2 -> Ojs.t = fun
      (type __K) -> fun (type __V) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__V_to_js : __V -> Ojs.t) ->
          fun (x3884 : (__K, __V) t) -> t_to_js __K_to_js __V_to_js x3884
    type ('K, 'V) tags =
      [ `ReadonlyMap of ('K * 'V)  | ('K * 'V) IterableIterator.tags_1]
    type ('K, 'V) tags_2 = ('K, 'V) tags
    type ('tags, 'K, 'V) this =
      'tags intf constraint 'tags = [> `ReadonlyMap of ('K * 'V) ]
    let rec this_of_js :
      'tags 'K 'V .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('tags, 'K, 'V) this
      = fun (type __tags) -> fun (type __K) -> fun (type __V) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (__V_of_js : Ojs.t -> __V) ->
            fun (x3892 : Ojs.t) -> intf_of_js __tags_of_js x3892
    and this_to_js :
      'tags 'K 'V .
        ('tags -> Ojs.t) ->
          ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('tags, 'K, 'V) this -> Ojs.t
      = fun (type __tags) -> fun (type __K) -> fun (type __V) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (__V_to_js : __V -> Ojs.t) ->
            fun (x3890 : __tags intf) -> intf_to_js __tags_to_js x3890
    let (forEach :
      ('tags, 'K, 'V) this ->
        callbackfn:(value:'V -> key:'K -> map:('K, 'V) t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x3903 : ('tags, 'K, 'V) this) ->
        fun
          ~callbackfn:(x3894 : value:'V -> key:'K -> map:('K, 'V) t -> unit)
          ->
          fun ?thisArg:(x3895 : any option) ->
            fun () ->
              ignore
                (let x3907 = this_to_js Obj.magic Obj.magic Obj.magic x3903 in
                 Ojs.call (Ojs.get_prop_ascii x3907 "forEach") "apply"
                   [|x3907;((let x3896 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3896 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3898 : Ojs.t) ->
                                          fun (x3899 : Ojs.t) ->
                                            fun (x3900 : Ojs.t) ->
                                              x3894 ~value:(Obj.magic x3898)
                                                ~key:(Obj.magic x3899)
                                                ~map:(t_of_js Obj.magic
                                                        Obj.magic x3900)))|]);
                             (match x3895 with
                              | Some x3897 ->
                                  ignore
                                    (Ojs.call x3896 "push"
                                       [|(any_to_js x3897)|])
                              | None -> ());
                             x3896))|])
    let (get_ : ('tags, 'K, 'V) this -> key:'K -> 'V or_undefined) =
      fun (x3909 : ('tags, 'K, 'V) this) ->
        fun ~key:(x3908 : 'K) ->
          or_undefined_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x3909) "get"
               [|(Obj.magic x3908)|])
    let (has : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x3915 : ('tags, 'K, 'V) this) ->
        fun ~key:(x3914 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x3915) "has"
               [|(Obj.magic x3914)|])
    let (get_size : ('tags, 'K, 'V) this -> float) =
      fun (x3919 : ('tags, 'K, 'V) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (this_to_js Obj.magic Obj.magic Obj.magic x3919) "size")
    let (entries : ('tags, 'K, 'V) this -> ('K * 'V) IterableIterator.t) =
      fun (x3923 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js
          (fun (x3927 : Ojs.t) ->
             let x3928 = x3927 in
             ((Obj.magic (Ojs.array_get x3928 0)),
               (Obj.magic (Ojs.array_get x3928 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x3923)
             "entries" [||])
    let (keys : ('tags, 'K, 'V) this -> 'K IterableIterator.t) =
      fun (x3929 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x3929) "keys"
             [||])
    let (values : ('tags, 'K, 'V) this -> 'V IterableIterator.t) =
      fun (x3934 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x3934) "values"
             [||])
    let cast_from = Obj.magic
  end
module RangeError =
  struct
    type t = [ `Error  | `RangeError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3940 : Ojs.t) -> t_of_js x3940
    and t_0_to_js : t_0 -> Ojs.t = fun (x3939 : t) -> t_to_js x3939
    type tags = [ `Error  | `RangeError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RangeError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3943 : Ojs.t) -> intf_of_js __tags_of_js x3943
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3941 : __tags intf) -> intf_to_js __tags_to_js x3941
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x3945 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RangeError")
               (let x3946 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x3945 with
                 | Some x3947 ->
                     ignore
                       (Ojs.call x3946 "push" [|(Ojs.string_to_js x3947)|])
                 | None -> ());
                x3946))
    let (invoke : ?message:string -> unit -> t) =
      fun ?message:(x3948 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "RangeError") "apply"
               [|Ojs.null;((let x3949 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x3948 with
                             | Some x3950 ->
                                 ignore
                                   (Ojs.call x3949 "push"
                                      [|(Ojs.string_to_js x3950)|])
                             | None -> ());
                            x3949))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RangeError")
             "prototype")
    let cast_from = Obj.magic
  end
module ProxyHandler =
  struct
    type 'T t = [ `ProxyHandler of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3953 : Ojs.t) -> t_of_js __T_of_js x3953
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x3951 : __T t) -> t_to_js __T_to_js x3951
    type 'T tags = [ `ProxyHandler of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ProxyHandler of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x3957 : Ojs.t) -> intf_of_js __tags_of_js x3957
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x3955 : __tags intf) -> intf_to_js __tags_to_js x3955
    let (apply_ :
      ('tags, 'T) this ->
        target:'T -> thisArg:any -> argArray:any list -> any)
      =
      fun (x3963 : ('tags, 'T) this) ->
        fun ~target:(x3959 : 'T) ->
          fun ~thisArg:(x3960 : any) ->
            fun ~argArray:(x3961 : any list) ->
              any_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x3963) "apply"
                   [|(Obj.magic x3959);(any_to_js x3960);(Ojs.list_to_js
                                                            any_to_js x3961)|])
    let (construct :
      ('tags, 'T) this ->
        target:'T ->
          argArray:any list -> newTarget:Function.t -> untyped_object)
      =
      fun (x3970 : ('tags, 'T) this) ->
        fun ~target:(x3966 : 'T) ->
          fun ~argArray:(x3967 : any list) ->
            fun ~newTarget:(x3969 : Function.t) ->
              untyped_object_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x3970) "construct"
                   [|(Obj.magic x3966);(Ojs.list_to_js any_to_js x3967);(
                     Function.t_to_js x3969)|])
    let (defineProperty :
      ('tags, 'T) this ->
        target:'T ->
          p:symbol or_string -> attributes:PropertyDescriptor.t -> bool)
      =
      fun (x3977 : ('tags, 'T) this) ->
        fun ~target:(x3973 : 'T) ->
          fun ~p:(x3974 : symbol or_string) ->
            fun ~attributes:(x3976 : PropertyDescriptor.t) ->
              Ojs.bool_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x3977)
                   "defineProperty"
                   [|(Obj.magic x3973);(or_string_to_js symbol_to_js x3974);(
                     PropertyDescriptor.t_to_js x3976)|])
    let (deleteProperty :
      ('tags, 'T) this -> target:'T -> p:symbol or_string -> bool) =
      fun (x3983 : ('tags, 'T) this) ->
        fun ~target:(x3980 : 'T) ->
          fun ~p:(x3981 : symbol or_string) ->
            Ojs.bool_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x3983)
                 "deleteProperty"
                 [|(Obj.magic x3980);(or_string_to_js symbol_to_js x3981)|])
    let (get_ :
      ('tags, 'T) this ->
        target:'T -> p:symbol or_string -> receiver:any -> any)
      =
      fun (x3990 : ('tags, 'T) this) ->
        fun ~target:(x3986 : 'T) ->
          fun ~p:(x3987 : symbol or_string) ->
            fun ~receiver:(x3989 : any) ->
              any_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x3990) "get"
                   [|(Obj.magic x3986);(or_string_to_js symbol_to_js x3987);(
                     any_to_js x3989)|])
    let (getOwnPropertyDescriptor :
      ('tags, 'T) this ->
        target:'T -> p:symbol or_string -> PropertyDescriptor.t or_undefined)
      =
      fun (x3996 : ('tags, 'T) this) ->
        fun ~target:(x3993 : 'T) ->
          fun ~p:(x3994 : symbol or_string) ->
            or_undefined_of_js PropertyDescriptor.t_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x3996)
                 "getOwnPropertyDescriptor"
                 [|(Obj.magic x3993);(or_string_to_js symbol_to_js x3994)|])
    let (getPrototypeOf :
      ('tags, 'T) this -> target:'T -> untyped_object or_null) =
      fun (x4001 : ('tags, 'T) this) ->
        fun ~target:(x4000 : 'T) ->
          or_null_of_js untyped_object_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4001) "getPrototypeOf"
               [|(Obj.magic x4000)|])
    let (has : ('tags, 'T) this -> target:'T -> p:symbol or_string -> bool) =
      fun (x4008 : ('tags, 'T) this) ->
        fun ~target:(x4005 : 'T) ->
          fun ~p:(x4006 : symbol or_string) ->
            Ojs.bool_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x4008) "has"
                 [|(Obj.magic x4005);(or_string_to_js symbol_to_js x4006)|])
    let (isExtensible : ('tags, 'T) this -> target:'T -> bool) =
      fun (x4012 : ('tags, 'T) this) ->
        fun ~target:(x4011 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4012) "isExtensible"
               [|(Obj.magic x4011)|])
    let (ownKeys :
      ('tags, 'T) this -> target:'T -> symbol or_string ArrayLike.t) =
      fun (x4016 : ('tags, 'T) this) ->
        fun ~target:(x4015 : 'T) ->
          ArrayLike.t_of_js
            (fun (x4019 : Ojs.t) -> or_string_of_js symbol_of_js x4019)
            (Ojs.call (this_to_js Obj.magic Obj.magic x4016) "ownKeys"
               [|(Obj.magic x4015)|])
    let (preventExtensions : ('tags, 'T) this -> target:'T -> bool) =
      fun (x4022 : ('tags, 'T) this) ->
        fun ~target:(x4021 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4022)
               "preventExtensions" [|(Obj.magic x4021)|])
    let (set_ :
      ('tags, 'T) this ->
        target:'T -> p:symbol or_string -> value:any -> receiver:any -> bool)
      =
      fun (x4030 : ('tags, 'T) this) ->
        fun ~target:(x4025 : 'T) ->
          fun ~p:(x4026 : symbol or_string) ->
            fun ~value:(x4028 : any) ->
              fun ~receiver:(x4029 : any) ->
                Ojs.bool_of_js
                  (Ojs.call (this_to_js Obj.magic Obj.magic x4030) "set"
                     [|(Obj.magic x4025);(or_string_to_js symbol_to_js x4026);(
                       any_to_js x4028);(any_to_js x4029)|])
    let (setPrototypeOf :
      ('tags, 'T) this -> target:'T -> v:untyped_object or_null -> bool) =
      fun (x4036 : ('tags, 'T) this) ->
        fun ~target:(x4033 : 'T) ->
          fun ~v:(x4034 : untyped_object or_null) ->
            Ojs.bool_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x4036)
                 "setPrototypeOf"
                 [|(Obj.magic x4033);(or_null_to_js untyped_object_to_js
                                        x4034)|])
    let cast_from = Obj.magic
  end
module ProxyStatic =
  struct
    module AnonymousInterface28 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) -> fun (x4040 : Ojs.t) -> x4040
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) -> fun (x4039 : Ojs.t) -> x4039
        let (get_proxy : 'T t -> 'T) =
          fun (x4041 : 'T t) ->
            Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x4041) "proxy")
        let (set_proxy : 'T t -> 'T -> unit) =
          fun (x4043 : 'T t) ->
            fun (x4044 : 'T) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4043) "proxy"
                (Obj.magic x4044)
        let (revoke : 'T t -> unit) =
          fun (x4046 : 'T t) ->
            ignore (Ojs.call (t_to_js Obj.magic x4046) "revoke" [||])
      end
    let (revocable :
      target:'T -> handler:'T ProxyHandler.t -> 'T AnonymousInterface28.t) =
      fun ~target:(x4048 : 'T) ->
        fun ~handler:(x4049 : 'T ProxyHandler.t) ->
          AnonymousInterface28.t_of_js Obj.magic
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Proxy") "revocable"
               [|(Obj.magic x4048);(ProxyHandler.t_to_js Obj.magic x4049)|])
    let (create : target:'T -> handler:'T ProxyHandler.t -> 'T) =
      fun ~target:(x4052 : 'T) ->
        fun ~handler:(x4053 : 'T ProxyHandler.t) ->
          Obj.magic
            (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Proxy")
               [|(Obj.magic x4052);(ProxyHandler.t_to_js Obj.magic x4053)|])
  end
module ProxyConstructor =
  struct
    module AnonymousInterface28 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) -> fun (x4056 : Ojs.t) -> x4056
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) -> fun (x4055 : Ojs.t) -> x4055
        let (get_proxy : 'T t -> 'T) =
          fun (x4057 : 'T t) ->
            Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x4057) "proxy")
        let (set_proxy : 'T t -> 'T -> unit) =
          fun (x4059 : 'T t) ->
            fun (x4060 : 'T) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4059) "proxy"
                (Obj.magic x4060)
        let (revoke : 'T t -> unit) =
          fun (x4062 : 'T t) ->
            ignore (Ojs.call (t_to_js Obj.magic x4062) "revoke" [||])
      end
    type t = [ `ProxyConstructor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4065 : Ojs.t) -> t_of_js x4065
    and t_0_to_js : t_0 -> Ojs.t = fun (x4064 : t) -> t_to_js x4064
    type tags = [ `ProxyConstructor ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ProxyConstructor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4068 : Ojs.t) -> intf_of_js __tags_of_js x4068
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4066 : __tags intf) -> intf_to_js __tags_to_js x4066
    let (revocable :
      'tags this ->
        target:'T -> handler:'T ProxyHandler.t -> 'T AnonymousInterface28.t)
      =
      fun (x4073 : 'tags this) ->
        fun ~target:(x4070 : 'T) ->
          fun ~handler:(x4071 : 'T ProxyHandler.t) ->
            AnonymousInterface28.t_of_js Obj.magic
              (Ojs.call (this_to_js Obj.magic x4073) "revocable"
                 [|(Obj.magic x4070);(ProxyHandler.t_to_js Obj.magic x4071)|])
    let (create : 'tags this -> target:'T -> handler:'T ProxyHandler.t -> 'T)
      =
      fun (x4079 : 'tags this) ->
        fun ~target:(x4076 : 'T) ->
          fun ~handler:(x4077 : 'T ProxyHandler.t) ->
            Obj.magic
              (Ojs.new_obj (this_to_js Obj.magic x4079)
                 [|(Obj.magic x4076);(ProxyHandler.t_to_js Obj.magic x4077)|])
    let cast_from = Obj.magic
  end
module ThisType =
  struct
    type 'T t = [ `ThisType of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4083 : Ojs.t) -> t_of_js __T_of_js x4083
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4081 : __T t) -> t_to_js __T_to_js x4081
    type 'T tags = [ `ThisType of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ThisType of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4087 : Ojs.t) -> intf_of_js __tags_of_js x4087
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4085 : __tags intf) -> intf_to_js __tags_to_js x4085
    let cast_from = Obj.magic
  end
module Readonly =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4090 : Ojs.t) -> any_of_js x4090
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x4089 : any) -> any_to_js x4089
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4093 : Ojs.t) -> t_of_js __T_of_js x4093
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4091 : __T t) -> t_to_js __T_to_js x4091
  end
module PropertyDescriptorMap =
  struct
    type t = [ `PropertyDescriptorMap ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4096 : Ojs.t) -> t_of_js x4096
    and t_0_to_js : t_0 -> Ojs.t = fun (x4095 : t) -> t_to_js x4095
    type tags = [ `PropertyDescriptorMap ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `PropertyDescriptorMap ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4099 : Ojs.t) -> intf_of_js __tags_of_js x4099
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4097 : __tags intf) -> intf_to_js __tags_to_js x4097
    let (get : 'tags this -> string -> PropertyDescriptor.t) =
      fun (x4101 : 'tags this) ->
        fun (x4103 : string) ->
          PropertyDescriptor.t_of_js
            (Ojs.get_prop (this_to_js Obj.magic x4101)
               (Ojs.string_to_js x4103))
    let (set : 'tags this -> string -> PropertyDescriptor.t -> unit) =
      fun (x4104 : 'tags this) ->
        fun (x4106 : string) ->
          fun (x4107 : PropertyDescriptor.t) ->
            Ojs.set_prop (this_to_js Obj.magic x4104)
              (Ojs.string_to_js x4106) (PropertyDescriptor.t_to_js x4107)
    let cast_from = Obj.magic
  end
module Object =
  struct
    module AnonymousInterface31 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) -> fun (x4109 : Ojs.t) -> x4109
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) -> fun (x4108 : Ojs.t) -> x4108
        let (get : 'T t -> string -> 'T) =
          fun (x4110 : 'T t) ->
            fun (x4112 : string) ->
              Obj.magic
                (Ojs.get_prop (t_to_js Obj.magic x4110)
                   (Ojs.string_to_js x4112))
        let (set : 'T t -> string -> 'T -> unit) =
          fun (x4113 : 'T t) ->
            fun (x4115 : string) ->
              fun (x4116 : 'T) ->
                Ojs.set_prop (t_to_js Obj.magic x4113)
                  (Ojs.string_to_js x4115) (Obj.magic x4116)
      end
    module AnonymousInterface30 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) -> fun (x4118 : Ojs.t) -> x4118
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) -> fun (x4117 : Ojs.t) -> x4117
        let (get : 'T t -> string -> 'T) =
          fun (x4119 : 'T t) ->
            fun (x4121 : string) ->
              Obj.magic
                (Ojs.get_prop (t_to_js Obj.magic x4119)
                   (Ojs.string_to_js x4121))
        let (set : 'T t -> string -> 'T -> unit) =
          fun (x4122 : 'T t) ->
            fun (x4124 : string) ->
              fun (x4125 : 'T) ->
                Ojs.set_prop (t_to_js Obj.magic x4122)
                  (Ojs.string_to_js x4124) (Obj.magic x4125)
      end
    module AnonymousInterface14 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x4127 : Ojs.t) -> x4127
        and t_to_js : t -> Ojs.t = fun (x4126 : Ojs.t) -> x4126
        let (get : t -> string -> PropertyDescriptor.t) =
          fun (x4128 : t) ->
            fun (x4129 : string) ->
              PropertyDescriptor.t_of_js
                (Ojs.get_prop (t_to_js x4128) (Ojs.string_to_js x4129))
        let (set : t -> string -> PropertyDescriptor.t -> unit) =
          fun (x4130 : t) ->
            fun (x4131 : string) ->
              fun (x4132 : PropertyDescriptor.t) ->
                Ojs.set_prop (t_to_js x4130) (Ojs.string_to_js x4131)
                  (PropertyDescriptor.t_to_js x4132)
      end
    module AnonymousInterface0 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x4134 : Ojs.t) -> x4134
        and t_to_js : t -> Ojs.t = fun (x4133 : Ojs.t) -> x4133
      end
    type t = [ `Object ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4136 : Ojs.t) -> t_of_js x4136
    and t_0_to_js : t_0 -> Ojs.t = fun (x4135 : t) -> t_to_js x4135
    type tags = [ `Object ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Object ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4139 : Ojs.t) -> intf_of_js __tags_of_js x4139
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4137 : __tags intf) -> intf_to_js __tags_to_js x4137
    let (get_constructor : 'tags this -> Function.t) =
      fun (x4141 : 'tags this) ->
        Function.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4141) "constructor")
    let (set_constructor : 'tags this -> Function.t -> unit) =
      fun (x4143 : 'tags this) ->
        fun (x4144 : Function.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4143) "constructor"
            (Function.t_to_js x4144)
    let (toString : 'tags this -> string) =
      fun (x4146 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4146) "toString" [||])
    let (toLocaleString : 'tags this -> string) =
      fun (x4148 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4148) "toLocaleString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x4150 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x4150) "valueOf" [||])
    let (hasOwnProperty : 'tags this -> v:PropertyKey.t -> bool) =
      fun (x4153 : 'tags this) ->
        fun ~v:(x4152 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x4153) "hasOwnProperty"
               [|(PropertyKey.t_to_js x4152)|])
    let (isPrototypeOf : 'tags this -> v:t -> bool) =
      fun (x4156 : 'tags this) ->
        fun ~v:(x4155 : t) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x4156) "isPrototypeOf"
               [|(t_to_js x4155)|])
    let (propertyIsEnumerable : 'tags this -> v:PropertyKey.t -> bool) =
      fun (x4159 : 'tags this) ->
        fun ~v:(x4158 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x4159) "propertyIsEnumerable"
               [|(PropertyKey.t_to_js x4158)|])
    let (fromEntries :
      (PropertyKey.t * 'T) Iterable.t -> 'T AnonymousInterface30.t) =
      fun (x4161 : (PropertyKey.t * 'T) Iterable.t) ->
        AnonymousInterface30.t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "fromEntries"
             [|(Iterable.t_to_js
                  (fun (x4162 : (PropertyKey.t * 'T)) ->
                     let (x4163, x4164) = x4162 in
                     let x4165 = Ojs.array_make 2 in
                     Ojs.array_set x4165 0 (PropertyKey.t_to_js x4163);
                     Ojs.array_set x4165 1 (Obj.magic x4164);
                     x4165) x4161)|])
    let (fromEntries' : any list Iterable.t -> any) =
      fun (x4167 : any list Iterable.t) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "fromEntries"
             [|(Iterable.t_to_js
                  (fun (x4168 : any list) -> Ojs.list_to_js any_to_js x4168)
                  x4167)|])
    let (values :
      ('T ArrayLike.t, 'T AnonymousInterface31.t) union2 -> 'T list) =
      fun (x4170 : ('T ArrayLike.t, 'T AnonymousInterface31.t) union2) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "values"
             [|(union2_to_js
                  (fun (x4171 : 'T ArrayLike.t) ->
                     ArrayLike.t_to_js Obj.magic x4171)
                  (fun (x4173 : 'T AnonymousInterface31.t) ->
                     AnonymousInterface31.t_to_js Obj.magic x4173) x4170)|])
    let (values' : AnonymousInterface0.t -> any list) =
      fun (x4176 : AnonymousInterface0.t) ->
        Ojs.list_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "values"
             [|(AnonymousInterface0.t_to_js x4176)|])
    let (entries :
      ('T ArrayLike.t, 'T AnonymousInterface31.t) union2 ->
        (string * 'T) list)
      =
      fun (x4178 : ('T ArrayLike.t, 'T AnonymousInterface31.t) union2) ->
        Ojs.list_of_js
          (fun (x4183 : Ojs.t) ->
             let x4184 = x4183 in
             ((Ojs.string_of_js (Ojs.array_get x4184 0)),
               (Obj.magic (Ojs.array_get x4184 1))))
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "entries"
             [|(union2_to_js
                  (fun (x4179 : 'T ArrayLike.t) ->
                     ArrayLike.t_to_js Obj.magic x4179)
                  (fun (x4181 : 'T AnonymousInterface31.t) ->
                     AnonymousInterface31.t_to_js Obj.magic x4181) x4178)|])
    let (entries' : AnonymousInterface0.t -> (string * any) list) =
      fun (x4185 : AnonymousInterface0.t) ->
        Ojs.list_of_js
          (fun (x4186 : Ojs.t) ->
             let x4187 = x4186 in
             ((Ojs.string_of_js (Ojs.array_get x4187 0)),
               (any_of_js (Ojs.array_get x4187 1))))
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "entries"
             [|(AnonymousInterface0.t_to_js x4185)|])
    let (getOwnPropertyDescriptors :
      'T -> (any, AnonymousInterface14.t) intersection2) =
      fun (x4188 : 'T) ->
        intersection2_of_js any_of_js AnonymousInterface14.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertyDescriptors" [|(Obj.magic x4188)|])
    let (assign : target:'T -> source:'U -> ('T, 'U) intersection2) =
      fun ~target:(x4191 : 'T) ->
        fun ~source:(x4192 : 'U) ->
          intersection2_of_js Obj.magic Obj.magic
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "assign"
               [|(Obj.magic x4191);(Obj.magic x4192)|])
    let (assign' :
      target:'T -> source1:'U -> source2:'V -> ('T, 'U, 'V) intersection3) =
      fun ~target:(x4195 : 'T) ->
        fun ~source1:(x4196 : 'U) ->
          fun ~source2:(x4197 : 'V) ->
            intersection3_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "assign"
                 [|(Obj.magic x4195);(Obj.magic x4196);(Obj.magic x4197)|])
    let (assign'' :
      target:'T ->
        source1:'U ->
          source2:'V -> source3:'W -> ('T, 'U, 'V, 'W) intersection4)
      =
      fun ~target:(x4201 : 'T) ->
        fun ~source1:(x4202 : 'U) ->
          fun ~source2:(x4203 : 'V) ->
            fun ~source3:(x4204 : 'W) ->
              intersection4_of_js Obj.magic Obj.magic Obj.magic Obj.magic
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "assign"
                   [|(Obj.magic x4201);(Obj.magic x4202);(Obj.magic x4203);(
                     Obj.magic x4204)|])
    let (assign''' : target:untyped_object -> sources:any list -> any) =
      fun ~target:(x4209 : untyped_object) ->
        fun ~sources:(x4210 : any list) ->
          any_of_js
            (let x4213 = Ojs.get_prop_ascii Ojs.global "Object" in
             Ojs.call (Ojs.get_prop_ascii x4213 "assign") "apply"
               [|x4213;((let x4211 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         ignore
                           (Ojs.call x4211 "push"
                              [|(untyped_object_to_js x4209)|]);
                         List.iter
                           (fun (x4212 : any) ->
                              ignore
                                (Ojs.call x4211 "push" [|(any_to_js x4212)|]))
                           x4210;
                         x4211))|])
    let (getOwnPropertySymbols : any -> symbol list) =
      fun (x4214 : any) ->
        Ojs.list_of_js symbol_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertySymbols" [|(any_to_js x4214)|])
    let (keys : AnonymousInterface0.t -> string list) =
      fun (x4216 : AnonymousInterface0.t) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "keys"
             [|(AnonymousInterface0.t_to_js x4216)|])
    let (is : value1:any -> value2:any -> bool) =
      fun ~value1:(x4218 : any) ->
        fun ~value2:(x4219 : any) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "is"
               [|(any_to_js x4218);(any_to_js x4219)|])
    let (setPrototypeOf : o:any -> proto:untyped_object or_null -> any) =
      fun ~o:(x4220 : any) ->
        fun ~proto:(x4221 : untyped_object or_null) ->
          any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "setPrototypeOf"
               [|(any_to_js x4220);(or_null_to_js untyped_object_to_js x4221)|])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x4223 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Object")
               (let x4224 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4223 with
                 | Some x4225 ->
                     ignore (Ojs.call x4224 "push" [|(any_to_js x4225)|])
                 | None -> ());
                x4224))
    let (invoke : unit -> any) =
      fun () ->
        any_of_js (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Object") [||])
    let (invoke' : any -> any) =
      fun (x4226 : any) ->
        any_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Object")
             [|(any_to_js x4226)|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Object")
             "prototype")
    let (getPrototypeOf : any -> any) =
      fun (x4227 : any) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "getPrototypeOf"
             [|(any_to_js x4227)|])
    let (getOwnPropertyDescriptor :
      o:any -> p:PropertyKey.t -> PropertyDescriptor.t or_undefined) =
      fun ~o:(x4228 : any) ->
        fun ~p:(x4229 : PropertyKey.t) ->
          or_undefined_of_js PropertyDescriptor.t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "getOwnPropertyDescriptor"
               [|(any_to_js x4228);(PropertyKey.t_to_js x4229)|])
    let (getOwnPropertyNames : any -> string list) =
      fun (x4231 : any) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertyNames" [|(any_to_js x4231)|])
    let (create_ : untyped_object or_null -> any) =
      fun (x4233 : untyped_object or_null) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "create"
             [|(or_null_to_js untyped_object_to_js x4233)|])
    let (create_' :
      o:untyped_object or_null ->
        properties:(PropertyDescriptorMap.t, any ThisType.t) intersection2 ->
          any)
      =
      fun ~o:(x4235 : untyped_object or_null) ->
        fun
          ~properties:(x4237 :
                        (PropertyDescriptorMap.t, any ThisType.t)
                          intersection2)
          ->
          any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "create"
               [|(or_null_to_js untyped_object_to_js x4235);(intersection2_to_js
                                                               PropertyDescriptorMap.t_to_js
                                                               (fun
                                                                  (x4239 :
                                                                    any
                                                                    ThisType.t)
                                                                  ->
                                                                  ThisType.t_to_js
                                                                    any_to_js
                                                                    x4239)
                                                               x4237)|])
    let (defineProperty :
      o:'T ->
        p:PropertyKey.t ->
          attributes:(PropertyDescriptor.t, any ThisType.t) intersection2 ->
            'T)
      =
      fun ~o:(x4241 : 'T) ->
        fun ~p:(x4242 : PropertyKey.t) ->
          fun
            ~attributes:(x4243 :
                          (PropertyDescriptor.t, any ThisType.t)
                            intersection2)
            ->
            Obj.magic
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
                 "defineProperty"
                 [|(Obj.magic x4241);(PropertyKey.t_to_js x4242);(intersection2_to_js
                                                                    PropertyDescriptor.t_to_js
                                                                    (
                                                                    fun
                                                                    (x4245 :
                                                                    any
                                                                    ThisType.t)
                                                                    ->
                                                                    ThisType.t_to_js
                                                                    any_to_js
                                                                    x4245)
                                                                    x4243)|])
    let (defineProperties :
      o:'T ->
        properties:(PropertyDescriptorMap.t, any ThisType.t) intersection2 ->
          'T)
      =
      fun ~o:(x4247 : 'T) ->
        fun
          ~properties:(x4248 :
                        (PropertyDescriptorMap.t, any ThisType.t)
                          intersection2)
          ->
          Obj.magic
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "defineProperties"
               [|(Obj.magic x4247);(intersection2_to_js
                                      PropertyDescriptorMap.t_to_js
                                      (fun (x4250 : any ThisType.t) ->
                                         ThisType.t_to_js any_to_js x4250)
                                      x4248)|])
    let (seal : 'T -> 'T) =
      fun (x4252 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "seal"
             [|(Obj.magic x4252)|])
    let (freeze : 'T list -> 'T list) =
      fun (x4253 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Ojs.list_to_js Obj.magic x4253)|])
    let (freeze' : 'T -> 'T) =
      fun (x4256 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Obj.magic x4256)|])
    let (freeze'' : 'T -> 'T Readonly.t) =
      fun (x4257 : 'T) ->
        Readonly.t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Obj.magic x4257)|])
    let (preventExtensions : 'T -> 'T) =
      fun (x4259 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "preventExtensions" [|(Obj.magic x4259)|])
    let (isSealed : any -> bool) =
      fun (x4260 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isSealed"
             [|(any_to_js x4260)|])
    let (isFrozen : any -> bool) =
      fun (x4261 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isFrozen"
             [|(any_to_js x4261)|])
    let (isExtensible : any -> bool) =
      fun (x4262 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isExtensible"
             [|(any_to_js x4262)|])
    let (keys' : untyped_object -> string list) =
      fun (x4263 : untyped_object) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "keys"
             [|(untyped_object_to_js x4263)|])
    let cast_from = Obj.magic
  end
module PropertyDecorator =
  struct
    type t = [ `PropertyDecorator ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4266 : Ojs.t) -> t_of_js x4266
    and t_0_to_js : t_0 -> Ojs.t = fun (x4265 : t) -> t_to_js x4265
    type tags = [ `PropertyDecorator ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `PropertyDecorator ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4269 : Ojs.t) -> intf_of_js __tags_of_js x4269
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4267 : __tags intf) -> intf_to_js __tags_to_js x4267
    let (apply :
      'tags this -> target:Object.t -> propertyKey:symbol or_string -> unit)
      =
      fun (x4274 : 'tags this) ->
        fun ~target:(x4271 : Object.t) ->
          fun ~propertyKey:(x4272 : symbol or_string) ->
            ignore
              (Ojs.apply (this_to_js Obj.magic x4274)
                 [|(Object.t_to_js x4271);(or_string_to_js symbol_to_js x4272)|])
    let cast_from = Obj.magic
  end
module PromiseLike =
  struct
    type 'T t = [ `PromiseLike of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4278 : Ojs.t) -> t_of_js __T_of_js x4278
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4276 : __T t) -> t_to_js __T_to_js x4276
    type 'T tags = [ `PromiseLike of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `PromiseLike of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4282 : Ojs.t) -> intf_of_js __tags_of_js x4282
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4280 : __tags intf) -> intf_to_js __tags_to_js x4280
    let (then_ :
      ('tags, 'T) this ->
        ?onfulfilled:('T -> ('TResult1, 'TResult1 t) union2)
          or_null_or_undefined ->
          ?onrejected:(any -> ('TResult2, 'TResult2 t) union2)
            or_null_or_undefined -> unit -> ('TResult1, 'TResult2) union2 t)
      =
      fun (x4299 : ('tags, 'T) this) ->
        fun
          ?onfulfilled:(x4284 :
                         ('T -> ('TResult1, 'TResult1 t) union2)
                           or_null_or_undefined option)
          ->
          fun
            ?onrejected:(x4285 :
                          (any -> ('TResult2, 'TResult2 t) union2)
                            or_null_or_undefined option)
            ->
            fun () ->
              t_of_js
                (fun (x4303 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x4303)
                (let x4302 = this_to_js Obj.magic Obj.magic x4299 in
                 Ojs.call (Ojs.get_prop_ascii x4302 "then") "apply"
                   [|x4302;((let x4286 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4284 with
                              | Some x4293 ->
                                  ignore
                                    (Ojs.call x4286 "push"
                                       [|(or_null_or_undefined_to_js
                                            (fun
                                               (x4294 :
                                                 'T ->
                                                   ('TResult1, 'TResult1 t)
                                                     union2)
                                               ->
                                               Ojs.fun_to_js 1
                                                 (fun (x4295 : Ojs.t) ->
                                                    union2_to_js Obj.magic
                                                      (fun
                                                         (x4297 :
                                                           'TResult1 t)
                                                         ->
                                                         t_to_js Obj.magic
                                                           x4297)
                                                      (x4294
                                                         (Obj.magic x4295))))
                                            x4293)|])
                              | None -> ());
                             (match x4285 with
                              | Some x4287 ->
                                  ignore
                                    (Ojs.call x4286 "push"
                                       [|(or_null_or_undefined_to_js
                                            (fun
                                               (x4288 :
                                                 any ->
                                                   ('TResult2, 'TResult2 t)
                                                     union2)
                                               ->
                                               Ojs.fun_to_js 1
                                                 (fun (x4289 : Ojs.t) ->
                                                    union2_to_js Obj.magic
                                                      (fun
                                                         (x4291 :
                                                           'TResult2 t)
                                                         ->
                                                         t_to_js Obj.magic
                                                           x4291)
                                                      (x4288
                                                         (any_of_js x4289))))
                                            x4287)|])
                              | None -> ());
                             x4286))|])
    let cast_from = Obj.magic
  end
module PromiseConstructorLike =
  struct
    module AnonymousInterface7 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x4307 : Ojs.t) -> x4307
        and t_to_js : t -> Ojs.t = fun (x4306 : Ojs.t) -> x4306
        let (create :
          t ->
            executor:(resolve:(('T, 'T PromiseLike.t) union2 -> unit) ->
                        reject:(?reason:any -> unit -> unit) -> unit)
              -> 'T PromiseLike.t)
          =
          fun (x4318 : t) ->
            fun
              ~executor:(x4308 :
                          resolve:(('T, 'T PromiseLike.t) union2 -> unit) ->
                            reject:(?reason:any -> unit -> unit) -> unit)
              ->
              PromiseLike.t_of_js Obj.magic
                (Ojs.new_obj (t_to_js x4318)
                   [|(Ojs.fun_to_js 2
                        (fun (x4309 : Ojs.t) ->
                           fun (x4314 : Ojs.t) ->
                             x4308
                               ~resolve:(fun
                                           (x4310 :
                                             ('T, 'T PromiseLike.t) union2)
                                           ->
                                           ignore
                                             (Ojs.apply x4309
                                                [|(union2_to_js Obj.magic
                                                     (fun
                                                        (x4312 :
                                                          'T PromiseLike.t)
                                                        ->
                                                        PromiseLike.t_to_js
                                                          Obj.magic x4312)
                                                     x4310)|]))
                               ~reject:(fun ?reason:(x4315 : any option) ->
                                          fun () ->
                                            ignore
                                              (Ojs.call x4314 "apply"
                                                 [|Ojs.null;((let x4316 =
                                                                Ojs.new_obj
                                                                  (Ojs.get_prop_ascii
                                                                    Ojs.global
                                                                    "Array")
                                                                  [||] in
                                                              (match x4315
                                                               with
                                                               | Some x4317
                                                                   ->
                                                                   ignore
                                                                    (Ojs.call
                                                                    x4316
                                                                    "push"
                                                                    [|(
                                                                    any_to_js
                                                                    x4317)|])
                                                               | None -> ());
                                                              x4316))|]))))|])
      end
    type t = AnonymousInterface7.t
    let rec t_of_js : Ojs.t -> t =
      fun (x4321 : Ojs.t) -> AnonymousInterface7.t_of_js x4321
    and t_to_js : t -> Ojs.t =
      fun (x4320 : AnonymousInterface7.t) ->
        AnonymousInterface7.t_to_js x4320
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4323 : Ojs.t) -> t_of_js x4323
    and t_0_to_js : t_0 -> Ojs.t = fun (x4322 : t) -> t_to_js x4322
  end
module Parameters =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4325 : Ojs.t) -> any_of_js x4325
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x4324 : any) -> any_to_js x4324
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4328 : Ojs.t) -> t_of_js __T_of_js x4328
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4326 : __T t) -> t_to_js __T_to_js x4326
  end
module ParameterDecorator =
  struct
    type t = [ `ParameterDecorator ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4331 : Ojs.t) -> t_of_js x4331
    and t_0_to_js : t_0 -> Ojs.t = fun (x4330 : t) -> t_to_js x4330
    type tags = [ `ParameterDecorator ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ParameterDecorator ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4334 : Ojs.t) -> intf_of_js __tags_of_js x4334
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4332 : __tags intf) -> intf_to_js __tags_to_js x4332
    let (apply :
      'tags this ->
        target:Object.t ->
          propertyKey:symbol or_string -> parameterIndex:float -> unit)
      =
      fun (x4340 : 'tags this) ->
        fun ~target:(x4336 : Object.t) ->
          fun ~propertyKey:(x4337 : symbol or_string) ->
            fun ~parameterIndex:(x4339 : float) ->
              ignore
                (Ojs.apply (this_to_js Obj.magic x4340)
                   [|(Object.t_to_js x4336);(or_string_to_js symbol_to_js
                                               x4337);(Ojs.float_to_js x4339)|])
    let cast_from = Obj.magic
  end
module Pick =
  struct
    type ('T, 'K) t = any
    let rec t_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (x4343 : Ojs.t) -> any_of_js x4343
    and t_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t -> Ojs.t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (x4342 : any) -> any_to_js x4342
    type ('T, 'K) t_2 = ('T, 'K) t
    let rec t_2_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t_2 = fun
      (type __T) -> fun (type __K) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (x4347 : Ojs.t) -> t_of_js __T_of_js __K_of_js x4347
    and t_2_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t_2 -> Ojs.t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (x4344 : (__T, __K) t) -> t_to_js __T_to_js __K_to_js x4344
  end
module Exclude =
  struct
    type ('T, 'U) t = any
    let rec t_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__U_of_js : Ojs.t -> __U) ->
          fun (x4351 : Ojs.t) -> any_of_js x4351
    and t_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t -> Ojs.t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__U_to_js : __U -> Ojs.t) ->
          fun (x4350 : any) -> any_to_js x4350
    type ('T, 'U) t_2 = ('T, 'U) t
    let rec t_2_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t_2 = fun
      (type __T) -> fun (type __U) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__U_of_js : Ojs.t -> __U) ->
          fun (x4355 : Ojs.t) -> t_of_js __T_of_js __U_of_js x4355
    and t_2_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t_2 -> Ojs.t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__U_to_js : __U -> Ojs.t) ->
          fun (x4352 : (__T, __U) t) -> t_to_js __T_to_js __U_to_js x4352
  end
module Omit =
  struct
    type ('T, 'K) t = ('T, (any, 'K) Exclude.t) Pick.t
    let rec t_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (x4363 : Ojs.t) ->
            Pick.t_of_js __T_of_js
              (fun (x4365 : Ojs.t) ->
                 Exclude.t_of_js any_of_js __K_of_js x4365) x4363
    and t_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t -> Ojs.t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (x4358 : (__T, (any, __K) Exclude.t) Pick.t) ->
            Pick.t_to_js __T_to_js
              (fun (x4360 : (any, __K) Exclude.t) ->
                 Exclude.t_to_js any_to_js __K_to_js x4360) x4358
    type ('T, 'K) t_2 = ('T, 'K) t
    let rec t_2_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t_2 = fun
      (type __T) -> fun (type __K) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (x4371 : Ojs.t) -> t_of_js __T_of_js __K_of_js x4371
    and t_2_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t_2 -> Ojs.t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (x4368 : (__T, __K) t) -> t_to_js __T_to_js __K_to_js x4368
  end
module Number =
  struct
    type t = [ `Number ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4375 : Ojs.t) -> t_of_js x4375
    and t_0_to_js : t_0 -> Ojs.t = fun (x4374 : t) -> t_to_js x4374
    type tags = [ `Number ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Number ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4378 : Ojs.t) -> intf_of_js __tags_of_js x4378
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4376 : __tags intf) -> intf_to_js __tags_to_js x4376
    let (toLocaleString :
      'tags this ->
        ?locales:string list or_string ->
          ?options:Intl.NumberFormatOptions.t -> unit -> string)
      =
      fun (x4387 : 'tags this) ->
        fun ?locales:(x4380 : string list or_string option) ->
          fun ?options:(x4381 : Intl.NumberFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x4389 = this_to_js Obj.magic x4387 in
                 Ojs.call (Ojs.get_prop_ascii x4389 "toLocaleString") "apply"
                   [|x4389;((let x4382 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4380 with
                              | Some x4384 ->
                                  ignore
                                    (Ojs.call x4382 "push"
                                       [|(or_string_to_js
                                            (fun (x4385 : string list) ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x4385)
                                            x4384)|])
                              | None -> ());
                             (match x4381 with
                              | Some x4383 ->
                                  ignore
                                    (Ojs.call x4382 "push"
                                       [|(Intl.NumberFormatOptions.t_to_js
                                            x4383)|])
                              | None -> ());
                             x4382))|])
    let (toString : 'tags this -> ?radix:float -> unit -> string) =
      fun (x4393 : 'tags this) ->
        fun ?radix:(x4390 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x4395 = this_to_js Obj.magic x4393 in
               Ojs.call (Ojs.get_prop_ascii x4395 "toString") "apply"
                 [|x4395;((let x4391 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4390 with
                            | Some x4392 ->
                                ignore
                                  (Ojs.call x4391 "push"
                                     [|(Ojs.float_to_js x4392)|])
                            | None -> ());
                           x4391))|])
    let (toFixed : 'tags this -> ?fractionDigits:float -> unit -> string) =
      fun (x4399 : 'tags this) ->
        fun ?fractionDigits:(x4396 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x4401 = this_to_js Obj.magic x4399 in
               Ojs.call (Ojs.get_prop_ascii x4401 "toFixed") "apply"
                 [|x4401;((let x4397 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4396 with
                            | Some x4398 ->
                                ignore
                                  (Ojs.call x4397 "push"
                                     [|(Ojs.float_to_js x4398)|])
                            | None -> ());
                           x4397))|])
    let (toExponential :
      'tags this -> ?fractionDigits:float -> unit -> string) =
      fun (x4405 : 'tags this) ->
        fun ?fractionDigits:(x4402 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x4407 = this_to_js Obj.magic x4405 in
               Ojs.call (Ojs.get_prop_ascii x4407 "toExponential") "apply"
                 [|x4407;((let x4403 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4402 with
                            | Some x4404 ->
                                ignore
                                  (Ojs.call x4403 "push"
                                     [|(Ojs.float_to_js x4404)|])
                            | None -> ());
                           x4403))|])
    let (toPrecision : 'tags this -> ?precision:float -> unit -> string) =
      fun (x4411 : 'tags this) ->
        fun ?precision:(x4408 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x4413 = this_to_js Obj.magic x4411 in
               Ojs.call (Ojs.get_prop_ascii x4413 "toPrecision") "apply"
                 [|x4413;((let x4409 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4408 with
                            | Some x4410 ->
                                ignore
                                  (Ojs.call x4409 "push"
                                     [|(Ojs.float_to_js x4410)|])
                            | None -> ());
                           x4409))|])
    let (valueOf : 'tags this -> float) =
      fun (x4414 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x4414) "valueOf" [||])
    let (epsilon : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "EPSILON")
    let (isFinite : unknown -> bool) =
      fun (x4416 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isFinite"
             [|(unknown_to_js x4416)|])
    let (isInteger : unknown -> bool) =
      fun (x4417 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isInteger"
             [|(unknown_to_js x4417)|])
    let (isNaN : unknown -> bool) =
      fun (x4418 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isNaN"
             [|(unknown_to_js x4418)|])
    let (isSafeInteger : unknown -> bool) =
      fun (x4419 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isSafeInteger"
             [|(unknown_to_js x4419)|])
    let (max_safe_integer : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MAX_SAFE_INTEGER")
    let (min_safe_integer : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MIN_SAFE_INTEGER")
    let (parseFloat : string -> float) =
      fun (x4420 : string) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "parseFloat"
             [|(Ojs.string_to_js x4420)|])
    let (parseInt : string:string -> ?radix:float -> unit -> float) =
      fun ~string:(x4421 : string) ->
        fun ?radix:(x4422 : float option) ->
          fun () ->
            Ojs.float_of_js
              (let x4425 = Ojs.get_prop_ascii Ojs.global "Number" in
               Ojs.call (Ojs.get_prop_ascii x4425 "parseInt") "apply"
                 [|x4425;((let x4423 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x4423 "push"
                                [|(Ojs.string_to_js x4421)|]);
                           (match x4422 with
                            | Some x4424 ->
                                ignore
                                  (Ojs.call x4423 "push"
                                     [|(Ojs.float_to_js x4424)|])
                            | None -> ());
                           x4423))|])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x4426 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Number")
               (let x4427 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4426 with
                 | Some x4428 ->
                     ignore (Ojs.call x4427 "push" [|(any_to_js x4428)|])
                 | None -> ());
                x4427))
    let (invoke : ?value:any -> unit -> float) =
      fun ?value:(x4429 : any option) ->
        fun () ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "apply"
               [|Ojs.null;((let x4430 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x4429 with
                             | Some x4431 ->
                                 ignore
                                   (Ojs.call x4430 "push"
                                      [|(any_to_js x4431)|])
                             | None -> ());
                            x4430))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "prototype")
    let (max_value : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MAX_VALUE")
    let (min_value : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MIN_VALUE")
    let (nan : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number") "NaN")
    let (negative_infinity : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "NEGATIVE_INFINITY")
    let (positive_infinity : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "POSITIVE_INFINITY")
    let cast_from = Obj.magic
  end
module NonNullable =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4433 : Ojs.t) -> any_of_js x4433
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x4432 : any) -> any_to_js x4432
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4436 : Ojs.t) -> t_of_js __T_of_js x4436
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4434 : __T t) -> t_to_js __T_to_js x4434
  end
module NewableFunction =
  struct
    module AnonymousInterface29 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) -> fun (x4439 : Ojs.t) -> x4439
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) -> fun (x4438 : Ojs.t) -> x4438
        let (create : 'T t -> 'T) =
          fun (x4440 : 'T t) ->
            Obj.magic (Ojs.new_obj (t_to_js Obj.magic x4440) [||])
      end
    module AnonymousInterface27 =
      struct
        type ('AX, 'R) t = Ojs.t
        let rec t_of_js :
          'AX 'R . (Ojs.t -> 'AX) -> (Ojs.t -> 'R) -> Ojs.t -> ('AX, 'R) t =
          fun (type __AX) -> fun (type __R) ->
          fun (__AX_of_js : Ojs.t -> __AX) ->
            fun (__R_of_js : Ojs.t -> __R) -> fun (x4443 : Ojs.t) -> x4443
        and t_to_js :
          'AX 'R . ('AX -> Ojs.t) -> ('R -> Ojs.t) -> ('AX, 'R) t -> Ojs.t =
          fun (type __AX) -> fun (type __R) ->
          fun (__AX_to_js : __AX -> Ojs.t) ->
            fun (__R_to_js : __R -> Ojs.t) -> fun (x4442 : Ojs.t) -> x4442
        let (create : ('AX, 'R) t -> args:'AX list -> 'R) =
          fun (x4447 : ('AX, 'R) t) ->
            fun ~args:(x4444 : 'AX list) ->
              Obj.magic
                (Ojs.new_obj_arr (t_to_js Obj.magic Obj.magic x4447)
                   (let x4445 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x4446 : 'AX) ->
                         ignore (Ojs.call x4445 "push" [|(Obj.magic x4446)|]))
                      x4444;
                    x4445))
      end
    module AnonymousInterface26 =
      struct
        type ('A, 'T) t = Ojs.t
        let rec t_of_js :
          'A 'T . (Ojs.t -> 'A) -> (Ojs.t -> 'T) -> Ojs.t -> ('A, 'T) t = fun
          (type __A) -> fun (type __T) ->
          fun (__A_of_js : Ojs.t -> __A) ->
            fun (__T_of_js : Ojs.t -> __T) -> fun (x4451 : Ojs.t) -> x4451
        and t_to_js :
          'A 'T . ('A -> Ojs.t) -> ('T -> Ojs.t) -> ('A, 'T) t -> Ojs.t = fun
          (type __A) -> fun (type __T) ->
          fun (__A_to_js : __A -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) -> fun (x4450 : Ojs.t) -> x4450
        let (create : ('A, 'T) t -> args:any list -> 'T) =
          fun (x4455 : ('A, 'T) t) ->
            fun ~args:(x4452 : any list) ->
              Obj.magic
                (Ojs.new_obj_arr (t_to_js Obj.magic Obj.magic x4455)
                   (let x4453 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x4454 : any) ->
                         ignore (Ojs.call x4453 "push" [|(any_to_js x4454)|]))
                      x4452;
                    x4453))
      end
    module AnonymousInterface25 =
      struct
        type ('A, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'R . (Ojs.t -> 'A) -> (Ojs.t -> 'R) -> Ojs.t -> ('A, 'R) t = fun
          (type __A) -> fun (type __R) ->
          fun (__A_of_js : Ojs.t -> __A) ->
            fun (__R_of_js : Ojs.t -> __R) -> fun (x4459 : Ojs.t) -> x4459
        and t_to_js :
          'A 'R . ('A -> Ojs.t) -> ('R -> Ojs.t) -> ('A, 'R) t -> Ojs.t = fun
          (type __A) -> fun (type __R) ->
          fun (__A_to_js : __A -> Ojs.t) ->
            fun (__R_to_js : __R -> Ojs.t) -> fun (x4458 : Ojs.t) -> x4458
        let (create : ('A, 'R) t -> args:any list -> 'R) =
          fun (x4463 : ('A, 'R) t) ->
            fun ~args:(x4460 : any list) ->
              Obj.magic
                (Ojs.new_obj_arr (t_to_js Obj.magic Obj.magic x4463)
                   (let x4461 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x4462 : any) ->
                         ignore (Ojs.call x4461 "push" [|(any_to_js x4462)|]))
                      x4460;
                    x4461))
      end
    module AnonymousInterface24 =
      struct
        type ('A, 'A0, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'A0 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) -> (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'R) t
          = fun (type __A) -> fun (type __A0) -> fun (type __R) ->
          fun (__A_of_js : Ojs.t -> __A) ->
            fun (__A0_of_js : Ojs.t -> __A0) ->
              fun (__R_of_js : Ojs.t -> __R) -> fun (x4467 : Ojs.t) -> x4467
        and t_to_js :
          'A 'A0 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) -> ('R -> Ojs.t) -> ('A, 'A0, 'R) t -> Ojs.t
          = fun (type __A) -> fun (type __A0) -> fun (type __R) ->
          fun (__A_to_js : __A -> Ojs.t) ->
            fun (__A0_to_js : __A0 -> Ojs.t) ->
              fun (__R_to_js : __R -> Ojs.t) -> fun (x4466 : Ojs.t) -> x4466
        let (create : ('A, 'A0, 'R) t -> arg0:'A0 -> args:any list -> 'R) =
          fun (x4472 : ('A, 'A0, 'R) t) ->
            fun ~arg0:(x4468 : 'A0) ->
              fun ~args:(x4469 : any list) ->
                Obj.magic
                  (Ojs.new_obj_arr
                     (t_to_js Obj.magic Obj.magic Obj.magic x4472)
                     (let x4470 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore (Ojs.call x4470 "push" [|(Obj.magic x4468)|]);
                      List.iter
                        (fun (x4471 : any) ->
                           ignore
                             (Ojs.call x4470 "push" [|(any_to_js x4471)|]))
                        x4469;
                      x4470))
      end
    module AnonymousInterface23 =
      struct
        type ('A, 'A0, 'A1, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'A0 'A1 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'A1) ->
                  (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'A1, 'R) t
          = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun (type
          __R) ->
          fun (__A_of_js : Ojs.t -> __A) ->
            fun (__A0_of_js : Ojs.t -> __A0) ->
              fun (__A1_of_js : Ojs.t -> __A1) ->
                fun (__R_of_js : Ojs.t -> __R) ->
                  fun (x4477 : Ojs.t) -> x4477
        and t_to_js :
          'A 'A0 'A1 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('A1 -> Ojs.t) ->
                  ('R -> Ojs.t) -> ('A, 'A0, 'A1, 'R) t -> Ojs.t
          = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun (type
          __R) ->
          fun (__A_to_js : __A -> Ojs.t) ->
            fun (__A0_to_js : __A0 -> Ojs.t) ->
              fun (__A1_to_js : __A1 -> Ojs.t) ->
                fun (__R_to_js : __R -> Ojs.t) ->
                  fun (x4476 : Ojs.t) -> x4476
        let (create :
          ('A, 'A0, 'A1, 'R) t -> arg0:'A0 -> arg1:'A1 -> args:any list -> 'R)
          =
          fun (x4483 : ('A, 'A0, 'A1, 'R) t) ->
            fun ~arg0:(x4478 : 'A0) ->
              fun ~arg1:(x4479 : 'A1) ->
                fun ~args:(x4480 : any list) ->
                  Obj.magic
                    (Ojs.new_obj_arr
                       (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic x4483)
                       (let x4481 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        ignore (Ojs.call x4481 "push" [|(Obj.magic x4478)|]);
                        ignore (Ojs.call x4481 "push" [|(Obj.magic x4479)|]);
                        List.iter
                          (fun (x4482 : any) ->
                             ignore
                               (Ojs.call x4481 "push" [|(any_to_js x4482)|]))
                          x4480;
                        x4481))
      end
    module AnonymousInterface22 =
      struct
        type ('A, 'A0, 'A1, 'A2, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'A0 'A1 'A2 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'A1) ->
                  (Ojs.t -> 'A2) ->
                    (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'A1, 'A2, 'R) t
          = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun (type
          __A2) -> fun (type __R) ->
          fun (__A_of_js : Ojs.t -> __A) ->
            fun (__A0_of_js : Ojs.t -> __A0) ->
              fun (__A1_of_js : Ojs.t -> __A1) ->
                fun (__A2_of_js : Ojs.t -> __A2) ->
                  fun (__R_of_js : Ojs.t -> __R) ->
                    fun (x4489 : Ojs.t) -> x4489
        and t_to_js :
          'A 'A0 'A1 'A2 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('A1 -> Ojs.t) ->
                  ('A2 -> Ojs.t) ->
                    ('R -> Ojs.t) -> ('A, 'A0, 'A1, 'A2, 'R) t -> Ojs.t
          = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun (type
          __A2) -> fun (type __R) ->
          fun (__A_to_js : __A -> Ojs.t) ->
            fun (__A0_to_js : __A0 -> Ojs.t) ->
              fun (__A1_to_js : __A1 -> Ojs.t) ->
                fun (__A2_to_js : __A2 -> Ojs.t) ->
                  fun (__R_to_js : __R -> Ojs.t) ->
                    fun (x4488 : Ojs.t) -> x4488
        let (create :
          ('A, 'A0, 'A1, 'A2, 'R) t ->
            arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> args:any list -> 'R)
          =
          fun (x4496 : ('A, 'A0, 'A1, 'A2, 'R) t) ->
            fun ~arg0:(x4490 : 'A0) ->
              fun ~arg1:(x4491 : 'A1) ->
                fun ~arg2:(x4492 : 'A2) ->
                  fun ~args:(x4493 : any list) ->
                    Obj.magic
                      (Ojs.new_obj_arr
                         (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic
                            Obj.magic x4496)
                         (let x4494 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          ignore
                            (Ojs.call x4494 "push" [|(Obj.magic x4490)|]);
                          ignore
                            (Ojs.call x4494 "push" [|(Obj.magic x4491)|]);
                          ignore
                            (Ojs.call x4494 "push" [|(Obj.magic x4492)|]);
                          List.iter
                            (fun (x4495 : any) ->
                               ignore
                                 (Ojs.call x4494 "push" [|(any_to_js x4495)|]))
                            x4493;
                          x4494))
      end
    module AnonymousInterface21 =
      struct
        type ('A, 'A0, 'A1, 'A2, 'A3, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'A0 'A1 'A2 'A3 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'A1) ->
                  (Ojs.t -> 'A2) ->
                    (Ojs.t -> 'A3) ->
                      (Ojs.t -> 'R) ->
                        Ojs.t -> ('A, 'A0, 'A1, 'A2, 'A3, 'R) t
          = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun (type
          __A2) -> fun (type __A3) -> fun (type __R) ->
          fun (__A_of_js : Ojs.t -> __A) ->
            fun (__A0_of_js : Ojs.t -> __A0) ->
              fun (__A1_of_js : Ojs.t -> __A1) ->
                fun (__A2_of_js : Ojs.t -> __A2) ->
                  fun (__A3_of_js : Ojs.t -> __A3) ->
                    fun (__R_of_js : Ojs.t -> __R) ->
                      fun (x4503 : Ojs.t) -> x4503
        and t_to_js :
          'A 'A0 'A1 'A2 'A3 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('A1 -> Ojs.t) ->
                  ('A2 -> Ojs.t) ->
                    ('A3 -> Ojs.t) ->
                      ('R -> Ojs.t) ->
                        ('A, 'A0, 'A1, 'A2, 'A3, 'R) t -> Ojs.t
          = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun (type
          __A2) -> fun (type __A3) -> fun (type __R) ->
          fun (__A_to_js : __A -> Ojs.t) ->
            fun (__A0_to_js : __A0 -> Ojs.t) ->
              fun (__A1_to_js : __A1 -> Ojs.t) ->
                fun (__A2_to_js : __A2 -> Ojs.t) ->
                  fun (__A3_to_js : __A3 -> Ojs.t) ->
                    fun (__R_to_js : __R -> Ojs.t) ->
                      fun (x4502 : Ojs.t) -> x4502
        let (create :
          ('A, 'A0, 'A1, 'A2, 'A3, 'R) t ->
            arg0:'A0 ->
              arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> args:any list -> 'R)
          =
          fun (x4511 : ('A, 'A0, 'A1, 'A2, 'A3, 'R) t) ->
            fun ~arg0:(x4504 : 'A0) ->
              fun ~arg1:(x4505 : 'A1) ->
                fun ~arg2:(x4506 : 'A2) ->
                  fun ~arg3:(x4507 : 'A3) ->
                    fun ~args:(x4508 : any list) ->
                      Obj.magic
                        (Ojs.new_obj_arr
                           (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic
                              Obj.magic Obj.magic x4511)
                           (let x4509 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x4509 "push" [|(Obj.magic x4504)|]);
                            ignore
                              (Ojs.call x4509 "push" [|(Obj.magic x4505)|]);
                            ignore
                              (Ojs.call x4509 "push" [|(Obj.magic x4506)|]);
                            ignore
                              (Ojs.call x4509 "push" [|(Obj.magic x4507)|]);
                            List.iter
                              (fun (x4510 : any) ->
                                 ignore
                                   (Ojs.call x4509 "push"
                                      [|(any_to_js x4510)|])) x4508;
                            x4509))
      end
    type t = [ `Function  | `Function  | `NewableFunction ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4519 : Ojs.t) -> t_of_js x4519
    and t_0_to_js : t_0 -> Ojs.t = fun (x4518 : t) -> t_to_js x4518
    type tags = [ `Function  | `Function  | `NewableFunction ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `NewableFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4522 : Ojs.t) -> intf_of_js __tags_of_js x4522
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4520 : __tags intf) -> intf_to_js __tags_to_js x4520
    let (apply_ :
      'tags this -> this:'T AnonymousInterface29.t -> thisArg:'T -> unit) =
      fun (x4527 : 'tags this) ->
        fun ~this:(x4524 : 'T AnonymousInterface29.t) ->
          fun ~thisArg:(x4526 : 'T) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x4527) "apply"
                 [|(AnonymousInterface29.t_to_js Obj.magic x4524);(Obj.magic
                                                                    x4526)|])
    let (apply_' :
      'tags this ->
        this:('A, 'T) AnonymousInterface26.t -> thisArg:'T -> args:'A -> unit)
      =
      fun (x4534 : 'tags this) ->
        fun ~this:(x4529 : ('A, 'T) AnonymousInterface26.t) ->
          fun ~thisArg:(x4532 : 'T) ->
            fun ~args:(x4533 : 'A) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x4534) "apply"
                   [|(AnonymousInterface26.t_to_js Obj.magic Obj.magic x4529);(
                     Obj.magic x4532);(Obj.magic x4533)|])
    let (call :
      'tags this ->
        this:('A, 'T) AnonymousInterface26.t ->
          thisArg:'T -> args:any list -> unit)
      =
      fun (x4543 : 'tags this) ->
        fun ~this:(x4536 : ('A, 'T) AnonymousInterface26.t) ->
          fun ~thisArg:(x4537 : 'T) ->
            fun ~args:(x4538 : any list) ->
              ignore
                (let x4545 = this_to_js Obj.magic x4543 in
                 Ojs.call (Ojs.get_prop_ascii x4545 "call") "apply"
                   [|x4545;((let x4539 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4539 "push"
                                  [|(AnonymousInterface26.t_to_js Obj.magic
                                       Obj.magic x4536)|]);
                             ignore
                               (Ojs.call x4539 "push" [|(Obj.magic x4537)|]);
                             List.iter
                               (fun (x4540 : any) ->
                                  ignore
                                    (Ojs.call x4539 "push"
                                       [|(any_to_js x4540)|])) x4538;
                             x4539))|])
    let (bind : 'tags this -> this:'T -> thisArg:any -> 'T) =
      fun (x4548 : 'tags this) ->
        fun ~this:(x4546 : 'T) ->
          fun ~thisArg:(x4547 : any) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x4548) "bind"
                 [|(Obj.magic x4546);(any_to_js x4547)|])
    let (bind' :
      'tags this ->
        this:('A, 'A0, 'R) AnonymousInterface24.t ->
          thisArg:any -> arg0:'A0 -> ('A, 'R) AnonymousInterface25.t)
      =
      fun (x4556 : 'tags this) ->
        fun ~this:(x4550 : ('A, 'A0, 'R) AnonymousInterface24.t) ->
          fun ~thisArg:(x4554 : any) ->
            fun ~arg0:(x4555 : 'A0) ->
              AnonymousInterface25.t_of_js Obj.magic Obj.magic
                (Ojs.call (this_to_js Obj.magic x4556) "bind"
                   [|(AnonymousInterface24.t_to_js Obj.magic Obj.magic
                        Obj.magic x4550);(any_to_js x4554);(Obj.magic x4555)|])
    let (bind'' :
      'tags this ->
        this:('A, 'A0, 'A1, 'R) AnonymousInterface23.t ->
          thisArg:any ->
            arg0:'A0 -> arg1:'A1 -> ('A, 'R) AnonymousInterface25.t)
      =
      fun (x4568 : 'tags this) ->
        fun ~this:(x4560 : ('A, 'A0, 'A1, 'R) AnonymousInterface23.t) ->
          fun ~thisArg:(x4565 : any) ->
            fun ~arg0:(x4566 : 'A0) ->
              fun ~arg1:(x4567 : 'A1) ->
                AnonymousInterface25.t_of_js Obj.magic Obj.magic
                  (Ojs.call (this_to_js Obj.magic x4568) "bind"
                     [|(AnonymousInterface23.t_to_js Obj.magic Obj.magic
                          Obj.magic Obj.magic x4560);(any_to_js x4565);(
                       Obj.magic x4566);(Obj.magic x4567)|])
    let (bind''' :
      'tags this ->
        this:('A, 'A0, 'A1, 'A2, 'R) AnonymousInterface22.t ->
          thisArg:any ->
            arg0:'A0 ->
              arg1:'A1 -> arg2:'A2 -> ('A, 'R) AnonymousInterface25.t)
      =
      fun (x4582 : 'tags this) ->
        fun ~this:(x4572 : ('A, 'A0, 'A1, 'A2, 'R) AnonymousInterface22.t) ->
          fun ~thisArg:(x4578 : any) ->
            fun ~arg0:(x4579 : 'A0) ->
              fun ~arg1:(x4580 : 'A1) ->
                fun ~arg2:(x4581 : 'A2) ->
                  AnonymousInterface25.t_of_js Obj.magic Obj.magic
                    (Ojs.call (this_to_js Obj.magic x4582) "bind"
                       [|(AnonymousInterface22.t_to_js Obj.magic Obj.magic
                            Obj.magic Obj.magic Obj.magic x4572);(any_to_js
                                                                    x4578);(
                         Obj.magic x4579);(Obj.magic x4580);(Obj.magic x4581)|])
    let (bind'''' :
      'tags this ->
        this:('A, 'A0, 'A1, 'A2, 'A3, 'R) AnonymousInterface21.t ->
          thisArg:any ->
            arg0:'A0 ->
              arg1:'A1 ->
                arg2:'A2 -> arg3:'A3 -> ('A, 'R) AnonymousInterface25.t)
      =
      fun (x4598 : 'tags this) ->
        fun
          ~this:(x4586 : ('A, 'A0, 'A1, 'A2, 'A3, 'R) AnonymousInterface21.t)
          ->
          fun ~thisArg:(x4593 : any) ->
            fun ~arg0:(x4594 : 'A0) ->
              fun ~arg1:(x4595 : 'A1) ->
                fun ~arg2:(x4596 : 'A2) ->
                  fun ~arg3:(x4597 : 'A3) ->
                    AnonymousInterface25.t_of_js Obj.magic Obj.magic
                      (Ojs.call (this_to_js Obj.magic x4598) "bind"
                         [|(AnonymousInterface21.t_to_js Obj.magic Obj.magic
                              Obj.magic Obj.magic Obj.magic Obj.magic x4586);(
                           any_to_js x4593);(Obj.magic x4594);(Obj.magic
                                                                 x4595);(
                           Obj.magic x4596);(Obj.magic x4597)|])
    let (bind''''' :
      'tags this ->
        this:('AX, 'R) AnonymousInterface27.t ->
          thisArg:any -> args:'AX list -> ('AX, 'R) AnonymousInterface27.t)
      =
      fun (x4609 : 'tags this) ->
        fun ~this:(x4602 : ('AX, 'R) AnonymousInterface27.t) ->
          fun ~thisArg:(x4603 : any) ->
            fun ~args:(x4604 : 'AX list) ->
              AnonymousInterface27.t_of_js Obj.magic Obj.magic
                (let x4611 = this_to_js Obj.magic x4609 in
                 Ojs.call (Ojs.get_prop_ascii x4611 "bind") "apply"
                   [|x4611;((let x4605 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4605 "push"
                                  [|(AnonymousInterface27.t_to_js Obj.magic
                                       Obj.magic x4602)|]);
                             ignore
                               (Ojs.call x4605 "push" [|(any_to_js x4603)|]);
                             List.iter
                               (fun (x4606 : 'AX) ->
                                  ignore
                                    (Ojs.call x4605 "push"
                                       [|(Obj.magic x4606)|])) x4604;
                             x4605))|])
    let cast_from = Obj.magic
  end
module TypedPropertyDescriptor =
  struct
    type 'T t = [ `TypedPropertyDescriptor of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4616 : Ojs.t) -> t_of_js __T_of_js x4616
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4614 : __T t) -> t_to_js __T_to_js x4614
    type 'T tags = [ `TypedPropertyDescriptor of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `TypedPropertyDescriptor of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4620 : Ojs.t) -> intf_of_js __tags_of_js x4620
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4618 : __tags intf) -> intf_to_js __tags_to_js x4618
    let (get_enumerable : ('tags, 'T) this -> bool) =
      fun (x4622 : ('tags, 'T) this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4622)
             "enumerable")
    let (set_enumerable : ('tags, 'T) this -> bool -> unit) =
      fun (x4625 : ('tags, 'T) this) ->
        fun (x4626 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x4625)
            "enumerable" (Ojs.bool_to_js x4626)
    let (get_configurable : ('tags, 'T) this -> bool) =
      fun (x4629 : ('tags, 'T) this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4629)
             "configurable")
    let (set_configurable : ('tags, 'T) this -> bool -> unit) =
      fun (x4632 : ('tags, 'T) this) ->
        fun (x4633 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x4632)
            "configurable" (Ojs.bool_to_js x4633)
    let (get_writable : ('tags, 'T) this -> bool) =
      fun (x4636 : ('tags, 'T) this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4636)
             "writable")
    let (set_writable : ('tags, 'T) this -> bool -> unit) =
      fun (x4639 : ('tags, 'T) this) ->
        fun (x4640 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x4639)
            "writable" (Ojs.bool_to_js x4640)
    let (get_value : ('tags, 'T) this -> 'T) =
      fun (x4643 : ('tags, 'T) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4643) "value")
    let (set_value : ('tags, 'T) this -> 'T -> unit) =
      fun (x4646 : ('tags, 'T) this) ->
        fun (x4647 : 'T) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x4646) "value"
            (Obj.magic x4647)
    let (get_ : ('tags, 'T) this -> 'T) =
      fun (x4650 : ('tags, 'T) this) ->
        Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x4650) "get" [||])
    let (set_ : ('tags, 'T) this -> value:'T -> unit) =
      fun (x4654 : ('tags, 'T) this) ->
        fun ~value:(x4653 : 'T) ->
          ignore
            (Ojs.call (this_to_js Obj.magic Obj.magic x4654) "set"
               [|(Obj.magic x4653)|])
    let cast_from = Obj.magic
  end
module MethodDecorator =
  struct
    type t = [ `MethodDecorator ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4658 : Ojs.t) -> t_of_js x4658
    and t_0_to_js : t_0 -> Ojs.t = fun (x4657 : t) -> t_to_js x4657
    type tags = [ `MethodDecorator ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `MethodDecorator ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4661 : Ojs.t) -> intf_of_js __tags_of_js x4661
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4659 : __tags intf) -> intf_to_js __tags_to_js x4659
    let (apply :
      'tags this ->
        target:Object.t ->
          propertyKey:symbol or_string ->
            descriptor:'T TypedPropertyDescriptor.t ->
              (unit, 'T TypedPropertyDescriptor.t) union2)
      =
      fun (x4668 : 'tags this) ->
        fun ~target:(x4663 : Object.t) ->
          fun ~propertyKey:(x4664 : symbol or_string) ->
            fun ~descriptor:(x4666 : 'T TypedPropertyDescriptor.t) ->
              union2_of_js Ojs.unit_of_js
                (fun (x4671 : Ojs.t) ->
                   TypedPropertyDescriptor.t_of_js Obj.magic x4671)
                (Ojs.apply (this_to_js Obj.magic x4668)
                   [|(Object.t_to_js x4663);(or_string_to_js symbol_to_js
                                               x4664);(TypedPropertyDescriptor.t_to_js
                                                         Obj.magic x4666)|])
    let cast_from = Obj.magic
  end
module Math =
  struct
    let (clz32 : float -> float) =
      fun (x4673 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "clz32"
             [|(Ojs.float_to_js x4673)|])
    let (imul : x:float -> y:float -> float) =
      fun ~x:(x4674 : float) ->
        fun ~y:(x4675 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "imul"
               [|(Ojs.float_to_js x4674);(Ojs.float_to_js x4675)|])
    let (sign : float -> float) =
      fun (x4676 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sign"
             [|(Ojs.float_to_js x4676)|])
    let (log10 : float -> float) =
      fun (x4677 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log10"
             [|(Ojs.float_to_js x4677)|])
    let (log2 : float -> float) =
      fun (x4678 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log2"
             [|(Ojs.float_to_js x4678)|])
    let (log1p : float -> float) =
      fun (x4679 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log1p"
             [|(Ojs.float_to_js x4679)|])
    let (expm1 : float -> float) =
      fun (x4680 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "expm1"
             [|(Ojs.float_to_js x4680)|])
    let (cosh : float -> float) =
      fun (x4681 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "cosh"
             [|(Ojs.float_to_js x4681)|])
    let (sinh : float -> float) =
      fun (x4682 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sinh"
             [|(Ojs.float_to_js x4682)|])
    let (tanh : float -> float) =
      fun (x4683 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "tanh"
             [|(Ojs.float_to_js x4683)|])
    let (acosh : float -> float) =
      fun (x4684 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "acosh"
             [|(Ojs.float_to_js x4684)|])
    let (asinh : float -> float) =
      fun (x4685 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "asinh"
             [|(Ojs.float_to_js x4685)|])
    let (atanh : float -> float) =
      fun (x4686 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atanh"
             [|(Ojs.float_to_js x4686)|])
    let (hypot : float list -> float) =
      fun (x4687 : float list) ->
        Ojs.float_of_js
          (let x4690 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x4690 "hypot") "apply"
             [|x4690;((let x4688 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x4689 : float) ->
                            ignore
                              (Ojs.call x4688 "push"
                                 [|(Ojs.float_to_js x4689)|])) x4687;
                       x4688))|])
    let (trunc : float -> float) =
      fun (x4691 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "trunc"
             [|(Ojs.float_to_js x4691)|])
    let (fround : float -> float) =
      fun (x4692 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "fround"
             [|(Ojs.float_to_js x4692)|])
    let (cbrt : float -> float) =
      fun (x4693 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "cbrt"
             [|(Ojs.float_to_js x4693)|])
    let (e : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "E")
    let (ln10 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LN10")
    let (ln2 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LN2")
    let (log2e : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LOG2E")
    let (log10e : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LOG10E")
    let (pi : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "PI")
    let (sqrt1_2 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math")
             "SQRT1_2")
    let (sqrt2 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "SQRT2")
    let (abs : float -> float) =
      fun (x4694 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "abs"
             [|(Ojs.float_to_js x4694)|])
    let (acos : float -> float) =
      fun (x4695 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "acos"
             [|(Ojs.float_to_js x4695)|])
    let (asin : float -> float) =
      fun (x4696 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "asin"
             [|(Ojs.float_to_js x4696)|])
    let (atan : float -> float) =
      fun (x4697 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atan"
             [|(Ojs.float_to_js x4697)|])
    let (atan2 : y:float -> x:float -> float) =
      fun ~y:(x4698 : float) ->
        fun ~x:(x4699 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atan2"
               [|(Ojs.float_to_js x4698);(Ojs.float_to_js x4699)|])
    let (ceil : float -> float) =
      fun (x4700 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "ceil"
             [|(Ojs.float_to_js x4700)|])
    let (cos : float -> float) =
      fun (x4701 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "cos"
             [|(Ojs.float_to_js x4701)|])
    let (exp : float -> float) =
      fun (x4702 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "exp"
             [|(Ojs.float_to_js x4702)|])
    let (floor : float -> float) =
      fun (x4703 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "floor"
             [|(Ojs.float_to_js x4703)|])
    let (log : float -> float) =
      fun (x4704 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log"
             [|(Ojs.float_to_js x4704)|])
    let (max : float list -> float) =
      fun (x4705 : float list) ->
        Ojs.float_of_js
          (let x4708 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x4708 "max") "apply"
             [|x4708;((let x4706 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x4707 : float) ->
                            ignore
                              (Ojs.call x4706 "push"
                                 [|(Ojs.float_to_js x4707)|])) x4705;
                       x4706))|])
    let (min : float list -> float) =
      fun (x4709 : float list) ->
        Ojs.float_of_js
          (let x4712 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x4712 "min") "apply"
             [|x4712;((let x4710 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x4711 : float) ->
                            ignore
                              (Ojs.call x4710 "push"
                                 [|(Ojs.float_to_js x4711)|])) x4709;
                       x4710))|])
    let (pow : x:float -> y:float -> float) =
      fun ~x:(x4713 : float) ->
        fun ~y:(x4714 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "pow"
               [|(Ojs.float_to_js x4713);(Ojs.float_to_js x4714)|])
    let (random : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "random" [||])
    let (round : float -> float) =
      fun (x4715 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "round"
             [|(Ojs.float_to_js x4715)|])
    let (sin : float -> float) =
      fun (x4716 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sin"
             [|(Ojs.float_to_js x4716)|])
    let (sqrt : float -> float) =
      fun (x4717 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sqrt"
             [|(Ojs.float_to_js x4717)|])
    let (tan : float -> float) =
      fun (x4718 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "tan"
             [|(Ojs.float_to_js x4718)|])
  end
module Map =
  struct
    type ('K, 'V) t =
      [ `Map of ('K * 'V)  | ('K * 'V) IterableIterator.tags_1] intf
    let rec t_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t =
      fun _K -> fun _V -> Obj.magic
    and t_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t -> Ojs.t =
      fun _K -> fun _V -> Obj.magic
    type ('K, 'V) t_2 = ('K, 'V) t
    let rec t_2_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t_2 = fun
      (type __K) -> fun (type __V) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__V_of_js : Ojs.t -> __V) ->
          fun (x4722 : Ojs.t) -> t_of_js __K_of_js __V_of_js x4722
    and t_2_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t_2 -> Ojs.t = fun
      (type __K) -> fun (type __V) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__V_to_js : __V -> Ojs.t) ->
          fun (x4719 : (__K, __V) t) -> t_to_js __K_to_js __V_to_js x4719
    type ('K, 'V) tags =
      [ `Map of ('K * 'V)  | ('K * 'V) IterableIterator.tags_1]
    type ('K, 'V) tags_2 = ('K, 'V) tags
    type ('tags, 'K, 'V) this =
      'tags intf constraint 'tags = [> `Map of ('K * 'V) ]
    let rec this_of_js :
      'tags 'K 'V .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('tags, 'K, 'V) this
      = fun (type __tags) -> fun (type __K) -> fun (type __V) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (__V_of_js : Ojs.t -> __V) ->
            fun (x4727 : Ojs.t) -> intf_of_js __tags_of_js x4727
    and this_to_js :
      'tags 'K 'V .
        ('tags -> Ojs.t) ->
          ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('tags, 'K, 'V) this -> Ojs.t
      = fun (type __tags) -> fun (type __K) -> fun (type __V) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (__V_to_js : __V -> Ojs.t) ->
            fun (x4725 : __tags intf) -> intf_to_js __tags_to_js x4725
    let (clear : ('tags, 'K, 'V) this -> unit) =
      fun (x4729 : ('tags, 'K, 'V) this) ->
        ignore
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4729) "clear"
             [||])
    let (delete : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x4734 : ('tags, 'K, 'V) this) ->
        fun ~key:(x4733 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4734)
               "delete" [|(Obj.magic x4733)|])
    let (forEach :
      ('tags, 'K, 'V) this ->
        callbackfn:(value:'V -> key:'K -> map:('K, 'V) t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x4747 : ('tags, 'K, 'V) this) ->
        fun
          ~callbackfn:(x4738 : value:'V -> key:'K -> map:('K, 'V) t -> unit)
          ->
          fun ?thisArg:(x4739 : any option) ->
            fun () ->
              ignore
                (let x4751 = this_to_js Obj.magic Obj.magic Obj.magic x4747 in
                 Ojs.call (Ojs.get_prop_ascii x4751 "forEach") "apply"
                   [|x4751;((let x4740 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4740 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4742 : Ojs.t) ->
                                          fun (x4743 : Ojs.t) ->
                                            fun (x4744 : Ojs.t) ->
                                              x4738 ~value:(Obj.magic x4742)
                                                ~key:(Obj.magic x4743)
                                                ~map:(t_of_js Obj.magic
                                                        Obj.magic x4744)))|]);
                             (match x4739 with
                              | Some x4741 ->
                                  ignore
                                    (Ojs.call x4740 "push"
                                       [|(any_to_js x4741)|])
                              | None -> ());
                             x4740))|])
    let (get_ : ('tags, 'K, 'V) this -> key:'K -> 'V or_undefined) =
      fun (x4753 : ('tags, 'K, 'V) this) ->
        fun ~key:(x4752 : 'K) ->
          or_undefined_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4753) "get"
               [|(Obj.magic x4752)|])
    let (has : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x4759 : ('tags, 'K, 'V) this) ->
        fun ~key:(x4758 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4759) "has"
               [|(Obj.magic x4758)|])
    let (set_ :
      ('tags, 'K, 'V) this -> key:'K -> value:'V -> ('tags, 'K, 'V) this) =
      fun (x4765 : ('tags, 'K, 'V) this) ->
        fun ~key:(x4763 : 'K) ->
          fun ~value:(x4764 : 'V) ->
            this_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4765)
                 "set" [|(Obj.magic x4763);(Obj.magic x4764)|])
    let (get_size : ('tags, 'K, 'V) this -> float) =
      fun (x4772 : ('tags, 'K, 'V) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (this_to_js Obj.magic Obj.magic Obj.magic x4772) "size")
    let (entries : ('tags, 'K, 'V) this -> ('K * 'V) IterableIterator.t) =
      fun (x4776 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js
          (fun (x4780 : Ojs.t) ->
             let x4781 = x4780 in
             ((Obj.magic (Ojs.array_get x4781 0)),
               (Obj.magic (Ojs.array_get x4781 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4776)
             "entries" [||])
    let (keys : ('tags, 'K, 'V) this -> 'K IterableIterator.t) =
      fun (x4782 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4782) "keys"
             [||])
    let (values : ('tags, 'K, 'V) this -> 'V IterableIterator.t) =
      fun (x4787 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4787) "values"
             [||])
    let (create : unit -> (any, any) t) =
      fun () ->
        t_of_js any_of_js any_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map") [||])
    let (create' : ?entries:('K * 'V) list or_null -> unit -> ('K, 'V) t) =
      fun ?entries:(x4794 : ('K * 'V) list or_null option) ->
        fun () ->
          t_of_js Obj.magic Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Map")
               (let x4795 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4794 with
                 | Some x4796 ->
                     ignore
                       (Ojs.call x4795 "push"
                          [|(or_null_to_js
                               (fun (x4797 : ('K * 'V) list) ->
                                  Ojs.list_to_js
                                    (fun (x4798 : ('K * 'V)) ->
                                       let (x4799, x4800) = x4798 in
                                       let x4801 = Ojs.array_make 2 in
                                       Ojs.array_set x4801 0
                                         (Obj.magic x4799);
                                       Ojs.array_set x4801 1
                                         (Obj.magic x4800);
                                       x4801) x4797) x4796)|])
                 | None -> ());
                x4795))
    let (prototype : unit -> (any, any) t) =
      fun () ->
        t_of_js any_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Map")
             "prototype")
    let (create'' : ('K * 'V) Iterable.t -> ('K, 'V) t) =
      fun (x4806 : ('K * 'V) Iterable.t) ->
        t_of_js Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map")
             [|(Iterable.t_to_js
                  (fun (x4807 : ('K * 'V)) ->
                     let (x4808, x4809) = x4807 in
                     let x4810 = Ojs.array_make 2 in
                     Ojs.array_set x4810 0 (Obj.magic x4808);
                     Ojs.array_set x4810 1 (Obj.magic x4809);
                     x4810) x4806)|])
    let cast_from = Obj.magic
  end
module Lowercase =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t = fun (type __S) ->
      fun (__S_of_js : Ojs.t -> __S) -> fun (x4814 : Ojs.t) -> x4814
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) -> fun (x4813 : Ojs.t) -> x4813
    type 'S t_1 = 'S t
    let rec t_1_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t_1 = fun (type
      __S) ->
      fun (__S_of_js : Ojs.t -> __S) ->
        fun (x4817 : Ojs.t) -> t_of_js __S_of_js x4817
    and t_1_to_js : 'S . ('S -> Ojs.t) -> 'S t_1 -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) ->
        fun (x4815 : __S t) -> t_to_js __S_to_js x4815
  end
module JSON =
  struct
    let (parse :
      text:string ->
        ?reviver:(this:any -> key:string -> value:any -> any) -> unit -> any)
      =
      fun ~text:(x4819 : string) ->
        fun
          ?reviver:(x4820 :
                     (this:any -> key:string -> value:any -> any) option)
          ->
          fun () ->
            any_of_js
              (let x4826 = Ojs.get_prop_ascii Ojs.global "JSON" in
               Ojs.call (Ojs.get_prop_ascii x4826 "parse") "apply"
                 [|x4826;((let x4821 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x4821 "push"
                                [|(Ojs.string_to_js x4819)|]);
                           (match x4820 with
                            | Some x4822 ->
                                ignore
                                  (Ojs.call x4821 "push"
                                     [|(Ojs.fun_to_js 3
                                          (fun (x4823 : Ojs.t) ->
                                             fun (x4824 : Ojs.t) ->
                                               fun (x4825 : Ojs.t) ->
                                                 any_to_js
                                                   (x4822
                                                      ~this:(any_of_js x4823)
                                                      ~key:(Ojs.string_of_js
                                                              x4824)
                                                      ~value:(any_of_js x4825))))|])
                            | None -> ());
                           x4821))|])
    let (stringify :
      value:any ->
        ?replacer:(this:any -> key:string -> value:any -> any) ->
          ?space:string or_number -> unit -> string)
      =
      fun ~value:(x4827 : any) ->
        fun
          ?replacer:(x4828 :
                      (this:any -> key:string -> value:any -> any) option)
          ->
          fun ?space:(x4829 : string or_number option) ->
            fun () ->
              Ojs.string_of_js
                (let x4837 = Ojs.get_prop_ascii Ojs.global "JSON" in
                 Ojs.call (Ojs.get_prop_ascii x4837 "stringify") "apply"
                   [|x4837;((let x4830 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4830 "push" [|(any_to_js x4827)|]);
                             (match x4828 with
                              | Some x4833 ->
                                  ignore
                                    (Ojs.call x4830 "push"
                                       [|(Ojs.fun_to_js 3
                                            (fun (x4834 : Ojs.t) ->
                                               fun (x4835 : Ojs.t) ->
                                                 fun (x4836 : Ojs.t) ->
                                                   any_to_js
                                                     (x4833
                                                        ~this:(any_of_js
                                                                 x4834)
                                                        ~key:(Ojs.string_of_js
                                                                x4835)
                                                        ~value:(any_of_js
                                                                  x4836))))|])
                              | None -> ());
                             (match x4829 with
                              | Some x4831 ->
                                  ignore
                                    (Ojs.call x4830 "push"
                                       [|(or_number_to_js Ojs.string_to_js
                                            x4831)|])
                              | None -> ());
                             x4830))|])
    let (stringify' :
      value:any ->
        ?replacer:string or_number list or_null ->
          ?space:string or_number -> unit -> string)
      =
      fun ~value:(x4838 : any) ->
        fun ?replacer:(x4839 : string or_number list or_null option) ->
          fun ?space:(x4840 : string or_number option) ->
            fun () ->
              Ojs.string_of_js
                (let x4848 = Ojs.get_prop_ascii Ojs.global "JSON" in
                 Ojs.call (Ojs.get_prop_ascii x4848 "stringify") "apply"
                   [|x4848;((let x4841 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4841 "push" [|(any_to_js x4838)|]);
                             (match x4839 with
                              | Some x4844 ->
                                  ignore
                                    (Ojs.call x4841 "push"
                                       [|(or_null_to_js
                                            (fun
                                               (x4845 :
                                                 string or_number list)
                                               ->
                                               Ojs.list_to_js
                                                 (fun
                                                    (x4846 :
                                                      string or_number)
                                                    ->
                                                    or_number_to_js
                                                      Ojs.string_to_js x4846)
                                                 x4845) x4844)|])
                              | None -> ());
                             (match x4840 with
                              | Some x4842 ->
                                  ignore
                                    (Ojs.call x4841 "push"
                                       [|(or_number_to_js Ojs.string_to_js
                                            x4842)|])
                              | None -> ());
                             x4841))|])
  end
module InstanceType =
  struct
    module AnonymousInterface6 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x4850 : Ojs.t) -> x4850
        and t_to_js : t -> Ojs.t = fun (x4849 : Ojs.t) -> x4849
        let (create : t -> args:any list -> any) =
          fun (x4854 : t) ->
            fun ~args:(x4851 : any list) ->
              any_of_js
                (Ojs.new_obj_arr (t_to_js x4854)
                   (let x4852 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x4853 : any) ->
                         ignore (Ojs.call x4852 "push" [|(any_to_js x4853)|]))
                      x4851;
                    x4852))
      end
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4856 : Ojs.t) -> any_of_js x4856
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x4855 : any) -> any_to_js x4855
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4859 : Ojs.t) -> t_of_js __T_of_js x4859
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4857 : __T t) -> t_to_js __T_to_js x4857
  end
module ImportMeta =
  struct
    type t = [ `ImportMeta ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4862 : Ojs.t) -> t_of_js x4862
    and t_0_to_js : t_0 -> Ojs.t = fun (x4861 : t) -> t_to_js x4861
    type tags = [ `ImportMeta ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ImportMeta ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4865 : Ojs.t) -> intf_of_js __tags_of_js x4865
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4863 : __tags intf) -> intf_to_js __tags_to_js x4863
    let cast_from = Obj.magic
  end
module ImportAssertions =
  struct
    type t = [ `ImportAssertions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4868 : Ojs.t) -> t_of_js x4868
    and t_0_to_js : t_0 -> Ojs.t = fun (x4867 : t) -> t_to_js x4867
    type tags = [ `ImportAssertions ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ImportAssertions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4871 : Ojs.t) -> intf_of_js __tags_of_js x4871
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4869 : __tags intf) -> intf_to_js __tags_to_js x4869
    let (get : 'tags this -> string -> string) =
      fun (x4873 : 'tags this) ->
        fun (x4875 : string) ->
          Ojs.string_of_js
            (Ojs.get_prop (this_to_js Obj.magic x4873)
               (Ojs.string_to_js x4875))
    let (set : 'tags this -> string -> string -> unit) =
      fun (x4876 : 'tags this) ->
        fun (x4878 : string) ->
          fun (x4879 : string) ->
            Ojs.set_prop (this_to_js Obj.magic x4876)
              (Ojs.string_to_js x4878) (Ojs.string_to_js x4879)
    let cast_from = Obj.magic
  end
module ImportCallOptions =
  struct
    type t = [ `ImportCallOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4881 : Ojs.t) -> t_of_js x4881
    and t_0_to_js : t_0 -> Ojs.t = fun (x4880 : t) -> t_to_js x4880
    type tags = [ `ImportCallOptions ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ImportCallOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4884 : Ojs.t) -> intf_of_js __tags_of_js x4884
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4882 : __tags intf) -> intf_to_js __tags_to_js x4882
    let (get_assert : 'tags this -> ImportAssertions.t) =
      fun (x4886 : 'tags this) ->
        ImportAssertions.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4886) "assert")
    let (set_assert : 'tags this -> ImportAssertions.t -> unit) =
      fun (x4888 : 'tags this) ->
        fun (x4889 : ImportAssertions.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4888) "assert"
            (ImportAssertions.t_to_js x4889)
    let cast_from = Obj.magic
  end
module IArguments =
  struct
    type t =
      [ `IArguments  | any ArrayLike.tags_1 | any IterableIterator.tags_1]
        intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4892 : Ojs.t) -> t_of_js x4892
    and t_0_to_js : t_0 -> Ojs.t = fun (x4891 : t) -> t_to_js x4891
    type tags =
      [ `IArguments  | any ArrayLike.tags_1 | any IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `IArguments ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4895 : Ojs.t) -> intf_of_js __tags_of_js x4895
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4893 : __tags intf) -> intf_to_js __tags_to_js x4893
    let (get : 'tags this -> float -> any) =
      fun (x4897 : 'tags this) ->
        fun (x4899 : float) ->
          any_of_js
            (Ojs.get_prop (this_to_js Obj.magic x4897)
               (Ojs.float_to_js x4899))
    let (set : 'tags this -> float -> any -> unit) =
      fun (x4900 : 'tags this) ->
        fun (x4902 : float) ->
          fun (x4903 : any) ->
            Ojs.set_prop (this_to_js Obj.magic x4900) (Ojs.float_to_js x4902)
              (any_to_js x4903)
    let (get_length : 'tags this -> float) =
      fun (x4904 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4904) "length")
    let (set_length : 'tags this -> float -> unit) =
      fun (x4906 : 'tags this) ->
        fun (x4907 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4906) "length"
            (Ojs.float_to_js x4907)
    let (get_callee : 'tags this -> Function.t) =
      fun (x4909 : 'tags this) ->
        Function.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4909) "callee")
    let (set_callee : 'tags this -> Function.t -> unit) =
      fun (x4911 : 'tags this) ->
        fun (x4912 : Function.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4911) "callee"
            (Function.t_to_js x4912)
    let cast_from = Obj.magic
  end
module Generator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `Generator of ('T * 'TReturn * 'TNext) 
      | `Iterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn, 'TNext) t_3 = ('T, 'TReturn, 'TNext) t
    let rec t_3_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t_3
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (__TNext_of_js : Ojs.t -> __TNext) ->
            fun (x4918 : Ojs.t) ->
              t_of_js __T_of_js __TReturn_of_js __TNext_of_js x4918
    and t_3_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t_3 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (__TNext_to_js : __TNext -> Ojs.t) ->
            fun (x4914 : (__T, __TReturn, __TNext) t) ->
              t_to_js __T_to_js __TReturn_to_js __TNext_to_js x4914
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, unknown) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x4926 : Ojs.t) ->
            t_of_js __T_of_js __TReturn_of_js unknown_of_js x4926
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x4922 : (__T, __TReturn, unknown) t) ->
            t_to_js __T_to_js __TReturn_to_js unknown_to_js x4922
    type 'T t_1 = ('T, any, unknown) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4934 : Ojs.t) ->
          t_of_js __T_of_js any_of_js unknown_of_js x4934
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4930 : (__T, any, unknown) t) ->
          t_to_js __T_to_js any_to_js unknown_to_js x4930
    type t_0 = (unknown, any, unknown) t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x4942 : Ojs.t) ->
        t_of_js unknown_of_js any_of_js unknown_of_js x4942
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x4938 : (unknown, any, unknown) t) ->
        t_to_js unknown_to_js any_to_js unknown_to_js x4938
    type ('T, 'TReturn, 'TNext) tags =
      [ `Generator of ('T * 'TReturn * 'TNext) 
      | `Iterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn, 'TNext) tags_3 = ('T, 'TReturn, 'TNext) tags
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, unknown) tags
    type 'T tags_1 = ('T, any, unknown) tags
    type tags_0 = (unknown, any, unknown) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `Generator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
            fun (__TNext_of_js : Ojs.t -> __TNext) ->
              fun (x4948 : Ojs.t) -> intf_of_js __tags_of_js x4948
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
            fun (__TNext_to_js : __TNext -> Ojs.t) ->
              fun (x4946 : __tags intf) -> intf_to_js __tags_to_js x4946
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x4953 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x4950 : any list) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (let x4958 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x4953 in
             Ojs.call (Ojs.get_prop_ascii x4958 "next") "apply"
               [|x4958;((let x4951 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x4952 : any) ->
                              ignore
                                (Ojs.call x4951 "push" [|(any_to_js x4952)|]))
                           x4950;
                         x4951))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        value:'TReturn -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x4962 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~value:(x4961 : 'TReturn) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x4962)
               "return" [|(Obj.magic x4961)|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        e:any -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x4970 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~e:(x4969 : any) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x4970)
               "throw" [|(any_to_js x4969)|])
    let cast_from = Obj.magic
  end
module GeneratorFunction =
  struct
    type t = [ `GeneratorFunction ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4978 : Ojs.t) -> t_of_js x4978
    and t_0_to_js : t_0 -> Ojs.t = fun (x4977 : t) -> t_to_js x4977
    type tags = [ `GeneratorFunction ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `GeneratorFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4981 : Ojs.t) -> intf_of_js __tags_of_js x4981
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4979 : __tags intf) -> intf_to_js __tags_to_js x4979
    let (create : 'tags this -> args:any list -> Generator.t_0) =
      fun (x4986 : 'tags this) ->
        fun ~args:(x4983 : any list) ->
          Generator.t_0_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x4986)
               (let x4984 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x4985 : any) ->
                     ignore (Ojs.call x4984 "push" [|(any_to_js x4985)|]))
                  x4983;
                x4984))
    let (apply : 'tags this -> args:any list -> Generator.t_0) =
      fun (x4991 : 'tags this) ->
        fun ~args:(x4988 : any list) ->
          Generator.t_0_of_js
            (Ojs.call (this_to_js Obj.magic x4991) "apply"
               [|Ojs.null;((let x4989 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x4990 : any) ->
                                 ignore
                                   (Ojs.call x4989 "push"
                                      [|(any_to_js x4990)|])) x4988;
                            x4989))|])
    let (get_length : 'tags this -> float) =
      fun (x4993 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4993) "length")
    let (get_name : 'tags this -> string) =
      fun (x4995 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4995) "name")
    let (get_prototype : 'tags this -> Generator.t_0) =
      fun (x4997 : 'tags this) ->
        Generator.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4997) "prototype")
    let cast_from = Obj.magic
  end
module GeneratorFunctionConstructor =
  struct
    type t = [ `GeneratorFunctionConstructor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5000 : Ojs.t) -> t_of_js x5000
    and t_0_to_js : t_0 -> Ojs.t = fun (x4999 : t) -> t_to_js x4999
    type tags = [ `GeneratorFunctionConstructor ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `GeneratorFunctionConstructor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5003 : Ojs.t) -> intf_of_js __tags_of_js x5003
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5001 : __tags intf) -> intf_to_js __tags_to_js x5001
    let (create : 'tags this -> args:string list -> GeneratorFunction.t) =
      fun (x5008 : 'tags this) ->
        fun ~args:(x5005 : string list) ->
          GeneratorFunction.t_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x5008)
               (let x5006 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x5007 : string) ->
                     ignore
                       (Ojs.call x5006 "push" [|(Ojs.string_to_js x5007)|]))
                  x5005;
                x5006))
    let (apply : 'tags this -> args:string list -> GeneratorFunction.t) =
      fun (x5013 : 'tags this) ->
        fun ~args:(x5010 : string list) ->
          GeneratorFunction.t_of_js
            (Ojs.call (this_to_js Obj.magic x5013) "apply"
               [|Ojs.null;((let x5011 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x5012 : string) ->
                                 ignore
                                   (Ojs.call x5011 "push"
                                      [|(Ojs.string_to_js x5012)|])) x5010;
                            x5011))|])
    let (get_length : 'tags this -> float) =
      fun (x5015 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5015) "length")
    let (get_name : 'tags this -> string) =
      fun (x5017 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5017) "name")
    let (get_prototype : 'tags this -> GeneratorFunction.t) =
      fun (x5019 : 'tags this) ->
        GeneratorFunction.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5019) "prototype")
    let cast_from = Obj.magic
  end
module Float64Array =
  struct
    type t =
      [ `Float64Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5022 : Ojs.t) -> t_of_js x5022
    and t_0_to_js : t_0 -> Ojs.t = fun (x5021 : t) -> t_to_js x5021
    type tags =
      [ `Float64Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Float64Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5025 : Ojs.t) -> intf_of_js __tags_of_js x5025
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5023 : __tags intf) -> intf_to_js __tags_to_js x5023
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x5031 : 'tags this) ->
        fun ~searchElement:(x5027 : float) ->
          fun ?fromIndex:(x5028 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5033 = this_to_js Obj.magic x5031 in
                 Ojs.call (Ojs.get_prop_ascii x5033 "includes") "apply"
                   [|x5033;((let x5029 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5029 "push"
                                  [|(Ojs.float_to_js x5027)|]);
                             (match x5028 with
                              | Some x5030 ->
                                  ignore
                                    (Ojs.call x5029 "push"
                                       [|(Ojs.float_to_js x5030)|])
                              | None -> ());
                             x5029))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x5034 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x5036 : Ojs.t) ->
             let x5037 = x5036 in
             ((Ojs.float_of_js (Ojs.array_get x5037 0)),
               (Ojs.float_of_js (Ojs.array_get x5037 1))))
          (Ojs.call (this_to_js Obj.magic x5034) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x5038 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x5038) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x5041 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x5041) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x5044 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5044)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x5046 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5046) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x5048 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5048) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x5050 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5050) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x5057 : 'tags this) ->
        fun ~target:(x5052 : float) ->
          fun ~start:(x5053 : float) ->
            fun ?end_:(x5054 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x5059 = this_to_js Obj.magic x5057 in
                   Ojs.call (Ojs.get_prop_ascii x5059 "copyWithin") "apply"
                     [|x5059;((let x5055 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5055 "push"
                                    [|(Ojs.float_to_js x5052)|]);
                               ignore
                                 (Ojs.call x5055 "push"
                                    [|(Ojs.float_to_js x5053)|]);
                               (match x5054 with
                                | Some x5056 ->
                                    ignore
                                      (Ojs.call x5055 "push"
                                         [|(Ojs.float_to_js x5056)|])
                                | None -> ());
                               x5055))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x5068 : 'tags this) ->
        fun
          ~predicate:(x5061 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x5062 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5070 = this_to_js Obj.magic x5068 in
                 Ojs.call (Ojs.get_prop_ascii x5070 "every") "apply"
                   [|x5070;((let x5063 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5063 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5065 : Ojs.t) ->
                                          fun (x5066 : Ojs.t) ->
                                            fun (x5067 : Ojs.t) ->
                                              unknown_to_js
                                                (x5061
                                                   ~value:(Ojs.float_of_js
                                                             x5065)
                                                   ~index:(Ojs.float_of_js
                                                             x5066)
                                                   ~array:(t_of_js x5067))))|]);
                             (match x5062 with
                              | Some x5064 ->
                                  ignore
                                    (Ojs.call x5063 "push"
                                       [|(any_to_js x5064)|])
                              | None -> ());
                             x5063))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x5077 : 'tags this) ->
        fun ~value:(x5071 : float) ->
          fun ?start:(x5072 : float option) ->
            fun ?end_:(x5073 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x5079 = this_to_js Obj.magic x5077 in
                   Ojs.call (Ojs.get_prop_ascii x5079 "fill") "apply"
                     [|x5079;((let x5074 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5074 "push"
                                    [|(Ojs.float_to_js x5071)|]);
                               (match x5072 with
                                | Some x5076 ->
                                    ignore
                                      (Ojs.call x5074 "push"
                                         [|(Ojs.float_to_js x5076)|])
                                | None -> ());
                               (match x5073 with
                                | Some x5075 ->
                                    ignore
                                      (Ojs.call x5074 "push"
                                         [|(Ojs.float_to_js x5075)|])
                                | None -> ());
                               x5074))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x5088 : 'tags this) ->
        fun ~predicate:(x5081 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x5082 : any option) ->
            fun () ->
              t_of_js
                (let x5090 = this_to_js Obj.magic x5088 in
                 Ojs.call (Ojs.get_prop_ascii x5090 "filter") "apply"
                   [|x5090;((let x5083 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5083 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5085 : Ojs.t) ->
                                          fun (x5086 : Ojs.t) ->
                                            fun (x5087 : Ojs.t) ->
                                              any_to_js
                                                (x5081
                                                   ~value:(Ojs.float_of_js
                                                             x5085)
                                                   ~index:(Ojs.float_of_js
                                                             x5086)
                                                   ~array:(t_of_js x5087))))|]);
                             (match x5082 with
                              | Some x5084 ->
                                  ignore
                                    (Ojs.call x5083 "push"
                                       [|(any_to_js x5084)|])
                              | None -> ());
                             x5083))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x5098 : 'tags this) ->
        fun ~predicate:(x5091 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x5092 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x5100 = this_to_js Obj.magic x5098 in
                 Ojs.call (Ojs.get_prop_ascii x5100 "find") "apply"
                   [|x5100;((let x5093 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5093 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5095 : Ojs.t) ->
                                          fun (x5096 : Ojs.t) ->
                                            fun (x5097 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x5091
                                                   ~value:(Ojs.float_of_js
                                                             x5095)
                                                   ~index:(Ojs.float_of_js
                                                             x5096)
                                                   ~obj:(t_of_js x5097))))|]);
                             (match x5092 with
                              | Some x5094 ->
                                  ignore
                                    (Ojs.call x5093 "push"
                                       [|(any_to_js x5094)|])
                              | None -> ());
                             x5093))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x5109 : 'tags this) ->
        fun ~predicate:(x5102 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x5103 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x5111 = this_to_js Obj.magic x5109 in
                 Ojs.call (Ojs.get_prop_ascii x5111 "findIndex") "apply"
                   [|x5111;((let x5104 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5104 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5106 : Ojs.t) ->
                                          fun (x5107 : Ojs.t) ->
                                            fun (x5108 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x5102
                                                   ~value:(Ojs.float_of_js
                                                             x5106)
                                                   ~index:(Ojs.float_of_js
                                                             x5107)
                                                   ~obj:(t_of_js x5108))))|]);
                             (match x5103 with
                              | Some x5105 ->
                                  ignore
                                    (Ojs.call x5104 "push"
                                       [|(any_to_js x5105)|])
                              | None -> ());
                             x5104))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x5119 : 'tags this) ->
        fun
          ~callbackfn:(x5112 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x5113 : any option) ->
            fun () ->
              ignore
                (let x5121 = this_to_js Obj.magic x5119 in
                 Ojs.call (Ojs.get_prop_ascii x5121 "forEach") "apply"
                   [|x5121;((let x5114 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5114 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5116 : Ojs.t) ->
                                          fun (x5117 : Ojs.t) ->
                                            fun (x5118 : Ojs.t) ->
                                              x5112
                                                ~value:(Ojs.float_of_js x5116)
                                                ~index:(Ojs.float_of_js x5117)
                                                ~array:(t_of_js x5118)))|]);
                             (match x5113 with
                              | Some x5115 ->
                                  ignore
                                    (Ojs.call x5114 "push"
                                       [|(any_to_js x5115)|])
                              | None -> ());
                             x5114))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x5126 : 'tags this) ->
        fun ~searchElement:(x5122 : float) ->
          fun ?fromIndex:(x5123 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x5128 = this_to_js Obj.magic x5126 in
                 Ojs.call (Ojs.get_prop_ascii x5128 "indexOf") "apply"
                   [|x5128;((let x5124 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5124 "push"
                                  [|(Ojs.float_to_js x5122)|]);
                             (match x5123 with
                              | Some x5125 ->
                                  ignore
                                    (Ojs.call x5124 "push"
                                       [|(Ojs.float_to_js x5125)|])
                              | None -> ());
                             x5124))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x5132 : 'tags this) ->
        fun ?separator:(x5129 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x5134 = this_to_js Obj.magic x5132 in
               Ojs.call (Ojs.get_prop_ascii x5134 "join") "apply"
                 [|x5134;((let x5130 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5129 with
                            | Some x5131 ->
                                ignore
                                  (Ojs.call x5130 "push"
                                     [|(Ojs.string_to_js x5131)|])
                            | None -> ());
                           x5130))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x5139 : 'tags this) ->
        fun ~searchElement:(x5135 : float) ->
          fun ?fromIndex:(x5136 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x5141 = this_to_js Obj.magic x5139 in
                 Ojs.call (Ojs.get_prop_ascii x5141 "lastIndexOf") "apply"
                   [|x5141;((let x5137 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5137 "push"
                                  [|(Ojs.float_to_js x5135)|]);
                             (match x5136 with
                              | Some x5138 ->
                                  ignore
                                    (Ojs.call x5137 "push"
                                       [|(Ojs.float_to_js x5138)|])
                              | None -> ());
                             x5137))|])
    let (get_length : 'tags this -> float) =
      fun (x5142 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5142) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x5151 : 'tags this) ->
        fun
          ~callbackfn:(x5144 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x5145 : any option) ->
            fun () ->
              t_of_js
                (let x5153 = this_to_js Obj.magic x5151 in
                 Ojs.call (Ojs.get_prop_ascii x5153 "map") "apply"
                   [|x5153;((let x5146 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5146 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5148 : Ojs.t) ->
                                          fun (x5149 : Ojs.t) ->
                                            fun (x5150 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x5144
                                                   ~value:(Ojs.float_of_js
                                                             x5148)
                                                   ~index:(Ojs.float_of_js
                                                             x5149)
                                                   ~array:(t_of_js x5150))))|]);
                             (match x5145 with
                              | Some x5147 ->
                                  ignore
                                    (Ojs.call x5146 "push"
                                       [|(any_to_js x5147)|])
                              | None -> ());
                             x5146))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x5159 : 'tags this) ->
        fun
          ~callbackfn:(x5154 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x5159) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x5155 : Ojs.t) ->
                       fun (x5156 : Ojs.t) ->
                         fun (x5157 : Ojs.t) ->
                           fun (x5158 : Ojs.t) ->
                             Ojs.float_to_js
                               (x5154 ~previousValue:(Ojs.float_of_js x5155)
                                  ~currentValue:(Ojs.float_of_js x5156)
                                  ~currentIndex:(Ojs.float_of_js x5157)
                                  ~array:(t_of_js x5158))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x5167 : 'tags this) ->
        fun
          ~callbackfn:(x5161 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x5166 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x5167) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x5162 : Ojs.t) ->
                         fun (x5163 : Ojs.t) ->
                           fun (x5164 : Ojs.t) ->
                             fun (x5165 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x5161
                                    ~previousValue:(Ojs.float_of_js x5162)
                                    ~currentValue:(Ojs.float_of_js x5163)
                                    ~currentIndex:(Ojs.float_of_js x5164)
                                    ~array:(t_of_js x5165))));(Ojs.float_to_js
                                                                 x5166)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x5175 : 'tags this) ->
        fun
          ~callbackfn:(x5169 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x5174 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x5175) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x5170 : Ojs.t) ->
                         fun (x5171 : Ojs.t) ->
                           fun (x5172 : Ojs.t) ->
                             fun (x5173 : Ojs.t) ->
                               Obj.magic
                                 (x5169 ~previousValue:(Obj.magic x5170)
                                    ~currentValue:(Ojs.float_of_js x5171)
                                    ~currentIndex:(Ojs.float_of_js x5172)
                                    ~array:(t_of_js x5173))));(Obj.magic
                                                                 x5174)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x5182 : 'tags this) ->
        fun
          ~callbackfn:(x5177 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x5182) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x5178 : Ojs.t) ->
                       fun (x5179 : Ojs.t) ->
                         fun (x5180 : Ojs.t) ->
                           fun (x5181 : Ojs.t) ->
                             Ojs.float_to_js
                               (x5177 ~previousValue:(Ojs.float_of_js x5178)
                                  ~currentValue:(Ojs.float_of_js x5179)
                                  ~currentIndex:(Ojs.float_of_js x5180)
                                  ~array:(t_of_js x5181))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x5190 : 'tags this) ->
        fun
          ~callbackfn:(x5184 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x5189 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x5190) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x5185 : Ojs.t) ->
                         fun (x5186 : Ojs.t) ->
                           fun (x5187 : Ojs.t) ->
                             fun (x5188 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x5184
                                    ~previousValue:(Ojs.float_of_js x5185)
                                    ~currentValue:(Ojs.float_of_js x5186)
                                    ~currentIndex:(Ojs.float_of_js x5187)
                                    ~array:(t_of_js x5188))));(Ojs.float_to_js
                                                                 x5189)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x5198 : 'tags this) ->
        fun
          ~callbackfn:(x5192 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x5197 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x5198) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x5193 : Ojs.t) ->
                         fun (x5194 : Ojs.t) ->
                           fun (x5195 : Ojs.t) ->
                             fun (x5196 : Ojs.t) ->
                               Obj.magic
                                 (x5192 ~previousValue:(Obj.magic x5193)
                                    ~currentValue:(Ojs.float_of_js x5194)
                                    ~currentIndex:(Ojs.float_of_js x5195)
                                    ~array:(t_of_js x5196))));(Obj.magic
                                                                 x5197)|])
    let (reverse : 'tags this -> t) =
      fun (x5200 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x5200) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x5207 : 'tags this) ->
        fun ~array:(x5202 : float ArrayLike.t) ->
          fun ?offset:(x5203 : float option) ->
            fun () ->
              ignore
                (let x5209 = this_to_js Obj.magic x5207 in
                 Ojs.call (Ojs.get_prop_ascii x5209 "set") "apply"
                   [|x5209;((let x5204 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5204 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x5202)|]);
                             (match x5203 with
                              | Some x5205 ->
                                  ignore
                                    (Ojs.call x5204 "push"
                                       [|(Ojs.float_to_js x5205)|])
                              | None -> ());
                             x5204))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x5215 : 'tags this) ->
        fun ?start:(x5210 : float option) ->
          fun ?end_:(x5211 : float option) ->
            fun () ->
              t_of_js
                (let x5217 = this_to_js Obj.magic x5215 in
                 Ojs.call (Ojs.get_prop_ascii x5217 "slice") "apply"
                   [|x5217;((let x5212 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5210 with
                              | Some x5214 ->
                                  ignore
                                    (Ojs.call x5212 "push"
                                       [|(Ojs.float_to_js x5214)|])
                              | None -> ());
                             (match x5211 with
                              | Some x5213 ->
                                  ignore
                                    (Ojs.call x5212 "push"
                                       [|(Ojs.float_to_js x5213)|])
                              | None -> ());
                             x5212))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x5225 : 'tags this) ->
        fun
          ~predicate:(x5218 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x5219 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5227 = this_to_js Obj.magic x5225 in
                 Ojs.call (Ojs.get_prop_ascii x5227 "some") "apply"
                   [|x5227;((let x5220 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5220 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5222 : Ojs.t) ->
                                          fun (x5223 : Ojs.t) ->
                                            fun (x5224 : Ojs.t) ->
                                              unknown_to_js
                                                (x5218
                                                   ~value:(Ojs.float_of_js
                                                             x5222)
                                                   ~index:(Ojs.float_of_js
                                                             x5223)
                                                   ~array:(t_of_js x5224))))|]);
                             (match x5219 with
                              | Some x5221 ->
                                  ignore
                                    (Ojs.call x5220 "push"
                                       [|(any_to_js x5221)|])
                              | None -> ());
                             x5220))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x5233 : 'tags this) ->
        fun ?compareFn:(x5228 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x5235 = this_to_js Obj.magic x5233 in
               Ojs.call (Ojs.get_prop_ascii x5235 "sort") "apply"
                 [|x5235;((let x5229 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5228 with
                            | Some x5230 ->
                                ignore
                                  (Ojs.call x5229 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x5231 : Ojs.t) ->
                                             fun (x5232 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x5230
                                                    ~a:(Ojs.float_of_js x5231)
                                                    ~b:(Ojs.float_of_js x5232))))|])
                            | None -> ());
                           x5229))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x5242 : 'tags this) ->
        fun ?begin_:(x5237 : float option) ->
          fun ?end_:(x5238 : float option) ->
            fun () ->
              t_of_js
                (let x5244 = this_to_js Obj.magic x5242 in
                 Ojs.call (Ojs.get_prop_ascii x5244 "subarray") "apply"
                   [|x5244;((let x5239 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5237 with
                              | Some x5241 ->
                                  ignore
                                    (Ojs.call x5239 "push"
                                       [|(Ojs.float_to_js x5241)|])
                              | None -> ());
                             (match x5238 with
                              | Some x5240 ->
                                  ignore
                                    (Ojs.call x5239 "push"
                                       [|(Ojs.float_to_js x5240)|])
                              | None -> ());
                             x5239))|])
    let (toString : 'tags this -> string) =
      fun (x5245 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x5245) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x5247 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x5247) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x5249 : 'tags this) ->
        fun (x5251 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x5249)
               (Ojs.float_to_js x5251))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x5252 : 'tags this) ->
        fun (x5254 : float) ->
          fun (x5255 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x5252) (Ojs.float_to_js x5254)
              (Ojs.float_to_js x5255)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x5256 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|(Iterable.t_to_js Ojs.float_to_js x5256)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x5258 : float Iterable.t) ->
        fun ?mapfn:(x5259 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x5260 : any option) ->
            fun () ->
              t_of_js
                (let x5267 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
                 Ojs.call (Ojs.get_prop_ascii x5267 "from") "apply"
                   [|x5267;((let x5261 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5261 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x5258)|]);
                             (match x5259 with
                              | Some x5263 ->
                                  ignore
                                    (Ojs.call x5261 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x5264 : Ojs.t) ->
                                               fun (x5265 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x5263
                                                      ~v:(Ojs.float_of_js
                                                            x5264)
                                                      ~k:(Ojs.float_of_js
                                                            x5265))))|])
                              | None -> ());
                             (match x5260 with
                              | Some x5262 ->
                                  ignore
                                    (Ojs.call x5261 "push"
                                       [|(any_to_js x5262)|])
                              | None -> ());
                             x5261))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float64Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x5268 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|(Ojs.float_to_js x5268)|])
    let (create''' : (ArrayBufferLike.t, float ArrayLike.t) union2 -> t) =
      fun (x5269 : (ArrayBufferLike.t, float ArrayLike.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|(union2_to_js ArrayBufferLike.t_to_js
                  (fun (x5271 : float ArrayLike.t) ->
                     ArrayLike.t_to_js Ojs.float_to_js x5271) x5269)|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x5273 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x5274 : float option) ->
          fun ?length:(x5275 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Float64Array")
                   (let x5276 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x5276 "push"
                         [|(ArrayBufferLike.t_to_js x5273)|]);
                    (match x5274 with
                     | Some x5278 ->
                         ignore
                           (Ojs.call x5276 "push" [|(Ojs.float_to_js x5278)|])
                     | None -> ());
                    (match x5275 with
                     | Some x5277 ->
                         ignore
                           (Ojs.call x5276 "push" [|(Ojs.float_to_js x5277)|])
                     | None -> ());
                    x5276))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float64Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x5279 : float list) ->
        t_of_js
          (let x5282 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
           Ojs.call (Ojs.get_prop_ascii x5282 "of") "apply"
             [|x5282;((let x5280 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x5281 : float) ->
                            ignore
                              (Ojs.call x5280 "push"
                                 [|(Ojs.float_to_js x5281)|])) x5279;
                       x5280))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x5283 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Float64Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x5283)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x5285 : 'T ArrayLike.t) ->
        fun ~mapfn:(x5286 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x5287 : any option) ->
            fun () ->
              t_of_js
                (let x5293 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
                 Ojs.call (Ojs.get_prop_ascii x5293 "from") "apply"
                   [|x5293;((let x5288 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5288 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x5285)|]);
                             ignore
                               (Ojs.call x5288 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x5290 : Ojs.t) ->
                                          fun (x5291 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x5286 ~v:(Obj.magic x5290)
                                                 ~k:(Ojs.float_of_js x5291))))|]);
                             (match x5287 with
                              | Some x5289 ->
                                  ignore
                                    (Ojs.call x5288 "push"
                                       [|(any_to_js x5289)|])
                              | None -> ());
                             x5288))|])
    let cast_from = Obj.magic
  end
module Float32Array =
  struct
    type t =
      [ `Float32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5295 : Ojs.t) -> t_of_js x5295
    and t_0_to_js : t_0 -> Ojs.t = fun (x5294 : t) -> t_to_js x5294
    type tags =
      [ `Float32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Float32Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5298 : Ojs.t) -> intf_of_js __tags_of_js x5298
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5296 : __tags intf) -> intf_to_js __tags_to_js x5296
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x5304 : 'tags this) ->
        fun ~searchElement:(x5300 : float) ->
          fun ?fromIndex:(x5301 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5306 = this_to_js Obj.magic x5304 in
                 Ojs.call (Ojs.get_prop_ascii x5306 "includes") "apply"
                   [|x5306;((let x5302 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5302 "push"
                                  [|(Ojs.float_to_js x5300)|]);
                             (match x5301 with
                              | Some x5303 ->
                                  ignore
                                    (Ojs.call x5302 "push"
                                       [|(Ojs.float_to_js x5303)|])
                              | None -> ());
                             x5302))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x5307 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x5309 : Ojs.t) ->
             let x5310 = x5309 in
             ((Ojs.float_of_js (Ojs.array_get x5310 0)),
               (Ojs.float_of_js (Ojs.array_get x5310 1))))
          (Ojs.call (this_to_js Obj.magic x5307) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x5311 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x5311) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x5314 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x5314) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x5317 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5317)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x5319 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5319) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x5321 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5321) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x5323 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5323) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x5330 : 'tags this) ->
        fun ~target:(x5325 : float) ->
          fun ~start:(x5326 : float) ->
            fun ?end_:(x5327 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x5332 = this_to_js Obj.magic x5330 in
                   Ojs.call (Ojs.get_prop_ascii x5332 "copyWithin") "apply"
                     [|x5332;((let x5328 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5328 "push"
                                    [|(Ojs.float_to_js x5325)|]);
                               ignore
                                 (Ojs.call x5328 "push"
                                    [|(Ojs.float_to_js x5326)|]);
                               (match x5327 with
                                | Some x5329 ->
                                    ignore
                                      (Ojs.call x5328 "push"
                                         [|(Ojs.float_to_js x5329)|])
                                | None -> ());
                               x5328))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x5341 : 'tags this) ->
        fun
          ~predicate:(x5334 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x5335 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5343 = this_to_js Obj.magic x5341 in
                 Ojs.call (Ojs.get_prop_ascii x5343 "every") "apply"
                   [|x5343;((let x5336 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5336 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5338 : Ojs.t) ->
                                          fun (x5339 : Ojs.t) ->
                                            fun (x5340 : Ojs.t) ->
                                              unknown_to_js
                                                (x5334
                                                   ~value:(Ojs.float_of_js
                                                             x5338)
                                                   ~index:(Ojs.float_of_js
                                                             x5339)
                                                   ~array:(t_of_js x5340))))|]);
                             (match x5335 with
                              | Some x5337 ->
                                  ignore
                                    (Ojs.call x5336 "push"
                                       [|(any_to_js x5337)|])
                              | None -> ());
                             x5336))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x5350 : 'tags this) ->
        fun ~value:(x5344 : float) ->
          fun ?start:(x5345 : float option) ->
            fun ?end_:(x5346 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x5352 = this_to_js Obj.magic x5350 in
                   Ojs.call (Ojs.get_prop_ascii x5352 "fill") "apply"
                     [|x5352;((let x5347 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5347 "push"
                                    [|(Ojs.float_to_js x5344)|]);
                               (match x5345 with
                                | Some x5349 ->
                                    ignore
                                      (Ojs.call x5347 "push"
                                         [|(Ojs.float_to_js x5349)|])
                                | None -> ());
                               (match x5346 with
                                | Some x5348 ->
                                    ignore
                                      (Ojs.call x5347 "push"
                                         [|(Ojs.float_to_js x5348)|])
                                | None -> ());
                               x5347))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x5361 : 'tags this) ->
        fun ~predicate:(x5354 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x5355 : any option) ->
            fun () ->
              t_of_js
                (let x5363 = this_to_js Obj.magic x5361 in
                 Ojs.call (Ojs.get_prop_ascii x5363 "filter") "apply"
                   [|x5363;((let x5356 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5356 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5358 : Ojs.t) ->
                                          fun (x5359 : Ojs.t) ->
                                            fun (x5360 : Ojs.t) ->
                                              any_to_js
                                                (x5354
                                                   ~value:(Ojs.float_of_js
                                                             x5358)
                                                   ~index:(Ojs.float_of_js
                                                             x5359)
                                                   ~array:(t_of_js x5360))))|]);
                             (match x5355 with
                              | Some x5357 ->
                                  ignore
                                    (Ojs.call x5356 "push"
                                       [|(any_to_js x5357)|])
                              | None -> ());
                             x5356))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x5371 : 'tags this) ->
        fun ~predicate:(x5364 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x5365 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x5373 = this_to_js Obj.magic x5371 in
                 Ojs.call (Ojs.get_prop_ascii x5373 "find") "apply"
                   [|x5373;((let x5366 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5366 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5368 : Ojs.t) ->
                                          fun (x5369 : Ojs.t) ->
                                            fun (x5370 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x5364
                                                   ~value:(Ojs.float_of_js
                                                             x5368)
                                                   ~index:(Ojs.float_of_js
                                                             x5369)
                                                   ~obj:(t_of_js x5370))))|]);
                             (match x5365 with
                              | Some x5367 ->
                                  ignore
                                    (Ojs.call x5366 "push"
                                       [|(any_to_js x5367)|])
                              | None -> ());
                             x5366))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x5382 : 'tags this) ->
        fun ~predicate:(x5375 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x5376 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x5384 = this_to_js Obj.magic x5382 in
                 Ojs.call (Ojs.get_prop_ascii x5384 "findIndex") "apply"
                   [|x5384;((let x5377 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5377 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5379 : Ojs.t) ->
                                          fun (x5380 : Ojs.t) ->
                                            fun (x5381 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x5375
                                                   ~value:(Ojs.float_of_js
                                                             x5379)
                                                   ~index:(Ojs.float_of_js
                                                             x5380)
                                                   ~obj:(t_of_js x5381))))|]);
                             (match x5376 with
                              | Some x5378 ->
                                  ignore
                                    (Ojs.call x5377 "push"
                                       [|(any_to_js x5378)|])
                              | None -> ());
                             x5377))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x5392 : 'tags this) ->
        fun
          ~callbackfn:(x5385 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x5386 : any option) ->
            fun () ->
              ignore
                (let x5394 = this_to_js Obj.magic x5392 in
                 Ojs.call (Ojs.get_prop_ascii x5394 "forEach") "apply"
                   [|x5394;((let x5387 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5387 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5389 : Ojs.t) ->
                                          fun (x5390 : Ojs.t) ->
                                            fun (x5391 : Ojs.t) ->
                                              x5385
                                                ~value:(Ojs.float_of_js x5389)
                                                ~index:(Ojs.float_of_js x5390)
                                                ~array:(t_of_js x5391)))|]);
                             (match x5386 with
                              | Some x5388 ->
                                  ignore
                                    (Ojs.call x5387 "push"
                                       [|(any_to_js x5388)|])
                              | None -> ());
                             x5387))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x5399 : 'tags this) ->
        fun ~searchElement:(x5395 : float) ->
          fun ?fromIndex:(x5396 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x5401 = this_to_js Obj.magic x5399 in
                 Ojs.call (Ojs.get_prop_ascii x5401 "indexOf") "apply"
                   [|x5401;((let x5397 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5397 "push"
                                  [|(Ojs.float_to_js x5395)|]);
                             (match x5396 with
                              | Some x5398 ->
                                  ignore
                                    (Ojs.call x5397 "push"
                                       [|(Ojs.float_to_js x5398)|])
                              | None -> ());
                             x5397))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x5405 : 'tags this) ->
        fun ?separator:(x5402 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x5407 = this_to_js Obj.magic x5405 in
               Ojs.call (Ojs.get_prop_ascii x5407 "join") "apply"
                 [|x5407;((let x5403 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5402 with
                            | Some x5404 ->
                                ignore
                                  (Ojs.call x5403 "push"
                                     [|(Ojs.string_to_js x5404)|])
                            | None -> ());
                           x5403))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x5412 : 'tags this) ->
        fun ~searchElement:(x5408 : float) ->
          fun ?fromIndex:(x5409 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x5414 = this_to_js Obj.magic x5412 in
                 Ojs.call (Ojs.get_prop_ascii x5414 "lastIndexOf") "apply"
                   [|x5414;((let x5410 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5410 "push"
                                  [|(Ojs.float_to_js x5408)|]);
                             (match x5409 with
                              | Some x5411 ->
                                  ignore
                                    (Ojs.call x5410 "push"
                                       [|(Ojs.float_to_js x5411)|])
                              | None -> ());
                             x5410))|])
    let (get_length : 'tags this -> float) =
      fun (x5415 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5415) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x5424 : 'tags this) ->
        fun
          ~callbackfn:(x5417 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x5418 : any option) ->
            fun () ->
              t_of_js
                (let x5426 = this_to_js Obj.magic x5424 in
                 Ojs.call (Ojs.get_prop_ascii x5426 "map") "apply"
                   [|x5426;((let x5419 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5419 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5421 : Ojs.t) ->
                                          fun (x5422 : Ojs.t) ->
                                            fun (x5423 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x5417
                                                   ~value:(Ojs.float_of_js
                                                             x5421)
                                                   ~index:(Ojs.float_of_js
                                                             x5422)
                                                   ~array:(t_of_js x5423))))|]);
                             (match x5418 with
                              | Some x5420 ->
                                  ignore
                                    (Ojs.call x5419 "push"
                                       [|(any_to_js x5420)|])
                              | None -> ());
                             x5419))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x5432 : 'tags this) ->
        fun
          ~callbackfn:(x5427 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x5432) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x5428 : Ojs.t) ->
                       fun (x5429 : Ojs.t) ->
                         fun (x5430 : Ojs.t) ->
                           fun (x5431 : Ojs.t) ->
                             Ojs.float_to_js
                               (x5427 ~previousValue:(Ojs.float_of_js x5428)
                                  ~currentValue:(Ojs.float_of_js x5429)
                                  ~currentIndex:(Ojs.float_of_js x5430)
                                  ~array:(t_of_js x5431))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x5440 : 'tags this) ->
        fun
          ~callbackfn:(x5434 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x5439 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x5440) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x5435 : Ojs.t) ->
                         fun (x5436 : Ojs.t) ->
                           fun (x5437 : Ojs.t) ->
                             fun (x5438 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x5434
                                    ~previousValue:(Ojs.float_of_js x5435)
                                    ~currentValue:(Ojs.float_of_js x5436)
                                    ~currentIndex:(Ojs.float_of_js x5437)
                                    ~array:(t_of_js x5438))));(Ojs.float_to_js
                                                                 x5439)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x5448 : 'tags this) ->
        fun
          ~callbackfn:(x5442 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x5447 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x5448) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x5443 : Ojs.t) ->
                         fun (x5444 : Ojs.t) ->
                           fun (x5445 : Ojs.t) ->
                             fun (x5446 : Ojs.t) ->
                               Obj.magic
                                 (x5442 ~previousValue:(Obj.magic x5443)
                                    ~currentValue:(Ojs.float_of_js x5444)
                                    ~currentIndex:(Ojs.float_of_js x5445)
                                    ~array:(t_of_js x5446))));(Obj.magic
                                                                 x5447)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x5455 : 'tags this) ->
        fun
          ~callbackfn:(x5450 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x5455) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x5451 : Ojs.t) ->
                       fun (x5452 : Ojs.t) ->
                         fun (x5453 : Ojs.t) ->
                           fun (x5454 : Ojs.t) ->
                             Ojs.float_to_js
                               (x5450 ~previousValue:(Ojs.float_of_js x5451)
                                  ~currentValue:(Ojs.float_of_js x5452)
                                  ~currentIndex:(Ojs.float_of_js x5453)
                                  ~array:(t_of_js x5454))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x5463 : 'tags this) ->
        fun
          ~callbackfn:(x5457 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x5462 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x5463) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x5458 : Ojs.t) ->
                         fun (x5459 : Ojs.t) ->
                           fun (x5460 : Ojs.t) ->
                             fun (x5461 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x5457
                                    ~previousValue:(Ojs.float_of_js x5458)
                                    ~currentValue:(Ojs.float_of_js x5459)
                                    ~currentIndex:(Ojs.float_of_js x5460)
                                    ~array:(t_of_js x5461))));(Ojs.float_to_js
                                                                 x5462)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x5471 : 'tags this) ->
        fun
          ~callbackfn:(x5465 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x5470 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x5471) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x5466 : Ojs.t) ->
                         fun (x5467 : Ojs.t) ->
                           fun (x5468 : Ojs.t) ->
                             fun (x5469 : Ojs.t) ->
                               Obj.magic
                                 (x5465 ~previousValue:(Obj.magic x5466)
                                    ~currentValue:(Ojs.float_of_js x5467)
                                    ~currentIndex:(Ojs.float_of_js x5468)
                                    ~array:(t_of_js x5469))));(Obj.magic
                                                                 x5470)|])
    let (reverse : 'tags this -> t) =
      fun (x5473 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x5473) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x5480 : 'tags this) ->
        fun ~array:(x5475 : float ArrayLike.t) ->
          fun ?offset:(x5476 : float option) ->
            fun () ->
              ignore
                (let x5482 = this_to_js Obj.magic x5480 in
                 Ojs.call (Ojs.get_prop_ascii x5482 "set") "apply"
                   [|x5482;((let x5477 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5477 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x5475)|]);
                             (match x5476 with
                              | Some x5478 ->
                                  ignore
                                    (Ojs.call x5477 "push"
                                       [|(Ojs.float_to_js x5478)|])
                              | None -> ());
                             x5477))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x5488 : 'tags this) ->
        fun ?start:(x5483 : float option) ->
          fun ?end_:(x5484 : float option) ->
            fun () ->
              t_of_js
                (let x5490 = this_to_js Obj.magic x5488 in
                 Ojs.call (Ojs.get_prop_ascii x5490 "slice") "apply"
                   [|x5490;((let x5485 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5483 with
                              | Some x5487 ->
                                  ignore
                                    (Ojs.call x5485 "push"
                                       [|(Ojs.float_to_js x5487)|])
                              | None -> ());
                             (match x5484 with
                              | Some x5486 ->
                                  ignore
                                    (Ojs.call x5485 "push"
                                       [|(Ojs.float_to_js x5486)|])
                              | None -> ());
                             x5485))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x5498 : 'tags this) ->
        fun
          ~predicate:(x5491 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x5492 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5500 = this_to_js Obj.magic x5498 in
                 Ojs.call (Ojs.get_prop_ascii x5500 "some") "apply"
                   [|x5500;((let x5493 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5493 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5495 : Ojs.t) ->
                                          fun (x5496 : Ojs.t) ->
                                            fun (x5497 : Ojs.t) ->
                                              unknown_to_js
                                                (x5491
                                                   ~value:(Ojs.float_of_js
                                                             x5495)
                                                   ~index:(Ojs.float_of_js
                                                             x5496)
                                                   ~array:(t_of_js x5497))))|]);
                             (match x5492 with
                              | Some x5494 ->
                                  ignore
                                    (Ojs.call x5493 "push"
                                       [|(any_to_js x5494)|])
                              | None -> ());
                             x5493))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x5506 : 'tags this) ->
        fun ?compareFn:(x5501 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x5508 = this_to_js Obj.magic x5506 in
               Ojs.call (Ojs.get_prop_ascii x5508 "sort") "apply"
                 [|x5508;((let x5502 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5501 with
                            | Some x5503 ->
                                ignore
                                  (Ojs.call x5502 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x5504 : Ojs.t) ->
                                             fun (x5505 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x5503
                                                    ~a:(Ojs.float_of_js x5504)
                                                    ~b:(Ojs.float_of_js x5505))))|])
                            | None -> ());
                           x5502))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x5515 : 'tags this) ->
        fun ?begin_:(x5510 : float option) ->
          fun ?end_:(x5511 : float option) ->
            fun () ->
              t_of_js
                (let x5517 = this_to_js Obj.magic x5515 in
                 Ojs.call (Ojs.get_prop_ascii x5517 "subarray") "apply"
                   [|x5517;((let x5512 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5510 with
                              | Some x5514 ->
                                  ignore
                                    (Ojs.call x5512 "push"
                                       [|(Ojs.float_to_js x5514)|])
                              | None -> ());
                             (match x5511 with
                              | Some x5513 ->
                                  ignore
                                    (Ojs.call x5512 "push"
                                       [|(Ojs.float_to_js x5513)|])
                              | None -> ());
                             x5512))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x5518 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x5518) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x5520 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x5520) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x5522 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x5522) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x5524 : 'tags this) ->
        fun (x5526 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x5524)
               (Ojs.float_to_js x5526))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x5527 : 'tags this) ->
        fun (x5529 : float) ->
          fun (x5530 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x5527) (Ojs.float_to_js x5529)
              (Ojs.float_to_js x5530)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x5531 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|(Iterable.t_to_js Ojs.float_to_js x5531)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x5533 : float Iterable.t) ->
        fun ?mapfn:(x5534 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x5535 : any option) ->
            fun () ->
              t_of_js
                (let x5542 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
                 Ojs.call (Ojs.get_prop_ascii x5542 "from") "apply"
                   [|x5542;((let x5536 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5536 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x5533)|]);
                             (match x5534 with
                              | Some x5538 ->
                                  ignore
                                    (Ojs.call x5536 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x5539 : Ojs.t) ->
                                               fun (x5540 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x5538
                                                      ~v:(Ojs.float_of_js
                                                            x5539)
                                                      ~k:(Ojs.float_of_js
                                                            x5540))))|])
                              | None -> ());
                             (match x5535 with
                              | Some x5537 ->
                                  ignore
                                    (Ojs.call x5536 "push"
                                       [|(any_to_js x5537)|])
                              | None -> ());
                             x5536))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float32Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x5543 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|(Ojs.float_to_js x5543)|])
    let (create''' : (ArrayBufferLike.t, float ArrayLike.t) union2 -> t) =
      fun (x5544 : (ArrayBufferLike.t, float ArrayLike.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|(union2_to_js ArrayBufferLike.t_to_js
                  (fun (x5546 : float ArrayLike.t) ->
                     ArrayLike.t_to_js Ojs.float_to_js x5546) x5544)|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x5548 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x5549 : float option) ->
          fun ?length:(x5550 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Float32Array")
                   (let x5551 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x5551 "push"
                         [|(ArrayBufferLike.t_to_js x5548)|]);
                    (match x5549 with
                     | Some x5553 ->
                         ignore
                           (Ojs.call x5551 "push" [|(Ojs.float_to_js x5553)|])
                     | None -> ());
                    (match x5550 with
                     | Some x5552 ->
                         ignore
                           (Ojs.call x5551 "push" [|(Ojs.float_to_js x5552)|])
                     | None -> ());
                    x5551))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float32Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x5554 : float list) ->
        t_of_js
          (let x5557 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
           Ojs.call (Ojs.get_prop_ascii x5557 "of") "apply"
             [|x5557;((let x5555 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x5556 : float) ->
                            ignore
                              (Ojs.call x5555 "push"
                                 [|(Ojs.float_to_js x5556)|])) x5554;
                       x5555))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x5558 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Float32Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x5558)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x5560 : 'T ArrayLike.t) ->
        fun ~mapfn:(x5561 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x5562 : any option) ->
            fun () ->
              t_of_js
                (let x5568 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
                 Ojs.call (Ojs.get_prop_ascii x5568 "from") "apply"
                   [|x5568;((let x5563 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5563 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x5560)|]);
                             ignore
                               (Ojs.call x5563 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x5565 : Ojs.t) ->
                                          fun (x5566 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x5561 ~v:(Obj.magic x5565)
                                                 ~k:(Ojs.float_of_js x5566))))|]);
                             (match x5562 with
                              | Some x5564 ->
                                  ignore
                                    (Ojs.call x5563 "push"
                                       [|(any_to_js x5564)|])
                              | None -> ());
                             x5563))|])
    let cast_from = Obj.magic
  end
module FinalizationRegistry =
  struct
    type 'T t = [ `FinalizationRegistry of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x5571 : Ojs.t) -> t_of_js __T_of_js x5571
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x5569 : __T t) -> t_to_js __T_to_js x5569
    type t_0 = any t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x5575 : Ojs.t) -> t_of_js any_of_js x5575
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x5573 : any t) -> t_to_js any_to_js x5573
    type 'T tags = [ `FinalizationRegistry of 'T ]
    type 'T tags_1 = 'T tags
    type tags_0 = any tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `FinalizationRegistry of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x5579 : Ojs.t) -> intf_of_js __tags_of_js x5579
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x5577 : __tags intf) -> intf_to_js __tags_to_js x5577
    let (register :
      ('tags, 'T) this ->
        target:untyped_object ->
          heldValue:any -> ?unregisterToken:untyped_object -> unit -> unit)
      =
      fun (x5586 : ('tags, 'T) this) ->
        fun ~target:(x5581 : untyped_object) ->
          fun ~heldValue:(x5582 : any) ->
            fun ?unregisterToken:(x5583 : untyped_object option) ->
              fun () ->
                ignore
                  (let x5589 = this_to_js Obj.magic Obj.magic x5586 in
                   Ojs.call (Ojs.get_prop_ascii x5589 "register") "apply"
                     [|x5589;((let x5584 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5584 "push"
                                    [|(untyped_object_to_js x5581)|]);
                               ignore
                                 (Ojs.call x5584 "push" [|(any_to_js x5582)|]);
                               (match x5583 with
                                | Some x5585 ->
                                    ignore
                                      (Ojs.call x5584 "push"
                                         [|(untyped_object_to_js x5585)|])
                                | None -> ());
                               x5584))|])
    let (unregister :
      ('tags, 'T) this -> unregisterToken:untyped_object -> unit) =
      fun (x5591 : ('tags, 'T) this) ->
        fun ~unregisterToken:(x5590 : untyped_object) ->
          ignore
            (Ojs.call (this_to_js Obj.magic Obj.magic x5591) "unregister"
               [|(untyped_object_to_js x5590)|])
    let (register' :
      ('tags, 'T) this ->
        target:untyped_object ->
          heldValue:'T -> ?unregisterToken:untyped_object -> unit -> unit)
      =
      fun (x5599 : ('tags, 'T) this) ->
        fun ~target:(x5594 : untyped_object) ->
          fun ~heldValue:(x5595 : 'T) ->
            fun ?unregisterToken:(x5596 : untyped_object option) ->
              fun () ->
                ignore
                  (let x5602 = this_to_js Obj.magic Obj.magic x5599 in
                   Ojs.call (Ojs.get_prop_ascii x5602 "register") "apply"
                     [|x5602;((let x5597 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5597 "push"
                                    [|(untyped_object_to_js x5594)|]);
                               ignore
                                 (Ojs.call x5597 "push" [|(Obj.magic x5595)|]);
                               (match x5596 with
                                | Some x5598 ->
                                    ignore
                                      (Ojs.call x5597 "push"
                                         [|(untyped_object_to_js x5598)|])
                                | None -> ());
                               x5597))|])
    let (unregister' :
      ('tags, 'T) this -> unregisterToken:untyped_object -> unit) =
      fun (x5604 : ('tags, 'T) this) ->
        fun ~unregisterToken:(x5603 : untyped_object) ->
          ignore
            (Ojs.call (this_to_js Obj.magic Obj.magic x5604) "unregister"
               [|(untyped_object_to_js x5603)|])
    let (prototype : unit -> t_0) =
      fun () ->
        t_0_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             "prototype")
    let (create : (any -> unit) -> t_0) =
      fun (x5607 : any -> unit) ->
        t_0_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             [|(Ojs.fun_to_js 1
                  (fun (x5608 : Ojs.t) -> x5607 (any_of_js x5608)))|])
    let (prototype' : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             "prototype")
    let (create' : ('T -> unit) -> 'T t) =
      fun (x5610 : 'T -> unit) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             [|(Ojs.fun_to_js 1
                  (fun (x5611 : Ojs.t) -> x5610 (Obj.magic x5611)))|])
    let cast_from = Obj.magic
  end
module Extract =
  struct
    type ('T, 'U) t = any
    let rec t_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__U_of_js : Ojs.t -> __U) ->
          fun (x5614 : Ojs.t) -> any_of_js x5614
    and t_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t -> Ojs.t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__U_to_js : __U -> Ojs.t) ->
          fun (x5613 : any) -> any_to_js x5613
    type ('T, 'U) t_2 = ('T, 'U) t
    let rec t_2_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t_2 = fun
      (type __T) -> fun (type __U) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__U_of_js : Ojs.t -> __U) ->
          fun (x5618 : Ojs.t) -> t_of_js __T_of_js __U_of_js x5618
    and t_2_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t_2 -> Ojs.t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__U_to_js : __U -> Ojs.t) ->
          fun (x5615 : (__T, __U) t) -> t_to_js __T_to_js __U_to_js x5615
  end
module EvalError =
  struct
    type t = [ `Error  | `EvalError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5622 : Ojs.t) -> t_of_js x5622
    and t_0_to_js : t_0 -> Ojs.t = fun (x5621 : t) -> t_to_js x5621
    type tags = [ `Error  | `EvalError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `EvalError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5625 : Ojs.t) -> intf_of_js __tags_of_js x5625
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5623 : __tags intf) -> intf_to_js __tags_to_js x5623
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x5627 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "EvalError")
               (let x5628 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x5627 with
                 | Some x5629 ->
                     ignore
                       (Ojs.call x5628 "push" [|(Ojs.string_to_js x5629)|])
                 | None -> ());
                x5628))
    let (invoke : ?message:string -> unit -> t) =
      fun ?message:(x5630 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "EvalError") "apply"
               [|Ojs.null;((let x5631 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x5630 with
                             | Some x5632 ->
                                 ignore
                                   (Ojs.call x5631 "push"
                                      [|(Ojs.string_to_js x5632)|])
                             | None -> ());
                            x5631))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "EvalError")
             "prototype")
    let cast_from = Obj.magic
  end
module DataView =
  struct
    type t = [ `DataView ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5634 : Ojs.t) -> t_of_js x5634
    and t_0_to_js : t_0 -> Ojs.t = fun (x5633 : t) -> t_to_js x5633
    type tags = [ `DataView ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `DataView ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5637 : Ojs.t) -> intf_of_js __tags_of_js x5637
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5635 : __tags intf) -> intf_to_js __tags_to_js x5635
    let (getBigInt64 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> bigint)
      =
      fun (x5643 : 'tags this) ->
        fun ~byteOffset:(x5639 : float) ->
          fun ?littleEndian:(x5640 : bool option) ->
            fun () ->
              bigint_of_js
                (let x5645 = this_to_js Obj.magic x5643 in
                 Ojs.call (Ojs.get_prop_ascii x5645 "getBigInt64") "apply"
                   [|x5645;((let x5641 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5641 "push"
                                  [|(Ojs.float_to_js x5639)|]);
                             (match x5640 with
                              | Some x5642 ->
                                  ignore
                                    (Ojs.call x5641 "push"
                                       [|(Ojs.bool_to_js x5642)|])
                              | None -> ());
                             x5641))|])
    let (getBigUint64 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> bigint)
      =
      fun (x5650 : 'tags this) ->
        fun ~byteOffset:(x5646 : float) ->
          fun ?littleEndian:(x5647 : bool option) ->
            fun () ->
              bigint_of_js
                (let x5652 = this_to_js Obj.magic x5650 in
                 Ojs.call (Ojs.get_prop_ascii x5652 "getBigUint64") "apply"
                   [|x5652;((let x5648 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5648 "push"
                                  [|(Ojs.float_to_js x5646)|]);
                             (match x5647 with
                              | Some x5649 ->
                                  ignore
                                    (Ojs.call x5648 "push"
                                       [|(Ojs.bool_to_js x5649)|])
                              | None -> ());
                             x5648))|])
    let (setBigInt64 :
      'tags this ->
        byteOffset:float ->
          value:bigint -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x5658 : 'tags this) ->
        fun ~byteOffset:(x5653 : float) ->
          fun ~value:(x5654 : bigint) ->
            fun ?littleEndian:(x5655 : bool option) ->
              fun () ->
                ignore
                  (let x5660 = this_to_js Obj.magic x5658 in
                   Ojs.call (Ojs.get_prop_ascii x5660 "setBigInt64") "apply"
                     [|x5660;((let x5656 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5656 "push"
                                    [|(Ojs.float_to_js x5653)|]);
                               ignore
                                 (Ojs.call x5656 "push"
                                    [|(bigint_to_js x5654)|]);
                               (match x5655 with
                                | Some x5657 ->
                                    ignore
                                      (Ojs.call x5656 "push"
                                         [|(Ojs.bool_to_js x5657)|])
                                | None -> ());
                               x5656))|])
    let (setBigUint64 :
      'tags this ->
        byteOffset:float ->
          value:bigint -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x5666 : 'tags this) ->
        fun ~byteOffset:(x5661 : float) ->
          fun ~value:(x5662 : bigint) ->
            fun ?littleEndian:(x5663 : bool option) ->
              fun () ->
                ignore
                  (let x5668 = this_to_js Obj.magic x5666 in
                   Ojs.call (Ojs.get_prop_ascii x5668 "setBigUint64") "apply"
                     [|x5668;((let x5664 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5664 "push"
                                    [|(Ojs.float_to_js x5661)|]);
                               ignore
                                 (Ojs.call x5664 "push"
                                    [|(bigint_to_js x5662)|]);
                               (match x5663 with
                                | Some x5665 ->
                                    ignore
                                      (Ojs.call x5664 "push"
                                         [|(Ojs.bool_to_js x5665)|])
                                | None -> ());
                               x5664))|])
    let (get_buffer : 'tags this -> ArrayBuffer.t) =
      fun (x5669 : 'tags this) ->
        ArrayBuffer.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5669) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x5671 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5671) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x5673 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5673) "byteOffset")
    let (getFloat32 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x5679 : 'tags this) ->
        fun ~byteOffset:(x5675 : float) ->
          fun ?littleEndian:(x5676 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x5681 = this_to_js Obj.magic x5679 in
                 Ojs.call (Ojs.get_prop_ascii x5681 "getFloat32") "apply"
                   [|x5681;((let x5677 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5677 "push"
                                  [|(Ojs.float_to_js x5675)|]);
                             (match x5676 with
                              | Some x5678 ->
                                  ignore
                                    (Ojs.call x5677 "push"
                                       [|(Ojs.bool_to_js x5678)|])
                              | None -> ());
                             x5677))|])
    let (getFloat64 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x5686 : 'tags this) ->
        fun ~byteOffset:(x5682 : float) ->
          fun ?littleEndian:(x5683 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x5688 = this_to_js Obj.magic x5686 in
                 Ojs.call (Ojs.get_prop_ascii x5688 "getFloat64") "apply"
                   [|x5688;((let x5684 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5684 "push"
                                  [|(Ojs.float_to_js x5682)|]);
                             (match x5683 with
                              | Some x5685 ->
                                  ignore
                                    (Ojs.call x5684 "push"
                                       [|(Ojs.bool_to_js x5685)|])
                              | None -> ());
                             x5684))|])
    let (getInt8 : 'tags this -> byteOffset:float -> float) =
      fun (x5690 : 'tags this) ->
        fun ~byteOffset:(x5689 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x5690) "getInt8"
               [|(Ojs.float_to_js x5689)|])
    let (getInt16 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x5696 : 'tags this) ->
        fun ~byteOffset:(x5692 : float) ->
          fun ?littleEndian:(x5693 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x5698 = this_to_js Obj.magic x5696 in
                 Ojs.call (Ojs.get_prop_ascii x5698 "getInt16") "apply"
                   [|x5698;((let x5694 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5694 "push"
                                  [|(Ojs.float_to_js x5692)|]);
                             (match x5693 with
                              | Some x5695 ->
                                  ignore
                                    (Ojs.call x5694 "push"
                                       [|(Ojs.bool_to_js x5695)|])
                              | None -> ());
                             x5694))|])
    let (getInt32 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x5703 : 'tags this) ->
        fun ~byteOffset:(x5699 : float) ->
          fun ?littleEndian:(x5700 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x5705 = this_to_js Obj.magic x5703 in
                 Ojs.call (Ojs.get_prop_ascii x5705 "getInt32") "apply"
                   [|x5705;((let x5701 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5701 "push"
                                  [|(Ojs.float_to_js x5699)|]);
                             (match x5700 with
                              | Some x5702 ->
                                  ignore
                                    (Ojs.call x5701 "push"
                                       [|(Ojs.bool_to_js x5702)|])
                              | None -> ());
                             x5701))|])
    let (getUint8 : 'tags this -> byteOffset:float -> float) =
      fun (x5707 : 'tags this) ->
        fun ~byteOffset:(x5706 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x5707) "getUint8"
               [|(Ojs.float_to_js x5706)|])
    let (getUint16 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x5713 : 'tags this) ->
        fun ~byteOffset:(x5709 : float) ->
          fun ?littleEndian:(x5710 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x5715 = this_to_js Obj.magic x5713 in
                 Ojs.call (Ojs.get_prop_ascii x5715 "getUint16") "apply"
                   [|x5715;((let x5711 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5711 "push"
                                  [|(Ojs.float_to_js x5709)|]);
                             (match x5710 with
                              | Some x5712 ->
                                  ignore
                                    (Ojs.call x5711 "push"
                                       [|(Ojs.bool_to_js x5712)|])
                              | None -> ());
                             x5711))|])
    let (getUint32 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x5720 : 'tags this) ->
        fun ~byteOffset:(x5716 : float) ->
          fun ?littleEndian:(x5717 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x5722 = this_to_js Obj.magic x5720 in
                 Ojs.call (Ojs.get_prop_ascii x5722 "getUint32") "apply"
                   [|x5722;((let x5718 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5718 "push"
                                  [|(Ojs.float_to_js x5716)|]);
                             (match x5717 with
                              | Some x5719 ->
                                  ignore
                                    (Ojs.call x5718 "push"
                                       [|(Ojs.bool_to_js x5719)|])
                              | None -> ());
                             x5718))|])
    let (setFloat32 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x5728 : 'tags this) ->
        fun ~byteOffset:(x5723 : float) ->
          fun ~value:(x5724 : float) ->
            fun ?littleEndian:(x5725 : bool option) ->
              fun () ->
                ignore
                  (let x5730 = this_to_js Obj.magic x5728 in
                   Ojs.call (Ojs.get_prop_ascii x5730 "setFloat32") "apply"
                     [|x5730;((let x5726 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5726 "push"
                                    [|(Ojs.float_to_js x5723)|]);
                               ignore
                                 (Ojs.call x5726 "push"
                                    [|(Ojs.float_to_js x5724)|]);
                               (match x5725 with
                                | Some x5727 ->
                                    ignore
                                      (Ojs.call x5726 "push"
                                         [|(Ojs.bool_to_js x5727)|])
                                | None -> ());
                               x5726))|])
    let (setFloat64 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x5736 : 'tags this) ->
        fun ~byteOffset:(x5731 : float) ->
          fun ~value:(x5732 : float) ->
            fun ?littleEndian:(x5733 : bool option) ->
              fun () ->
                ignore
                  (let x5738 = this_to_js Obj.magic x5736 in
                   Ojs.call (Ojs.get_prop_ascii x5738 "setFloat64") "apply"
                     [|x5738;((let x5734 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5734 "push"
                                    [|(Ojs.float_to_js x5731)|]);
                               ignore
                                 (Ojs.call x5734 "push"
                                    [|(Ojs.float_to_js x5732)|]);
                               (match x5733 with
                                | Some x5735 ->
                                    ignore
                                      (Ojs.call x5734 "push"
                                         [|(Ojs.bool_to_js x5735)|])
                                | None -> ());
                               x5734))|])
    let (setInt8 : 'tags this -> byteOffset:float -> value:float -> unit) =
      fun (x5741 : 'tags this) ->
        fun ~byteOffset:(x5739 : float) ->
          fun ~value:(x5740 : float) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x5741) "setInt8"
                 [|(Ojs.float_to_js x5739);(Ojs.float_to_js x5740)|])
    let (setInt16 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x5748 : 'tags this) ->
        fun ~byteOffset:(x5743 : float) ->
          fun ~value:(x5744 : float) ->
            fun ?littleEndian:(x5745 : bool option) ->
              fun () ->
                ignore
                  (let x5750 = this_to_js Obj.magic x5748 in
                   Ojs.call (Ojs.get_prop_ascii x5750 "setInt16") "apply"
                     [|x5750;((let x5746 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5746 "push"
                                    [|(Ojs.float_to_js x5743)|]);
                               ignore
                                 (Ojs.call x5746 "push"
                                    [|(Ojs.float_to_js x5744)|]);
                               (match x5745 with
                                | Some x5747 ->
                                    ignore
                                      (Ojs.call x5746 "push"
                                         [|(Ojs.bool_to_js x5747)|])
                                | None -> ());
                               x5746))|])
    let (setInt32 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x5756 : 'tags this) ->
        fun ~byteOffset:(x5751 : float) ->
          fun ~value:(x5752 : float) ->
            fun ?littleEndian:(x5753 : bool option) ->
              fun () ->
                ignore
                  (let x5758 = this_to_js Obj.magic x5756 in
                   Ojs.call (Ojs.get_prop_ascii x5758 "setInt32") "apply"
                     [|x5758;((let x5754 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5754 "push"
                                    [|(Ojs.float_to_js x5751)|]);
                               ignore
                                 (Ojs.call x5754 "push"
                                    [|(Ojs.float_to_js x5752)|]);
                               (match x5753 with
                                | Some x5755 ->
                                    ignore
                                      (Ojs.call x5754 "push"
                                         [|(Ojs.bool_to_js x5755)|])
                                | None -> ());
                               x5754))|])
    let (setUint8 : 'tags this -> byteOffset:float -> value:float -> unit) =
      fun (x5761 : 'tags this) ->
        fun ~byteOffset:(x5759 : float) ->
          fun ~value:(x5760 : float) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x5761) "setUint8"
                 [|(Ojs.float_to_js x5759);(Ojs.float_to_js x5760)|])
    let (setUint16 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x5768 : 'tags this) ->
        fun ~byteOffset:(x5763 : float) ->
          fun ~value:(x5764 : float) ->
            fun ?littleEndian:(x5765 : bool option) ->
              fun () ->
                ignore
                  (let x5770 = this_to_js Obj.magic x5768 in
                   Ojs.call (Ojs.get_prop_ascii x5770 "setUint16") "apply"
                     [|x5770;((let x5766 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5766 "push"
                                    [|(Ojs.float_to_js x5763)|]);
                               ignore
                                 (Ojs.call x5766 "push"
                                    [|(Ojs.float_to_js x5764)|]);
                               (match x5765 with
                                | Some x5767 ->
                                    ignore
                                      (Ojs.call x5766 "push"
                                         [|(Ojs.bool_to_js x5767)|])
                                | None -> ());
                               x5766))|])
    let (setUint32 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x5776 : 'tags this) ->
        fun ~byteOffset:(x5771 : float) ->
          fun ~value:(x5772 : float) ->
            fun ?littleEndian:(x5773 : bool option) ->
              fun () ->
                ignore
                  (let x5778 = this_to_js Obj.magic x5776 in
                   Ojs.call (Ojs.get_prop_ascii x5778 "setUint32") "apply"
                     [|x5778;((let x5774 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5774 "push"
                                    [|(Ojs.float_to_js x5771)|]);
                               ignore
                                 (Ojs.call x5774 "push"
                                    [|(Ojs.float_to_js x5772)|]);
                               (match x5773 with
                                | Some x5775 ->
                                    ignore
                                      (Ojs.call x5774 "push"
                                         [|(Ojs.bool_to_js x5775)|])
                                | None -> ());
                               x5774))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DataView")
             "prototype")
    let (create :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?byteLength:float -> unit -> t)
      =
      fun ~buffer:(x5779 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x5780 : float option) ->
          fun ?byteLength:(x5781 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "DataView")
                   (let x5782 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x5782 "push"
                         [|(ArrayBufferLike.t_to_js x5779)|]);
                    (match x5780 with
                     | Some x5784 ->
                         ignore
                           (Ojs.call x5782 "push" [|(Ojs.float_to_js x5784)|])
                     | None -> ());
                    (match x5781 with
                     | Some x5783 ->
                         ignore
                           (Ojs.call x5782 "push" [|(Ojs.float_to_js x5783)|])
                     | None -> ());
                    x5782))
    let cast_from = Obj.magic
  end
module ConstructorParameters =
  struct
    module AnonymousInterface6 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x5786 : Ojs.t) -> x5786
        and t_to_js : t -> Ojs.t = fun (x5785 : Ojs.t) -> x5785
        let (create : t -> args:any list -> any) =
          fun (x5790 : t) ->
            fun ~args:(x5787 : any list) ->
              any_of_js
                (Ojs.new_obj_arr (t_to_js x5790)
                   (let x5788 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x5789 : any) ->
                         ignore (Ojs.call x5788 "push" [|(any_to_js x5789)|]))
                      x5787;
                    x5788))
      end
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x5792 : Ojs.t) -> any_of_js x5792
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x5791 : any) -> any_to_js x5791
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x5795 : Ojs.t) -> t_of_js __T_of_js x5795
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x5793 : __T t) -> t_to_js __T_to_js x5793
  end
module ClassDecorator =
  struct
    type t = [ `ClassDecorator ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5798 : Ojs.t) -> t_of_js x5798
    and t_0_to_js : t_0 -> Ojs.t = fun (x5797 : t) -> t_to_js x5797
    type tags = [ `ClassDecorator ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ClassDecorator ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5801 : Ojs.t) -> intf_of_js __tags_of_js x5801
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5799 : __tags intf) -> intf_to_js __tags_to_js x5799
    let (apply :
      'tags this -> target:'TFunction -> ('TFunction, unit) union2) =
      fun (x5804 : 'tags this) ->
        fun ~target:(x5803 : 'TFunction) ->
          union2_of_js Obj.magic Ojs.unit_of_js
            (Ojs.apply (this_to_js Obj.magic x5804) [|(Obj.magic x5803)|])
    let cast_from = Obj.magic
  end
module Capitalize =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t = fun (type __S) ->
      fun (__S_of_js : Ojs.t -> __S) -> fun (x5809 : Ojs.t) -> x5809
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) -> fun (x5808 : Ojs.t) -> x5808
    type 'S t_1 = 'S t
    let rec t_1_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t_1 = fun (type
      __S) ->
      fun (__S_of_js : Ojs.t -> __S) ->
        fun (x5812 : Ojs.t) -> t_of_js __S_of_js x5812
    and t_1_to_js : 'S . ('S -> Ojs.t) -> 'S t_1 -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) ->
        fun (x5810 : __S t) -> t_to_js __S_to_js x5810
  end
module ThisParameterType =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x5815 : Ojs.t) -> any_of_js x5815
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x5814 : any) -> any_to_js x5814
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x5818 : Ojs.t) -> t_of_js __T_of_js x5818
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x5816 : __T t) -> t_to_js __T_to_js x5816
  end
module OmitThisParameter =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x5821 : Ojs.t) -> any_of_js x5821
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x5820 : any) -> any_to_js x5820
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x5824 : Ojs.t) -> t_of_js __T_of_js x5824
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x5822 : __T t) -> t_to_js __T_to_js x5822
  end
module CallableFunction =
  struct
    type t = [ `CallableFunction  | `Function  | `Function ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5827 : Ojs.t) -> t_of_js x5827
    and t_0_to_js : t_0 -> Ojs.t = fun (x5826 : t) -> t_to_js x5826
    type tags = [ `CallableFunction  | `Function  | `Function ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `CallableFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5830 : Ojs.t) -> intf_of_js __tags_of_js x5830
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5828 : __tags intf) -> intf_to_js __tags_to_js x5828
    let (apply_ : 'tags this -> this:('T -> 'R) -> thisArg:'T -> 'R) =
      fun (x5835 : 'tags this) ->
        fun ~this:(x5832 : 'T -> 'R) ->
          fun ~thisArg:(x5834 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x5835) "apply"
                 [|(Ojs.fun_to_js 1
                      (fun (x5833 : Ojs.t) ->
                         Obj.magic (x5832 (Obj.magic x5833))));(Obj.magic
                                                                  x5834)|])
    let (apply_' :
      'tags this ->
        this:(this:'T -> args:any list -> 'R) -> thisArg:'T -> args:'A -> 'R)
      =
      fun (x5842 : 'tags this) ->
        fun ~this:(x5837 : this:'T -> args:any list -> 'R) ->
          fun ~thisArg:(x5840 : 'T) ->
            fun ~args:(x5841 : 'A) ->
              Obj.magic
                (Ojs.call (this_to_js Obj.magic x5842) "apply"
                   [|(Ojs.fun_to_js_args
                        (fun (x5838 : _) ->
                           Obj.magic
                             (x5837 ~this:(Obj.magic (Ojs.array_get x5838 0))
                                ~args:(Ojs.list_of_js_from any_of_js x5838 1))));(
                     Obj.magic x5840);(Obj.magic x5841)|])
    let (call :
      'tags this ->
        this:(this:'T -> args:any list -> 'R) ->
          thisArg:'T -> args:any list -> 'R)
      =
      fun (x5851 : 'tags this) ->
        fun ~this:(x5844 : this:'T -> args:any list -> 'R) ->
          fun ~thisArg:(x5845 : 'T) ->
            fun ~args:(x5846 : any list) ->
              Obj.magic
                (let x5853 = this_to_js Obj.magic x5851 in
                 Ojs.call (Ojs.get_prop_ascii x5853 "call") "apply"
                   [|x5853;((let x5847 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5847 "push"
                                  [|(Ojs.fun_to_js_args
                                       (fun (x5849 : _) ->
                                          Obj.magic
                                            (x5844
                                               ~this:(Obj.magic
                                                        (Ojs.array_get x5849
                                                           0))
                                               ~args:(Ojs.list_of_js_from
                                                        any_of_js x5849 1))))|]);
                             ignore
                               (Ojs.call x5847 "push" [|(Obj.magic x5845)|]);
                             List.iter
                               (fun (x5848 : any) ->
                                  ignore
                                    (Ojs.call x5847 "push"
                                       [|(any_to_js x5848)|])) x5846;
                             x5847))|])
    let (bind :
      'tags this ->
        this:'T -> thisArg:'T ThisParameterType.t -> 'T OmitThisParameter.t)
      =
      fun (x5857 : 'tags this) ->
        fun ~this:(x5854 : 'T) ->
          fun ~thisArg:(x5855 : 'T ThisParameterType.t) ->
            OmitThisParameter.t_of_js Obj.magic
              (Ojs.call (this_to_js Obj.magic x5857) "bind"
                 [|(Obj.magic x5854);(ThisParameterType.t_to_js Obj.magic
                                        x5855)|])
    let (bind' :
      'tags this ->
        this:(this:'T -> arg0:'A0 -> args:any list -> 'R) ->
          thisArg:'T -> arg0:'A0 -> any list -> 'R)
      =
      fun (x5865 : 'tags this) ->
        fun ~this:(x5860 : this:'T -> arg0:'A0 -> args:any list -> 'R) ->
          fun ~thisArg:(x5863 : 'T) ->
            fun ~arg0:(x5864 : 'A0) ->
              fun (x5867 : any list) ->
                Obj.magic
                  (Ojs.call
                     (Ojs.call (this_to_js Obj.magic x5865) "bind"
                        [|(Ojs.fun_to_js_args
                             (fun (x5861 : _) ->
                                Obj.magic
                                  (x5860
                                     ~this:(Obj.magic (Ojs.array_get x5861 0))
                                     ~arg0:(Obj.magic (Ojs.array_get x5861 1))
                                     ~args:(Ojs.list_of_js_from any_of_js
                                              x5861 2))));(Obj.magic x5863);(
                          Obj.magic x5864)|]) "apply"
                     [|Ojs.null;((let x5868 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  List.iter
                                    (fun (x5869 : any) ->
                                       ignore
                                         (Ojs.call x5868 "push"
                                            [|(any_to_js x5869)|])) x5867;
                                  x5868))|])
    let (bind'' :
      'tags this ->
        this:(this:'T -> arg0:'A0 -> arg1:'A1 -> args:any list -> 'R) ->
          thisArg:'T -> arg0:'A0 -> arg1:'A1 -> any list -> 'R)
      =
      fun (x5876 : 'tags this) ->
        fun
          ~this:(x5870 :
                  this:'T -> arg0:'A0 -> arg1:'A1 -> args:any list -> 'R)
          ->
          fun ~thisArg:(x5873 : 'T) ->
            fun ~arg0:(x5874 : 'A0) ->
              fun ~arg1:(x5875 : 'A1) ->
                fun (x5878 : any list) ->
                  Obj.magic
                    (Ojs.call
                       (Ojs.call (this_to_js Obj.magic x5876) "bind"
                          [|(Ojs.fun_to_js_args
                               (fun (x5871 : _) ->
                                  Obj.magic
                                    (x5870
                                       ~this:(Obj.magic
                                                (Ojs.array_get x5871 0))
                                       ~arg0:(Obj.magic
                                                (Ojs.array_get x5871 1))
                                       ~arg1:(Obj.magic
                                                (Ojs.array_get x5871 2))
                                       ~args:(Ojs.list_of_js_from any_of_js
                                                x5871 3))));(Obj.magic x5873);(
                            Obj.magic x5874);(Obj.magic x5875)|]) "apply"
                       [|Ojs.null;((let x5879 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    List.iter
                                      (fun (x5880 : any) ->
                                         ignore
                                           (Ojs.call x5879 "push"
                                              [|(any_to_js x5880)|])) x5878;
                                    x5879))|])
    let (bind''' :
      'tags this ->
        this:(this:'T ->
                arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> args:any list -> 'R)
          -> thisArg:'T -> arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> any list -> 'R)
      =
      fun (x5888 : 'tags this) ->
        fun
          ~this:(x5881 :
                  this:'T ->
                    arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> args:any list -> 'R)
          ->
          fun ~thisArg:(x5884 : 'T) ->
            fun ~arg0:(x5885 : 'A0) ->
              fun ~arg1:(x5886 : 'A1) ->
                fun ~arg2:(x5887 : 'A2) ->
                  fun (x5890 : any list) ->
                    Obj.magic
                      (Ojs.call
                         (Ojs.call (this_to_js Obj.magic x5888) "bind"
                            [|(Ojs.fun_to_js_args
                                 (fun (x5882 : _) ->
                                    Obj.magic
                                      (x5881
                                         ~this:(Obj.magic
                                                  (Ojs.array_get x5882 0))
                                         ~arg0:(Obj.magic
                                                  (Ojs.array_get x5882 1))
                                         ~arg1:(Obj.magic
                                                  (Ojs.array_get x5882 2))
                                         ~arg2:(Obj.magic
                                                  (Ojs.array_get x5882 3))
                                         ~args:(Ojs.list_of_js_from any_of_js
                                                  x5882 4))));(Obj.magic
                                                                 x5884);(
                              Obj.magic x5885);(Obj.magic x5886);(Obj.magic
                                                                    x5887)|])
                         "apply"
                         [|Ojs.null;((let x5891 =
                                        Ojs.new_obj
                                          (Ojs.get_prop_ascii Ojs.global
                                             "Array") [||] in
                                      List.iter
                                        (fun (x5892 : any) ->
                                           ignore
                                             (Ojs.call x5891 "push"
                                                [|(any_to_js x5892)|])) x5890;
                                      x5891))|])
    let (bind'''' :
      'tags this ->
        this:(this:'T ->
                arg0:'A0 ->
                  arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> args:any list -> 'R)
          ->
          thisArg:'T ->
            arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> any list -> 'R)
      =
      fun (x5901 : 'tags this) ->
        fun
          ~this:(x5893 :
                  this:'T ->
                    arg0:'A0 ->
                      arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> args:any list -> 'R)
          ->
          fun ~thisArg:(x5896 : 'T) ->
            fun ~arg0:(x5897 : 'A0) ->
              fun ~arg1:(x5898 : 'A1) ->
                fun ~arg2:(x5899 : 'A2) ->
                  fun ~arg3:(x5900 : 'A3) ->
                    fun (x5903 : any list) ->
                      Obj.magic
                        (Ojs.call
                           (Ojs.call (this_to_js Obj.magic x5901) "bind"
                              [|(Ojs.fun_to_js_args
                                   (fun (x5894 : _) ->
                                      Obj.magic
                                        (x5893
                                           ~this:(Obj.magic
                                                    (Ojs.array_get x5894 0))
                                           ~arg0:(Obj.magic
                                                    (Ojs.array_get x5894 1))
                                           ~arg1:(Obj.magic
                                                    (Ojs.array_get x5894 2))
                                           ~arg2:(Obj.magic
                                                    (Ojs.array_get x5894 3))
                                           ~arg3:(Obj.magic
                                                    (Ojs.array_get x5894 4))
                                           ~args:(Ojs.list_of_js_from
                                                    any_of_js x5894 5))));(
                                Obj.magic x5896);(Obj.magic x5897);(Obj.magic
                                                                    x5898);(
                                Obj.magic x5899);(Obj.magic x5900)|]) "apply"
                           [|Ojs.null;((let x5904 =
                                          Ojs.new_obj
                                            (Ojs.get_prop_ascii Ojs.global
                                               "Array") [||] in
                                        List.iter
                                          (fun (x5905 : any) ->
                                             ignore
                                               (Ojs.call x5904 "push"
                                                  [|(any_to_js x5905)|]))
                                          x5903;
                                        x5904))|])
    let (bind''''' :
      'tags this ->
        this:(this:'T -> args:'AX list -> 'R) ->
          thisArg:'T -> args:'AX list -> 'AX list -> 'R)
      =
      fun (x5913 : 'tags this) ->
        fun ~this:(x5906 : this:'T -> args:'AX list -> 'R) ->
          fun ~thisArg:(x5907 : 'T) ->
            fun ~args:(x5908 : 'AX list) ->
              fun (x5916 : 'AX list) ->
                Obj.magic
                  (Ojs.call
                     (let x5915 = this_to_js Obj.magic x5913 in
                      Ojs.call (Ojs.get_prop_ascii x5915 "bind") "apply"
                        [|x5915;((let x5909 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x5909 "push"
                                       [|(Ojs.fun_to_js_args
                                            (fun (x5911 : _) ->
                                               Obj.magic
                                                 (x5906
                                                    ~this:(Obj.magic
                                                             (Ojs.array_get
                                                                x5911 0))
                                                    ~args:(Ojs.list_of_js_from
                                                             Obj.magic x5911
                                                             1))))|]);
                                  ignore
                                    (Ojs.call x5909 "push"
                                       [|(Obj.magic x5907)|]);
                                  List.iter
                                    (fun (x5910 : 'AX) ->
                                       ignore
                                         (Ojs.call x5909 "push"
                                            [|(Obj.magic x5910)|])) x5908;
                                  x5909))|]) "apply"
                     [|Ojs.null;((let x5917 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  List.iter
                                    (fun (x5918 : 'AX) ->
                                       ignore
                                         (Ojs.call x5917 "push"
                                            [|(Obj.magic x5918)|])) x5916;
                                  x5917))|])
    let cast_from = Obj.magic
  end
module Boolean =
  struct
    type t = [ `Boolean ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5920 : Ojs.t) -> t_of_js x5920
    and t_0_to_js : t_0 -> Ojs.t = fun (x5919 : t) -> t_to_js x5919
    type tags = [ `Boolean ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Boolean ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5923 : Ojs.t) -> intf_of_js __tags_of_js x5923
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5921 : __tags intf) -> intf_to_js __tags_to_js x5921
    let (valueOf : 'tags this -> bool) =
      fun (x5925 : 'tags this) ->
        Ojs.bool_of_js (Ojs.call (this_to_js Obj.magic x5925) "valueOf" [||])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x5927 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Boolean")
               (let x5928 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x5927 with
                 | Some x5929 ->
                     ignore (Ojs.call x5928 "push" [|(any_to_js x5929)|])
                 | None -> ());
                x5928))
    let (invoke : ?value:'T -> unit -> bool) =
      fun ?value:(x5930 : 'T option) ->
        fun () ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Boolean") "apply"
               [|Ojs.null;((let x5931 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x5930 with
                             | Some x5932 ->
                                 ignore
                                   (Ojs.call x5931 "push"
                                      [|(Obj.magic x5932)|])
                             | None -> ());
                            x5931))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Boolean")
             "prototype")
    let cast_from = Obj.magic
  end
module BigIntToLocaleStringOptions =
  struct
    type t = [ `BigIntToLocaleStringOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5934 : Ojs.t) -> t_of_js x5934
    and t_0_to_js : t_0 -> Ojs.t = fun (x5933 : t) -> t_to_js x5933
    type tags = [ `BigIntToLocaleStringOptions ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `BigIntToLocaleStringOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5937 : Ojs.t) -> intf_of_js __tags_of_js x5937
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5935 : __tags intf) -> intf_to_js __tags_to_js x5935
    let (get_localeMatcher : 'tags this -> string) =
      fun (x5939 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5939) "localeMatcher")
    let (set_localeMatcher : 'tags this -> string -> unit) =
      fun (x5941 : 'tags this) ->
        fun (x5942 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5941) "localeMatcher"
            (Ojs.string_to_js x5942)
    let (get_style : 'tags this -> string) =
      fun (x5944 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5944) "style")
    let (set_style : 'tags this -> string -> unit) =
      fun (x5946 : 'tags this) ->
        fun (x5947 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5946) "style"
            (Ojs.string_to_js x5947)
    let (get_numberingSystem : 'tags this -> string) =
      fun (x5949 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5949) "numberingSystem")
    let (set_numberingSystem : 'tags this -> string -> unit) =
      fun (x5951 : 'tags this) ->
        fun (x5952 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5951) "numberingSystem"
            (Ojs.string_to_js x5952)
    let (get_unit : 'tags this -> string) =
      fun (x5954 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5954) "unit")
    let (set_unit : 'tags this -> string -> unit) =
      fun (x5956 : 'tags this) ->
        fun (x5957 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5956) "unit"
            (Ojs.string_to_js x5957)
    let (get_unitDisplay : 'tags this -> string) =
      fun (x5959 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5959) "unitDisplay")
    let (set_unitDisplay : 'tags this -> string -> unit) =
      fun (x5961 : 'tags this) ->
        fun (x5962 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5961) "unitDisplay"
            (Ojs.string_to_js x5962)
    let (get_currency : 'tags this -> string) =
      fun (x5964 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5964) "currency")
    let (set_currency : 'tags this -> string -> unit) =
      fun (x5966 : 'tags this) ->
        fun (x5967 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5966) "currency"
            (Ojs.string_to_js x5967)
    let (get_currencyDisplay : 'tags this -> string) =
      fun (x5969 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5969) "currencyDisplay")
    let (set_currencyDisplay : 'tags this -> string -> unit) =
      fun (x5971 : 'tags this) ->
        fun (x5972 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5971) "currencyDisplay"
            (Ojs.string_to_js x5972)
    let (get_useGrouping : 'tags this -> bool) =
      fun (x5974 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5974) "useGrouping")
    let (set_useGrouping : 'tags this -> bool -> unit) =
      fun (x5976 : 'tags this) ->
        fun (x5977 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5976) "useGrouping"
            (Ojs.bool_to_js x5977)
    let (get_minimumIntegerDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ])
      =
      fun (x5979 : 'tags this) ->
        let x5981 =
          Ojs.get_prop_ascii (this_to_js Obj.magic x5979)
            "minimumIntegerDigits" in
        match Ojs.int_of_js x5981 with
        | 1 -> `L_n_1
        | 10 -> `L_n_10
        | 11 -> `L_n_11
        | 12 -> `L_n_12
        | 13 -> `L_n_13
        | 14 -> `L_n_14
        | 15 -> `L_n_15
        | 16 -> `L_n_16
        | 17 -> `L_n_17
        | 18 -> `L_n_18
        | 19 -> `L_n_19
        | 2 -> `L_n_2
        | 20 -> `L_n_20
        | 21 -> `L_n_21
        | 3 -> `L_n_3
        | 4 -> `L_n_4
        | 5 -> `L_n_5
        | 6 -> `L_n_6
        | 7 -> `L_n_7
        | 8 -> `L_n_8
        | 9 -> `L_n_9
        | _ -> assert false
    let (set_minimumIntegerDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] -> unit)
      =
      fun (x5982 : 'tags this) ->
        fun
          (x5983 :
            [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
            | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | 
              `L_n_2 
            | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
            | `L_n_7  | `L_n_8  | `L_n_9 ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5982)
            "minimumIntegerDigits"
            (match x5983 with
             | `L_n_1 -> Ojs.int_to_js 1
             | `L_n_10 -> Ojs.int_to_js 10
             | `L_n_11 -> Ojs.int_to_js 11
             | `L_n_12 -> Ojs.int_to_js 12
             | `L_n_13 -> Ojs.int_to_js 13
             | `L_n_14 -> Ojs.int_to_js 14
             | `L_n_15 -> Ojs.int_to_js 15
             | `L_n_16 -> Ojs.int_to_js 16
             | `L_n_17 -> Ojs.int_to_js 17
             | `L_n_18 -> Ojs.int_to_js 18
             | `L_n_19 -> Ojs.int_to_js 19
             | `L_n_2 -> Ojs.int_to_js 2
             | `L_n_20 -> Ojs.int_to_js 20
             | `L_n_21 -> Ojs.int_to_js 21
             | `L_n_3 -> Ojs.int_to_js 3
             | `L_n_4 -> Ojs.int_to_js 4
             | `L_n_5 -> Ojs.int_to_js 5
             | `L_n_6 -> Ojs.int_to_js 6
             | `L_n_7 -> Ojs.int_to_js 7
             | `L_n_8 -> Ojs.int_to_js 8
             | `L_n_9 -> Ojs.int_to_js 9)
    let (get_minimumFractionDigits :
      'tags this ->
        [ `L_n_0  | `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
        | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19 
        | `L_n_2  | `L_n_20  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ])
      =
      fun (x5985 : 'tags this) ->
        let x5987 =
          Ojs.get_prop_ascii (this_to_js Obj.magic x5985)
            "minimumFractionDigits" in
        match Ojs.int_of_js x5987 with
        | 0 -> `L_n_0
        | 1 -> `L_n_1
        | 10 -> `L_n_10
        | 11 -> `L_n_11
        | 12 -> `L_n_12
        | 13 -> `L_n_13
        | 14 -> `L_n_14
        | 15 -> `L_n_15
        | 16 -> `L_n_16
        | 17 -> `L_n_17
        | 18 -> `L_n_18
        | 19 -> `L_n_19
        | 2 -> `L_n_2
        | 20 -> `L_n_20
        | 3 -> `L_n_3
        | 4 -> `L_n_4
        | 5 -> `L_n_5
        | 6 -> `L_n_6
        | 7 -> `L_n_7
        | 8 -> `L_n_8
        | 9 -> `L_n_9
        | _ -> assert false
    let (set_minimumFractionDigits :
      'tags this ->
        [ `L_n_0  | `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
        | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19 
        | `L_n_2  | `L_n_20  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] -> unit)
      =
      fun (x5988 : 'tags this) ->
        fun
          (x5989 :
            [ `L_n_0  | `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
            | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | 
              `L_n_19 
            | `L_n_2  | `L_n_20  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
            | `L_n_7  | `L_n_8  | `L_n_9 ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5988)
            "minimumFractionDigits"
            (match x5989 with
             | `L_n_0 -> Ojs.int_to_js 0
             | `L_n_1 -> Ojs.int_to_js 1
             | `L_n_10 -> Ojs.int_to_js 10
             | `L_n_11 -> Ojs.int_to_js 11
             | `L_n_12 -> Ojs.int_to_js 12
             | `L_n_13 -> Ojs.int_to_js 13
             | `L_n_14 -> Ojs.int_to_js 14
             | `L_n_15 -> Ojs.int_to_js 15
             | `L_n_16 -> Ojs.int_to_js 16
             | `L_n_17 -> Ojs.int_to_js 17
             | `L_n_18 -> Ojs.int_to_js 18
             | `L_n_19 -> Ojs.int_to_js 19
             | `L_n_2 -> Ojs.int_to_js 2
             | `L_n_20 -> Ojs.int_to_js 20
             | `L_n_3 -> Ojs.int_to_js 3
             | `L_n_4 -> Ojs.int_to_js 4
             | `L_n_5 -> Ojs.int_to_js 5
             | `L_n_6 -> Ojs.int_to_js 6
             | `L_n_7 -> Ojs.int_to_js 7
             | `L_n_8 -> Ojs.int_to_js 8
             | `L_n_9 -> Ojs.int_to_js 9)
    let (get_maximumFractionDigits :
      'tags this ->
        [ `L_n_0  | `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
        | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19 
        | `L_n_2  | `L_n_20  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ])
      =
      fun (x5991 : 'tags this) ->
        let x5993 =
          Ojs.get_prop_ascii (this_to_js Obj.magic x5991)
            "maximumFractionDigits" in
        match Ojs.int_of_js x5993 with
        | 0 -> `L_n_0
        | 1 -> `L_n_1
        | 10 -> `L_n_10
        | 11 -> `L_n_11
        | 12 -> `L_n_12
        | 13 -> `L_n_13
        | 14 -> `L_n_14
        | 15 -> `L_n_15
        | 16 -> `L_n_16
        | 17 -> `L_n_17
        | 18 -> `L_n_18
        | 19 -> `L_n_19
        | 2 -> `L_n_2
        | 20 -> `L_n_20
        | 3 -> `L_n_3
        | 4 -> `L_n_4
        | 5 -> `L_n_5
        | 6 -> `L_n_6
        | 7 -> `L_n_7
        | 8 -> `L_n_8
        | 9 -> `L_n_9
        | _ -> assert false
    let (set_maximumFractionDigits :
      'tags this ->
        [ `L_n_0  | `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
        | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19 
        | `L_n_2  | `L_n_20  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] -> unit)
      =
      fun (x5994 : 'tags this) ->
        fun
          (x5995 :
            [ `L_n_0  | `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
            | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | 
              `L_n_19 
            | `L_n_2  | `L_n_20  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
            | `L_n_7  | `L_n_8  | `L_n_9 ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5994)
            "maximumFractionDigits"
            (match x5995 with
             | `L_n_0 -> Ojs.int_to_js 0
             | `L_n_1 -> Ojs.int_to_js 1
             | `L_n_10 -> Ojs.int_to_js 10
             | `L_n_11 -> Ojs.int_to_js 11
             | `L_n_12 -> Ojs.int_to_js 12
             | `L_n_13 -> Ojs.int_to_js 13
             | `L_n_14 -> Ojs.int_to_js 14
             | `L_n_15 -> Ojs.int_to_js 15
             | `L_n_16 -> Ojs.int_to_js 16
             | `L_n_17 -> Ojs.int_to_js 17
             | `L_n_18 -> Ojs.int_to_js 18
             | `L_n_19 -> Ojs.int_to_js 19
             | `L_n_2 -> Ojs.int_to_js 2
             | `L_n_20 -> Ojs.int_to_js 20
             | `L_n_3 -> Ojs.int_to_js 3
             | `L_n_4 -> Ojs.int_to_js 4
             | `L_n_5 -> Ojs.int_to_js 5
             | `L_n_6 -> Ojs.int_to_js 6
             | `L_n_7 -> Ojs.int_to_js 7
             | `L_n_8 -> Ojs.int_to_js 8
             | `L_n_9 -> Ojs.int_to_js 9)
    let (get_minimumSignificantDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ])
      =
      fun (x5997 : 'tags this) ->
        let x5999 =
          Ojs.get_prop_ascii (this_to_js Obj.magic x5997)
            "minimumSignificantDigits" in
        match Ojs.int_of_js x5999 with
        | 1 -> `L_n_1
        | 10 -> `L_n_10
        | 11 -> `L_n_11
        | 12 -> `L_n_12
        | 13 -> `L_n_13
        | 14 -> `L_n_14
        | 15 -> `L_n_15
        | 16 -> `L_n_16
        | 17 -> `L_n_17
        | 18 -> `L_n_18
        | 19 -> `L_n_19
        | 2 -> `L_n_2
        | 20 -> `L_n_20
        | 21 -> `L_n_21
        | 3 -> `L_n_3
        | 4 -> `L_n_4
        | 5 -> `L_n_5
        | 6 -> `L_n_6
        | 7 -> `L_n_7
        | 8 -> `L_n_8
        | 9 -> `L_n_9
        | _ -> assert false
    let (set_minimumSignificantDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] -> unit)
      =
      fun (x6000 : 'tags this) ->
        fun
          (x6001 :
            [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
            | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | 
              `L_n_2 
            | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
            | `L_n_7  | `L_n_8  | `L_n_9 ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6000)
            "minimumSignificantDigits"
            (match x6001 with
             | `L_n_1 -> Ojs.int_to_js 1
             | `L_n_10 -> Ojs.int_to_js 10
             | `L_n_11 -> Ojs.int_to_js 11
             | `L_n_12 -> Ojs.int_to_js 12
             | `L_n_13 -> Ojs.int_to_js 13
             | `L_n_14 -> Ojs.int_to_js 14
             | `L_n_15 -> Ojs.int_to_js 15
             | `L_n_16 -> Ojs.int_to_js 16
             | `L_n_17 -> Ojs.int_to_js 17
             | `L_n_18 -> Ojs.int_to_js 18
             | `L_n_19 -> Ojs.int_to_js 19
             | `L_n_2 -> Ojs.int_to_js 2
             | `L_n_20 -> Ojs.int_to_js 20
             | `L_n_21 -> Ojs.int_to_js 21
             | `L_n_3 -> Ojs.int_to_js 3
             | `L_n_4 -> Ojs.int_to_js 4
             | `L_n_5 -> Ojs.int_to_js 5
             | `L_n_6 -> Ojs.int_to_js 6
             | `L_n_7 -> Ojs.int_to_js 7
             | `L_n_8 -> Ojs.int_to_js 8
             | `L_n_9 -> Ojs.int_to_js 9)
    let (get_maximumSignificantDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ])
      =
      fun (x6003 : 'tags this) ->
        let x6005 =
          Ojs.get_prop_ascii (this_to_js Obj.magic x6003)
            "maximumSignificantDigits" in
        match Ojs.int_of_js x6005 with
        | 1 -> `L_n_1
        | 10 -> `L_n_10
        | 11 -> `L_n_11
        | 12 -> `L_n_12
        | 13 -> `L_n_13
        | 14 -> `L_n_14
        | 15 -> `L_n_15
        | 16 -> `L_n_16
        | 17 -> `L_n_17
        | 18 -> `L_n_18
        | 19 -> `L_n_19
        | 2 -> `L_n_2
        | 20 -> `L_n_20
        | 21 -> `L_n_21
        | 3 -> `L_n_3
        | 4 -> `L_n_4
        | 5 -> `L_n_5
        | 6 -> `L_n_6
        | 7 -> `L_n_7
        | 8 -> `L_n_8
        | 9 -> `L_n_9
        | _ -> assert false
    let (set_maximumSignificantDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] -> unit)
      =
      fun (x6006 : 'tags this) ->
        fun
          (x6007 :
            [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
            | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | 
              `L_n_2 
            | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
            | `L_n_7  | `L_n_8  | `L_n_9 ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6006)
            "maximumSignificantDigits"
            (match x6007 with
             | `L_n_1 -> Ojs.int_to_js 1
             | `L_n_10 -> Ojs.int_to_js 10
             | `L_n_11 -> Ojs.int_to_js 11
             | `L_n_12 -> Ojs.int_to_js 12
             | `L_n_13 -> Ojs.int_to_js 13
             | `L_n_14 -> Ojs.int_to_js 14
             | `L_n_15 -> Ojs.int_to_js 15
             | `L_n_16 -> Ojs.int_to_js 16
             | `L_n_17 -> Ojs.int_to_js 17
             | `L_n_18 -> Ojs.int_to_js 18
             | `L_n_19 -> Ojs.int_to_js 19
             | `L_n_2 -> Ojs.int_to_js 2
             | `L_n_20 -> Ojs.int_to_js 20
             | `L_n_21 -> Ojs.int_to_js 21
             | `L_n_3 -> Ojs.int_to_js 3
             | `L_n_4 -> Ojs.int_to_js 4
             | `L_n_5 -> Ojs.int_to_js 5
             | `L_n_6 -> Ojs.int_to_js 6
             | `L_n_7 -> Ojs.int_to_js 7
             | `L_n_8 -> Ojs.int_to_js 8
             | `L_n_9 -> Ojs.int_to_js 9)
    let (get_notation : 'tags this -> string) =
      fun (x6009 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6009) "notation")
    let (set_notation : 'tags this -> string -> unit) =
      fun (x6011 : 'tags this) ->
        fun (x6012 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6011) "notation"
            (Ojs.string_to_js x6012)
    let (get_compactDisplay : 'tags this -> string) =
      fun (x6014 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6014) "compactDisplay")
    let (set_compactDisplay : 'tags this -> string -> unit) =
      fun (x6016 : 'tags this) ->
        fun (x6017 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6016) "compactDisplay"
            (Ojs.string_to_js x6017)
    let cast_from = Obj.magic
  end
module BigInt =
  struct
    type t = [ `BigInt ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6020 : Ojs.t) -> t_of_js x6020
    and t_0_to_js : t_0 -> Ojs.t = fun (x6019 : t) -> t_to_js x6019
    type tags = [ `BigInt ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `BigInt ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6023 : Ojs.t) -> intf_of_js __tags_of_js x6023
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6021 : __tags intf) -> intf_to_js __tags_to_js x6021
    let (toString : 'tags this -> ?radix:float -> unit -> string) =
      fun (x6028 : 'tags this) ->
        fun ?radix:(x6025 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x6030 = this_to_js Obj.magic x6028 in
               Ojs.call (Ojs.get_prop_ascii x6030 "toString") "apply"
                 [|x6030;((let x6026 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6025 with
                            | Some x6027 ->
                                ignore
                                  (Ojs.call x6026 "push"
                                     [|(Ojs.float_to_js x6027)|])
                            | None -> ());
                           x6026))|])
    let (toLocaleString :
      'tags this ->
        ?locales:string ->
          ?options:BigIntToLocaleStringOptions.t -> unit -> string)
      =
      fun (x6036 : 'tags this) ->
        fun ?locales:(x6031 : string option) ->
          fun ?options:(x6032 : BigIntToLocaleStringOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x6038 = this_to_js Obj.magic x6036 in
                 Ojs.call (Ojs.get_prop_ascii x6038 "toLocaleString") "apply"
                   [|x6038;((let x6033 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6031 with
                              | Some x6035 ->
                                  ignore
                                    (Ojs.call x6033 "push"
                                       [|(Ojs.string_to_js x6035)|])
                              | None -> ());
                             (match x6032 with
                              | Some x6034 ->
                                  ignore
                                    (Ojs.call x6033 "push"
                                       [|(BigIntToLocaleStringOptions.t_to_js
                                            x6034)|])
                              | None -> ());
                             x6033))|])
    let (valueOf : 'tags this -> bigint) =
      fun (x6039 : 'tags this) ->
        bigint_of_js (Ojs.call (this_to_js Obj.magic x6039) "valueOf" [||])
    let (invoke : bigint or_boolean or_string or_number -> bigint) =
      fun (x6041 : bigint or_boolean or_string or_number) ->
        bigint_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "BigInt")
             [|(or_number_to_js
                  (fun (x6042 : bigint or_boolean or_string) ->
                     or_string_to_js
                       (fun (x6043 : bigint or_boolean) ->
                          or_boolean_to_js bigint_to_js x6043) x6042) x6041)|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "BigInt")
             "prototype")
    let (asIntN : bits:float -> int:bigint -> bigint) =
      fun ~bits:(x6045 : float) ->
        fun ~int:(x6046 : bigint) ->
          bigint_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigInt") "asIntN"
               [|(Ojs.float_to_js x6045);(bigint_to_js x6046)|])
    let (asUintN : bits:float -> int:bigint -> bigint) =
      fun ~bits:(x6047 : float) ->
        fun ~int:(x6048 : bigint) ->
          bigint_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigInt") "asUintN"
               [|(Ojs.float_to_js x6047);(bigint_to_js x6048)|])
    let cast_from = Obj.magic
  end
module Uint8Array =
  struct
    type t =
      [ `Uint8Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6050 : Ojs.t) -> t_of_js x6050
    and t_0_to_js : t_0 -> Ojs.t = fun (x6049 : t) -> t_to_js x6049
    type tags =
      [ `Uint8Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Uint8Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6053 : Ojs.t) -> intf_of_js __tags_of_js x6053
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6051 : __tags intf) -> intf_to_js __tags_to_js x6051
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x6059 : 'tags this) ->
        fun ~searchElement:(x6055 : float) ->
          fun ?fromIndex:(x6056 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6061 = this_to_js Obj.magic x6059 in
                 Ojs.call (Ojs.get_prop_ascii x6061 "includes") "apply"
                   [|x6061;((let x6057 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6057 "push"
                                  [|(Ojs.float_to_js x6055)|]);
                             (match x6056 with
                              | Some x6058 ->
                                  ignore
                                    (Ojs.call x6057 "push"
                                       [|(Ojs.float_to_js x6058)|])
                              | None -> ());
                             x6057))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x6062 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x6064 : Ojs.t) ->
             let x6065 = x6064 in
             ((Ojs.float_of_js (Ojs.array_get x6065 0)),
               (Ojs.float_of_js (Ojs.array_get x6065 1))))
          (Ojs.call (this_to_js Obj.magic x6062) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x6066 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6066) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x6069 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6069) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x6072 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6072)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x6074 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6074) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x6076 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6076) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x6078 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6078) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6085 : 'tags this) ->
        fun ~target:(x6080 : float) ->
          fun ~start:(x6081 : float) ->
            fun ?end_:(x6082 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6087 = this_to_js Obj.magic x6085 in
                   Ojs.call (Ojs.get_prop_ascii x6087 "copyWithin") "apply"
                     [|x6087;((let x6083 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6083 "push"
                                    [|(Ojs.float_to_js x6080)|]);
                               ignore
                                 (Ojs.call x6083 "push"
                                    [|(Ojs.float_to_js x6081)|]);
                               (match x6082 with
                                | Some x6084 ->
                                    ignore
                                      (Ojs.call x6083 "push"
                                         [|(Ojs.float_to_js x6084)|])
                                | None -> ());
                               x6083))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6096 : 'tags this) ->
        fun
          ~predicate:(x6089 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6090 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6098 = this_to_js Obj.magic x6096 in
                 Ojs.call (Ojs.get_prop_ascii x6098 "every") "apply"
                   [|x6098;((let x6091 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6091 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6093 : Ojs.t) ->
                                          fun (x6094 : Ojs.t) ->
                                            fun (x6095 : Ojs.t) ->
                                              unknown_to_js
                                                (x6089
                                                   ~value:(Ojs.float_of_js
                                                             x6093)
                                                   ~index:(Ojs.float_of_js
                                                             x6094)
                                                   ~array:(t_of_js x6095))))|]);
                             (match x6090 with
                              | Some x6092 ->
                                  ignore
                                    (Ojs.call x6091 "push"
                                       [|(any_to_js x6092)|])
                              | None -> ());
                             x6091))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6105 : 'tags this) ->
        fun ~value:(x6099 : float) ->
          fun ?start:(x6100 : float option) ->
            fun ?end_:(x6101 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6107 = this_to_js Obj.magic x6105 in
                   Ojs.call (Ojs.get_prop_ascii x6107 "fill") "apply"
                     [|x6107;((let x6102 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6102 "push"
                                    [|(Ojs.float_to_js x6099)|]);
                               (match x6100 with
                                | Some x6104 ->
                                    ignore
                                      (Ojs.call x6102 "push"
                                         [|(Ojs.float_to_js x6104)|])
                                | None -> ());
                               (match x6101 with
                                | Some x6103 ->
                                    ignore
                                      (Ojs.call x6102 "push"
                                         [|(Ojs.float_to_js x6103)|])
                                | None -> ());
                               x6102))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6116 : 'tags this) ->
        fun ~predicate:(x6109 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x6110 : any option) ->
            fun () ->
              t_of_js
                (let x6118 = this_to_js Obj.magic x6116 in
                 Ojs.call (Ojs.get_prop_ascii x6118 "filter") "apply"
                   [|x6118;((let x6111 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6111 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6113 : Ojs.t) ->
                                          fun (x6114 : Ojs.t) ->
                                            fun (x6115 : Ojs.t) ->
                                              any_to_js
                                                (x6109
                                                   ~value:(Ojs.float_of_js
                                                             x6113)
                                                   ~index:(Ojs.float_of_js
                                                             x6114)
                                                   ~array:(t_of_js x6115))))|]);
                             (match x6110 with
                              | Some x6112 ->
                                  ignore
                                    (Ojs.call x6111 "push"
                                       [|(any_to_js x6112)|])
                              | None -> ());
                             x6111))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x6126 : 'tags this) ->
        fun ~predicate:(x6119 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6120 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x6128 = this_to_js Obj.magic x6126 in
                 Ojs.call (Ojs.get_prop_ascii x6128 "find") "apply"
                   [|x6128;((let x6121 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6121 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6123 : Ojs.t) ->
                                          fun (x6124 : Ojs.t) ->
                                            fun (x6125 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6119
                                                   ~value:(Ojs.float_of_js
                                                             x6123)
                                                   ~index:(Ojs.float_of_js
                                                             x6124)
                                                   ~obj:(t_of_js x6125))))|]);
                             (match x6120 with
                              | Some x6122 ->
                                  ignore
                                    (Ojs.call x6121 "push"
                                       [|(any_to_js x6122)|])
                              | None -> ());
                             x6121))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x6137 : 'tags this) ->
        fun ~predicate:(x6130 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6131 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x6139 = this_to_js Obj.magic x6137 in
                 Ojs.call (Ojs.get_prop_ascii x6139 "findIndex") "apply"
                   [|x6139;((let x6132 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6132 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6134 : Ojs.t) ->
                                          fun (x6135 : Ojs.t) ->
                                            fun (x6136 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6130
                                                   ~value:(Ojs.float_of_js
                                                             x6134)
                                                   ~index:(Ojs.float_of_js
                                                             x6135)
                                                   ~obj:(t_of_js x6136))))|]);
                             (match x6131 with
                              | Some x6133 ->
                                  ignore
                                    (Ojs.call x6132 "push"
                                       [|(any_to_js x6133)|])
                              | None -> ());
                             x6132))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x6147 : 'tags this) ->
        fun
          ~callbackfn:(x6140 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x6141 : any option) ->
            fun () ->
              ignore
                (let x6149 = this_to_js Obj.magic x6147 in
                 Ojs.call (Ojs.get_prop_ascii x6149 "forEach") "apply"
                   [|x6149;((let x6142 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6142 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6144 : Ojs.t) ->
                                          fun (x6145 : Ojs.t) ->
                                            fun (x6146 : Ojs.t) ->
                                              x6140
                                                ~value:(Ojs.float_of_js x6144)
                                                ~index:(Ojs.float_of_js x6145)
                                                ~array:(t_of_js x6146)))|]);
                             (match x6141 with
                              | Some x6143 ->
                                  ignore
                                    (Ojs.call x6142 "push"
                                       [|(any_to_js x6143)|])
                              | None -> ());
                             x6142))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6154 : 'tags this) ->
        fun ~searchElement:(x6150 : float) ->
          fun ?fromIndex:(x6151 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6156 = this_to_js Obj.magic x6154 in
                 Ojs.call (Ojs.get_prop_ascii x6156 "indexOf") "apply"
                   [|x6156;((let x6152 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6152 "push"
                                  [|(Ojs.float_to_js x6150)|]);
                             (match x6151 with
                              | Some x6153 ->
                                  ignore
                                    (Ojs.call x6152 "push"
                                       [|(Ojs.float_to_js x6153)|])
                              | None -> ());
                             x6152))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x6160 : 'tags this) ->
        fun ?separator:(x6157 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x6162 = this_to_js Obj.magic x6160 in
               Ojs.call (Ojs.get_prop_ascii x6162 "join") "apply"
                 [|x6162;((let x6158 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6157 with
                            | Some x6159 ->
                                ignore
                                  (Ojs.call x6158 "push"
                                     [|(Ojs.string_to_js x6159)|])
                            | None -> ());
                           x6158))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6167 : 'tags this) ->
        fun ~searchElement:(x6163 : float) ->
          fun ?fromIndex:(x6164 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6169 = this_to_js Obj.magic x6167 in
                 Ojs.call (Ojs.get_prop_ascii x6169 "lastIndexOf") "apply"
                   [|x6169;((let x6165 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6165 "push"
                                  [|(Ojs.float_to_js x6163)|]);
                             (match x6164 with
                              | Some x6166 ->
                                  ignore
                                    (Ojs.call x6165 "push"
                                       [|(Ojs.float_to_js x6166)|])
                              | None -> ());
                             x6165))|])
    let (get_length : 'tags this -> float) =
      fun (x6170 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6170) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6179 : 'tags this) ->
        fun
          ~callbackfn:(x6172 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x6173 : any option) ->
            fun () ->
              t_of_js
                (let x6181 = this_to_js Obj.magic x6179 in
                 Ojs.call (Ojs.get_prop_ascii x6181 "map") "apply"
                   [|x6181;((let x6174 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6174 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6176 : Ojs.t) ->
                                          fun (x6177 : Ojs.t) ->
                                            fun (x6178 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x6172
                                                   ~value:(Ojs.float_of_js
                                                             x6176)
                                                   ~index:(Ojs.float_of_js
                                                             x6177)
                                                   ~array:(t_of_js x6178))))|]);
                             (match x6173 with
                              | Some x6175 ->
                                  ignore
                                    (Ojs.call x6174 "push"
                                       [|(any_to_js x6175)|])
                              | None -> ());
                             x6174))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6187 : 'tags this) ->
        fun
          ~callbackfn:(x6182 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6187) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x6183 : Ojs.t) ->
                       fun (x6184 : Ojs.t) ->
                         fun (x6185 : Ojs.t) ->
                           fun (x6186 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6182 ~previousValue:(Ojs.float_of_js x6183)
                                  ~currentValue:(Ojs.float_of_js x6184)
                                  ~currentIndex:(Ojs.float_of_js x6185)
                                  ~array:(t_of_js x6186))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6195 : 'tags this) ->
        fun
          ~callbackfn:(x6189 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6194 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6195) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6190 : Ojs.t) ->
                         fun (x6191 : Ojs.t) ->
                           fun (x6192 : Ojs.t) ->
                             fun (x6193 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6189
                                    ~previousValue:(Ojs.float_of_js x6190)
                                    ~currentValue:(Ojs.float_of_js x6191)
                                    ~currentIndex:(Ojs.float_of_js x6192)
                                    ~array:(t_of_js x6193))));(Ojs.float_to_js
                                                                 x6194)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6203 : 'tags this) ->
        fun
          ~callbackfn:(x6197 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6202 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6203) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6198 : Ojs.t) ->
                         fun (x6199 : Ojs.t) ->
                           fun (x6200 : Ojs.t) ->
                             fun (x6201 : Ojs.t) ->
                               Obj.magic
                                 (x6197 ~previousValue:(Obj.magic x6198)
                                    ~currentValue:(Ojs.float_of_js x6199)
                                    ~currentIndex:(Ojs.float_of_js x6200)
                                    ~array:(t_of_js x6201))));(Obj.magic
                                                                 x6202)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6210 : 'tags this) ->
        fun
          ~callbackfn:(x6205 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6210) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x6206 : Ojs.t) ->
                       fun (x6207 : Ojs.t) ->
                         fun (x6208 : Ojs.t) ->
                           fun (x6209 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6205 ~previousValue:(Ojs.float_of_js x6206)
                                  ~currentValue:(Ojs.float_of_js x6207)
                                  ~currentIndex:(Ojs.float_of_js x6208)
                                  ~array:(t_of_js x6209))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6218 : 'tags this) ->
        fun
          ~callbackfn:(x6212 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6217 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6218) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6213 : Ojs.t) ->
                         fun (x6214 : Ojs.t) ->
                           fun (x6215 : Ojs.t) ->
                             fun (x6216 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6212
                                    ~previousValue:(Ojs.float_of_js x6213)
                                    ~currentValue:(Ojs.float_of_js x6214)
                                    ~currentIndex:(Ojs.float_of_js x6215)
                                    ~array:(t_of_js x6216))));(Ojs.float_to_js
                                                                 x6217)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6226 : 'tags this) ->
        fun
          ~callbackfn:(x6220 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6225 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6226) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6221 : Ojs.t) ->
                         fun (x6222 : Ojs.t) ->
                           fun (x6223 : Ojs.t) ->
                             fun (x6224 : Ojs.t) ->
                               Obj.magic
                                 (x6220 ~previousValue:(Obj.magic x6221)
                                    ~currentValue:(Ojs.float_of_js x6222)
                                    ~currentIndex:(Ojs.float_of_js x6223)
                                    ~array:(t_of_js x6224))));(Obj.magic
                                                                 x6225)|])
    let (reverse : 'tags this -> t) =
      fun (x6228 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6228) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x6235 : 'tags this) ->
        fun ~array:(x6230 : float ArrayLike.t) ->
          fun ?offset:(x6231 : float option) ->
            fun () ->
              ignore
                (let x6237 = this_to_js Obj.magic x6235 in
                 Ojs.call (Ojs.get_prop_ascii x6237 "set") "apply"
                   [|x6237;((let x6232 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6232 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x6230)|]);
                             (match x6231 with
                              | Some x6233 ->
                                  ignore
                                    (Ojs.call x6232 "push"
                                       [|(Ojs.float_to_js x6233)|])
                              | None -> ());
                             x6232))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x6243 : 'tags this) ->
        fun ?start:(x6238 : float option) ->
          fun ?end_:(x6239 : float option) ->
            fun () ->
              t_of_js
                (let x6245 = this_to_js Obj.magic x6243 in
                 Ojs.call (Ojs.get_prop_ascii x6245 "slice") "apply"
                   [|x6245;((let x6240 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6238 with
                              | Some x6242 ->
                                  ignore
                                    (Ojs.call x6240 "push"
                                       [|(Ojs.float_to_js x6242)|])
                              | None -> ());
                             (match x6239 with
                              | Some x6241 ->
                                  ignore
                                    (Ojs.call x6240 "push"
                                       [|(Ojs.float_to_js x6241)|])
                              | None -> ());
                             x6240))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6253 : 'tags this) ->
        fun
          ~predicate:(x6246 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6247 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6255 = this_to_js Obj.magic x6253 in
                 Ojs.call (Ojs.get_prop_ascii x6255 "some") "apply"
                   [|x6255;((let x6248 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6248 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6250 : Ojs.t) ->
                                          fun (x6251 : Ojs.t) ->
                                            fun (x6252 : Ojs.t) ->
                                              unknown_to_js
                                                (x6246
                                                   ~value:(Ojs.float_of_js
                                                             x6250)
                                                   ~index:(Ojs.float_of_js
                                                             x6251)
                                                   ~array:(t_of_js x6252))))|]);
                             (match x6247 with
                              | Some x6249 ->
                                  ignore
                                    (Ojs.call x6248 "push"
                                       [|(any_to_js x6249)|])
                              | None -> ());
                             x6248))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x6261 : 'tags this) ->
        fun ?compareFn:(x6256 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x6263 = this_to_js Obj.magic x6261 in
               Ojs.call (Ojs.get_prop_ascii x6263 "sort") "apply"
                 [|x6263;((let x6257 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6256 with
                            | Some x6258 ->
                                ignore
                                  (Ojs.call x6257 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x6259 : Ojs.t) ->
                                             fun (x6260 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x6258
                                                    ~a:(Ojs.float_of_js x6259)
                                                    ~b:(Ojs.float_of_js x6260))))|])
                            | None -> ());
                           x6257))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x6270 : 'tags this) ->
        fun ?begin_:(x6265 : float option) ->
          fun ?end_:(x6266 : float option) ->
            fun () ->
              t_of_js
                (let x6272 = this_to_js Obj.magic x6270 in
                 Ojs.call (Ojs.get_prop_ascii x6272 "subarray") "apply"
                   [|x6272;((let x6267 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6265 with
                              | Some x6269 ->
                                  ignore
                                    (Ojs.call x6267 "push"
                                       [|(Ojs.float_to_js x6269)|])
                              | None -> ());
                             (match x6266 with
                              | Some x6268 ->
                                  ignore
                                    (Ojs.call x6267 "push"
                                       [|(Ojs.float_to_js x6268)|])
                              | None -> ());
                             x6267))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x6273 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6273) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x6275 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6275) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x6277 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6277) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x6279 : 'tags this) ->
        fun (x6281 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x6279)
               (Ojs.float_to_js x6281))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x6282 : 'tags this) ->
        fun (x6284 : float) ->
          fun (x6285 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x6282) (Ojs.float_to_js x6284)
              (Ojs.float_to_js x6285)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x6286 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|(Iterable.t_to_js Ojs.float_to_js x6286)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6288 : float Iterable.t) ->
        fun ?mapfn:(x6289 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x6290 : any option) ->
            fun () ->
              t_of_js
                (let x6297 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
                 Ojs.call (Ojs.get_prop_ascii x6297 "from") "apply"
                   [|x6297;((let x6291 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6291 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x6288)|]);
                             (match x6289 with
                              | Some x6293 ->
                                  ignore
                                    (Ojs.call x6291 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x6294 : Ojs.t) ->
                                               fun (x6295 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x6293
                                                      ~v:(Ojs.float_of_js
                                                            x6294)
                                                      ~k:(Ojs.float_of_js
                                                            x6295))))|])
                              | None -> ());
                             (match x6290 with
                              | Some x6292 ->
                                  ignore
                                    (Ojs.call x6291 "push"
                                       [|(any_to_js x6292)|])
                              | None -> ());
                             x6291))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x6298 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|(Ojs.float_to_js x6298)|])
    let (create''' : (ArrayBufferLike.t, float ArrayLike.t) union2 -> t) =
      fun (x6299 : (ArrayBufferLike.t, float ArrayLike.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|(union2_to_js ArrayBufferLike.t_to_js
                  (fun (x6301 : float ArrayLike.t) ->
                     ArrayLike.t_to_js Ojs.float_to_js x6301) x6299)|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x6303 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x6304 : float option) ->
          fun ?length:(x6305 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Uint8Array")
                   (let x6306 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x6306 "push"
                         [|(ArrayBufferLike.t_to_js x6303)|]);
                    (match x6304 with
                     | Some x6308 ->
                         ignore
                           (Ojs.call x6306 "push" [|(Ojs.float_to_js x6308)|])
                     | None -> ());
                    (match x6305 with
                     | Some x6307 ->
                         ignore
                           (Ojs.call x6306 "push" [|(Ojs.float_to_js x6307)|])
                     | None -> ());
                    x6306))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x6309 : float list) ->
        t_of_js
          (let x6312 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
           Ojs.call (Ojs.get_prop_ascii x6312 "of") "apply"
             [|x6312;((let x6310 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x6311 : float) ->
                            ignore
                              (Ojs.call x6310 "push"
                                 [|(Ojs.float_to_js x6311)|])) x6309;
                       x6310))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x6313 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint8Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x6313)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6315 : 'T ArrayLike.t) ->
        fun ~mapfn:(x6316 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x6317 : any option) ->
            fun () ->
              t_of_js
                (let x6323 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
                 Ojs.call (Ojs.get_prop_ascii x6323 "from") "apply"
                   [|x6323;((let x6318 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6318 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x6315)|]);
                             ignore
                               (Ojs.call x6318 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x6320 : Ojs.t) ->
                                          fun (x6321 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x6316 ~v:(Obj.magic x6320)
                                                 ~k:(Ojs.float_of_js x6321))))|]);
                             (match x6317 with
                              | Some x6319 ->
                                  ignore
                                    (Ojs.call x6318 "push"
                                       [|(any_to_js x6319)|])
                              | None -> ());
                             x6318))|])
    let cast_from = Obj.magic
  end
module Uint32Array =
  struct
    type t =
      [ `Uint32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6325 : Ojs.t) -> t_of_js x6325
    and t_0_to_js : t_0 -> Ojs.t = fun (x6324 : t) -> t_to_js x6324
    type tags =
      [ `Uint32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Uint32Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6328 : Ojs.t) -> intf_of_js __tags_of_js x6328
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6326 : __tags intf) -> intf_to_js __tags_to_js x6326
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x6334 : 'tags this) ->
        fun ~searchElement:(x6330 : float) ->
          fun ?fromIndex:(x6331 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6336 = this_to_js Obj.magic x6334 in
                 Ojs.call (Ojs.get_prop_ascii x6336 "includes") "apply"
                   [|x6336;((let x6332 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6332 "push"
                                  [|(Ojs.float_to_js x6330)|]);
                             (match x6331 with
                              | Some x6333 ->
                                  ignore
                                    (Ojs.call x6332 "push"
                                       [|(Ojs.float_to_js x6333)|])
                              | None -> ());
                             x6332))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x6337 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x6339 : Ojs.t) ->
             let x6340 = x6339 in
             ((Ojs.float_of_js (Ojs.array_get x6340 0)),
               (Ojs.float_of_js (Ojs.array_get x6340 1))))
          (Ojs.call (this_to_js Obj.magic x6337) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x6341 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6341) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x6344 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6344) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x6347 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6347)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x6349 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6349) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x6351 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6351) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x6353 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6353) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6360 : 'tags this) ->
        fun ~target:(x6355 : float) ->
          fun ~start:(x6356 : float) ->
            fun ?end_:(x6357 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6362 = this_to_js Obj.magic x6360 in
                   Ojs.call (Ojs.get_prop_ascii x6362 "copyWithin") "apply"
                     [|x6362;((let x6358 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6358 "push"
                                    [|(Ojs.float_to_js x6355)|]);
                               ignore
                                 (Ojs.call x6358 "push"
                                    [|(Ojs.float_to_js x6356)|]);
                               (match x6357 with
                                | Some x6359 ->
                                    ignore
                                      (Ojs.call x6358 "push"
                                         [|(Ojs.float_to_js x6359)|])
                                | None -> ());
                               x6358))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6371 : 'tags this) ->
        fun
          ~predicate:(x6364 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6365 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6373 = this_to_js Obj.magic x6371 in
                 Ojs.call (Ojs.get_prop_ascii x6373 "every") "apply"
                   [|x6373;((let x6366 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6366 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6368 : Ojs.t) ->
                                          fun (x6369 : Ojs.t) ->
                                            fun (x6370 : Ojs.t) ->
                                              unknown_to_js
                                                (x6364
                                                   ~value:(Ojs.float_of_js
                                                             x6368)
                                                   ~index:(Ojs.float_of_js
                                                             x6369)
                                                   ~array:(t_of_js x6370))))|]);
                             (match x6365 with
                              | Some x6367 ->
                                  ignore
                                    (Ojs.call x6366 "push"
                                       [|(any_to_js x6367)|])
                              | None -> ());
                             x6366))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6380 : 'tags this) ->
        fun ~value:(x6374 : float) ->
          fun ?start:(x6375 : float option) ->
            fun ?end_:(x6376 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6382 = this_to_js Obj.magic x6380 in
                   Ojs.call (Ojs.get_prop_ascii x6382 "fill") "apply"
                     [|x6382;((let x6377 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6377 "push"
                                    [|(Ojs.float_to_js x6374)|]);
                               (match x6375 with
                                | Some x6379 ->
                                    ignore
                                      (Ojs.call x6377 "push"
                                         [|(Ojs.float_to_js x6379)|])
                                | None -> ());
                               (match x6376 with
                                | Some x6378 ->
                                    ignore
                                      (Ojs.call x6377 "push"
                                         [|(Ojs.float_to_js x6378)|])
                                | None -> ());
                               x6377))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6391 : 'tags this) ->
        fun ~predicate:(x6384 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x6385 : any option) ->
            fun () ->
              t_of_js
                (let x6393 = this_to_js Obj.magic x6391 in
                 Ojs.call (Ojs.get_prop_ascii x6393 "filter") "apply"
                   [|x6393;((let x6386 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6386 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6388 : Ojs.t) ->
                                          fun (x6389 : Ojs.t) ->
                                            fun (x6390 : Ojs.t) ->
                                              any_to_js
                                                (x6384
                                                   ~value:(Ojs.float_of_js
                                                             x6388)
                                                   ~index:(Ojs.float_of_js
                                                             x6389)
                                                   ~array:(t_of_js x6390))))|]);
                             (match x6385 with
                              | Some x6387 ->
                                  ignore
                                    (Ojs.call x6386 "push"
                                       [|(any_to_js x6387)|])
                              | None -> ());
                             x6386))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x6401 : 'tags this) ->
        fun ~predicate:(x6394 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6395 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x6403 = this_to_js Obj.magic x6401 in
                 Ojs.call (Ojs.get_prop_ascii x6403 "find") "apply"
                   [|x6403;((let x6396 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6396 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6398 : Ojs.t) ->
                                          fun (x6399 : Ojs.t) ->
                                            fun (x6400 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6394
                                                   ~value:(Ojs.float_of_js
                                                             x6398)
                                                   ~index:(Ojs.float_of_js
                                                             x6399)
                                                   ~obj:(t_of_js x6400))))|]);
                             (match x6395 with
                              | Some x6397 ->
                                  ignore
                                    (Ojs.call x6396 "push"
                                       [|(any_to_js x6397)|])
                              | None -> ());
                             x6396))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x6412 : 'tags this) ->
        fun ~predicate:(x6405 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6406 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x6414 = this_to_js Obj.magic x6412 in
                 Ojs.call (Ojs.get_prop_ascii x6414 "findIndex") "apply"
                   [|x6414;((let x6407 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6407 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6409 : Ojs.t) ->
                                          fun (x6410 : Ojs.t) ->
                                            fun (x6411 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6405
                                                   ~value:(Ojs.float_of_js
                                                             x6409)
                                                   ~index:(Ojs.float_of_js
                                                             x6410)
                                                   ~obj:(t_of_js x6411))))|]);
                             (match x6406 with
                              | Some x6408 ->
                                  ignore
                                    (Ojs.call x6407 "push"
                                       [|(any_to_js x6408)|])
                              | None -> ());
                             x6407))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x6422 : 'tags this) ->
        fun
          ~callbackfn:(x6415 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x6416 : any option) ->
            fun () ->
              ignore
                (let x6424 = this_to_js Obj.magic x6422 in
                 Ojs.call (Ojs.get_prop_ascii x6424 "forEach") "apply"
                   [|x6424;((let x6417 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6417 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6419 : Ojs.t) ->
                                          fun (x6420 : Ojs.t) ->
                                            fun (x6421 : Ojs.t) ->
                                              x6415
                                                ~value:(Ojs.float_of_js x6419)
                                                ~index:(Ojs.float_of_js x6420)
                                                ~array:(t_of_js x6421)))|]);
                             (match x6416 with
                              | Some x6418 ->
                                  ignore
                                    (Ojs.call x6417 "push"
                                       [|(any_to_js x6418)|])
                              | None -> ());
                             x6417))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6429 : 'tags this) ->
        fun ~searchElement:(x6425 : float) ->
          fun ?fromIndex:(x6426 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6431 = this_to_js Obj.magic x6429 in
                 Ojs.call (Ojs.get_prop_ascii x6431 "indexOf") "apply"
                   [|x6431;((let x6427 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6427 "push"
                                  [|(Ojs.float_to_js x6425)|]);
                             (match x6426 with
                              | Some x6428 ->
                                  ignore
                                    (Ojs.call x6427 "push"
                                       [|(Ojs.float_to_js x6428)|])
                              | None -> ());
                             x6427))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x6435 : 'tags this) ->
        fun ?separator:(x6432 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x6437 = this_to_js Obj.magic x6435 in
               Ojs.call (Ojs.get_prop_ascii x6437 "join") "apply"
                 [|x6437;((let x6433 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6432 with
                            | Some x6434 ->
                                ignore
                                  (Ojs.call x6433 "push"
                                     [|(Ojs.string_to_js x6434)|])
                            | None -> ());
                           x6433))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6442 : 'tags this) ->
        fun ~searchElement:(x6438 : float) ->
          fun ?fromIndex:(x6439 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6444 = this_to_js Obj.magic x6442 in
                 Ojs.call (Ojs.get_prop_ascii x6444 "lastIndexOf") "apply"
                   [|x6444;((let x6440 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6440 "push"
                                  [|(Ojs.float_to_js x6438)|]);
                             (match x6439 with
                              | Some x6441 ->
                                  ignore
                                    (Ojs.call x6440 "push"
                                       [|(Ojs.float_to_js x6441)|])
                              | None -> ());
                             x6440))|])
    let (get_length : 'tags this -> float) =
      fun (x6445 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6445) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6454 : 'tags this) ->
        fun
          ~callbackfn:(x6447 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x6448 : any option) ->
            fun () ->
              t_of_js
                (let x6456 = this_to_js Obj.magic x6454 in
                 Ojs.call (Ojs.get_prop_ascii x6456 "map") "apply"
                   [|x6456;((let x6449 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6449 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6451 : Ojs.t) ->
                                          fun (x6452 : Ojs.t) ->
                                            fun (x6453 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x6447
                                                   ~value:(Ojs.float_of_js
                                                             x6451)
                                                   ~index:(Ojs.float_of_js
                                                             x6452)
                                                   ~array:(t_of_js x6453))))|]);
                             (match x6448 with
                              | Some x6450 ->
                                  ignore
                                    (Ojs.call x6449 "push"
                                       [|(any_to_js x6450)|])
                              | None -> ());
                             x6449))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6462 : 'tags this) ->
        fun
          ~callbackfn:(x6457 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6462) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x6458 : Ojs.t) ->
                       fun (x6459 : Ojs.t) ->
                         fun (x6460 : Ojs.t) ->
                           fun (x6461 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6457 ~previousValue:(Ojs.float_of_js x6458)
                                  ~currentValue:(Ojs.float_of_js x6459)
                                  ~currentIndex:(Ojs.float_of_js x6460)
                                  ~array:(t_of_js x6461))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6470 : 'tags this) ->
        fun
          ~callbackfn:(x6464 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6469 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6470) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6465 : Ojs.t) ->
                         fun (x6466 : Ojs.t) ->
                           fun (x6467 : Ojs.t) ->
                             fun (x6468 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6464
                                    ~previousValue:(Ojs.float_of_js x6465)
                                    ~currentValue:(Ojs.float_of_js x6466)
                                    ~currentIndex:(Ojs.float_of_js x6467)
                                    ~array:(t_of_js x6468))));(Ojs.float_to_js
                                                                 x6469)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6478 : 'tags this) ->
        fun
          ~callbackfn:(x6472 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6477 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6478) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6473 : Ojs.t) ->
                         fun (x6474 : Ojs.t) ->
                           fun (x6475 : Ojs.t) ->
                             fun (x6476 : Ojs.t) ->
                               Obj.magic
                                 (x6472 ~previousValue:(Obj.magic x6473)
                                    ~currentValue:(Ojs.float_of_js x6474)
                                    ~currentIndex:(Ojs.float_of_js x6475)
                                    ~array:(t_of_js x6476))));(Obj.magic
                                                                 x6477)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6485 : 'tags this) ->
        fun
          ~callbackfn:(x6480 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6485) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x6481 : Ojs.t) ->
                       fun (x6482 : Ojs.t) ->
                         fun (x6483 : Ojs.t) ->
                           fun (x6484 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6480 ~previousValue:(Ojs.float_of_js x6481)
                                  ~currentValue:(Ojs.float_of_js x6482)
                                  ~currentIndex:(Ojs.float_of_js x6483)
                                  ~array:(t_of_js x6484))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6493 : 'tags this) ->
        fun
          ~callbackfn:(x6487 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6492 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6493) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6488 : Ojs.t) ->
                         fun (x6489 : Ojs.t) ->
                           fun (x6490 : Ojs.t) ->
                             fun (x6491 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6487
                                    ~previousValue:(Ojs.float_of_js x6488)
                                    ~currentValue:(Ojs.float_of_js x6489)
                                    ~currentIndex:(Ojs.float_of_js x6490)
                                    ~array:(t_of_js x6491))));(Ojs.float_to_js
                                                                 x6492)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6501 : 'tags this) ->
        fun
          ~callbackfn:(x6495 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6500 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6501) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6496 : Ojs.t) ->
                         fun (x6497 : Ojs.t) ->
                           fun (x6498 : Ojs.t) ->
                             fun (x6499 : Ojs.t) ->
                               Obj.magic
                                 (x6495 ~previousValue:(Obj.magic x6496)
                                    ~currentValue:(Ojs.float_of_js x6497)
                                    ~currentIndex:(Ojs.float_of_js x6498)
                                    ~array:(t_of_js x6499))));(Obj.magic
                                                                 x6500)|])
    let (reverse : 'tags this -> t) =
      fun (x6503 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6503) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x6510 : 'tags this) ->
        fun ~array:(x6505 : float ArrayLike.t) ->
          fun ?offset:(x6506 : float option) ->
            fun () ->
              ignore
                (let x6512 = this_to_js Obj.magic x6510 in
                 Ojs.call (Ojs.get_prop_ascii x6512 "set") "apply"
                   [|x6512;((let x6507 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6507 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x6505)|]);
                             (match x6506 with
                              | Some x6508 ->
                                  ignore
                                    (Ojs.call x6507 "push"
                                       [|(Ojs.float_to_js x6508)|])
                              | None -> ());
                             x6507))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x6518 : 'tags this) ->
        fun ?start:(x6513 : float option) ->
          fun ?end_:(x6514 : float option) ->
            fun () ->
              t_of_js
                (let x6520 = this_to_js Obj.magic x6518 in
                 Ojs.call (Ojs.get_prop_ascii x6520 "slice") "apply"
                   [|x6520;((let x6515 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6513 with
                              | Some x6517 ->
                                  ignore
                                    (Ojs.call x6515 "push"
                                       [|(Ojs.float_to_js x6517)|])
                              | None -> ());
                             (match x6514 with
                              | Some x6516 ->
                                  ignore
                                    (Ojs.call x6515 "push"
                                       [|(Ojs.float_to_js x6516)|])
                              | None -> ());
                             x6515))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6528 : 'tags this) ->
        fun
          ~predicate:(x6521 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6522 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6530 = this_to_js Obj.magic x6528 in
                 Ojs.call (Ojs.get_prop_ascii x6530 "some") "apply"
                   [|x6530;((let x6523 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6523 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6525 : Ojs.t) ->
                                          fun (x6526 : Ojs.t) ->
                                            fun (x6527 : Ojs.t) ->
                                              unknown_to_js
                                                (x6521
                                                   ~value:(Ojs.float_of_js
                                                             x6525)
                                                   ~index:(Ojs.float_of_js
                                                             x6526)
                                                   ~array:(t_of_js x6527))))|]);
                             (match x6522 with
                              | Some x6524 ->
                                  ignore
                                    (Ojs.call x6523 "push"
                                       [|(any_to_js x6524)|])
                              | None -> ());
                             x6523))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x6536 : 'tags this) ->
        fun ?compareFn:(x6531 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x6538 = this_to_js Obj.magic x6536 in
               Ojs.call (Ojs.get_prop_ascii x6538 "sort") "apply"
                 [|x6538;((let x6532 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6531 with
                            | Some x6533 ->
                                ignore
                                  (Ojs.call x6532 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x6534 : Ojs.t) ->
                                             fun (x6535 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x6533
                                                    ~a:(Ojs.float_of_js x6534)
                                                    ~b:(Ojs.float_of_js x6535))))|])
                            | None -> ());
                           x6532))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x6545 : 'tags this) ->
        fun ?begin_:(x6540 : float option) ->
          fun ?end_:(x6541 : float option) ->
            fun () ->
              t_of_js
                (let x6547 = this_to_js Obj.magic x6545 in
                 Ojs.call (Ojs.get_prop_ascii x6547 "subarray") "apply"
                   [|x6547;((let x6542 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6540 with
                              | Some x6544 ->
                                  ignore
                                    (Ojs.call x6542 "push"
                                       [|(Ojs.float_to_js x6544)|])
                              | None -> ());
                             (match x6541 with
                              | Some x6543 ->
                                  ignore
                                    (Ojs.call x6542 "push"
                                       [|(Ojs.float_to_js x6543)|])
                              | None -> ());
                             x6542))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x6548 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6548) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x6550 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6550) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x6552 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6552) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x6554 : 'tags this) ->
        fun (x6556 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x6554)
               (Ojs.float_to_js x6556))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x6557 : 'tags this) ->
        fun (x6559 : float) ->
          fun (x6560 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x6557) (Ojs.float_to_js x6559)
              (Ojs.float_to_js x6560)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x6561 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|(Iterable.t_to_js Ojs.float_to_js x6561)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6563 : float Iterable.t) ->
        fun ?mapfn:(x6564 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x6565 : any option) ->
            fun () ->
              t_of_js
                (let x6572 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
                 Ojs.call (Ojs.get_prop_ascii x6572 "from") "apply"
                   [|x6572;((let x6566 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6566 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x6563)|]);
                             (match x6564 with
                              | Some x6568 ->
                                  ignore
                                    (Ojs.call x6566 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x6569 : Ojs.t) ->
                                               fun (x6570 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x6568
                                                      ~v:(Ojs.float_of_js
                                                            x6569)
                                                      ~k:(Ojs.float_of_js
                                                            x6570))))|])
                              | None -> ());
                             (match x6565 with
                              | Some x6567 ->
                                  ignore
                                    (Ojs.call x6566 "push"
                                       [|(any_to_js x6567)|])
                              | None -> ());
                             x6566))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x6573 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|(Ojs.float_to_js x6573)|])
    let (create''' : (ArrayBufferLike.t, float ArrayLike.t) union2 -> t) =
      fun (x6574 : (ArrayBufferLike.t, float ArrayLike.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|(union2_to_js ArrayBufferLike.t_to_js
                  (fun (x6576 : float ArrayLike.t) ->
                     ArrayLike.t_to_js Ojs.float_to_js x6576) x6574)|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x6578 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x6579 : float option) ->
          fun ?length:(x6580 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint32Array")
                   (let x6581 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x6581 "push"
                         [|(ArrayBufferLike.t_to_js x6578)|]);
                    (match x6579 with
                     | Some x6583 ->
                         ignore
                           (Ojs.call x6581 "push" [|(Ojs.float_to_js x6583)|])
                     | None -> ());
                    (match x6580 with
                     | Some x6582 ->
                         ignore
                           (Ojs.call x6581 "push" [|(Ojs.float_to_js x6582)|])
                     | None -> ());
                    x6581))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x6584 : float list) ->
        t_of_js
          (let x6587 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
           Ojs.call (Ojs.get_prop_ascii x6587 "of") "apply"
             [|x6587;((let x6585 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x6586 : float) ->
                            ignore
                              (Ojs.call x6585 "push"
                                 [|(Ojs.float_to_js x6586)|])) x6584;
                       x6585))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x6588 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint32Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x6588)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6590 : 'T ArrayLike.t) ->
        fun ~mapfn:(x6591 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x6592 : any option) ->
            fun () ->
              t_of_js
                (let x6598 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
                 Ojs.call (Ojs.get_prop_ascii x6598 "from") "apply"
                   [|x6598;((let x6593 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6593 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x6590)|]);
                             ignore
                               (Ojs.call x6593 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x6595 : Ojs.t) ->
                                          fun (x6596 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x6591 ~v:(Obj.magic x6595)
                                                 ~k:(Ojs.float_of_js x6596))))|]);
                             (match x6592 with
                              | Some x6594 ->
                                  ignore
                                    (Ojs.call x6593 "push"
                                       [|(any_to_js x6594)|])
                              | None -> ());
                             x6593))|])
    let cast_from = Obj.magic
  end
module Uint16Array =
  struct
    type t =
      [ `Uint16Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6600 : Ojs.t) -> t_of_js x6600
    and t_0_to_js : t_0 -> Ojs.t = fun (x6599 : t) -> t_to_js x6599
    type tags =
      [ `Uint16Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Uint16Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6603 : Ojs.t) -> intf_of_js __tags_of_js x6603
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6601 : __tags intf) -> intf_to_js __tags_to_js x6601
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x6609 : 'tags this) ->
        fun ~searchElement:(x6605 : float) ->
          fun ?fromIndex:(x6606 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6611 = this_to_js Obj.magic x6609 in
                 Ojs.call (Ojs.get_prop_ascii x6611 "includes") "apply"
                   [|x6611;((let x6607 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6607 "push"
                                  [|(Ojs.float_to_js x6605)|]);
                             (match x6606 with
                              | Some x6608 ->
                                  ignore
                                    (Ojs.call x6607 "push"
                                       [|(Ojs.float_to_js x6608)|])
                              | None -> ());
                             x6607))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x6612 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x6614 : Ojs.t) ->
             let x6615 = x6614 in
             ((Ojs.float_of_js (Ojs.array_get x6615 0)),
               (Ojs.float_of_js (Ojs.array_get x6615 1))))
          (Ojs.call (this_to_js Obj.magic x6612) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x6616 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6616) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x6619 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6619) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x6622 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6622)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x6624 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6624) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x6626 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6626) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x6628 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6628) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6635 : 'tags this) ->
        fun ~target:(x6630 : float) ->
          fun ~start:(x6631 : float) ->
            fun ?end_:(x6632 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6637 = this_to_js Obj.magic x6635 in
                   Ojs.call (Ojs.get_prop_ascii x6637 "copyWithin") "apply"
                     [|x6637;((let x6633 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6633 "push"
                                    [|(Ojs.float_to_js x6630)|]);
                               ignore
                                 (Ojs.call x6633 "push"
                                    [|(Ojs.float_to_js x6631)|]);
                               (match x6632 with
                                | Some x6634 ->
                                    ignore
                                      (Ojs.call x6633 "push"
                                         [|(Ojs.float_to_js x6634)|])
                                | None -> ());
                               x6633))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6646 : 'tags this) ->
        fun
          ~predicate:(x6639 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6640 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6648 = this_to_js Obj.magic x6646 in
                 Ojs.call (Ojs.get_prop_ascii x6648 "every") "apply"
                   [|x6648;((let x6641 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6641 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6643 : Ojs.t) ->
                                          fun (x6644 : Ojs.t) ->
                                            fun (x6645 : Ojs.t) ->
                                              unknown_to_js
                                                (x6639
                                                   ~value:(Ojs.float_of_js
                                                             x6643)
                                                   ~index:(Ojs.float_of_js
                                                             x6644)
                                                   ~array:(t_of_js x6645))))|]);
                             (match x6640 with
                              | Some x6642 ->
                                  ignore
                                    (Ojs.call x6641 "push"
                                       [|(any_to_js x6642)|])
                              | None -> ());
                             x6641))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6655 : 'tags this) ->
        fun ~value:(x6649 : float) ->
          fun ?start:(x6650 : float option) ->
            fun ?end_:(x6651 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6657 = this_to_js Obj.magic x6655 in
                   Ojs.call (Ojs.get_prop_ascii x6657 "fill") "apply"
                     [|x6657;((let x6652 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6652 "push"
                                    [|(Ojs.float_to_js x6649)|]);
                               (match x6650 with
                                | Some x6654 ->
                                    ignore
                                      (Ojs.call x6652 "push"
                                         [|(Ojs.float_to_js x6654)|])
                                | None -> ());
                               (match x6651 with
                                | Some x6653 ->
                                    ignore
                                      (Ojs.call x6652 "push"
                                         [|(Ojs.float_to_js x6653)|])
                                | None -> ());
                               x6652))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6666 : 'tags this) ->
        fun ~predicate:(x6659 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x6660 : any option) ->
            fun () ->
              t_of_js
                (let x6668 = this_to_js Obj.magic x6666 in
                 Ojs.call (Ojs.get_prop_ascii x6668 "filter") "apply"
                   [|x6668;((let x6661 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6661 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6663 : Ojs.t) ->
                                          fun (x6664 : Ojs.t) ->
                                            fun (x6665 : Ojs.t) ->
                                              any_to_js
                                                (x6659
                                                   ~value:(Ojs.float_of_js
                                                             x6663)
                                                   ~index:(Ojs.float_of_js
                                                             x6664)
                                                   ~array:(t_of_js x6665))))|]);
                             (match x6660 with
                              | Some x6662 ->
                                  ignore
                                    (Ojs.call x6661 "push"
                                       [|(any_to_js x6662)|])
                              | None -> ());
                             x6661))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x6676 : 'tags this) ->
        fun ~predicate:(x6669 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6670 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x6678 = this_to_js Obj.magic x6676 in
                 Ojs.call (Ojs.get_prop_ascii x6678 "find") "apply"
                   [|x6678;((let x6671 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6671 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6673 : Ojs.t) ->
                                          fun (x6674 : Ojs.t) ->
                                            fun (x6675 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6669
                                                   ~value:(Ojs.float_of_js
                                                             x6673)
                                                   ~index:(Ojs.float_of_js
                                                             x6674)
                                                   ~obj:(t_of_js x6675))))|]);
                             (match x6670 with
                              | Some x6672 ->
                                  ignore
                                    (Ojs.call x6671 "push"
                                       [|(any_to_js x6672)|])
                              | None -> ());
                             x6671))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x6687 : 'tags this) ->
        fun ~predicate:(x6680 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6681 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x6689 = this_to_js Obj.magic x6687 in
                 Ojs.call (Ojs.get_prop_ascii x6689 "findIndex") "apply"
                   [|x6689;((let x6682 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6682 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6684 : Ojs.t) ->
                                          fun (x6685 : Ojs.t) ->
                                            fun (x6686 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6680
                                                   ~value:(Ojs.float_of_js
                                                             x6684)
                                                   ~index:(Ojs.float_of_js
                                                             x6685)
                                                   ~obj:(t_of_js x6686))))|]);
                             (match x6681 with
                              | Some x6683 ->
                                  ignore
                                    (Ojs.call x6682 "push"
                                       [|(any_to_js x6683)|])
                              | None -> ());
                             x6682))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x6697 : 'tags this) ->
        fun
          ~callbackfn:(x6690 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x6691 : any option) ->
            fun () ->
              ignore
                (let x6699 = this_to_js Obj.magic x6697 in
                 Ojs.call (Ojs.get_prop_ascii x6699 "forEach") "apply"
                   [|x6699;((let x6692 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6692 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6694 : Ojs.t) ->
                                          fun (x6695 : Ojs.t) ->
                                            fun (x6696 : Ojs.t) ->
                                              x6690
                                                ~value:(Ojs.float_of_js x6694)
                                                ~index:(Ojs.float_of_js x6695)
                                                ~array:(t_of_js x6696)))|]);
                             (match x6691 with
                              | Some x6693 ->
                                  ignore
                                    (Ojs.call x6692 "push"
                                       [|(any_to_js x6693)|])
                              | None -> ());
                             x6692))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6704 : 'tags this) ->
        fun ~searchElement:(x6700 : float) ->
          fun ?fromIndex:(x6701 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6706 = this_to_js Obj.magic x6704 in
                 Ojs.call (Ojs.get_prop_ascii x6706 "indexOf") "apply"
                   [|x6706;((let x6702 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6702 "push"
                                  [|(Ojs.float_to_js x6700)|]);
                             (match x6701 with
                              | Some x6703 ->
                                  ignore
                                    (Ojs.call x6702 "push"
                                       [|(Ojs.float_to_js x6703)|])
                              | None -> ());
                             x6702))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x6710 : 'tags this) ->
        fun ?separator:(x6707 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x6712 = this_to_js Obj.magic x6710 in
               Ojs.call (Ojs.get_prop_ascii x6712 "join") "apply"
                 [|x6712;((let x6708 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6707 with
                            | Some x6709 ->
                                ignore
                                  (Ojs.call x6708 "push"
                                     [|(Ojs.string_to_js x6709)|])
                            | None -> ());
                           x6708))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6717 : 'tags this) ->
        fun ~searchElement:(x6713 : float) ->
          fun ?fromIndex:(x6714 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6719 = this_to_js Obj.magic x6717 in
                 Ojs.call (Ojs.get_prop_ascii x6719 "lastIndexOf") "apply"
                   [|x6719;((let x6715 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6715 "push"
                                  [|(Ojs.float_to_js x6713)|]);
                             (match x6714 with
                              | Some x6716 ->
                                  ignore
                                    (Ojs.call x6715 "push"
                                       [|(Ojs.float_to_js x6716)|])
                              | None -> ());
                             x6715))|])
    let (get_length : 'tags this -> float) =
      fun (x6720 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6720) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6729 : 'tags this) ->
        fun
          ~callbackfn:(x6722 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x6723 : any option) ->
            fun () ->
              t_of_js
                (let x6731 = this_to_js Obj.magic x6729 in
                 Ojs.call (Ojs.get_prop_ascii x6731 "map") "apply"
                   [|x6731;((let x6724 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6724 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6726 : Ojs.t) ->
                                          fun (x6727 : Ojs.t) ->
                                            fun (x6728 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x6722
                                                   ~value:(Ojs.float_of_js
                                                             x6726)
                                                   ~index:(Ojs.float_of_js
                                                             x6727)
                                                   ~array:(t_of_js x6728))))|]);
                             (match x6723 with
                              | Some x6725 ->
                                  ignore
                                    (Ojs.call x6724 "push"
                                       [|(any_to_js x6725)|])
                              | None -> ());
                             x6724))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6737 : 'tags this) ->
        fun
          ~callbackfn:(x6732 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6737) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x6733 : Ojs.t) ->
                       fun (x6734 : Ojs.t) ->
                         fun (x6735 : Ojs.t) ->
                           fun (x6736 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6732 ~previousValue:(Ojs.float_of_js x6733)
                                  ~currentValue:(Ojs.float_of_js x6734)
                                  ~currentIndex:(Ojs.float_of_js x6735)
                                  ~array:(t_of_js x6736))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6745 : 'tags this) ->
        fun
          ~callbackfn:(x6739 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6744 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6745) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6740 : Ojs.t) ->
                         fun (x6741 : Ojs.t) ->
                           fun (x6742 : Ojs.t) ->
                             fun (x6743 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6739
                                    ~previousValue:(Ojs.float_of_js x6740)
                                    ~currentValue:(Ojs.float_of_js x6741)
                                    ~currentIndex:(Ojs.float_of_js x6742)
                                    ~array:(t_of_js x6743))));(Ojs.float_to_js
                                                                 x6744)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6753 : 'tags this) ->
        fun
          ~callbackfn:(x6747 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6752 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6753) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6748 : Ojs.t) ->
                         fun (x6749 : Ojs.t) ->
                           fun (x6750 : Ojs.t) ->
                             fun (x6751 : Ojs.t) ->
                               Obj.magic
                                 (x6747 ~previousValue:(Obj.magic x6748)
                                    ~currentValue:(Ojs.float_of_js x6749)
                                    ~currentIndex:(Ojs.float_of_js x6750)
                                    ~array:(t_of_js x6751))));(Obj.magic
                                                                 x6752)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6760 : 'tags this) ->
        fun
          ~callbackfn:(x6755 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6760) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x6756 : Ojs.t) ->
                       fun (x6757 : Ojs.t) ->
                         fun (x6758 : Ojs.t) ->
                           fun (x6759 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6755 ~previousValue:(Ojs.float_of_js x6756)
                                  ~currentValue:(Ojs.float_of_js x6757)
                                  ~currentIndex:(Ojs.float_of_js x6758)
                                  ~array:(t_of_js x6759))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6768 : 'tags this) ->
        fun
          ~callbackfn:(x6762 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6767 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6768) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6763 : Ojs.t) ->
                         fun (x6764 : Ojs.t) ->
                           fun (x6765 : Ojs.t) ->
                             fun (x6766 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6762
                                    ~previousValue:(Ojs.float_of_js x6763)
                                    ~currentValue:(Ojs.float_of_js x6764)
                                    ~currentIndex:(Ojs.float_of_js x6765)
                                    ~array:(t_of_js x6766))));(Ojs.float_to_js
                                                                 x6767)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6776 : 'tags this) ->
        fun
          ~callbackfn:(x6770 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6775 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6776) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6771 : Ojs.t) ->
                         fun (x6772 : Ojs.t) ->
                           fun (x6773 : Ojs.t) ->
                             fun (x6774 : Ojs.t) ->
                               Obj.magic
                                 (x6770 ~previousValue:(Obj.magic x6771)
                                    ~currentValue:(Ojs.float_of_js x6772)
                                    ~currentIndex:(Ojs.float_of_js x6773)
                                    ~array:(t_of_js x6774))));(Obj.magic
                                                                 x6775)|])
    let (reverse : 'tags this -> t) =
      fun (x6778 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6778) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x6785 : 'tags this) ->
        fun ~array:(x6780 : float ArrayLike.t) ->
          fun ?offset:(x6781 : float option) ->
            fun () ->
              ignore
                (let x6787 = this_to_js Obj.magic x6785 in
                 Ojs.call (Ojs.get_prop_ascii x6787 "set") "apply"
                   [|x6787;((let x6782 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6782 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x6780)|]);
                             (match x6781 with
                              | Some x6783 ->
                                  ignore
                                    (Ojs.call x6782 "push"
                                       [|(Ojs.float_to_js x6783)|])
                              | None -> ());
                             x6782))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x6793 : 'tags this) ->
        fun ?start:(x6788 : float option) ->
          fun ?end_:(x6789 : float option) ->
            fun () ->
              t_of_js
                (let x6795 = this_to_js Obj.magic x6793 in
                 Ojs.call (Ojs.get_prop_ascii x6795 "slice") "apply"
                   [|x6795;((let x6790 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6788 with
                              | Some x6792 ->
                                  ignore
                                    (Ojs.call x6790 "push"
                                       [|(Ojs.float_to_js x6792)|])
                              | None -> ());
                             (match x6789 with
                              | Some x6791 ->
                                  ignore
                                    (Ojs.call x6790 "push"
                                       [|(Ojs.float_to_js x6791)|])
                              | None -> ());
                             x6790))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6803 : 'tags this) ->
        fun
          ~predicate:(x6796 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6797 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6805 = this_to_js Obj.magic x6803 in
                 Ojs.call (Ojs.get_prop_ascii x6805 "some") "apply"
                   [|x6805;((let x6798 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6798 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6800 : Ojs.t) ->
                                          fun (x6801 : Ojs.t) ->
                                            fun (x6802 : Ojs.t) ->
                                              unknown_to_js
                                                (x6796
                                                   ~value:(Ojs.float_of_js
                                                             x6800)
                                                   ~index:(Ojs.float_of_js
                                                             x6801)
                                                   ~array:(t_of_js x6802))))|]);
                             (match x6797 with
                              | Some x6799 ->
                                  ignore
                                    (Ojs.call x6798 "push"
                                       [|(any_to_js x6799)|])
                              | None -> ());
                             x6798))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x6811 : 'tags this) ->
        fun ?compareFn:(x6806 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x6813 = this_to_js Obj.magic x6811 in
               Ojs.call (Ojs.get_prop_ascii x6813 "sort") "apply"
                 [|x6813;((let x6807 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6806 with
                            | Some x6808 ->
                                ignore
                                  (Ojs.call x6807 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x6809 : Ojs.t) ->
                                             fun (x6810 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x6808
                                                    ~a:(Ojs.float_of_js x6809)
                                                    ~b:(Ojs.float_of_js x6810))))|])
                            | None -> ());
                           x6807))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x6820 : 'tags this) ->
        fun ?begin_:(x6815 : float option) ->
          fun ?end_:(x6816 : float option) ->
            fun () ->
              t_of_js
                (let x6822 = this_to_js Obj.magic x6820 in
                 Ojs.call (Ojs.get_prop_ascii x6822 "subarray") "apply"
                   [|x6822;((let x6817 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6815 with
                              | Some x6819 ->
                                  ignore
                                    (Ojs.call x6817 "push"
                                       [|(Ojs.float_to_js x6819)|])
                              | None -> ());
                             (match x6816 with
                              | Some x6818 ->
                                  ignore
                                    (Ojs.call x6817 "push"
                                       [|(Ojs.float_to_js x6818)|])
                              | None -> ());
                             x6817))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x6823 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6823) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x6825 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6825) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x6827 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6827) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x6829 : 'tags this) ->
        fun (x6831 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x6829)
               (Ojs.float_to_js x6831))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x6832 : 'tags this) ->
        fun (x6834 : float) ->
          fun (x6835 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x6832) (Ojs.float_to_js x6834)
              (Ojs.float_to_js x6835)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x6836 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|(Iterable.t_to_js Ojs.float_to_js x6836)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6838 : float Iterable.t) ->
        fun ?mapfn:(x6839 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x6840 : any option) ->
            fun () ->
              t_of_js
                (let x6847 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
                 Ojs.call (Ojs.get_prop_ascii x6847 "from") "apply"
                   [|x6847;((let x6841 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6841 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x6838)|]);
                             (match x6839 with
                              | Some x6843 ->
                                  ignore
                                    (Ojs.call x6841 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x6844 : Ojs.t) ->
                                               fun (x6845 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x6843
                                                      ~v:(Ojs.float_of_js
                                                            x6844)
                                                      ~k:(Ojs.float_of_js
                                                            x6845))))|])
                              | None -> ());
                             (match x6840 with
                              | Some x6842 ->
                                  ignore
                                    (Ojs.call x6841 "push"
                                       [|(any_to_js x6842)|])
                              | None -> ());
                             x6841))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x6848 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|(Ojs.float_to_js x6848)|])
    let (create''' : (ArrayBufferLike.t, float ArrayLike.t) union2 -> t) =
      fun (x6849 : (ArrayBufferLike.t, float ArrayLike.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|(union2_to_js ArrayBufferLike.t_to_js
                  (fun (x6851 : float ArrayLike.t) ->
                     ArrayLike.t_to_js Ojs.float_to_js x6851) x6849)|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x6853 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x6854 : float option) ->
          fun ?length:(x6855 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint16Array")
                   (let x6856 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x6856 "push"
                         [|(ArrayBufferLike.t_to_js x6853)|]);
                    (match x6854 with
                     | Some x6858 ->
                         ignore
                           (Ojs.call x6856 "push" [|(Ojs.float_to_js x6858)|])
                     | None -> ());
                    (match x6855 with
                     | Some x6857 ->
                         ignore
                           (Ojs.call x6856 "push" [|(Ojs.float_to_js x6857)|])
                     | None -> ());
                    x6856))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x6859 : float list) ->
        t_of_js
          (let x6862 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
           Ojs.call (Ojs.get_prop_ascii x6862 "of") "apply"
             [|x6862;((let x6860 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x6861 : float) ->
                            ignore
                              (Ojs.call x6860 "push"
                                 [|(Ojs.float_to_js x6861)|])) x6859;
                       x6860))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x6863 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint16Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x6863)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6865 : 'T ArrayLike.t) ->
        fun ~mapfn:(x6866 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x6867 : any option) ->
            fun () ->
              t_of_js
                (let x6873 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
                 Ojs.call (Ojs.get_prop_ascii x6873 "from") "apply"
                   [|x6873;((let x6868 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6868 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x6865)|]);
                             ignore
                               (Ojs.call x6868 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x6870 : Ojs.t) ->
                                          fun (x6871 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x6866 ~v:(Obj.magic x6870)
                                                 ~k:(Ojs.float_of_js x6871))))|]);
                             (match x6867 with
                              | Some x6869 ->
                                  ignore
                                    (Ojs.call x6868 "push"
                                       [|(any_to_js x6869)|])
                              | None -> ());
                             x6868))|])
    let cast_from = Obj.magic
  end
module Int8Array =
  struct
    type t =
      [ `Int8Array  | float ArrayLike.tags_1 | float IterableIterator.tags_1]
        intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6875 : Ojs.t) -> t_of_js x6875
    and t_0_to_js : t_0 -> Ojs.t = fun (x6874 : t) -> t_to_js x6874
    type tags =
      [ `Int8Array  | float ArrayLike.tags_1 | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Int8Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6878 : Ojs.t) -> intf_of_js __tags_of_js x6878
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6876 : __tags intf) -> intf_to_js __tags_to_js x6876
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x6884 : 'tags this) ->
        fun ~searchElement:(x6880 : float) ->
          fun ?fromIndex:(x6881 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6886 = this_to_js Obj.magic x6884 in
                 Ojs.call (Ojs.get_prop_ascii x6886 "includes") "apply"
                   [|x6886;((let x6882 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6882 "push"
                                  [|(Ojs.float_to_js x6880)|]);
                             (match x6881 with
                              | Some x6883 ->
                                  ignore
                                    (Ojs.call x6882 "push"
                                       [|(Ojs.float_to_js x6883)|])
                              | None -> ());
                             x6882))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x6887 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x6889 : Ojs.t) ->
             let x6890 = x6889 in
             ((Ojs.float_of_js (Ojs.array_get x6890 0)),
               (Ojs.float_of_js (Ojs.array_get x6890 1))))
          (Ojs.call (this_to_js Obj.magic x6887) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x6891 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6891) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x6894 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6894) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x6897 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6897)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x6899 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6899) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x6901 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6901) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x6903 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6903) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6910 : 'tags this) ->
        fun ~target:(x6905 : float) ->
          fun ~start:(x6906 : float) ->
            fun ?end_:(x6907 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6912 = this_to_js Obj.magic x6910 in
                   Ojs.call (Ojs.get_prop_ascii x6912 "copyWithin") "apply"
                     [|x6912;((let x6908 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6908 "push"
                                    [|(Ojs.float_to_js x6905)|]);
                               ignore
                                 (Ojs.call x6908 "push"
                                    [|(Ojs.float_to_js x6906)|]);
                               (match x6907 with
                                | Some x6909 ->
                                    ignore
                                      (Ojs.call x6908 "push"
                                         [|(Ojs.float_to_js x6909)|])
                                | None -> ());
                               x6908))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6921 : 'tags this) ->
        fun
          ~predicate:(x6914 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6915 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6923 = this_to_js Obj.magic x6921 in
                 Ojs.call (Ojs.get_prop_ascii x6923 "every") "apply"
                   [|x6923;((let x6916 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6916 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6918 : Ojs.t) ->
                                          fun (x6919 : Ojs.t) ->
                                            fun (x6920 : Ojs.t) ->
                                              unknown_to_js
                                                (x6914
                                                   ~value:(Ojs.float_of_js
                                                             x6918)
                                                   ~index:(Ojs.float_of_js
                                                             x6919)
                                                   ~array:(t_of_js x6920))))|]);
                             (match x6915 with
                              | Some x6917 ->
                                  ignore
                                    (Ojs.call x6916 "push"
                                       [|(any_to_js x6917)|])
                              | None -> ());
                             x6916))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6930 : 'tags this) ->
        fun ~value:(x6924 : float) ->
          fun ?start:(x6925 : float option) ->
            fun ?end_:(x6926 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6932 = this_to_js Obj.magic x6930 in
                   Ojs.call (Ojs.get_prop_ascii x6932 "fill") "apply"
                     [|x6932;((let x6927 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6927 "push"
                                    [|(Ojs.float_to_js x6924)|]);
                               (match x6925 with
                                | Some x6929 ->
                                    ignore
                                      (Ojs.call x6927 "push"
                                         [|(Ojs.float_to_js x6929)|])
                                | None -> ());
                               (match x6926 with
                                | Some x6928 ->
                                    ignore
                                      (Ojs.call x6927 "push"
                                         [|(Ojs.float_to_js x6928)|])
                                | None -> ());
                               x6927))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6941 : 'tags this) ->
        fun ~predicate:(x6934 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x6935 : any option) ->
            fun () ->
              t_of_js
                (let x6943 = this_to_js Obj.magic x6941 in
                 Ojs.call (Ojs.get_prop_ascii x6943 "filter") "apply"
                   [|x6943;((let x6936 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6936 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6938 : Ojs.t) ->
                                          fun (x6939 : Ojs.t) ->
                                            fun (x6940 : Ojs.t) ->
                                              any_to_js
                                                (x6934
                                                   ~value:(Ojs.float_of_js
                                                             x6938)
                                                   ~index:(Ojs.float_of_js
                                                             x6939)
                                                   ~array:(t_of_js x6940))))|]);
                             (match x6935 with
                              | Some x6937 ->
                                  ignore
                                    (Ojs.call x6936 "push"
                                       [|(any_to_js x6937)|])
                              | None -> ());
                             x6936))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x6951 : 'tags this) ->
        fun ~predicate:(x6944 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6945 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x6953 = this_to_js Obj.magic x6951 in
                 Ojs.call (Ojs.get_prop_ascii x6953 "find") "apply"
                   [|x6953;((let x6946 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6946 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6948 : Ojs.t) ->
                                          fun (x6949 : Ojs.t) ->
                                            fun (x6950 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6944
                                                   ~value:(Ojs.float_of_js
                                                             x6948)
                                                   ~index:(Ojs.float_of_js
                                                             x6949)
                                                   ~obj:(t_of_js x6950))))|]);
                             (match x6945 with
                              | Some x6947 ->
                                  ignore
                                    (Ojs.call x6946 "push"
                                       [|(any_to_js x6947)|])
                              | None -> ());
                             x6946))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x6962 : 'tags this) ->
        fun ~predicate:(x6955 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6956 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x6964 = this_to_js Obj.magic x6962 in
                 Ojs.call (Ojs.get_prop_ascii x6964 "findIndex") "apply"
                   [|x6964;((let x6957 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6957 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6959 : Ojs.t) ->
                                          fun (x6960 : Ojs.t) ->
                                            fun (x6961 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6955
                                                   ~value:(Ojs.float_of_js
                                                             x6959)
                                                   ~index:(Ojs.float_of_js
                                                             x6960)
                                                   ~obj:(t_of_js x6961))))|]);
                             (match x6956 with
                              | Some x6958 ->
                                  ignore
                                    (Ojs.call x6957 "push"
                                       [|(any_to_js x6958)|])
                              | None -> ());
                             x6957))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x6972 : 'tags this) ->
        fun
          ~callbackfn:(x6965 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x6966 : any option) ->
            fun () ->
              ignore
                (let x6974 = this_to_js Obj.magic x6972 in
                 Ojs.call (Ojs.get_prop_ascii x6974 "forEach") "apply"
                   [|x6974;((let x6967 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6967 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6969 : Ojs.t) ->
                                          fun (x6970 : Ojs.t) ->
                                            fun (x6971 : Ojs.t) ->
                                              x6965
                                                ~value:(Ojs.float_of_js x6969)
                                                ~index:(Ojs.float_of_js x6970)
                                                ~array:(t_of_js x6971)))|]);
                             (match x6966 with
                              | Some x6968 ->
                                  ignore
                                    (Ojs.call x6967 "push"
                                       [|(any_to_js x6968)|])
                              | None -> ());
                             x6967))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6979 : 'tags this) ->
        fun ~searchElement:(x6975 : float) ->
          fun ?fromIndex:(x6976 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6981 = this_to_js Obj.magic x6979 in
                 Ojs.call (Ojs.get_prop_ascii x6981 "indexOf") "apply"
                   [|x6981;((let x6977 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6977 "push"
                                  [|(Ojs.float_to_js x6975)|]);
                             (match x6976 with
                              | Some x6978 ->
                                  ignore
                                    (Ojs.call x6977 "push"
                                       [|(Ojs.float_to_js x6978)|])
                              | None -> ());
                             x6977))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x6985 : 'tags this) ->
        fun ?separator:(x6982 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x6987 = this_to_js Obj.magic x6985 in
               Ojs.call (Ojs.get_prop_ascii x6987 "join") "apply"
                 [|x6987;((let x6983 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6982 with
                            | Some x6984 ->
                                ignore
                                  (Ojs.call x6983 "push"
                                     [|(Ojs.string_to_js x6984)|])
                            | None -> ());
                           x6983))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6992 : 'tags this) ->
        fun ~searchElement:(x6988 : float) ->
          fun ?fromIndex:(x6989 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6994 = this_to_js Obj.magic x6992 in
                 Ojs.call (Ojs.get_prop_ascii x6994 "lastIndexOf") "apply"
                   [|x6994;((let x6990 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6990 "push"
                                  [|(Ojs.float_to_js x6988)|]);
                             (match x6989 with
                              | Some x6991 ->
                                  ignore
                                    (Ojs.call x6990 "push"
                                       [|(Ojs.float_to_js x6991)|])
                              | None -> ());
                             x6990))|])
    let (get_length : 'tags this -> float) =
      fun (x6995 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6995) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7004 : 'tags this) ->
        fun
          ~callbackfn:(x6997 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x6998 : any option) ->
            fun () ->
              t_of_js
                (let x7006 = this_to_js Obj.magic x7004 in
                 Ojs.call (Ojs.get_prop_ascii x7006 "map") "apply"
                   [|x7006;((let x6999 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6999 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7001 : Ojs.t) ->
                                          fun (x7002 : Ojs.t) ->
                                            fun (x7003 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x6997
                                                   ~value:(Ojs.float_of_js
                                                             x7001)
                                                   ~index:(Ojs.float_of_js
                                                             x7002)
                                                   ~array:(t_of_js x7003))))|]);
                             (match x6998 with
                              | Some x7000 ->
                                  ignore
                                    (Ojs.call x6999 "push"
                                       [|(any_to_js x7000)|])
                              | None -> ());
                             x6999))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7012 : 'tags this) ->
        fun
          ~callbackfn:(x7007 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7012) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x7008 : Ojs.t) ->
                       fun (x7009 : Ojs.t) ->
                         fun (x7010 : Ojs.t) ->
                           fun (x7011 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7007 ~previousValue:(Ojs.float_of_js x7008)
                                  ~currentValue:(Ojs.float_of_js x7009)
                                  ~currentIndex:(Ojs.float_of_js x7010)
                                  ~array:(t_of_js x7011))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7020 : 'tags this) ->
        fun
          ~callbackfn:(x7014 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7019 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7020) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7015 : Ojs.t) ->
                         fun (x7016 : Ojs.t) ->
                           fun (x7017 : Ojs.t) ->
                             fun (x7018 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7014
                                    ~previousValue:(Ojs.float_of_js x7015)
                                    ~currentValue:(Ojs.float_of_js x7016)
                                    ~currentIndex:(Ojs.float_of_js x7017)
                                    ~array:(t_of_js x7018))));(Ojs.float_to_js
                                                                 x7019)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7028 : 'tags this) ->
        fun
          ~callbackfn:(x7022 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7027 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7028) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7023 : Ojs.t) ->
                         fun (x7024 : Ojs.t) ->
                           fun (x7025 : Ojs.t) ->
                             fun (x7026 : Ojs.t) ->
                               Obj.magic
                                 (x7022 ~previousValue:(Obj.magic x7023)
                                    ~currentValue:(Ojs.float_of_js x7024)
                                    ~currentIndex:(Ojs.float_of_js x7025)
                                    ~array:(t_of_js x7026))));(Obj.magic
                                                                 x7027)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7035 : 'tags this) ->
        fun
          ~callbackfn:(x7030 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7035) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7031 : Ojs.t) ->
                       fun (x7032 : Ojs.t) ->
                         fun (x7033 : Ojs.t) ->
                           fun (x7034 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7030 ~previousValue:(Ojs.float_of_js x7031)
                                  ~currentValue:(Ojs.float_of_js x7032)
                                  ~currentIndex:(Ojs.float_of_js x7033)
                                  ~array:(t_of_js x7034))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7043 : 'tags this) ->
        fun
          ~callbackfn:(x7037 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7042 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7043) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7038 : Ojs.t) ->
                         fun (x7039 : Ojs.t) ->
                           fun (x7040 : Ojs.t) ->
                             fun (x7041 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7037
                                    ~previousValue:(Ojs.float_of_js x7038)
                                    ~currentValue:(Ojs.float_of_js x7039)
                                    ~currentIndex:(Ojs.float_of_js x7040)
                                    ~array:(t_of_js x7041))));(Ojs.float_to_js
                                                                 x7042)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7051 : 'tags this) ->
        fun
          ~callbackfn:(x7045 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7050 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7051) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7046 : Ojs.t) ->
                         fun (x7047 : Ojs.t) ->
                           fun (x7048 : Ojs.t) ->
                             fun (x7049 : Ojs.t) ->
                               Obj.magic
                                 (x7045 ~previousValue:(Obj.magic x7046)
                                    ~currentValue:(Ojs.float_of_js x7047)
                                    ~currentIndex:(Ojs.float_of_js x7048)
                                    ~array:(t_of_js x7049))));(Obj.magic
                                                                 x7050)|])
    let (reverse : 'tags this -> t) =
      fun (x7053 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7053) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7060 : 'tags this) ->
        fun ~array:(x7055 : float ArrayLike.t) ->
          fun ?offset:(x7056 : float option) ->
            fun () ->
              ignore
                (let x7062 = this_to_js Obj.magic x7060 in
                 Ojs.call (Ojs.get_prop_ascii x7062 "set") "apply"
                   [|x7062;((let x7057 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7057 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x7055)|]);
                             (match x7056 with
                              | Some x7058 ->
                                  ignore
                                    (Ojs.call x7057 "push"
                                       [|(Ojs.float_to_js x7058)|])
                              | None -> ());
                             x7057))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7068 : 'tags this) ->
        fun ?start:(x7063 : float option) ->
          fun ?end_:(x7064 : float option) ->
            fun () ->
              t_of_js
                (let x7070 = this_to_js Obj.magic x7068 in
                 Ojs.call (Ojs.get_prop_ascii x7070 "slice") "apply"
                   [|x7070;((let x7065 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7063 with
                              | Some x7067 ->
                                  ignore
                                    (Ojs.call x7065 "push"
                                       [|(Ojs.float_to_js x7067)|])
                              | None -> ());
                             (match x7064 with
                              | Some x7066 ->
                                  ignore
                                    (Ojs.call x7065 "push"
                                       [|(Ojs.float_to_js x7066)|])
                              | None -> ());
                             x7065))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7078 : 'tags this) ->
        fun
          ~predicate:(x7071 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7072 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7080 = this_to_js Obj.magic x7078 in
                 Ojs.call (Ojs.get_prop_ascii x7080 "some") "apply"
                   [|x7080;((let x7073 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7073 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7075 : Ojs.t) ->
                                          fun (x7076 : Ojs.t) ->
                                            fun (x7077 : Ojs.t) ->
                                              unknown_to_js
                                                (x7071
                                                   ~value:(Ojs.float_of_js
                                                             x7075)
                                                   ~index:(Ojs.float_of_js
                                                             x7076)
                                                   ~array:(t_of_js x7077))))|]);
                             (match x7072 with
                              | Some x7074 ->
                                  ignore
                                    (Ojs.call x7073 "push"
                                       [|(any_to_js x7074)|])
                              | None -> ());
                             x7073))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x7086 : 'tags this) ->
        fun ?compareFn:(x7081 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x7088 = this_to_js Obj.magic x7086 in
               Ojs.call (Ojs.get_prop_ascii x7088 "sort") "apply"
                 [|x7088;((let x7082 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7081 with
                            | Some x7083 ->
                                ignore
                                  (Ojs.call x7082 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7084 : Ojs.t) ->
                                             fun (x7085 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x7083
                                                    ~a:(Ojs.float_of_js x7084)
                                                    ~b:(Ojs.float_of_js x7085))))|])
                            | None -> ());
                           x7082))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x7095 : 'tags this) ->
        fun ?begin_:(x7090 : float option) ->
          fun ?end_:(x7091 : float option) ->
            fun () ->
              t_of_js
                (let x7097 = this_to_js Obj.magic x7095 in
                 Ojs.call (Ojs.get_prop_ascii x7097 "subarray") "apply"
                   [|x7097;((let x7092 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7090 with
                              | Some x7094 ->
                                  ignore
                                    (Ojs.call x7092 "push"
                                       [|(Ojs.float_to_js x7094)|])
                              | None -> ());
                             (match x7091 with
                              | Some x7093 ->
                                  ignore
                                    (Ojs.call x7092 "push"
                                       [|(Ojs.float_to_js x7093)|])
                              | None -> ());
                             x7092))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x7098 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7098) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x7100 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7100) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x7102 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7102) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x7104 : 'tags this) ->
        fun (x7106 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x7104)
               (Ojs.float_to_js x7106))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x7107 : 'tags this) ->
        fun (x7109 : float) ->
          fun (x7110 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x7107) (Ojs.float_to_js x7109)
              (Ojs.float_to_js x7110)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x7111 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|(Iterable.t_to_js Ojs.float_to_js x7111)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7113 : float Iterable.t) ->
        fun ?mapfn:(x7114 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x7115 : any option) ->
            fun () ->
              t_of_js
                (let x7122 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
                 Ojs.call (Ojs.get_prop_ascii x7122 "from") "apply"
                   [|x7122;((let x7116 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7116 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x7113)|]);
                             (match x7114 with
                              | Some x7118 ->
                                  ignore
                                    (Ojs.call x7116 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x7119 : Ojs.t) ->
                                               fun (x7120 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x7118
                                                      ~v:(Ojs.float_of_js
                                                            x7119)
                                                      ~k:(Ojs.float_of_js
                                                            x7120))))|])
                              | None -> ());
                             (match x7115 with
                              | Some x7117 ->
                                  ignore
                                    (Ojs.call x7116 "push"
                                       [|(any_to_js x7117)|])
                              | None -> ());
                             x7116))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int8Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x7123 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|(Ojs.float_to_js x7123)|])
    let (create''' : (ArrayBufferLike.t, float ArrayLike.t) union2 -> t) =
      fun (x7124 : (ArrayBufferLike.t, float ArrayLike.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|(union2_to_js ArrayBufferLike.t_to_js
                  (fun (x7126 : float ArrayLike.t) ->
                     ArrayLike.t_to_js Ojs.float_to_js x7126) x7124)|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x7128 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x7129 : float option) ->
          fun ?length:(x7130 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int8Array")
                   (let x7131 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x7131 "push"
                         [|(ArrayBufferLike.t_to_js x7128)|]);
                    (match x7129 with
                     | Some x7133 ->
                         ignore
                           (Ojs.call x7131 "push" [|(Ojs.float_to_js x7133)|])
                     | None -> ());
                    (match x7130 with
                     | Some x7132 ->
                         ignore
                           (Ojs.call x7131 "push" [|(Ojs.float_to_js x7132)|])
                     | None -> ());
                    x7131))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int8Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x7134 : float list) ->
        t_of_js
          (let x7137 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
           Ojs.call (Ojs.get_prop_ascii x7137 "of") "apply"
             [|x7137;((let x7135 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x7136 : float) ->
                            ignore
                              (Ojs.call x7135 "push"
                                 [|(Ojs.float_to_js x7136)|])) x7134;
                       x7135))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x7138 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int8Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x7138)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7140 : 'T ArrayLike.t) ->
        fun ~mapfn:(x7141 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x7142 : any option) ->
            fun () ->
              t_of_js
                (let x7148 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
                 Ojs.call (Ojs.get_prop_ascii x7148 "from") "apply"
                   [|x7148;((let x7143 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7143 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x7140)|]);
                             ignore
                               (Ojs.call x7143 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x7145 : Ojs.t) ->
                                          fun (x7146 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x7141 ~v:(Obj.magic x7145)
                                                 ~k:(Ojs.float_of_js x7146))))|]);
                             (match x7142 with
                              | Some x7144 ->
                                  ignore
                                    (Ojs.call x7143 "push"
                                       [|(any_to_js x7144)|])
                              | None -> ());
                             x7143))|])
    let cast_from = Obj.magic
  end
module Int32Array =
  struct
    type t =
      [ `Int32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7150 : Ojs.t) -> t_of_js x7150
    and t_0_to_js : t_0 -> Ojs.t = fun (x7149 : t) -> t_to_js x7149
    type tags =
      [ `Int32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Int32Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7153 : Ojs.t) -> intf_of_js __tags_of_js x7153
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7151 : __tags intf) -> intf_to_js __tags_to_js x7151
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x7159 : 'tags this) ->
        fun ~searchElement:(x7155 : float) ->
          fun ?fromIndex:(x7156 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7161 = this_to_js Obj.magic x7159 in
                 Ojs.call (Ojs.get_prop_ascii x7161 "includes") "apply"
                   [|x7161;((let x7157 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7157 "push"
                                  [|(Ojs.float_to_js x7155)|]);
                             (match x7156 with
                              | Some x7158 ->
                                  ignore
                                    (Ojs.call x7157 "push"
                                       [|(Ojs.float_to_js x7158)|])
                              | None -> ());
                             x7157))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x7162 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x7164 : Ojs.t) ->
             let x7165 = x7164 in
             ((Ojs.float_of_js (Ojs.array_get x7165 0)),
               (Ojs.float_of_js (Ojs.array_get x7165 1))))
          (Ojs.call (this_to_js Obj.magic x7162) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x7166 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7166) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x7169 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7169) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x7172 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7172)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x7174 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7174) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x7176 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7176) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x7178 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7178) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7185 : 'tags this) ->
        fun ~target:(x7180 : float) ->
          fun ~start:(x7181 : float) ->
            fun ?end_:(x7182 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7187 = this_to_js Obj.magic x7185 in
                   Ojs.call (Ojs.get_prop_ascii x7187 "copyWithin") "apply"
                     [|x7187;((let x7183 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7183 "push"
                                    [|(Ojs.float_to_js x7180)|]);
                               ignore
                                 (Ojs.call x7183 "push"
                                    [|(Ojs.float_to_js x7181)|]);
                               (match x7182 with
                                | Some x7184 ->
                                    ignore
                                      (Ojs.call x7183 "push"
                                         [|(Ojs.float_to_js x7184)|])
                                | None -> ());
                               x7183))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7196 : 'tags this) ->
        fun
          ~predicate:(x7189 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7190 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7198 = this_to_js Obj.magic x7196 in
                 Ojs.call (Ojs.get_prop_ascii x7198 "every") "apply"
                   [|x7198;((let x7191 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7191 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7193 : Ojs.t) ->
                                          fun (x7194 : Ojs.t) ->
                                            fun (x7195 : Ojs.t) ->
                                              unknown_to_js
                                                (x7189
                                                   ~value:(Ojs.float_of_js
                                                             x7193)
                                                   ~index:(Ojs.float_of_js
                                                             x7194)
                                                   ~array:(t_of_js x7195))))|]);
                             (match x7190 with
                              | Some x7192 ->
                                  ignore
                                    (Ojs.call x7191 "push"
                                       [|(any_to_js x7192)|])
                              | None -> ());
                             x7191))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7205 : 'tags this) ->
        fun ~value:(x7199 : float) ->
          fun ?start:(x7200 : float option) ->
            fun ?end_:(x7201 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7207 = this_to_js Obj.magic x7205 in
                   Ojs.call (Ojs.get_prop_ascii x7207 "fill") "apply"
                     [|x7207;((let x7202 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7202 "push"
                                    [|(Ojs.float_to_js x7199)|]);
                               (match x7200 with
                                | Some x7204 ->
                                    ignore
                                      (Ojs.call x7202 "push"
                                         [|(Ojs.float_to_js x7204)|])
                                | None -> ());
                               (match x7201 with
                                | Some x7203 ->
                                    ignore
                                      (Ojs.call x7202 "push"
                                         [|(Ojs.float_to_js x7203)|])
                                | None -> ());
                               x7202))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7216 : 'tags this) ->
        fun ~predicate:(x7209 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7210 : any option) ->
            fun () ->
              t_of_js
                (let x7218 = this_to_js Obj.magic x7216 in
                 Ojs.call (Ojs.get_prop_ascii x7218 "filter") "apply"
                   [|x7218;((let x7211 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7211 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7213 : Ojs.t) ->
                                          fun (x7214 : Ojs.t) ->
                                            fun (x7215 : Ojs.t) ->
                                              any_to_js
                                                (x7209
                                                   ~value:(Ojs.float_of_js
                                                             x7213)
                                                   ~index:(Ojs.float_of_js
                                                             x7214)
                                                   ~array:(t_of_js x7215))))|]);
                             (match x7210 with
                              | Some x7212 ->
                                  ignore
                                    (Ojs.call x7211 "push"
                                       [|(any_to_js x7212)|])
                              | None -> ());
                             x7211))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x7226 : 'tags this) ->
        fun ~predicate:(x7219 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7220 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x7228 = this_to_js Obj.magic x7226 in
                 Ojs.call (Ojs.get_prop_ascii x7228 "find") "apply"
                   [|x7228;((let x7221 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7221 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7223 : Ojs.t) ->
                                          fun (x7224 : Ojs.t) ->
                                            fun (x7225 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7219
                                                   ~value:(Ojs.float_of_js
                                                             x7223)
                                                   ~index:(Ojs.float_of_js
                                                             x7224)
                                                   ~obj:(t_of_js x7225))))|]);
                             (match x7220 with
                              | Some x7222 ->
                                  ignore
                                    (Ojs.call x7221 "push"
                                       [|(any_to_js x7222)|])
                              | None -> ());
                             x7221))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7237 : 'tags this) ->
        fun ~predicate:(x7230 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7231 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7239 = this_to_js Obj.magic x7237 in
                 Ojs.call (Ojs.get_prop_ascii x7239 "findIndex") "apply"
                   [|x7239;((let x7232 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7232 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7234 : Ojs.t) ->
                                          fun (x7235 : Ojs.t) ->
                                            fun (x7236 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7230
                                                   ~value:(Ojs.float_of_js
                                                             x7234)
                                                   ~index:(Ojs.float_of_js
                                                             x7235)
                                                   ~obj:(t_of_js x7236))))|]);
                             (match x7231 with
                              | Some x7233 ->
                                  ignore
                                    (Ojs.call x7232 "push"
                                       [|(any_to_js x7233)|])
                              | None -> ());
                             x7232))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x7247 : 'tags this) ->
        fun
          ~callbackfn:(x7240 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x7241 : any option) ->
            fun () ->
              ignore
                (let x7249 = this_to_js Obj.magic x7247 in
                 Ojs.call (Ojs.get_prop_ascii x7249 "forEach") "apply"
                   [|x7249;((let x7242 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7242 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7244 : Ojs.t) ->
                                          fun (x7245 : Ojs.t) ->
                                            fun (x7246 : Ojs.t) ->
                                              x7240
                                                ~value:(Ojs.float_of_js x7244)
                                                ~index:(Ojs.float_of_js x7245)
                                                ~array:(t_of_js x7246)))|]);
                             (match x7241 with
                              | Some x7243 ->
                                  ignore
                                    (Ojs.call x7242 "push"
                                       [|(any_to_js x7243)|])
                              | None -> ());
                             x7242))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7254 : 'tags this) ->
        fun ~searchElement:(x7250 : float) ->
          fun ?fromIndex:(x7251 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7256 = this_to_js Obj.magic x7254 in
                 Ojs.call (Ojs.get_prop_ascii x7256 "indexOf") "apply"
                   [|x7256;((let x7252 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7252 "push"
                                  [|(Ojs.float_to_js x7250)|]);
                             (match x7251 with
                              | Some x7253 ->
                                  ignore
                                    (Ojs.call x7252 "push"
                                       [|(Ojs.float_to_js x7253)|])
                              | None -> ());
                             x7252))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x7260 : 'tags this) ->
        fun ?separator:(x7257 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x7262 = this_to_js Obj.magic x7260 in
               Ojs.call (Ojs.get_prop_ascii x7262 "join") "apply"
                 [|x7262;((let x7258 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7257 with
                            | Some x7259 ->
                                ignore
                                  (Ojs.call x7258 "push"
                                     [|(Ojs.string_to_js x7259)|])
                            | None -> ());
                           x7258))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7267 : 'tags this) ->
        fun ~searchElement:(x7263 : float) ->
          fun ?fromIndex:(x7264 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7269 = this_to_js Obj.magic x7267 in
                 Ojs.call (Ojs.get_prop_ascii x7269 "lastIndexOf") "apply"
                   [|x7269;((let x7265 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7265 "push"
                                  [|(Ojs.float_to_js x7263)|]);
                             (match x7264 with
                              | Some x7266 ->
                                  ignore
                                    (Ojs.call x7265 "push"
                                       [|(Ojs.float_to_js x7266)|])
                              | None -> ());
                             x7265))|])
    let (get_length : 'tags this -> float) =
      fun (x7270 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7270) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7279 : 'tags this) ->
        fun
          ~callbackfn:(x7272 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x7273 : any option) ->
            fun () ->
              t_of_js
                (let x7281 = this_to_js Obj.magic x7279 in
                 Ojs.call (Ojs.get_prop_ascii x7281 "map") "apply"
                   [|x7281;((let x7274 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7274 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7276 : Ojs.t) ->
                                          fun (x7277 : Ojs.t) ->
                                            fun (x7278 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x7272
                                                   ~value:(Ojs.float_of_js
                                                             x7276)
                                                   ~index:(Ojs.float_of_js
                                                             x7277)
                                                   ~array:(t_of_js x7278))))|]);
                             (match x7273 with
                              | Some x7275 ->
                                  ignore
                                    (Ojs.call x7274 "push"
                                       [|(any_to_js x7275)|])
                              | None -> ());
                             x7274))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7287 : 'tags this) ->
        fun
          ~callbackfn:(x7282 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7287) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x7283 : Ojs.t) ->
                       fun (x7284 : Ojs.t) ->
                         fun (x7285 : Ojs.t) ->
                           fun (x7286 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7282 ~previousValue:(Ojs.float_of_js x7283)
                                  ~currentValue:(Ojs.float_of_js x7284)
                                  ~currentIndex:(Ojs.float_of_js x7285)
                                  ~array:(t_of_js x7286))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7295 : 'tags this) ->
        fun
          ~callbackfn:(x7289 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7294 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7295) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7290 : Ojs.t) ->
                         fun (x7291 : Ojs.t) ->
                           fun (x7292 : Ojs.t) ->
                             fun (x7293 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7289
                                    ~previousValue:(Ojs.float_of_js x7290)
                                    ~currentValue:(Ojs.float_of_js x7291)
                                    ~currentIndex:(Ojs.float_of_js x7292)
                                    ~array:(t_of_js x7293))));(Ojs.float_to_js
                                                                 x7294)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7303 : 'tags this) ->
        fun
          ~callbackfn:(x7297 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7302 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7303) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7298 : Ojs.t) ->
                         fun (x7299 : Ojs.t) ->
                           fun (x7300 : Ojs.t) ->
                             fun (x7301 : Ojs.t) ->
                               Obj.magic
                                 (x7297 ~previousValue:(Obj.magic x7298)
                                    ~currentValue:(Ojs.float_of_js x7299)
                                    ~currentIndex:(Ojs.float_of_js x7300)
                                    ~array:(t_of_js x7301))));(Obj.magic
                                                                 x7302)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7310 : 'tags this) ->
        fun
          ~callbackfn:(x7305 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7310) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7306 : Ojs.t) ->
                       fun (x7307 : Ojs.t) ->
                         fun (x7308 : Ojs.t) ->
                           fun (x7309 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7305 ~previousValue:(Ojs.float_of_js x7306)
                                  ~currentValue:(Ojs.float_of_js x7307)
                                  ~currentIndex:(Ojs.float_of_js x7308)
                                  ~array:(t_of_js x7309))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7318 : 'tags this) ->
        fun
          ~callbackfn:(x7312 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7317 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7318) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7313 : Ojs.t) ->
                         fun (x7314 : Ojs.t) ->
                           fun (x7315 : Ojs.t) ->
                             fun (x7316 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7312
                                    ~previousValue:(Ojs.float_of_js x7313)
                                    ~currentValue:(Ojs.float_of_js x7314)
                                    ~currentIndex:(Ojs.float_of_js x7315)
                                    ~array:(t_of_js x7316))));(Ojs.float_to_js
                                                                 x7317)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7326 : 'tags this) ->
        fun
          ~callbackfn:(x7320 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7325 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7326) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7321 : Ojs.t) ->
                         fun (x7322 : Ojs.t) ->
                           fun (x7323 : Ojs.t) ->
                             fun (x7324 : Ojs.t) ->
                               Obj.magic
                                 (x7320 ~previousValue:(Obj.magic x7321)
                                    ~currentValue:(Ojs.float_of_js x7322)
                                    ~currentIndex:(Ojs.float_of_js x7323)
                                    ~array:(t_of_js x7324))));(Obj.magic
                                                                 x7325)|])
    let (reverse : 'tags this -> t) =
      fun (x7328 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7328) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7335 : 'tags this) ->
        fun ~array:(x7330 : float ArrayLike.t) ->
          fun ?offset:(x7331 : float option) ->
            fun () ->
              ignore
                (let x7337 = this_to_js Obj.magic x7335 in
                 Ojs.call (Ojs.get_prop_ascii x7337 "set") "apply"
                   [|x7337;((let x7332 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7332 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x7330)|]);
                             (match x7331 with
                              | Some x7333 ->
                                  ignore
                                    (Ojs.call x7332 "push"
                                       [|(Ojs.float_to_js x7333)|])
                              | None -> ());
                             x7332))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7343 : 'tags this) ->
        fun ?start:(x7338 : float option) ->
          fun ?end_:(x7339 : float option) ->
            fun () ->
              t_of_js
                (let x7345 = this_to_js Obj.magic x7343 in
                 Ojs.call (Ojs.get_prop_ascii x7345 "slice") "apply"
                   [|x7345;((let x7340 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7338 with
                              | Some x7342 ->
                                  ignore
                                    (Ojs.call x7340 "push"
                                       [|(Ojs.float_to_js x7342)|])
                              | None -> ());
                             (match x7339 with
                              | Some x7341 ->
                                  ignore
                                    (Ojs.call x7340 "push"
                                       [|(Ojs.float_to_js x7341)|])
                              | None -> ());
                             x7340))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7353 : 'tags this) ->
        fun
          ~predicate:(x7346 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7347 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7355 = this_to_js Obj.magic x7353 in
                 Ojs.call (Ojs.get_prop_ascii x7355 "some") "apply"
                   [|x7355;((let x7348 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7348 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7350 : Ojs.t) ->
                                          fun (x7351 : Ojs.t) ->
                                            fun (x7352 : Ojs.t) ->
                                              unknown_to_js
                                                (x7346
                                                   ~value:(Ojs.float_of_js
                                                             x7350)
                                                   ~index:(Ojs.float_of_js
                                                             x7351)
                                                   ~array:(t_of_js x7352))))|]);
                             (match x7347 with
                              | Some x7349 ->
                                  ignore
                                    (Ojs.call x7348 "push"
                                       [|(any_to_js x7349)|])
                              | None -> ());
                             x7348))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x7361 : 'tags this) ->
        fun ?compareFn:(x7356 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x7363 = this_to_js Obj.magic x7361 in
               Ojs.call (Ojs.get_prop_ascii x7363 "sort") "apply"
                 [|x7363;((let x7357 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7356 with
                            | Some x7358 ->
                                ignore
                                  (Ojs.call x7357 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7359 : Ojs.t) ->
                                             fun (x7360 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x7358
                                                    ~a:(Ojs.float_of_js x7359)
                                                    ~b:(Ojs.float_of_js x7360))))|])
                            | None -> ());
                           x7357))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x7370 : 'tags this) ->
        fun ?begin_:(x7365 : float option) ->
          fun ?end_:(x7366 : float option) ->
            fun () ->
              t_of_js
                (let x7372 = this_to_js Obj.magic x7370 in
                 Ojs.call (Ojs.get_prop_ascii x7372 "subarray") "apply"
                   [|x7372;((let x7367 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7365 with
                              | Some x7369 ->
                                  ignore
                                    (Ojs.call x7367 "push"
                                       [|(Ojs.float_to_js x7369)|])
                              | None -> ());
                             (match x7366 with
                              | Some x7368 ->
                                  ignore
                                    (Ojs.call x7367 "push"
                                       [|(Ojs.float_to_js x7368)|])
                              | None -> ());
                             x7367))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x7373 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7373) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x7375 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7375) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x7377 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7377) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x7379 : 'tags this) ->
        fun (x7381 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x7379)
               (Ojs.float_to_js x7381))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x7382 : 'tags this) ->
        fun (x7384 : float) ->
          fun (x7385 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x7382) (Ojs.float_to_js x7384)
              (Ojs.float_to_js x7385)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x7386 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|(Iterable.t_to_js Ojs.float_to_js x7386)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7388 : float Iterable.t) ->
        fun ?mapfn:(x7389 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x7390 : any option) ->
            fun () ->
              t_of_js
                (let x7397 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
                 Ojs.call (Ojs.get_prop_ascii x7397 "from") "apply"
                   [|x7397;((let x7391 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7391 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x7388)|]);
                             (match x7389 with
                              | Some x7393 ->
                                  ignore
                                    (Ojs.call x7391 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x7394 : Ojs.t) ->
                                               fun (x7395 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x7393
                                                      ~v:(Ojs.float_of_js
                                                            x7394)
                                                      ~k:(Ojs.float_of_js
                                                            x7395))))|])
                              | None -> ());
                             (match x7390 with
                              | Some x7392 ->
                                  ignore
                                    (Ojs.call x7391 "push"
                                       [|(any_to_js x7392)|])
                              | None -> ());
                             x7391))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int32Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x7398 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|(Ojs.float_to_js x7398)|])
    let (create''' : (ArrayBufferLike.t, float ArrayLike.t) union2 -> t) =
      fun (x7399 : (ArrayBufferLike.t, float ArrayLike.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|(union2_to_js ArrayBufferLike.t_to_js
                  (fun (x7401 : float ArrayLike.t) ->
                     ArrayLike.t_to_js Ojs.float_to_js x7401) x7399)|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x7403 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x7404 : float option) ->
          fun ?length:(x7405 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int32Array")
                   (let x7406 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x7406 "push"
                         [|(ArrayBufferLike.t_to_js x7403)|]);
                    (match x7404 with
                     | Some x7408 ->
                         ignore
                           (Ojs.call x7406 "push" [|(Ojs.float_to_js x7408)|])
                     | None -> ());
                    (match x7405 with
                     | Some x7407 ->
                         ignore
                           (Ojs.call x7406 "push" [|(Ojs.float_to_js x7407)|])
                     | None -> ());
                    x7406))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int32Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x7409 : float list) ->
        t_of_js
          (let x7412 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
           Ojs.call (Ojs.get_prop_ascii x7412 "of") "apply"
             [|x7412;((let x7410 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x7411 : float) ->
                            ignore
                              (Ojs.call x7410 "push"
                                 [|(Ojs.float_to_js x7411)|])) x7409;
                       x7410))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x7413 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int32Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x7413)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7415 : 'T ArrayLike.t) ->
        fun ~mapfn:(x7416 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x7417 : any option) ->
            fun () ->
              t_of_js
                (let x7423 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
                 Ojs.call (Ojs.get_prop_ascii x7423 "from") "apply"
                   [|x7423;((let x7418 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7418 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x7415)|]);
                             ignore
                               (Ojs.call x7418 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x7420 : Ojs.t) ->
                                          fun (x7421 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x7416 ~v:(Obj.magic x7420)
                                                 ~k:(Ojs.float_of_js x7421))))|]);
                             (match x7417 with
                              | Some x7419 ->
                                  ignore
                                    (Ojs.call x7418 "push"
                                       [|(any_to_js x7419)|])
                              | None -> ());
                             x7418))|])
    let cast_from = Obj.magic
  end
module Int16Array =
  struct
    type t =
      [ `Int16Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7425 : Ojs.t) -> t_of_js x7425
    and t_0_to_js : t_0 -> Ojs.t = fun (x7424 : t) -> t_to_js x7424
    type tags =
      [ `Int16Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Int16Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7428 : Ojs.t) -> intf_of_js __tags_of_js x7428
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7426 : __tags intf) -> intf_to_js __tags_to_js x7426
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x7434 : 'tags this) ->
        fun ~searchElement:(x7430 : float) ->
          fun ?fromIndex:(x7431 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7436 = this_to_js Obj.magic x7434 in
                 Ojs.call (Ojs.get_prop_ascii x7436 "includes") "apply"
                   [|x7436;((let x7432 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7432 "push"
                                  [|(Ojs.float_to_js x7430)|]);
                             (match x7431 with
                              | Some x7433 ->
                                  ignore
                                    (Ojs.call x7432 "push"
                                       [|(Ojs.float_to_js x7433)|])
                              | None -> ());
                             x7432))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x7437 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x7439 : Ojs.t) ->
             let x7440 = x7439 in
             ((Ojs.float_of_js (Ojs.array_get x7440 0)),
               (Ojs.float_of_js (Ojs.array_get x7440 1))))
          (Ojs.call (this_to_js Obj.magic x7437) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x7441 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7441) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x7444 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7444) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x7447 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7447)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x7449 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7449) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x7451 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7451) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x7453 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7453) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7460 : 'tags this) ->
        fun ~target:(x7455 : float) ->
          fun ~start:(x7456 : float) ->
            fun ?end_:(x7457 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7462 = this_to_js Obj.magic x7460 in
                   Ojs.call (Ojs.get_prop_ascii x7462 "copyWithin") "apply"
                     [|x7462;((let x7458 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7458 "push"
                                    [|(Ojs.float_to_js x7455)|]);
                               ignore
                                 (Ojs.call x7458 "push"
                                    [|(Ojs.float_to_js x7456)|]);
                               (match x7457 with
                                | Some x7459 ->
                                    ignore
                                      (Ojs.call x7458 "push"
                                         [|(Ojs.float_to_js x7459)|])
                                | None -> ());
                               x7458))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7471 : 'tags this) ->
        fun
          ~predicate:(x7464 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7465 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7473 = this_to_js Obj.magic x7471 in
                 Ojs.call (Ojs.get_prop_ascii x7473 "every") "apply"
                   [|x7473;((let x7466 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7466 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7468 : Ojs.t) ->
                                          fun (x7469 : Ojs.t) ->
                                            fun (x7470 : Ojs.t) ->
                                              unknown_to_js
                                                (x7464
                                                   ~value:(Ojs.float_of_js
                                                             x7468)
                                                   ~index:(Ojs.float_of_js
                                                             x7469)
                                                   ~array:(t_of_js x7470))))|]);
                             (match x7465 with
                              | Some x7467 ->
                                  ignore
                                    (Ojs.call x7466 "push"
                                       [|(any_to_js x7467)|])
                              | None -> ());
                             x7466))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7480 : 'tags this) ->
        fun ~value:(x7474 : float) ->
          fun ?start:(x7475 : float option) ->
            fun ?end_:(x7476 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7482 = this_to_js Obj.magic x7480 in
                   Ojs.call (Ojs.get_prop_ascii x7482 "fill") "apply"
                     [|x7482;((let x7477 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7477 "push"
                                    [|(Ojs.float_to_js x7474)|]);
                               (match x7475 with
                                | Some x7479 ->
                                    ignore
                                      (Ojs.call x7477 "push"
                                         [|(Ojs.float_to_js x7479)|])
                                | None -> ());
                               (match x7476 with
                                | Some x7478 ->
                                    ignore
                                      (Ojs.call x7477 "push"
                                         [|(Ojs.float_to_js x7478)|])
                                | None -> ());
                               x7477))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7491 : 'tags this) ->
        fun ~predicate:(x7484 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7485 : any option) ->
            fun () ->
              t_of_js
                (let x7493 = this_to_js Obj.magic x7491 in
                 Ojs.call (Ojs.get_prop_ascii x7493 "filter") "apply"
                   [|x7493;((let x7486 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7486 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7488 : Ojs.t) ->
                                          fun (x7489 : Ojs.t) ->
                                            fun (x7490 : Ojs.t) ->
                                              any_to_js
                                                (x7484
                                                   ~value:(Ojs.float_of_js
                                                             x7488)
                                                   ~index:(Ojs.float_of_js
                                                             x7489)
                                                   ~array:(t_of_js x7490))))|]);
                             (match x7485 with
                              | Some x7487 ->
                                  ignore
                                    (Ojs.call x7486 "push"
                                       [|(any_to_js x7487)|])
                              | None -> ());
                             x7486))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x7501 : 'tags this) ->
        fun ~predicate:(x7494 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7495 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x7503 = this_to_js Obj.magic x7501 in
                 Ojs.call (Ojs.get_prop_ascii x7503 "find") "apply"
                   [|x7503;((let x7496 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7496 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7498 : Ojs.t) ->
                                          fun (x7499 : Ojs.t) ->
                                            fun (x7500 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7494
                                                   ~value:(Ojs.float_of_js
                                                             x7498)
                                                   ~index:(Ojs.float_of_js
                                                             x7499)
                                                   ~obj:(t_of_js x7500))))|]);
                             (match x7495 with
                              | Some x7497 ->
                                  ignore
                                    (Ojs.call x7496 "push"
                                       [|(any_to_js x7497)|])
                              | None -> ());
                             x7496))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7512 : 'tags this) ->
        fun ~predicate:(x7505 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7506 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7514 = this_to_js Obj.magic x7512 in
                 Ojs.call (Ojs.get_prop_ascii x7514 "findIndex") "apply"
                   [|x7514;((let x7507 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7507 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7509 : Ojs.t) ->
                                          fun (x7510 : Ojs.t) ->
                                            fun (x7511 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7505
                                                   ~value:(Ojs.float_of_js
                                                             x7509)
                                                   ~index:(Ojs.float_of_js
                                                             x7510)
                                                   ~obj:(t_of_js x7511))))|]);
                             (match x7506 with
                              | Some x7508 ->
                                  ignore
                                    (Ojs.call x7507 "push"
                                       [|(any_to_js x7508)|])
                              | None -> ());
                             x7507))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x7522 : 'tags this) ->
        fun
          ~callbackfn:(x7515 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x7516 : any option) ->
            fun () ->
              ignore
                (let x7524 = this_to_js Obj.magic x7522 in
                 Ojs.call (Ojs.get_prop_ascii x7524 "forEach") "apply"
                   [|x7524;((let x7517 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7517 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7519 : Ojs.t) ->
                                          fun (x7520 : Ojs.t) ->
                                            fun (x7521 : Ojs.t) ->
                                              x7515
                                                ~value:(Ojs.float_of_js x7519)
                                                ~index:(Ojs.float_of_js x7520)
                                                ~array:(t_of_js x7521)))|]);
                             (match x7516 with
                              | Some x7518 ->
                                  ignore
                                    (Ojs.call x7517 "push"
                                       [|(any_to_js x7518)|])
                              | None -> ());
                             x7517))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7529 : 'tags this) ->
        fun ~searchElement:(x7525 : float) ->
          fun ?fromIndex:(x7526 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7531 = this_to_js Obj.magic x7529 in
                 Ojs.call (Ojs.get_prop_ascii x7531 "indexOf") "apply"
                   [|x7531;((let x7527 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7527 "push"
                                  [|(Ojs.float_to_js x7525)|]);
                             (match x7526 with
                              | Some x7528 ->
                                  ignore
                                    (Ojs.call x7527 "push"
                                       [|(Ojs.float_to_js x7528)|])
                              | None -> ());
                             x7527))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x7535 : 'tags this) ->
        fun ?separator:(x7532 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x7537 = this_to_js Obj.magic x7535 in
               Ojs.call (Ojs.get_prop_ascii x7537 "join") "apply"
                 [|x7537;((let x7533 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7532 with
                            | Some x7534 ->
                                ignore
                                  (Ojs.call x7533 "push"
                                     [|(Ojs.string_to_js x7534)|])
                            | None -> ());
                           x7533))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7542 : 'tags this) ->
        fun ~searchElement:(x7538 : float) ->
          fun ?fromIndex:(x7539 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7544 = this_to_js Obj.magic x7542 in
                 Ojs.call (Ojs.get_prop_ascii x7544 "lastIndexOf") "apply"
                   [|x7544;((let x7540 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7540 "push"
                                  [|(Ojs.float_to_js x7538)|]);
                             (match x7539 with
                              | Some x7541 ->
                                  ignore
                                    (Ojs.call x7540 "push"
                                       [|(Ojs.float_to_js x7541)|])
                              | None -> ());
                             x7540))|])
    let (get_length : 'tags this -> float) =
      fun (x7545 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7545) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7554 : 'tags this) ->
        fun
          ~callbackfn:(x7547 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x7548 : any option) ->
            fun () ->
              t_of_js
                (let x7556 = this_to_js Obj.magic x7554 in
                 Ojs.call (Ojs.get_prop_ascii x7556 "map") "apply"
                   [|x7556;((let x7549 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7549 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7551 : Ojs.t) ->
                                          fun (x7552 : Ojs.t) ->
                                            fun (x7553 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x7547
                                                   ~value:(Ojs.float_of_js
                                                             x7551)
                                                   ~index:(Ojs.float_of_js
                                                             x7552)
                                                   ~array:(t_of_js x7553))))|]);
                             (match x7548 with
                              | Some x7550 ->
                                  ignore
                                    (Ojs.call x7549 "push"
                                       [|(any_to_js x7550)|])
                              | None -> ());
                             x7549))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7562 : 'tags this) ->
        fun
          ~callbackfn:(x7557 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7562) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x7558 : Ojs.t) ->
                       fun (x7559 : Ojs.t) ->
                         fun (x7560 : Ojs.t) ->
                           fun (x7561 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7557 ~previousValue:(Ojs.float_of_js x7558)
                                  ~currentValue:(Ojs.float_of_js x7559)
                                  ~currentIndex:(Ojs.float_of_js x7560)
                                  ~array:(t_of_js x7561))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7570 : 'tags this) ->
        fun
          ~callbackfn:(x7564 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7569 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7570) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7565 : Ojs.t) ->
                         fun (x7566 : Ojs.t) ->
                           fun (x7567 : Ojs.t) ->
                             fun (x7568 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7564
                                    ~previousValue:(Ojs.float_of_js x7565)
                                    ~currentValue:(Ojs.float_of_js x7566)
                                    ~currentIndex:(Ojs.float_of_js x7567)
                                    ~array:(t_of_js x7568))));(Ojs.float_to_js
                                                                 x7569)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7578 : 'tags this) ->
        fun
          ~callbackfn:(x7572 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7577 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7578) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7573 : Ojs.t) ->
                         fun (x7574 : Ojs.t) ->
                           fun (x7575 : Ojs.t) ->
                             fun (x7576 : Ojs.t) ->
                               Obj.magic
                                 (x7572 ~previousValue:(Obj.magic x7573)
                                    ~currentValue:(Ojs.float_of_js x7574)
                                    ~currentIndex:(Ojs.float_of_js x7575)
                                    ~array:(t_of_js x7576))));(Obj.magic
                                                                 x7577)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7585 : 'tags this) ->
        fun
          ~callbackfn:(x7580 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7585) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7581 : Ojs.t) ->
                       fun (x7582 : Ojs.t) ->
                         fun (x7583 : Ojs.t) ->
                           fun (x7584 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7580 ~previousValue:(Ojs.float_of_js x7581)
                                  ~currentValue:(Ojs.float_of_js x7582)
                                  ~currentIndex:(Ojs.float_of_js x7583)
                                  ~array:(t_of_js x7584))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7593 : 'tags this) ->
        fun
          ~callbackfn:(x7587 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7592 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7593) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7588 : Ojs.t) ->
                         fun (x7589 : Ojs.t) ->
                           fun (x7590 : Ojs.t) ->
                             fun (x7591 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7587
                                    ~previousValue:(Ojs.float_of_js x7588)
                                    ~currentValue:(Ojs.float_of_js x7589)
                                    ~currentIndex:(Ojs.float_of_js x7590)
                                    ~array:(t_of_js x7591))));(Ojs.float_to_js
                                                                 x7592)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7601 : 'tags this) ->
        fun
          ~callbackfn:(x7595 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7600 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7601) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7596 : Ojs.t) ->
                         fun (x7597 : Ojs.t) ->
                           fun (x7598 : Ojs.t) ->
                             fun (x7599 : Ojs.t) ->
                               Obj.magic
                                 (x7595 ~previousValue:(Obj.magic x7596)
                                    ~currentValue:(Ojs.float_of_js x7597)
                                    ~currentIndex:(Ojs.float_of_js x7598)
                                    ~array:(t_of_js x7599))));(Obj.magic
                                                                 x7600)|])
    let (reverse : 'tags this -> t) =
      fun (x7603 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7603) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7610 : 'tags this) ->
        fun ~array:(x7605 : float ArrayLike.t) ->
          fun ?offset:(x7606 : float option) ->
            fun () ->
              ignore
                (let x7612 = this_to_js Obj.magic x7610 in
                 Ojs.call (Ojs.get_prop_ascii x7612 "set") "apply"
                   [|x7612;((let x7607 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7607 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x7605)|]);
                             (match x7606 with
                              | Some x7608 ->
                                  ignore
                                    (Ojs.call x7607 "push"
                                       [|(Ojs.float_to_js x7608)|])
                              | None -> ());
                             x7607))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7618 : 'tags this) ->
        fun ?start:(x7613 : float option) ->
          fun ?end_:(x7614 : float option) ->
            fun () ->
              t_of_js
                (let x7620 = this_to_js Obj.magic x7618 in
                 Ojs.call (Ojs.get_prop_ascii x7620 "slice") "apply"
                   [|x7620;((let x7615 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7613 with
                              | Some x7617 ->
                                  ignore
                                    (Ojs.call x7615 "push"
                                       [|(Ojs.float_to_js x7617)|])
                              | None -> ());
                             (match x7614 with
                              | Some x7616 ->
                                  ignore
                                    (Ojs.call x7615 "push"
                                       [|(Ojs.float_to_js x7616)|])
                              | None -> ());
                             x7615))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7628 : 'tags this) ->
        fun
          ~predicate:(x7621 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7622 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7630 = this_to_js Obj.magic x7628 in
                 Ojs.call (Ojs.get_prop_ascii x7630 "some") "apply"
                   [|x7630;((let x7623 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7623 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7625 : Ojs.t) ->
                                          fun (x7626 : Ojs.t) ->
                                            fun (x7627 : Ojs.t) ->
                                              unknown_to_js
                                                (x7621
                                                   ~value:(Ojs.float_of_js
                                                             x7625)
                                                   ~index:(Ojs.float_of_js
                                                             x7626)
                                                   ~array:(t_of_js x7627))))|]);
                             (match x7622 with
                              | Some x7624 ->
                                  ignore
                                    (Ojs.call x7623 "push"
                                       [|(any_to_js x7624)|])
                              | None -> ());
                             x7623))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x7636 : 'tags this) ->
        fun ?compareFn:(x7631 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x7638 = this_to_js Obj.magic x7636 in
               Ojs.call (Ojs.get_prop_ascii x7638 "sort") "apply"
                 [|x7638;((let x7632 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7631 with
                            | Some x7633 ->
                                ignore
                                  (Ojs.call x7632 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7634 : Ojs.t) ->
                                             fun (x7635 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x7633
                                                    ~a:(Ojs.float_of_js x7634)
                                                    ~b:(Ojs.float_of_js x7635))))|])
                            | None -> ());
                           x7632))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x7645 : 'tags this) ->
        fun ?begin_:(x7640 : float option) ->
          fun ?end_:(x7641 : float option) ->
            fun () ->
              t_of_js
                (let x7647 = this_to_js Obj.magic x7645 in
                 Ojs.call (Ojs.get_prop_ascii x7647 "subarray") "apply"
                   [|x7647;((let x7642 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7640 with
                              | Some x7644 ->
                                  ignore
                                    (Ojs.call x7642 "push"
                                       [|(Ojs.float_to_js x7644)|])
                              | None -> ());
                             (match x7641 with
                              | Some x7643 ->
                                  ignore
                                    (Ojs.call x7642 "push"
                                       [|(Ojs.float_to_js x7643)|])
                              | None -> ());
                             x7642))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x7648 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7648) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x7650 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7650) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x7652 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7652) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x7654 : 'tags this) ->
        fun (x7656 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x7654)
               (Ojs.float_to_js x7656))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x7657 : 'tags this) ->
        fun (x7659 : float) ->
          fun (x7660 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x7657) (Ojs.float_to_js x7659)
              (Ojs.float_to_js x7660)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x7661 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|(Iterable.t_to_js Ojs.float_to_js x7661)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7663 : float Iterable.t) ->
        fun ?mapfn:(x7664 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x7665 : any option) ->
            fun () ->
              t_of_js
                (let x7672 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
                 Ojs.call (Ojs.get_prop_ascii x7672 "from") "apply"
                   [|x7672;((let x7666 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7666 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x7663)|]);
                             (match x7664 with
                              | Some x7668 ->
                                  ignore
                                    (Ojs.call x7666 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x7669 : Ojs.t) ->
                                               fun (x7670 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x7668
                                                      ~v:(Ojs.float_of_js
                                                            x7669)
                                                      ~k:(Ojs.float_of_js
                                                            x7670))))|])
                              | None -> ());
                             (match x7665 with
                              | Some x7667 ->
                                  ignore
                                    (Ojs.call x7666 "push"
                                       [|(any_to_js x7667)|])
                              | None -> ());
                             x7666))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int16Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x7673 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|(Ojs.float_to_js x7673)|])
    let (create''' : (ArrayBufferLike.t, float ArrayLike.t) union2 -> t) =
      fun (x7674 : (ArrayBufferLike.t, float ArrayLike.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|(union2_to_js ArrayBufferLike.t_to_js
                  (fun (x7676 : float ArrayLike.t) ->
                     ArrayLike.t_to_js Ojs.float_to_js x7676) x7674)|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x7678 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x7679 : float option) ->
          fun ?length:(x7680 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int16Array")
                   (let x7681 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x7681 "push"
                         [|(ArrayBufferLike.t_to_js x7678)|]);
                    (match x7679 with
                     | Some x7683 ->
                         ignore
                           (Ojs.call x7681 "push" [|(Ojs.float_to_js x7683)|])
                     | None -> ());
                    (match x7680 with
                     | Some x7682 ->
                         ignore
                           (Ojs.call x7681 "push" [|(Ojs.float_to_js x7682)|])
                     | None -> ());
                    x7681))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int16Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x7684 : float list) ->
        t_of_js
          (let x7687 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
           Ojs.call (Ojs.get_prop_ascii x7687 "of") "apply"
             [|x7687;((let x7685 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x7686 : float) ->
                            ignore
                              (Ojs.call x7685 "push"
                                 [|(Ojs.float_to_js x7686)|])) x7684;
                       x7685))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x7688 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int16Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x7688)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7690 : 'T ArrayLike.t) ->
        fun ~mapfn:(x7691 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x7692 : any option) ->
            fun () ->
              t_of_js
                (let x7698 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
                 Ojs.call (Ojs.get_prop_ascii x7698 "from") "apply"
                   [|x7698;((let x7693 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7693 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x7690)|]);
                             ignore
                               (Ojs.call x7693 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x7695 : Ojs.t) ->
                                          fun (x7696 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x7691 ~v:(Obj.magic x7695)
                                                 ~k:(Ojs.float_of_js x7696))))|]);
                             (match x7692 with
                              | Some x7694 ->
                                  ignore
                                    (Ojs.call x7693 "push"
                                       [|(any_to_js x7694)|])
                              | None -> ());
                             x7693))|])
    let cast_from = Obj.magic
  end
module BigUint64Array =
  struct
    type t =
      [ `BigUint64Array  | bigint ArrayLike.tags_1
      | bigint IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7700 : Ojs.t) -> t_of_js x7700
    and t_0_to_js : t_0 -> Ojs.t = fun (x7699 : t) -> t_to_js x7699
    type tags =
      [ `BigUint64Array  | bigint ArrayLike.tags_1
      | bigint IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `BigUint64Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7703 : Ojs.t) -> intf_of_js __tags_of_js x7703
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7701 : __tags intf) -> intf_to_js __tags_to_js x7701
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x7705 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7705)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x7707 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7707) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x7709 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7709) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x7711 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7711) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7718 : 'tags this) ->
        fun ~target:(x7713 : float) ->
          fun ~start:(x7714 : float) ->
            fun ?end_:(x7715 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7720 = this_to_js Obj.magic x7718 in
                   Ojs.call (Ojs.get_prop_ascii x7720 "copyWithin") "apply"
                     [|x7720;((let x7716 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7716 "push"
                                    [|(Ojs.float_to_js x7713)|]);
                               ignore
                                 (Ojs.call x7716 "push"
                                    [|(Ojs.float_to_js x7714)|]);
                               (match x7715 with
                                | Some x7717 ->
                                    ignore
                                      (Ojs.call x7716 "push"
                                         [|(Ojs.float_to_js x7717)|])
                                | None -> ());
                               x7716))|])
    let (entries : 'tags this -> (float * bigint) IterableIterator.t) =
      fun (x7722 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x7724 : Ojs.t) ->
             let x7725 = x7724 in
             ((Ojs.float_of_js (Ojs.array_get x7725 0)),
               (bigint_of_js (Ojs.array_get x7725 1))))
          (Ojs.call (this_to_js Obj.magic x7722) "entries" [||])
    let (every :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7733 : 'tags this) ->
        fun
          ~predicate:(x7726 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x7727 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7735 = this_to_js Obj.magic x7733 in
                 Ojs.call (Ojs.get_prop_ascii x7735 "every") "apply"
                   [|x7735;((let x7728 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7728 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7730 : Ojs.t) ->
                                          fun (x7731 : Ojs.t) ->
                                            fun (x7732 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7726
                                                   ~value:(bigint_of_js x7730)
                                                   ~index:(Ojs.float_of_js
                                                             x7731)
                                                   ~array:(t_of_js x7732))))|]);
                             (match x7727 with
                              | Some x7729 ->
                                  ignore
                                    (Ojs.call x7728 "push"
                                       [|(any_to_js x7729)|])
                              | None -> ());
                             x7728))|])
    let (fill :
      'tags this ->
        value:bigint -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7742 : 'tags this) ->
        fun ~value:(x7736 : bigint) ->
          fun ?start:(x7737 : float option) ->
            fun ?end_:(x7738 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7744 = this_to_js Obj.magic x7742 in
                   Ojs.call (Ojs.get_prop_ascii x7744 "fill") "apply"
                     [|x7744;((let x7739 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7739 "push"
                                    [|(bigint_to_js x7736)|]);
                               (match x7737 with
                                | Some x7741 ->
                                    ignore
                                      (Ojs.call x7739 "push"
                                         [|(Ojs.float_to_js x7741)|])
                                | None -> ());
                               (match x7738 with
                                | Some x7740 ->
                                    ignore
                                      (Ojs.call x7739 "push"
                                         [|(Ojs.float_to_js x7740)|])
                                | None -> ());
                               x7739))|])
    let (filter :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7753 : 'tags this) ->
        fun
          ~predicate:(x7746 : value:bigint -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7747 : any option) ->
            fun () ->
              t_of_js
                (let x7755 = this_to_js Obj.magic x7753 in
                 Ojs.call (Ojs.get_prop_ascii x7755 "filter") "apply"
                   [|x7755;((let x7748 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7748 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7750 : Ojs.t) ->
                                          fun (x7751 : Ojs.t) ->
                                            fun (x7752 : Ojs.t) ->
                                              any_to_js
                                                (x7746
                                                   ~value:(bigint_of_js x7750)
                                                   ~index:(Ojs.float_of_js
                                                             x7751)
                                                   ~array:(t_of_js x7752))))|]);
                             (match x7747 with
                              | Some x7749 ->
                                  ignore
                                    (Ojs.call x7748 "push"
                                       [|(any_to_js x7749)|])
                              | None -> ());
                             x7748))|])
    let (find :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bigint or_undefined)
      =
      fun (x7763 : 'tags this) ->
        fun
          ~predicate:(x7756 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x7757 : any option) ->
            fun () ->
              or_undefined_of_js bigint_of_js
                (let x7765 = this_to_js Obj.magic x7763 in
                 Ojs.call (Ojs.get_prop_ascii x7765 "find") "apply"
                   [|x7765;((let x7758 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7758 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7760 : Ojs.t) ->
                                          fun (x7761 : Ojs.t) ->
                                            fun (x7762 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7756
                                                   ~value:(bigint_of_js x7760)
                                                   ~index:(Ojs.float_of_js
                                                             x7761)
                                                   ~array:(t_of_js x7762))))|]);
                             (match x7757 with
                              | Some x7759 ->
                                  ignore
                                    (Ojs.call x7758 "push"
                                       [|(any_to_js x7759)|])
                              | None -> ());
                             x7758))|])
    let (findIndex :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7774 : 'tags this) ->
        fun
          ~predicate:(x7767 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x7768 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7776 = this_to_js Obj.magic x7774 in
                 Ojs.call (Ojs.get_prop_ascii x7776 "findIndex") "apply"
                   [|x7776;((let x7769 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7769 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7771 : Ojs.t) ->
                                          fun (x7772 : Ojs.t) ->
                                            fun (x7773 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7767
                                                   ~value:(bigint_of_js x7771)
                                                   ~index:(Ojs.float_of_js
                                                             x7772)
                                                   ~array:(t_of_js x7773))))|]);
                             (match x7768 with
                              | Some x7770 ->
                                  ignore
                                    (Ojs.call x7769 "push"
                                       [|(any_to_js x7770)|])
                              | None -> ());
                             x7769))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x7784 : 'tags this) ->
        fun
          ~callbackfn:(x7777 :
                        value:bigint -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x7778 : any option) ->
            fun () ->
              ignore
                (let x7786 = this_to_js Obj.magic x7784 in
                 Ojs.call (Ojs.get_prop_ascii x7786 "forEach") "apply"
                   [|x7786;((let x7779 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7779 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7781 : Ojs.t) ->
                                          fun (x7782 : Ojs.t) ->
                                            fun (x7783 : Ojs.t) ->
                                              x7777
                                                ~value:(bigint_of_js x7781)
                                                ~index:(Ojs.float_of_js x7782)
                                                ~array:(t_of_js x7783)))|]);
                             (match x7778 with
                              | Some x7780 ->
                                  ignore
                                    (Ojs.call x7779 "push"
                                       [|(any_to_js x7780)|])
                              | None -> ());
                             x7779))|])
    let (includes :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> bool)
      =
      fun (x7791 : 'tags this) ->
        fun ~searchElement:(x7787 : bigint) ->
          fun ?fromIndex:(x7788 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7793 = this_to_js Obj.magic x7791 in
                 Ojs.call (Ojs.get_prop_ascii x7793 "includes") "apply"
                   [|x7793;((let x7789 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7789 "push"
                                  [|(bigint_to_js x7787)|]);
                             (match x7788 with
                              | Some x7790 ->
                                  ignore
                                    (Ojs.call x7789 "push"
                                       [|(Ojs.float_to_js x7790)|])
                              | None -> ());
                             x7789))|])
    let (indexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x7798 : 'tags this) ->
        fun ~searchElement:(x7794 : bigint) ->
          fun ?fromIndex:(x7795 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7800 = this_to_js Obj.magic x7798 in
                 Ojs.call (Ojs.get_prop_ascii x7800 "indexOf") "apply"
                   [|x7800;((let x7796 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7796 "push"
                                  [|(bigint_to_js x7794)|]);
                             (match x7795 with
                              | Some x7797 ->
                                  ignore
                                    (Ojs.call x7796 "push"
                                       [|(Ojs.float_to_js x7797)|])
                              | None -> ());
                             x7796))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x7804 : 'tags this) ->
        fun ?separator:(x7801 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x7806 = this_to_js Obj.magic x7804 in
               Ojs.call (Ojs.get_prop_ascii x7806 "join") "apply"
                 [|x7806;((let x7802 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7801 with
                            | Some x7803 ->
                                ignore
                                  (Ojs.call x7802 "push"
                                     [|(Ojs.string_to_js x7803)|])
                            | None -> ());
                           x7802))|])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x7807 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7807) "keys" [||])
    let (lastIndexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x7814 : 'tags this) ->
        fun ~searchElement:(x7810 : bigint) ->
          fun ?fromIndex:(x7811 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7816 = this_to_js Obj.magic x7814 in
                 Ojs.call (Ojs.get_prop_ascii x7816 "lastIndexOf") "apply"
                   [|x7816;((let x7812 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7812 "push"
                                  [|(bigint_to_js x7810)|]);
                             (match x7811 with
                              | Some x7813 ->
                                  ignore
                                    (Ojs.call x7812 "push"
                                       [|(Ojs.float_to_js x7813)|])
                              | None -> ());
                             x7812))|])
    let (get_length : 'tags this -> float) =
      fun (x7817 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7817) "length")
    let (map :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> bigint) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7826 : 'tags this) ->
        fun
          ~callbackfn:(x7819 :
                        value:bigint -> index:float -> array:t -> bigint)
          ->
          fun ?thisArg:(x7820 : any option) ->
            fun () ->
              t_of_js
                (let x7828 = this_to_js Obj.magic x7826 in
                 Ojs.call (Ojs.get_prop_ascii x7828 "map") "apply"
                   [|x7828;((let x7821 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7821 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7823 : Ojs.t) ->
                                          fun (x7824 : Ojs.t) ->
                                            fun (x7825 : Ojs.t) ->
                                              bigint_to_js
                                                (x7819
                                                   ~value:(bigint_of_js x7823)
                                                   ~index:(Ojs.float_of_js
                                                             x7824)
                                                   ~array:(t_of_js x7825))))|]);
                             (match x7820 with
                              | Some x7822 ->
                                  ignore
                                    (Ojs.call x7821 "push"
                                       [|(any_to_js x7822)|])
                              | None -> ());
                             x7821))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x7834 : 'tags this) ->
        fun
          ~callbackfn:(x7829 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x7834) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x7830 : Ojs.t) ->
                       fun (x7831 : Ojs.t) ->
                         fun (x7832 : Ojs.t) ->
                           fun (x7833 : Ojs.t) ->
                             bigint_to_js
                               (x7829 ~previousValue:(bigint_of_js x7830)
                                  ~currentValue:(bigint_of_js x7831)
                                  ~currentIndex:(Ojs.float_of_js x7832)
                                  ~array:(t_of_js x7833))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7842 : 'tags this) ->
        fun
          ~callbackfn:(x7836 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7841 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7842) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7837 : Ojs.t) ->
                         fun (x7838 : Ojs.t) ->
                           fun (x7839 : Ojs.t) ->
                             fun (x7840 : Ojs.t) ->
                               Obj.magic
                                 (x7836 ~previousValue:(Obj.magic x7837)
                                    ~currentValue:(bigint_of_js x7838)
                                    ~currentIndex:(Ojs.float_of_js x7839)
                                    ~array:(t_of_js x7840))));(Obj.magic
                                                                 x7841)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x7849 : 'tags this) ->
        fun
          ~callbackfn:(x7844 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x7849) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7845 : Ojs.t) ->
                       fun (x7846 : Ojs.t) ->
                         fun (x7847 : Ojs.t) ->
                           fun (x7848 : Ojs.t) ->
                             bigint_to_js
                               (x7844 ~previousValue:(bigint_of_js x7845)
                                  ~currentValue:(bigint_of_js x7846)
                                  ~currentIndex:(Ojs.float_of_js x7847)
                                  ~array:(t_of_js x7848))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7857 : 'tags this) ->
        fun
          ~callbackfn:(x7851 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7856 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7857) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7852 : Ojs.t) ->
                         fun (x7853 : Ojs.t) ->
                           fun (x7854 : Ojs.t) ->
                             fun (x7855 : Ojs.t) ->
                               Obj.magic
                                 (x7851 ~previousValue:(Obj.magic x7852)
                                    ~currentValue:(bigint_of_js x7853)
                                    ~currentIndex:(Ojs.float_of_js x7854)
                                    ~array:(t_of_js x7855))));(Obj.magic
                                                                 x7856)|])
    let (reverse : 'tags this -> 'tags this) =
      fun (x7859 : 'tags this) ->
        this_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic x7859) "reverse" [||])
    let (set_ :
      'tags this -> array:bigint ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7867 : 'tags this) ->
        fun ~array:(x7862 : bigint ArrayLike.t) ->
          fun ?offset:(x7863 : float option) ->
            fun () ->
              ignore
                (let x7869 = this_to_js Obj.magic x7867 in
                 Ojs.call (Ojs.get_prop_ascii x7869 "set") "apply"
                   [|x7869;((let x7864 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7864 "push"
                                  [|(ArrayLike.t_to_js bigint_to_js x7862)|]);
                             (match x7863 with
                              | Some x7865 ->
                                  ignore
                                    (Ojs.call x7864 "push"
                                       [|(Ojs.float_to_js x7865)|])
                              | None -> ());
                             x7864))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7875 : 'tags this) ->
        fun ?start:(x7870 : float option) ->
          fun ?end_:(x7871 : float option) ->
            fun () ->
              t_of_js
                (let x7877 = this_to_js Obj.magic x7875 in
                 Ojs.call (Ojs.get_prop_ascii x7877 "slice") "apply"
                   [|x7877;((let x7872 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7870 with
                              | Some x7874 ->
                                  ignore
                                    (Ojs.call x7872 "push"
                                       [|(Ojs.float_to_js x7874)|])
                              | None -> ());
                             (match x7871 with
                              | Some x7873 ->
                                  ignore
                                    (Ojs.call x7872 "push"
                                       [|(Ojs.float_to_js x7873)|])
                              | None -> ());
                             x7872))|])
    let (some :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7885 : 'tags this) ->
        fun
          ~predicate:(x7878 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x7879 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7887 = this_to_js Obj.magic x7885 in
                 Ojs.call (Ojs.get_prop_ascii x7887 "some") "apply"
                   [|x7887;((let x7880 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7880 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7882 : Ojs.t) ->
                                          fun (x7883 : Ojs.t) ->
                                            fun (x7884 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7878
                                                   ~value:(bigint_of_js x7882)
                                                   ~index:(Ojs.float_of_js
                                                             x7883)
                                                   ~array:(t_of_js x7884))))|]);
                             (match x7879 with
                              | Some x7881 ->
                                  ignore
                                    (Ojs.call x7880 "push"
                                       [|(any_to_js x7881)|])
                              | None -> ());
                             x7880))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:bigint -> b:bigint -> bigint or_number) ->
          unit -> 'tags this)
      =
      fun (x7894 : 'tags this) ->
        fun
          ?compareFn:(x7888 :
                       (a:bigint -> b:bigint -> bigint or_number) option)
          ->
          fun () ->
            this_of_js Obj.magic
              (let x7896 = this_to_js Obj.magic x7894 in
               Ojs.call (Ojs.get_prop_ascii x7896 "sort") "apply"
                 [|x7896;((let x7889 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7888 with
                            | Some x7890 ->
                                ignore
                                  (Ojs.call x7889 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7891 : Ojs.t) ->
                                             fun (x7892 : Ojs.t) ->
                                               or_number_to_js bigint_to_js
                                                 (x7890
                                                    ~a:(bigint_of_js x7891)
                                                    ~b:(bigint_of_js x7892))))|])
                            | None -> ());
                           x7889))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x7903 : 'tags this) ->
        fun ?begin_:(x7898 : float option) ->
          fun ?end_:(x7899 : float option) ->
            fun () ->
              t_of_js
                (let x7905 = this_to_js Obj.magic x7903 in
                 Ojs.call (Ojs.get_prop_ascii x7905 "subarray") "apply"
                   [|x7905;((let x7900 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7898 with
                              | Some x7902 ->
                                  ignore
                                    (Ojs.call x7900 "push"
                                       [|(Ojs.float_to_js x7902)|])
                              | None -> ());
                             (match x7899 with
                              | Some x7901 ->
                                  ignore
                                    (Ojs.call x7900 "push"
                                       [|(Ojs.float_to_js x7901)|])
                              | None -> ());
                             x7900))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x7906 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7906) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x7908 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7908) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x7910 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7910) "valueOf" [||])
    let (values : 'tags this -> bigint IterableIterator.t) =
      fun (x7912 : 'tags this) ->
        IterableIterator.t_of_js bigint_of_js
          (Ojs.call (this_to_js Obj.magic x7912) "values" [||])
    let (get : 'tags this -> float -> bigint) =
      fun (x7915 : 'tags this) ->
        fun (x7917 : float) ->
          bigint_of_js
            (Ojs.get_prop (this_to_js Obj.magic x7915)
               (Ojs.float_to_js x7917))
    let (set : 'tags this -> float -> bigint -> unit) =
      fun (x7918 : 'tags this) ->
        fun (x7920 : float) ->
          fun (x7921 : bigint) ->
            Ojs.set_prop (this_to_js Obj.magic x7918) (Ojs.float_to_js x7920)
              (bigint_to_js x7921)
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "BigUint64Array") "prototype")
    let (create : ?length:float -> unit -> t) =
      fun ?length:(x7922 : float option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
               (let x7923 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x7922 with
                 | Some x7924 ->
                     ignore
                       (Ojs.call x7923 "push" [|(Ojs.float_to_js x7924)|])
                 | None -> ());
                x7923))
    let (create' : bigint Iterable.t -> t) =
      fun (x7925 : bigint Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
             [|(Iterable.t_to_js bigint_to_js x7925)|])
    let (create'' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x7927 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x7928 : float option) ->
          fun ?length:(x7929 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
                   (let x7930 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x7930 "push"
                         [|(ArrayBufferLike.t_to_js x7927)|]);
                    (match x7928 with
                     | Some x7932 ->
                         ignore
                           (Ojs.call x7930 "push" [|(Ojs.float_to_js x7932)|])
                     | None -> ());
                    (match x7929 with
                     | Some x7931 ->
                         ignore
                           (Ojs.call x7930 "push" [|(Ojs.float_to_js x7931)|])
                     | None -> ());
                    x7930))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
             "BYTES_PER_ELEMENT")
    let (of_ : bigint list -> t) =
      fun (x7933 : bigint list) ->
        t_of_js
          (let x7936 = Ojs.get_prop_ascii Ojs.global "BigUint64Array" in
           Ojs.call (Ojs.get_prop_ascii x7936 "of") "apply"
             [|x7936;((let x7934 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x7935 : bigint) ->
                            ignore
                              (Ojs.call x7934 "push" [|(bigint_to_js x7935)|]))
                         x7933;
                       x7934))|])
    let (from : bigint ArrayLike.t -> t) =
      fun (x7937 : bigint ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigUint64Array") "from"
             [|(ArrayLike.t_to_js bigint_to_js x7937)|])
    let (from' :
      arrayLike:'U ArrayLike.t ->
        mapfn:(v:'U -> k:float -> bigint) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7939 : 'U ArrayLike.t) ->
        fun ~mapfn:(x7940 : v:'U -> k:float -> bigint) ->
          fun ?thisArg:(x7941 : any option) ->
            fun () ->
              t_of_js
                (let x7947 = Ojs.get_prop_ascii Ojs.global "BigUint64Array" in
                 Ojs.call (Ojs.get_prop_ascii x7947 "from") "apply"
                   [|x7947;((let x7942 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7942 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x7939)|]);
                             ignore
                               (Ojs.call x7942 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x7944 : Ojs.t) ->
                                          fun (x7945 : Ojs.t) ->
                                            bigint_to_js
                                              (x7940 ~v:(Obj.magic x7944)
                                                 ~k:(Ojs.float_of_js x7945))))|]);
                             (match x7941 with
                              | Some x7943 ->
                                  ignore
                                    (Ojs.call x7942 "push"
                                       [|(any_to_js x7943)|])
                              | None -> ());
                             x7942))|])
    let cast_from = Obj.magic
  end
module BigInt64Array =
  struct
    type t =
      [ `BigInt64Array  | bigint ArrayLike.tags_1
      | bigint IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7949 : Ojs.t) -> t_of_js x7949
    and t_0_to_js : t_0 -> Ojs.t = fun (x7948 : t) -> t_to_js x7948
    type tags =
      [ `BigInt64Array  | bigint ArrayLike.tags_1
      | bigint IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `BigInt64Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7952 : Ojs.t) -> intf_of_js __tags_of_js x7952
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7950 : __tags intf) -> intf_to_js __tags_to_js x7950
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x7954 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7954)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x7956 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7956) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x7958 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7958) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x7960 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7960) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7967 : 'tags this) ->
        fun ~target:(x7962 : float) ->
          fun ~start:(x7963 : float) ->
            fun ?end_:(x7964 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7969 = this_to_js Obj.magic x7967 in
                   Ojs.call (Ojs.get_prop_ascii x7969 "copyWithin") "apply"
                     [|x7969;((let x7965 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7965 "push"
                                    [|(Ojs.float_to_js x7962)|]);
                               ignore
                                 (Ojs.call x7965 "push"
                                    [|(Ojs.float_to_js x7963)|]);
                               (match x7964 with
                                | Some x7966 ->
                                    ignore
                                      (Ojs.call x7965 "push"
                                         [|(Ojs.float_to_js x7966)|])
                                | None -> ());
                               x7965))|])
    let (entries : 'tags this -> (float * bigint) IterableIterator.t) =
      fun (x7971 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x7973 : Ojs.t) ->
             let x7974 = x7973 in
             ((Ojs.float_of_js (Ojs.array_get x7974 0)),
               (bigint_of_js (Ojs.array_get x7974 1))))
          (Ojs.call (this_to_js Obj.magic x7971) "entries" [||])
    let (every :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7982 : 'tags this) ->
        fun
          ~predicate:(x7975 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x7976 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7984 = this_to_js Obj.magic x7982 in
                 Ojs.call (Ojs.get_prop_ascii x7984 "every") "apply"
                   [|x7984;((let x7977 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7977 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7979 : Ojs.t) ->
                                          fun (x7980 : Ojs.t) ->
                                            fun (x7981 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7975
                                                   ~value:(bigint_of_js x7979)
                                                   ~index:(Ojs.float_of_js
                                                             x7980)
                                                   ~array:(t_of_js x7981))))|]);
                             (match x7976 with
                              | Some x7978 ->
                                  ignore
                                    (Ojs.call x7977 "push"
                                       [|(any_to_js x7978)|])
                              | None -> ());
                             x7977))|])
    let (fill :
      'tags this ->
        value:bigint -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7991 : 'tags this) ->
        fun ~value:(x7985 : bigint) ->
          fun ?start:(x7986 : float option) ->
            fun ?end_:(x7987 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7993 = this_to_js Obj.magic x7991 in
                   Ojs.call (Ojs.get_prop_ascii x7993 "fill") "apply"
                     [|x7993;((let x7988 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7988 "push"
                                    [|(bigint_to_js x7985)|]);
                               (match x7986 with
                                | Some x7990 ->
                                    ignore
                                      (Ojs.call x7988 "push"
                                         [|(Ojs.float_to_js x7990)|])
                                | None -> ());
                               (match x7987 with
                                | Some x7989 ->
                                    ignore
                                      (Ojs.call x7988 "push"
                                         [|(Ojs.float_to_js x7989)|])
                                | None -> ());
                               x7988))|])
    let (filter :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8002 : 'tags this) ->
        fun
          ~predicate:(x7995 : value:bigint -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7996 : any option) ->
            fun () ->
              t_of_js
                (let x8004 = this_to_js Obj.magic x8002 in
                 Ojs.call (Ojs.get_prop_ascii x8004 "filter") "apply"
                   [|x8004;((let x7997 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7997 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7999 : Ojs.t) ->
                                          fun (x8000 : Ojs.t) ->
                                            fun (x8001 : Ojs.t) ->
                                              any_to_js
                                                (x7995
                                                   ~value:(bigint_of_js x7999)
                                                   ~index:(Ojs.float_of_js
                                                             x8000)
                                                   ~array:(t_of_js x8001))))|]);
                             (match x7996 with
                              | Some x7998 ->
                                  ignore
                                    (Ojs.call x7997 "push"
                                       [|(any_to_js x7998)|])
                              | None -> ());
                             x7997))|])
    let (find :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bigint or_undefined)
      =
      fun (x8012 : 'tags this) ->
        fun
          ~predicate:(x8005 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8006 : any option) ->
            fun () ->
              or_undefined_of_js bigint_of_js
                (let x8014 = this_to_js Obj.magic x8012 in
                 Ojs.call (Ojs.get_prop_ascii x8014 "find") "apply"
                   [|x8014;((let x8007 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8007 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8009 : Ojs.t) ->
                                          fun (x8010 : Ojs.t) ->
                                            fun (x8011 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8005
                                                   ~value:(bigint_of_js x8009)
                                                   ~index:(Ojs.float_of_js
                                                             x8010)
                                                   ~array:(t_of_js x8011))))|]);
                             (match x8006 with
                              | Some x8008 ->
                                  ignore
                                    (Ojs.call x8007 "push"
                                       [|(any_to_js x8008)|])
                              | None -> ());
                             x8007))|])
    let (findIndex :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8023 : 'tags this) ->
        fun
          ~predicate:(x8016 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8017 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8025 = this_to_js Obj.magic x8023 in
                 Ojs.call (Ojs.get_prop_ascii x8025 "findIndex") "apply"
                   [|x8025;((let x8018 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8018 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8020 : Ojs.t) ->
                                          fun (x8021 : Ojs.t) ->
                                            fun (x8022 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8016
                                                   ~value:(bigint_of_js x8020)
                                                   ~index:(Ojs.float_of_js
                                                             x8021)
                                                   ~array:(t_of_js x8022))))|]);
                             (match x8017 with
                              | Some x8019 ->
                                  ignore
                                    (Ojs.call x8018 "push"
                                       [|(any_to_js x8019)|])
                              | None -> ());
                             x8018))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x8033 : 'tags this) ->
        fun
          ~callbackfn:(x8026 :
                        value:bigint -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x8027 : any option) ->
            fun () ->
              ignore
                (let x8035 = this_to_js Obj.magic x8033 in
                 Ojs.call (Ojs.get_prop_ascii x8035 "forEach") "apply"
                   [|x8035;((let x8028 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8028 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8030 : Ojs.t) ->
                                          fun (x8031 : Ojs.t) ->
                                            fun (x8032 : Ojs.t) ->
                                              x8026
                                                ~value:(bigint_of_js x8030)
                                                ~index:(Ojs.float_of_js x8031)
                                                ~array:(t_of_js x8032)))|]);
                             (match x8027 with
                              | Some x8029 ->
                                  ignore
                                    (Ojs.call x8028 "push"
                                       [|(any_to_js x8029)|])
                              | None -> ());
                             x8028))|])
    let (includes :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> bool)
      =
      fun (x8040 : 'tags this) ->
        fun ~searchElement:(x8036 : bigint) ->
          fun ?fromIndex:(x8037 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8042 = this_to_js Obj.magic x8040 in
                 Ojs.call (Ojs.get_prop_ascii x8042 "includes") "apply"
                   [|x8042;((let x8038 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8038 "push"
                                  [|(bigint_to_js x8036)|]);
                             (match x8037 with
                              | Some x8039 ->
                                  ignore
                                    (Ojs.call x8038 "push"
                                       [|(Ojs.float_to_js x8039)|])
                              | None -> ());
                             x8038))|])
    let (indexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x8047 : 'tags this) ->
        fun ~searchElement:(x8043 : bigint) ->
          fun ?fromIndex:(x8044 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8049 = this_to_js Obj.magic x8047 in
                 Ojs.call (Ojs.get_prop_ascii x8049 "indexOf") "apply"
                   [|x8049;((let x8045 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8045 "push"
                                  [|(bigint_to_js x8043)|]);
                             (match x8044 with
                              | Some x8046 ->
                                  ignore
                                    (Ojs.call x8045 "push"
                                       [|(Ojs.float_to_js x8046)|])
                              | None -> ());
                             x8045))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x8053 : 'tags this) ->
        fun ?separator:(x8050 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x8055 = this_to_js Obj.magic x8053 in
               Ojs.call (Ojs.get_prop_ascii x8055 "join") "apply"
                 [|x8055;((let x8051 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8050 with
                            | Some x8052 ->
                                ignore
                                  (Ojs.call x8051 "push"
                                     [|(Ojs.string_to_js x8052)|])
                            | None -> ());
                           x8051))|])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x8056 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8056) "keys" [||])
    let (lastIndexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x8063 : 'tags this) ->
        fun ~searchElement:(x8059 : bigint) ->
          fun ?fromIndex:(x8060 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8065 = this_to_js Obj.magic x8063 in
                 Ojs.call (Ojs.get_prop_ascii x8065 "lastIndexOf") "apply"
                   [|x8065;((let x8061 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8061 "push"
                                  [|(bigint_to_js x8059)|]);
                             (match x8060 with
                              | Some x8062 ->
                                  ignore
                                    (Ojs.call x8061 "push"
                                       [|(Ojs.float_to_js x8062)|])
                              | None -> ());
                             x8061))|])
    let (get_length : 'tags this -> float) =
      fun (x8066 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8066) "length")
    let (map :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> bigint) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8075 : 'tags this) ->
        fun
          ~callbackfn:(x8068 :
                        value:bigint -> index:float -> array:t -> bigint)
          ->
          fun ?thisArg:(x8069 : any option) ->
            fun () ->
              t_of_js
                (let x8077 = this_to_js Obj.magic x8075 in
                 Ojs.call (Ojs.get_prop_ascii x8077 "map") "apply"
                   [|x8077;((let x8070 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8070 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8072 : Ojs.t) ->
                                          fun (x8073 : Ojs.t) ->
                                            fun (x8074 : Ojs.t) ->
                                              bigint_to_js
                                                (x8068
                                                   ~value:(bigint_of_js x8072)
                                                   ~index:(Ojs.float_of_js
                                                             x8073)
                                                   ~array:(t_of_js x8074))))|]);
                             (match x8069 with
                              | Some x8071 ->
                                  ignore
                                    (Ojs.call x8070 "push"
                                       [|(any_to_js x8071)|])
                              | None -> ());
                             x8070))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x8083 : 'tags this) ->
        fun
          ~callbackfn:(x8078 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x8083) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x8079 : Ojs.t) ->
                       fun (x8080 : Ojs.t) ->
                         fun (x8081 : Ojs.t) ->
                           fun (x8082 : Ojs.t) ->
                             bigint_to_js
                               (x8078 ~previousValue:(bigint_of_js x8079)
                                  ~currentValue:(bigint_of_js x8080)
                                  ~currentIndex:(Ojs.float_of_js x8081)
                                  ~array:(t_of_js x8082))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8091 : 'tags this) ->
        fun
          ~callbackfn:(x8085 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8090 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8091) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8086 : Ojs.t) ->
                         fun (x8087 : Ojs.t) ->
                           fun (x8088 : Ojs.t) ->
                             fun (x8089 : Ojs.t) ->
                               Obj.magic
                                 (x8085 ~previousValue:(Obj.magic x8086)
                                    ~currentValue:(bigint_of_js x8087)
                                    ~currentIndex:(Ojs.float_of_js x8088)
                                    ~array:(t_of_js x8089))));(Obj.magic
                                                                 x8090)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x8098 : 'tags this) ->
        fun
          ~callbackfn:(x8093 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x8098) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x8094 : Ojs.t) ->
                       fun (x8095 : Ojs.t) ->
                         fun (x8096 : Ojs.t) ->
                           fun (x8097 : Ojs.t) ->
                             bigint_to_js
                               (x8093 ~previousValue:(bigint_of_js x8094)
                                  ~currentValue:(bigint_of_js x8095)
                                  ~currentIndex:(Ojs.float_of_js x8096)
                                  ~array:(t_of_js x8097))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8106 : 'tags this) ->
        fun
          ~callbackfn:(x8100 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8105 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8106) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8101 : Ojs.t) ->
                         fun (x8102 : Ojs.t) ->
                           fun (x8103 : Ojs.t) ->
                             fun (x8104 : Ojs.t) ->
                               Obj.magic
                                 (x8100 ~previousValue:(Obj.magic x8101)
                                    ~currentValue:(bigint_of_js x8102)
                                    ~currentIndex:(Ojs.float_of_js x8103)
                                    ~array:(t_of_js x8104))));(Obj.magic
                                                                 x8105)|])
    let (reverse : 'tags this -> 'tags this) =
      fun (x8108 : 'tags this) ->
        this_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic x8108) "reverse" [||])
    let (set_ :
      'tags this -> array:bigint ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x8116 : 'tags this) ->
        fun ~array:(x8111 : bigint ArrayLike.t) ->
          fun ?offset:(x8112 : float option) ->
            fun () ->
              ignore
                (let x8118 = this_to_js Obj.magic x8116 in
                 Ojs.call (Ojs.get_prop_ascii x8118 "set") "apply"
                   [|x8118;((let x8113 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8113 "push"
                                  [|(ArrayLike.t_to_js bigint_to_js x8111)|]);
                             (match x8112 with
                              | Some x8114 ->
                                  ignore
                                    (Ojs.call x8113 "push"
                                       [|(Ojs.float_to_js x8114)|])
                              | None -> ());
                             x8113))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x8124 : 'tags this) ->
        fun ?start:(x8119 : float option) ->
          fun ?end_:(x8120 : float option) ->
            fun () ->
              t_of_js
                (let x8126 = this_to_js Obj.magic x8124 in
                 Ojs.call (Ojs.get_prop_ascii x8126 "slice") "apply"
                   [|x8126;((let x8121 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8119 with
                              | Some x8123 ->
                                  ignore
                                    (Ojs.call x8121 "push"
                                       [|(Ojs.float_to_js x8123)|])
                              | None -> ());
                             (match x8120 with
                              | Some x8122 ->
                                  ignore
                                    (Ojs.call x8121 "push"
                                       [|(Ojs.float_to_js x8122)|])
                              | None -> ());
                             x8121))|])
    let (some :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8134 : 'tags this) ->
        fun
          ~predicate:(x8127 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8128 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8136 = this_to_js Obj.magic x8134 in
                 Ojs.call (Ojs.get_prop_ascii x8136 "some") "apply"
                   [|x8136;((let x8129 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8129 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8131 : Ojs.t) ->
                                          fun (x8132 : Ojs.t) ->
                                            fun (x8133 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8127
                                                   ~value:(bigint_of_js x8131)
                                                   ~index:(Ojs.float_of_js
                                                             x8132)
                                                   ~array:(t_of_js x8133))))|]);
                             (match x8128 with
                              | Some x8130 ->
                                  ignore
                                    (Ojs.call x8129 "push"
                                       [|(any_to_js x8130)|])
                              | None -> ());
                             x8129))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:bigint -> b:bigint -> bigint or_number) ->
          unit -> 'tags this)
      =
      fun (x8143 : 'tags this) ->
        fun
          ?compareFn:(x8137 :
                       (a:bigint -> b:bigint -> bigint or_number) option)
          ->
          fun () ->
            this_of_js Obj.magic
              (let x8145 = this_to_js Obj.magic x8143 in
               Ojs.call (Ojs.get_prop_ascii x8145 "sort") "apply"
                 [|x8145;((let x8138 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8137 with
                            | Some x8139 ->
                                ignore
                                  (Ojs.call x8138 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x8140 : Ojs.t) ->
                                             fun (x8141 : Ojs.t) ->
                                               or_number_to_js bigint_to_js
                                                 (x8139
                                                    ~a:(bigint_of_js x8140)
                                                    ~b:(bigint_of_js x8141))))|])
                            | None -> ());
                           x8138))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x8152 : 'tags this) ->
        fun ?begin_:(x8147 : float option) ->
          fun ?end_:(x8148 : float option) ->
            fun () ->
              t_of_js
                (let x8154 = this_to_js Obj.magic x8152 in
                 Ojs.call (Ojs.get_prop_ascii x8154 "subarray") "apply"
                   [|x8154;((let x8149 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8147 with
                              | Some x8151 ->
                                  ignore
                                    (Ojs.call x8149 "push"
                                       [|(Ojs.float_to_js x8151)|])
                              | None -> ());
                             (match x8148 with
                              | Some x8150 ->
                                  ignore
                                    (Ojs.call x8149 "push"
                                       [|(Ojs.float_to_js x8150)|])
                              | None -> ());
                             x8149))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x8155 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8155) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x8157 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8157) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x8159 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8159) "valueOf" [||])
    let (values : 'tags this -> bigint IterableIterator.t) =
      fun (x8161 : 'tags this) ->
        IterableIterator.t_of_js bigint_of_js
          (Ojs.call (this_to_js Obj.magic x8161) "values" [||])
    let (get : 'tags this -> float -> bigint) =
      fun (x8164 : 'tags this) ->
        fun (x8166 : float) ->
          bigint_of_js
            (Ojs.get_prop (this_to_js Obj.magic x8164)
               (Ojs.float_to_js x8166))
    let (set : 'tags this -> float -> bigint -> unit) =
      fun (x8167 : 'tags this) ->
        fun (x8169 : float) ->
          fun (x8170 : bigint) ->
            Ojs.set_prop (this_to_js Obj.magic x8167) (Ojs.float_to_js x8169)
              (bigint_to_js x8170)
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
             "prototype")
    let (create : ?length:float -> unit -> t) =
      fun ?length:(x8171 : float option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
               (let x8172 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x8171 with
                 | Some x8173 ->
                     ignore
                       (Ojs.call x8172 "push" [|(Ojs.float_to_js x8173)|])
                 | None -> ());
                x8172))
    let (create' : bigint Iterable.t -> t) =
      fun (x8174 : bigint Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
             [|(Iterable.t_to_js bigint_to_js x8174)|])
    let (create'' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x8176 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x8177 : float option) ->
          fun ?length:(x8178 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
                   (let x8179 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8179 "push"
                         [|(ArrayBufferLike.t_to_js x8176)|]);
                    (match x8177 with
                     | Some x8181 ->
                         ignore
                           (Ojs.call x8179 "push" [|(Ojs.float_to_js x8181)|])
                     | None -> ());
                    (match x8178 with
                     | Some x8180 ->
                         ignore
                           (Ojs.call x8179 "push" [|(Ojs.float_to_js x8180)|])
                     | None -> ());
                    x8179))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
             "BYTES_PER_ELEMENT")
    let (of_ : bigint list -> t) =
      fun (x8182 : bigint list) ->
        t_of_js
          (let x8185 = Ojs.get_prop_ascii Ojs.global "BigInt64Array" in
           Ojs.call (Ojs.get_prop_ascii x8185 "of") "apply"
             [|x8185;((let x8183 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x8184 : bigint) ->
                            ignore
                              (Ojs.call x8183 "push" [|(bigint_to_js x8184)|]))
                         x8182;
                       x8183))|])
    let (from : bigint ArrayLike.t -> t) =
      fun (x8186 : bigint ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigInt64Array") "from"
             [|(ArrayLike.t_to_js bigint_to_js x8186)|])
    let (from' :
      arrayLike:'U ArrayLike.t ->
        mapfn:(v:'U -> k:float -> bigint) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8188 : 'U ArrayLike.t) ->
        fun ~mapfn:(x8189 : v:'U -> k:float -> bigint) ->
          fun ?thisArg:(x8190 : any option) ->
            fun () ->
              t_of_js
                (let x8196 = Ojs.get_prop_ascii Ojs.global "BigInt64Array" in
                 Ojs.call (Ojs.get_prop_ascii x8196 "from") "apply"
                   [|x8196;((let x8191 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8191 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x8188)|]);
                             ignore
                               (Ojs.call x8191 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x8193 : Ojs.t) ->
                                          fun (x8194 : Ojs.t) ->
                                            bigint_to_js
                                              (x8189 ~v:(Obj.magic x8193)
                                                 ~k:(Ojs.float_of_js x8194))))|]);
                             (match x8190 with
                              | Some x8192 ->
                                  ignore
                                    (Ojs.call x8191 "push"
                                       [|(any_to_js x8192)|])
                              | None -> ());
                             x8191))|])
    let cast_from = Obj.magic
  end
module Atomics =
  struct
    let (add :
      typedArray:(Int16Array.t, Int32Array.t, Int8Array.t, Uint16Array.t,
        Uint32Array.t, Uint8Array.t) union6 ->
        index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x8197 :
                      (Int16Array.t, Int32Array.t, Int8Array.t,
                        Uint16Array.t, Uint32Array.t, Uint8Array.t) union6)
        ->
        fun ~index:(x8204 : float) ->
          fun ~value:(x8205 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "add"
                 [|(union6_to_js Int16Array.t_to_js Int32Array.t_to_js
                      Int8Array.t_to_js Uint16Array.t_to_js
                      Uint32Array.t_to_js Uint8Array.t_to_js x8197);(
                   Ojs.float_to_js x8204);(Ojs.float_to_js x8205)|])
    let (and_ :
      typedArray:(Int16Array.t, Int32Array.t, Int8Array.t, Uint16Array.t,
        Uint32Array.t, Uint8Array.t) union6 ->
        index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x8206 :
                      (Int16Array.t, Int32Array.t, Int8Array.t,
                        Uint16Array.t, Uint32Array.t, Uint8Array.t) union6)
        ->
        fun ~index:(x8213 : float) ->
          fun ~value:(x8214 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "and"
                 [|(union6_to_js Int16Array.t_to_js Int32Array.t_to_js
                      Int8Array.t_to_js Uint16Array.t_to_js
                      Uint32Array.t_to_js Uint8Array.t_to_js x8206);(
                   Ojs.float_to_js x8213);(Ojs.float_to_js x8214)|])
    let (compareExchange :
      typedArray:(Int16Array.t, Int32Array.t, Int8Array.t, Uint16Array.t,
        Uint32Array.t, Uint8Array.t) union6 ->
        index:float -> expectedValue:float -> replacementValue:float -> float)
      =
      fun
        ~typedArray:(x8215 :
                      (Int16Array.t, Int32Array.t, Int8Array.t,
                        Uint16Array.t, Uint32Array.t, Uint8Array.t) union6)
        ->
        fun ~index:(x8222 : float) ->
          fun ~expectedValue:(x8223 : float) ->
            fun ~replacementValue:(x8224 : float) ->
              Ojs.float_of_js
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics")
                   "compareExchange"
                   [|(union6_to_js Int16Array.t_to_js Int32Array.t_to_js
                        Int8Array.t_to_js Uint16Array.t_to_js
                        Uint32Array.t_to_js Uint8Array.t_to_js x8215);(
                     Ojs.float_to_js x8222);(Ojs.float_to_js x8223);(
                     Ojs.float_to_js x8224)|])
    let (exchange :
      typedArray:(Int16Array.t, Int32Array.t, Int8Array.t, Uint16Array.t,
        Uint32Array.t, Uint8Array.t) union6 ->
        index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x8225 :
                      (Int16Array.t, Int32Array.t, Int8Array.t,
                        Uint16Array.t, Uint32Array.t, Uint8Array.t) union6)
        ->
        fun ~index:(x8232 : float) ->
          fun ~value:(x8233 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "exchange"
                 [|(union6_to_js Int16Array.t_to_js Int32Array.t_to_js
                      Int8Array.t_to_js Uint16Array.t_to_js
                      Uint32Array.t_to_js Uint8Array.t_to_js x8225);(
                   Ojs.float_to_js x8232);(Ojs.float_to_js x8233)|])
    let (isLockFree : float -> bool) =
      fun (x8234 : float) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "isLockFree"
             [|(Ojs.float_to_js x8234)|])
    let (load :
      typedArray:(Int16Array.t, Int32Array.t, Int8Array.t, Uint16Array.t,
        Uint32Array.t, Uint8Array.t) union6 -> index:float -> float)
      =
      fun
        ~typedArray:(x8235 :
                      (Int16Array.t, Int32Array.t, Int8Array.t,
                        Uint16Array.t, Uint32Array.t, Uint8Array.t) union6)
        ->
        fun ~index:(x8242 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "load"
               [|(union6_to_js Int16Array.t_to_js Int32Array.t_to_js
                    Int8Array.t_to_js Uint16Array.t_to_js Uint32Array.t_to_js
                    Uint8Array.t_to_js x8235);(Ojs.float_to_js x8242)|])
    let (or_ :
      typedArray:(Int16Array.t, Int32Array.t, Int8Array.t, Uint16Array.t,
        Uint32Array.t, Uint8Array.t) union6 ->
        index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x8243 :
                      (Int16Array.t, Int32Array.t, Int8Array.t,
                        Uint16Array.t, Uint32Array.t, Uint8Array.t) union6)
        ->
        fun ~index:(x8250 : float) ->
          fun ~value:(x8251 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "or"
                 [|(union6_to_js Int16Array.t_to_js Int32Array.t_to_js
                      Int8Array.t_to_js Uint16Array.t_to_js
                      Uint32Array.t_to_js Uint8Array.t_to_js x8243);(
                   Ojs.float_to_js x8250);(Ojs.float_to_js x8251)|])
    let (store :
      typedArray:(Int16Array.t, Int32Array.t, Int8Array.t, Uint16Array.t,
        Uint32Array.t, Uint8Array.t) union6 ->
        index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x8252 :
                      (Int16Array.t, Int32Array.t, Int8Array.t,
                        Uint16Array.t, Uint32Array.t, Uint8Array.t) union6)
        ->
        fun ~index:(x8259 : float) ->
          fun ~value:(x8260 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "store"
                 [|(union6_to_js Int16Array.t_to_js Int32Array.t_to_js
                      Int8Array.t_to_js Uint16Array.t_to_js
                      Uint32Array.t_to_js Uint8Array.t_to_js x8252);(
                   Ojs.float_to_js x8259);(Ojs.float_to_js x8260)|])
    let (sub :
      typedArray:(Int16Array.t, Int32Array.t, Int8Array.t, Uint16Array.t,
        Uint32Array.t, Uint8Array.t) union6 ->
        index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x8261 :
                      (Int16Array.t, Int32Array.t, Int8Array.t,
                        Uint16Array.t, Uint32Array.t, Uint8Array.t) union6)
        ->
        fun ~index:(x8268 : float) ->
          fun ~value:(x8269 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "sub"
                 [|(union6_to_js Int16Array.t_to_js Int32Array.t_to_js
                      Int8Array.t_to_js Uint16Array.t_to_js
                      Uint32Array.t_to_js Uint8Array.t_to_js x8261);(
                   Ojs.float_to_js x8268);(Ojs.float_to_js x8269)|])
    let (wait :
      typedArray:Int32Array.t ->
        index:float ->
          value:float ->
            ?timeout:float ->
              unit -> [ `L_s70_not_equal  | `L_s73_ok  | `L_s93_timed_out ])
      =
      fun ~typedArray:(x8270 : Int32Array.t) ->
        fun ~index:(x8271 : float) ->
          fun ~value:(x8272 : float) ->
            fun ?timeout:(x8273 : float option) ->
              fun () ->
                let x8277 =
                  let x8276 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                  Ojs.call (Ojs.get_prop_ascii x8276 "wait") "apply"
                    [|x8276;((let x8274 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x8274 "push"
                                   [|(Int32Array.t_to_js x8270)|]);
                              ignore
                                (Ojs.call x8274 "push"
                                   [|(Ojs.float_to_js x8271)|]);
                              ignore
                                (Ojs.call x8274 "push"
                                   [|(Ojs.float_to_js x8272)|]);
                              (match x8273 with
                               | Some x8275 ->
                                   ignore
                                     (Ojs.call x8274 "push"
                                        [|(Ojs.float_to_js x8275)|])
                               | None -> ());
                              x8274))|] in
                match Ojs.string_of_js x8277 with
                | "not-equal" -> `L_s70_not_equal
                | "ok" -> `L_s73_ok
                | "timed-out" -> `L_s93_timed_out
                | _ -> assert false
    let (notify :
      typedArray:Int32Array.t -> index:float -> ?count:float -> unit -> float)
      =
      fun ~typedArray:(x8278 : Int32Array.t) ->
        fun ~index:(x8279 : float) ->
          fun ?count:(x8280 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8283 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                 Ojs.call (Ojs.get_prop_ascii x8283 "notify") "apply"
                   [|x8283;((let x8281 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8281 "push"
                                  [|(Int32Array.t_to_js x8278)|]);
                             ignore
                               (Ojs.call x8281 "push"
                                  [|(Ojs.float_to_js x8279)|]);
                             (match x8280 with
                              | Some x8282 ->
                                  ignore
                                    (Ojs.call x8281 "push"
                                       [|(Ojs.float_to_js x8282)|])
                              | None -> ());
                             x8281))|])
    let (xor :
      typedArray:(Int16Array.t, Int32Array.t, Int8Array.t, Uint16Array.t,
        Uint32Array.t, Uint8Array.t) union6 ->
        index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x8284 :
                      (Int16Array.t, Int32Array.t, Int8Array.t,
                        Uint16Array.t, Uint32Array.t, Uint8Array.t) union6)
        ->
        fun ~index:(x8291 : float) ->
          fun ~value:(x8292 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "xor"
                 [|(union6_to_js Int16Array.t_to_js Int32Array.t_to_js
                      Int8Array.t_to_js Uint16Array.t_to_js
                      Uint32Array.t_to_js Uint8Array.t_to_js x8284);(
                   Ojs.float_to_js x8291);(Ojs.float_to_js x8292)|])
    let (add' :
      typedArray:(BigInt64Array.t, BigUint64Array.t) union2 ->
        index:float -> value:bigint -> bigint)
      =
      fun ~typedArray:(x8293 : (BigInt64Array.t, BigUint64Array.t) union2) ->
        fun ~index:(x8296 : float) ->
          fun ~value:(x8297 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "add"
                 [|(union2_to_js BigInt64Array.t_to_js BigUint64Array.t_to_js
                      x8293);(Ojs.float_to_js x8296);(bigint_to_js x8297)|])
    let (and_' :
      typedArray:(BigInt64Array.t, BigUint64Array.t) union2 ->
        index:float -> value:bigint -> bigint)
      =
      fun ~typedArray:(x8298 : (BigInt64Array.t, BigUint64Array.t) union2) ->
        fun ~index:(x8301 : float) ->
          fun ~value:(x8302 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "and"
                 [|(union2_to_js BigInt64Array.t_to_js BigUint64Array.t_to_js
                      x8298);(Ojs.float_to_js x8301);(bigint_to_js x8302)|])
    let (compareExchange' :
      typedArray:(BigInt64Array.t, BigUint64Array.t) union2 ->
        index:float ->
          expectedValue:bigint -> replacementValue:bigint -> bigint)
      =
      fun ~typedArray:(x8303 : (BigInt64Array.t, BigUint64Array.t) union2) ->
        fun ~index:(x8306 : float) ->
          fun ~expectedValue:(x8307 : bigint) ->
            fun ~replacementValue:(x8308 : bigint) ->
              bigint_of_js
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics")
                   "compareExchange"
                   [|(union2_to_js BigInt64Array.t_to_js
                        BigUint64Array.t_to_js x8303);(Ojs.float_to_js x8306);(
                     bigint_to_js x8307);(bigint_to_js x8308)|])
    let (exchange' :
      typedArray:(BigInt64Array.t, BigUint64Array.t) union2 ->
        index:float -> value:bigint -> bigint)
      =
      fun ~typedArray:(x8309 : (BigInt64Array.t, BigUint64Array.t) union2) ->
        fun ~index:(x8312 : float) ->
          fun ~value:(x8313 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "exchange"
                 [|(union2_to_js BigInt64Array.t_to_js BigUint64Array.t_to_js
                      x8309);(Ojs.float_to_js x8312);(bigint_to_js x8313)|])
    let (load' :
      typedArray:(BigInt64Array.t, BigUint64Array.t) union2 ->
        index:float -> bigint)
      =
      fun ~typedArray:(x8314 : (BigInt64Array.t, BigUint64Array.t) union2) ->
        fun ~index:(x8317 : float) ->
          bigint_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "load"
               [|(union2_to_js BigInt64Array.t_to_js BigUint64Array.t_to_js
                    x8314);(Ojs.float_to_js x8317)|])
    let (or_' :
      typedArray:(BigInt64Array.t, BigUint64Array.t) union2 ->
        index:float -> value:bigint -> bigint)
      =
      fun ~typedArray:(x8318 : (BigInt64Array.t, BigUint64Array.t) union2) ->
        fun ~index:(x8321 : float) ->
          fun ~value:(x8322 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "or"
                 [|(union2_to_js BigInt64Array.t_to_js BigUint64Array.t_to_js
                      x8318);(Ojs.float_to_js x8321);(bigint_to_js x8322)|])
    let (store' :
      typedArray:(BigInt64Array.t, BigUint64Array.t) union2 ->
        index:float -> value:bigint -> bigint)
      =
      fun ~typedArray:(x8323 : (BigInt64Array.t, BigUint64Array.t) union2) ->
        fun ~index:(x8326 : float) ->
          fun ~value:(x8327 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "store"
                 [|(union2_to_js BigInt64Array.t_to_js BigUint64Array.t_to_js
                      x8323);(Ojs.float_to_js x8326);(bigint_to_js x8327)|])
    let (sub' :
      typedArray:(BigInt64Array.t, BigUint64Array.t) union2 ->
        index:float -> value:bigint -> bigint)
      =
      fun ~typedArray:(x8328 : (BigInt64Array.t, BigUint64Array.t) union2) ->
        fun ~index:(x8331 : float) ->
          fun ~value:(x8332 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "sub"
                 [|(union2_to_js BigInt64Array.t_to_js BigUint64Array.t_to_js
                      x8328);(Ojs.float_to_js x8331);(bigint_to_js x8332)|])
    let (wait' :
      typedArray:BigInt64Array.t ->
        index:float ->
          value:bigint ->
            ?timeout:float ->
              unit -> [ `L_s70_not_equal  | `L_s73_ok  | `L_s93_timed_out ])
      =
      fun ~typedArray:(x8333 : BigInt64Array.t) ->
        fun ~index:(x8334 : float) ->
          fun ~value:(x8335 : bigint) ->
            fun ?timeout:(x8336 : float option) ->
              fun () ->
                let x8340 =
                  let x8339 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                  Ojs.call (Ojs.get_prop_ascii x8339 "wait") "apply"
                    [|x8339;((let x8337 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x8337 "push"
                                   [|(BigInt64Array.t_to_js x8333)|]);
                              ignore
                                (Ojs.call x8337 "push"
                                   [|(Ojs.float_to_js x8334)|]);
                              ignore
                                (Ojs.call x8337 "push"
                                   [|(bigint_to_js x8335)|]);
                              (match x8336 with
                               | Some x8338 ->
                                   ignore
                                     (Ojs.call x8337 "push"
                                        [|(Ojs.float_to_js x8338)|])
                               | None -> ());
                              x8337))|] in
                match Ojs.string_of_js x8340 with
                | "not-equal" -> `L_s70_not_equal
                | "ok" -> `L_s73_ok
                | "timed-out" -> `L_s93_timed_out
                | _ -> assert false
    let (notify' :
      typedArray:BigInt64Array.t ->
        index:float -> ?count:float -> unit -> float)
      =
      fun ~typedArray:(x8341 : BigInt64Array.t) ->
        fun ~index:(x8342 : float) ->
          fun ?count:(x8343 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8346 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                 Ojs.call (Ojs.get_prop_ascii x8346 "notify") "apply"
                   [|x8346;((let x8344 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8344 "push"
                                  [|(BigInt64Array.t_to_js x8341)|]);
                             ignore
                               (Ojs.call x8344 "push"
                                  [|(Ojs.float_to_js x8342)|]);
                             (match x8343 with
                              | Some x8345 ->
                                  ignore
                                    (Ojs.call x8344 "push"
                                       [|(Ojs.float_to_js x8345)|])
                              | None -> ());
                             x8344))|])
    let (xor' :
      typedArray:(BigInt64Array.t, BigUint64Array.t) union2 ->
        index:float -> value:bigint -> bigint)
      =
      fun ~typedArray:(x8347 : (BigInt64Array.t, BigUint64Array.t) union2) ->
        fun ~index:(x8350 : float) ->
          fun ~value:(x8351 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "xor"
                 [|(union2_to_js BigInt64Array.t_to_js BigUint64Array.t_to_js
                      x8347);(Ojs.float_to_js x8350);(bigint_to_js x8351)|])
  end
module PromiseRejectedResult =
  struct
    type t = [ `PromiseRejectedResult ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8353 : Ojs.t) -> t_of_js x8353
    and t_0_to_js : t_0 -> Ojs.t = fun (x8352 : t) -> t_to_js x8352
    type tags = [ `PromiseRejectedResult ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `PromiseRejectedResult ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8356 : Ojs.t) -> intf_of_js __tags_of_js x8356
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8354 : __tags intf) -> intf_to_js __tags_to_js x8354
    let (get_status : 'tags this -> [ `L_s83_rejected ]) =
      fun (x8358 : 'tags this) ->
        let x8360 = Ojs.get_prop_ascii (this_to_js Obj.magic x8358) "status" in
        match Ojs.string_of_js x8360 with
        | "rejected" -> `L_s83_rejected
        | _ -> assert false
    let (set_status : 'tags this -> [ `L_s83_rejected ] -> unit) =
      fun (x8361 : 'tags this) ->
        fun (x8362 : [ `L_s83_rejected ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8361) "status"
            (match x8362 with
             | `L_s83_rejected -> Ojs.string_to_js "rejected")
    let (get_reason : 'tags this -> any) =
      fun (x8364 : 'tags this) ->
        any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x8364) "reason")
    let (set_reason : 'tags this -> any -> unit) =
      fun (x8366 : 'tags this) ->
        fun (x8367 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8366) "reason"
            (any_to_js x8367)
    let cast_from = Obj.magic
  end
module PromiseFulfilledResult =
  struct
    type 'T t = [ `PromiseFulfilledResult of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x8371 : Ojs.t) -> t_of_js __T_of_js x8371
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x8369 : __T t) -> t_to_js __T_to_js x8369
    type 'T tags = [ `PromiseFulfilledResult of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `PromiseFulfilledResult of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x8375 : Ojs.t) -> intf_of_js __tags_of_js x8375
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x8373 : __tags intf) -> intf_to_js __tags_to_js x8373
    let (get_status : ('tags, 'T) this -> [ `L_s42_fulfilled ]) =
      fun (x8377 : ('tags, 'T) this) ->
        let x8380 =
          Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x8377) "status" in
        match Ojs.string_of_js x8380 with
        | "fulfilled" -> `L_s42_fulfilled
        | _ -> assert false
    let (set_status : ('tags, 'T) this -> [ `L_s42_fulfilled ] -> unit) =
      fun (x8381 : ('tags, 'T) this) ->
        fun (x8382 : [ `L_s42_fulfilled ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x8381) "status"
            (match x8382 with
             | `L_s42_fulfilled -> Ojs.string_to_js "fulfilled")
    let (get_value : ('tags, 'T) this -> 'T) =
      fun (x8385 : ('tags, 'T) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x8385) "value")
    let (set_value : ('tags, 'T) this -> 'T -> unit) =
      fun (x8388 : ('tags, 'T) this) ->
        fun (x8389 : 'T) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x8388) "value"
            (Obj.magic x8389)
    let cast_from = Obj.magic
  end
module PromiseSettledResult =
  struct
    type 'T t =
      [ `U_s42_fulfilled of 'T PromiseFulfilledResult.t 
      | `U_s83_rejected of PromiseRejectedResult.t ]
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x8396 : Ojs.t) ->
          let x8397 = x8396 in
          match Ojs.string_of_js (Ojs.get_prop_ascii x8397 "status") with
          | "fulfilled" ->
              `U_s42_fulfilled
                (PromiseFulfilledResult.t_of_js __T_of_js x8397)
          | "rejected" ->
              `U_s83_rejected (PromiseRejectedResult.t_of_js x8397)
          | _ -> assert false
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun
          (x8392 :
            [ `U_s42_fulfilled of __T PromiseFulfilledResult.t 
            | `U_s83_rejected of PromiseRejectedResult.t ])
          ->
          match x8392 with
          | `U_s42_fulfilled x8393 ->
              PromiseFulfilledResult.t_to_js __T_to_js x8393
          | `U_s83_rejected x8395 -> PromiseRejectedResult.t_to_js x8395
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x8401 : Ojs.t) -> t_of_js __T_of_js x8401
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x8399 : __T t) -> t_to_js __T_to_js x8399
  end
module Awaited =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x8404 : Ojs.t) -> any_of_js x8404
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x8403 : any) -> any_to_js x8403
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x8407 : Ojs.t) -> t_of_js __T_of_js x8407
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x8405 : __T t) -> t_to_js __T_to_js x8405
  end
module Promise =
  struct
    type 'T t = [ `Promise of 'T  | 'T PromiseLike.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x8411 : Ojs.t) -> t_of_js __T_of_js x8411
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x8409 : __T t) -> t_to_js __T_to_js x8409
    type 'T tags = [ `Promise of 'T  | 'T PromiseLike.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `Promise of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x8415 : Ojs.t) -> intf_of_js __tags_of_js x8415
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x8413 : __tags intf) -> intf_to_js __tags_to_js x8413
    let (finally :
      ('tags, 'T) this ->
        ?onfinally:(unit -> unit) or_null_or_undefined -> unit -> 'T t)
      =
      fun (x8421 : ('tags, 'T) this) ->
        fun ?onfinally:(x8417 : (unit -> unit) or_null_or_undefined option)
          ->
          fun () ->
            t_of_js Obj.magic
              (let x8424 = this_to_js Obj.magic Obj.magic x8421 in
               Ojs.call (Ojs.get_prop_ascii x8424 "finally") "apply"
                 [|x8424;((let x8418 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8417 with
                            | Some x8419 ->
                                ignore
                                  (Ojs.call x8418 "push"
                                     [|(or_null_or_undefined_to_js
                                          (fun (x8420 : unit -> unit) ->
                                             Ojs.fun_to_js 1
                                               (fun _ -> x8420 ())) x8419)|])
                            | None -> ());
                           x8418))|])
    let (then_ :
      ('tags, 'T) this ->
        ?onfulfilled:('T -> ('TResult1, 'TResult1 PromiseLike.t) union2)
          or_null_or_undefined ->
          ?onrejected:(any -> ('TResult2, 'TResult2 PromiseLike.t) union2)
            or_null_or_undefined -> unit -> ('TResult1, 'TResult2) union2 t)
      =
      fun (x8441 : ('tags, 'T) this) ->
        fun
          ?onfulfilled:(x8426 :
                         ('T -> ('TResult1, 'TResult1 PromiseLike.t) union2)
                           or_null_or_undefined option)
          ->
          fun
            ?onrejected:(x8427 :
                          (any -> ('TResult2, 'TResult2 PromiseLike.t) union2)
                            or_null_or_undefined option)
            ->
            fun () ->
              t_of_js
                (fun (x8445 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x8445)
                (let x8444 = this_to_js Obj.magic Obj.magic x8441 in
                 Ojs.call (Ojs.get_prop_ascii x8444 "then") "apply"
                   [|x8444;((let x8428 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8426 with
                              | Some x8435 ->
                                  ignore
                                    (Ojs.call x8428 "push"
                                       [|(or_null_or_undefined_to_js
                                            (fun
                                               (x8436 :
                                                 'T ->
                                                   ('TResult1,
                                                     'TResult1 PromiseLike.t)
                                                     union2)
                                               ->
                                               Ojs.fun_to_js 1
                                                 (fun (x8437 : Ojs.t) ->
                                                    union2_to_js Obj.magic
                                                      (fun
                                                         (x8439 :
                                                           'TResult1
                                                             PromiseLike.t)
                                                         ->
                                                         PromiseLike.t_to_js
                                                           Obj.magic x8439)
                                                      (x8436
                                                         (Obj.magic x8437))))
                                            x8435)|])
                              | None -> ());
                             (match x8427 with
                              | Some x8429 ->
                                  ignore
                                    (Ojs.call x8428 "push"
                                       [|(or_null_or_undefined_to_js
                                            (fun
                                               (x8430 :
                                                 any ->
                                                   ('TResult2,
                                                     'TResult2 PromiseLike.t)
                                                     union2)
                                               ->
                                               Ojs.fun_to_js 1
                                                 (fun (x8431 : Ojs.t) ->
                                                    union2_to_js Obj.magic
                                                      (fun
                                                         (x8433 :
                                                           'TResult2
                                                             PromiseLike.t)
                                                         ->
                                                         PromiseLike.t_to_js
                                                           Obj.magic x8433)
                                                      (x8430
                                                         (any_of_js x8431))))
                                            x8429)|])
                              | None -> ());
                             x8428))|])
    let (catch :
      ('tags, 'T) this ->
        ?onrejected:(any -> ('TResult, 'TResult PromiseLike.t) union2)
          or_null_or_undefined -> unit -> ('T, 'TResult) union2 t)
      =
      fun (x8456 : ('tags, 'T) this) ->
        fun
          ?onrejected:(x8448 :
                        (any -> ('TResult, 'TResult PromiseLike.t) union2)
                          or_null_or_undefined option)
          ->
          fun () ->
            t_of_js
              (fun (x8460 : Ojs.t) -> union2_of_js Obj.magic Obj.magic x8460)
              (let x8459 = this_to_js Obj.magic Obj.magic x8456 in
               Ojs.call (Ojs.get_prop_ascii x8459 "catch") "apply"
                 [|x8459;((let x8449 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8448 with
                            | Some x8450 ->
                                ignore
                                  (Ojs.call x8449 "push"
                                     [|(or_null_or_undefined_to_js
                                          (fun
                                             (x8451 :
                                               any ->
                                                 ('TResult,
                                                   'TResult PromiseLike.t)
                                                   union2)
                                             ->
                                             Ojs.fun_to_js 1
                                               (fun (x8452 : Ojs.t) ->
                                                  union2_to_js Obj.magic
                                                    (fun
                                                       (x8454 :
                                                         'TResult
                                                           PromiseLike.t)
                                                       ->
                                                       PromiseLike.t_to_js
                                                         Obj.magic x8454)
                                                    (x8451 (any_of_js x8452))))
                                          x8450)|])
                            | None -> ());
                           x8449))|])
    let (any :
      (('T, 'T PromiseLike.t) union2 Iterable.t,
        ('T, 'T PromiseLike.t) union2) or_array -> 'T t)
      =
      fun
        (x8463 :
          (('T, 'T PromiseLike.t) union2 Iterable.t,
            ('T, 'T PromiseLike.t) union2) or_array)
        ->
        t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(or_array_to_js
                  (fun (x8464 : ('T, 'T PromiseLike.t) union2 Iterable.t) ->
                     Iterable.t_to_js
                       (fun (x8465 : ('T, 'T PromiseLike.t) union2) ->
                          union2_to_js Obj.magic
                            (fun (x8467 : 'T PromiseLike.t) ->
                               PromiseLike.t_to_js Obj.magic x8467) x8465)
                       x8464)
                  (fun (x8469 : ('T, 'T PromiseLike.t) union2) ->
                     union2_to_js Obj.magic
                       (fun (x8471 : 'T PromiseLike.t) ->
                          PromiseLike.t_to_js Obj.magic x8471) x8469) x8463)|])
    let (any' : 'T -> any Awaited.t t) =
      fun (x8474 : 'T) ->
        t_of_js (fun (x8475 : Ojs.t) -> Awaited.t_of_js any_of_js x8475)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(Obj.magic x8474)|])
    let (any'' : ('T, 'T PromiseLike.t) union2 Iterable.t -> 'T Awaited.t t)
      =
      fun (x8477 : ('T, 'T PromiseLike.t) union2 Iterable.t) ->
        t_of_js (fun (x8482 : Ojs.t) -> Awaited.t_of_js Obj.magic x8482)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(Iterable.t_to_js
                  (fun (x8478 : ('T, 'T PromiseLike.t) union2) ->
                     union2_to_js Obj.magic
                       (fun (x8480 : 'T PromiseLike.t) ->
                          PromiseLike.t_to_js Obj.magic x8480) x8478) x8477)|])
    let (allSettled : 'T -> any t) =
      fun (x8484 : 'T) ->
        t_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(Obj.magic x8484)|])
    let (allSettled' :
      ('T, 'T PromiseLike.t) union2 Iterable.t ->
        'T Awaited.t PromiseSettledResult.t list t)
      =
      fun (x8486 : ('T, 'T PromiseLike.t) union2 Iterable.t) ->
        t_of_js
          (fun (x8491 : Ojs.t) ->
             Ojs.list_of_js
               (fun (x8492 : Ojs.t) ->
                  PromiseSettledResult.t_of_js
                    (fun (x8493 : Ojs.t) -> Awaited.t_of_js Obj.magic x8493)
                    x8492) x8491)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(Iterable.t_to_js
                  (fun (x8487 : ('T, 'T PromiseLike.t) union2) ->
                     union2_to_js Obj.magic
                       (fun (x8489 : 'T PromiseLike.t) ->
                          PromiseLike.t_to_js Obj.magic x8489) x8487) x8486)|])
    let (prototype : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Promise")
             "prototype")
    let (create :
      (resolve:(('T, 'T PromiseLike.t) union2 -> unit) ->
         reject:(?reason:any -> unit -> unit) -> unit)
        -> 'T t)
      =
      fun
        (x8496 :
          resolve:(('T, 'T PromiseLike.t) union2 -> unit) ->
            reject:(?reason:any -> unit -> unit) -> unit)
        ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Promise")
             [|(Ojs.fun_to_js 2
                  (fun (x8497 : Ojs.t) ->
                     fun (x8502 : Ojs.t) ->
                       x8496
                         ~resolve:(fun
                                     (x8498 : ('T, 'T PromiseLike.t) union2)
                                     ->
                                     ignore
                                       (Ojs.apply x8497
                                          [|(union2_to_js Obj.magic
                                               (fun
                                                  (x8500 : 'T PromiseLike.t)
                                                  ->
                                                  PromiseLike.t_to_js
                                                    Obj.magic x8500) x8498)|]))
                         ~reject:(fun ?reason:(x8503 : any option) ->
                                    fun () ->
                                      ignore
                                        (Ojs.call x8502 "apply"
                                           [|Ojs.null;((let x8504 =
                                                          Ojs.new_obj
                                                            (Ojs.get_prop_ascii
                                                               Ojs.global
                                                               "Array") 
                                                            [||] in
                                                        (match x8503 with
                                                         | Some x8505 ->
                                                             ignore
                                                               (Ojs.call
                                                                  x8504
                                                                  "push"
                                                                  [|(
                                                                    any_to_js
                                                                    x8505)|])
                                                         | None -> ());
                                                        x8504))|]))))|])
    let (all : 'T -> any t) =
      fun (x8507 : 'T) ->
        t_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(Obj.magic x8507)|])
    let (race : 'T -> any Awaited.t t) =
      fun (x8509 : 'T) ->
        t_of_js (fun (x8510 : Ojs.t) -> Awaited.t_of_js any_of_js x8510)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(Obj.magic x8509)|])
    let (reject : ?reason:any -> unit -> 'T t) =
      fun ?reason:(x8512 : any option) ->
        fun () ->
          t_of_js Obj.magic
            (let x8515 = Ojs.get_prop_ascii Ojs.global "Promise" in
             Ojs.call (Ojs.get_prop_ascii x8515 "reject") "apply"
               [|x8515;((let x8513 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         (match x8512 with
                          | Some x8514 ->
                              ignore
                                (Ojs.call x8513 "push" [|(any_to_js x8514)|])
                          | None -> ());
                         x8513))|])
    let (resolve : unit -> unit t) =
      fun () ->
        t_of_js Ojs.unit_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve" [||])
    let (resolve' : ('T, 'T PromiseLike.t) union2 -> 'T t) =
      fun (x8518 : ('T, 'T PromiseLike.t) union2) ->
        t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve"
             [|(union2_to_js Obj.magic
                  (fun (x8520 : 'T PromiseLike.t) ->
                     PromiseLike.t_to_js Obj.magic x8520) x8518)|])
    let (all' :
      ('T, 'T PromiseLike.t) union2 Iterable.t -> 'T Awaited.t list t) =
      fun (x8523 : ('T, 'T PromiseLike.t) union2 Iterable.t) ->
        t_of_js
          (fun (x8528 : Ojs.t) ->
             Ojs.list_of_js
               (fun (x8529 : Ojs.t) -> Awaited.t_of_js Obj.magic x8529) x8528)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(Iterable.t_to_js
                  (fun (x8524 : ('T, 'T PromiseLike.t) union2) ->
                     union2_to_js Obj.magic
                       (fun (x8526 : 'T PromiseLike.t) ->
                          PromiseLike.t_to_js Obj.magic x8526) x8524) x8523)|])
    let (race' : ('T, 'T PromiseLike.t) union2 Iterable.t -> 'T Awaited.t t)
      =
      fun (x8531 : ('T, 'T PromiseLike.t) union2 Iterable.t) ->
        t_of_js (fun (x8536 : Ojs.t) -> Awaited.t_of_js Obj.magic x8536)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(Iterable.t_to_js
                  (fun (x8532 : ('T, 'T PromiseLike.t) union2) ->
                     union2_to_js Obj.magic
                       (fun (x8534 : 'T PromiseLike.t) ->
                          PromiseLike.t_to_js Obj.magic x8534) x8532) x8531)|])
    let cast_from = Obj.magic
  end
module AsyncIterator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `AsyncIterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn, 'TNext) t_3 = ('T, 'TReturn, 'TNext) t
    let rec t_3_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t_3
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (__TNext_of_js : Ojs.t -> __TNext) ->
            fun (x8542 : Ojs.t) ->
              t_of_js __T_of_js __TReturn_of_js __TNext_of_js x8542
    and t_3_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t_3 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (__TNext_to_js : __TNext -> Ojs.t) ->
            fun (x8538 : (__T, __TReturn, __TNext) t) ->
              t_to_js __T_to_js __TReturn_to_js __TNext_to_js x8538
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, never or_undefined) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x8551 : Ojs.t) ->
            t_of_js __T_of_js __TReturn_of_js
              (fun (x8554 : Ojs.t) -> or_undefined_of_js never_of_js x8554)
              x8551
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x8546 : (__T, __TReturn, never or_undefined) t) ->
            t_to_js __T_to_js __TReturn_to_js
              (fun (x8549 : never or_undefined) ->
                 or_undefined_to_js never_to_js x8549) x8546
    type 'T t_1 = ('T, any, never or_undefined) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x8561 : Ojs.t) ->
          t_of_js __T_of_js any_of_js
            (fun (x8564 : Ojs.t) -> or_undefined_of_js never_of_js x8564)
            x8561
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x8556 : (__T, any, never or_undefined) t) ->
          t_to_js __T_to_js any_to_js
            (fun (x8559 : never or_undefined) ->
               or_undefined_to_js never_to_js x8559) x8556
    type ('T, 'TReturn, 'TNext) tags =
      [ `AsyncIterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn, 'TNext) tags_3 = ('T, 'TReturn, 'TNext) tags
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, never or_undefined) tags
    type 'T tags_1 = ('T, any, never or_undefined) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `AsyncIterator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
            fun (__TNext_of_js : Ojs.t -> __TNext) ->
              fun (x8568 : Ojs.t) -> intf_of_js __tags_of_js x8568
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
            fun (__TNext_to_js : __TNext -> Ojs.t) ->
              fun (x8566 : __tags intf) -> intf_to_js __tags_to_js x8566
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x8573 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x8570 : any list) ->
          Promise.t_of_js
            (fun (x8579 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x8579)
            (let x8578 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x8573 in
             Ojs.call (Ojs.get_prop_ascii x8578 "next") "apply"
               [|x8578;((let x8571 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x8572 : any) ->
                              ignore
                                (Ojs.call x8571 "push" [|(any_to_js x8572)|]))
                           x8570;
                         x8571))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?value:('TReturn, 'TReturn PromiseLike.t) union2 ->
          unit -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x8588 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?value:(x8582 : ('TReturn, 'TReturn PromiseLike.t) union2 option)
          ->
          fun () ->
            Promise.t_of_js
              (fun (x8594 : Ojs.t) ->
                 IteratorResult.t_of_js Obj.magic Obj.magic x8594)
              (let x8593 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x8588 in
               Ojs.call (Ojs.get_prop_ascii x8593 "return") "apply"
                 [|x8593;((let x8583 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8582 with
                            | Some x8584 ->
                                ignore
                                  (Ojs.call x8583 "push"
                                     [|(union2_to_js Obj.magic
                                          (fun
                                             (x8586 : 'TReturn PromiseLike.t)
                                             ->
                                             PromiseLike.t_to_js Obj.magic
                                               x8586) x8584)|])
                            | None -> ());
                           x8583))|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?e:any -> unit -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x8600 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?e:(x8597 : any option) ->
          fun () ->
            Promise.t_of_js
              (fun (x8606 : Ojs.t) ->
                 IteratorResult.t_of_js Obj.magic Obj.magic x8606)
              (let x8605 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x8600 in
               Ojs.call (Ojs.get_prop_ascii x8605 "throw") "apply"
                 [|x8605;((let x8598 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8597 with
                            | Some x8599 ->
                                ignore
                                  (Ojs.call x8598 "push"
                                     [|(any_to_js x8599)|])
                            | None -> ());
                           x8598))|])
    let cast_from = Obj.magic
  end
module AsyncIterableIterator =
  struct
    type 'T t =
      [ `AsyncIterableIterator of 'T 
      | `AsyncIterator of ('T * any * never or_undefined) ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x8611 : Ojs.t) -> t_of_js __T_of_js x8611
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x8609 : __T t) -> t_to_js __T_to_js x8609
    type 'T tags =
      [ `AsyncIterableIterator of 'T 
      | `AsyncIterator of ('T * any * never or_undefined) ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `AsyncIterableIterator of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x8615 : Ojs.t) -> intf_of_js __tags_of_js x8615
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x8613 : __tags intf) -> intf_to_js __tags_to_js x8613
    let cast_from = Obj.magic
  end
module AsyncIterable =
  struct
    type 'T t = [ `AsyncIterable of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x8619 : Ojs.t) -> t_of_js __T_of_js x8619
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x8617 : __T t) -> t_to_js __T_to_js x8617
    type 'T tags = [ `AsyncIterable of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `AsyncIterable of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x8623 : Ojs.t) -> intf_of_js __tags_of_js x8623
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x8621 : __tags intf) -> intf_to_js __tags_to_js x8621
    let cast_from = Obj.magic
  end
module AsyncGenerator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `AsyncGenerator of ('T * 'TReturn * 'TNext) 
      | `AsyncIterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn, 'TNext) t_3 = ('T, 'TReturn, 'TNext) t
    let rec t_3_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t_3
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (__TNext_of_js : Ojs.t -> __TNext) ->
            fun (x8629 : Ojs.t) ->
              t_of_js __T_of_js __TReturn_of_js __TNext_of_js x8629
    and t_3_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t_3 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (__TNext_to_js : __TNext -> Ojs.t) ->
            fun (x8625 : (__T, __TReturn, __TNext) t) ->
              t_to_js __T_to_js __TReturn_to_js __TNext_to_js x8625
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, unknown) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x8637 : Ojs.t) ->
            t_of_js __T_of_js __TReturn_of_js unknown_of_js x8637
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x8633 : (__T, __TReturn, unknown) t) ->
            t_to_js __T_to_js __TReturn_to_js unknown_to_js x8633
    type 'T t_1 = ('T, any, unknown) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x8645 : Ojs.t) ->
          t_of_js __T_of_js any_of_js unknown_of_js x8645
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x8641 : (__T, any, unknown) t) ->
          t_to_js __T_to_js any_to_js unknown_to_js x8641
    type t_0 = (unknown, any, unknown) t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x8653 : Ojs.t) ->
        t_of_js unknown_of_js any_of_js unknown_of_js x8653
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x8649 : (unknown, any, unknown) t) ->
        t_to_js unknown_to_js any_to_js unknown_to_js x8649
    type ('T, 'TReturn, 'TNext) tags =
      [ `AsyncGenerator of ('T * 'TReturn * 'TNext) 
      | `AsyncIterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn, 'TNext) tags_3 = ('T, 'TReturn, 'TNext) tags
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, unknown) tags
    type 'T tags_1 = ('T, any, unknown) tags
    type tags_0 = (unknown, any, unknown) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `AsyncGenerator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
            fun (__TNext_of_js : Ojs.t -> __TNext) ->
              fun (x8659 : Ojs.t) -> intf_of_js __tags_of_js x8659
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
            fun (__TNext_to_js : __TNext -> Ojs.t) ->
              fun (x8657 : __tags intf) -> intf_to_js __tags_to_js x8657
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x8664 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x8661 : any list) ->
          Promise.t_of_js
            (fun (x8670 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x8670)
            (let x8669 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x8664 in
             Ojs.call (Ojs.get_prop_ascii x8669 "next") "apply"
               [|x8669;((let x8662 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x8663 : any) ->
                              ignore
                                (Ojs.call x8662 "push" [|(any_to_js x8663)|]))
                           x8661;
                         x8662))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        value:('TReturn, 'TReturn PromiseLike.t) union2 ->
          ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x8677 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~value:(x8673 : ('TReturn, 'TReturn PromiseLike.t) union2) ->
          Promise.t_of_js
            (fun (x8682 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x8682)
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x8677)
               "return"
               [|(union2_to_js Obj.magic
                    (fun (x8675 : 'TReturn PromiseLike.t) ->
                       PromiseLike.t_to_js Obj.magic x8675) x8673)|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        e:any -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x8686 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~e:(x8685 : any) ->
          Promise.t_of_js
            (fun (x8691 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x8691)
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x8686)
               "throw" [|(any_to_js x8685)|])
    let cast_from = Obj.magic
  end
module AsyncGeneratorFunction =
  struct
    type t = [ `AsyncGeneratorFunction ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8695 : Ojs.t) -> t_of_js x8695
    and t_0_to_js : t_0 -> Ojs.t = fun (x8694 : t) -> t_to_js x8694
    type tags = [ `AsyncGeneratorFunction ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `AsyncGeneratorFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8698 : Ojs.t) -> intf_of_js __tags_of_js x8698
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8696 : __tags intf) -> intf_to_js __tags_to_js x8696
    let (create : 'tags this -> args:any list -> AsyncGenerator.t_0) =
      fun (x8703 : 'tags this) ->
        fun ~args:(x8700 : any list) ->
          AsyncGenerator.t_0_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x8703)
               (let x8701 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x8702 : any) ->
                     ignore (Ojs.call x8701 "push" [|(any_to_js x8702)|]))
                  x8700;
                x8701))
    let (apply : 'tags this -> args:any list -> AsyncGenerator.t_0) =
      fun (x8708 : 'tags this) ->
        fun ~args:(x8705 : any list) ->
          AsyncGenerator.t_0_of_js
            (Ojs.call (this_to_js Obj.magic x8708) "apply"
               [|Ojs.null;((let x8706 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x8707 : any) ->
                                 ignore
                                   (Ojs.call x8706 "push"
                                      [|(any_to_js x8707)|])) x8705;
                            x8706))|])
    let (get_length : 'tags this -> float) =
      fun (x8710 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8710) "length")
    let (get_name : 'tags this -> string) =
      fun (x8712 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8712) "name")
    let (get_prototype : 'tags this -> AsyncGenerator.t_0) =
      fun (x8714 : 'tags this) ->
        AsyncGenerator.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8714) "prototype")
    let cast_from = Obj.magic
  end
module AsyncGeneratorFunctionConstructor =
  struct
    type t = [ `AsyncGeneratorFunctionConstructor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8717 : Ojs.t) -> t_of_js x8717
    and t_0_to_js : t_0 -> Ojs.t = fun (x8716 : t) -> t_to_js x8716
    type tags = [ `AsyncGeneratorFunctionConstructor ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `AsyncGeneratorFunctionConstructor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8720 : Ojs.t) -> intf_of_js __tags_of_js x8720
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8718 : __tags intf) -> intf_to_js __tags_to_js x8718
    let (create : 'tags this -> args:string list -> AsyncGeneratorFunction.t)
      =
      fun (x8725 : 'tags this) ->
        fun ~args:(x8722 : string list) ->
          AsyncGeneratorFunction.t_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x8725)
               (let x8723 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x8724 : string) ->
                     ignore
                       (Ojs.call x8723 "push" [|(Ojs.string_to_js x8724)|]))
                  x8722;
                x8723))
    let (apply : 'tags this -> args:string list -> AsyncGeneratorFunction.t)
      =
      fun (x8730 : 'tags this) ->
        fun ~args:(x8727 : string list) ->
          AsyncGeneratorFunction.t_of_js
            (Ojs.call (this_to_js Obj.magic x8730) "apply"
               [|Ojs.null;((let x8728 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x8729 : string) ->
                                 ignore
                                   (Ojs.call x8728 "push"
                                      [|(Ojs.string_to_js x8729)|])) x8727;
                            x8728))|])
    let (get_length : 'tags this -> float) =
      fun (x8732 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8732) "length")
    let (get_name : 'tags this -> string) =
      fun (x8734 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8734) "name")
    let (get_prototype : 'tags this -> AsyncGeneratorFunction.t) =
      fun (x8736 : 'tags this) ->
        AsyncGeneratorFunction.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8736) "prototype")
    let cast_from = Obj.magic
  end
module ArrayBufferView =
  struct
    type t = [ `ArrayBufferView ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8739 : Ojs.t) -> t_of_js x8739
    and t_0_to_js : t_0 -> Ojs.t = fun (x8738 : t) -> t_to_js x8738
    type tags = [ `ArrayBufferView ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ArrayBufferView ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8742 : Ojs.t) -> intf_of_js __tags_of_js x8742
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8740 : __tags intf) -> intf_to_js __tags_to_js x8740
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x8744 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8744) "buffer")
    let (set_buffer : 'tags this -> ArrayBufferLike.t -> unit) =
      fun (x8746 : 'tags this) ->
        fun (x8747 : ArrayBufferLike.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8746) "buffer"
            (ArrayBufferLike.t_to_js x8747)
    let (get_byteLength : 'tags this -> float) =
      fun (x8749 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8749) "byteLength")
    let (set_byteLength : 'tags this -> float -> unit) =
      fun (x8751 : 'tags this) ->
        fun (x8752 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8751) "byteLength"
            (Ojs.float_to_js x8752)
    let (get_byteOffset : 'tags this -> float) =
      fun (x8754 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8754) "byteOffset")
    let (set_byteOffset : 'tags this -> float -> unit) =
      fun (x8756 : 'tags this) ->
        fun (x8757 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8756) "byteOffset"
            (Ojs.float_to_js x8757)
    let cast_from = Obj.magic
  end
module ArrayBufferTypes =
  struct
    type t = [ `ArrayBufferTypes ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8760 : Ojs.t) -> t_of_js x8760
    and t_0_to_js : t_0 -> Ojs.t = fun (x8759 : t) -> t_to_js x8759
    type tags = [ `ArrayBufferTypes ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ArrayBufferTypes ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8763 : Ojs.t) -> intf_of_js __tags_of_js x8763
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8761 : __tags intf) -> intf_to_js __tags_to_js x8761
    let (get_SharedArrayBuffer : 'tags this -> SharedArrayBuffer.t) =
      fun (x8765 : 'tags this) ->
        SharedArrayBuffer.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8765)
             "SharedArrayBuffer")
    let (set_SharedArrayBuffer : 'tags this -> SharedArrayBuffer.t -> unit) =
      fun (x8767 : 'tags this) ->
        fun (x8768 : SharedArrayBuffer.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8767) "SharedArrayBuffer"
            (SharedArrayBuffer.t_to_js x8768)
    let (get_ArrayBuffer : 'tags this -> ArrayBuffer.t) =
      fun (x8770 : 'tags this) ->
        ArrayBuffer.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8770) "ArrayBuffer")
    let (set_ArrayBuffer : 'tags this -> ArrayBuffer.t -> unit) =
      fun (x8772 : 'tags this) ->
        fun (x8773 : ArrayBuffer.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8772) "ArrayBuffer"
            (ArrayBuffer.t_to_js x8773)
    let cast_from = Obj.magic
  end
module AggregateError =
  struct
    type t = [ `AggregateError  | `Error ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8776 : Ojs.t) -> t_of_js x8776
    and t_0_to_js : t_0 -> Ojs.t = fun (x8775 : t) -> t_to_js x8775
    type tags = [ `AggregateError  | `Error ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `AggregateError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8779 : Ojs.t) -> intf_of_js __tags_of_js x8779
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8777 : __tags intf) -> intf_to_js __tags_to_js x8777
    let (get_errors : 'tags this -> any list) =
      fun (x8781 : 'tags this) ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8781) "errors")
    let (set_errors : 'tags this -> any list -> unit) =
      fun (x8784 : 'tags this) ->
        fun (x8785 : any list) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8784) "errors"
            (Ojs.list_to_js any_to_js x8785)
    let (get_errors' : 'tags this -> any list) =
      fun (x8788 : 'tags this) ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8788) "errors")
    let (set_errors' : 'tags this -> any list -> unit) =
      fun (x8791 : 'tags this) ->
        fun (x8792 : any list) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8791) "errors"
            (Ojs.list_to_js any_to_js x8792)
    let (create : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x8795 : any Iterable.t) ->
        fun ?message:(x8796 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 (let x8797 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x8797 "push"
                       [|(Iterable.t_to_js any_to_js x8795)|]);
                  (match x8796 with
                   | Some x8798 ->
                       ignore
                         (Ojs.call x8797 "push" [|(Ojs.string_to_js x8798)|])
                   | None -> ());
                  x8797))
    let (invoke : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x8800 : any Iterable.t) ->
        fun ?message:(x8801 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 "apply"
                 [|Ojs.null;((let x8802 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x8802 "push"
                                   [|(Iterable.t_to_js any_to_js x8800)|]);
                              (match x8801 with
                               | Some x8803 ->
                                   ignore
                                     (Ojs.call x8802 "push"
                                        [|(Ojs.string_to_js x8803)|])
                               | None -> ());
                              x8802))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "AggregateError") "prototype")
    let (create' : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x8805 : any Iterable.t) ->
        fun ?message:(x8806 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 (let x8807 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x8807 "push"
                       [|(Iterable.t_to_js any_to_js x8805)|]);
                  (match x8806 with
                   | Some x8808 ->
                       ignore
                         (Ojs.call x8807 "push" [|(Ojs.string_to_js x8808)|])
                   | None -> ());
                  x8807))
    let (invoke' : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x8810 : any Iterable.t) ->
        fun ?message:(x8811 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 "apply"
                 [|Ojs.null;((let x8812 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x8812 "push"
                                   [|(Iterable.t_to_js any_to_js x8810)|]);
                              (match x8811 with
                               | Some x8813 ->
                                   ignore
                                     (Ojs.call x8812 "push"
                                        [|(Ojs.string_to_js x8813)|])
                               | None -> ());
                              x8812))|])
    let (prototype' : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "AggregateError") "prototype")
    let cast_from = Obj.magic
  end
let (nan : unit -> float) =
  fun () -> Ojs.float_of_js (Ojs.get_prop_ascii Ojs.global "NaN")
let (infinity : unit -> float) =
  fun () -> Ojs.float_of_js (Ojs.get_prop_ascii Ojs.global "Infinity")
let (eval : string -> any) =
  fun (x8815 : string) ->
    any_of_js (Ojs.call Ojs.global "eval" [|(Ojs.string_to_js x8815)|])
let (parseInt : string:string -> ?radix:float -> unit -> float) =
  fun ~string:(x8816 : string) ->
    fun ?radix:(x8817 : float option) ->
      fun () ->
        Ojs.float_of_js
          (let x8820 = Ojs.global in
           Ojs.call (Ojs.get_prop_ascii x8820 "parseInt") "apply"
             [|x8820;((let x8818 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       ignore
                         (Ojs.call x8818 "push" [|(Ojs.string_to_js x8816)|]);
                       (match x8817 with
                        | Some x8819 ->
                            ignore
                              (Ojs.call x8818 "push"
                                 [|(Ojs.float_to_js x8819)|])
                        | None -> ());
                       x8818))|])
let (parseFloat : string -> float) =
  fun (x8821 : string) ->
    Ojs.float_of_js
      (Ojs.call Ojs.global "parseFloat" [|(Ojs.string_to_js x8821)|])
let (isNaN : float -> bool) =
  fun (x8822 : float) ->
    Ojs.bool_of_js (Ojs.call Ojs.global "isNaN" [|(Ojs.float_to_js x8822)|])
let (isFinite : float -> bool) =
  fun (x8823 : float) ->
    Ojs.bool_of_js
      (Ojs.call Ojs.global "isFinite" [|(Ojs.float_to_js x8823)|])
let (decodeURI : string -> string) =
  fun (x8824 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "decodeURI" [|(Ojs.string_to_js x8824)|])
let (decodeURIComponent : string -> string) =
  fun (x8825 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "decodeURIComponent" [|(Ojs.string_to_js x8825)|])
let (encodeURI : string -> string) =
  fun (x8826 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "encodeURI" [|(Ojs.string_to_js x8826)|])
let (encodeURIComponent : bool or_string or_number -> string) =
  fun (x8827 : bool or_string or_number) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "encodeURIComponent"
         [|(or_number_to_js
              (fun (x8828 : bool or_string) ->
                 or_string_to_js Ojs.bool_to_js x8828) x8827)|])
let (escape : string -> string) =
  fun (x8830 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "escape" [|(Ojs.string_to_js x8830)|])
let (unescape : string -> string) =
  fun (x8831 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "unescape" [|(Ojs.string_to_js x8831)|])
let (proxy : unit -> ProxyConstructor.t) =
  fun () -> ProxyConstructor.t_of_js (Ojs.get_prop_ascii Ojs.global "Proxy")
