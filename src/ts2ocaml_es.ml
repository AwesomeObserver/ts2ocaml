[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Ts2ocaml_min
module IteratorYieldResult =
  struct
    type 'TYield t = [ `IteratorYieldResult of 'TYield ] intf
    let rec t_of_js : 'TYield . (Ojs.t -> 'TYield) -> Ojs.t -> 'TYield t =
      fun _TYield -> Obj.magic
    and t_to_js : 'TYield . ('TYield -> Ojs.t) -> 'TYield t -> Ojs.t =
      fun _TYield -> Obj.magic
    type 'TYield t_1 = 'TYield t
    let rec t_1_of_js : 'TYield . (Ojs.t -> 'TYield) -> Ojs.t -> 'TYield t_1
      = fun (type __TYield) ->
      fun (__TYield_of_js : Ojs.t -> __TYield) ->
        fun (x3 : Ojs.t) -> t_of_js __TYield_of_js x3
    and t_1_to_js : 'TYield . ('TYield -> Ojs.t) -> 'TYield t_1 -> Ojs.t =
      fun (type __TYield) ->
      fun (__TYield_to_js : __TYield -> Ojs.t) ->
        fun (x1 : __TYield t) -> t_to_js __TYield_to_js x1
    type 'TYield tags = [ `IteratorYieldResult of 'TYield ]
    type 'TYield tags_1 = 'TYield tags
    type ('tags, 'TYield) this =
      'tags intf constraint 'tags = [> `IteratorYieldResult of 'TYield ]
    let rec this_of_js :
      'tags 'TYield .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'TYield) -> Ojs.t -> ('tags, 'TYield) this
      = fun (type __tags) -> fun (type __TYield) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__TYield_of_js : Ojs.t -> __TYield) ->
          fun (x7 : Ojs.t) -> intf_of_js __tags_of_js x7
    and this_to_js :
      'tags 'TYield .
        ('tags -> Ojs.t) ->
          ('TYield -> Ojs.t) -> ('tags, 'TYield) this -> Ojs.t
      = fun (type __tags) -> fun (type __TYield) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__TYield_to_js : __TYield -> Ojs.t) ->
          fun (x5 : __tags intf) -> intf_to_js __tags_to_js x5
    let (get_done : ('tags, 'TYield) this -> [ `L_b_false ]) =
      fun (x9 : ('tags, 'TYield) this) ->
        let x12 =
          Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x9) "done" in
        match Ojs.bool_of_js x12 with
        | false -> `L_b_false
        | _ -> assert false
    let (set_done : ('tags, 'TYield) this -> [ `L_b_false ] -> unit) =
      fun (x13 : ('tags, 'TYield) this) ->
        fun (x14 : [ `L_b_false ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x13) "done"
            (match x14 with | `L_b_false -> Ojs.bool_to_js false)
    let (get_value : ('tags, 'TYield) this -> 'TYield) =
      fun (x17 : ('tags, 'TYield) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x17) "value")
    let (set_value : ('tags, 'TYield) this -> 'TYield -> unit) =
      fun (x20 : ('tags, 'TYield) this) ->
        fun (x21 : 'TYield) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x20) "value"
            (Obj.magic x21)
    let (create : done_:[ `L_b_false ] -> value:'TYield -> unit -> 'TYield t)
      =
      fun ~done_:(x24 : [ `L_b_false ]) ->
        fun ~value:(x25 : 'TYield) ->
          fun () ->
            let x26 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x26 "done"
              (match x24 with | `L_b_false -> Ojs.bool_to_js false);
            Ojs.set_prop_ascii x26 "value" (Obj.magic x25);
            t_of_js Obj.magic x26
    let cast_from = Obj.magic
  end
module IteratorReturnResult =
  struct
    type 'TReturn t = [ `IteratorReturnResult of 'TReturn ] intf
    let rec t_of_js : 'TReturn . (Ojs.t -> 'TReturn) -> Ojs.t -> 'TReturn t =
      fun _TReturn -> Obj.magic
    and t_to_js : 'TReturn . ('TReturn -> Ojs.t) -> 'TReturn t -> Ojs.t =
      fun _TReturn -> Obj.magic
    type 'TReturn t_1 = 'TReturn t
    let rec t_1_of_js :
      'TReturn . (Ojs.t -> 'TReturn) -> Ojs.t -> 'TReturn t_1 = fun (type
      __TReturn) ->
      fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
        fun (x30 : Ojs.t) -> t_of_js __TReturn_of_js x30
    and t_1_to_js : 'TReturn . ('TReturn -> Ojs.t) -> 'TReturn t_1 -> Ojs.t =
      fun (type __TReturn) ->
      fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
        fun (x28 : __TReturn t) -> t_to_js __TReturn_to_js x28
    type 'TReturn tags = [ `IteratorReturnResult of 'TReturn ]
    type 'TReturn tags_1 = 'TReturn tags
    type ('tags, 'TReturn) this =
      'tags intf constraint 'tags = [> `IteratorReturnResult of 'TReturn ]
    let rec this_of_js :
      'tags 'TReturn .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'TReturn) -> Ojs.t -> ('tags, 'TReturn) this
      = fun (type __tags) -> fun (type __TReturn) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x34 : Ojs.t) -> intf_of_js __tags_of_js x34
    and this_to_js :
      'tags 'TReturn .
        ('tags -> Ojs.t) ->
          ('TReturn -> Ojs.t) -> ('tags, 'TReturn) this -> Ojs.t
      = fun (type __tags) -> fun (type __TReturn) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x32 : __tags intf) -> intf_to_js __tags_to_js x32
    let (get_done : ('tags, 'TReturn) this -> [ `L_b_true ]) =
      fun (x36 : ('tags, 'TReturn) this) ->
        let x39 =
          Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x36) "done" in
        match Ojs.bool_of_js x39 with | true -> `L_b_true | _ -> assert false
    let (set_done : ('tags, 'TReturn) this -> [ `L_b_true ] -> unit) =
      fun (x40 : ('tags, 'TReturn) this) ->
        fun (x41 : [ `L_b_true ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x40) "done"
            (match x41 with | `L_b_true -> Ojs.bool_to_js true)
    let (get_value : ('tags, 'TReturn) this -> 'TReturn) =
      fun (x44 : ('tags, 'TReturn) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x44) "value")
    let (set_value : ('tags, 'TReturn) this -> 'TReturn -> unit) =
      fun (x47 : ('tags, 'TReturn) this) ->
        fun (x48 : 'TReturn) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x47) "value"
            (Obj.magic x48)
    let (create :
      done_:[ `L_b_true ] -> value:'TReturn -> unit -> 'TReturn t) =
      fun ~done_:(x51 : [ `L_b_true ]) ->
        fun ~value:(x52 : 'TReturn) ->
          fun () ->
            let x53 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x53 "done"
              (match x51 with | `L_b_true -> Ojs.bool_to_js true);
            Ojs.set_prop_ascii x53 "value" (Obj.magic x52);
            t_of_js Obj.magic x53
    let cast_from = Obj.magic
  end
module IteratorResult =
  struct
    type ('T, 'TReturn) t =
      [ `U_b_false of 'T IteratorYieldResult.t 
      | `U_b_true of 'TReturn IteratorReturnResult.t ]
    let rec t_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x60 : Ojs.t) ->
            let x61 = x60 in
            match Ojs.bool_of_js (Ojs.get_prop_ascii x61 "done") with
            | false -> `U_b_false (IteratorYieldResult.t_of_js __T_of_js x61)
            | true ->
                `U_b_true (IteratorReturnResult.t_of_js __TReturn_of_js x61)
    and t_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun
            (x55 :
              [ `U_b_false of __T IteratorYieldResult.t 
              | `U_b_true of __TReturn IteratorReturnResult.t ])
            ->
            match x55 with
            | `U_b_false x56 -> IteratorYieldResult.t_to_js __T_to_js x56
            | `U_b_true x58 ->
                IteratorReturnResult.t_to_js __TReturn_to_js x58
    type ('T, 'TReturn) t_2 = ('T, 'TReturn) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x67 : Ojs.t) -> t_of_js __T_of_js __TReturn_of_js x67
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x64 : (__T, __TReturn) t) ->
            t_to_js __T_to_js __TReturn_to_js x64
    type 'T t_1 = ('T, any) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x73 : Ojs.t) -> t_of_js __T_of_js any_of_js x73
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x70 : (__T, any) t) -> t_to_js __T_to_js any_to_js x70
  end
module Iterator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `Iterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn, 'TNext) t_3 = ('T, 'TReturn, 'TNext) t
    let rec t_3_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t_3
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (__TNext_of_js : Ojs.t -> __TNext) ->
            fun (x80 : Ojs.t) ->
              t_of_js __T_of_js __TReturn_of_js __TNext_of_js x80
    and t_3_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t_3 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (__TNext_to_js : __TNext -> Ojs.t) ->
            fun (x76 : (__T, __TReturn, __TNext) t) ->
              t_to_js __T_to_js __TReturn_to_js __TNext_to_js x76
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, undefined) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x88 : Ojs.t) ->
            t_of_js __T_of_js __TReturn_of_js undefined_of_js x88
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x84 : (__T, __TReturn, undefined) t) ->
            t_to_js __T_to_js __TReturn_to_js undefined_to_js x84
    type 'T t_1 = ('T, any, undefined) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x96 : Ojs.t) -> t_of_js __T_of_js any_of_js undefined_of_js x96
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x92 : (__T, any, undefined) t) ->
          t_to_js __T_to_js any_to_js undefined_to_js x92
    type ('T, 'TReturn, 'TNext) tags =
      [ `Iterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn, 'TNext) tags_3 = ('T, 'TReturn, 'TNext) tags
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, undefined) tags
    type 'T tags_1 = ('T, any, undefined) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `Iterator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
            fun (__TNext_of_js : Ojs.t -> __TNext) ->
              fun (x102 : Ojs.t) -> intf_of_js __tags_of_js x102
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
            fun (__TNext_to_js : __TNext -> Ojs.t) ->
              fun (x100 : __tags intf) -> intf_to_js __tags_to_js x100
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x107 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x104 : any list) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (let x112 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x107 in
             Ojs.call (Ojs.get_prop_ascii x112 "next") "apply"
               [|x112;((let x105 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x106 : any) ->
                             ignore
                               (Ojs.call x105 "push" [|(any_to_js x106)|]))
                          x104;
                        x105))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?value:'TReturn -> unit -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x118 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?value:(x115 : 'TReturn option) ->
          fun () ->
            IteratorResult.t_of_js Obj.magic Obj.magic
              (let x123 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x118 in
               Ojs.call (Ojs.get_prop_ascii x123 "return") "apply"
                 [|x123;((let x116 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x115 with
                           | Some x117 ->
                               ignore
                                 (Ojs.call x116 "push" [|(Obj.magic x117)|])
                           | None -> ());
                          x116))|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?e:any -> unit -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x129 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?e:(x126 : any option) ->
          fun () ->
            IteratorResult.t_of_js Obj.magic Obj.magic
              (let x134 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x129 in
               Ojs.call (Ojs.get_prop_ascii x134 "throw") "apply"
                 [|x134;((let x127 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x126 with
                           | Some x128 ->
                               ignore
                                 (Ojs.call x127 "push" [|(any_to_js x128)|])
                           | None -> ());
                          x127))|])
    let cast_from = Obj.magic
  end
module Iterable =
  struct
    type 'T t = [ `Iterable of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x139 : Ojs.t) -> t_of_js __T_of_js x139
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x137 : __T t) -> t_to_js __T_to_js x137
    type 'T tags = [ `Iterable of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `Iterable of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x143 : Ojs.t) -> intf_of_js __tags_of_js x143
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x141 : __tags intf) -> intf_to_js __tags_to_js x141
    let cast_from = Obj.magic
  end
module WeakSet =
  struct
    type 'T t = [ `WeakSet of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x147 : Ojs.t) -> t_of_js __T_of_js x147
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x145 : __T t) -> t_to_js __T_to_js x145
    type 'T tags = [ `WeakSet of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `WeakSet of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x151 : Ojs.t) -> intf_of_js __tags_of_js x151
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x149 : __tags intf) -> intf_to_js __tags_to_js x149
    let (add : ('tags, 'T) this -> value:'T -> ('tags, 'T) this) =
      fun (x154 : ('tags, 'T) this) ->
        fun ~value:(x153 : 'T) ->
          this_of_js Obj.magic Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x154) "add"
               [|(Obj.magic x153)|])
    let (delete : ('tags, 'T) this -> value:'T -> bool) =
      fun (x160 : ('tags, 'T) this) ->
        fun ~value:(x159 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x160) "delete"
               [|(Obj.magic x159)|])
    let (has : ('tags, 'T) this -> value:'T -> bool) =
      fun (x164 : ('tags, 'T) this) ->
        fun ~value:(x163 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x164) "has"
               [|(Obj.magic x163)|])
    let (create : 'T Iterable.t -> 'T t) =
      fun (x167 : 'T Iterable.t) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakSet")
             [|(Iterable.t_to_js Obj.magic x167)|])
    let (create' : ?values:'T list option -> unit -> 'T t) =
      fun ?values:(x170 : 'T list option option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakSet")
               (let x171 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x170 with
                 | Some x172 ->
                     ignore
                       (Ojs.call x171 "push"
                          [|(Ojs.option_to_js
                               (fun (x173 : 'T list) ->
                                  Ojs.list_to_js Obj.magic x173) x172)|])
                 | None -> ());
                x171))
    let (prototype : unit -> untyped_object t) =
      fun () ->
        t_of_js untyped_object_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakSet")
             "prototype")
    let cast_from = Obj.magic
  end
module WeakRef =
  struct
    type 'T t = [ `WeakRef of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x179 : Ojs.t) -> t_of_js __T_of_js x179
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x177 : __T t) -> t_to_js __T_to_js x177
    type 'T tags = [ `WeakRef of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `WeakRef of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x183 : Ojs.t) -> intf_of_js __tags_of_js x183
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x181 : __tags intf) -> intf_to_js __tags_to_js x181
    let (deref : ('tags, 'T) this -> 'T option) =
      fun (x185 : ('tags, 'T) this) ->
        Ojs.option_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x185) "deref" [||])
    let (deref' : ('tags, 'T) this -> 'T option) =
      fun (x189 : ('tags, 'T) this) ->
        Ojs.option_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x189) "deref" [||])
    let (prototype : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakRef")
             "prototype")
    let (create : ?target:'T -> unit -> 'T t) =
      fun ?target:(x194 : 'T option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakRef")
               (let x195 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x194 with
                 | Some x196 ->
                     ignore (Ojs.call x195 "push" [|(Obj.magic x196)|])
                 | None -> ());
                x195))
    let (prototype' : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakRef")
             "prototype")
    let (create' : 'T -> 'T t) =
      fun (x199 : 'T) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakRef")
             [|(Obj.magic x199)|])
    let cast_from = Obj.magic
  end
module WeakMap =
  struct
    type ('K, 'V) t = [ `WeakMap of ('K * 'V) ] intf
    let rec t_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t =
      fun _K -> fun _V -> Obj.magic
    and t_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t -> Ojs.t =
      fun _K -> fun _V -> Obj.magic
    type ('K, 'V) t_2 = ('K, 'V) t
    let rec t_2_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t_2 = fun
      (type __K) -> fun (type __V) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__V_of_js : Ojs.t -> __V) ->
          fun (x204 : Ojs.t) -> t_of_js __K_of_js __V_of_js x204
    and t_2_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t_2 -> Ojs.t = fun
      (type __K) -> fun (type __V) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__V_to_js : __V -> Ojs.t) ->
          fun (x201 : (__K, __V) t) -> t_to_js __K_to_js __V_to_js x201
    type ('K, 'V) tags = [ `WeakMap of ('K * 'V) ]
    type ('K, 'V) tags_2 = ('K, 'V) tags
    type ('tags, 'K, 'V) this =
      'tags intf constraint 'tags = [> `WeakMap of ('K * 'V) ]
    let rec this_of_js :
      'tags 'K 'V .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('tags, 'K, 'V) this
      = fun (type __tags) -> fun (type __K) -> fun (type __V) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (__V_of_js : Ojs.t -> __V) ->
            fun (x209 : Ojs.t) -> intf_of_js __tags_of_js x209
    and this_to_js :
      'tags 'K 'V .
        ('tags -> Ojs.t) ->
          ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('tags, 'K, 'V) this -> Ojs.t
      = fun (type __tags) -> fun (type __K) -> fun (type __V) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (__V_to_js : __V -> Ojs.t) ->
            fun (x207 : __tags intf) -> intf_to_js __tags_to_js x207
    let (delete : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x212 : ('tags, 'K, 'V) this) ->
        fun ~key:(x211 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x212)
               "delete" [|(Obj.magic x211)|])
    let (get_ : ('tags, 'K, 'V) this -> key:'K -> 'V option) =
      fun (x217 : ('tags, 'K, 'V) this) ->
        fun ~key:(x216 : 'K) ->
          Ojs.option_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x217) "get"
               [|(Obj.magic x216)|])
    let (has : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x223 : ('tags, 'K, 'V) this) ->
        fun ~key:(x222 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x223) "has"
               [|(Obj.magic x222)|])
    let (set_ :
      ('tags, 'K, 'V) this -> key:'K -> value:'V -> ('tags, 'K, 'V) this) =
      fun (x229 : ('tags, 'K, 'V) this) ->
        fun ~key:(x227 : 'K) ->
          fun ~value:(x228 : 'V) ->
            this_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x229) "set"
                 [|(Obj.magic x227);(Obj.magic x228)|])
    let (create : ('K * 'V) Iterable.t -> ('K, 'V) t) =
      fun (x236 : ('K * 'V) Iterable.t) ->
        t_of_js Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakMap")
             [|(Iterable.t_to_js
                  (fun (x237 : ('K * 'V)) ->
                     let (x238, x239) = x237 in
                     let x240 = Ojs.array_make 2 in
                     Ojs.array_set x240 0 (Obj.magic x238);
                     Ojs.array_set x240 1 (Obj.magic x239);
                     x240) x236)|])
    let (create' : ?entries:('K * 'V) list option -> unit -> ('K, 'V) t) =
      fun ?entries:(x243 : ('K * 'V) list option option) ->
        fun () ->
          t_of_js Obj.magic Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakMap")
               (let x244 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x243 with
                 | Some x245 ->
                     ignore
                       (Ojs.call x244 "push"
                          [|(Ojs.option_to_js
                               (fun (x246 : ('K * 'V) list) ->
                                  Ojs.list_to_js
                                    (fun (x247 : ('K * 'V)) ->
                                       let (x248, x249) = x247 in
                                       let x250 = Ojs.array_make 2 in
                                       Ojs.array_set x250 0 (Obj.magic x248);
                                       Ojs.array_set x250 1 (Obj.magic x249);
                                       x250) x246) x245)|])
                 | None -> ());
                x244))
    let (prototype : unit -> (untyped_object, any) t) =
      fun () ->
        t_of_js untyped_object_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakMap")
             "prototype")
    let cast_from = Obj.magic
  end
module Uppercase =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t = fun (type __S) ->
      fun (__S_of_js : Ojs.t -> __S) -> fun (x256 : Ojs.t) -> x256
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) -> fun (x255 : Ojs.t) -> x255
    type 'S t_1 = 'S t
    let rec t_1_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t_1 = fun (type
      __S) ->
      fun (__S_of_js : Ojs.t -> __S) ->
        fun (x259 : Ojs.t) -> t_of_js __S_of_js x259
    and t_1_to_js : 'S . ('S -> Ojs.t) -> 'S t_1 -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) ->
        fun (x257 : __S t) -> t_to_js __S_to_js x257
  end
module Uncapitalize =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t = fun (type __S) ->
      fun (__S_of_js : Ojs.t -> __S) -> fun (x262 : Ojs.t) -> x262
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) -> fun (x261 : Ojs.t) -> x261
    type 'S t_1 = 'S t
    let rec t_1_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t_1 = fun (type
      __S) ->
      fun (__S_of_js : Ojs.t -> __S) ->
        fun (x265 : Ojs.t) -> t_of_js __S_of_js x265
    and t_1_to_js : 'S . ('S -> Ojs.t) -> 'S t_1 -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) ->
        fun (x263 : __S t) -> t_to_js __S_to_js x263
  end
module SharedArrayBuffer =
  struct
    type t = [ `SharedArrayBuffer ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x268 : Ojs.t) -> t_of_js x268
    and t_0_to_js : t_0 -> Ojs.t = fun (x267 : t) -> t_to_js x267
    type tags = [ `SharedArrayBuffer ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `SharedArrayBuffer ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x271 : Ojs.t) -> intf_of_js __tags_of_js x271
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x269 : __tags intf) -> intf_to_js __tags_to_js x269
    let (get_byteLength : 'tags this -> float) =
      fun (x273 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x273) "byteLength")
    let (slice : 'tags this -> begin_:float -> ?end_:float -> unit -> t) =
      fun (x279 : 'tags this) ->
        fun ~begin_:(x275 : float) ->
          fun ?end_:(x276 : float option) ->
            fun () ->
              t_of_js
                (let x281 = this_to_js Obj.magic x279 in
                 Ojs.call (Ojs.get_prop_ascii x281 "slice") "apply"
                   [|x281;((let x277 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x277 "push"
                                 [|(Ojs.float_to_js x275)|]);
                            (match x276 with
                             | Some x278 ->
                                 ignore
                                   (Ojs.call x277 "push"
                                      [|(Ojs.float_to_js x278)|])
                             | None -> ());
                            x277))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "SharedArrayBuffer") "prototype")
    let (create : float -> t) =
      fun (x282 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "SharedArrayBuffer")
             [|(Ojs.float_to_js x282)|])
    let cast_from = Obj.magic
  end
module ArrayBuffer =
  struct
    type t = [ `ArrayBuffer ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x284 : Ojs.t) -> t_of_js x284
    and t_0_to_js : t_0 -> Ojs.t = fun (x283 : t) -> t_to_js x283
    type tags = [ `ArrayBuffer ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ArrayBuffer ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x287 : Ojs.t) -> intf_of_js __tags_of_js x287
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x285 : __tags intf) -> intf_to_js __tags_to_js x285
    let (get_byteLength : 'tags this -> float) =
      fun (x289 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x289) "byteLength")
    let (slice : 'tags this -> begin_:float -> ?end_:float -> unit -> t) =
      fun (x295 : 'tags this) ->
        fun ~begin_:(x291 : float) ->
          fun ?end_:(x292 : float option) ->
            fun () ->
              t_of_js
                (let x297 = this_to_js Obj.magic x295 in
                 Ojs.call (Ojs.get_prop_ascii x297 "slice") "apply"
                   [|x297;((let x293 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x293 "push"
                                 [|(Ojs.float_to_js x291)|]);
                            (match x292 with
                             | Some x294 ->
                                 ignore
                                   (Ojs.call x293 "push"
                                      [|(Ojs.float_to_js x294)|])
                             | None -> ());
                            x293))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ArrayBuffer")
             "prototype")
    let (create : float -> t) =
      fun (x298 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "ArrayBuffer")
             [|(Ojs.float_to_js x298)|])
    let (isView : any -> bool) =
      fun (x299 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "ArrayBuffer") "isView"
             [|(any_to_js x299)|])
    let cast_from = Obj.magic
  end
module ArrayBufferLike =
  struct
    type t = (ArrayBuffer.t, SharedArrayBuffer.t) union2
    let rec t_of_js : Ojs.t -> t =
      fun (x303 : Ojs.t) ->
        union2_of_js ArrayBuffer.t_of_js SharedArrayBuffer.t_of_js x303
    and t_to_js : t -> Ojs.t =
      fun (x300 : (ArrayBuffer.t, SharedArrayBuffer.t) union2) ->
        union2_to_js ArrayBuffer.t_to_js SharedArrayBuffer.t_to_js x300
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x307 : Ojs.t) -> t_of_js x307
    and t_0_to_js : t_0 -> Ojs.t = fun (x306 : t) -> t_to_js x306
  end
module IterableIterator =
  struct
    type 'T t =
      [ `IterableIterator of 'T  | `Iterator of ('T * any * undefined) ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x310 : Ojs.t) -> t_of_js __T_of_js x310
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x308 : __T t) -> t_to_js __T_to_js x308
    type 'T tags =
      [ `IterableIterator of 'T  | `Iterator of ('T * any * undefined) ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `IterableIterator of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x314 : Ojs.t) -> intf_of_js __tags_of_js x314
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x312 : __tags intf) -> intf_to_js __tags_to_js x312
    let cast_from = Obj.magic
  end
module ArrayLike =
  struct
    type 'T t = [ `ArrayLike of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x318 : Ojs.t) -> t_of_js __T_of_js x318
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x316 : __T t) -> t_to_js __T_to_js x316
    type 'T tags = [ `ArrayLike of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ArrayLike of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x322 : Ojs.t) -> intf_of_js __tags_of_js x322
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x320 : __tags intf) -> intf_to_js __tags_to_js x320
    let (get_length : ('tags, 'T) this -> float) =
      fun (x324 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x324) "length")
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x327 : ('tags, 'T) this) ->
        fun (x330 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x327)
               (Ojs.float_to_js x330))
    let cast_from = Obj.magic
    let (of_ml : 'T list -> 'T t) =
      fun (x331 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x331)
    let (to_ml : 'T t -> 'T list) =
      fun (x334 : 'T t) -> Ojs.list_of_js Obj.magic (t_to_js Obj.magic x334)
  end
module Uint8ClampedArray =
  struct
    type t =
      [ `Uint8ClampedArray  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x338 : Ojs.t) -> t_of_js x338
    and t_0_to_js : t_0 -> Ojs.t = fun (x337 : t) -> t_to_js x337
    type tags =
      [ `Uint8ClampedArray  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Uint8ClampedArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x341 : Ojs.t) -> intf_of_js __tags_of_js x341
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x339 : __tags intf) -> intf_to_js __tags_to_js x339
    let (at : 'tags this -> index:float -> float option) =
      fun (x344 : 'tags this) ->
        fun ~index:(x343 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x344) "at"
               [|(Ojs.float_to_js x343)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x351 : 'tags this) ->
        fun ~searchElement:(x347 : float) ->
          fun ?fromIndex:(x348 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x353 = this_to_js Obj.magic x351 in
                 Ojs.call (Ojs.get_prop_ascii x353 "includes") "apply"
                   [|x353;((let x349 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x349 "push"
                                 [|(Ojs.float_to_js x347)|]);
                            (match x348 with
                             | Some x350 ->
                                 ignore
                                   (Ojs.call x349 "push"
                                      [|(Ojs.float_to_js x350)|])
                             | None -> ());
                            x349))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x354 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x356 : Ojs.t) ->
             let x357 = x356 in
             ((Ojs.float_of_js (Ojs.array_get x357 0)),
               (Ojs.float_of_js (Ojs.array_get x357 1))))
          (Ojs.call (this_to_js Obj.magic x354) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x358 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x358) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x361 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x361) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x364 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x364) "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x366 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x366) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x368 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x368) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x370 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x370) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x377 : 'tags this) ->
        fun ~target:(x372 : float) ->
          fun ~start:(x373 : float) ->
            fun ?end_:(x374 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x379 = this_to_js Obj.magic x377 in
                   Ojs.call (Ojs.get_prop_ascii x379 "copyWithin") "apply"
                     [|x379;((let x375 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x375 "push"
                                   [|(Ojs.float_to_js x372)|]);
                              ignore
                                (Ojs.call x375 "push"
                                   [|(Ojs.float_to_js x373)|]);
                              (match x374 with
                               | Some x376 ->
                                   ignore
                                     (Ojs.call x375 "push"
                                        [|(Ojs.float_to_js x376)|])
                               | None -> ());
                              x375))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x388 : 'tags this) ->
        fun
          ~predicate:(x381 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x382 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x390 = this_to_js Obj.magic x388 in
                 Ojs.call (Ojs.get_prop_ascii x390 "every") "apply"
                   [|x390;((let x383 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x383 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x385 : Ojs.t) ->
                                         fun (x386 : Ojs.t) ->
                                           fun (x387 : Ojs.t) ->
                                             unknown_to_js
                                               (x381
                                                  ~value:(Ojs.float_of_js
                                                            x385)
                                                  ~index:(Ojs.float_of_js
                                                            x386)
                                                  ~array:(t_of_js x387))))|]);
                            (match x382 with
                             | Some x384 ->
                                 ignore
                                   (Ojs.call x383 "push" [|(any_to_js x384)|])
                             | None -> ());
                            x383))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x397 : 'tags this) ->
        fun ~value:(x391 : float) ->
          fun ?start:(x392 : float option) ->
            fun ?end_:(x393 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x399 = this_to_js Obj.magic x397 in
                   Ojs.call (Ojs.get_prop_ascii x399 "fill") "apply"
                     [|x399;((let x394 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x394 "push"
                                   [|(Ojs.float_to_js x391)|]);
                              (match x392 with
                               | Some x396 ->
                                   ignore
                                     (Ojs.call x394 "push"
                                        [|(Ojs.float_to_js x396)|])
                               | None -> ());
                              (match x393 with
                               | Some x395 ->
                                   ignore
                                     (Ojs.call x394 "push"
                                        [|(Ojs.float_to_js x395)|])
                               | None -> ());
                              x394))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x408 : 'tags this) ->
        fun ~predicate:(x401 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x402 : any option) ->
            fun () ->
              t_of_js
                (let x410 = this_to_js Obj.magic x408 in
                 Ojs.call (Ojs.get_prop_ascii x410 "filter") "apply"
                   [|x410;((let x403 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x403 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x405 : Ojs.t) ->
                                         fun (x406 : Ojs.t) ->
                                           fun (x407 : Ojs.t) ->
                                             any_to_js
                                               (x401
                                                  ~value:(Ojs.float_of_js
                                                            x405)
                                                  ~index:(Ojs.float_of_js
                                                            x406)
                                                  ~array:(t_of_js x407))))|]);
                            (match x402 with
                             | Some x404 ->
                                 ignore
                                   (Ojs.call x403 "push" [|(any_to_js x404)|])
                             | None -> ());
                            x403))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x418 : 'tags this) ->
        fun ~predicate:(x411 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x412 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x420 = this_to_js Obj.magic x418 in
                 Ojs.call (Ojs.get_prop_ascii x420 "find") "apply"
                   [|x420;((let x413 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x413 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x415 : Ojs.t) ->
                                         fun (x416 : Ojs.t) ->
                                           fun (x417 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x411
                                                  ~value:(Ojs.float_of_js
                                                            x415)
                                                  ~index:(Ojs.float_of_js
                                                            x416)
                                                  ~obj:(t_of_js x417))))|]);
                            (match x412 with
                             | Some x414 ->
                                 ignore
                                   (Ojs.call x413 "push" [|(any_to_js x414)|])
                             | None -> ());
                            x413))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x429 : 'tags this) ->
        fun ~predicate:(x422 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x423 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x431 = this_to_js Obj.magic x429 in
                 Ojs.call (Ojs.get_prop_ascii x431 "findIndex") "apply"
                   [|x431;((let x424 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x424 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x426 : Ojs.t) ->
                                         fun (x427 : Ojs.t) ->
                                           fun (x428 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x422
                                                  ~value:(Ojs.float_of_js
                                                            x426)
                                                  ~index:(Ojs.float_of_js
                                                            x427)
                                                  ~obj:(t_of_js x428))))|]);
                            (match x423 with
                             | Some x425 ->
                                 ignore
                                   (Ojs.call x424 "push" [|(any_to_js x425)|])
                             | None -> ());
                            x424))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x439 : 'tags this) ->
        fun
          ~callbackfn:(x432 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x433 : any option) ->
            fun () ->
              ignore
                (let x441 = this_to_js Obj.magic x439 in
                 Ojs.call (Ojs.get_prop_ascii x441 "forEach") "apply"
                   [|x441;((let x434 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x434 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x436 : Ojs.t) ->
                                         fun (x437 : Ojs.t) ->
                                           fun (x438 : Ojs.t) ->
                                             x432
                                               ~value:(Ojs.float_of_js x436)
                                               ~index:(Ojs.float_of_js x437)
                                               ~array:(t_of_js x438)))|]);
                            (match x433 with
                             | Some x435 ->
                                 ignore
                                   (Ojs.call x434 "push" [|(any_to_js x435)|])
                             | None -> ());
                            x434))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x446 : 'tags this) ->
        fun ~searchElement:(x442 : float) ->
          fun ?fromIndex:(x443 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x448 = this_to_js Obj.magic x446 in
                 Ojs.call (Ojs.get_prop_ascii x448 "indexOf") "apply"
                   [|x448;((let x444 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x444 "push"
                                 [|(Ojs.float_to_js x442)|]);
                            (match x443 with
                             | Some x445 ->
                                 ignore
                                   (Ojs.call x444 "push"
                                      [|(Ojs.float_to_js x445)|])
                             | None -> ());
                            x444))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x452 : 'tags this) ->
        fun ?separator:(x449 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x454 = this_to_js Obj.magic x452 in
               Ojs.call (Ojs.get_prop_ascii x454 "join") "apply"
                 [|x454;((let x450 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x449 with
                           | Some x451 ->
                               ignore
                                 (Ojs.call x450 "push"
                                    [|(Ojs.string_to_js x451)|])
                           | None -> ());
                          x450))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x459 : 'tags this) ->
        fun ~searchElement:(x455 : float) ->
          fun ?fromIndex:(x456 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x461 = this_to_js Obj.magic x459 in
                 Ojs.call (Ojs.get_prop_ascii x461 "lastIndexOf") "apply"
                   [|x461;((let x457 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x457 "push"
                                 [|(Ojs.float_to_js x455)|]);
                            (match x456 with
                             | Some x458 ->
                                 ignore
                                   (Ojs.call x457 "push"
                                      [|(Ojs.float_to_js x458)|])
                             | None -> ());
                            x457))|])
    let (get_length : 'tags this -> float) =
      fun (x462 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x462) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x471 : 'tags this) ->
        fun
          ~callbackfn:(x464 : value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x465 : any option) ->
            fun () ->
              t_of_js
                (let x473 = this_to_js Obj.magic x471 in
                 Ojs.call (Ojs.get_prop_ascii x473 "map") "apply"
                   [|x473;((let x466 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x466 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x468 : Ojs.t) ->
                                         fun (x469 : Ojs.t) ->
                                           fun (x470 : Ojs.t) ->
                                             Ojs.float_to_js
                                               (x464
                                                  ~value:(Ojs.float_of_js
                                                            x468)
                                                  ~index:(Ojs.float_of_js
                                                            x469)
                                                  ~array:(t_of_js x470))))|]);
                            (match x465 with
                             | Some x467 ->
                                 ignore
                                   (Ojs.call x466 "push" [|(any_to_js x467)|])
                             | None -> ());
                            x466))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x479 : 'tags this) ->
        fun
          ~callbackfn:(x474 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x479) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x475 : Ojs.t) ->
                       fun (x476 : Ojs.t) ->
                         fun (x477 : Ojs.t) ->
                           fun (x478 : Ojs.t) ->
                             Ojs.float_to_js
                               (x474 ~previousValue:(Ojs.float_of_js x475)
                                  ~currentValue:(Ojs.float_of_js x476)
                                  ~currentIndex:(Ojs.float_of_js x477)
                                  ~array:(t_of_js x478))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x487 : 'tags this) ->
        fun
          ~callbackfn:(x481 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x486 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x487) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x482 : Ojs.t) ->
                         fun (x483 : Ojs.t) ->
                           fun (x484 : Ojs.t) ->
                             fun (x485 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x481 ~previousValue:(Ojs.float_of_js x482)
                                    ~currentValue:(Ojs.float_of_js x483)
                                    ~currentIndex:(Ojs.float_of_js x484)
                                    ~array:(t_of_js x485))));(Ojs.float_to_js
                                                                x486)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x495 : 'tags this) ->
        fun
          ~callbackfn:(x489 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x494 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x495) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x490 : Ojs.t) ->
                         fun (x491 : Ojs.t) ->
                           fun (x492 : Ojs.t) ->
                             fun (x493 : Ojs.t) ->
                               Obj.magic
                                 (x489 ~previousValue:(Obj.magic x490)
                                    ~currentValue:(Ojs.float_of_js x491)
                                    ~currentIndex:(Ojs.float_of_js x492)
                                    ~array:(t_of_js x493))));(Obj.magic x494)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x502 : 'tags this) ->
        fun
          ~callbackfn:(x497 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x502) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x498 : Ojs.t) ->
                       fun (x499 : Ojs.t) ->
                         fun (x500 : Ojs.t) ->
                           fun (x501 : Ojs.t) ->
                             Ojs.float_to_js
                               (x497 ~previousValue:(Ojs.float_of_js x498)
                                  ~currentValue:(Ojs.float_of_js x499)
                                  ~currentIndex:(Ojs.float_of_js x500)
                                  ~array:(t_of_js x501))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x510 : 'tags this) ->
        fun
          ~callbackfn:(x504 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x509 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x510) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x505 : Ojs.t) ->
                         fun (x506 : Ojs.t) ->
                           fun (x507 : Ojs.t) ->
                             fun (x508 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x504 ~previousValue:(Ojs.float_of_js x505)
                                    ~currentValue:(Ojs.float_of_js x506)
                                    ~currentIndex:(Ojs.float_of_js x507)
                                    ~array:(t_of_js x508))));(Ojs.float_to_js
                                                                x509)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x518 : 'tags this) ->
        fun
          ~callbackfn:(x512 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x517 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x518) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x513 : Ojs.t) ->
                         fun (x514 : Ojs.t) ->
                           fun (x515 : Ojs.t) ->
                             fun (x516 : Ojs.t) ->
                               Obj.magic
                                 (x512 ~previousValue:(Obj.magic x513)
                                    ~currentValue:(Ojs.float_of_js x514)
                                    ~currentIndex:(Ojs.float_of_js x515)
                                    ~array:(t_of_js x516))));(Obj.magic x517)|])
    let (reverse : 'tags this -> t) =
      fun (x520 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x520) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x527 : 'tags this) ->
        fun ~array:(x522 : float ArrayLike.t) ->
          fun ?offset:(x523 : float option) ->
            fun () ->
              ignore
                (let x529 = this_to_js Obj.magic x527 in
                 Ojs.call (Ojs.get_prop_ascii x529 "set") "apply"
                   [|x529;((let x524 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x524 "push"
                                 [|(ArrayLike.t_to_js Ojs.float_to_js x522)|]);
                            (match x523 with
                             | Some x525 ->
                                 ignore
                                   (Ojs.call x524 "push"
                                      [|(Ojs.float_to_js x525)|])
                             | None -> ());
                            x524))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x535 : 'tags this) ->
        fun ?start:(x530 : float option) ->
          fun ?end_:(x531 : float option) ->
            fun () ->
              t_of_js
                (let x537 = this_to_js Obj.magic x535 in
                 Ojs.call (Ojs.get_prop_ascii x537 "slice") "apply"
                   [|x537;((let x532 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x530 with
                             | Some x534 ->
                                 ignore
                                   (Ojs.call x532 "push"
                                      [|(Ojs.float_to_js x534)|])
                             | None -> ());
                            (match x531 with
                             | Some x533 ->
                                 ignore
                                   (Ojs.call x532 "push"
                                      [|(Ojs.float_to_js x533)|])
                             | None -> ());
                            x532))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x545 : 'tags this) ->
        fun
          ~predicate:(x538 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x539 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x547 = this_to_js Obj.magic x545 in
                 Ojs.call (Ojs.get_prop_ascii x547 "some") "apply"
                   [|x547;((let x540 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x540 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x542 : Ojs.t) ->
                                         fun (x543 : Ojs.t) ->
                                           fun (x544 : Ojs.t) ->
                                             unknown_to_js
                                               (x538
                                                  ~value:(Ojs.float_of_js
                                                            x542)
                                                  ~index:(Ojs.float_of_js
                                                            x543)
                                                  ~array:(t_of_js x544))))|]);
                            (match x539 with
                             | Some x541 ->
                                 ignore
                                   (Ojs.call x540 "push" [|(any_to_js x541)|])
                             | None -> ());
                            x540))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x553 : 'tags this) ->
        fun ?compareFn:(x548 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x555 = this_to_js Obj.magic x553 in
               Ojs.call (Ojs.get_prop_ascii x555 "sort") "apply"
                 [|x555;((let x549 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x548 with
                           | Some x550 ->
                               ignore
                                 (Ojs.call x549 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x551 : Ojs.t) ->
                                            fun (x552 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x550
                                                   ~a:(Ojs.float_of_js x551)
                                                   ~b:(Ojs.float_of_js x552))))|])
                           | None -> ());
                          x549))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x562 : 'tags this) ->
        fun ?begin_:(x557 : float option) ->
          fun ?end_:(x558 : float option) ->
            fun () ->
              t_of_js
                (let x564 = this_to_js Obj.magic x562 in
                 Ojs.call (Ojs.get_prop_ascii x564 "subarray") "apply"
                   [|x564;((let x559 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x557 with
                             | Some x561 ->
                                 ignore
                                   (Ojs.call x559 "push"
                                      [|(Ojs.float_to_js x561)|])
                             | None -> ());
                            (match x558 with
                             | Some x560 ->
                                 ignore
                                   (Ojs.call x559 "push"
                                      [|(Ojs.float_to_js x560)|])
                             | None -> ());
                            x559))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x565 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x565) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x567 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x567) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x569 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x569) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x571 : 'tags this) ->
        fun (x573 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x571) (Ojs.float_to_js x573))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x574 : 'tags this) ->
        fun (x576 : float) ->
          fun (x577 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x574) (Ojs.float_to_js x576)
              (Ojs.float_to_js x577)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [||])
    let (create' : float Iterable.t -> t) =
      fun (x578 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|(Iterable.t_to_js Ojs.float_to_js x578)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x580 : float Iterable.t) ->
        fun ?mapfn:(x581 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x582 : any option) ->
            fun () ->
              t_of_js
                (let x589 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
                 Ojs.call (Ojs.get_prop_ascii x589 "from") "apply"
                   [|x589;((let x583 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x583 "push"
                                 [|(Iterable.t_to_js Ojs.float_to_js x580)|]);
                            (match x581 with
                             | Some x585 ->
                                 ignore
                                   (Ojs.call x583 "push"
                                      [|(Ojs.fun_to_js 2
                                           (fun (x586 : Ojs.t) ->
                                              fun (x587 : Ojs.t) ->
                                                Ojs.float_to_js
                                                  (x585
                                                     ~v:(Ojs.float_of_js x586)
                                                     ~k:(Ojs.float_of_js x587))))|])
                             | None -> ());
                            (match x582 with
                             | Some x584 ->
                                 ignore
                                   (Ojs.call x583 "push" [|(any_to_js x584)|])
                             | None -> ());
                            x583))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray") "prototype")
    let (create'' : float -> t) =
      fun (x590 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|(Ojs.float_to_js x590)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x591 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|((match x591 with
                 | `U1 x592 -> ArrayLike.t_to_js Ojs.float_to_js x592
                 | `U2 x594 -> ArrayBufferLike.t_to_js x594))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x595 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x596 : float option) ->
          fun ?length:(x597 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
                   (let x598 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x598 "push"
                         [|(ArrayBufferLike.t_to_js x595)|]);
                    (match x596 with
                     | Some x600 ->
                         ignore
                           (Ojs.call x598 "push" [|(Ojs.float_to_js x600)|])
                     | None -> ());
                    (match x597 with
                     | Some x599 ->
                         ignore
                           (Ojs.call x598 "push" [|(Ojs.float_to_js x599)|])
                     | None -> ());
                    x598))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x601 : float list) ->
        t_of_js
          (let x604 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
           Ojs.call (Ojs.get_prop_ascii x604 "of") "apply"
             [|x604;((let x602 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      List.iter
                        (fun (x603 : float) ->
                           ignore
                             (Ojs.call x602 "push" [|(Ojs.float_to_js x603)|]))
                        x601;
                      x602))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x605 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             "from" [|(ArrayLike.t_to_js Ojs.float_to_js x605)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x607 : 'T ArrayLike.t) ->
        fun ~mapfn:(x608 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x609 : any option) ->
            fun () ->
              t_of_js
                (let x615 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
                 Ojs.call (Ojs.get_prop_ascii x615 "from") "apply"
                   [|x615;((let x610 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x610 "push"
                                 [|(ArrayLike.t_to_js Obj.magic x607)|]);
                            ignore
                              (Ojs.call x610 "push"
                                 [|(Ojs.fun_to_js 2
                                      (fun (x612 : Ojs.t) ->
                                         fun (x613 : Ojs.t) ->
                                           Ojs.float_to_js
                                             (x608 ~v:(Obj.magic x612)
                                                ~k:(Ojs.float_of_js x613))))|]);
                            (match x609 with
                             | Some x611 ->
                                 ignore
                                   (Ojs.call x610 "push" [|(any_to_js x611)|])
                             | None -> ());
                            x610))|])
    let cast_from = Obj.magic
  end
module rec
  Error:sig
          type t = [ `Error ] intf
          type t_0 = t
          [@@@js.stop ]
          type tags = [ `Error ]
          type tags_0 = tags
          [@@@js.start ]
          [@@@js.implem type tags = [ `Error ]
            type tags_0 = tags]
          type 'tags this = 'tags intf constraint 'tags = [> `Error ]
          val t_to_js : t -> Ojs.t
          val t_of_js : Ojs.t -> t
          val t_0_to_js : t_0 -> Ojs.t
          val t_0_of_js : Ojs.t -> t_0
          val get_cause : 'tags this -> t
          val set_cause : 'tags this -> t -> unit
          val get_name : 'tags this -> string
          val set_name : 'tags this -> string -> unit
          val get_message : 'tags this -> string
          val set_message : 'tags this -> string -> unit
          val get_stack : 'tags this -> string
          val set_stack : 'tags this -> string -> unit
          val create :
            ?message:string -> ?options:ErrorOptions.t -> unit -> t
          val invoke :
            ?message:string -> ?options:ErrorOptions.t -> unit -> t
          val create' : ?message:string -> unit -> t
          val invoke' : ?message:string -> unit -> t
          val prototype : unit -> t
          val create'' :
            cause:t ->
              name:string -> message:string -> stack:string -> unit -> t
          val cast_from : 'tags this -> t
        end =
  struct
    type t = [ `Error ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x617 : Ojs.t) -> t_of_js x617
    and t_0_to_js : t_0 -> Ojs.t = fun (x616 : t) -> t_to_js x616
    type tags = [ `Error ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Error ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x620 : Ojs.t) -> intf_of_js __tags_of_js x620
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x618 : __tags intf) -> intf_to_js __tags_to_js x618
    let (get_cause : 'tags this -> t) =
      fun (x622 : 'tags this) ->
        t_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x622) "cause")
    let (set_cause : 'tags this -> t -> unit) =
      fun (x624 : 'tags this) ->
        fun (x625 : t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x624) "cause"
            (t_to_js x625)
    let (get_name : 'tags this -> string) =
      fun (x627 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x627) "name")
    let (set_name : 'tags this -> string -> unit) =
      fun (x629 : 'tags this) ->
        fun (x630 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x629) "name"
            (Ojs.string_to_js x630)
    let (get_message : 'tags this -> string) =
      fun (x632 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x632) "message")
    let (set_message : 'tags this -> string -> unit) =
      fun (x634 : 'tags this) ->
        fun (x635 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x634) "message"
            (Ojs.string_to_js x635)
    let (get_stack : 'tags this -> string) =
      fun (x637 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x637) "stack")
    let (set_stack : 'tags this -> string -> unit) =
      fun (x639 : 'tags this) ->
        fun (x640 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x639) "stack"
            (Ojs.string_to_js x640)
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x642 : string option) ->
        fun ?options:(x643 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Error")
                 (let x644 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x642 with
                   | Some x646 ->
                       ignore
                         (Ojs.call x644 "push" [|(Ojs.string_to_js x646)|])
                   | None -> ());
                  (match x643 with
                   | Some x645 ->
                       ignore
                         (Ojs.call x644 "push"
                            [|(ErrorOptions.t_to_js x645)|])
                   | None -> ());
                  x644))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x647 : string option) ->
        fun ?options:(x648 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Error") "apply"
                 [|Ojs.null;((let x649 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x647 with
                               | Some x651 ->
                                   ignore
                                     (Ojs.call x649 "push"
                                        [|(Ojs.string_to_js x651)|])
                               | None -> ());
                              (match x648 with
                               | Some x650 ->
                                   ignore
                                     (Ojs.call x649 "push"
                                        [|(ErrorOptions.t_to_js x650)|])
                               | None -> ());
                              x649))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x652 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Error")
               (let x653 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x652 with
                 | Some x654 ->
                     ignore
                       (Ojs.call x653 "push" [|(Ojs.string_to_js x654)|])
                 | None -> ());
                x653))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x655 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Error") "apply"
               [|Ojs.null;((let x656 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x655 with
                             | Some x657 ->
                                 ignore
                                   (Ojs.call x656 "push"
                                      [|(Ojs.string_to_js x657)|])
                             | None -> ());
                            x656))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Error")
             "prototype")
    let (create'' :
      cause:t -> name:string -> message:string -> stack:string -> unit -> t)
      =
      fun ~cause:(x658 : t) ->
        fun ~name:(x659 : string) ->
          fun ~message:(x660 : string) ->
            fun ~stack:(x661 : string) ->
              fun () ->
                let x662 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x662 "cause" (t_to_js x658);
                Ojs.set_prop_ascii x662 "name" (Ojs.string_to_js x659);
                Ojs.set_prop_ascii x662 "message" (Ojs.string_to_js x660);
                Ojs.set_prop_ascii x662 "stack" (Ojs.string_to_js x661);
                t_of_js x662
    let cast_from = Obj.magic
  end
 and
  ErrorOptions:sig
                 type t = [ `ErrorOptions ] intf
                 type t_0 = t
                 [@@@js.stop ]
                 type tags = [ `ErrorOptions ]
                 type tags_0 = tags
                 [@@@js.start ]
                 [@@@js.implem
                   type tags = [ `ErrorOptions ]
                   type tags_0 = tags]
                 type 'tags this =
                   'tags intf constraint 'tags = [> `ErrorOptions ]
                 val t_to_js : t -> Ojs.t
                 val t_of_js : Ojs.t -> t
                 val t_0_to_js : t_0 -> Ojs.t
                 val t_0_of_js : Ojs.t -> t_0
                 val get_cause : 'tags this -> Error.t
                 val set_cause : 'tags this -> Error.t -> unit
                 val create : cause:Error.t -> unit -> t
                 val cast_from : 'tags this -> t
               end =
  struct
    type t = [ `ErrorOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x664 : Ojs.t) -> t_of_js x664
    and t_0_to_js : t_0 -> Ojs.t = fun (x663 : t) -> t_to_js x663
    type tags = [ `ErrorOptions ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ErrorOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x667 : Ojs.t) -> intf_of_js __tags_of_js x667
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x665 : __tags intf) -> intf_to_js __tags_to_js x665
    let (get_cause : 'tags this -> Error.t) =
      fun (x669 : 'tags this) ->
        Error.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x669) "cause")
    let (set_cause : 'tags this -> Error.t -> unit) =
      fun (x671 : 'tags this) ->
        fun (x672 : Error.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x671) "cause"
            (Error.t_to_js x672)
    let (create : cause:Error.t -> unit -> t) =
      fun ~cause:(x674 : Error.t) ->
        fun () ->
          let x675 = Ojs.empty_obj () in
          Ojs.set_prop_ascii x675 "cause" (Error.t_to_js x674); t_of_js x675
    let cast_from = Obj.magic
  end
module URIError =
  struct
    type t = [ `Error  | `URIError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x677 : Ojs.t) -> t_of_js x677
    and t_0_to_js : t_0 -> Ojs.t = fun (x676 : t) -> t_to_js x676
    type tags = [ `Error  | `URIError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `URIError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x680 : Ojs.t) -> intf_of_js __tags_of_js x680
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x678 : __tags intf) -> intf_to_js __tags_to_js x678
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x682 : string option) ->
        fun ?options:(x683 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "URIError")
                 (let x684 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x682 with
                   | Some x686 ->
                       ignore
                         (Ojs.call x684 "push" [|(Ojs.string_to_js x686)|])
                   | None -> ());
                  (match x683 with
                   | Some x685 ->
                       ignore
                         (Ojs.call x684 "push"
                            [|(ErrorOptions.t_to_js x685)|])
                   | None -> ());
                  x684))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x687 : string option) ->
        fun ?options:(x688 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "URIError") "apply"
                 [|Ojs.null;((let x689 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x687 with
                               | Some x691 ->
                                   ignore
                                     (Ojs.call x689 "push"
                                        [|(Ojs.string_to_js x691)|])
                               | None -> ());
                              (match x688 with
                               | Some x690 ->
                                   ignore
                                     (Ojs.call x689 "push"
                                        [|(ErrorOptions.t_to_js x690)|])
                               | None -> ());
                              x689))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x692 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "URIError")
               (let x693 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x692 with
                 | Some x694 ->
                     ignore
                       (Ojs.call x693 "push" [|(Ojs.string_to_js x694)|])
                 | None -> ());
                x693))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x695 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "URIError") "apply"
               [|Ojs.null;((let x696 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x695 with
                             | Some x697 ->
                                 ignore
                                   (Ojs.call x696 "push"
                                      [|(Ojs.string_to_js x697)|])
                             | None -> ());
                            x696))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "URIError")
             "prototype")
    let cast_from = Obj.magic
  end
module TypeError =
  struct
    type t = [ `Error  | `TypeError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x699 : Ojs.t) -> t_of_js x699
    and t_0_to_js : t_0 -> Ojs.t = fun (x698 : t) -> t_to_js x698
    type tags = [ `Error  | `TypeError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `TypeError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x702 : Ojs.t) -> intf_of_js __tags_of_js x702
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x700 : __tags intf) -> intf_to_js __tags_to_js x700
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x704 : string option) ->
        fun ?options:(x705 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "TypeError")
                 (let x706 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x704 with
                   | Some x708 ->
                       ignore
                         (Ojs.call x706 "push" [|(Ojs.string_to_js x708)|])
                   | None -> ());
                  (match x705 with
                   | Some x707 ->
                       ignore
                         (Ojs.call x706 "push"
                            [|(ErrorOptions.t_to_js x707)|])
                   | None -> ());
                  x706))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x709 : string option) ->
        fun ?options:(x710 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "TypeError") "apply"
                 [|Ojs.null;((let x711 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x709 with
                               | Some x713 ->
                                   ignore
                                     (Ojs.call x711 "push"
                                        [|(Ojs.string_to_js x713)|])
                               | None -> ());
                              (match x710 with
                               | Some x712 ->
                                   ignore
                                     (Ojs.call x711 "push"
                                        [|(ErrorOptions.t_to_js x712)|])
                               | None -> ());
                              x711))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x714 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "TypeError")
               (let x715 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x714 with
                 | Some x716 ->
                     ignore
                       (Ojs.call x715 "push" [|(Ojs.string_to_js x716)|])
                 | None -> ());
                x715))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x717 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "TypeError") "apply"
               [|Ojs.null;((let x718 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x717 with
                             | Some x719 ->
                                 ignore
                                   (Ojs.call x718 "push"
                                      [|(Ojs.string_to_js x719)|])
                             | None -> ());
                            x718))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "TypeError")
             "prototype")
    let cast_from = Obj.magic
  end
module FlatArray =
  struct
    type ('Arr, 'Depth) t = any
    let rec t_of_js :
      'Arr 'Depth .
        (Ojs.t -> 'Arr) -> (Ojs.t -> 'Depth) -> Ojs.t -> ('Arr, 'Depth) t
      = fun (type __Arr) -> fun (type __Depth) ->
      fun (__Arr_of_js : Ojs.t -> __Arr) ->
        fun (__Depth_of_js : Ojs.t -> __Depth) ->
          fun (x721 : Ojs.t) -> any_of_js x721
    and t_to_js :
      'Arr 'Depth .
        ('Arr -> Ojs.t) -> ('Depth -> Ojs.t) -> ('Arr, 'Depth) t -> Ojs.t
      = fun (type __Arr) -> fun (type __Depth) ->
      fun (__Arr_to_js : __Arr -> Ojs.t) ->
        fun (__Depth_to_js : __Depth -> Ojs.t) ->
          fun (x720 : any) -> any_to_js x720
    type ('Arr, 'Depth) t_2 = ('Arr, 'Depth) t
    let rec t_2_of_js :
      'Arr 'Depth .
        (Ojs.t -> 'Arr) -> (Ojs.t -> 'Depth) -> Ojs.t -> ('Arr, 'Depth) t_2
      = fun (type __Arr) -> fun (type __Depth) ->
      fun (__Arr_of_js : Ojs.t -> __Arr) ->
        fun (__Depth_of_js : Ojs.t -> __Depth) ->
          fun (x725 : Ojs.t) -> t_of_js __Arr_of_js __Depth_of_js x725
    and t_2_to_js :
      'Arr 'Depth .
        ('Arr -> Ojs.t) -> ('Depth -> Ojs.t) -> ('Arr, 'Depth) t_2 -> Ojs.t
      = fun (type __Arr) -> fun (type __Depth) ->
      fun (__Arr_to_js : __Arr -> Ojs.t) ->
        fun (__Depth_to_js : __Depth -> Ojs.t) ->
          fun (x722 : (__Arr, __Depth) t) ->
            t_to_js __Arr_to_js __Depth_to_js x722
  end
module ConcatArray =
  struct
    type 'T t = [ `ConcatArray of 'T  | 'T ArrayLike.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x730 : Ojs.t) -> t_of_js __T_of_js x730
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x728 : __T t) -> t_to_js __T_to_js x728
    type 'T tags = [ `ConcatArray of 'T  | 'T ArrayLike.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ConcatArray of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x734 : Ojs.t) -> intf_of_js __tags_of_js x734
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x732 : __tags intf) -> intf_to_js __tags_to_js x732
    let (get_length : ('tags, 'T) this -> float) =
      fun (x736 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x736) "length")
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x739 : ('tags, 'T) this) ->
        fun (x742 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x739)
               (Ojs.float_to_js x742))
    let (join : ('tags, 'T) this -> ?separator:string -> unit -> string) =
      fun (x746 : ('tags, 'T) this) ->
        fun ?separator:(x743 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x749 = this_to_js Obj.magic Obj.magic x746 in
               Ojs.call (Ojs.get_prop_ascii x749 "join") "apply"
                 [|x749;((let x744 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x743 with
                           | Some x745 ->
                               ignore
                                 (Ojs.call x744 "push"
                                    [|(Ojs.string_to_js x745)|])
                           | None -> ());
                          x744))|])
    let (slice :
      ('tags, 'T) this -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x755 : ('tags, 'T) this) ->
        fun ?start:(x750 : float option) ->
          fun ?end_:(x751 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x758 = this_to_js Obj.magic Obj.magic x755 in
                 Ojs.call (Ojs.get_prop_ascii x758 "slice") "apply"
                   [|x758;((let x752 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x750 with
                             | Some x754 ->
                                 ignore
                                   (Ojs.call x752 "push"
                                      [|(Ojs.float_to_js x754)|])
                             | None -> ());
                            (match x751 with
                             | Some x753 ->
                                 ignore
                                   (Ojs.call x752 "push"
                                      [|(Ojs.float_to_js x753)|])
                             | None -> ());
                            x752))|])
    let cast_from = Obj.magic
  end
module ReadonlyArray =
  struct
    type 'T t =
      [ `ReadonlyArray of 'T  | 'T ArrayLike.tags_1
      | 'T IterableIterator.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x762 : Ojs.t) -> t_of_js __T_of_js x762
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x760 : __T t) -> t_to_js __T_to_js x760
    type 'T tags =
      [ `ReadonlyArray of 'T  | 'T ArrayLike.tags_1
      | 'T IterableIterator.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ReadonlyArray of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x766 : Ojs.t) -> intf_of_js __tags_of_js x766
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x764 : __tags intf) -> intf_to_js __tags_to_js x764
    let (at : ('tags, 'T) this -> index:float -> 'T option) =
      fun (x769 : ('tags, 'T) this) ->
        fun ~index:(x768 : float) ->
          Ojs.option_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x769) "at"
               [|(Ojs.float_to_js x768)|])
    let (flatMap :
      ('tags, 'T) this ->
        callback:(this:'This ->
                    value:'T ->
                      index:float ->
                        array:'T list -> [ `U1 of 'U  | `U2 of 'U t ])
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x785 : ('tags, 'T) this) ->
        fun
          ~callback:(x773 :
                      this:'This ->
                        value:'T ->
                          index:float ->
                            array:'T list -> [ `U1 of 'U  | `U2 of 'U t ])
          ->
          fun ?thisArg:(x774 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x788 = this_to_js Obj.magic Obj.magic x785 in
                 Ojs.call (Ojs.get_prop_ascii x788 "flatMap") "apply"
                   [|x788;((let x775 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x775 "push"
                                 [|(Ojs.fun_to_js 4
                                      (fun (x777 : Ojs.t) ->
                                         fun (x778 : Ojs.t) ->
                                           fun (x779 : Ojs.t) ->
                                             fun (x780 : Ojs.t) ->
                                               match x773
                                                       ~this:(Obj.magic x777)
                                                       ~value:(Obj.magic x778)
                                                       ~index:(Ojs.float_of_js
                                                                 x779)
                                                       ~array:(Ojs.list_of_js
                                                                 Obj.magic
                                                                 x780)
                                               with
                                               | `U1 x782 -> Obj.magic x782
                                               | `U2 x783 ->
                                                   t_to_js Obj.magic x783))|]);
                            (match x774 with
                             | Some x776 ->
                                 ignore
                                   (Ojs.call x775 "push" [|(Obj.magic x776)|])
                             | None -> ());
                            x775))|])
    let (flat :
      ('tags, 'T) this ->
        this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list)
      =
      fun (x794 : ('tags, 'T) this) ->
        fun ~this:(x790 : 'A) ->
          fun ?depth:(x791 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x798 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x798)
                (let x797 = this_to_js Obj.magic Obj.magic x794 in
                 Ojs.call (Ojs.get_prop_ascii x797 "flat") "apply"
                   [|x797;((let x792 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x792 "push" [|(Obj.magic x790)|]);
                            (match x791 with
                             | Some x793 ->
                                 ignore
                                   (Ojs.call x792 "push" [|(Obj.magic x793)|])
                             | None -> ());
                            x792))|])
    let (includes :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> bool)
      =
      fun (x805 : ('tags, 'T) this) ->
        fun ~searchElement:(x801 : 'T) ->
          fun ?fromIndex:(x802 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x808 = this_to_js Obj.magic Obj.magic x805 in
                 Ojs.call (Ojs.get_prop_ascii x808 "includes") "apply"
                   [|x808;((let x803 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x803 "push" [|(Obj.magic x801)|]);
                            (match x802 with
                             | Some x804 ->
                                 ignore
                                   (Ojs.call x803 "push"
                                      [|(Ojs.float_to_js x804)|])
                             | None -> ());
                            x803))|])
    let (entries : ('tags, 'T) this -> (float * 'T) IterableIterator.t) =
      fun (x809 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x812 : Ojs.t) ->
             let x813 = x812 in
             ((Ojs.float_of_js (Ojs.array_get x813 0)),
               (Obj.magic (Ojs.array_get x813 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x809) "entries" [||])
    let (keys : ('tags, 'T) this -> float IterableIterator.t) =
      fun (x814 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x814) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x818 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x818) "values" [||])
    let (find :
      ('tags, 'T) this ->
        predicate:(this:unit ->
                     value:'T -> index:float -> obj:'T list -> bool)
          -> ?thisArg:any -> unit -> 'S option)
      =
      fun (x831 : ('tags, 'T) this) ->
        fun
          ~predicate:(x822 :
                       this:unit ->
                         value:'T -> index:float -> obj:'T list -> bool)
          ->
          fun ?thisArg:(x823 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x834 = this_to_js Obj.magic Obj.magic x831 in
                 Ojs.call (Ojs.get_prop_ascii x834 "find") "apply"
                   [|x834;((let x824 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x824 "push"
                                 [|(Ojs.fun_to_js 4
                                      (fun (x826 : Ojs.t) ->
                                         fun (x827 : Ojs.t) ->
                                           fun (x828 : Ojs.t) ->
                                             fun (x829 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x822
                                                    ~this:(Ojs.unit_of_js
                                                             x826)
                                                    ~value:(Obj.magic x827)
                                                    ~index:(Ojs.float_of_js
                                                              x828)
                                                    ~obj:(Ojs.list_of_js
                                                            Obj.magic x829))))|]);
                            (match x823 with
                             | Some x825 ->
                                 ignore
                                   (Ojs.call x824 "push" [|(any_to_js x825)|])
                             | None -> ());
                            x824))|])
    let (find' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T option)
      =
      fun (x844 : ('tags, 'T) this) ->
        fun
          ~predicate:(x836 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x837 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x847 = this_to_js Obj.magic Obj.magic x844 in
                 Ojs.call (Ojs.get_prop_ascii x847 "find") "apply"
                   [|x847;((let x838 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x838 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x840 : Ojs.t) ->
                                         fun (x841 : Ojs.t) ->
                                           fun (x842 : Ojs.t) ->
                                             unknown_to_js
                                               (x836 ~value:(Obj.magic x840)
                                                  ~index:(Ojs.float_of_js
                                                            x841)
                                                  ~obj:(Ojs.list_of_js
                                                          Obj.magic x842))))|]);
                            (match x837 with
                             | Some x839 ->
                                 ignore
                                   (Ojs.call x838 "push" [|(any_to_js x839)|])
                             | None -> ());
                            x838))|])
    let (findIndex :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x857 : ('tags, 'T) this) ->
        fun
          ~predicate:(x849 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x850 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x860 = this_to_js Obj.magic Obj.magic x857 in
                 Ojs.call (Ojs.get_prop_ascii x860 "findIndex") "apply"
                   [|x860;((let x851 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x851 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x853 : Ojs.t) ->
                                         fun (x854 : Ojs.t) ->
                                           fun (x855 : Ojs.t) ->
                                             unknown_to_js
                                               (x849 ~value:(Obj.magic x853)
                                                  ~index:(Ojs.float_of_js
                                                            x854)
                                                  ~obj:(Ojs.list_of_js
                                                          Obj.magic x855))))|]);
                            (match x850 with
                             | Some x852 ->
                                 ignore
                                   (Ojs.call x851 "push" [|(any_to_js x852)|])
                             | None -> ());
                            x851))|])
    let (get_length : ('tags, 'T) this -> float) =
      fun (x861 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x861) "length")
    let (toString : ('tags, 'T) this -> string) =
      fun (x864 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x864) "toString" [||])
    let (toLocaleString : ('tags, 'T) this -> string) =
      fun (x867 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x867) "toLocaleString"
             [||])
    let (concat : ('tags, 'T) this -> items:'T ConcatArray.t list -> 'T list)
      =
      fun (x874 : ('tags, 'T) this) ->
        fun ~items:(x870 : 'T ConcatArray.t list) ->
          Ojs.list_of_js Obj.magic
            (let x877 = this_to_js Obj.magic Obj.magic x874 in
             Ojs.call (Ojs.get_prop_ascii x877 "concat") "apply"
               [|x877;((let x871 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x872 : 'T ConcatArray.t) ->
                             ignore
                               (Ojs.call x871 "push"
                                  [|(ConcatArray.t_to_js Obj.magic x872)|]))
                          x870;
                        x871))|])
    let (concat' :
      ('tags, 'T) this ->
        items:[ `U1 of 'T  | `U2 of 'T ConcatArray.t ] list -> 'T list)
      =
      fun (x885 : ('tags, 'T) this) ->
        fun ~items:(x879 : [ `U1 of 'T  | `U2 of 'T ConcatArray.t ] list) ->
          Ojs.list_of_js Obj.magic
            (let x888 = this_to_js Obj.magic Obj.magic x885 in
             Ojs.call (Ojs.get_prop_ascii x888 "concat") "apply"
               [|x888;((let x880 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun
                             (x881 :
                               [ `U1 of 'T  | `U2 of 'T ConcatArray.t ])
                             ->
                             ignore
                               (Ojs.call x880 "push"
                                  [|((match x881 with
                                      | `U1 x882 -> Obj.magic x882
                                      | `U2 x883 ->
                                          ConcatArray.t_to_js Obj.magic x883))|]))
                          x879;
                        x880))|])
    let (join : ('tags, 'T) this -> ?separator:string -> unit -> string) =
      fun (x893 : ('tags, 'T) this) ->
        fun ?separator:(x890 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x896 = this_to_js Obj.magic Obj.magic x893 in
               Ojs.call (Ojs.get_prop_ascii x896 "join") "apply"
                 [|x896;((let x891 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x890 with
                           | Some x892 ->
                               ignore
                                 (Ojs.call x891 "push"
                                    [|(Ojs.string_to_js x892)|])
                           | None -> ());
                          x891))|])
    let (slice :
      ('tags, 'T) this -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x902 : ('tags, 'T) this) ->
        fun ?start:(x897 : float option) ->
          fun ?end_:(x898 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x905 = this_to_js Obj.magic Obj.magic x902 in
                 Ojs.call (Ojs.get_prop_ascii x905 "slice") "apply"
                   [|x905;((let x899 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x897 with
                             | Some x901 ->
                                 ignore
                                   (Ojs.call x899 "push"
                                      [|(Ojs.float_to_js x901)|])
                             | None -> ());
                            (match x898 with
                             | Some x900 ->
                                 ignore
                                   (Ojs.call x899 "push"
                                      [|(Ojs.float_to_js x900)|])
                             | None -> ());
                            x899))|])
    let (indexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x911 : ('tags, 'T) this) ->
        fun ~searchElement:(x907 : 'T) ->
          fun ?fromIndex:(x908 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x914 = this_to_js Obj.magic Obj.magic x911 in
                 Ojs.call (Ojs.get_prop_ascii x914 "indexOf") "apply"
                   [|x914;((let x909 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x909 "push" [|(Obj.magic x907)|]);
                            (match x908 with
                             | Some x910 ->
                                 ignore
                                   (Ojs.call x909 "push"
                                      [|(Ojs.float_to_js x910)|])
                             | None -> ());
                            x909))|])
    let (lastIndexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x919 : ('tags, 'T) this) ->
        fun ~searchElement:(x915 : 'T) ->
          fun ?fromIndex:(x916 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x922 = this_to_js Obj.magic Obj.magic x919 in
                 Ojs.call (Ojs.get_prop_ascii x922 "lastIndexOf") "apply"
                   [|x922;((let x917 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x917 "push" [|(Obj.magic x915)|]);
                            (match x916 with
                             | Some x918 ->
                                 ignore
                                   (Ojs.call x917 "push"
                                      [|(Ojs.float_to_js x918)|])
                             | None -> ());
                            x917))|])
    let (every :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x931 : ('tags, 'T) this) ->
        fun
          ~predicate:(x923 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x924 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x934 = this_to_js Obj.magic Obj.magic x931 in
                 Ojs.call (Ojs.get_prop_ascii x934 "every") "apply"
                   [|x934;((let x925 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x925 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x927 : Ojs.t) ->
                                         fun (x928 : Ojs.t) ->
                                           fun (x929 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x923 ~value:(Obj.magic x927)
                                                  ~index:(Ojs.float_of_js
                                                            x928)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x929))))|]);
                            (match x924 with
                             | Some x926 ->
                                 ignore
                                   (Ojs.call x925 "push" [|(any_to_js x926)|])
                             | None -> ());
                            x925))|])
    let (every' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x943 : ('tags, 'T) this) ->
        fun
          ~predicate:(x935 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x936 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x946 = this_to_js Obj.magic Obj.magic x943 in
                 Ojs.call (Ojs.get_prop_ascii x946 "every") "apply"
                   [|x946;((let x937 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x937 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x939 : Ojs.t) ->
                                         fun (x940 : Ojs.t) ->
                                           fun (x941 : Ojs.t) ->
                                             unknown_to_js
                                               (x935 ~value:(Obj.magic x939)
                                                  ~index:(Ojs.float_of_js
                                                            x940)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x941))))|]);
                            (match x936 with
                             | Some x938 ->
                                 ignore
                                   (Ojs.call x937 "push" [|(any_to_js x938)|])
                             | None -> ());
                            x937))|])
    let (some :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x955 : ('tags, 'T) this) ->
        fun
          ~predicate:(x947 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x948 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x958 = this_to_js Obj.magic Obj.magic x955 in
                 Ojs.call (Ojs.get_prop_ascii x958 "some") "apply"
                   [|x958;((let x949 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x949 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x951 : Ojs.t) ->
                                         fun (x952 : Ojs.t) ->
                                           fun (x953 : Ojs.t) ->
                                             unknown_to_js
                                               (x947 ~value:(Obj.magic x951)
                                                  ~index:(Ojs.float_of_js
                                                            x952)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x953))))|]);
                            (match x948 with
                             | Some x950 ->
                                 ignore
                                   (Ojs.call x949 "push" [|(any_to_js x950)|])
                             | None -> ());
                            x949))|])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x967 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x959 :
                        value:'T -> index:float -> array:'T list -> unit)
          ->
          fun ?thisArg:(x960 : any option) ->
            fun () ->
              ignore
                (let x970 = this_to_js Obj.magic Obj.magic x967 in
                 Ojs.call (Ojs.get_prop_ascii x970 "forEach") "apply"
                   [|x970;((let x961 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x961 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x963 : Ojs.t) ->
                                         fun (x964 : Ojs.t) ->
                                           fun (x965 : Ojs.t) ->
                                             x959 ~value:(Obj.magic x963)
                                               ~index:(Ojs.float_of_js x964)
                                               ~array:(Ojs.list_of_js
                                                         Obj.magic x965)))|]);
                            (match x960 with
                             | Some x962 ->
                                 ignore
                                   (Ojs.call x961 "push" [|(any_to_js x962)|])
                             | None -> ());
                            x961))|])
    let (map :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x979 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x971 : value:'T -> index:float -> array:'T list -> 'U)
          ->
          fun ?thisArg:(x972 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x982 = this_to_js Obj.magic Obj.magic x979 in
                 Ojs.call (Ojs.get_prop_ascii x982 "map") "apply"
                   [|x982;((let x973 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x973 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x975 : Ojs.t) ->
                                         fun (x976 : Ojs.t) ->
                                           fun (x977 : Ojs.t) ->
                                             Obj.magic
                                               (x971 ~value:(Obj.magic x975)
                                                  ~index:(Ojs.float_of_js
                                                            x976)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x977))))|]);
                            (match x972 with
                             | Some x974 ->
                                 ignore
                                   (Ojs.call x973 "push" [|(any_to_js x974)|])
                             | None -> ());
                            x973))|])
    let (filter :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x992 : ('tags, 'T) this) ->
        fun
          ~predicate:(x984 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x985 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x995 = this_to_js Obj.magic Obj.magic x992 in
                 Ojs.call (Ojs.get_prop_ascii x995 "filter") "apply"
                   [|x995;((let x986 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x986 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x988 : Ojs.t) ->
                                         fun (x989 : Ojs.t) ->
                                           fun (x990 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x984 ~value:(Obj.magic x988)
                                                  ~index:(Ojs.float_of_js
                                                            x989)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x990))))|]);
                            (match x985 with
                             | Some x987 ->
                                 ignore
                                   (Ojs.call x986 "push" [|(any_to_js x987)|])
                             | None -> ());
                            x986))|])
    let (filter' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T list)
      =
      fun (x1005 : ('tags, 'T) this) ->
        fun
          ~predicate:(x997 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x998 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1008 = this_to_js Obj.magic Obj.magic x1005 in
                 Ojs.call (Ojs.get_prop_ascii x1008 "filter") "apply"
                   [|x1008;((let x999 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x999 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1001 : Ojs.t) ->
                                          fun (x1002 : Ojs.t) ->
                                            fun (x1003 : Ojs.t) ->
                                              unknown_to_js
                                                (x997
                                                   ~value:(Obj.magic x1001)
                                                   ~index:(Ojs.float_of_js
                                                             x1002)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1003))))|]);
                             (match x998 with
                              | Some x1000 ->
                                  ignore
                                    (Ojs.call x999 "push"
                                       [|(any_to_js x1000)|])
                              | None -> ());
                             x999))|])
    let (reduce :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1016 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1010 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1016) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x1011 : Ojs.t) ->
                       fun (x1012 : Ojs.t) ->
                         fun (x1013 : Ojs.t) ->
                           fun (x1014 : Ojs.t) ->
                             Obj.magic
                               (x1010 ~previousValue:(Obj.magic x1011)
                                  ~currentValue:(Obj.magic x1012)
                                  ~currentIndex:(Ojs.float_of_js x1013)
                                  ~array:(Ojs.list_of_js Obj.magic x1014))))|])
    let (reduce' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1026 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1019 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1025 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1026) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1020 : Ojs.t) ->
                         fun (x1021 : Ojs.t) ->
                           fun (x1022 : Ojs.t) ->
                             fun (x1023 : Ojs.t) ->
                               Obj.magic
                                 (x1019 ~previousValue:(Obj.magic x1020)
                                    ~currentValue:(Obj.magic x1021)
                                    ~currentIndex:(Ojs.float_of_js x1022)
                                    ~array:(Ojs.list_of_js Obj.magic x1023))));(
                   Obj.magic x1025)|])
    let (reduce'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1036 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1029 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1035 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1036) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1030 : Ojs.t) ->
                         fun (x1031 : Ojs.t) ->
                           fun (x1032 : Ojs.t) ->
                             fun (x1033 : Ojs.t) ->
                               Obj.magic
                                 (x1029 ~previousValue:(Obj.magic x1030)
                                    ~currentValue:(Obj.magic x1031)
                                    ~currentIndex:(Ojs.float_of_js x1032)
                                    ~array:(Ojs.list_of_js Obj.magic x1033))));(
                   Obj.magic x1035)|])
    let (reduceRight :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1045 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1039 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1045) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x1040 : Ojs.t) ->
                       fun (x1041 : Ojs.t) ->
                         fun (x1042 : Ojs.t) ->
                           fun (x1043 : Ojs.t) ->
                             Obj.magic
                               (x1039 ~previousValue:(Obj.magic x1040)
                                  ~currentValue:(Obj.magic x1041)
                                  ~currentIndex:(Ojs.float_of_js x1042)
                                  ~array:(Ojs.list_of_js Obj.magic x1043))))|])
    let (reduceRight' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1055 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1048 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1054 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1055) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1049 : Ojs.t) ->
                         fun (x1050 : Ojs.t) ->
                           fun (x1051 : Ojs.t) ->
                             fun (x1052 : Ojs.t) ->
                               Obj.magic
                                 (x1048 ~previousValue:(Obj.magic x1049)
                                    ~currentValue:(Obj.magic x1050)
                                    ~currentIndex:(Ojs.float_of_js x1051)
                                    ~array:(Ojs.list_of_js Obj.magic x1052))));(
                   Obj.magic x1054)|])
    let (reduceRight'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1065 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1058 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1064 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1065) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1059 : Ojs.t) ->
                         fun (x1060 : Ojs.t) ->
                           fun (x1061 : Ojs.t) ->
                             fun (x1062 : Ojs.t) ->
                               Obj.magic
                                 (x1058 ~previousValue:(Obj.magic x1059)
                                    ~currentValue:(Obj.magic x1060)
                                    ~currentIndex:(Ojs.float_of_js x1061)
                                    ~array:(Ojs.list_of_js Obj.magic x1062))));(
                   Obj.magic x1064)|])
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x1068 : ('tags, 'T) this) ->
        fun (x1071 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x1068)
               (Ojs.float_to_js x1071))
    let cast_from = Obj.magic
    let (of_ml : 'T list -> 'T t) =
      fun (x1072 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x1072)
    let (to_ml : 'T t -> 'T list) =
      fun (x1075 : 'T t) ->
        Ojs.list_of_js Obj.magic (t_to_js Obj.magic x1075)
  end
module TemplateStringsArray =
  struct
    type t =
      [ `ReadonlyArray of string  | `ReadonlyArray of string 
      | `TemplateStringsArray  | string ArrayLike.tags_1
      | string IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1079 : Ojs.t) -> t_of_js x1079
    and t_0_to_js : t_0 -> Ojs.t = fun (x1078 : t) -> t_to_js x1078
    type tags =
      [ `ReadonlyArray of string  | `ReadonlyArray of string 
      | `TemplateStringsArray  | string ArrayLike.tags_1
      | string IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `TemplateStringsArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1082 : Ojs.t) -> intf_of_js __tags_of_js x1082
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1080 : __tags intf) -> intf_to_js __tags_to_js x1080
    let (get_raw : 'tags this -> string list) =
      fun (x1084 : 'tags this) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1084) "raw")
    let (create : raw:string list -> unit -> t) =
      fun ~raw:(x1087 : string list) ->
        fun () ->
          let x1088 = Ojs.empty_obj () in
          Ojs.set_prop_ascii x1088 "raw"
            (Ojs.list_to_js Ojs.string_to_js x1087);
          t_of_js x1088
    let cast_from = Obj.magic
  end
module SyntaxError =
  struct
    type t = [ `Error  | `SyntaxError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1091 : Ojs.t) -> t_of_js x1091
    and t_0_to_js : t_0 -> Ojs.t = fun (x1090 : t) -> t_to_js x1090
    type tags = [ `Error  | `SyntaxError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `SyntaxError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1094 : Ojs.t) -> intf_of_js __tags_of_js x1094
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1092 : __tags intf) -> intf_to_js __tags_to_js x1092
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x1096 : string option) ->
        fun ?options:(x1097 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "SyntaxError")
                 (let x1098 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1096 with
                   | Some x1100 ->
                       ignore
                         (Ojs.call x1098 "push" [|(Ojs.string_to_js x1100)|])
                   | None -> ());
                  (match x1097 with
                   | Some x1099 ->
                       ignore
                         (Ojs.call x1098 "push"
                            [|(ErrorOptions.t_to_js x1099)|])
                   | None -> ());
                  x1098))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x1101 : string option) ->
        fun ?options:(x1102 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "SyntaxError") "apply"
                 [|Ojs.null;((let x1103 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1101 with
                               | Some x1105 ->
                                   ignore
                                     (Ojs.call x1103 "push"
                                        [|(Ojs.string_to_js x1105)|])
                               | None -> ());
                              (match x1102 with
                               | Some x1104 ->
                                   ignore
                                     (Ojs.call x1103 "push"
                                        [|(ErrorOptions.t_to_js x1104)|])
                               | None -> ());
                              x1103))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x1106 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "SyntaxError")
               (let x1107 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1106 with
                 | Some x1108 ->
                     ignore
                       (Ojs.call x1107 "push" [|(Ojs.string_to_js x1108)|])
                 | None -> ());
                x1107))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x1109 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "SyntaxError") "apply"
               [|Ojs.null;((let x1110 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x1109 with
                             | Some x1111 ->
                                 ignore
                                   (Ojs.call x1110 "push"
                                      [|(Ojs.string_to_js x1111)|])
                             | None -> ());
                            x1110))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "SyntaxError")
             "prototype")
    let cast_from = Obj.magic
  end
module Symbol =
  struct
    type t = [ `Symbol ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1113 : Ojs.t) -> t_of_js x1113
    and t_0_to_js : t_0 -> Ojs.t = fun (x1112 : t) -> t_to_js x1112
    type tags = [ `Symbol ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Symbol ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1116 : Ojs.t) -> intf_of_js __tags_of_js x1116
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1114 : __tags intf) -> intf_to_js __tags_to_js x1114
    let (get_description : 'tags this -> string option) =
      fun (x1118 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1118) "description")
    let (toString : 'tags this -> string) =
      fun (x1121 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1121) "toString" [||])
    let (valueOf : 'tags this -> symbol) =
      fun (x1123 : 'tags this) ->
        symbol_of_js (Ojs.call (this_to_js Obj.magic x1123) "valueOf" [||])
    let (matchAll : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "matchAll")
    let (asyncIterator : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "asyncIterator")
    let (hasInstance : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "hasInstance")
    let (isConcatSpreadable : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "isConcatSpreadable")
    let (match_ : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "match")
    let (replace : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "replace")
    let (search : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "search")
    let (species : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "species")
    let (split : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "split")
    let (toPrimitive : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "toPrimitive")
    let (toStringTag : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "toStringTag")
    let (unscopables : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "unscopables")
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "prototype")
    let (invoke :
      ?description:[ `U1 of string  | `U2 of float ] -> unit -> symbol) =
      fun ?description:(x1125 : [ `U1 of string  | `U2 of float ] option) ->
        fun () ->
          symbol_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Symbol") "apply"
               [|Ojs.null;((let x1126 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x1125 with
                             | Some x1127 ->
                                 ignore
                                   (Ojs.call x1126 "push"
                                      [|((match x1127 with
                                          | `U1 x1128 ->
                                              Ojs.string_to_js x1128
                                          | `U2 x1129 ->
                                              Ojs.float_to_js x1129))|])
                             | None -> ());
                            x1126))|])
    let (for_ : string -> symbol) =
      fun (x1130 : string) ->
        symbol_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Symbol") "for"
             [|(Ojs.string_to_js x1130)|])
    let (keyFor : symbol -> string option) =
      fun (x1131 : symbol) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Symbol") "keyFor"
             [|(symbol_to_js x1131)|])
    let (iterator : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "iterator")
    let cast_from = Obj.magic
  end
module Array =
  struct
    module AnonymousInterface0 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x1134 : Ojs.t) -> x1134
        and t_to_js : t -> Ojs.t = fun (x1133 : Ojs.t) -> x1133
        let (get_copyWithin : t -> bool) =
          fun (x1135 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1135) "copyWithin")
        let (set_copyWithin : t -> bool -> unit) =
          fun (x1136 : t) ->
            fun (x1137 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1136) "copyWithin"
                (Ojs.bool_to_js x1137)
        let (get_entries : t -> bool) =
          fun (x1138 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1138) "entries")
        let (set_entries : t -> bool -> unit) =
          fun (x1139 : t) ->
            fun (x1140 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1139) "entries"
                (Ojs.bool_to_js x1140)
        let (get_fill : t -> bool) =
          fun (x1141 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1141) "fill")
        let (set_fill : t -> bool -> unit) =
          fun (x1142 : t) ->
            fun (x1143 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1142) "fill"
                (Ojs.bool_to_js x1143)
        let (get_find : t -> bool) =
          fun (x1144 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1144) "find")
        let (set_find : t -> bool -> unit) =
          fun (x1145 : t) ->
            fun (x1146 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1145) "find"
                (Ojs.bool_to_js x1146)
        let (get_findIndex : t -> bool) =
          fun (x1147 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1147) "findIndex")
        let (set_findIndex : t -> bool -> unit) =
          fun (x1148 : t) ->
            fun (x1149 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1148) "findIndex"
                (Ojs.bool_to_js x1149)
        let (get_keys : t -> bool) =
          fun (x1150 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1150) "keys")
        let (set_keys : t -> bool -> unit) =
          fun (x1151 : t) ->
            fun (x1152 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1151) "keys"
                (Ojs.bool_to_js x1152)
        let (get_values : t -> bool) =
          fun (x1153 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1153) "values")
        let (set_values : t -> bool -> unit) =
          fun (x1154 : t) ->
            fun (x1155 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1154) "values"
                (Ojs.bool_to_js x1155)
        let (create :
          copyWithin:bool ->
            entries:bool ->
              fill:bool ->
                find:bool ->
                  findIndex:bool -> keys:bool -> values:bool -> unit -> t)
          =
          fun ~copyWithin:(x1156 : bool) ->
            fun ~entries:(x1157 : bool) ->
              fun ~fill:(x1158 : bool) ->
                fun ~find:(x1159 : bool) ->
                  fun ~findIndex:(x1160 : bool) ->
                    fun ~keys:(x1161 : bool) ->
                      fun ~values:(x1162 : bool) ->
                        fun () ->
                          let x1163 = Ojs.empty_obj () in
                          Ojs.set_prop_ascii x1163 "copyWithin"
                            (Ojs.bool_to_js x1156);
                          Ojs.set_prop_ascii x1163 "entries"
                            (Ojs.bool_to_js x1157);
                          Ojs.set_prop_ascii x1163 "fill"
                            (Ojs.bool_to_js x1158);
                          Ojs.set_prop_ascii x1163 "find"
                            (Ojs.bool_to_js x1159);
                          Ojs.set_prop_ascii x1163 "findIndex"
                            (Ojs.bool_to_js x1160);
                          Ojs.set_prop_ascii x1163 "keys"
                            (Ojs.bool_to_js x1161);
                          Ojs.set_prop_ascii x1163 "values"
                            (Ojs.bool_to_js x1162);
                          t_of_js x1163
      end
    type 'T t =
      [ `Array of 'T  | 'T ArrayLike.tags_1 | 'T IterableIterator.tags_1]
        intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1166 : Ojs.t) -> t_of_js __T_of_js x1166
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1164 : __T t) -> t_to_js __T_to_js x1164
    type 'T tags =
      [ `Array of 'T  | 'T ArrayLike.tags_1 | 'T IterableIterator.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `Array of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x1170 : Ojs.t) -> intf_of_js __tags_of_js x1170
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x1168 : __tags intf) -> intf_to_js __tags_to_js x1168
    let (at : ('tags, 'T) this -> index:float -> 'T option) =
      fun (x1173 : ('tags, 'T) this) ->
        fun ~index:(x1172 : float) ->
          Ojs.option_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1173) "at"
               [|(Ojs.float_to_js x1172)|])
    let (flatMap :
      ('tags, 'T) this ->
        callback:(this:'This ->
                    value:'T ->
                      index:float ->
                        array:'T list ->
                          [ `U1 of 'U  | `U2 of 'U ReadonlyArray.t ])
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x1189 : ('tags, 'T) this) ->
        fun
          ~callback:(x1177 :
                      this:'This ->
                        value:'T ->
                          index:float ->
                            array:'T list ->
                              [ `U1 of 'U  | `U2 of 'U ReadonlyArray.t ])
          ->
          fun ?thisArg:(x1178 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1192 = this_to_js Obj.magic Obj.magic x1189 in
                 Ojs.call (Ojs.get_prop_ascii x1192 "flatMap") "apply"
                   [|x1192;((let x1179 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1179 "push"
                                  [|(Ojs.fun_to_js 4
                                       (fun (x1181 : Ojs.t) ->
                                          fun (x1182 : Ojs.t) ->
                                            fun (x1183 : Ojs.t) ->
                                              fun (x1184 : Ojs.t) ->
                                                match x1177
                                                        ~this:(Obj.magic
                                                                 x1181)
                                                        ~value:(Obj.magic
                                                                  x1182)
                                                        ~index:(Ojs.float_of_js
                                                                  x1183)
                                                        ~array:(Ojs.list_of_js
                                                                  Obj.magic
                                                                  x1184)
                                                with
                                                | `U1 x1186 ->
                                                    Obj.magic x1186
                                                | `U2 x1187 ->
                                                    ReadonlyArray.t_to_js
                                                      Obj.magic x1187))|]);
                             (match x1178 with
                              | Some x1180 ->
                                  ignore
                                    (Ojs.call x1179 "push"
                                       [|(Obj.magic x1180)|])
                              | None -> ());
                             x1179))|])
    let (flat :
      ('tags, 'T) this ->
        this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list)
      =
      fun (x1198 : ('tags, 'T) this) ->
        fun ~this:(x1194 : 'A) ->
          fun ?depth:(x1195 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x1202 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x1202)
                (let x1201 = this_to_js Obj.magic Obj.magic x1198 in
                 Ojs.call (Ojs.get_prop_ascii x1201 "flat") "apply"
                   [|x1201;((let x1196 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1196 "push" [|(Obj.magic x1194)|]);
                             (match x1195 with
                              | Some x1197 ->
                                  ignore
                                    (Ojs.call x1196 "push"
                                       [|(Obj.magic x1197)|])
                              | None -> ());
                             x1196))|])
    let (includes :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> bool)
      =
      fun (x1209 : ('tags, 'T) this) ->
        fun ~searchElement:(x1205 : 'T) ->
          fun ?fromIndex:(x1206 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1212 = this_to_js Obj.magic Obj.magic x1209 in
                 Ojs.call (Ojs.get_prop_ascii x1212 "includes") "apply"
                   [|x1212;((let x1207 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1207 "push" [|(Obj.magic x1205)|]);
                             (match x1206 with
                              | Some x1208 ->
                                  ignore
                                    (Ojs.call x1207 "push"
                                       [|(Ojs.float_to_js x1208)|])
                              | None -> ());
                             x1207))|])
    let (entries : ('tags, 'T) this -> (float * 'T) IterableIterator.t) =
      fun (x1213 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x1216 : Ojs.t) ->
             let x1217 = x1216 in
             ((Ojs.float_of_js (Ojs.array_get x1217 0)),
               (Obj.magic (Ojs.array_get x1217 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x1213) "entries" [||])
    let (keys : ('tags, 'T) this -> float IterableIterator.t) =
      fun (x1218 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x1218) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x1222 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1222) "values" [||])
    let (find :
      ('tags, 'T) this ->
        predicate:(this:unit ->
                     value:'T -> index:float -> obj:'T list -> bool)
          -> ?thisArg:any -> unit -> 'S option)
      =
      fun (x1235 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1226 :
                       this:unit ->
                         value:'T -> index:float -> obj:'T list -> bool)
          ->
          fun ?thisArg:(x1227 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x1238 = this_to_js Obj.magic Obj.magic x1235 in
                 Ojs.call (Ojs.get_prop_ascii x1238 "find") "apply"
                   [|x1238;((let x1228 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1228 "push"
                                  [|(Ojs.fun_to_js 4
                                       (fun (x1230 : Ojs.t) ->
                                          fun (x1231 : Ojs.t) ->
                                            fun (x1232 : Ojs.t) ->
                                              fun (x1233 : Ojs.t) ->
                                                Ojs.bool_to_js
                                                  (x1226
                                                     ~this:(Ojs.unit_of_js
                                                              x1230)
                                                     ~value:(Obj.magic x1231)
                                                     ~index:(Ojs.float_of_js
                                                               x1232)
                                                     ~obj:(Ojs.list_of_js
                                                             Obj.magic x1233))))|]);
                             (match x1227 with
                              | Some x1229 ->
                                  ignore
                                    (Ojs.call x1228 "push"
                                       [|(any_to_js x1229)|])
                              | None -> ());
                             x1228))|])
    let (find' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T option)
      =
      fun (x1248 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1240 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x1241 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x1251 = this_to_js Obj.magic Obj.magic x1248 in
                 Ojs.call (Ojs.get_prop_ascii x1251 "find") "apply"
                   [|x1251;((let x1242 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1242 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1244 : Ojs.t) ->
                                          fun (x1245 : Ojs.t) ->
                                            fun (x1246 : Ojs.t) ->
                                              unknown_to_js
                                                (x1240
                                                   ~value:(Obj.magic x1244)
                                                   ~index:(Ojs.float_of_js
                                                             x1245)
                                                   ~obj:(Ojs.list_of_js
                                                           Obj.magic x1246))))|]);
                             (match x1241 with
                              | Some x1243 ->
                                  ignore
                                    (Ojs.call x1242 "push"
                                       [|(any_to_js x1243)|])
                              | None -> ());
                             x1242))|])
    let (findIndex :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x1261 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1253 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x1254 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x1264 = this_to_js Obj.magic Obj.magic x1261 in
                 Ojs.call (Ojs.get_prop_ascii x1264 "findIndex") "apply"
                   [|x1264;((let x1255 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1255 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1257 : Ojs.t) ->
                                          fun (x1258 : Ojs.t) ->
                                            fun (x1259 : Ojs.t) ->
                                              unknown_to_js
                                                (x1253
                                                   ~value:(Obj.magic x1257)
                                                   ~index:(Ojs.float_of_js
                                                             x1258)
                                                   ~obj:(Ojs.list_of_js
                                                           Obj.magic x1259))))|]);
                             (match x1254 with
                              | Some x1256 ->
                                  ignore
                                    (Ojs.call x1255 "push"
                                       [|(any_to_js x1256)|])
                              | None -> ());
                             x1255))|])
    let (fill :
      ('tags, 'T) this ->
        value:'T -> ?start:float -> ?end_:float -> unit -> ('tags, 'T) this)
      =
      fun (x1271 : ('tags, 'T) this) ->
        fun ~value:(x1265 : 'T) ->
          fun ?start:(x1266 : float option) ->
            fun ?end_:(x1267 : float option) ->
              fun () ->
                this_of_js Obj.magic Obj.magic
                  (let x1274 = this_to_js Obj.magic Obj.magic x1271 in
                   Ojs.call (Ojs.get_prop_ascii x1274 "fill") "apply"
                     [|x1274;((let x1268 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1268 "push" [|(Obj.magic x1265)|]);
                               (match x1266 with
                                | Some x1270 ->
                                    ignore
                                      (Ojs.call x1268 "push"
                                         [|(Ojs.float_to_js x1270)|])
                                | None -> ());
                               (match x1267 with
                                | Some x1269 ->
                                    ignore
                                      (Ojs.call x1268 "push"
                                         [|(Ojs.float_to_js x1269)|])
                                | None -> ());
                               x1268))|])
    let (copyWithin :
      ('tags, 'T) this ->
        target:float ->
          start:float -> ?end_:float -> unit -> ('tags, 'T) this)
      =
      fun (x1282 : ('tags, 'T) this) ->
        fun ~target:(x1277 : float) ->
          fun ~start:(x1278 : float) ->
            fun ?end_:(x1279 : float option) ->
              fun () ->
                this_of_js Obj.magic Obj.magic
                  (let x1285 = this_to_js Obj.magic Obj.magic x1282 in
                   Ojs.call (Ojs.get_prop_ascii x1285 "copyWithin") "apply"
                     [|x1285;((let x1280 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1280 "push"
                                    [|(Ojs.float_to_js x1277)|]);
                               ignore
                                 (Ojs.call x1280 "push"
                                    [|(Ojs.float_to_js x1278)|]);
                               (match x1279 with
                                | Some x1281 ->
                                    ignore
                                      (Ojs.call x1280 "push"
                                         [|(Ojs.float_to_js x1281)|])
                                | None -> ());
                               x1280))|])
    let (get_length : ('tags, 'T) this -> float) =
      fun (x1288 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x1288) "length")
    let (set_length : ('tags, 'T) this -> float -> unit) =
      fun (x1291 : ('tags, 'T) this) ->
        fun (x1292 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x1291) "length"
            (Ojs.float_to_js x1292)
    let (toString : ('tags, 'T) this -> string) =
      fun (x1295 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x1295) "toString" [||])
    let (toLocaleString : ('tags, 'T) this -> string) =
      fun (x1298 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x1298) "toLocaleString"
             [||])
    let (pop : ('tags, 'T) this -> 'T option) =
      fun (x1301 : ('tags, 'T) this) ->
        Ojs.option_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1301) "pop" [||])
    let (push : ('tags, 'T) this -> items:'T list -> float) =
      fun (x1308 : ('tags, 'T) this) ->
        fun ~items:(x1305 : 'T list) ->
          Ojs.float_of_js
            (let x1311 = this_to_js Obj.magic Obj.magic x1308 in
             Ojs.call (Ojs.get_prop_ascii x1311 "push") "apply"
               [|x1311;((let x1306 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1307 : 'T) ->
                              ignore
                                (Ojs.call x1306 "push" [|(Obj.magic x1307)|]))
                           x1305;
                         x1306))|])
    let (concat : ('tags, 'T) this -> items:'T ConcatArray.t list -> 'T list)
      =
      fun (x1316 : ('tags, 'T) this) ->
        fun ~items:(x1312 : 'T ConcatArray.t list) ->
          Ojs.list_of_js Obj.magic
            (let x1319 = this_to_js Obj.magic Obj.magic x1316 in
             Ojs.call (Ojs.get_prop_ascii x1319 "concat") "apply"
               [|x1319;((let x1313 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1314 : 'T ConcatArray.t) ->
                              ignore
                                (Ojs.call x1313 "push"
                                   [|(ConcatArray.t_to_js Obj.magic x1314)|]))
                           x1312;
                         x1313))|])
    let (concat' :
      ('tags, 'T) this ->
        items:[ `U1 of 'T  | `U2 of 'T ConcatArray.t ] list -> 'T list)
      =
      fun (x1327 : ('tags, 'T) this) ->
        fun ~items:(x1321 : [ `U1 of 'T  | `U2 of 'T ConcatArray.t ] list) ->
          Ojs.list_of_js Obj.magic
            (let x1330 = this_to_js Obj.magic Obj.magic x1327 in
             Ojs.call (Ojs.get_prop_ascii x1330 "concat") "apply"
               [|x1330;((let x1322 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun
                              (x1323 :
                                [ `U1 of 'T  | `U2 of 'T ConcatArray.t ])
                              ->
                              ignore
                                (Ojs.call x1322 "push"
                                   [|((match x1323 with
                                       | `U1 x1324 -> Obj.magic x1324
                                       | `U2 x1325 ->
                                           ConcatArray.t_to_js Obj.magic
                                             x1325))|])) x1321;
                         x1322))|])
    let (join : ('tags, 'T) this -> ?separator:string -> unit -> string) =
      fun (x1335 : ('tags, 'T) this) ->
        fun ?separator:(x1332 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x1338 = this_to_js Obj.magic Obj.magic x1335 in
               Ojs.call (Ojs.get_prop_ascii x1338 "join") "apply"
                 [|x1338;((let x1333 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1332 with
                            | Some x1334 ->
                                ignore
                                  (Ojs.call x1333 "push"
                                     [|(Ojs.string_to_js x1334)|])
                            | None -> ());
                           x1333))|])
    let (reverse : ('tags, 'T) this -> 'T list) =
      fun (x1339 : ('tags, 'T) this) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1339) "reverse" [||])
    let (shift : ('tags, 'T) this -> 'T option) =
      fun (x1343 : ('tags, 'T) this) ->
        Ojs.option_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1343) "shift" [||])
    let (slice :
      ('tags, 'T) this -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x1352 : ('tags, 'T) this) ->
        fun ?start:(x1347 : float option) ->
          fun ?end_:(x1348 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1355 = this_to_js Obj.magic Obj.magic x1352 in
                 Ojs.call (Ojs.get_prop_ascii x1355 "slice") "apply"
                   [|x1355;((let x1349 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1347 with
                              | Some x1351 ->
                                  ignore
                                    (Ojs.call x1349 "push"
                                       [|(Ojs.float_to_js x1351)|])
                              | None -> ());
                             (match x1348 with
                              | Some x1350 ->
                                  ignore
                                    (Ojs.call x1349 "push"
                                       [|(Ojs.float_to_js x1350)|])
                              | None -> ());
                             x1349))|])
    let (sort :
      ('tags, 'T) this ->
        ?compareFn:(a:'T -> b:'T -> float) -> unit -> ('tags, 'T) this)
      =
      fun (x1362 : ('tags, 'T) this) ->
        fun ?compareFn:(x1357 : (a:'T -> b:'T -> float) option) ->
          fun () ->
            this_of_js Obj.magic Obj.magic
              (let x1365 = this_to_js Obj.magic Obj.magic x1362 in
               Ojs.call (Ojs.get_prop_ascii x1365 "sort") "apply"
                 [|x1365;((let x1358 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1357 with
                            | Some x1359 ->
                                ignore
                                  (Ojs.call x1358 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x1360 : Ojs.t) ->
                                             fun (x1361 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x1359 ~a:(Obj.magic x1360)
                                                    ~b:(Obj.magic x1361))))|])
                            | None -> ());
                           x1358))|])
    let (splice :
      ('tags, 'T) this ->
        start:float -> ?deleteCount:float -> unit -> 'T list)
      =
      fun (x1372 : ('tags, 'T) this) ->
        fun ~start:(x1368 : float) ->
          fun ?deleteCount:(x1369 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1375 = this_to_js Obj.magic Obj.magic x1372 in
                 Ojs.call (Ojs.get_prop_ascii x1375 "splice") "apply"
                   [|x1375;((let x1370 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1370 "push"
                                  [|(Ojs.float_to_js x1368)|]);
                             (match x1369 with
                              | Some x1371 ->
                                  ignore
                                    (Ojs.call x1370 "push"
                                       [|(Ojs.float_to_js x1371)|])
                              | None -> ());
                             x1370))|])
    let (splice' :
      ('tags, 'T) this ->
        start:float -> deleteCount:float -> items:'T list -> 'T list)
      =
      fun (x1382 : ('tags, 'T) this) ->
        fun ~start:(x1377 : float) ->
          fun ~deleteCount:(x1378 : float) ->
            fun ~items:(x1379 : 'T list) ->
              Ojs.list_of_js Obj.magic
                (let x1385 = this_to_js Obj.magic Obj.magic x1382 in
                 Ojs.call (Ojs.get_prop_ascii x1385 "splice") "apply"
                   [|x1385;((let x1380 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1380 "push"
                                  [|(Ojs.float_to_js x1377)|]);
                             ignore
                               (Ojs.call x1380 "push"
                                  [|(Ojs.float_to_js x1378)|]);
                             List.iter
                               (fun (x1381 : 'T) ->
                                  ignore
                                    (Ojs.call x1380 "push"
                                       [|(Obj.magic x1381)|])) x1379;
                             x1380))|])
    let (unshift : ('tags, 'T) this -> items:'T list -> float) =
      fun (x1390 : ('tags, 'T) this) ->
        fun ~items:(x1387 : 'T list) ->
          Ojs.float_of_js
            (let x1393 = this_to_js Obj.magic Obj.magic x1390 in
             Ojs.call (Ojs.get_prop_ascii x1393 "unshift") "apply"
               [|x1393;((let x1388 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1389 : 'T) ->
                              ignore
                                (Ojs.call x1388 "push" [|(Obj.magic x1389)|]))
                           x1387;
                         x1388))|])
    let (indexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x1398 : ('tags, 'T) this) ->
        fun ~searchElement:(x1394 : 'T) ->
          fun ?fromIndex:(x1395 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1401 = this_to_js Obj.magic Obj.magic x1398 in
                 Ojs.call (Ojs.get_prop_ascii x1401 "indexOf") "apply"
                   [|x1401;((let x1396 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1396 "push" [|(Obj.magic x1394)|]);
                             (match x1395 with
                              | Some x1397 ->
                                  ignore
                                    (Ojs.call x1396 "push"
                                       [|(Ojs.float_to_js x1397)|])
                              | None -> ());
                             x1396))|])
    let (lastIndexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x1406 : ('tags, 'T) this) ->
        fun ~searchElement:(x1402 : 'T) ->
          fun ?fromIndex:(x1403 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1409 = this_to_js Obj.magic Obj.magic x1406 in
                 Ojs.call (Ojs.get_prop_ascii x1409 "lastIndexOf") "apply"
                   [|x1409;((let x1404 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1404 "push" [|(Obj.magic x1402)|]);
                             (match x1403 with
                              | Some x1405 ->
                                  ignore
                                    (Ojs.call x1404 "push"
                                       [|(Ojs.float_to_js x1405)|])
                              | None -> ());
                             x1404))|])
    let (every :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1418 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1410 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x1411 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1421 = this_to_js Obj.magic Obj.magic x1418 in
                 Ojs.call (Ojs.get_prop_ascii x1421 "every") "apply"
                   [|x1421;((let x1412 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1412 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1414 : Ojs.t) ->
                                          fun (x1415 : Ojs.t) ->
                                            fun (x1416 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1410
                                                   ~value:(Obj.magic x1414)
                                                   ~index:(Ojs.float_of_js
                                                             x1415)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1416))))|]);
                             (match x1411 with
                              | Some x1413 ->
                                  ignore
                                    (Ojs.call x1412 "push"
                                       [|(any_to_js x1413)|])
                              | None -> ());
                             x1412))|])
    let (every' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1430 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1422 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1423 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1433 = this_to_js Obj.magic Obj.magic x1430 in
                 Ojs.call (Ojs.get_prop_ascii x1433 "every") "apply"
                   [|x1433;((let x1424 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1424 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1426 : Ojs.t) ->
                                          fun (x1427 : Ojs.t) ->
                                            fun (x1428 : Ojs.t) ->
                                              unknown_to_js
                                                (x1422
                                                   ~value:(Obj.magic x1426)
                                                   ~index:(Ojs.float_of_js
                                                             x1427)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1428))))|]);
                             (match x1423 with
                              | Some x1425 ->
                                  ignore
                                    (Ojs.call x1424 "push"
                                       [|(any_to_js x1425)|])
                              | None -> ());
                             x1424))|])
    let (some :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1442 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1434 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1435 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1445 = this_to_js Obj.magic Obj.magic x1442 in
                 Ojs.call (Ojs.get_prop_ascii x1445 "some") "apply"
                   [|x1445;((let x1436 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1436 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1438 : Ojs.t) ->
                                          fun (x1439 : Ojs.t) ->
                                            fun (x1440 : Ojs.t) ->
                                              unknown_to_js
                                                (x1434
                                                   ~value:(Obj.magic x1438)
                                                   ~index:(Ojs.float_of_js
                                                             x1439)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1440))))|]);
                             (match x1435 with
                              | Some x1437 ->
                                  ignore
                                    (Ojs.call x1436 "push"
                                       [|(any_to_js x1437)|])
                              | None -> ());
                             x1436))|])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x1454 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1446 :
                        value:'T -> index:float -> array:'T list -> unit)
          ->
          fun ?thisArg:(x1447 : any option) ->
            fun () ->
              ignore
                (let x1457 = this_to_js Obj.magic Obj.magic x1454 in
                 Ojs.call (Ojs.get_prop_ascii x1457 "forEach") "apply"
                   [|x1457;((let x1448 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1448 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1450 : Ojs.t) ->
                                          fun (x1451 : Ojs.t) ->
                                            fun (x1452 : Ojs.t) ->
                                              x1446 ~value:(Obj.magic x1450)
                                                ~index:(Ojs.float_of_js x1451)
                                                ~array:(Ojs.list_of_js
                                                          Obj.magic x1452)))|]);
                             (match x1447 with
                              | Some x1449 ->
                                  ignore
                                    (Ojs.call x1448 "push"
                                       [|(any_to_js x1449)|])
                              | None -> ());
                             x1448))|])
    let (map :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x1466 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1458 :
                        value:'T -> index:float -> array:'T list -> 'U)
          ->
          fun ?thisArg:(x1459 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1469 = this_to_js Obj.magic Obj.magic x1466 in
                 Ojs.call (Ojs.get_prop_ascii x1469 "map") "apply"
                   [|x1469;((let x1460 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1460 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1462 : Ojs.t) ->
                                          fun (x1463 : Ojs.t) ->
                                            fun (x1464 : Ojs.t) ->
                                              Obj.magic
                                                (x1458
                                                   ~value:(Obj.magic x1462)
                                                   ~index:(Ojs.float_of_js
                                                             x1463)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1464))))|]);
                             (match x1459 with
                              | Some x1461 ->
                                  ignore
                                    (Ojs.call x1460 "push"
                                       [|(any_to_js x1461)|])
                              | None -> ());
                             x1460))|])
    let (filter :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x1479 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1471 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x1472 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1482 = this_to_js Obj.magic Obj.magic x1479 in
                 Ojs.call (Ojs.get_prop_ascii x1482 "filter") "apply"
                   [|x1482;((let x1473 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1473 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1475 : Ojs.t) ->
                                          fun (x1476 : Ojs.t) ->
                                            fun (x1477 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1471
                                                   ~value:(Obj.magic x1475)
                                                   ~index:(Ojs.float_of_js
                                                             x1476)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1477))))|]);
                             (match x1472 with
                              | Some x1474 ->
                                  ignore
                                    (Ojs.call x1473 "push"
                                       [|(any_to_js x1474)|])
                              | None -> ());
                             x1473))|])
    let (filter' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T list)
      =
      fun (x1492 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1484 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1485 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1495 = this_to_js Obj.magic Obj.magic x1492 in
                 Ojs.call (Ojs.get_prop_ascii x1495 "filter") "apply"
                   [|x1495;((let x1486 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1486 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1488 : Ojs.t) ->
                                          fun (x1489 : Ojs.t) ->
                                            fun (x1490 : Ojs.t) ->
                                              unknown_to_js
                                                (x1484
                                                   ~value:(Obj.magic x1488)
                                                   ~index:(Ojs.float_of_js
                                                             x1489)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1490))))|]);
                             (match x1485 with
                              | Some x1487 ->
                                  ignore
                                    (Ojs.call x1486 "push"
                                       [|(any_to_js x1487)|])
                              | None -> ());
                             x1486))|])
    let (reduce :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1503 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1497 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1503) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x1498 : Ojs.t) ->
                       fun (x1499 : Ojs.t) ->
                         fun (x1500 : Ojs.t) ->
                           fun (x1501 : Ojs.t) ->
                             Obj.magic
                               (x1497 ~previousValue:(Obj.magic x1498)
                                  ~currentValue:(Obj.magic x1499)
                                  ~currentIndex:(Ojs.float_of_js x1500)
                                  ~array:(Ojs.list_of_js Obj.magic x1501))))|])
    let (reduce' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1513 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1506 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1512 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1513) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1507 : Ojs.t) ->
                         fun (x1508 : Ojs.t) ->
                           fun (x1509 : Ojs.t) ->
                             fun (x1510 : Ojs.t) ->
                               Obj.magic
                                 (x1506 ~previousValue:(Obj.magic x1507)
                                    ~currentValue:(Obj.magic x1508)
                                    ~currentIndex:(Ojs.float_of_js x1509)
                                    ~array:(Ojs.list_of_js Obj.magic x1510))));(
                   Obj.magic x1512)|])
    let (reduce'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1523 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1516 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1522 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1523) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1517 : Ojs.t) ->
                         fun (x1518 : Ojs.t) ->
                           fun (x1519 : Ojs.t) ->
                             fun (x1520 : Ojs.t) ->
                               Obj.magic
                                 (x1516 ~previousValue:(Obj.magic x1517)
                                    ~currentValue:(Obj.magic x1518)
                                    ~currentIndex:(Ojs.float_of_js x1519)
                                    ~array:(Ojs.list_of_js Obj.magic x1520))));(
                   Obj.magic x1522)|])
    let (reduceRight :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1532 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1526 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1532) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x1527 : Ojs.t) ->
                       fun (x1528 : Ojs.t) ->
                         fun (x1529 : Ojs.t) ->
                           fun (x1530 : Ojs.t) ->
                             Obj.magic
                               (x1526 ~previousValue:(Obj.magic x1527)
                                  ~currentValue:(Obj.magic x1528)
                                  ~currentIndex:(Ojs.float_of_js x1529)
                                  ~array:(Ojs.list_of_js Obj.magic x1530))))|])
    let (reduceRight' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1542 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1535 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1541 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1542) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1536 : Ojs.t) ->
                         fun (x1537 : Ojs.t) ->
                           fun (x1538 : Ojs.t) ->
                             fun (x1539 : Ojs.t) ->
                               Obj.magic
                                 (x1535 ~previousValue:(Obj.magic x1536)
                                    ~currentValue:(Obj.magic x1537)
                                    ~currentIndex:(Ojs.float_of_js x1538)
                                    ~array:(Ojs.list_of_js Obj.magic x1539))));(
                   Obj.magic x1541)|])
    let (reduceRight'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1552 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1545 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1551 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1552) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1546 : Ojs.t) ->
                         fun (x1547 : Ojs.t) ->
                           fun (x1548 : Ojs.t) ->
                             fun (x1549 : Ojs.t) ->
                               Obj.magic
                                 (x1545 ~previousValue:(Obj.magic x1546)
                                    ~currentValue:(Obj.magic x1547)
                                    ~currentIndex:(Ojs.float_of_js x1548)
                                    ~array:(Ojs.list_of_js Obj.magic x1549))));(
                   Obj.magic x1551)|])
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x1555 : ('tags, 'T) this) ->
        fun (x1558 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x1555)
               (Ojs.float_to_js x1558))
    let (set : ('tags, 'T) this -> float -> 'T -> unit) =
      fun (x1559 : ('tags, 'T) this) ->
        fun (x1562 : float) ->
          fun (x1563 : 'T) ->
            Ojs.set_prop (this_to_js Obj.magic Obj.magic x1559)
              (Ojs.float_to_js x1562) (Obj.magic x1563)
    let (from : [ `U1 of 'T Iterable.t  | `U2 of 'T ArrayLike.t ] -> 'T list)
      =
      fun (x1564 : [ `U1 of 'T Iterable.t  | `U2 of 'T ArrayLike.t ]) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|((match x1564 with
                 | `U1 x1565 -> Iterable.t_to_js Obj.magic x1565
                 | `U2 x1567 -> ArrayLike.t_to_js Obj.magic x1567))|])
    let (from' :
      iterable:[ `U1 of 'T Iterable.t  | `U2 of 'T ArrayLike.t ] ->
        mapfn:(v:'T -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun
        ~iterable:(x1570 : [ `U1 of 'T Iterable.t  | `U2 of 'T ArrayLike.t ])
        ->
        fun ~mapfn:(x1571 : v:'T -> k:float -> 'U) ->
          fun ?thisArg:(x1572 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1581 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x1581 "from") "apply"
                   [|x1581;((let x1573 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1573 "push"
                                  [|((match x1570 with
                                      | `U1 x1577 ->
                                          Iterable.t_to_js Obj.magic x1577
                                      | `U2 x1579 ->
                                          ArrayLike.t_to_js Obj.magic x1579))|]);
                             ignore
                               (Ojs.call x1573 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x1575 : Ojs.t) ->
                                          fun (x1576 : Ojs.t) ->
                                            Obj.magic
                                              (x1571 ~v:(Obj.magic x1575)
                                                 ~k:(Ojs.float_of_js x1576))))|]);
                             (match x1572 with
                              | Some x1574 ->
                                  ignore
                                    (Ojs.call x1573 "push"
                                       [|(any_to_js x1574)|])
                              | None -> ());
                             x1573))|])
    let (from'' : 'T ArrayLike.t -> 'T list) =
      fun (x1583 : 'T ArrayLike.t) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|(ArrayLike.t_to_js Obj.magic x1583)|])
    let (from''' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun ~arrayLike:(x1586 : 'T ArrayLike.t) ->
        fun ~mapfn:(x1587 : v:'T -> k:float -> 'U) ->
          fun ?thisArg:(x1588 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1594 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x1594 "from") "apply"
                   [|x1594;((let x1589 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1589 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x1586)|]);
                             ignore
                               (Ojs.call x1589 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x1591 : Ojs.t) ->
                                          fun (x1592 : Ojs.t) ->
                                            Obj.magic
                                              (x1587 ~v:(Obj.magic x1591)
                                                 ~k:(Ojs.float_of_js x1592))))|]);
                             (match x1588 with
                              | Some x1590 ->
                                  ignore
                                    (Ojs.call x1589 "push"
                                       [|(any_to_js x1590)|])
                              | None -> ());
                             x1589))|])
    let (of_ : 'T list -> 'T list) =
      fun (x1596 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (let x1599 = Ojs.get_prop_ascii Ojs.global "Array" in
           Ojs.call (Ojs.get_prop_ascii x1599 "of") "apply"
             [|x1599;((let x1597 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x1598 : 'T) ->
                            ignore
                              (Ojs.call x1597 "push" [|(Obj.magic x1598)|]))
                         x1596;
                       x1597))|])
    let (create : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x1601 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
               (let x1602 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1601 with
                 | Some x1603 ->
                     ignore
                       (Ojs.call x1602 "push" [|(Ojs.float_to_js x1603)|])
                 | None -> ());
                x1602))
    let (create' : float -> 'T list) =
      fun (x1605 : float) ->
        Ojs.list_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x1605)|])
    let (create'' : 'T list -> 'T list) =
      fun (x1607 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
             (let x1608 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x1609 : 'T) ->
                   ignore (Ojs.call x1608 "push" [|(Obj.magic x1609)|]))
                x1607;
              x1608))
    let (invoke : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x1611 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
               [|Ojs.null;((let x1612 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x1611 with
                             | Some x1613 ->
                                 ignore
                                   (Ojs.call x1612 "push"
                                      [|(Ojs.float_to_js x1613)|])
                             | None -> ());
                            x1612))|])
    let (invoke' : float -> 'T list) =
      fun (x1615 : float) ->
        Ojs.list_of_js Obj.magic
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x1615)|])
    let (invoke'' : 'T list -> 'T list) =
      fun (x1617 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
             [|Ojs.null;((let x1618 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x1619 : 'T) ->
                               ignore
                                 (Ojs.call x1618 "push" [|(Obj.magic x1619)|]))
                            x1617;
                          x1618))|])
    let (isArray : any -> bool) =
      fun (x1621 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "isArray"
             [|(any_to_js x1621)|])
    let (prototype : unit -> any list) =
      fun () ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Array")
             "prototype")
    let cast_from = Obj.magic
    let (of_ml : 'T list -> 'T t) =
      fun (x1623 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x1623)
    let (to_ml : 'T t -> 'T list) =
      fun (x1626 : 'T t) ->
        Ojs.list_of_js Obj.magic (t_to_js Obj.magic x1626)
  end
module RegExpMatchArray =
  struct
    module AnonymousInterface16 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x1630 : Ojs.t) -> x1630
        and t_to_js : t -> Ojs.t = fun (x1629 : Ojs.t) -> x1629
        let (get : t -> string -> string) =
          fun (x1631 : t) ->
            fun (x1632 : string) ->
              Ojs.string_of_js
                (Ojs.get_prop (t_to_js x1631) (Ojs.string_to_js x1632))
        let (set : t -> string -> string -> unit) =
          fun (x1633 : t) ->
            fun (x1634 : string) ->
              fun (x1635 : string) ->
                Ojs.set_prop (t_to_js x1633) (Ojs.string_to_js x1634)
                  (Ojs.string_to_js x1635)
      end
    type t =
      [ `Array of string  | `Array of string  | `RegExpMatchArray 
      | string ArrayLike.tags_1 | string IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1637 : Ojs.t) -> t_of_js x1637
    and t_0_to_js : t_0 -> Ojs.t = fun (x1636 : t) -> t_to_js x1636
    type tags =
      [ `Array of string  | `Array of string  | `RegExpMatchArray 
      | string ArrayLike.tags_1 | string IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RegExpMatchArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1640 : Ojs.t) -> intf_of_js __tags_of_js x1640
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1638 : __tags intf) -> intf_to_js __tags_to_js x1638
    let (get_groups : 'tags this -> AnonymousInterface16.t) =
      fun (x1642 : 'tags this) ->
        AnonymousInterface16.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1642) "groups")
    let (set_groups : 'tags this -> AnonymousInterface16.t -> unit) =
      fun (x1644 : 'tags this) ->
        fun (x1645 : AnonymousInterface16.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1644) "groups"
            (AnonymousInterface16.t_to_js x1645)
    let (get_index : 'tags this -> float) =
      fun (x1647 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1647) "index")
    let (set_index : 'tags this -> float -> unit) =
      fun (x1649 : 'tags this) ->
        fun (x1650 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1649) "index"
            (Ojs.float_to_js x1650)
    let (get_input : 'tags this -> string) =
      fun (x1652 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1652) "input")
    let (set_input : 'tags this -> string -> unit) =
      fun (x1654 : 'tags this) ->
        fun (x1655 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1654) "input"
            (Ojs.string_to_js x1655)
    let (create :
      groups:AnonymousInterface16.t ->
        index:float -> input:string -> unit -> t)
      =
      fun ~groups:(x1657 : AnonymousInterface16.t) ->
        fun ~index:(x1658 : float) ->
          fun ~input:(x1659 : string) ->
            fun () ->
              let x1660 = Ojs.empty_obj () in
              Ojs.set_prop_ascii x1660 "groups"
                (AnonymousInterface16.t_to_js x1657);
              Ojs.set_prop_ascii x1660 "index" (Ojs.float_to_js x1658);
              Ojs.set_prop_ascii x1660 "input" (Ojs.string_to_js x1659);
              t_of_js x1660
    let cast_from = Obj.magic
  end
module RegExpExecArray =
  struct
    module AnonymousInterface16 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x1662 : Ojs.t) -> x1662
        and t_to_js : t -> Ojs.t = fun (x1661 : Ojs.t) -> x1661
        let (get : t -> string -> string) =
          fun (x1663 : t) ->
            fun (x1664 : string) ->
              Ojs.string_of_js
                (Ojs.get_prop (t_to_js x1663) (Ojs.string_to_js x1664))
        let (set : t -> string -> string -> unit) =
          fun (x1665 : t) ->
            fun (x1666 : string) ->
              fun (x1667 : string) ->
                Ojs.set_prop (t_to_js x1665) (Ojs.string_to_js x1666)
                  (Ojs.string_to_js x1667)
      end
    type t =
      [ `Array of string  | `Array of string  | `RegExpExecArray 
      | string ArrayLike.tags_1 | string IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1669 : Ojs.t) -> t_of_js x1669
    and t_0_to_js : t_0 -> Ojs.t = fun (x1668 : t) -> t_to_js x1668
    type tags =
      [ `Array of string  | `Array of string  | `RegExpExecArray 
      | string ArrayLike.tags_1 | string IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RegExpExecArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1672 : Ojs.t) -> intf_of_js __tags_of_js x1672
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1670 : __tags intf) -> intf_to_js __tags_to_js x1670
    let (get_groups : 'tags this -> AnonymousInterface16.t) =
      fun (x1674 : 'tags this) ->
        AnonymousInterface16.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1674) "groups")
    let (set_groups : 'tags this -> AnonymousInterface16.t -> unit) =
      fun (x1676 : 'tags this) ->
        fun (x1677 : AnonymousInterface16.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1676) "groups"
            (AnonymousInterface16.t_to_js x1677)
    let (get_index : 'tags this -> float) =
      fun (x1679 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1679) "index")
    let (set_index : 'tags this -> float -> unit) =
      fun (x1681 : 'tags this) ->
        fun (x1682 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1681) "index"
            (Ojs.float_to_js x1682)
    let (get_input : 'tags this -> string) =
      fun (x1684 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1684) "input")
    let (set_input : 'tags this -> string -> unit) =
      fun (x1686 : 'tags this) ->
        fun (x1687 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1686) "input"
            (Ojs.string_to_js x1687)
    let (create :
      groups:AnonymousInterface16.t ->
        index:float -> input:string -> unit -> t)
      =
      fun ~groups:(x1689 : AnonymousInterface16.t) ->
        fun ~index:(x1690 : float) ->
          fun ~input:(x1691 : string) ->
            fun () ->
              let x1692 = Ojs.empty_obj () in
              Ojs.set_prop_ascii x1692 "groups"
                (AnonymousInterface16.t_to_js x1689);
              Ojs.set_prop_ascii x1692 "index" (Ojs.float_to_js x1690);
              Ojs.set_prop_ascii x1692 "input" (Ojs.string_to_js x1691);
              t_of_js x1692
    let cast_from = Obj.magic
  end
module RegExp =
  struct
    type t = [ `RegExp ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1694 : Ojs.t) -> t_of_js x1694
    and t_0_to_js : t_0 -> Ojs.t = fun (x1693 : t) -> t_to_js x1693
    type tags = [ `RegExp ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RegExp ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1697 : Ojs.t) -> intf_of_js __tags_of_js x1697
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1695 : __tags intf) -> intf_to_js __tags_to_js x1695
    let (get_dotAll : 'tags this -> bool) =
      fun (x1699 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1699) "dotAll")
    let (get_flags : 'tags this -> string) =
      fun (x1701 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1701) "flags")
    let (get_sticky : 'tags this -> bool) =
      fun (x1703 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1703) "sticky")
    let (get_unicode : 'tags this -> bool) =
      fun (x1705 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1705) "unicode")
    let (exec : 'tags this -> string:string -> RegExpExecArray.t option) =
      fun (x1708 : 'tags this) ->
        fun ~string:(x1707 : string) ->
          Ojs.option_of_js RegExpExecArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x1708) "exec"
               [|(Ojs.string_to_js x1707)|])
    let (test : 'tags this -> string:string -> bool) =
      fun (x1712 : 'tags this) ->
        fun ~string:(x1711 : string) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x1712) "test"
               [|(Ojs.string_to_js x1711)|])
    let (get_source : 'tags this -> string) =
      fun (x1714 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1714) "source")
    let (get_global : 'tags this -> bool) =
      fun (x1716 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1716) "global")
    let (get_ignoreCase : 'tags this -> bool) =
      fun (x1718 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1718) "ignoreCase")
    let (get_multiline : 'tags this -> bool) =
      fun (x1720 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1720) "multiline")
    let (get_lastIndex : 'tags this -> float) =
      fun (x1722 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1722) "lastIndex")
    let (set_lastIndex : 'tags this -> float -> unit) =
      fun (x1724 : 'tags this) ->
        fun (x1725 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1724) "lastIndex"
            (Ojs.float_to_js x1725)
    let (compile :
      'tags this -> pattern:string -> ?flags:string -> unit -> 'tags this) =
      fun (x1731 : 'tags this) ->
        fun ~pattern:(x1727 : string) ->
          fun ?flags:(x1728 : string option) ->
            fun () ->
              this_of_js Obj.magic
                (let x1733 = this_to_js Obj.magic x1731 in
                 Ojs.call (Ojs.get_prop_ascii x1733 "compile") "apply"
                   [|x1733;((let x1729 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1729 "push"
                                  [|(Ojs.string_to_js x1727)|]);
                             (match x1728 with
                              | Some x1730 ->
                                  ignore
                                    (Ojs.call x1729 "push"
                                       [|(Ojs.string_to_js x1730)|])
                              | None -> ());
                             x1729))|])
    let (create :
      pattern:[ `U1 of t  | `U2 of string ] -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1735 : [ `U1 of t  | `U2 of string ]) ->
        fun ?flags:(x1736 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RegExp")
                 (let x1737 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x1737 "push"
                       [|((match x1735 with
                           | `U1 x1739 -> t_to_js x1739
                           | `U2 x1740 -> Ojs.string_to_js x1740))|]);
                  (match x1736 with
                   | Some x1738 ->
                       ignore
                         (Ojs.call x1737 "push" [|(Ojs.string_to_js x1738)|])
                   | None -> ());
                  x1737))
    let (invoke :
      pattern:[ `U1 of t  | `U2 of string ] -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1741 : [ `U1 of t  | `U2 of string ]) ->
        fun ?flags:(x1742 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "apply"
                 [|Ojs.null;((let x1743 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x1743 "push"
                                   [|((match x1741 with
                                       | `U1 x1745 -> t_to_js x1745
                                       | `U2 x1746 -> Ojs.string_to_js x1746))|]);
                              (match x1742 with
                               | Some x1744 ->
                                   ignore
                                     (Ojs.call x1743 "push"
                                        [|(Ojs.string_to_js x1744)|])
                               | None -> ());
                              x1743))|])
    let (create' : [ `U1 of t  | `U2 of string ] -> t) =
      fun (x1747 : [ `U1 of t  | `U2 of string ]) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "RegExp")
             [|((match x1747 with
                 | `U1 x1748 -> t_to_js x1748
                 | `U2 x1749 -> Ojs.string_to_js x1749))|])
    let (create'' : pattern:string -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1750 : string) ->
        fun ?flags:(x1751 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RegExp")
                 (let x1752 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x1752 "push" [|(Ojs.string_to_js x1750)|]);
                  (match x1751 with
                   | Some x1753 ->
                       ignore
                         (Ojs.call x1752 "push" [|(Ojs.string_to_js x1753)|])
                   | None -> ());
                  x1752))
    let (invoke' : [ `U1 of t  | `U2 of string ] -> t) =
      fun (x1754 : [ `U1 of t  | `U2 of string ]) ->
        t_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "RegExp")
             [|((match x1754 with
                 | `U1 x1755 -> t_to_js x1755
                 | `U2 x1756 -> Ojs.string_to_js x1756))|])
    let (invoke'' : pattern:string -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1757 : string) ->
        fun ?flags:(x1758 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "apply"
                 [|Ojs.null;((let x1759 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x1759 "push"
                                   [|(Ojs.string_to_js x1757)|]);
                              (match x1758 with
                               | Some x1760 ->
                                   ignore
                                     (Ojs.call x1759 "push"
                                        [|(Ojs.string_to_js x1760)|])
                               | None -> ());
                              x1759))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "prototype")
    let (_1 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$1")
    let (_2 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$2")
    let (_3 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$3")
    let (_4 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$4")
    let (_5 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$5")
    let (_6 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$6")
    let (_7 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$7")
    let (_8 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$8")
    let (_9 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$9")
    let (input : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "input")
    let (__ : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$_")
    let (lastMatch : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "lastMatch")
    let (__' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$&")
    let (lastParen : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "lastParen")
    let (__'' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$+")
    let (leftContext : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "leftContext")
    let (__''' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$`")
    let (rightContext : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "rightContext")
    let (__'''' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$'")
    let cast_from = Obj.magic
  end
module Partial =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1762 : Ojs.t) -> any_of_js x1762
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x1761 : any) -> any_to_js x1761
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1765 : Ojs.t) -> t_of_js __T_of_js x1765
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1763 : __T t) -> t_to_js __T_to_js x1763
  end
module rec
  Date:sig
         type t = [ `Date ] intf
         type t_0 = t
         [@@@js.stop ]
         type tags = [ `Date ]
         type tags_0 = tags
         [@@@js.start ]
         [@@@js.implem type tags = [ `Date ]
           type tags_0 = tags]
         type 'tags this = 'tags intf constraint 'tags = [> `Date ]
         val t_to_js : t -> Ojs.t
         val t_of_js : Ojs.t -> t
         val t_0_to_js : t_0 -> Ojs.t
         val t_0_of_js : Ojs.t -> t_0
         val toLocaleString :
           'tags this ->
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toLocaleDateString :
           'tags this ->
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toLocaleTimeString :
           'tags this ->
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toString : 'tags this -> string
         val toDateString : 'tags this -> string
         val toTimeString : 'tags this -> string
         val toLocaleString' : 'tags this -> string
         val toLocaleDateString' : 'tags this -> string
         val toLocaleTimeString' : 'tags this -> string
         val valueOf : 'tags this -> float
         val getTime : 'tags this -> float
         val getFullYear : 'tags this -> float
         val getUTCFullYear : 'tags this -> float
         val getMonth : 'tags this -> float
         val getUTCMonth : 'tags this -> float
         val getDate : 'tags this -> float
         val getUTCDate : 'tags this -> float
         val getDay : 'tags this -> float
         val getUTCDay : 'tags this -> float
         val getHours : 'tags this -> float
         val getUTCHours : 'tags this -> float
         val getMinutes : 'tags this -> float
         val getUTCMinutes : 'tags this -> float
         val getSeconds : 'tags this -> float
         val getUTCSeconds : 'tags this -> float
         val getMilliseconds : 'tags this -> float
         val getUTCMilliseconds : 'tags this -> float
         val getTimezoneOffset : 'tags this -> float
         val setTime : 'tags this -> time:float -> float
         val setMilliseconds : 'tags this -> ms:float -> float
         val setUTCMilliseconds : 'tags this -> ms:float -> float
         val setSeconds :
           'tags this -> sec:float -> ?ms:float -> unit -> float
         val setUTCSeconds :
           'tags this -> sec:float -> ?ms:float -> unit -> float
         val setMinutes :
           'tags this ->
             min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setUTCMinutes :
           'tags this ->
             min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setHours :
           'tags this ->
             hours:float ->
               ?min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setUTCHours :
           'tags this ->
             hours:float ->
               ?min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setDate : 'tags this -> date:float -> float
         val setUTCDate : 'tags this -> date:float -> float
         val setMonth :
           'tags this -> month:float -> ?date:float -> unit -> float
         val setUTCMonth :
           'tags this -> month:float -> ?date:float -> unit -> float
         val setFullYear :
           'tags this ->
             year:float -> ?month:float -> ?date:float -> unit -> float
         val setUTCFullYear :
           'tags this ->
             year:float -> ?month:float -> ?date:float -> unit -> float
         val toUTCString : 'tags this -> string
         val toISOString : 'tags this -> string
         val toJSON : 'tags this -> ?key:any -> unit -> string
         val create : [ `U1 of float  | `U2 of string  | `U3 of t ] -> t
         val create' : unit -> t
         val create'' : [ `U1 of float  | `U2 of string ] -> t
         val create''' :
           year:float ->
             month:float ->
               ?date:float ->
                 ?hours:float ->
                   ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> t
         val invoke : unit -> string
         val prototype : unit -> t
         val parse : string -> float
         val utc :
           year:float ->
             month:float ->
               ?date:float ->
                 ?hours:float ->
                   ?minutes:float ->
                     ?seconds:float -> ?ms:float -> unit -> float
         val now : unit -> float
         val cast_from : 'tags this -> t
       end =
  struct
    type t = [ `Date ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1768 : Ojs.t) -> t_of_js x1768
    and t_0_to_js : t_0 -> Ojs.t = fun (x1767 : t) -> t_to_js x1767
    type tags = [ `Date ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Date ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1771 : Ojs.t) -> intf_of_js __tags_of_js x1771
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1769 : __tags intf) -> intf_to_js __tags_to_js x1769
    let (toLocaleString :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1781 : 'tags this) ->
        fun ?locales:(x1773 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun ?options:(x1774 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1783 = this_to_js Obj.magic x1781 in
                 Ojs.call (Ojs.get_prop_ascii x1783 "toLocaleString") "apply"
                   [|x1783;((let x1775 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1773 with
                              | Some x1777 ->
                                  ignore
                                    (Ojs.call x1775 "push"
                                       [|((match x1777 with
                                           | `U1 x1778 ->
                                               Ojs.string_to_js x1778
                                           | `U2 x1779 ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x1779))|])
                              | None -> ());
                             (match x1774 with
                              | Some x1776 ->
                                  ignore
                                    (Ojs.call x1775 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1776)|])
                              | None -> ());
                             x1775))|])
    let (toLocaleDateString :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1792 : 'tags this) ->
        fun ?locales:(x1784 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun ?options:(x1785 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1794 = this_to_js Obj.magic x1792 in
                 Ojs.call (Ojs.get_prop_ascii x1794 "toLocaleDateString")
                   "apply"
                   [|x1794;((let x1786 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1784 with
                              | Some x1788 ->
                                  ignore
                                    (Ojs.call x1786 "push"
                                       [|((match x1788 with
                                           | `U1 x1789 ->
                                               Ojs.string_to_js x1789
                                           | `U2 x1790 ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x1790))|])
                              | None -> ());
                             (match x1785 with
                              | Some x1787 ->
                                  ignore
                                    (Ojs.call x1786 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1787)|])
                              | None -> ());
                             x1786))|])
    let (toLocaleTimeString :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1803 : 'tags this) ->
        fun ?locales:(x1795 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun ?options:(x1796 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1805 = this_to_js Obj.magic x1803 in
                 Ojs.call (Ojs.get_prop_ascii x1805 "toLocaleTimeString")
                   "apply"
                   [|x1805;((let x1797 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1795 with
                              | Some x1799 ->
                                  ignore
                                    (Ojs.call x1797 "push"
                                       [|((match x1799 with
                                           | `U1 x1800 ->
                                               Ojs.string_to_js x1800
                                           | `U2 x1801 ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x1801))|])
                              | None -> ());
                             (match x1796 with
                              | Some x1798 ->
                                  ignore
                                    (Ojs.call x1797 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1798)|])
                              | None -> ());
                             x1797))|])
    let (toString : 'tags this -> string) =
      fun (x1806 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1806) "toString" [||])
    let (toDateString : 'tags this -> string) =
      fun (x1808 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1808) "toDateString" [||])
    let (toTimeString : 'tags this -> string) =
      fun (x1810 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1810) "toTimeString" [||])
    let (toLocaleString' : 'tags this -> string) =
      fun (x1812 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1812) "toLocaleString" [||])
    let (toLocaleDateString' : 'tags this -> string) =
      fun (x1814 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1814) "toLocaleDateString" [||])
    let (toLocaleTimeString' : 'tags this -> string) =
      fun (x1816 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1816) "toLocaleTimeString" [||])
    let (valueOf : 'tags this -> float) =
      fun (x1818 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1818) "valueOf" [||])
    let (getTime : 'tags this -> float) =
      fun (x1820 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1820) "getTime" [||])
    let (getFullYear : 'tags this -> float) =
      fun (x1822 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1822) "getFullYear" [||])
    let (getUTCFullYear : 'tags this -> float) =
      fun (x1824 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1824) "getUTCFullYear" [||])
    let (getMonth : 'tags this -> float) =
      fun (x1826 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1826) "getMonth" [||])
    let (getUTCMonth : 'tags this -> float) =
      fun (x1828 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1828) "getUTCMonth" [||])
    let (getDate : 'tags this -> float) =
      fun (x1830 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1830) "getDate" [||])
    let (getUTCDate : 'tags this -> float) =
      fun (x1832 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1832) "getUTCDate" [||])
    let (getDay : 'tags this -> float) =
      fun (x1834 : 'tags this) ->
        Ojs.float_of_js (Ojs.call (this_to_js Obj.magic x1834) "getDay" [||])
    let (getUTCDay : 'tags this -> float) =
      fun (x1836 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1836) "getUTCDay" [||])
    let (getHours : 'tags this -> float) =
      fun (x1838 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1838) "getHours" [||])
    let (getUTCHours : 'tags this -> float) =
      fun (x1840 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1840) "getUTCHours" [||])
    let (getMinutes : 'tags this -> float) =
      fun (x1842 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1842) "getMinutes" [||])
    let (getUTCMinutes : 'tags this -> float) =
      fun (x1844 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1844) "getUTCMinutes" [||])
    let (getSeconds : 'tags this -> float) =
      fun (x1846 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1846) "getSeconds" [||])
    let (getUTCSeconds : 'tags this -> float) =
      fun (x1848 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1848) "getUTCSeconds" [||])
    let (getMilliseconds : 'tags this -> float) =
      fun (x1850 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1850) "getMilliseconds" [||])
    let (getUTCMilliseconds : 'tags this -> float) =
      fun (x1852 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1852) "getUTCMilliseconds" [||])
    let (getTimezoneOffset : 'tags this -> float) =
      fun (x1854 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1854) "getTimezoneOffset" [||])
    let (setTime : 'tags this -> time:float -> float) =
      fun (x1857 : 'tags this) ->
        fun ~time:(x1856 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1857) "setTime"
               [|(Ojs.float_to_js x1856)|])
    let (setMilliseconds : 'tags this -> ms:float -> float) =
      fun (x1860 : 'tags this) ->
        fun ~ms:(x1859 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1860) "setMilliseconds"
               [|(Ojs.float_to_js x1859)|])
    let (setUTCMilliseconds : 'tags this -> ms:float -> float) =
      fun (x1863 : 'tags this) ->
        fun ~ms:(x1862 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1863) "setUTCMilliseconds"
               [|(Ojs.float_to_js x1862)|])
    let (setSeconds : 'tags this -> sec:float -> ?ms:float -> unit -> float)
      =
      fun (x1869 : 'tags this) ->
        fun ~sec:(x1865 : float) ->
          fun ?ms:(x1866 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1871 = this_to_js Obj.magic x1869 in
                 Ojs.call (Ojs.get_prop_ascii x1871 "setSeconds") "apply"
                   [|x1871;((let x1867 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1867 "push"
                                  [|(Ojs.float_to_js x1865)|]);
                             (match x1866 with
                              | Some x1868 ->
                                  ignore
                                    (Ojs.call x1867 "push"
                                       [|(Ojs.float_to_js x1868)|])
                              | None -> ());
                             x1867))|])
    let (setUTCSeconds :
      'tags this -> sec:float -> ?ms:float -> unit -> float) =
      fun (x1876 : 'tags this) ->
        fun ~sec:(x1872 : float) ->
          fun ?ms:(x1873 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1878 = this_to_js Obj.magic x1876 in
                 Ojs.call (Ojs.get_prop_ascii x1878 "setUTCSeconds") "apply"
                   [|x1878;((let x1874 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1874 "push"
                                  [|(Ojs.float_to_js x1872)|]);
                             (match x1873 with
                              | Some x1875 ->
                                  ignore
                                    (Ojs.call x1874 "push"
                                       [|(Ojs.float_to_js x1875)|])
                              | None -> ());
                             x1874))|])
    let (setMinutes :
      'tags this -> min:float -> ?sec:float -> ?ms:float -> unit -> float) =
      fun (x1885 : 'tags this) ->
        fun ~min:(x1879 : float) ->
          fun ?sec:(x1880 : float option) ->
            fun ?ms:(x1881 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1887 = this_to_js Obj.magic x1885 in
                   Ojs.call (Ojs.get_prop_ascii x1887 "setMinutes") "apply"
                     [|x1887;((let x1882 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1882 "push"
                                    [|(Ojs.float_to_js x1879)|]);
                               (match x1880 with
                                | Some x1884 ->
                                    ignore
                                      (Ojs.call x1882 "push"
                                         [|(Ojs.float_to_js x1884)|])
                                | None -> ());
                               (match x1881 with
                                | Some x1883 ->
                                    ignore
                                      (Ojs.call x1882 "push"
                                         [|(Ojs.float_to_js x1883)|])
                                | None -> ());
                               x1882))|])
    let (setUTCMinutes :
      'tags this -> min:float -> ?sec:float -> ?ms:float -> unit -> float) =
      fun (x1894 : 'tags this) ->
        fun ~min:(x1888 : float) ->
          fun ?sec:(x1889 : float option) ->
            fun ?ms:(x1890 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1896 = this_to_js Obj.magic x1894 in
                   Ojs.call (Ojs.get_prop_ascii x1896 "setUTCMinutes")
                     "apply"
                     [|x1896;((let x1891 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1891 "push"
                                    [|(Ojs.float_to_js x1888)|]);
                               (match x1889 with
                                | Some x1893 ->
                                    ignore
                                      (Ojs.call x1891 "push"
                                         [|(Ojs.float_to_js x1893)|])
                                | None -> ());
                               (match x1890 with
                                | Some x1892 ->
                                    ignore
                                      (Ojs.call x1891 "push"
                                         [|(Ojs.float_to_js x1892)|])
                                | None -> ());
                               x1891))|])
    let (setHours :
      'tags this ->
        hours:float -> ?min:float -> ?sec:float -> ?ms:float -> unit -> float)
      =
      fun (x1905 : 'tags this) ->
        fun ~hours:(x1897 : float) ->
          fun ?min:(x1898 : float option) ->
            fun ?sec:(x1899 : float option) ->
              fun ?ms:(x1900 : float option) ->
                fun () ->
                  Ojs.float_of_js
                    (let x1907 = this_to_js Obj.magic x1905 in
                     Ojs.call (Ojs.get_prop_ascii x1907 "setHours") "apply"
                       [|x1907;((let x1901 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1901 "push"
                                      [|(Ojs.float_to_js x1897)|]);
                                 (match x1898 with
                                  | Some x1904 ->
                                      ignore
                                        (Ojs.call x1901 "push"
                                           [|(Ojs.float_to_js x1904)|])
                                  | None -> ());
                                 (match x1899 with
                                  | Some x1903 ->
                                      ignore
                                        (Ojs.call x1901 "push"
                                           [|(Ojs.float_to_js x1903)|])
                                  | None -> ());
                                 (match x1900 with
                                  | Some x1902 ->
                                      ignore
                                        (Ojs.call x1901 "push"
                                           [|(Ojs.float_to_js x1902)|])
                                  | None -> ());
                                 x1901))|])
    let (setUTCHours :
      'tags this ->
        hours:float -> ?min:float -> ?sec:float -> ?ms:float -> unit -> float)
      =
      fun (x1916 : 'tags this) ->
        fun ~hours:(x1908 : float) ->
          fun ?min:(x1909 : float option) ->
            fun ?sec:(x1910 : float option) ->
              fun ?ms:(x1911 : float option) ->
                fun () ->
                  Ojs.float_of_js
                    (let x1918 = this_to_js Obj.magic x1916 in
                     Ojs.call (Ojs.get_prop_ascii x1918 "setUTCHours")
                       "apply"
                       [|x1918;((let x1912 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1912 "push"
                                      [|(Ojs.float_to_js x1908)|]);
                                 (match x1909 with
                                  | Some x1915 ->
                                      ignore
                                        (Ojs.call x1912 "push"
                                           [|(Ojs.float_to_js x1915)|])
                                  | None -> ());
                                 (match x1910 with
                                  | Some x1914 ->
                                      ignore
                                        (Ojs.call x1912 "push"
                                           [|(Ojs.float_to_js x1914)|])
                                  | None -> ());
                                 (match x1911 with
                                  | Some x1913 ->
                                      ignore
                                        (Ojs.call x1912 "push"
                                           [|(Ojs.float_to_js x1913)|])
                                  | None -> ());
                                 x1912))|])
    let (setDate : 'tags this -> date:float -> float) =
      fun (x1920 : 'tags this) ->
        fun ~date:(x1919 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1920) "setDate"
               [|(Ojs.float_to_js x1919)|])
    let (setUTCDate : 'tags this -> date:float -> float) =
      fun (x1923 : 'tags this) ->
        fun ~date:(x1922 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1923) "setUTCDate"
               [|(Ojs.float_to_js x1922)|])
    let (setMonth :
      'tags this -> month:float -> ?date:float -> unit -> float) =
      fun (x1929 : 'tags this) ->
        fun ~month:(x1925 : float) ->
          fun ?date:(x1926 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1931 = this_to_js Obj.magic x1929 in
                 Ojs.call (Ojs.get_prop_ascii x1931 "setMonth") "apply"
                   [|x1931;((let x1927 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1927 "push"
                                  [|(Ojs.float_to_js x1925)|]);
                             (match x1926 with
                              | Some x1928 ->
                                  ignore
                                    (Ojs.call x1927 "push"
                                       [|(Ojs.float_to_js x1928)|])
                              | None -> ());
                             x1927))|])
    let (setUTCMonth :
      'tags this -> month:float -> ?date:float -> unit -> float) =
      fun (x1936 : 'tags this) ->
        fun ~month:(x1932 : float) ->
          fun ?date:(x1933 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1938 = this_to_js Obj.magic x1936 in
                 Ojs.call (Ojs.get_prop_ascii x1938 "setUTCMonth") "apply"
                   [|x1938;((let x1934 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1934 "push"
                                  [|(Ojs.float_to_js x1932)|]);
                             (match x1933 with
                              | Some x1935 ->
                                  ignore
                                    (Ojs.call x1934 "push"
                                       [|(Ojs.float_to_js x1935)|])
                              | None -> ());
                             x1934))|])
    let (setFullYear :
      'tags this ->
        year:float -> ?month:float -> ?date:float -> unit -> float)
      =
      fun (x1945 : 'tags this) ->
        fun ~year:(x1939 : float) ->
          fun ?month:(x1940 : float option) ->
            fun ?date:(x1941 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1947 = this_to_js Obj.magic x1945 in
                   Ojs.call (Ojs.get_prop_ascii x1947 "setFullYear") "apply"
                     [|x1947;((let x1942 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1942 "push"
                                    [|(Ojs.float_to_js x1939)|]);
                               (match x1940 with
                                | Some x1944 ->
                                    ignore
                                      (Ojs.call x1942 "push"
                                         [|(Ojs.float_to_js x1944)|])
                                | None -> ());
                               (match x1941 with
                                | Some x1943 ->
                                    ignore
                                      (Ojs.call x1942 "push"
                                         [|(Ojs.float_to_js x1943)|])
                                | None -> ());
                               x1942))|])
    let (setUTCFullYear :
      'tags this ->
        year:float -> ?month:float -> ?date:float -> unit -> float)
      =
      fun (x1954 : 'tags this) ->
        fun ~year:(x1948 : float) ->
          fun ?month:(x1949 : float option) ->
            fun ?date:(x1950 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1956 = this_to_js Obj.magic x1954 in
                   Ojs.call (Ojs.get_prop_ascii x1956 "setUTCFullYear")
                     "apply"
                     [|x1956;((let x1951 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1951 "push"
                                    [|(Ojs.float_to_js x1948)|]);
                               (match x1949 with
                                | Some x1953 ->
                                    ignore
                                      (Ojs.call x1951 "push"
                                         [|(Ojs.float_to_js x1953)|])
                                | None -> ());
                               (match x1950 with
                                | Some x1952 ->
                                    ignore
                                      (Ojs.call x1951 "push"
                                         [|(Ojs.float_to_js x1952)|])
                                | None -> ());
                               x1951))|])
    let (toUTCString : 'tags this -> string) =
      fun (x1957 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1957) "toUTCString" [||])
    let (toISOString : 'tags this -> string) =
      fun (x1959 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1959) "toISOString" [||])
    let (toJSON : 'tags this -> ?key:any -> unit -> string) =
      fun (x1964 : 'tags this) ->
        fun ?key:(x1961 : any option) ->
          fun () ->
            Ojs.string_of_js
              (let x1966 = this_to_js Obj.magic x1964 in
               Ojs.call (Ojs.get_prop_ascii x1966 "toJSON") "apply"
                 [|x1966;((let x1962 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1961 with
                            | Some x1963 ->
                                ignore
                                  (Ojs.call x1962 "push"
                                     [|(any_to_js x1963)|])
                            | None -> ());
                           x1962))|])
    let (create : [ `U1 of float  | `U2 of string  | `U3 of t ] -> t) =
      fun (x1967 : [ `U1 of float  | `U2 of string  | `U3 of t ]) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date")
             [|((match x1967 with
                 | `U1 x1968 -> Ojs.float_to_js x1968
                 | `U2 x1969 -> Ojs.string_to_js x1969
                 | `U3 x1970 -> t_to_js x1970))|])
    let (create' : unit -> t) =
      fun () ->
        t_of_js (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date") [||])
    let (create'' : [ `U1 of float  | `U2 of string ] -> t) =
      fun (x1971 : [ `U1 of float  | `U2 of string ]) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date")
             [|((match x1971 with
                 | `U1 x1972 -> Ojs.float_to_js x1972
                 | `U2 x1973 -> Ojs.string_to_js x1973))|])
    let (create''' :
      year:float ->
        month:float ->
          ?date:float ->
            ?hours:float ->
              ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> t)
      =
      fun ~year:(x1974 : float) ->
        fun ~month:(x1975 : float) ->
          fun ?date:(x1976 : float option) ->
            fun ?hours:(x1977 : float option) ->
              fun ?minutes:(x1978 : float option) ->
                fun ?seconds:(x1979 : float option) ->
                  fun ?ms:(x1980 : float option) ->
                    fun () ->
                      t_of_js
                        (Ojs.new_obj_arr
                           (Ojs.get_prop_ascii Ojs.global "Date")
                           (let x1981 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x1981 "push"
                                 [|(Ojs.float_to_js x1974)|]);
                            ignore
                              (Ojs.call x1981 "push"
                                 [|(Ojs.float_to_js x1975)|]);
                            (match x1976 with
                             | Some x1986 ->
                                 ignore
                                   (Ojs.call x1981 "push"
                                      [|(Ojs.float_to_js x1986)|])
                             | None -> ());
                            (match x1977 with
                             | Some x1985 ->
                                 ignore
                                   (Ojs.call x1981 "push"
                                      [|(Ojs.float_to_js x1985)|])
                             | None -> ());
                            (match x1978 with
                             | Some x1984 ->
                                 ignore
                                   (Ojs.call x1981 "push"
                                      [|(Ojs.float_to_js x1984)|])
                             | None -> ());
                            (match x1979 with
                             | Some x1983 ->
                                 ignore
                                   (Ojs.call x1981 "push"
                                      [|(Ojs.float_to_js x1983)|])
                             | None -> ());
                            (match x1980 with
                             | Some x1982 ->
                                 ignore
                                   (Ojs.call x1981 "push"
                                      [|(Ojs.float_to_js x1982)|])
                             | None -> ());
                            x1981))
    let (invoke : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Date") [||])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Date")
             "prototype")
    let (parse : string -> float) =
      fun (x1987 : string) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Date") "parse"
             [|(Ojs.string_to_js x1987)|])
    let (utc :
      year:float ->
        month:float ->
          ?date:float ->
            ?hours:float ->
              ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> float)
      =
      fun ~year:(x1988 : float) ->
        fun ~month:(x1989 : float) ->
          fun ?date:(x1990 : float option) ->
            fun ?hours:(x1991 : float option) ->
              fun ?minutes:(x1992 : float option) ->
                fun ?seconds:(x1993 : float option) ->
                  fun ?ms:(x1994 : float option) ->
                    fun () ->
                      Ojs.float_of_js
                        (let x2001 = Ojs.get_prop_ascii Ojs.global "Date" in
                         Ojs.call (Ojs.get_prop_ascii x2001 "UTC") "apply"
                           [|x2001;((let x1995 =
                                       Ojs.new_obj
                                         (Ojs.get_prop_ascii Ojs.global
                                            "Array") [||] in
                                     ignore
                                       (Ojs.call x1995 "push"
                                          [|(Ojs.float_to_js x1988)|]);
                                     ignore
                                       (Ojs.call x1995 "push"
                                          [|(Ojs.float_to_js x1989)|]);
                                     (match x1990 with
                                      | Some x2000 ->
                                          ignore
                                            (Ojs.call x1995 "push"
                                               [|(Ojs.float_to_js x2000)|])
                                      | None -> ());
                                     (match x1991 with
                                      | Some x1999 ->
                                          ignore
                                            (Ojs.call x1995 "push"
                                               [|(Ojs.float_to_js x1999)|])
                                      | None -> ());
                                     (match x1992 with
                                      | Some x1998 ->
                                          ignore
                                            (Ojs.call x1995 "push"
                                               [|(Ojs.float_to_js x1998)|])
                                      | None -> ());
                                     (match x1993 with
                                      | Some x1997 ->
                                          ignore
                                            (Ojs.call x1995 "push"
                                               [|(Ojs.float_to_js x1997)|])
                                      | None -> ());
                                     (match x1994 with
                                      | Some x1996 ->
                                          ignore
                                            (Ojs.call x1995 "push"
                                               [|(Ojs.float_to_js x1996)|])
                                      | None -> ());
                                     x1995))|])
    let (now : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Date") "now" [||])
    let cast_from = Obj.magic
  end
 and
  Intl:sig
         module RelativeTimeFormatNumeric :
         sig
           type t = [ `L_s21_always  | `L_s22_auto ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module UnicodeBCP47LocaleIdentifier :
         sig
           type t = string
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module RelativeTimeFormatStyle :
         sig
           type t = [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module ResolvedRelativeTimeFormatOptions :
         sig
           type t = [ `Intl_ResolvedRelativeTimeFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedRelativeTimeFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedRelativeTimeFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedRelativeTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_locale : 'tags this -> UnicodeBCP47LocaleIdentifier.t
           val set_locale :
             'tags this -> UnicodeBCP47LocaleIdentifier.t -> unit
           val get_style : 'tags this -> RelativeTimeFormatStyle.t
           val set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit
           val get_numeric : 'tags this -> RelativeTimeFormatNumeric.t
           val set_numeric :
             'tags this -> RelativeTimeFormatNumeric.t -> unit
           val get_numberingSystem : 'tags this -> string
           val set_numberingSystem : 'tags this -> string -> unit
           val create :
             locale:UnicodeBCP47LocaleIdentifier.t ->
               style:RelativeTimeFormatStyle.t ->
                 numeric:RelativeTimeFormatNumeric.t ->
                   numberingSystem:string -> unit -> t
           val cast_from : 'tags this -> t
         end
         module RelativeTimeFormatUnit :
         sig
           type t =
             [ `L_s101_weeks  | `L_s102_year  | `L_s103_years  | `L_s29_day 
             | `L_s31_days  | `L_s50_hour  | `L_s51_hours  | `L_s62_minute 
             | `L_s63_minutes  | `L_s64_month  | `L_s65_months 
             | `L_s81_quarter  | `L_s82_quarters  | `L_s87_second 
             | `L_s88_seconds  | `L_s99_week ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module RelativeTimeFormatPart :
         sig
           type t = [ `Intl_RelativeTimeFormatPart ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_RelativeTimeFormatPart ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_RelativeTimeFormatPart ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_RelativeTimeFormatPart ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_type : 'tags this -> string
           val set_type : 'tags this -> string -> unit
           val get_value : 'tags this -> string
           val set_value : 'tags this -> string -> unit
           val get_unit : 'tags this -> RelativeTimeFormatUnit.t
           val set_unit : 'tags this -> RelativeTimeFormatUnit.t -> unit
           val create :
             type_:string ->
               value:string -> unit:RelativeTimeFormatUnit.t -> unit -> t
           val cast_from : 'tags this -> t
         end
         module RelativeTimeFormatLocaleMatcher :
         sig
           type t = [ `L_s24_best_fit  | `L_s57_lookup ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module RelativeTimeFormatOptions :
         sig
           type t = [ `Intl_RelativeTimeFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_RelativeTimeFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_RelativeTimeFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_RelativeTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t
           val set_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit
           val get_numeric : 'tags this -> RelativeTimeFormatNumeric.t
           val set_numeric :
             'tags this -> RelativeTimeFormatNumeric.t -> unit
           val get_style : 'tags this -> RelativeTimeFormatStyle.t
           val set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit
           val create :
             localeMatcher:RelativeTimeFormatLocaleMatcher.t ->
               numeric:RelativeTimeFormatNumeric.t ->
                 style:RelativeTimeFormatStyle.t -> unit -> t
           val cast_from : 'tags this -> t
         end
         module RelativeTimeFormat :
         sig
           type t = [ `Intl_RelativeTimeFormat ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_RelativeTimeFormat ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_RelativeTimeFormat ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_RelativeTimeFormat ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val format :
             'tags this ->
               value:float -> unit:RelativeTimeFormatUnit.t -> string
           val formatToParts :
             'tags this ->
               value:float ->
                 unit:RelativeTimeFormatUnit.t ->
                   RelativeTimeFormatPart.t list
           val resolvedOptions :
             'tags this -> ResolvedRelativeTimeFormatOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:[ `U1 of UnicodeBCP47LocaleIdentifier.t 
                      | `U2 of UnicodeBCP47LocaleIdentifier.t list ]
               -> ?options:RelativeTimeFormatOptions.t -> unit -> t
           val supportedLocalesOf :
             ?locales:[ `U1 of UnicodeBCP47LocaleIdentifier.t 
                      | `U2 of UnicodeBCP47LocaleIdentifier.t list ]
               ->
               ?options:RelativeTimeFormatOptions.t ->
                 unit -> UnicodeBCP47LocaleIdentifier.t list
         end
         module PluralRuleType :
         sig
           type t = [ `L_s25_cardinal  | `L_s76_ordinal ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module LDMLPluralRule :
         sig
           type t =
             [ `L_s104_zero  | `L_s41_few  | `L_s59_many  | `L_s75_one 
             | `L_s77_other  | `L_s95_two ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module ResolvedPluralRulesOptions :
         sig
           type t = [ `Intl_ResolvedPluralRulesOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedPluralRulesOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedPluralRulesOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedPluralRulesOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_pluralCategories : 'tags this -> LDMLPluralRule.t list
           val set_pluralCategories :
             'tags this -> LDMLPluralRule.t list -> unit
           val get_type : 'tags this -> PluralRuleType.t
           val set_type : 'tags this -> PluralRuleType.t -> unit
           val get_minimumIntegerDigits : 'tags this -> float
           val set_minimumIntegerDigits : 'tags this -> float -> unit
           val get_minimumFractionDigits : 'tags this -> float
           val set_minimumFractionDigits : 'tags this -> float -> unit
           val get_maximumFractionDigits : 'tags this -> float
           val set_maximumFractionDigits : 'tags this -> float -> unit
           val get_minimumSignificantDigits : 'tags this -> float
           val set_minimumSignificantDigits : 'tags this -> float -> unit
           val get_maximumSignificantDigits : 'tags this -> float
           val set_maximumSignificantDigits : 'tags this -> float -> unit
           val create :
             locale:string ->
               pluralCategories:LDMLPluralRule.t list ->
                 type_:PluralRuleType.t ->
                   minimumIntegerDigits:float ->
                     minimumFractionDigits:float ->
                       maximumFractionDigits:float ->
                         minimumSignificantDigits:float ->
                           maximumSignificantDigits:float -> unit -> t
           val cast_from : 'tags this -> t
         end
         module PluralRulesOptions :
         sig
           type t = [ `Intl_PluralRulesOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_PluralRulesOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_PluralRulesOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_PluralRulesOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_localeMatcher :
             'tags this -> [ `L_s24_best_fit  | `L_s57_lookup ] option
           val set_localeMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s57_lookup ] 
               | `U2 of [ `L_s24_best_fit ] ] -> unit
           val get_type : 'tags this -> PluralRuleType.t option
           val set_type :
             'tags this ->
               [ `Undefined of undefined  | `U1 of PluralRuleType.t ] -> unit
           val get_minimumIntegerDigits : 'tags this -> float option
           val set_minimumIntegerDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_minimumFractionDigits : 'tags this -> float option
           val set_minimumFractionDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_maximumFractionDigits : 'tags this -> float option
           val set_maximumFractionDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_minimumSignificantDigits : 'tags this -> float option
           val set_minimumSignificantDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_maximumSignificantDigits : 'tags this -> float option
           val set_maximumSignificantDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val create :
             ?localeMatcher:[ `L_s24_best_fit  | `L_s57_lookup ] ->
               ?type_:PluralRuleType.t ->
                 ?minimumIntegerDigits:float ->
                   ?minimumFractionDigits:float ->
                     ?maximumFractionDigits:float ->
                       ?minimumSignificantDigits:float ->
                         ?maximumSignificantDigits:float -> unit -> t
           val cast_from : 'tags this -> t
         end
         module PluralRules :
         sig
           module AnonymousInterface4 :
           sig
             type t = private Ojs.t
             val t_to_js : t -> Ojs.t
             val t_of_js : Ojs.t -> t
             val get_localeMatcher :
               t -> [ `L_s24_best_fit  | `L_s57_lookup ]
             val set_localeMatcher :
               t ->
                 [ `U1 of [ `L_s57_lookup ]  | `U2 of [ `L_s24_best_fit ] ]
                   -> unit
             val create :
               localeMatcher:[ `L_s24_best_fit  | `L_s57_lookup ] ->
                 unit -> t
           end
           type t = [ `Intl_PluralRules ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_PluralRules ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_PluralRules ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_PluralRules ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val resolvedOptions : 'tags this -> ResolvedPluralRulesOptions.t
           val select : 'tags this -> n:float -> LDMLPluralRule.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:PluralRulesOptions.t -> unit -> t
           val invoke :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:PluralRulesOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:AnonymousInterface4.t -> unit -> string list
         end
         module ResolvedNumberFormatOptions :
         sig
           type t = [ `Intl_ResolvedNumberFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedNumberFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedNumberFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedNumberFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_compactDisplay :
             'tags this -> [ `L_s56_long  | `L_s89_short ]
           val set_compactDisplay :
             'tags this ->
               [ `U1 of [ `L_s89_short ]  | `U2 of [ `L_s56_long ] ] -> unit
           val get_notation :
             'tags this ->
               [ `L_s27_compact  | `L_s34_engineering  | `L_s85_scientific 
               | `L_s90_standard ]
           val set_notation :
             'tags this ->
               [ `U1 of [ `L_s90_standard ]  | `U2 of [ `L_s85_scientific ] 
               | `U3 of [ `L_s34_engineering ]  | `U4 of [ `L_s27_compact ] ]
                 -> unit
           val get_signDisplay :
             'tags this ->
               [ `L_s21_always  | `L_s22_auto  | `L_s36_exceptZero 
               | `L_s69_never ]
           val set_signDisplay :
             'tags this ->
               [ `U1 of [ `L_s22_auto ]  | `U2 of [ `L_s69_never ] 
               | `U3 of [ `L_s21_always ]  | `U4 of [ `L_s36_exceptZero ] ]
                 -> unit
           val get_unit : 'tags this -> string
           val set_unit : 'tags this -> string -> unit
           val get_unitDisplay :
             'tags this -> [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ]
           val set_unitDisplay :
             'tags this ->
               [ `U1 of [ `L_s89_short ]  | `U2 of [ `L_s56_long ] 
               | `U3 of [ `L_s68_narrow ] ] -> unit
           val get_currencyDisplay : 'tags this -> string
           val set_currencyDisplay : 'tags this -> string -> unit
           val get_currencySign : 'tags this -> string
           val set_currencySign : 'tags this -> string -> unit
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_numberingSystem : 'tags this -> string
           val set_numberingSystem : 'tags this -> string -> unit
           val get_style : 'tags this -> string
           val set_style : 'tags this -> string -> unit
           val get_currency : 'tags this -> string
           val set_currency : 'tags this -> string -> unit
           val get_minimumIntegerDigits : 'tags this -> float
           val set_minimumIntegerDigits : 'tags this -> float -> unit
           val get_minimumFractionDigits : 'tags this -> float
           val set_minimumFractionDigits : 'tags this -> float -> unit
           val get_maximumFractionDigits : 'tags this -> float
           val set_maximumFractionDigits : 'tags this -> float -> unit
           val get_minimumSignificantDigits : 'tags this -> float
           val set_minimumSignificantDigits : 'tags this -> float -> unit
           val get_maximumSignificantDigits : 'tags this -> float
           val set_maximumSignificantDigits : 'tags this -> float -> unit
           val get_useGrouping : 'tags this -> bool
           val set_useGrouping : 'tags this -> bool -> unit
           val create :
             compactDisplay:[ `L_s56_long  | `L_s89_short ] ->
               notation:[ `L_s27_compact  | `L_s34_engineering 
                        | `L_s85_scientific  | `L_s90_standard ]
                 ->
                 signDisplay:[ `L_s21_always  | `L_s22_auto 
                             | `L_s36_exceptZero  | `L_s69_never ]
                   ->
                   unit:string ->
                     unitDisplay:[ `L_s56_long  | `L_s68_narrow 
                                 | `L_s89_short ]
                       ->
                       currencyDisplay:string ->
                         currencySign:string ->
                           locale:string ->
                             numberingSystem:string ->
                               style:string ->
                                 currency:string ->
                                   minimumIntegerDigits:float ->
                                     minimumFractionDigits:float ->
                                       maximumFractionDigits:float ->
                                         minimumSignificantDigits:float ->
                                           maximumSignificantDigits:float ->
                                             useGrouping:bool -> unit -> t
           val cast_from : 'tags this -> t
         end
         module ES2020NumberFormatPartType :
         sig
           type t =
             [ `L_s27_compact  | `L_s37_exponentInteger 
             | `L_s38_exponentMinusSign  | `L_s39_exponentSeparator 
             | `L_s96_unit  | `L_s97_unknown ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module ES2018NumberFormatPartType :
         sig
           type t =
             [ `L_s26_code  | `L_s28_currency  | `L_s32_decimal 
             | `L_s42_fraction  | `L_s45_group  | `L_s52_infinity 
             | `L_s53_integer  | `L_s55_literal  | `L_s61_minusSign 
             | `L_s66_name  | `L_s67_nan  | `L_s78_percent 
             | `L_s79_percentSign  | `L_s80_plusSign  | `L_s92_symbol ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module NumberFormatPartTypes :
         sig
           type t =
             [ `L_s26_code  | `L_s27_compact  | `L_s28_currency 
             | `L_s32_decimal  | `L_s37_exponentInteger 
             | `L_s38_exponentMinusSign  | `L_s39_exponentSeparator 
             | `L_s42_fraction  | `L_s45_group  | `L_s52_infinity 
             | `L_s53_integer  | `L_s55_literal  | `L_s61_minusSign 
             | `L_s66_name  | `L_s67_nan  | `L_s78_percent 
             | `L_s79_percentSign  | `L_s80_plusSign  | `L_s92_symbol 
             | `L_s96_unit  | `L_s97_unknown ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module NumberFormatPart :
         sig
           type t = [ `Intl_NumberFormatPart ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_NumberFormatPart ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_NumberFormatPart ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_NumberFormatPart ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_type : 'tags this -> NumberFormatPartTypes.t
           val set_type : 'tags this -> NumberFormatPartTypes.t -> unit
           val get_value : 'tags this -> string
           val set_value : 'tags this -> string -> unit
           val create :
             type_:NumberFormatPartTypes.t -> value:string -> unit -> t
           val cast_from : 'tags this -> t
         end
         module NumberFormatOptions :
         sig
           type t = [ `Intl_NumberFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_NumberFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_NumberFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_NumberFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_compactDisplay :
             'tags this -> [ `L_s56_long  | `L_s89_short ] option
           val set_compactDisplay :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s89_short ] 
               | `U2 of [ `L_s56_long ] ] -> unit
           val get_notation :
             'tags this ->
               [ `L_s27_compact  | `L_s34_engineering  | `L_s85_scientific 
               | `L_s90_standard ] option
           val set_notation :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s90_standard ] 
               | `U2 of [ `L_s85_scientific ] 
               | `U3 of [ `L_s34_engineering ]  | `U4 of [ `L_s27_compact ] ]
                 -> unit
           val get_signDisplay :
             'tags this ->
               [ `L_s21_always  | `L_s22_auto  | `L_s36_exceptZero 
               | `L_s69_never ] option
           val set_signDisplay :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s22_auto ] 
               | `U2 of [ `L_s69_never ]  | `U3 of [ `L_s21_always ] 
               | `U4 of [ `L_s36_exceptZero ] ] -> unit
           val get_unit : 'tags this -> string option
           val set_unit :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_unitDisplay :
             'tags this ->
               [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option
           val set_unitDisplay :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s89_short ] 
               | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s68_narrow ] ] -> 
                 unit
           val get_currencyDisplay : 'tags this -> string option
           val set_currencyDisplay :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_currencySign : 'tags this -> string option
           val set_currencySign :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_localeMatcher : 'tags this -> string option
           val set_localeMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_style : 'tags this -> string option
           val set_style :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_currency : 'tags this -> string option
           val set_currency :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_currencySign' : 'tags this -> string option
           val set_currencySign' :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_useGrouping : 'tags this -> bool option
           val set_useGrouping :
             'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit
           val get_minimumIntegerDigits : 'tags this -> float option
           val set_minimumIntegerDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_minimumFractionDigits : 'tags this -> float option
           val set_minimumFractionDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_maximumFractionDigits : 'tags this -> float option
           val set_maximumFractionDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_minimumSignificantDigits : 'tags this -> float option
           val set_minimumSignificantDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_maximumSignificantDigits : 'tags this -> float option
           val set_maximumSignificantDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val create :
             ?compactDisplay:[ `L_s56_long  | `L_s89_short ] ->
               ?notation:[ `L_s27_compact  | `L_s34_engineering 
                         | `L_s85_scientific  | `L_s90_standard ]
                 ->
                 ?signDisplay:[ `L_s21_always  | `L_s22_auto 
                              | `L_s36_exceptZero  | `L_s69_never ]
                   ->
                   ?unit:string ->
                     ?unitDisplay:[ `L_s56_long  | `L_s68_narrow 
                                  | `L_s89_short ]
                       ->
                       ?currencyDisplay:string ->
                         ?currencySign:string ->
                           ?localeMatcher:string ->
                             ?style:string ->
                               ?currency:string ->
                                 ?currencySign:string ->
                                   ?useGrouping:bool ->
                                     ?minimumIntegerDigits:float ->
                                       ?minimumFractionDigits:float ->
                                         ?maximumFractionDigits:float ->
                                           ?minimumSignificantDigits:float ->
                                             ?maximumSignificantDigits:float
                                               -> unit -> t
           val cast_from : 'tags this -> t
         end
         module NumberFormat :
         sig
           type t = [ `Intl_NumberFormat ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_NumberFormat ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_NumberFormat ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_NumberFormat ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val formatRange :
             'tags this ->
               startDate:[ `U1 of float  | `U2 of bigint ] ->
                 endDate:[ `U1 of float  | `U2 of bigint ] -> string
           val formatRangeToParts :
             'tags this ->
               startDate:[ `U1 of float  | `U2 of bigint ] ->
                 endDate:[ `U1 of float  | `U2 of bigint ] ->
                   NumberFormatPart.t list
           val format :
             'tags this -> value:[ `U1 of float  | `U2 of bigint ] -> string
           val resolvedOptions : 'tags this -> ResolvedNumberFormatOptions.t
           val formatToParts :
             'tags this ->
               ?number:[ `U1 of float  | `U2 of bigint ] ->
                 unit -> NumberFormatPart.t list
           val format' : 'tags this -> value:float -> string
           val resolvedOptions' : 'tags this -> ResolvedNumberFormatOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:NumberFormatOptions.t -> unit -> t
           val invoke :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:NumberFormatOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:NumberFormatOptions.t -> unit -> string list
         end
         module LocaleHourCycleKey :
         sig
           type t = [ `L_s46_h11  | `L_s47_h12  | `L_s48_h23  | `L_s49_h24 ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module LocaleCollationCaseFirst :
         sig
           type t = [ `L_s40_false  | `L_s58_lower  | `L_s98_upper ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module LocaleOptions :
         sig
           type t = [ `Intl_LocaleOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_LocaleOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_LocaleOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_LocaleOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_baseName : 'tags this -> string
           val set_baseName : 'tags this -> string -> unit
           val get_calendar : 'tags this -> string
           val set_calendar : 'tags this -> string -> unit
           val get_caseFirst : 'tags this -> LocaleCollationCaseFirst.t
           val set_caseFirst :
             'tags this -> LocaleCollationCaseFirst.t -> unit
           val get_collation : 'tags this -> string
           val set_collation : 'tags this -> string -> unit
           val get_hourCycle : 'tags this -> LocaleHourCycleKey.t
           val set_hourCycle : 'tags this -> LocaleHourCycleKey.t -> unit
           val get_language : 'tags this -> string
           val set_language : 'tags this -> string -> unit
           val get_numberingSystem : 'tags this -> string
           val set_numberingSystem : 'tags this -> string -> unit
           val get_numeric : 'tags this -> bool
           val set_numeric : 'tags this -> bool -> unit
           val get_region : 'tags this -> string
           val set_region : 'tags this -> string -> unit
           val get_script : 'tags this -> string
           val set_script : 'tags this -> string -> unit
           val create :
             baseName:string ->
               calendar:string ->
                 caseFirst:LocaleCollationCaseFirst.t ->
                   collation:string ->
                     hourCycle:LocaleHourCycleKey.t ->
                       language:string ->
                         numberingSystem:string ->
                           numeric:bool ->
                             region:string -> script:string -> unit -> t
           val cast_from : 'tags this -> t
         end
         module BCP47LanguageTag :
         sig
           type t = string
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module Locale :
         sig
           type t = [ `Intl_Locale  | `Intl_LocaleOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_Locale  | `Intl_LocaleOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_Locale  | `Intl_LocaleOptions ]
             type tags_0 = tags]
           type 'tags this = 'tags intf constraint 'tags = [> `Intl_Locale ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val maximize : 'tags this -> t
           val minimize : 'tags this -> t
           val toString : 'tags this -> BCP47LanguageTag.t
           val cast_from : 'tags this -> t
           val create :
             ?tag:BCP47LanguageTag.t -> ?options:LocaleOptions.t -> unit -> t
         end
         module DisplayNamesOptions :
         sig
           type t = [ `Intl_DisplayNamesOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DisplayNamesOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DisplayNamesOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DisplayNamesOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_locale : 'tags this -> UnicodeBCP47LocaleIdentifier.t
           val set_locale :
             'tags this -> UnicodeBCP47LocaleIdentifier.t -> unit
           val get_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t
           val set_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit
           val get_style : 'tags this -> RelativeTimeFormatStyle.t
           val set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit
           val get_type :
             'tags this ->
               [ `L_s28_currency  | `L_s54_language  | `L_s83_region 
               | `L_s86_script ]
           val set_type :
             'tags this ->
               [ `U1 of [ `L_s54_language ]  | `U2 of [ `L_s83_region ] 
               | `U3 of [ `L_s86_script ]  | `U4 of [ `L_s28_currency ] ] ->
                 unit
           val get_fallback : 'tags this -> [ `L_s26_code  | `L_s70_none ]
           val set_fallback :
             'tags this ->
               [ `U1 of [ `L_s26_code ]  | `U2 of [ `L_s70_none ] ] -> unit
           val create :
             locale:UnicodeBCP47LocaleIdentifier.t ->
               localeMatcher:RelativeTimeFormatLocaleMatcher.t ->
                 style:RelativeTimeFormatStyle.t ->
                   type_:[ `L_s28_currency  | `L_s54_language 
                         | `L_s83_region  | `L_s86_script ]
                     -> fallback:[ `L_s26_code  | `L_s70_none ] -> unit -> t
           val cast_from : 'tags this -> t
         end
         module DisplayNames :
         sig
           module AnonymousInterface2 :
           sig
             type t = private Ojs.t
             val t_to_js : t -> Ojs.t
             val t_of_js : Ojs.t -> t
             val get_localeMatcher : t -> RelativeTimeFormatLocaleMatcher.t
             val set_localeMatcher :
               t -> RelativeTimeFormatLocaleMatcher.t -> unit
             val create :
               localeMatcher:RelativeTimeFormatLocaleMatcher.t -> unit -> t
           end
           type t = [ `Intl_DisplayNames ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DisplayNames ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DisplayNames ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DisplayNames ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val of_ : 'tags this -> code:string -> string option
           val resolvedOptions : 'tags this -> DisplayNamesOptions.t
           val cast_from : 'tags this -> t
           val prototype : unit -> t
           val create :
             ?locales:[ `U1 of BCP47LanguageTag.t 
                      | `U2 of BCP47LanguageTag.t list ]
               -> ?options:DisplayNamesOptions.t Partial.t -> unit -> t
           val supportedLocalesOf :
             locales:[ `U1 of BCP47LanguageTag.t 
                     | `U2 of BCP47LanguageTag.t list ]
               ->
               ?options:AnonymousInterface2.t ->
                 unit -> BCP47LanguageTag.t list
         end
         module ResolvedDateTimeFormatOptions :
         sig
           type t = [ `Intl_ResolvedDateTimeFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedDateTimeFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedDateTimeFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedDateTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_formatMatcher :
             'tags this -> [ `L_s23_basic  | `L_s24_best_fit ]
           val set_formatMatcher :
             'tags this ->
               [ `U1 of [ `L_s23_basic ]  | `U2 of [ `L_s24_best_fit ] 
               | `U3 of [ `L_s24_best_fit ] ] -> unit
           val get_dateStyle :
             'tags this ->
               [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
               | `L_s89_short ]
           val set_dateStyle :
             'tags this ->
               [ `U1 of [ `L_s44_full ]  | `U2 of [ `L_s56_long ] 
               | `U3 of [ `L_s60_medium ]  | `U4 of [ `L_s89_short ] ] ->
                 unit
           val get_timeStyle :
             'tags this ->
               [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
               | `L_s89_short ]
           val set_timeStyle :
             'tags this ->
               [ `U1 of [ `L_s44_full ]  | `U2 of [ `L_s56_long ] 
               | `U3 of [ `L_s60_medium ]  | `U4 of [ `L_s89_short ] ] ->
                 unit
           val get_hourCycle :
             'tags this ->
               [ `L_s46_h11  | `L_s47_h12  | `L_s48_h23  | `L_s49_h24 ]
           val set_hourCycle :
             'tags this ->
               [ `U1 of [ `L_s46_h11 ]  | `U2 of [ `L_s47_h12 ] 
               | `U3 of [ `L_s48_h23 ]  | `U4 of [ `L_s49_h24 ] ] -> 
                 unit
           val get_dayPeriod :
             'tags this -> [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ]
           val set_dayPeriod :
             'tags this ->
               [ `U1 of [ `L_s68_narrow ]  | `U2 of [ `L_s89_short ] 
               | `U3 of [ `L_s56_long ] ] -> unit
           val get_fractionalSecondDigits :
             'tags this -> [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ]
           val set_fractionalSecondDigits :
             'tags this ->
               [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
               | `U4 of [ `L_n_3 ] ] -> unit
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_calendar : 'tags this -> string
           val set_calendar : 'tags this -> string -> unit
           val get_numberingSystem : 'tags this -> string
           val set_numberingSystem : 'tags this -> string -> unit
           val get_timeZone : 'tags this -> string
           val set_timeZone : 'tags this -> string -> unit
           val get_hour12 : 'tags this -> bool
           val set_hour12 : 'tags this -> bool -> unit
           val get_weekday : 'tags this -> string
           val set_weekday : 'tags this -> string -> unit
           val get_era : 'tags this -> string
           val set_era : 'tags this -> string -> unit
           val get_year : 'tags this -> string
           val set_year : 'tags this -> string -> unit
           val get_month : 'tags this -> string
           val set_month : 'tags this -> string -> unit
           val get_day : 'tags this -> string
           val set_day : 'tags this -> string -> unit
           val get_hour : 'tags this -> string
           val set_hour : 'tags this -> string -> unit
           val get_minute : 'tags this -> string
           val set_minute : 'tags this -> string -> unit
           val get_second : 'tags this -> string
           val set_second : 'tags this -> string -> unit
           val get_timeZoneName : 'tags this -> string
           val set_timeZoneName : 'tags this -> string -> unit
           val create :
             formatMatcher:[ `L_s23_basic  | `L_s24_best_fit ] ->
               dateStyle:[ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                         | `L_s89_short ]
                 ->
                 timeStyle:[ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                           | `L_s89_short ]
                   ->
                   hourCycle:[ `L_s46_h11  | `L_s47_h12  | `L_s48_h23 
                             | `L_s49_h24 ]
                     ->
                     dayPeriod:[ `L_s56_long  | `L_s68_narrow 
                               | `L_s89_short ]
                       ->
                       fractionalSecondDigits:[ `L_n_0  | `L_n_1  | `L_n_2 
                                              | `L_n_3 ]
                         ->
                         locale:string ->
                           calendar:string ->
                             numberingSystem:string ->
                               timeZone:string ->
                                 hour12:bool ->
                                   weekday:string ->
                                     era:string ->
                                       year:string ->
                                         month:string ->
                                           day:string ->
                                             hour:string ->
                                               minute:string ->
                                                 second:string ->
                                                   timeZoneName:string ->
                                                     unit -> t
           val cast_from : 'tags this -> t
         end
         module DateTimeFormatPartTypes :
         sig
           type t =
             [ `L_s100_weekday  | `L_s102_year  | `L_s29_day 
             | `L_s30_dayPeriod  | `L_s35_era  | `L_s50_hour 
             | `L_s55_literal  | `L_s62_minute  | `L_s64_month 
             | `L_s87_second  | `L_s93_timeZoneName ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module DateTimeFormatPart :
         sig
           type t = [ `Intl_DateTimeFormatPart ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DateTimeFormatPart ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DateTimeFormatPart ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DateTimeFormatPart ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_type : 'tags this -> DateTimeFormatPartTypes.t
           val set_type : 'tags this -> DateTimeFormatPartTypes.t -> unit
           val get_value : 'tags this -> string
           val set_value : 'tags this -> string -> unit
           val create :
             type_:DateTimeFormatPartTypes.t -> value:string -> unit -> t
           val cast_from : 'tags this -> t
         end
         module DateTimeFormatOptions :
         sig
           type t = [ `Intl_DateTimeFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DateTimeFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DateTimeFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DateTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_formatMatcher :
             'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] option
           val set_formatMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s23_basic ] 
               | `U2 of [ `L_s24_best_fit ]  | `U3 of [ `L_s24_best_fit ] ]
                 -> unit
           val get_dateStyle :
             'tags this ->
               [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
               | `L_s89_short ] option
           val set_dateStyle :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
               | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
               | `U4 of [ `L_s89_short ] ] -> unit
           val get_timeStyle :
             'tags this ->
               [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
               | `L_s89_short ] option
           val set_timeStyle :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
               | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
               | `U4 of [ `L_s89_short ] ] -> unit
           val get_dayPeriod :
             'tags this ->
               [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option
           val set_dayPeriod :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s68_narrow ] 
               | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s56_long ] ] -> 
                 unit
           val get_fractionalSecondDigits :
             'tags this -> [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ] option
           val set_fractionalSecondDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_n_0 ] 
               | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
               | `U4 of [ `L_n_3 ] ] -> unit
           val get_calendar : 'tags this -> string option
           val set_calendar :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_dayPeriod' :
             'tags this ->
               [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option
           val set_dayPeriod' :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s68_narrow ] 
               | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s56_long ] ] -> 
                 unit
           val get_numberingSystem : 'tags this -> string option
           val set_numberingSystem :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_dateStyle' :
             'tags this ->
               [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
               | `L_s89_short ] option
           val set_dateStyle' :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
               | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
               | `U4 of [ `L_s89_short ] ] -> unit
           val get_timeStyle' :
             'tags this ->
               [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
               | `L_s89_short ] option
           val set_timeStyle' :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
               | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
               | `U4 of [ `L_s89_short ] ] -> unit
           val get_hourCycle :
             'tags this ->
               [ `L_s46_h11  | `L_s47_h12  | `L_s48_h23  | `L_s49_h24 ]
                 option
           val set_hourCycle :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s46_h11 ] 
               | `U2 of [ `L_s47_h12 ]  | `U3 of [ `L_s48_h23 ] 
               | `U4 of [ `L_s49_h24 ] ] -> unit
           val get_localeMatcher :
             'tags this -> [ `L_s24_best_fit  | `L_s57_lookup ] option
           val set_localeMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s24_best_fit ] 
               | `U2 of [ `L_s57_lookup ] ] -> unit
           val get_weekday :
             'tags this ->
               [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option
           val set_weekday :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s56_long ] 
               | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s68_narrow ] ] ->
                 unit
           val get_era :
             'tags this ->
               [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option
           val set_era :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s56_long ] 
               | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s68_narrow ] ] ->
                 unit
           val get_year :
             'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option
           val set_year :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_month :
             'tags this ->
               [ `L_s0_2_digit  | `L_s56_long  | `L_s68_narrow 
               | `L_s73_numeric  | `L_s89_short ] option
           val set_month :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
               | `U2 of [ `L_s0_2_digit ]  | `U3 of [ `L_s56_long ] 
               | `U4 of [ `L_s89_short ]  | `U5 of [ `L_s68_narrow ] ] ->
                 unit
           val get_day :
             'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option
           val set_day :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_hour :
             'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option
           val set_hour :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_minute :
             'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option
           val set_minute :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_second :
             'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option
           val set_second :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_timeZoneName :
             'tags this -> [ `L_s56_long  | `L_s89_short ] option
           val set_timeZoneName :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s56_long ] 
               | `U2 of [ `L_s89_short ] ] -> unit
           val get_formatMatcher' :
             'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] option
           val set_formatMatcher' :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s24_best_fit ] 
               | `U2 of [ `L_s23_basic ] ] -> unit
           val get_hour12 : 'tags this -> bool option
           val set_hour12 :
             'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit
           val get_timeZone : 'tags this -> string option
           val set_timeZone :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val create :
             ?formatMatcher:[ `L_s23_basic  | `L_s24_best_fit ] ->
               ?dateStyle:[ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                          | `L_s89_short ]
                 ->
                 ?timeStyle:[ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                            | `L_s89_short ]
                   ->
                   ?dayPeriod:[ `L_s56_long  | `L_s68_narrow 
                              | `L_s89_short ]
                     ->
                     ?fractionalSecondDigits:[ `L_n_0  | `L_n_1  | `L_n_2 
                                             | `L_n_3 ]
                       ->
                       ?calendar:string ->
                         ?dayPeriod:[ `L_s56_long  | `L_s68_narrow 
                                    | `L_s89_short ]
                           ->
                           ?numberingSystem:string ->
                             ?dateStyle:[ `L_s44_full  | `L_s56_long 
                                        | `L_s60_medium  | `L_s89_short ]
                               ->
                               ?timeStyle:[ `L_s44_full  | `L_s56_long 
                                          | `L_s60_medium  | `L_s89_short ]
                                 ->
                                 ?hourCycle:[ `L_s46_h11  | `L_s47_h12 
                                            | `L_s48_h23  | `L_s49_h24 ]
                                   ->
                                   ?localeMatcher:[ `L_s24_best_fit 
                                                  | `L_s57_lookup ]
                                     ->
                                     ?weekday:[ `L_s56_long  | `L_s68_narrow 
                                              | `L_s89_short ]
                                       ->
                                       ?era:[ `L_s56_long  | `L_s68_narrow 
                                            | `L_s89_short ]
                                         ->
                                         ?year:[ `L_s0_2_digit 
                                               | `L_s73_numeric ]
                                           ->
                                           ?month:[ `L_s0_2_digit 
                                                  | `L_s56_long 
                                                  | `L_s68_narrow 
                                                  | `L_s73_numeric 
                                                  | `L_s89_short ]
                                             ->
                                             ?day:[ `L_s0_2_digit 
                                                  | `L_s73_numeric ]
                                               ->
                                               ?hour:[ `L_s0_2_digit 
                                                     | `L_s73_numeric ]
                                                 ->
                                                 ?minute:[ `L_s0_2_digit 
                                                         | `L_s73_numeric ]
                                                   ->
                                                   ?second:[ `L_s0_2_digit 
                                                           | `L_s73_numeric ]
                                                     ->
                                                     ?timeZoneName:[
                                                                    `L_s56_long
                                                                     | 
                                                                    `L_s89_short
                                                                    ]
                                                       ->
                                                       ?formatMatcher:
                                                         [ `L_s23_basic 
                                                         | `L_s24_best_fit ]
                                                         ->
                                                         ?hour12:bool ->
                                                           ?timeZone:string
                                                             -> unit -> t
           val cast_from : 'tags this -> t
         end
         module DateTimeFormat :
         sig
           type t = [ `Intl_DateTimeFormat ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DateTimeFormat ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DateTimeFormat ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DateTimeFormat ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val formatToParts :
             'tags this ->
               ?date:[ `U1 of Date.t  | `U2 of float ] ->
                 unit -> DateTimeFormatPart.t list
           val format :
             'tags this ->
               ?date:[ `U1 of Date.t  | `U2 of float ] -> unit -> string
           val resolvedOptions :
             'tags this -> ResolvedDateTimeFormatOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:DateTimeFormatOptions.t -> unit -> t
           val invoke :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:DateTimeFormatOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:DateTimeFormatOptions.t -> unit -> string list
         end
         module ResolvedCollatorOptions :
         sig
           type t = [ `Intl_ResolvedCollatorOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedCollatorOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedCollatorOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_ResolvedCollatorOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_usage : 'tags this -> string
           val set_usage : 'tags this -> string -> unit
           val get_sensitivity : 'tags this -> string
           val set_sensitivity : 'tags this -> string -> unit
           val get_ignorePunctuation : 'tags this -> bool
           val set_ignorePunctuation : 'tags this -> bool -> unit
           val get_collation : 'tags this -> string
           val set_collation : 'tags this -> string -> unit
           val get_caseFirst : 'tags this -> string
           val set_caseFirst : 'tags this -> string -> unit
           val get_numeric : 'tags this -> bool
           val set_numeric : 'tags this -> bool -> unit
           val create :
             locale:string ->
               usage:string ->
                 sensitivity:string ->
                   ignorePunctuation:bool ->
                     collation:string ->
                       caseFirst:string -> numeric:bool -> unit -> t
           val cast_from : 'tags this -> t
         end
         module CollatorOptions :
         sig
           type t = [ `Intl_CollatorOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_CollatorOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_CollatorOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_CollatorOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_usage : 'tags this -> string option
           val set_usage :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_localeMatcher : 'tags this -> string option
           val set_localeMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_numeric : 'tags this -> bool option
           val set_numeric :
             'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit
           val get_caseFirst : 'tags this -> string option
           val set_caseFirst :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_sensitivity : 'tags this -> string option
           val set_sensitivity :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_ignorePunctuation : 'tags this -> bool option
           val set_ignorePunctuation :
             'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit
           val create :
             ?usage:string ->
               ?localeMatcher:string ->
                 ?numeric:bool ->
                   ?caseFirst:string ->
                     ?sensitivity:string ->
                       ?ignorePunctuation:bool -> unit -> t
           val cast_from : 'tags this -> t
         end
         module Collator :
         sig
           type t = [ `Intl_Collator ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_Collator ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_Collator ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_Collator ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val compare : 'tags this -> x:string -> y:string -> float
           val resolvedOptions : 'tags this -> ResolvedCollatorOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:CollatorOptions.t -> unit -> t
           val invoke :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:CollatorOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:CollatorOptions.t -> unit -> string list
         end
       end =
  struct
    module RelativeTimeFormatNumeric =
      struct
        type t = [ `L_s21_always  | `L_s22_auto ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2003 : Ojs.t) ->
            let x2004 = x2003 in
            match Ojs.string_of_js x2004 with
            | "always" -> `L_s21_always
            | "auto" -> `L_s22_auto
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2002 : [ `L_s21_always  | `L_s22_auto ]) ->
            match x2002 with
            | `L_s21_always -> Ojs.string_to_js "always"
            | `L_s22_auto -> Ojs.string_to_js "auto"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2006 : Ojs.t) -> t_of_js x2006
        and t_0_to_js : t_0 -> Ojs.t = fun (x2005 : t) -> t_to_js x2005
      end
    module UnicodeBCP47LocaleIdentifier =
      struct
        type t = string
        let rec t_of_js : Ojs.t -> t =
          fun (x2008 : Ojs.t) -> Ojs.string_of_js x2008
        and t_to_js : t -> Ojs.t =
          fun (x2007 : string) -> Ojs.string_to_js x2007
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2010 : Ojs.t) -> t_of_js x2010
        and t_0_to_js : t_0 -> Ojs.t = fun (x2009 : t) -> t_to_js x2009
      end
    module RelativeTimeFormatStyle =
      struct
        type t = [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2012 : Ojs.t) ->
            let x2013 = x2012 in
            match Ojs.string_of_js x2013 with
            | "long" -> `L_s56_long
            | "narrow" -> `L_s68_narrow
            | "short" -> `L_s89_short
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2011 : [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ]) ->
            match x2011 with
            | `L_s56_long -> Ojs.string_to_js "long"
            | `L_s68_narrow -> Ojs.string_to_js "narrow"
            | `L_s89_short -> Ojs.string_to_js "short"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2015 : Ojs.t) -> t_of_js x2015
        and t_0_to_js : t_0 -> Ojs.t = fun (x2014 : t) -> t_to_js x2014
      end
    module ResolvedRelativeTimeFormatOptions =
      struct
        type t = [ `Intl_ResolvedRelativeTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2017 : Ojs.t) -> t_of_js x2017
        and t_0_to_js : t_0 -> Ojs.t = fun (x2016 : t) -> t_to_js x2016
        type tags = [ `Intl_ResolvedRelativeTimeFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `Intl_ResolvedRelativeTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2020 : Ojs.t) -> intf_of_js __tags_of_js x2020
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2018 : __tags intf) -> intf_to_js __tags_to_js x2018
        let (get_locale : 'tags this -> UnicodeBCP47LocaleIdentifier.t) =
          fun (x2022 : 'tags this) ->
            UnicodeBCP47LocaleIdentifier.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2022) "locale")
        let (set_locale :
          'tags this -> UnicodeBCP47LocaleIdentifier.t -> unit) =
          fun (x2024 : 'tags this) ->
            fun (x2025 : UnicodeBCP47LocaleIdentifier.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2024) "locale"
                (UnicodeBCP47LocaleIdentifier.t_to_js x2025)
        let (get_style : 'tags this -> RelativeTimeFormatStyle.t) =
          fun (x2027 : 'tags this) ->
            RelativeTimeFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2027) "style")
        let (set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit) =
          fun (x2029 : 'tags this) ->
            fun (x2030 : RelativeTimeFormatStyle.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2029) "style"
                (RelativeTimeFormatStyle.t_to_js x2030)
        let (get_numeric : 'tags this -> RelativeTimeFormatNumeric.t) =
          fun (x2032 : 'tags this) ->
            RelativeTimeFormatNumeric.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2032) "numeric")
        let (set_numeric : 'tags this -> RelativeTimeFormatNumeric.t -> unit)
          =
          fun (x2034 : 'tags this) ->
            fun (x2035 : RelativeTimeFormatNumeric.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2034) "numeric"
                (RelativeTimeFormatNumeric.t_to_js x2035)
        let (get_numberingSystem : 'tags this -> string) =
          fun (x2037 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2037)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x2039 : 'tags this) ->
            fun (x2040 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2039)
                "numberingSystem" (Ojs.string_to_js x2040)
        let (create :
          locale:UnicodeBCP47LocaleIdentifier.t ->
            style:RelativeTimeFormatStyle.t ->
              numeric:RelativeTimeFormatNumeric.t ->
                numberingSystem:string -> unit -> t)
          =
          fun ~locale:(x2042 : UnicodeBCP47LocaleIdentifier.t) ->
            fun ~style:(x2043 : RelativeTimeFormatStyle.t) ->
              fun ~numeric:(x2044 : RelativeTimeFormatNumeric.t) ->
                fun ~numberingSystem:(x2045 : string) ->
                  fun () ->
                    let x2046 = Ojs.empty_obj () in
                    Ojs.set_prop_ascii x2046 "locale"
                      (UnicodeBCP47LocaleIdentifier.t_to_js x2042);
                    Ojs.set_prop_ascii x2046 "style"
                      (RelativeTimeFormatStyle.t_to_js x2043);
                    Ojs.set_prop_ascii x2046 "numeric"
                      (RelativeTimeFormatNumeric.t_to_js x2044);
                    Ojs.set_prop_ascii x2046 "numberingSystem"
                      (Ojs.string_to_js x2045);
                    t_of_js x2046
        let cast_from = Obj.magic
      end
    module RelativeTimeFormatUnit =
      struct
        type t =
          [ `L_s101_weeks  | `L_s102_year  | `L_s103_years  | `L_s29_day 
          | `L_s31_days  | `L_s50_hour  | `L_s51_hours  | `L_s62_minute 
          | `L_s63_minutes  | `L_s64_month  | `L_s65_months 
          | `L_s81_quarter  | `L_s82_quarters  | `L_s87_second 
          | `L_s88_seconds  | `L_s99_week ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2048 : Ojs.t) ->
            let x2049 = x2048 in
            match Ojs.string_of_js x2049 with
            | "weeks" -> `L_s101_weeks
            | "year" -> `L_s102_year
            | "years" -> `L_s103_years
            | "day" -> `L_s29_day
            | "days" -> `L_s31_days
            | "hour" -> `L_s50_hour
            | "hours" -> `L_s51_hours
            | "minute" -> `L_s62_minute
            | "minutes" -> `L_s63_minutes
            | "month" -> `L_s64_month
            | "months" -> `L_s65_months
            | "quarter" -> `L_s81_quarter
            | "quarters" -> `L_s82_quarters
            | "second" -> `L_s87_second
            | "seconds" -> `L_s88_seconds
            | "week" -> `L_s99_week
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2047 :
              [ `L_s101_weeks  | `L_s102_year  | `L_s103_years  | `L_s29_day 
              | `L_s31_days  | `L_s50_hour  | `L_s51_hours  | `L_s62_minute 
              | `L_s63_minutes  | `L_s64_month  | `L_s65_months 
              | `L_s81_quarter  | `L_s82_quarters  | `L_s87_second 
              | `L_s88_seconds  | `L_s99_week ])
            ->
            match x2047 with
            | `L_s101_weeks -> Ojs.string_to_js "weeks"
            | `L_s102_year -> Ojs.string_to_js "year"
            | `L_s103_years -> Ojs.string_to_js "years"
            | `L_s29_day -> Ojs.string_to_js "day"
            | `L_s31_days -> Ojs.string_to_js "days"
            | `L_s50_hour -> Ojs.string_to_js "hour"
            | `L_s51_hours -> Ojs.string_to_js "hours"
            | `L_s62_minute -> Ojs.string_to_js "minute"
            | `L_s63_minutes -> Ojs.string_to_js "minutes"
            | `L_s64_month -> Ojs.string_to_js "month"
            | `L_s65_months -> Ojs.string_to_js "months"
            | `L_s81_quarter -> Ojs.string_to_js "quarter"
            | `L_s82_quarters -> Ojs.string_to_js "quarters"
            | `L_s87_second -> Ojs.string_to_js "second"
            | `L_s88_seconds -> Ojs.string_to_js "seconds"
            | `L_s99_week -> Ojs.string_to_js "week"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2051 : Ojs.t) -> t_of_js x2051
        and t_0_to_js : t_0 -> Ojs.t = fun (x2050 : t) -> t_to_js x2050
      end
    module RelativeTimeFormatPart =
      struct
        type t = [ `Intl_RelativeTimeFormatPart ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2053 : Ojs.t) -> t_of_js x2053
        and t_0_to_js : t_0 -> Ojs.t = fun (x2052 : t) -> t_to_js x2052
        type tags = [ `Intl_RelativeTimeFormatPart ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_RelativeTimeFormatPart ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2056 : Ojs.t) -> intf_of_js __tags_of_js x2056
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2054 : __tags intf) -> intf_to_js __tags_to_js x2054
        let (get_type : 'tags this -> string) =
          fun (x2058 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2058) "type")
        let (set_type : 'tags this -> string -> unit) =
          fun (x2060 : 'tags this) ->
            fun (x2061 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2060) "type"
                (Ojs.string_to_js x2061)
        let (get_value : 'tags this -> string) =
          fun (x2063 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2063) "value")
        let (set_value : 'tags this -> string -> unit) =
          fun (x2065 : 'tags this) ->
            fun (x2066 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2065) "value"
                (Ojs.string_to_js x2066)
        let (get_unit : 'tags this -> RelativeTimeFormatUnit.t) =
          fun (x2068 : 'tags this) ->
            RelativeTimeFormatUnit.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2068) "unit")
        let (set_unit : 'tags this -> RelativeTimeFormatUnit.t -> unit) =
          fun (x2070 : 'tags this) ->
            fun (x2071 : RelativeTimeFormatUnit.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2070) "unit"
                (RelativeTimeFormatUnit.t_to_js x2071)
        let (create :
          type_:string ->
            value:string -> unit:RelativeTimeFormatUnit.t -> unit -> t)
          =
          fun ~type_:(x2073 : string) ->
            fun ~value:(x2074 : string) ->
              fun ~unit:(x2075 : RelativeTimeFormatUnit.t) ->
                fun () ->
                  let x2076 = Ojs.empty_obj () in
                  Ojs.set_prop_ascii x2076 "type" (Ojs.string_to_js x2073);
                  Ojs.set_prop_ascii x2076 "value" (Ojs.string_to_js x2074);
                  Ojs.set_prop_ascii x2076 "unit"
                    (RelativeTimeFormatUnit.t_to_js x2075);
                  t_of_js x2076
        let cast_from = Obj.magic
      end
    module RelativeTimeFormatLocaleMatcher =
      struct
        type t = [ `L_s24_best_fit  | `L_s57_lookup ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2078 : Ojs.t) ->
            let x2079 = x2078 in
            match Ojs.string_of_js x2079 with
            | "best fit" -> `L_s24_best_fit
            | "lookup" -> `L_s57_lookup
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2077 : [ `L_s24_best_fit  | `L_s57_lookup ]) ->
            match x2077 with
            | `L_s24_best_fit -> Ojs.string_to_js "best fit"
            | `L_s57_lookup -> Ojs.string_to_js "lookup"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2081 : Ojs.t) -> t_of_js x2081
        and t_0_to_js : t_0 -> Ojs.t = fun (x2080 : t) -> t_to_js x2080
      end
    module RelativeTimeFormatOptions =
      struct
        type t = [ `Intl_RelativeTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2083 : Ojs.t) -> t_of_js x2083
        and t_0_to_js : t_0 -> Ojs.t = fun (x2082 : t) -> t_to_js x2082
        type tags = [ `Intl_RelativeTimeFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_RelativeTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2086 : Ojs.t) -> intf_of_js __tags_of_js x2086
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2084 : __tags intf) -> intf_to_js __tags_to_js x2084
        let (get_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t) =
          fun (x2088 : 'tags this) ->
            RelativeTimeFormatLocaleMatcher.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2088)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit) =
          fun (x2090 : 'tags this) ->
            fun (x2091 : RelativeTimeFormatLocaleMatcher.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2090) "localeMatcher"
                (RelativeTimeFormatLocaleMatcher.t_to_js x2091)
        let (get_numeric : 'tags this -> RelativeTimeFormatNumeric.t) =
          fun (x2093 : 'tags this) ->
            RelativeTimeFormatNumeric.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2093) "numeric")
        let (set_numeric : 'tags this -> RelativeTimeFormatNumeric.t -> unit)
          =
          fun (x2095 : 'tags this) ->
            fun (x2096 : RelativeTimeFormatNumeric.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2095) "numeric"
                (RelativeTimeFormatNumeric.t_to_js x2096)
        let (get_style : 'tags this -> RelativeTimeFormatStyle.t) =
          fun (x2098 : 'tags this) ->
            RelativeTimeFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2098) "style")
        let (set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit) =
          fun (x2100 : 'tags this) ->
            fun (x2101 : RelativeTimeFormatStyle.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2100) "style"
                (RelativeTimeFormatStyle.t_to_js x2101)
        let (create :
          localeMatcher:RelativeTimeFormatLocaleMatcher.t ->
            numeric:RelativeTimeFormatNumeric.t ->
              style:RelativeTimeFormatStyle.t -> unit -> t)
          =
          fun ~localeMatcher:(x2103 : RelativeTimeFormatLocaleMatcher.t) ->
            fun ~numeric:(x2104 : RelativeTimeFormatNumeric.t) ->
              fun ~style:(x2105 : RelativeTimeFormatStyle.t) ->
                fun () ->
                  let x2106 = Ojs.empty_obj () in
                  Ojs.set_prop_ascii x2106 "localeMatcher"
                    (RelativeTimeFormatLocaleMatcher.t_to_js x2103);
                  Ojs.set_prop_ascii x2106 "numeric"
                    (RelativeTimeFormatNumeric.t_to_js x2104);
                  Ojs.set_prop_ascii x2106 "style"
                    (RelativeTimeFormatStyle.t_to_js x2105);
                  t_of_js x2106
        let cast_from = Obj.magic
      end
    module RelativeTimeFormat =
      struct
        type t = [ `Intl_RelativeTimeFormat ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2108 : Ojs.t) -> t_of_js x2108
        and t_0_to_js : t_0 -> Ojs.t = fun (x2107 : t) -> t_to_js x2107
        type tags = [ `Intl_RelativeTimeFormat ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_RelativeTimeFormat ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2111 : Ojs.t) -> intf_of_js __tags_of_js x2111
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2109 : __tags intf) -> intf_to_js __tags_to_js x2109
        let (format :
          'tags this ->
            value:float -> unit:RelativeTimeFormatUnit.t -> string)
          =
          fun (x2115 : 'tags this) ->
            fun ~value:(x2113 : float) ->
              fun ~unit:(x2114 : RelativeTimeFormatUnit.t) ->
                Ojs.string_of_js
                  (Ojs.call (this_to_js Obj.magic x2115) "format"
                     [|(Ojs.float_to_js x2113);(RelativeTimeFormatUnit.t_to_js
                                                  x2114)|])
        let (formatToParts :
          'tags this ->
            value:float ->
              unit:RelativeTimeFormatUnit.t -> RelativeTimeFormatPart.t list)
          =
          fun (x2119 : 'tags this) ->
            fun ~value:(x2117 : float) ->
              fun ~unit:(x2118 : RelativeTimeFormatUnit.t) ->
                Ojs.list_of_js RelativeTimeFormatPart.t_of_js
                  (Ojs.call (this_to_js Obj.magic x2119) "formatToParts"
                     [|(Ojs.float_to_js x2117);(RelativeTimeFormatUnit.t_to_js
                                                  x2118)|])
        let (resolvedOptions :
          'tags this -> ResolvedRelativeTimeFormatOptions.t) =
          fun (x2122 : 'tags this) ->
            ResolvedRelativeTimeFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2122) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:[ `U1 of UnicodeBCP47LocaleIdentifier.t 
                   | `U2 of UnicodeBCP47LocaleIdentifier.t list ]
            -> ?options:RelativeTimeFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x2124 :
                       [ `U1 of UnicodeBCP47LocaleIdentifier.t 
                       | `U2 of UnicodeBCP47LocaleIdentifier.t list ] option)
            ->
            fun ?options:(x2125 : RelativeTimeFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl")
                        "RelativeTimeFormat")
                     (let x2126 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2124 with
                       | Some x2128 ->
                           ignore
                             (Ojs.call x2126 "push"
                                [|((match x2128 with
                                    | `U1 x2129 ->
                                        UnicodeBCP47LocaleIdentifier.t_to_js
                                          x2129
                                    | `U2 x2130 ->
                                        Ojs.list_to_js
                                          UnicodeBCP47LocaleIdentifier.t_to_js
                                          x2130))|])
                       | None -> ());
                      (match x2125 with
                       | Some x2127 ->
                           ignore
                             (Ojs.call x2126 "push"
                                [|(RelativeTimeFormatOptions.t_to_js x2127)|])
                       | None -> ());
                      x2126))
        let (supportedLocalesOf :
          ?locales:[ `U1 of UnicodeBCP47LocaleIdentifier.t 
                   | `U2 of UnicodeBCP47LocaleIdentifier.t list ]
            ->
            ?options:RelativeTimeFormatOptions.t ->
              unit -> UnicodeBCP47LocaleIdentifier.t list)
          =
          fun
            ?locales:(x2132 :
                       [ `U1 of UnicodeBCP47LocaleIdentifier.t 
                       | `U2 of UnicodeBCP47LocaleIdentifier.t list ] option)
            ->
            fun ?options:(x2133 : RelativeTimeFormatOptions.t option) ->
              fun () ->
                Ojs.list_of_js UnicodeBCP47LocaleIdentifier.t_of_js
                  (let x2140 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl")
                       "RelativeTimeFormat" in
                   Ojs.call (Ojs.get_prop_ascii x2140 "supportedLocalesOf")
                     "apply"
                     [|x2140;((let x2134 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x2132 with
                                | Some x2136 ->
                                    ignore
                                      (Ojs.call x2134 "push"
                                         [|((match x2136 with
                                             | `U1 x2137 ->
                                                 UnicodeBCP47LocaleIdentifier.t_to_js
                                                   x2137
                                             | `U2 x2138 ->
                                                 Ojs.list_to_js
                                                   UnicodeBCP47LocaleIdentifier.t_to_js
                                                   x2138))|])
                                | None -> ());
                               (match x2133 with
                                | Some x2135 ->
                                    ignore
                                      (Ojs.call x2134 "push"
                                         [|(RelativeTimeFormatOptions.t_to_js
                                              x2135)|])
                                | None -> ());
                               x2134))|])
      end
    module PluralRuleType =
      struct
        type t = [ `L_s25_cardinal  | `L_s76_ordinal ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2143 : Ojs.t) ->
            let x2144 = x2143 in
            match Ojs.string_of_js x2144 with
            | "cardinal" -> `L_s25_cardinal
            | "ordinal" -> `L_s76_ordinal
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2142 : [ `L_s25_cardinal  | `L_s76_ordinal ]) ->
            match x2142 with
            | `L_s25_cardinal -> Ojs.string_to_js "cardinal"
            | `L_s76_ordinal -> Ojs.string_to_js "ordinal"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2146 : Ojs.t) -> t_of_js x2146
        and t_0_to_js : t_0 -> Ojs.t = fun (x2145 : t) -> t_to_js x2145
      end
    module LDMLPluralRule =
      struct
        type t =
          [ `L_s104_zero  | `L_s41_few  | `L_s59_many  | `L_s75_one 
          | `L_s77_other  | `L_s95_two ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2148 : Ojs.t) ->
            let x2149 = x2148 in
            match Ojs.string_of_js x2149 with
            | "zero" -> `L_s104_zero
            | "few" -> `L_s41_few
            | "many" -> `L_s59_many
            | "one" -> `L_s75_one
            | "other" -> `L_s77_other
            | "two" -> `L_s95_two
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2147 :
              [ `L_s104_zero  | `L_s41_few  | `L_s59_many  | `L_s75_one 
              | `L_s77_other  | `L_s95_two ])
            ->
            match x2147 with
            | `L_s104_zero -> Ojs.string_to_js "zero"
            | `L_s41_few -> Ojs.string_to_js "few"
            | `L_s59_many -> Ojs.string_to_js "many"
            | `L_s75_one -> Ojs.string_to_js "one"
            | `L_s77_other -> Ojs.string_to_js "other"
            | `L_s95_two -> Ojs.string_to_js "two"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2151 : Ojs.t) -> t_of_js x2151
        and t_0_to_js : t_0 -> Ojs.t = fun (x2150 : t) -> t_to_js x2150
      end
    module ResolvedPluralRulesOptions =
      struct
        type t = [ `Intl_ResolvedPluralRulesOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2153 : Ojs.t) -> t_of_js x2153
        and t_0_to_js : t_0 -> Ojs.t = fun (x2152 : t) -> t_to_js x2152
        type tags = [ `Intl_ResolvedPluralRulesOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_ResolvedPluralRulesOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2156 : Ojs.t) -> intf_of_js __tags_of_js x2156
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2154 : __tags intf) -> intf_to_js __tags_to_js x2154
        let (get_locale : 'tags this -> string) =
          fun (x2158 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2158) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x2160 : 'tags this) ->
            fun (x2161 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2160) "locale"
                (Ojs.string_to_js x2161)
        let (get_pluralCategories : 'tags this -> LDMLPluralRule.t list) =
          fun (x2163 : 'tags this) ->
            Ojs.list_of_js LDMLPluralRule.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2163)
                 "pluralCategories")
        let (set_pluralCategories :
          'tags this -> LDMLPluralRule.t list -> unit) =
          fun (x2166 : 'tags this) ->
            fun (x2167 : LDMLPluralRule.t list) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2166)
                "pluralCategories"
                (Ojs.list_to_js LDMLPluralRule.t_to_js x2167)
        let (get_type : 'tags this -> PluralRuleType.t) =
          fun (x2170 : 'tags this) ->
            PluralRuleType.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2170) "type")
        let (set_type : 'tags this -> PluralRuleType.t -> unit) =
          fun (x2172 : 'tags this) ->
            fun (x2173 : PluralRuleType.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2172) "type"
                (PluralRuleType.t_to_js x2173)
        let (get_minimumIntegerDigits : 'tags this -> float) =
          fun (x2175 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2175)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits : 'tags this -> float -> unit) =
          fun (x2177 : 'tags this) ->
            fun (x2178 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2177)
                "minimumIntegerDigits" (Ojs.float_to_js x2178)
        let (get_minimumFractionDigits : 'tags this -> float) =
          fun (x2180 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2180)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits : 'tags this -> float -> unit) =
          fun (x2182 : 'tags this) ->
            fun (x2183 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2182)
                "minimumFractionDigits" (Ojs.float_to_js x2183)
        let (get_maximumFractionDigits : 'tags this -> float) =
          fun (x2185 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2185)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits : 'tags this -> float -> unit) =
          fun (x2187 : 'tags this) ->
            fun (x2188 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2187)
                "maximumFractionDigits" (Ojs.float_to_js x2188)
        let (get_minimumSignificantDigits : 'tags this -> float) =
          fun (x2190 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2190)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2192 : 'tags this) ->
            fun (x2193 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2192)
                "minimumSignificantDigits" (Ojs.float_to_js x2193)
        let (get_maximumSignificantDigits : 'tags this -> float) =
          fun (x2195 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2195)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2197 : 'tags this) ->
            fun (x2198 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2197)
                "maximumSignificantDigits" (Ojs.float_to_js x2198)
        let (create :
          locale:string ->
            pluralCategories:LDMLPluralRule.t list ->
              type_:PluralRuleType.t ->
                minimumIntegerDigits:float ->
                  minimumFractionDigits:float ->
                    maximumFractionDigits:float ->
                      minimumSignificantDigits:float ->
                        maximumSignificantDigits:float -> unit -> t)
          =
          fun ~locale:(x2200 : string) ->
            fun ~pluralCategories:(x2201 : LDMLPluralRule.t list) ->
              fun ~type_:(x2202 : PluralRuleType.t) ->
                fun ~minimumIntegerDigits:(x2203 : float) ->
                  fun ~minimumFractionDigits:(x2204 : float) ->
                    fun ~maximumFractionDigits:(x2205 : float) ->
                      fun ~minimumSignificantDigits:(x2206 : float) ->
                        fun ~maximumSignificantDigits:(x2207 : float) ->
                          fun () ->
                            let x2208 = Ojs.empty_obj () in
                            Ojs.set_prop_ascii x2208 "locale"
                              (Ojs.string_to_js x2200);
                            Ojs.set_prop_ascii x2208 "pluralCategories"
                              (Ojs.list_to_js LDMLPluralRule.t_to_js x2201);
                            Ojs.set_prop_ascii x2208 "type"
                              (PluralRuleType.t_to_js x2202);
                            Ojs.set_prop_ascii x2208 "minimumIntegerDigits"
                              (Ojs.float_to_js x2203);
                            Ojs.set_prop_ascii x2208 "minimumFractionDigits"
                              (Ojs.float_to_js x2204);
                            Ojs.set_prop_ascii x2208 "maximumFractionDigits"
                              (Ojs.float_to_js x2205);
                            Ojs.set_prop_ascii x2208
                              "minimumSignificantDigits"
                              (Ojs.float_to_js x2206);
                            Ojs.set_prop_ascii x2208
                              "maximumSignificantDigits"
                              (Ojs.float_to_js x2207);
                            t_of_js x2208
        let cast_from = Obj.magic
      end
    module PluralRulesOptions =
      struct
        type t = [ `Intl_PluralRulesOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2211 : Ojs.t) -> t_of_js x2211
        and t_0_to_js : t_0 -> Ojs.t = fun (x2210 : t) -> t_to_js x2210
        type tags = [ `Intl_PluralRulesOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_PluralRulesOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2214 : Ojs.t) -> intf_of_js __tags_of_js x2214
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2212 : __tags intf) -> intf_to_js __tags_to_js x2212
        let (get_localeMatcher :
          'tags this -> [ `L_s24_best_fit  | `L_s57_lookup ] option) =
          fun (x2216 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2218 : Ojs.t) ->
                 let x2219 = x2218 in
                 match Ojs.string_of_js x2219 with
                 | "best fit" -> `L_s24_best_fit
                 | "lookup" -> `L_s57_lookup
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2216)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s57_lookup ] 
            | `U2 of [ `L_s24_best_fit ] ] -> unit)
          =
          fun (x2220 : 'tags this) ->
            fun
              (x2221 :
                [ `Undefined of undefined  | `U1 of [ `L_s57_lookup ] 
                | `U2 of [ `L_s24_best_fit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2220) "localeMatcher"
                (match x2221 with
                 | `Undefined x2222 -> undefined_to_js x2222
                 | `U1 x2223 ->
                     (match x2223 with
                      | `L_s57_lookup -> Ojs.string_to_js "lookup")
                 | `U2 x2224 ->
                     (match x2224 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit"))
        let (get_type : 'tags this -> PluralRuleType.t option) =
          fun (x2226 : 'tags this) ->
            Ojs.option_of_js PluralRuleType.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2226) "type")
        let (set_type :
          'tags this ->
            [ `Undefined of undefined  | `U1 of PluralRuleType.t ] -> unit)
          =
          fun (x2229 : 'tags this) ->
            fun
              (x2230 :
                [ `Undefined of undefined  | `U1 of PluralRuleType.t ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2229) "type"
                (match x2230 with
                 | `Undefined x2231 -> undefined_to_js x2231
                 | `U1 x2232 -> PluralRuleType.t_to_js x2232)
        let (get_minimumIntegerDigits : 'tags this -> float option) =
          fun (x2234 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2234)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2237 : 'tags this) ->
            fun (x2238 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2237)
                "minimumIntegerDigits"
                (match x2238 with
                 | `Undefined x2239 -> undefined_to_js x2239
                 | `U1 x2240 -> Ojs.float_to_js x2240)
        let (get_minimumFractionDigits : 'tags this -> float option) =
          fun (x2242 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2242)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2245 : 'tags this) ->
            fun (x2246 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2245)
                "minimumFractionDigits"
                (match x2246 with
                 | `Undefined x2247 -> undefined_to_js x2247
                 | `U1 x2248 -> Ojs.float_to_js x2248)
        let (get_maximumFractionDigits : 'tags this -> float option) =
          fun (x2250 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2250)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2253 : 'tags this) ->
            fun (x2254 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2253)
                "maximumFractionDigits"
                (match x2254 with
                 | `Undefined x2255 -> undefined_to_js x2255
                 | `U1 x2256 -> Ojs.float_to_js x2256)
        let (get_minimumSignificantDigits : 'tags this -> float option) =
          fun (x2258 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2258)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2261 : 'tags this) ->
            fun (x2262 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2261)
                "minimumSignificantDigits"
                (match x2262 with
                 | `Undefined x2263 -> undefined_to_js x2263
                 | `U1 x2264 -> Ojs.float_to_js x2264)
        let (get_maximumSignificantDigits : 'tags this -> float option) =
          fun (x2266 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2266)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2269 : 'tags this) ->
            fun (x2270 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2269)
                "maximumSignificantDigits"
                (match x2270 with
                 | `Undefined x2271 -> undefined_to_js x2271
                 | `U1 x2272 -> Ojs.float_to_js x2272)
        let (create :
          ?localeMatcher:[ `L_s24_best_fit  | `L_s57_lookup ] ->
            ?type_:PluralRuleType.t ->
              ?minimumIntegerDigits:float ->
                ?minimumFractionDigits:float ->
                  ?maximumFractionDigits:float ->
                    ?minimumSignificantDigits:float ->
                      ?maximumSignificantDigits:float -> unit -> t)
          =
          fun
            ?localeMatcher:(x2274 :
                             [ `L_s24_best_fit  | `L_s57_lookup ] option)
            ->
            fun ?type_:(x2275 : PluralRuleType.t option) ->
              fun ?minimumIntegerDigits:(x2276 : float option) ->
                fun ?minimumFractionDigits:(x2277 : float option) ->
                  fun ?maximumFractionDigits:(x2278 : float option) ->
                    fun ?minimumSignificantDigits:(x2279 : float option) ->
                      fun ?maximumSignificantDigits:(x2280 : float option) ->
                        fun () ->
                          let x2281 = Ojs.empty_obj () in
                          (match x2274 with
                           | Some x2288 ->
                               Ojs.set_prop_ascii x2281 "localeMatcher"
                                 (match x2288 with
                                  | `L_s24_best_fit ->
                                      Ojs.string_to_js "best fit"
                                  | `L_s57_lookup ->
                                      Ojs.string_to_js "lookup")
                           | None -> ());
                          (match x2275 with
                           | Some x2287 ->
                               Ojs.set_prop_ascii x2281 "type"
                                 (PluralRuleType.t_to_js x2287)
                           | None -> ());
                          (match x2276 with
                           | Some x2286 ->
                               Ojs.set_prop_ascii x2281
                                 "minimumIntegerDigits"
                                 (Ojs.float_to_js x2286)
                           | None -> ());
                          (match x2277 with
                           | Some x2285 ->
                               Ojs.set_prop_ascii x2281
                                 "minimumFractionDigits"
                                 (Ojs.float_to_js x2285)
                           | None -> ());
                          (match x2278 with
                           | Some x2284 ->
                               Ojs.set_prop_ascii x2281
                                 "maximumFractionDigits"
                                 (Ojs.float_to_js x2284)
                           | None -> ());
                          (match x2279 with
                           | Some x2283 ->
                               Ojs.set_prop_ascii x2281
                                 "minimumSignificantDigits"
                                 (Ojs.float_to_js x2283)
                           | None -> ());
                          (match x2280 with
                           | Some x2282 ->
                               Ojs.set_prop_ascii x2281
                                 "maximumSignificantDigits"
                                 (Ojs.float_to_js x2282)
                           | None -> ());
                          t_of_js x2281
        let cast_from = Obj.magic
      end
    module PluralRules =
      struct
        module AnonymousInterface4 =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x2290 : Ojs.t) -> x2290
            and t_to_js : t -> Ojs.t = fun (x2289 : Ojs.t) -> x2289
            let (get_localeMatcher :
              t -> [ `L_s24_best_fit  | `L_s57_lookup ]) =
              fun (x2291 : t) ->
                let x2292 =
                  Ojs.get_prop_ascii (t_to_js x2291) "localeMatcher" in
                match Ojs.string_of_js x2292 with
                | "best fit" -> `L_s24_best_fit
                | "lookup" -> `L_s57_lookup
                | _ -> assert false
            let (set_localeMatcher :
              t ->
                [ `U1 of [ `L_s57_lookup ]  | `U2 of [ `L_s24_best_fit ] ] ->
                  unit)
              =
              fun (x2293 : t) ->
                fun
                  (x2294 :
                    [ `U1 of [ `L_s57_lookup ] 
                    | `U2 of [ `L_s24_best_fit ] ])
                  ->
                  Ojs.set_prop_ascii (t_to_js x2293) "localeMatcher"
                    (match x2294 with
                     | `U1 x2295 ->
                         (match x2295 with
                          | `L_s57_lookup -> Ojs.string_to_js "lookup")
                     | `U2 x2296 ->
                         (match x2296 with
                          | `L_s24_best_fit -> Ojs.string_to_js "best fit"))
            let (create :
              localeMatcher:[ `L_s24_best_fit  | `L_s57_lookup ] -> unit -> t)
              =
              fun
                ~localeMatcher:(x2297 : [ `L_s24_best_fit  | `L_s57_lookup ])
                ->
                fun () ->
                  let x2298 = Ojs.empty_obj () in
                  Ojs.set_prop_ascii x2298 "localeMatcher"
                    (match x2297 with
                     | `L_s24_best_fit -> Ojs.string_to_js "best fit"
                     | `L_s57_lookup -> Ojs.string_to_js "lookup");
                  t_of_js x2298
          end
        type t = [ `Intl_PluralRules ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2300 : Ojs.t) -> t_of_js x2300
        and t_0_to_js : t_0 -> Ojs.t = fun (x2299 : t) -> t_to_js x2299
        type tags = [ `Intl_PluralRules ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_PluralRules ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2303 : Ojs.t) -> intf_of_js __tags_of_js x2303
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2301 : __tags intf) -> intf_to_js __tags_to_js x2301
        let (resolvedOptions : 'tags this -> ResolvedPluralRulesOptions.t) =
          fun (x2305 : 'tags this) ->
            ResolvedPluralRulesOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2305) "resolvedOptions" [||])
        let (select : 'tags this -> n:float -> LDMLPluralRule.t) =
          fun (x2308 : 'tags this) ->
            fun ~n:(x2307 : float) ->
              LDMLPluralRule.t_of_js
                (Ojs.call (this_to_js Obj.magic x2308) "select"
                   [|(Ojs.float_to_js x2307)|])
        let cast_from = Obj.magic
        let (create :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:PluralRulesOptions.t -> unit -> t)
          =
          fun
            ?locales:(x2310 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x2311 : PluralRulesOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "PluralRules")
                     (let x2312 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2310 with
                       | Some x2314 ->
                           ignore
                             (Ojs.call x2312 "push"
                                [|((match x2314 with
                                    | `U1 x2315 -> Ojs.string_to_js x2315
                                    | `U2 x2316 ->
                                        Ojs.list_to_js Ojs.string_to_js x2316))|])
                       | None -> ());
                      (match x2311 with
                       | Some x2313 ->
                           ignore
                             (Ojs.call x2312 "push"
                                [|(PluralRulesOptions.t_to_js x2313)|])
                       | None -> ());
                      x2312))
        let (invoke :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:PluralRulesOptions.t -> unit -> t)
          =
          fun
            ?locales:(x2318 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x2319 : PluralRulesOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "PluralRules")
                     "apply"
                     [|Ojs.null;((let x2320 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x2318 with
                                   | Some x2322 ->
                                       ignore
                                         (Ojs.call x2320 "push"
                                            [|((match x2322 with
                                                | `U1 x2323 ->
                                                    Ojs.string_to_js x2323
                                                | `U2 x2324 ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x2324))|])
                                   | None -> ());
                                  (match x2319 with
                                   | Some x2321 ->
                                       ignore
                                         (Ojs.call x2320 "push"
                                            [|(PluralRulesOptions.t_to_js
                                                 x2321)|])
                                   | None -> ());
                                  x2320))|])
        let (supportedLocalesOf :
          locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:AnonymousInterface4.t -> unit -> string list)
          =
          fun ~locales:(x2326 : [ `U1 of string  | `U2 of string list ]) ->
            fun ?options:(x2327 : AnonymousInterface4.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x2333 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "PluralRules" in
                   Ojs.call (Ojs.get_prop_ascii x2333 "supportedLocalesOf")
                     "apply"
                     [|x2333;((let x2328 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2328 "push"
                                    [|((match x2326 with
                                        | `U1 x2330 -> Ojs.string_to_js x2330
                                        | `U2 x2331 ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x2331))|]);
                               (match x2327 with
                                | Some x2329 ->
                                    ignore
                                      (Ojs.call x2328 "push"
                                         [|(AnonymousInterface4.t_to_js x2329)|])
                                | None -> ());
                               x2328))|])
      end
    module ResolvedNumberFormatOptions =
      struct
        type t = [ `Intl_ResolvedNumberFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2336 : Ojs.t) -> t_of_js x2336
        and t_0_to_js : t_0 -> Ojs.t = fun (x2335 : t) -> t_to_js x2335
        type tags = [ `Intl_ResolvedNumberFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `Intl_ResolvedNumberFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2339 : Ojs.t) -> intf_of_js __tags_of_js x2339
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2337 : __tags intf) -> intf_to_js __tags_to_js x2337
        let (get_compactDisplay :
          'tags this -> [ `L_s56_long  | `L_s89_short ]) =
          fun (x2341 : 'tags this) ->
            let x2343 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2341)
                "compactDisplay" in
            match Ojs.string_of_js x2343 with
            | "long" -> `L_s56_long
            | "short" -> `L_s89_short
            | _ -> assert false
        let (set_compactDisplay :
          'tags this ->
            [ `U1 of [ `L_s89_short ]  | `U2 of [ `L_s56_long ] ] -> unit)
          =
          fun (x2344 : 'tags this) ->
            fun
              (x2345 : [ `U1 of [ `L_s89_short ]  | `U2 of [ `L_s56_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2344)
                "compactDisplay"
                (match x2345 with
                 | `U1 x2346 ->
                     (match x2346 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U2 x2347 ->
                     (match x2347 with
                      | `L_s56_long -> Ojs.string_to_js "long"))
        let (get_notation :
          'tags this ->
            [ `L_s27_compact  | `L_s34_engineering  | `L_s85_scientific 
            | `L_s90_standard ])
          =
          fun (x2349 : 'tags this) ->
            let x2351 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2349) "notation" in
            match Ojs.string_of_js x2351 with
            | "compact" -> `L_s27_compact
            | "engineering" -> `L_s34_engineering
            | "scientific" -> `L_s85_scientific
            | "standard" -> `L_s90_standard
            | _ -> assert false
        let (set_notation :
          'tags this ->
            [ `U1 of [ `L_s90_standard ]  | `U2 of [ `L_s85_scientific ] 
            | `U3 of [ `L_s34_engineering ]  | `U4 of [ `L_s27_compact ] ] ->
              unit)
          =
          fun (x2352 : 'tags this) ->
            fun
              (x2353 :
                [ `U1 of [ `L_s90_standard ]  | `U2 of [ `L_s85_scientific ] 
                | `U3 of [ `L_s34_engineering ] 
                | `U4 of [ `L_s27_compact ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2352) "notation"
                (match x2353 with
                 | `U1 x2354 ->
                     (match x2354 with
                      | `L_s90_standard -> Ojs.string_to_js "standard")
                 | `U2 x2355 ->
                     (match x2355 with
                      | `L_s85_scientific -> Ojs.string_to_js "scientific")
                 | `U3 x2356 ->
                     (match x2356 with
                      | `L_s34_engineering -> Ojs.string_to_js "engineering")
                 | `U4 x2357 ->
                     (match x2357 with
                      | `L_s27_compact -> Ojs.string_to_js "compact"))
        let (get_signDisplay :
          'tags this ->
            [ `L_s21_always  | `L_s22_auto  | `L_s36_exceptZero 
            | `L_s69_never ])
          =
          fun (x2359 : 'tags this) ->
            let x2361 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2359) "signDisplay" in
            match Ojs.string_of_js x2361 with
            | "always" -> `L_s21_always
            | "auto" -> `L_s22_auto
            | "exceptZero" -> `L_s36_exceptZero
            | "never" -> `L_s69_never
            | _ -> assert false
        let (set_signDisplay :
          'tags this ->
            [ `U1 of [ `L_s22_auto ]  | `U2 of [ `L_s69_never ] 
            | `U3 of [ `L_s21_always ]  | `U4 of [ `L_s36_exceptZero ] ] ->
              unit)
          =
          fun (x2362 : 'tags this) ->
            fun
              (x2363 :
                [ `U1 of [ `L_s22_auto ]  | `U2 of [ `L_s69_never ] 
                | `U3 of [ `L_s21_always ]  | `U4 of [ `L_s36_exceptZero ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2362) "signDisplay"
                (match x2363 with
                 | `U1 x2364 ->
                     (match x2364 with
                      | `L_s22_auto -> Ojs.string_to_js "auto")
                 | `U2 x2365 ->
                     (match x2365 with
                      | `L_s69_never -> Ojs.string_to_js "never")
                 | `U3 x2366 ->
                     (match x2366 with
                      | `L_s21_always -> Ojs.string_to_js "always")
                 | `U4 x2367 ->
                     (match x2367 with
                      | `L_s36_exceptZero -> Ojs.string_to_js "exceptZero"))
        let (get_unit : 'tags this -> string) =
          fun (x2369 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2369) "unit")
        let (set_unit : 'tags this -> string -> unit) =
          fun (x2371 : 'tags this) ->
            fun (x2372 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2371) "unit"
                (Ojs.string_to_js x2372)
        let (get_unitDisplay :
          'tags this -> [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ]) =
          fun (x2374 : 'tags this) ->
            let x2376 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2374) "unitDisplay" in
            match Ojs.string_of_js x2376 with
            | "long" -> `L_s56_long
            | "narrow" -> `L_s68_narrow
            | "short" -> `L_s89_short
            | _ -> assert false
        let (set_unitDisplay :
          'tags this ->
            [ `U1 of [ `L_s89_short ]  | `U2 of [ `L_s56_long ] 
            | `U3 of [ `L_s68_narrow ] ] -> unit)
          =
          fun (x2377 : 'tags this) ->
            fun
              (x2378 :
                [ `U1 of [ `L_s89_short ]  | `U2 of [ `L_s56_long ] 
                | `U3 of [ `L_s68_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2377) "unitDisplay"
                (match x2378 with
                 | `U1 x2379 ->
                     (match x2379 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U2 x2380 ->
                     (match x2380 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U3 x2381 ->
                     (match x2381 with
                      | `L_s68_narrow -> Ojs.string_to_js "narrow"))
        let (get_currencyDisplay : 'tags this -> string) =
          fun (x2383 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2383)
                 "currencyDisplay")
        let (set_currencyDisplay : 'tags this -> string -> unit) =
          fun (x2385 : 'tags this) ->
            fun (x2386 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2385)
                "currencyDisplay" (Ojs.string_to_js x2386)
        let (get_currencySign : 'tags this -> string) =
          fun (x2388 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2388) "currencySign")
        let (set_currencySign : 'tags this -> string -> unit) =
          fun (x2390 : 'tags this) ->
            fun (x2391 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2390) "currencySign"
                (Ojs.string_to_js x2391)
        let (get_locale : 'tags this -> string) =
          fun (x2393 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2393) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x2395 : 'tags this) ->
            fun (x2396 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2395) "locale"
                (Ojs.string_to_js x2396)
        let (get_numberingSystem : 'tags this -> string) =
          fun (x2398 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2398)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x2400 : 'tags this) ->
            fun (x2401 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2400)
                "numberingSystem" (Ojs.string_to_js x2401)
        let (get_style : 'tags this -> string) =
          fun (x2403 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2403) "style")
        let (set_style : 'tags this -> string -> unit) =
          fun (x2405 : 'tags this) ->
            fun (x2406 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2405) "style"
                (Ojs.string_to_js x2406)
        let (get_currency : 'tags this -> string) =
          fun (x2408 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2408) "currency")
        let (set_currency : 'tags this -> string -> unit) =
          fun (x2410 : 'tags this) ->
            fun (x2411 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2410) "currency"
                (Ojs.string_to_js x2411)
        let (get_minimumIntegerDigits : 'tags this -> float) =
          fun (x2413 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2413)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits : 'tags this -> float -> unit) =
          fun (x2415 : 'tags this) ->
            fun (x2416 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2415)
                "minimumIntegerDigits" (Ojs.float_to_js x2416)
        let (get_minimumFractionDigits : 'tags this -> float) =
          fun (x2418 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2418)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits : 'tags this -> float -> unit) =
          fun (x2420 : 'tags this) ->
            fun (x2421 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2420)
                "minimumFractionDigits" (Ojs.float_to_js x2421)
        let (get_maximumFractionDigits : 'tags this -> float) =
          fun (x2423 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2423)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits : 'tags this -> float -> unit) =
          fun (x2425 : 'tags this) ->
            fun (x2426 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2425)
                "maximumFractionDigits" (Ojs.float_to_js x2426)
        let (get_minimumSignificantDigits : 'tags this -> float) =
          fun (x2428 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2428)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2430 : 'tags this) ->
            fun (x2431 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2430)
                "minimumSignificantDigits" (Ojs.float_to_js x2431)
        let (get_maximumSignificantDigits : 'tags this -> float) =
          fun (x2433 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2433)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2435 : 'tags this) ->
            fun (x2436 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2435)
                "maximumSignificantDigits" (Ojs.float_to_js x2436)
        let (get_useGrouping : 'tags this -> bool) =
          fun (x2438 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2438) "useGrouping")
        let (set_useGrouping : 'tags this -> bool -> unit) =
          fun (x2440 : 'tags this) ->
            fun (x2441 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2440) "useGrouping"
                (Ojs.bool_to_js x2441)
        let (create :
          compactDisplay:[ `L_s56_long  | `L_s89_short ] ->
            notation:[ `L_s27_compact  | `L_s34_engineering 
                     | `L_s85_scientific  | `L_s90_standard ]
              ->
              signDisplay:[ `L_s21_always  | `L_s22_auto 
                          | `L_s36_exceptZero  | `L_s69_never ]
                ->
                unit:string ->
                  unitDisplay:[ `L_s56_long  | `L_s68_narrow 
                              | `L_s89_short ]
                    ->
                    currencyDisplay:string ->
                      currencySign:string ->
                        locale:string ->
                          numberingSystem:string ->
                            style:string ->
                              currency:string ->
                                minimumIntegerDigits:float ->
                                  minimumFractionDigits:float ->
                                    maximumFractionDigits:float ->
                                      minimumSignificantDigits:float ->
                                        maximumSignificantDigits:float ->
                                          useGrouping:bool -> unit -> t)
          =
          fun ~compactDisplay:(x2443 : [ `L_s56_long  | `L_s89_short ]) ->
            fun
              ~notation:(x2444 :
                          [ `L_s27_compact  | `L_s34_engineering 
                          | `L_s85_scientific  | `L_s90_standard ])
              ->
              fun
                ~signDisplay:(x2445 :
                               [ `L_s21_always  | `L_s22_auto 
                               | `L_s36_exceptZero  | `L_s69_never ])
                ->
                fun ~unit:(x2446 : string) ->
                  fun
                    ~unitDisplay:(x2447 :
                                   [ `L_s56_long  | `L_s68_narrow 
                                   | `L_s89_short ])
                    ->
                    fun ~currencyDisplay:(x2448 : string) ->
                      fun ~currencySign:(x2449 : string) ->
                        fun ~locale:(x2450 : string) ->
                          fun ~numberingSystem:(x2451 : string) ->
                            fun ~style:(x2452 : string) ->
                              fun ~currency:(x2453 : string) ->
                                fun ~minimumIntegerDigits:(x2454 : float) ->
                                  fun ~minimumFractionDigits:(x2455 : float)
                                    ->
                                    fun
                                      ~maximumFractionDigits:(x2456 : float)
                                      ->
                                      fun
                                        ~minimumSignificantDigits:(x2457 :
                                                                    float)
                                        ->
                                        fun
                                          ~maximumSignificantDigits:(x2458 :
                                                                    float)
                                          ->
                                          fun ~useGrouping:(x2459 : bool) ->
                                            fun () ->
                                              let x2460 = Ojs.empty_obj () in
                                              Ojs.set_prop_ascii x2460
                                                "compactDisplay"
                                                (match x2443 with
                                                 | `L_s56_long ->
                                                     Ojs.string_to_js "long"
                                                 | `L_s89_short ->
                                                     Ojs.string_to_js "short");
                                              Ojs.set_prop_ascii x2460
                                                "notation"
                                                (match x2444 with
                                                 | `L_s27_compact ->
                                                     Ojs.string_to_js
                                                       "compact"
                                                 | `L_s34_engineering ->
                                                     Ojs.string_to_js
                                                       "engineering"
                                                 | `L_s85_scientific ->
                                                     Ojs.string_to_js
                                                       "scientific"
                                                 | `L_s90_standard ->
                                                     Ojs.string_to_js
                                                       "standard");
                                              Ojs.set_prop_ascii x2460
                                                "signDisplay"
                                                (match x2445 with
                                                 | `L_s21_always ->
                                                     Ojs.string_to_js
                                                       "always"
                                                 | `L_s22_auto ->
                                                     Ojs.string_to_js "auto"
                                                 | `L_s36_exceptZero ->
                                                     Ojs.string_to_js
                                                       "exceptZero"
                                                 | `L_s69_never ->
                                                     Ojs.string_to_js "never");
                                              Ojs.set_prop_ascii x2460 "unit"
                                                (Ojs.string_to_js x2446);
                                              Ojs.set_prop_ascii x2460
                                                "unitDisplay"
                                                (match x2447 with
                                                 | `L_s56_long ->
                                                     Ojs.string_to_js "long"
                                                 | `L_s68_narrow ->
                                                     Ojs.string_to_js
                                                       "narrow"
                                                 | `L_s89_short ->
                                                     Ojs.string_to_js "short");
                                              Ojs.set_prop_ascii x2460
                                                "currencyDisplay"
                                                (Ojs.string_to_js x2448);
                                              Ojs.set_prop_ascii x2460
                                                "currencySign"
                                                (Ojs.string_to_js x2449);
                                              Ojs.set_prop_ascii x2460
                                                "locale"
                                                (Ojs.string_to_js x2450);
                                              Ojs.set_prop_ascii x2460
                                                "numberingSystem"
                                                (Ojs.string_to_js x2451);
                                              Ojs.set_prop_ascii x2460
                                                "style"
                                                (Ojs.string_to_js x2452);
                                              Ojs.set_prop_ascii x2460
                                                "currency"
                                                (Ojs.string_to_js x2453);
                                              Ojs.set_prop_ascii x2460
                                                "minimumIntegerDigits"
                                                (Ojs.float_to_js x2454);
                                              Ojs.set_prop_ascii x2460
                                                "minimumFractionDigits"
                                                (Ojs.float_to_js x2455);
                                              Ojs.set_prop_ascii x2460
                                                "maximumFractionDigits"
                                                (Ojs.float_to_js x2456);
                                              Ojs.set_prop_ascii x2460
                                                "minimumSignificantDigits"
                                                (Ojs.float_to_js x2457);
                                              Ojs.set_prop_ascii x2460
                                                "maximumSignificantDigits"
                                                (Ojs.float_to_js x2458);
                                              Ojs.set_prop_ascii x2460
                                                "useGrouping"
                                                (Ojs.bool_to_js x2459);
                                              t_of_js x2460
        let cast_from = Obj.magic
      end
    module ES2020NumberFormatPartType =
      struct
        type t =
          [ `L_s27_compact  | `L_s37_exponentInteger 
          | `L_s38_exponentMinusSign  | `L_s39_exponentSeparator 
          | `L_s96_unit  | `L_s97_unknown ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2462 : Ojs.t) ->
            let x2463 = x2462 in
            match Ojs.string_of_js x2463 with
            | "compact" -> `L_s27_compact
            | "exponentInteger" -> `L_s37_exponentInteger
            | "exponentMinusSign" -> `L_s38_exponentMinusSign
            | "exponentSeparator" -> `L_s39_exponentSeparator
            | "unit" -> `L_s96_unit
            | "unknown" -> `L_s97_unknown
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2461 :
              [ `L_s27_compact  | `L_s37_exponentInteger 
              | `L_s38_exponentMinusSign  | `L_s39_exponentSeparator 
              | `L_s96_unit  | `L_s97_unknown ])
            ->
            match x2461 with
            | `L_s27_compact -> Ojs.string_to_js "compact"
            | `L_s37_exponentInteger -> Ojs.string_to_js "exponentInteger"
            | `L_s38_exponentMinusSign ->
                Ojs.string_to_js "exponentMinusSign"
            | `L_s39_exponentSeparator ->
                Ojs.string_to_js "exponentSeparator"
            | `L_s96_unit -> Ojs.string_to_js "unit"
            | `L_s97_unknown -> Ojs.string_to_js "unknown"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2465 : Ojs.t) -> t_of_js x2465
        and t_0_to_js : t_0 -> Ojs.t = fun (x2464 : t) -> t_to_js x2464
      end
    module ES2018NumberFormatPartType =
      struct
        type t =
          [ `L_s26_code  | `L_s28_currency  | `L_s32_decimal 
          | `L_s42_fraction  | `L_s45_group  | `L_s52_infinity 
          | `L_s53_integer  | `L_s55_literal  | `L_s61_minusSign 
          | `L_s66_name  | `L_s67_nan  | `L_s78_percent 
          | `L_s79_percentSign  | `L_s80_plusSign  | `L_s92_symbol ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2467 : Ojs.t) ->
            let x2468 = x2467 in
            match Ojs.string_of_js x2468 with
            | "code" -> `L_s26_code
            | "currency" -> `L_s28_currency
            | "decimal" -> `L_s32_decimal
            | "fraction" -> `L_s42_fraction
            | "group" -> `L_s45_group
            | "infinity" -> `L_s52_infinity
            | "integer" -> `L_s53_integer
            | "literal" -> `L_s55_literal
            | "minusSign" -> `L_s61_minusSign
            | "name" -> `L_s66_name
            | "nan" -> `L_s67_nan
            | "percent" -> `L_s78_percent
            | "percentSign" -> `L_s79_percentSign
            | "plusSign" -> `L_s80_plusSign
            | "symbol" -> `L_s92_symbol
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2466 :
              [ `L_s26_code  | `L_s28_currency  | `L_s32_decimal 
              | `L_s42_fraction  | `L_s45_group  | `L_s52_infinity 
              | `L_s53_integer  | `L_s55_literal  | `L_s61_minusSign 
              | `L_s66_name  | `L_s67_nan  | `L_s78_percent 
              | `L_s79_percentSign  | `L_s80_plusSign  | `L_s92_symbol ])
            ->
            match x2466 with
            | `L_s26_code -> Ojs.string_to_js "code"
            | `L_s28_currency -> Ojs.string_to_js "currency"
            | `L_s32_decimal -> Ojs.string_to_js "decimal"
            | `L_s42_fraction -> Ojs.string_to_js "fraction"
            | `L_s45_group -> Ojs.string_to_js "group"
            | `L_s52_infinity -> Ojs.string_to_js "infinity"
            | `L_s53_integer -> Ojs.string_to_js "integer"
            | `L_s55_literal -> Ojs.string_to_js "literal"
            | `L_s61_minusSign -> Ojs.string_to_js "minusSign"
            | `L_s66_name -> Ojs.string_to_js "name"
            | `L_s67_nan -> Ojs.string_to_js "nan"
            | `L_s78_percent -> Ojs.string_to_js "percent"
            | `L_s79_percentSign -> Ojs.string_to_js "percentSign"
            | `L_s80_plusSign -> Ojs.string_to_js "plusSign"
            | `L_s92_symbol -> Ojs.string_to_js "symbol"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2470 : Ojs.t) -> t_of_js x2470
        and t_0_to_js : t_0 -> Ojs.t = fun (x2469 : t) -> t_to_js x2469
      end
    module NumberFormatPartTypes =
      struct
        type t =
          [ `L_s26_code  | `L_s27_compact  | `L_s28_currency 
          | `L_s32_decimal  | `L_s37_exponentInteger 
          | `L_s38_exponentMinusSign  | `L_s39_exponentSeparator 
          | `L_s42_fraction  | `L_s45_group  | `L_s52_infinity 
          | `L_s53_integer  | `L_s55_literal  | `L_s61_minusSign 
          | `L_s66_name  | `L_s67_nan  | `L_s78_percent 
          | `L_s79_percentSign  | `L_s80_plusSign  | `L_s92_symbol 
          | `L_s96_unit  | `L_s97_unknown ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2472 : Ojs.t) ->
            let x2473 = x2472 in
            match Ojs.string_of_js x2473 with
            | "code" -> `L_s26_code
            | "compact" -> `L_s27_compact
            | "currency" -> `L_s28_currency
            | "decimal" -> `L_s32_decimal
            | "exponentInteger" -> `L_s37_exponentInteger
            | "exponentMinusSign" -> `L_s38_exponentMinusSign
            | "exponentSeparator" -> `L_s39_exponentSeparator
            | "fraction" -> `L_s42_fraction
            | "group" -> `L_s45_group
            | "infinity" -> `L_s52_infinity
            | "integer" -> `L_s53_integer
            | "literal" -> `L_s55_literal
            | "minusSign" -> `L_s61_minusSign
            | "name" -> `L_s66_name
            | "nan" -> `L_s67_nan
            | "percent" -> `L_s78_percent
            | "percentSign" -> `L_s79_percentSign
            | "plusSign" -> `L_s80_plusSign
            | "symbol" -> `L_s92_symbol
            | "unit" -> `L_s96_unit
            | "unknown" -> `L_s97_unknown
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2471 :
              [ `L_s26_code  | `L_s27_compact  | `L_s28_currency 
              | `L_s32_decimal  | `L_s37_exponentInteger 
              | `L_s38_exponentMinusSign  | `L_s39_exponentSeparator 
              | `L_s42_fraction  | `L_s45_group  | `L_s52_infinity 
              | `L_s53_integer  | `L_s55_literal  | `L_s61_minusSign 
              | `L_s66_name  | `L_s67_nan  | `L_s78_percent 
              | `L_s79_percentSign  | `L_s80_plusSign  | `L_s92_symbol 
              | `L_s96_unit  | `L_s97_unknown ])
            ->
            match x2471 with
            | `L_s26_code -> Ojs.string_to_js "code"
            | `L_s27_compact -> Ojs.string_to_js "compact"
            | `L_s28_currency -> Ojs.string_to_js "currency"
            | `L_s32_decimal -> Ojs.string_to_js "decimal"
            | `L_s37_exponentInteger -> Ojs.string_to_js "exponentInteger"
            | `L_s38_exponentMinusSign ->
                Ojs.string_to_js "exponentMinusSign"
            | `L_s39_exponentSeparator ->
                Ojs.string_to_js "exponentSeparator"
            | `L_s42_fraction -> Ojs.string_to_js "fraction"
            | `L_s45_group -> Ojs.string_to_js "group"
            | `L_s52_infinity -> Ojs.string_to_js "infinity"
            | `L_s53_integer -> Ojs.string_to_js "integer"
            | `L_s55_literal -> Ojs.string_to_js "literal"
            | `L_s61_minusSign -> Ojs.string_to_js "minusSign"
            | `L_s66_name -> Ojs.string_to_js "name"
            | `L_s67_nan -> Ojs.string_to_js "nan"
            | `L_s78_percent -> Ojs.string_to_js "percent"
            | `L_s79_percentSign -> Ojs.string_to_js "percentSign"
            | `L_s80_plusSign -> Ojs.string_to_js "plusSign"
            | `L_s92_symbol -> Ojs.string_to_js "symbol"
            | `L_s96_unit -> Ojs.string_to_js "unit"
            | `L_s97_unknown -> Ojs.string_to_js "unknown"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2475 : Ojs.t) -> t_of_js x2475
        and t_0_to_js : t_0 -> Ojs.t = fun (x2474 : t) -> t_to_js x2474
      end
    module NumberFormatPart =
      struct
        type t = [ `Intl_NumberFormatPart ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2477 : Ojs.t) -> t_of_js x2477
        and t_0_to_js : t_0 -> Ojs.t = fun (x2476 : t) -> t_to_js x2476
        type tags = [ `Intl_NumberFormatPart ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_NumberFormatPart ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2480 : Ojs.t) -> intf_of_js __tags_of_js x2480
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2478 : __tags intf) -> intf_to_js __tags_to_js x2478
        let (get_type : 'tags this -> NumberFormatPartTypes.t) =
          fun (x2482 : 'tags this) ->
            NumberFormatPartTypes.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2482) "type")
        let (set_type : 'tags this -> NumberFormatPartTypes.t -> unit) =
          fun (x2484 : 'tags this) ->
            fun (x2485 : NumberFormatPartTypes.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2484) "type"
                (NumberFormatPartTypes.t_to_js x2485)
        let (get_value : 'tags this -> string) =
          fun (x2487 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2487) "value")
        let (set_value : 'tags this -> string -> unit) =
          fun (x2489 : 'tags this) ->
            fun (x2490 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2489) "value"
                (Ojs.string_to_js x2490)
        let (create :
          type_:NumberFormatPartTypes.t -> value:string -> unit -> t) =
          fun ~type_:(x2492 : NumberFormatPartTypes.t) ->
            fun ~value:(x2493 : string) ->
              fun () ->
                let x2494 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x2494 "type"
                  (NumberFormatPartTypes.t_to_js x2492);
                Ojs.set_prop_ascii x2494 "value" (Ojs.string_to_js x2493);
                t_of_js x2494
        let cast_from = Obj.magic
      end
    module NumberFormatOptions =
      struct
        type t = [ `Intl_NumberFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2496 : Ojs.t) -> t_of_js x2496
        and t_0_to_js : t_0 -> Ojs.t = fun (x2495 : t) -> t_to_js x2495
        type tags = [ `Intl_NumberFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_NumberFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2499 : Ojs.t) -> intf_of_js __tags_of_js x2499
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2497 : __tags intf) -> intf_to_js __tags_to_js x2497
        let (get_compactDisplay :
          'tags this -> [ `L_s56_long  | `L_s89_short ] option) =
          fun (x2501 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2503 : Ojs.t) ->
                 let x2504 = x2503 in
                 match Ojs.string_of_js x2504 with
                 | "long" -> `L_s56_long
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2501)
                 "compactDisplay")
        let (set_compactDisplay :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s89_short ] 
            | `U2 of [ `L_s56_long ] ] -> unit)
          =
          fun (x2505 : 'tags this) ->
            fun
              (x2506 :
                [ `Undefined of undefined  | `U1 of [ `L_s89_short ] 
                | `U2 of [ `L_s56_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2505)
                "compactDisplay"
                (match x2506 with
                 | `Undefined x2507 -> undefined_to_js x2507
                 | `U1 x2508 ->
                     (match x2508 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U2 x2509 ->
                     (match x2509 with
                      | `L_s56_long -> Ojs.string_to_js "long"))
        let (get_notation :
          'tags this ->
            [ `L_s27_compact  | `L_s34_engineering  | `L_s85_scientific 
            | `L_s90_standard ] option)
          =
          fun (x2511 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2513 : Ojs.t) ->
                 let x2514 = x2513 in
                 match Ojs.string_of_js x2514 with
                 | "compact" -> `L_s27_compact
                 | "engineering" -> `L_s34_engineering
                 | "scientific" -> `L_s85_scientific
                 | "standard" -> `L_s90_standard
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2511) "notation")
        let (set_notation :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s90_standard ] 
            | `U2 of [ `L_s85_scientific ]  | `U3 of [ `L_s34_engineering ] 
            | `U4 of [ `L_s27_compact ] ] -> unit)
          =
          fun (x2515 : 'tags this) ->
            fun
              (x2516 :
                [ `Undefined of undefined  | `U1 of [ `L_s90_standard ] 
                | `U2 of [ `L_s85_scientific ] 
                | `U3 of [ `L_s34_engineering ] 
                | `U4 of [ `L_s27_compact ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2515) "notation"
                (match x2516 with
                 | `Undefined x2517 -> undefined_to_js x2517
                 | `U1 x2518 ->
                     (match x2518 with
                      | `L_s90_standard -> Ojs.string_to_js "standard")
                 | `U2 x2519 ->
                     (match x2519 with
                      | `L_s85_scientific -> Ojs.string_to_js "scientific")
                 | `U3 x2520 ->
                     (match x2520 with
                      | `L_s34_engineering -> Ojs.string_to_js "engineering")
                 | `U4 x2521 ->
                     (match x2521 with
                      | `L_s27_compact -> Ojs.string_to_js "compact"))
        let (get_signDisplay :
          'tags this ->
            [ `L_s21_always  | `L_s22_auto  | `L_s36_exceptZero 
            | `L_s69_never ] option)
          =
          fun (x2523 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2525 : Ojs.t) ->
                 let x2526 = x2525 in
                 match Ojs.string_of_js x2526 with
                 | "always" -> `L_s21_always
                 | "auto" -> `L_s22_auto
                 | "exceptZero" -> `L_s36_exceptZero
                 | "never" -> `L_s69_never
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2523) "signDisplay")
        let (set_signDisplay :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s22_auto ] 
            | `U2 of [ `L_s69_never ]  | `U3 of [ `L_s21_always ] 
            | `U4 of [ `L_s36_exceptZero ] ] -> unit)
          =
          fun (x2527 : 'tags this) ->
            fun
              (x2528 :
                [ `Undefined of undefined  | `U1 of [ `L_s22_auto ] 
                | `U2 of [ `L_s69_never ]  | `U3 of [ `L_s21_always ] 
                | `U4 of [ `L_s36_exceptZero ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2527) "signDisplay"
                (match x2528 with
                 | `Undefined x2529 -> undefined_to_js x2529
                 | `U1 x2530 ->
                     (match x2530 with
                      | `L_s22_auto -> Ojs.string_to_js "auto")
                 | `U2 x2531 ->
                     (match x2531 with
                      | `L_s69_never -> Ojs.string_to_js "never")
                 | `U3 x2532 ->
                     (match x2532 with
                      | `L_s21_always -> Ojs.string_to_js "always")
                 | `U4 x2533 ->
                     (match x2533 with
                      | `L_s36_exceptZero -> Ojs.string_to_js "exceptZero"))
        let (get_unit : 'tags this -> string option) =
          fun (x2535 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2535) "unit")
        let (set_unit :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2538 : 'tags this) ->
            fun (x2539 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2538) "unit"
                (match x2539 with
                 | `Undefined x2540 -> undefined_to_js x2540
                 | `U1 x2541 -> Ojs.string_to_js x2541)
        let (get_unitDisplay :
          'tags this ->
            [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option)
          =
          fun (x2543 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2545 : Ojs.t) ->
                 let x2546 = x2545 in
                 match Ojs.string_of_js x2546 with
                 | "long" -> `L_s56_long
                 | "narrow" -> `L_s68_narrow
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2543) "unitDisplay")
        let (set_unitDisplay :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s89_short ] 
            | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s68_narrow ] ] -> 
              unit)
          =
          fun (x2547 : 'tags this) ->
            fun
              (x2548 :
                [ `Undefined of undefined  | `U1 of [ `L_s89_short ] 
                | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s68_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2547) "unitDisplay"
                (match x2548 with
                 | `Undefined x2549 -> undefined_to_js x2549
                 | `U1 x2550 ->
                     (match x2550 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U2 x2551 ->
                     (match x2551 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U3 x2552 ->
                     (match x2552 with
                      | `L_s68_narrow -> Ojs.string_to_js "narrow"))
        let (get_currencyDisplay : 'tags this -> string option) =
          fun (x2554 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2554)
                 "currencyDisplay")
        let (set_currencyDisplay :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2557 : 'tags this) ->
            fun (x2558 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2557)
                "currencyDisplay"
                (match x2558 with
                 | `Undefined x2559 -> undefined_to_js x2559
                 | `U1 x2560 -> Ojs.string_to_js x2560)
        let (get_currencySign : 'tags this -> string option) =
          fun (x2562 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2562) "currencySign")
        let (set_currencySign :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2565 : 'tags this) ->
            fun (x2566 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2565) "currencySign"
                (match x2566 with
                 | `Undefined x2567 -> undefined_to_js x2567
                 | `U1 x2568 -> Ojs.string_to_js x2568)
        let (get_localeMatcher : 'tags this -> string option) =
          fun (x2570 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2570)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2573 : 'tags this) ->
            fun (x2574 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2573) "localeMatcher"
                (match x2574 with
                 | `Undefined x2575 -> undefined_to_js x2575
                 | `U1 x2576 -> Ojs.string_to_js x2576)
        let (get_style : 'tags this -> string option) =
          fun (x2578 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2578) "style")
        let (set_style :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2581 : 'tags this) ->
            fun (x2582 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2581) "style"
                (match x2582 with
                 | `Undefined x2583 -> undefined_to_js x2583
                 | `U1 x2584 -> Ojs.string_to_js x2584)
        let (get_currency : 'tags this -> string option) =
          fun (x2586 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2586) "currency")
        let (set_currency :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2589 : 'tags this) ->
            fun (x2590 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2589) "currency"
                (match x2590 with
                 | `Undefined x2591 -> undefined_to_js x2591
                 | `U1 x2592 -> Ojs.string_to_js x2592)
        let (get_currencySign' : 'tags this -> string option) =
          fun (x2594 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2594) "currencySign")
        let (set_currencySign' :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2597 : 'tags this) ->
            fun (x2598 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2597) "currencySign"
                (match x2598 with
                 | `Undefined x2599 -> undefined_to_js x2599
                 | `U1 x2600 -> Ojs.string_to_js x2600)
        let (get_useGrouping : 'tags this -> bool option) =
          fun (x2602 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2602) "useGrouping")
        let (set_useGrouping :
          'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit) =
          fun (x2605 : 'tags this) ->
            fun (x2606 : [ `Undefined of undefined  | `U1 of bool ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2605) "useGrouping"
                (match x2606 with
                 | `Undefined x2607 -> undefined_to_js x2607
                 | `U1 x2608 -> Ojs.bool_to_js x2608)
        let (get_minimumIntegerDigits : 'tags this -> float option) =
          fun (x2610 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2610)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2613 : 'tags this) ->
            fun (x2614 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2613)
                "minimumIntegerDigits"
                (match x2614 with
                 | `Undefined x2615 -> undefined_to_js x2615
                 | `U1 x2616 -> Ojs.float_to_js x2616)
        let (get_minimumFractionDigits : 'tags this -> float option) =
          fun (x2618 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2618)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2621 : 'tags this) ->
            fun (x2622 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2621)
                "minimumFractionDigits"
                (match x2622 with
                 | `Undefined x2623 -> undefined_to_js x2623
                 | `U1 x2624 -> Ojs.float_to_js x2624)
        let (get_maximumFractionDigits : 'tags this -> float option) =
          fun (x2626 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2626)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2629 : 'tags this) ->
            fun (x2630 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2629)
                "maximumFractionDigits"
                (match x2630 with
                 | `Undefined x2631 -> undefined_to_js x2631
                 | `U1 x2632 -> Ojs.float_to_js x2632)
        let (get_minimumSignificantDigits : 'tags this -> float option) =
          fun (x2634 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2634)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2637 : 'tags this) ->
            fun (x2638 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2637)
                "minimumSignificantDigits"
                (match x2638 with
                 | `Undefined x2639 -> undefined_to_js x2639
                 | `U1 x2640 -> Ojs.float_to_js x2640)
        let (get_maximumSignificantDigits : 'tags this -> float option) =
          fun (x2642 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2642)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2645 : 'tags this) ->
            fun (x2646 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2645)
                "maximumSignificantDigits"
                (match x2646 with
                 | `Undefined x2647 -> undefined_to_js x2647
                 | `U1 x2648 -> Ojs.float_to_js x2648)
        let (create :
          ?compactDisplay:[ `L_s56_long  | `L_s89_short ] ->
            ?notation:[ `L_s27_compact  | `L_s34_engineering 
                      | `L_s85_scientific  | `L_s90_standard ]
              ->
              ?signDisplay:[ `L_s21_always  | `L_s22_auto 
                           | `L_s36_exceptZero  | `L_s69_never ]
                ->
                ?unit:string ->
                  ?unitDisplay:[ `L_s56_long  | `L_s68_narrow 
                               | `L_s89_short ]
                    ->
                    ?currencyDisplay:string ->
                      ?currencySign:string ->
                        ?localeMatcher:string ->
                          ?style:string ->
                            ?currency:string ->
                              ?currencySign:string ->
                                ?useGrouping:bool ->
                                  ?minimumIntegerDigits:float ->
                                    ?minimumFractionDigits:float ->
                                      ?maximumFractionDigits:float ->
                                        ?minimumSignificantDigits:float ->
                                          ?maximumSignificantDigits:float ->
                                            unit -> t)
          =
          fun
            ?compactDisplay:(x2650 : [ `L_s56_long  | `L_s89_short ] option)
            ->
            fun
              ?notation:(x2651 :
                          [ `L_s27_compact  | `L_s34_engineering 
                          | `L_s85_scientific  | `L_s90_standard ] option)
              ->
              fun
                ?signDisplay:(x2652 :
                               [ `L_s21_always  | `L_s22_auto 
                               | `L_s36_exceptZero  | `L_s69_never ] option)
                ->
                fun ?unit:(x2653 : string option) ->
                  fun
                    ?unitDisplay:(x2654 :
                                   [ `L_s56_long  | `L_s68_narrow 
                                   | `L_s89_short ] option)
                    ->
                    fun ?currencyDisplay:(x2655 : string option) ->
                      fun ?currencySign:(x2656 : string option) ->
                        fun ?localeMatcher:(x2657 : string option) ->
                          fun ?style:(x2658 : string option) ->
                            fun ?currency:(x2659 : string option) ->
                              fun ?currencySign:(x2660 : string option) ->
                                fun ?useGrouping:(x2661 : bool option) ->
                                  fun
                                    ?minimumIntegerDigits:(x2662 :
                                                            float option)
                                    ->
                                    fun
                                      ?minimumFractionDigits:(x2663 :
                                                               float option)
                                      ->
                                      fun
                                        ?maximumFractionDigits:(x2664 :
                                                                 float option)
                                        ->
                                        fun
                                          ?minimumSignificantDigits:(x2665 :
                                                                    float
                                                                    option)
                                          ->
                                          fun
                                            ?maximumSignificantDigits:
                                            (x2666 : float option) ->
                                            fun () ->
                                              let x2667 = Ojs.empty_obj () in
                                              (match x2650 with
                                               | Some x2684 ->
                                                   Ojs.set_prop_ascii x2667
                                                     "compactDisplay"
                                                     (match x2684 with
                                                      | `L_s56_long ->
                                                          Ojs.string_to_js
                                                            "long"
                                                      | `L_s89_short ->
                                                          Ojs.string_to_js
                                                            "short")
                                               | None -> ());
                                              (match x2651 with
                                               | Some x2683 ->
                                                   Ojs.set_prop_ascii x2667
                                                     "notation"
                                                     (match x2683 with
                                                      | `L_s27_compact ->
                                                          Ojs.string_to_js
                                                            "compact"
                                                      | `L_s34_engineering ->
                                                          Ojs.string_to_js
                                                            "engineering"
                                                      | `L_s85_scientific ->
                                                          Ojs.string_to_js
                                                            "scientific"
                                                      | `L_s90_standard ->
                                                          Ojs.string_to_js
                                                            "standard")
                                               | None -> ());
                                              (match x2652 with
                                               | Some x2682 ->
                                                   Ojs.set_prop_ascii x2667
                                                     "signDisplay"
                                                     (match x2682 with
                                                      | `L_s21_always ->
                                                          Ojs.string_to_js
                                                            "always"
                                                      | `L_s22_auto ->
                                                          Ojs.string_to_js
                                                            "auto"
                                                      | `L_s36_exceptZero ->
                                                          Ojs.string_to_js
                                                            "exceptZero"
                                                      | `L_s69_never ->
                                                          Ojs.string_to_js
                                                            "never")
                                               | None -> ());
                                              (match x2653 with
                                               | Some x2681 ->
                                                   Ojs.set_prop_ascii x2667
                                                     "unit"
                                                     (Ojs.string_to_js x2681)
                                               | None -> ());
                                              (match x2654 with
                                               | Some x2680 ->
                                                   Ojs.set_prop_ascii x2667
                                                     "unitDisplay"
                                                     (match x2680 with
                                                      | `L_s56_long ->
                                                          Ojs.string_to_js
                                                            "long"
                                                      | `L_s68_narrow ->
                                                          Ojs.string_to_js
                                                            "narrow"
                                                      | `L_s89_short ->
                                                          Ojs.string_to_js
                                                            "short")
                                               | None -> ());
                                              (match x2655 with
                                               | Some x2679 ->
                                                   Ojs.set_prop_ascii x2667
                                                     "currencyDisplay"
                                                     (Ojs.string_to_js x2679)
                                               | None -> ());
                                              (match x2656 with
                                               | Some x2678 ->
                                                   Ojs.set_prop_ascii x2667
                                                     "currencySign"
                                                     (Ojs.string_to_js x2678)
                                               | None -> ());
                                              (match x2657 with
                                               | Some x2677 ->
                                                   Ojs.set_prop_ascii x2667
                                                     "localeMatcher"
                                                     (Ojs.string_to_js x2677)
                                               | None -> ());
                                              (match x2658 with
                                               | Some x2676 ->
                                                   Ojs.set_prop_ascii x2667
                                                     "style"
                                                     (Ojs.string_to_js x2676)
                                               | None -> ());
                                              (match x2659 with
                                               | Some x2675 ->
                                                   Ojs.set_prop_ascii x2667
                                                     "currency"
                                                     (Ojs.string_to_js x2675)
                                               | None -> ());
                                              (match x2660 with
                                               | Some x2674 ->
                                                   Ojs.set_prop_ascii x2667
                                                     "currencySign"
                                                     (Ojs.string_to_js x2674)
                                               | None -> ());
                                              (match x2661 with
                                               | Some x2673 ->
                                                   Ojs.set_prop_ascii x2667
                                                     "useGrouping"
                                                     (Ojs.bool_to_js x2673)
                                               | None -> ());
                                              (match x2662 with
                                               | Some x2672 ->
                                                   Ojs.set_prop_ascii x2667
                                                     "minimumIntegerDigits"
                                                     (Ojs.float_to_js x2672)
                                               | None -> ());
                                              (match x2663 with
                                               | Some x2671 ->
                                                   Ojs.set_prop_ascii x2667
                                                     "minimumFractionDigits"
                                                     (Ojs.float_to_js x2671)
                                               | None -> ());
                                              (match x2664 with
                                               | Some x2670 ->
                                                   Ojs.set_prop_ascii x2667
                                                     "maximumFractionDigits"
                                                     (Ojs.float_to_js x2670)
                                               | None -> ());
                                              (match x2665 with
                                               | Some x2669 ->
                                                   Ojs.set_prop_ascii x2667
                                                     "minimumSignificantDigits"
                                                     (Ojs.float_to_js x2669)
                                               | None -> ());
                                              (match x2666 with
                                               | Some x2668 ->
                                                   Ojs.set_prop_ascii x2667
                                                     "maximumSignificantDigits"
                                                     (Ojs.float_to_js x2668)
                                               | None -> ());
                                              t_of_js x2667
        let cast_from = Obj.magic
      end
    module NumberFormat =
      struct
        type t = [ `Intl_NumberFormat ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2686 : Ojs.t) -> t_of_js x2686
        and t_0_to_js : t_0 -> Ojs.t = fun (x2685 : t) -> t_to_js x2685
        type tags = [ `Intl_NumberFormat ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_NumberFormat ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2689 : Ojs.t) -> intf_of_js __tags_of_js x2689
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2687 : __tags intf) -> intf_to_js __tags_to_js x2687
        let (formatRange :
          'tags this ->
            startDate:[ `U1 of float  | `U2 of bigint ] ->
              endDate:[ `U1 of float  | `U2 of bigint ] -> string)
          =
          fun (x2697 : 'tags this) ->
            fun ~startDate:(x2691 : [ `U1 of float  | `U2 of bigint ]) ->
              fun ~endDate:(x2694 : [ `U1 of float  | `U2 of bigint ]) ->
                Ojs.string_of_js
                  (Ojs.call (this_to_js Obj.magic x2697) "formatRange"
                     [|((match x2691 with
                         | `U1 x2692 -> Ojs.float_to_js x2692
                         | `U2 x2693 -> bigint_to_js x2693));((match x2694
                                                               with
                                                               | `U1 x2695 ->
                                                                   Ojs.float_to_js
                                                                    x2695
                                                               | `U2 x2696 ->
                                                                   bigint_to_js
                                                                    x2696))|])
        let (formatRangeToParts :
          'tags this ->
            startDate:[ `U1 of float  | `U2 of bigint ] ->
              endDate:[ `U1 of float  | `U2 of bigint ] ->
                NumberFormatPart.t list)
          =
          fun (x2705 : 'tags this) ->
            fun ~startDate:(x2699 : [ `U1 of float  | `U2 of bigint ]) ->
              fun ~endDate:(x2702 : [ `U1 of float  | `U2 of bigint ]) ->
                Ojs.list_of_js NumberFormatPart.t_of_js
                  (Ojs.call (this_to_js Obj.magic x2705) "formatRangeToParts"
                     [|((match x2699 with
                         | `U1 x2700 -> Ojs.float_to_js x2700
                         | `U2 x2701 -> bigint_to_js x2701));((match x2702
                                                               with
                                                               | `U1 x2703 ->
                                                                   Ojs.float_to_js
                                                                    x2703
                                                               | `U2 x2704 ->
                                                                   bigint_to_js
                                                                    x2704))|])
        let (format :
          'tags this -> value:[ `U1 of float  | `U2 of bigint ] -> string) =
          fun (x2711 : 'tags this) ->
            fun ~value:(x2708 : [ `U1 of float  | `U2 of bigint ]) ->
              Ojs.string_of_js
                (Ojs.call (this_to_js Obj.magic x2711) "format"
                   [|((match x2708 with
                       | `U1 x2709 -> Ojs.float_to_js x2709
                       | `U2 x2710 -> bigint_to_js x2710))|])
        let (resolvedOptions : 'tags this -> ResolvedNumberFormatOptions.t) =
          fun (x2713 : 'tags this) ->
            ResolvedNumberFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2713) "resolvedOptions" [||])
        let (formatToParts :
          'tags this ->
            ?number:[ `U1 of float  | `U2 of bigint ] ->
              unit -> NumberFormatPart.t list)
          =
          fun (x2720 : 'tags this) ->
            fun ?number:(x2715 : [ `U1 of float  | `U2 of bigint ] option) ->
              fun () ->
                Ojs.list_of_js NumberFormatPart.t_of_js
                  (let x2722 = this_to_js Obj.magic x2720 in
                   Ojs.call (Ojs.get_prop_ascii x2722 "formatToParts")
                     "apply"
                     [|x2722;((let x2716 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x2715 with
                                | Some x2717 ->
                                    ignore
                                      (Ojs.call x2716 "push"
                                         [|((match x2717 with
                                             | `U1 x2718 ->
                                                 Ojs.float_to_js x2718
                                             | `U2 x2719 ->
                                                 bigint_to_js x2719))|])
                                | None -> ());
                               x2716))|])
        let (format' : 'tags this -> value:float -> string) =
          fun (x2725 : 'tags this) ->
            fun ~value:(x2724 : float) ->
              Ojs.string_of_js
                (Ojs.call (this_to_js Obj.magic x2725) "format"
                   [|(Ojs.float_to_js x2724)|])
        let (resolvedOptions' : 'tags this -> ResolvedNumberFormatOptions.t)
          =
          fun (x2727 : 'tags this) ->
            ResolvedNumberFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2727) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:NumberFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x2729 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x2730 : NumberFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "NumberFormat")
                     (let x2731 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2729 with
                       | Some x2733 ->
                           ignore
                             (Ojs.call x2731 "push"
                                [|((match x2733 with
                                    | `U1 x2734 -> Ojs.string_to_js x2734
                                    | `U2 x2735 ->
                                        Ojs.list_to_js Ojs.string_to_js x2735))|])
                       | None -> ());
                      (match x2730 with
                       | Some x2732 ->
                           ignore
                             (Ojs.call x2731 "push"
                                [|(NumberFormatOptions.t_to_js x2732)|])
                       | None -> ());
                      x2731))
        let (invoke :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:NumberFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x2737 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x2738 : NumberFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "NumberFormat")
                     "apply"
                     [|Ojs.null;((let x2739 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x2737 with
                                   | Some x2741 ->
                                       ignore
                                         (Ojs.call x2739 "push"
                                            [|((match x2741 with
                                                | `U1 x2742 ->
                                                    Ojs.string_to_js x2742
                                                | `U2 x2743 ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x2743))|])
                                   | None -> ());
                                  (match x2738 with
                                   | Some x2740 ->
                                       ignore
                                         (Ojs.call x2739 "push"
                                            [|(NumberFormatOptions.t_to_js
                                                 x2740)|])
                                   | None -> ());
                                  x2739))|])
        let (supportedLocalesOf :
          locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:NumberFormatOptions.t -> unit -> string list)
          =
          fun ~locales:(x2745 : [ `U1 of string  | `U2 of string list ]) ->
            fun ?options:(x2746 : NumberFormatOptions.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x2752 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "NumberFormat" in
                   Ojs.call (Ojs.get_prop_ascii x2752 "supportedLocalesOf")
                     "apply"
                     [|x2752;((let x2747 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2747 "push"
                                    [|((match x2745 with
                                        | `U1 x2749 -> Ojs.string_to_js x2749
                                        | `U2 x2750 ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x2750))|]);
                               (match x2746 with
                                | Some x2748 ->
                                    ignore
                                      (Ojs.call x2747 "push"
                                         [|(NumberFormatOptions.t_to_js x2748)|])
                                | None -> ());
                               x2747))|])
      end
    module LocaleHourCycleKey =
      struct
        type t = [ `L_s46_h11  | `L_s47_h12  | `L_s48_h23  | `L_s49_h24 ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2755 : Ojs.t) ->
            let x2756 = x2755 in
            match Ojs.string_of_js x2756 with
            | "h11" -> `L_s46_h11
            | "h12" -> `L_s47_h12
            | "h23" -> `L_s48_h23
            | "h24" -> `L_s49_h24
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2754 :
              [ `L_s46_h11  | `L_s47_h12  | `L_s48_h23  | `L_s49_h24 ])
            ->
            match x2754 with
            | `L_s46_h11 -> Ojs.string_to_js "h11"
            | `L_s47_h12 -> Ojs.string_to_js "h12"
            | `L_s48_h23 -> Ojs.string_to_js "h23"
            | `L_s49_h24 -> Ojs.string_to_js "h24"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2758 : Ojs.t) -> t_of_js x2758
        and t_0_to_js : t_0 -> Ojs.t = fun (x2757 : t) -> t_to_js x2757
      end
    module LocaleCollationCaseFirst =
      struct
        type t = [ `L_s40_false  | `L_s58_lower  | `L_s98_upper ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2760 : Ojs.t) ->
            let x2761 = x2760 in
            match Ojs.string_of_js x2761 with
            | "false" -> `L_s40_false
            | "lower" -> `L_s58_lower
            | "upper" -> `L_s98_upper
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2759 : [ `L_s40_false  | `L_s58_lower  | `L_s98_upper ]) ->
            match x2759 with
            | `L_s40_false -> Ojs.string_to_js "false"
            | `L_s58_lower -> Ojs.string_to_js "lower"
            | `L_s98_upper -> Ojs.string_to_js "upper"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2763 : Ojs.t) -> t_of_js x2763
        and t_0_to_js : t_0 -> Ojs.t = fun (x2762 : t) -> t_to_js x2762
      end
    module LocaleOptions =
      struct
        type t = [ `Intl_LocaleOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2765 : Ojs.t) -> t_of_js x2765
        and t_0_to_js : t_0 -> Ojs.t = fun (x2764 : t) -> t_to_js x2764
        type tags = [ `Intl_LocaleOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_LocaleOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2768 : Ojs.t) -> intf_of_js __tags_of_js x2768
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2766 : __tags intf) -> intf_to_js __tags_to_js x2766
        let (get_baseName : 'tags this -> string) =
          fun (x2770 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2770) "baseName")
        let (set_baseName : 'tags this -> string -> unit) =
          fun (x2772 : 'tags this) ->
            fun (x2773 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2772) "baseName"
                (Ojs.string_to_js x2773)
        let (get_calendar : 'tags this -> string) =
          fun (x2775 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2775) "calendar")
        let (set_calendar : 'tags this -> string -> unit) =
          fun (x2777 : 'tags this) ->
            fun (x2778 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2777) "calendar"
                (Ojs.string_to_js x2778)
        let (get_caseFirst : 'tags this -> LocaleCollationCaseFirst.t) =
          fun (x2780 : 'tags this) ->
            LocaleCollationCaseFirst.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2780) "caseFirst")
        let (set_caseFirst :
          'tags this -> LocaleCollationCaseFirst.t -> unit) =
          fun (x2782 : 'tags this) ->
            fun (x2783 : LocaleCollationCaseFirst.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2782) "caseFirst"
                (LocaleCollationCaseFirst.t_to_js x2783)
        let (get_collation : 'tags this -> string) =
          fun (x2785 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2785) "collation")
        let (set_collation : 'tags this -> string -> unit) =
          fun (x2787 : 'tags this) ->
            fun (x2788 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2787) "collation"
                (Ojs.string_to_js x2788)
        let (get_hourCycle : 'tags this -> LocaleHourCycleKey.t) =
          fun (x2790 : 'tags this) ->
            LocaleHourCycleKey.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2790) "hourCycle")
        let (set_hourCycle : 'tags this -> LocaleHourCycleKey.t -> unit) =
          fun (x2792 : 'tags this) ->
            fun (x2793 : LocaleHourCycleKey.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2792) "hourCycle"
                (LocaleHourCycleKey.t_to_js x2793)
        let (get_language : 'tags this -> string) =
          fun (x2795 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2795) "language")
        let (set_language : 'tags this -> string -> unit) =
          fun (x2797 : 'tags this) ->
            fun (x2798 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2797) "language"
                (Ojs.string_to_js x2798)
        let (get_numberingSystem : 'tags this -> string) =
          fun (x2800 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2800)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x2802 : 'tags this) ->
            fun (x2803 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2802)
                "numberingSystem" (Ojs.string_to_js x2803)
        let (get_numeric : 'tags this -> bool) =
          fun (x2805 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2805) "numeric")
        let (set_numeric : 'tags this -> bool -> unit) =
          fun (x2807 : 'tags this) ->
            fun (x2808 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2807) "numeric"
                (Ojs.bool_to_js x2808)
        let (get_region : 'tags this -> string) =
          fun (x2810 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2810) "region")
        let (set_region : 'tags this -> string -> unit) =
          fun (x2812 : 'tags this) ->
            fun (x2813 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2812) "region"
                (Ojs.string_to_js x2813)
        let (get_script : 'tags this -> string) =
          fun (x2815 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2815) "script")
        let (set_script : 'tags this -> string -> unit) =
          fun (x2817 : 'tags this) ->
            fun (x2818 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2817) "script"
                (Ojs.string_to_js x2818)
        let (create :
          baseName:string ->
            calendar:string ->
              caseFirst:LocaleCollationCaseFirst.t ->
                collation:string ->
                  hourCycle:LocaleHourCycleKey.t ->
                    language:string ->
                      numberingSystem:string ->
                        numeric:bool ->
                          region:string -> script:string -> unit -> t)
          =
          fun ~baseName:(x2820 : string) ->
            fun ~calendar:(x2821 : string) ->
              fun ~caseFirst:(x2822 : LocaleCollationCaseFirst.t) ->
                fun ~collation:(x2823 : string) ->
                  fun ~hourCycle:(x2824 : LocaleHourCycleKey.t) ->
                    fun ~language:(x2825 : string) ->
                      fun ~numberingSystem:(x2826 : string) ->
                        fun ~numeric:(x2827 : bool) ->
                          fun ~region:(x2828 : string) ->
                            fun ~script:(x2829 : string) ->
                              fun () ->
                                let x2830 = Ojs.empty_obj () in
                                Ojs.set_prop_ascii x2830 "baseName"
                                  (Ojs.string_to_js x2820);
                                Ojs.set_prop_ascii x2830 "calendar"
                                  (Ojs.string_to_js x2821);
                                Ojs.set_prop_ascii x2830 "caseFirst"
                                  (LocaleCollationCaseFirst.t_to_js x2822);
                                Ojs.set_prop_ascii x2830 "collation"
                                  (Ojs.string_to_js x2823);
                                Ojs.set_prop_ascii x2830 "hourCycle"
                                  (LocaleHourCycleKey.t_to_js x2824);
                                Ojs.set_prop_ascii x2830 "language"
                                  (Ojs.string_to_js x2825);
                                Ojs.set_prop_ascii x2830 "numberingSystem"
                                  (Ojs.string_to_js x2826);
                                Ojs.set_prop_ascii x2830 "numeric"
                                  (Ojs.bool_to_js x2827);
                                Ojs.set_prop_ascii x2830 "region"
                                  (Ojs.string_to_js x2828);
                                Ojs.set_prop_ascii x2830 "script"
                                  (Ojs.string_to_js x2829);
                                t_of_js x2830
        let cast_from = Obj.magic
      end
    module BCP47LanguageTag =
      struct
        type t = string
        let rec t_of_js : Ojs.t -> t =
          fun (x2832 : Ojs.t) -> Ojs.string_of_js x2832
        and t_to_js : t -> Ojs.t =
          fun (x2831 : string) -> Ojs.string_to_js x2831
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2834 : Ojs.t) -> t_of_js x2834
        and t_0_to_js : t_0 -> Ojs.t = fun (x2833 : t) -> t_to_js x2833
      end
    module Locale =
      struct
        type t = [ `Intl_Locale  | `Intl_LocaleOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2836 : Ojs.t) -> t_of_js x2836
        and t_0_to_js : t_0 -> Ojs.t = fun (x2835 : t) -> t_to_js x2835
        type tags = [ `Intl_Locale  | `Intl_LocaleOptions ]
        type tags_0 = tags
        type 'tags this = 'tags intf constraint 'tags = [> `Intl_Locale ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2839 : Ojs.t) -> intf_of_js __tags_of_js x2839
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2837 : __tags intf) -> intf_to_js __tags_to_js x2837
        let (maximize : 'tags this -> t) =
          fun (x2841 : 'tags this) ->
            t_of_js (Ojs.call (this_to_js Obj.magic x2841) "maximize" [||])
        let (minimize : 'tags this -> t) =
          fun (x2843 : 'tags this) ->
            t_of_js (Ojs.call (this_to_js Obj.magic x2843) "minimize" [||])
        let (toString : 'tags this -> BCP47LanguageTag.t) =
          fun (x2845 : 'tags this) ->
            BCP47LanguageTag.t_of_js
              (Ojs.call (this_to_js Obj.magic x2845) "toString" [||])
        let cast_from = Obj.magic
        let (create :
          ?tag:BCP47LanguageTag.t -> ?options:LocaleOptions.t -> unit -> t) =
          fun ?tag:(x2847 : BCP47LanguageTag.t option) ->
            fun ?options:(x2848 : LocaleOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "Locale")
                     (let x2849 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2847 with
                       | Some x2851 ->
                           ignore
                             (Ojs.call x2849 "push"
                                [|(BCP47LanguageTag.t_to_js x2851)|])
                       | None -> ());
                      (match x2848 with
                       | Some x2850 ->
                           ignore
                             (Ojs.call x2849 "push"
                                [|(LocaleOptions.t_to_js x2850)|])
                       | None -> ());
                      x2849))
      end
    module DisplayNamesOptions =
      struct
        type t = [ `Intl_DisplayNamesOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2853 : Ojs.t) -> t_of_js x2853
        and t_0_to_js : t_0 -> Ojs.t = fun (x2852 : t) -> t_to_js x2852
        type tags = [ `Intl_DisplayNamesOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DisplayNamesOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2856 : Ojs.t) -> intf_of_js __tags_of_js x2856
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2854 : __tags intf) -> intf_to_js __tags_to_js x2854
        let (get_locale : 'tags this -> UnicodeBCP47LocaleIdentifier.t) =
          fun (x2858 : 'tags this) ->
            UnicodeBCP47LocaleIdentifier.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2858) "locale")
        let (set_locale :
          'tags this -> UnicodeBCP47LocaleIdentifier.t -> unit) =
          fun (x2860 : 'tags this) ->
            fun (x2861 : UnicodeBCP47LocaleIdentifier.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2860) "locale"
                (UnicodeBCP47LocaleIdentifier.t_to_js x2861)
        let (get_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t) =
          fun (x2863 : 'tags this) ->
            RelativeTimeFormatLocaleMatcher.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2863)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit) =
          fun (x2865 : 'tags this) ->
            fun (x2866 : RelativeTimeFormatLocaleMatcher.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2865) "localeMatcher"
                (RelativeTimeFormatLocaleMatcher.t_to_js x2866)
        let (get_style : 'tags this -> RelativeTimeFormatStyle.t) =
          fun (x2868 : 'tags this) ->
            RelativeTimeFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2868) "style")
        let (set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit) =
          fun (x2870 : 'tags this) ->
            fun (x2871 : RelativeTimeFormatStyle.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2870) "style"
                (RelativeTimeFormatStyle.t_to_js x2871)
        let (get_type :
          'tags this ->
            [ `L_s28_currency  | `L_s54_language  | `L_s83_region 
            | `L_s86_script ])
          =
          fun (x2873 : 'tags this) ->
            let x2875 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2873) "type" in
            match Ojs.string_of_js x2875 with
            | "currency" -> `L_s28_currency
            | "language" -> `L_s54_language
            | "region" -> `L_s83_region
            | "script" -> `L_s86_script
            | _ -> assert false
        let (set_type :
          'tags this ->
            [ `U1 of [ `L_s54_language ]  | `U2 of [ `L_s83_region ] 
            | `U3 of [ `L_s86_script ]  | `U4 of [ `L_s28_currency ] ] ->
              unit)
          =
          fun (x2876 : 'tags this) ->
            fun
              (x2877 :
                [ `U1 of [ `L_s54_language ]  | `U2 of [ `L_s83_region ] 
                | `U3 of [ `L_s86_script ]  | `U4 of [ `L_s28_currency ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2876) "type"
                (match x2877 with
                 | `U1 x2878 ->
                     (match x2878 with
                      | `L_s54_language -> Ojs.string_to_js "language")
                 | `U2 x2879 ->
                     (match x2879 with
                      | `L_s83_region -> Ojs.string_to_js "region")
                 | `U3 x2880 ->
                     (match x2880 with
                      | `L_s86_script -> Ojs.string_to_js "script")
                 | `U4 x2881 ->
                     (match x2881 with
                      | `L_s28_currency -> Ojs.string_to_js "currency"))
        let (get_fallback : 'tags this -> [ `L_s26_code  | `L_s70_none ]) =
          fun (x2883 : 'tags this) ->
            let x2885 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2883) "fallback" in
            match Ojs.string_of_js x2885 with
            | "code" -> `L_s26_code
            | "none" -> `L_s70_none
            | _ -> assert false
        let (set_fallback :
          'tags this ->
            [ `U1 of [ `L_s26_code ]  | `U2 of [ `L_s70_none ] ] -> unit)
          =
          fun (x2886 : 'tags this) ->
            fun
              (x2887 : [ `U1 of [ `L_s26_code ]  | `U2 of [ `L_s70_none ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2886) "fallback"
                (match x2887 with
                 | `U1 x2888 ->
                     (match x2888 with
                      | `L_s26_code -> Ojs.string_to_js "code")
                 | `U2 x2889 ->
                     (match x2889 with
                      | `L_s70_none -> Ojs.string_to_js "none"))
        let (create :
          locale:UnicodeBCP47LocaleIdentifier.t ->
            localeMatcher:RelativeTimeFormatLocaleMatcher.t ->
              style:RelativeTimeFormatStyle.t ->
                type_:[ `L_s28_currency  | `L_s54_language  | `L_s83_region 
                      | `L_s86_script ]
                  -> fallback:[ `L_s26_code  | `L_s70_none ] -> unit -> t)
          =
          fun ~locale:(x2891 : UnicodeBCP47LocaleIdentifier.t) ->
            fun ~localeMatcher:(x2892 : RelativeTimeFormatLocaleMatcher.t) ->
              fun ~style:(x2893 : RelativeTimeFormatStyle.t) ->
                fun
                  ~type_:(x2894 :
                           [ `L_s28_currency  | `L_s54_language 
                           | `L_s83_region  | `L_s86_script ])
                  ->
                  fun ~fallback:(x2895 : [ `L_s26_code  | `L_s70_none ]) ->
                    fun () ->
                      let x2896 = Ojs.empty_obj () in
                      Ojs.set_prop_ascii x2896 "locale"
                        (UnicodeBCP47LocaleIdentifier.t_to_js x2891);
                      Ojs.set_prop_ascii x2896 "localeMatcher"
                        (RelativeTimeFormatLocaleMatcher.t_to_js x2892);
                      Ojs.set_prop_ascii x2896 "style"
                        (RelativeTimeFormatStyle.t_to_js x2893);
                      Ojs.set_prop_ascii x2896 "type"
                        (match x2894 with
                         | `L_s28_currency -> Ojs.string_to_js "currency"
                         | `L_s54_language -> Ojs.string_to_js "language"
                         | `L_s83_region -> Ojs.string_to_js "region"
                         | `L_s86_script -> Ojs.string_to_js "script");
                      Ojs.set_prop_ascii x2896 "fallback"
                        (match x2895 with
                         | `L_s26_code -> Ojs.string_to_js "code"
                         | `L_s70_none -> Ojs.string_to_js "none");
                      t_of_js x2896
        let cast_from = Obj.magic
      end
    module DisplayNames =
      struct
        module AnonymousInterface2 =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x2898 : Ojs.t) -> x2898
            and t_to_js : t -> Ojs.t = fun (x2897 : Ojs.t) -> x2897
            let (get_localeMatcher : t -> RelativeTimeFormatLocaleMatcher.t)
              =
              fun (x2899 : t) ->
                RelativeTimeFormatLocaleMatcher.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x2899) "localeMatcher")
            let (set_localeMatcher :
              t -> RelativeTimeFormatLocaleMatcher.t -> unit) =
              fun (x2900 : t) ->
                fun (x2901 : RelativeTimeFormatLocaleMatcher.t) ->
                  Ojs.set_prop_ascii (t_to_js x2900) "localeMatcher"
                    (RelativeTimeFormatLocaleMatcher.t_to_js x2901)
            let (create :
              localeMatcher:RelativeTimeFormatLocaleMatcher.t -> unit -> t) =
              fun ~localeMatcher:(x2902 : RelativeTimeFormatLocaleMatcher.t)
                ->
                fun () ->
                  let x2903 = Ojs.empty_obj () in
                  Ojs.set_prop_ascii x2903 "localeMatcher"
                    (RelativeTimeFormatLocaleMatcher.t_to_js x2902);
                  t_of_js x2903
          end
        type t = [ `Intl_DisplayNames ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2905 : Ojs.t) -> t_of_js x2905
        and t_0_to_js : t_0 -> Ojs.t = fun (x2904 : t) -> t_to_js x2904
        type tags = [ `Intl_DisplayNames ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DisplayNames ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2908 : Ojs.t) -> intf_of_js __tags_of_js x2908
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2906 : __tags intf) -> intf_to_js __tags_to_js x2906
        let (of_ : 'tags this -> code:string -> string option) =
          fun (x2911 : 'tags this) ->
            fun ~code:(x2910 : string) ->
              Ojs.option_of_js Ojs.string_of_js
                (Ojs.call (this_to_js Obj.magic x2911) "of"
                   [|(Ojs.string_to_js x2910)|])
        let (resolvedOptions : 'tags this -> DisplayNamesOptions.t) =
          fun (x2914 : 'tags this) ->
            DisplayNamesOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2914) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (prototype : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl")
                    "DisplayNames") "prototype")
        let (create :
          ?locales:[ `U1 of BCP47LanguageTag.t 
                   | `U2 of BCP47LanguageTag.t list ]
            -> ?options:DisplayNamesOptions.t Partial.t -> unit -> t)
          =
          fun
            ?locales:(x2916 :
                       [ `U1 of BCP47LanguageTag.t 
                       | `U2 of BCP47LanguageTag.t list ] option)
            ->
            fun ?options:(x2917 : DisplayNamesOptions.t Partial.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "DisplayNames")
                     (let x2918 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2916 with
                       | Some x2921 ->
                           ignore
                             (Ojs.call x2918 "push"
                                [|((match x2921 with
                                    | `U1 x2922 ->
                                        BCP47LanguageTag.t_to_js x2922
                                    | `U2 x2923 ->
                                        Ojs.list_to_js
                                          BCP47LanguageTag.t_to_js x2923))|])
                       | None -> ());
                      (match x2917 with
                       | Some x2919 ->
                           ignore
                             (Ojs.call x2918 "push"
                                [|(Partial.t_to_js
                                     DisplayNamesOptions.t_to_js x2919)|])
                       | None -> ());
                      x2918))
        let (supportedLocalesOf :
          locales:[ `U1 of BCP47LanguageTag.t 
                  | `U2 of BCP47LanguageTag.t list ]
            ->
            ?options:AnonymousInterface2.t -> unit -> BCP47LanguageTag.t list)
          =
          fun
            ~locales:(x2925 :
                       [ `U1 of BCP47LanguageTag.t 
                       | `U2 of BCP47LanguageTag.t list ])
            ->
            fun ?options:(x2926 : AnonymousInterface2.t option) ->
              fun () ->
                Ojs.list_of_js BCP47LanguageTag.t_of_js
                  (let x2932 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "DisplayNames" in
                   Ojs.call (Ojs.get_prop_ascii x2932 "supportedLocalesOf")
                     "apply"
                     [|x2932;((let x2927 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2927 "push"
                                    [|((match x2925 with
                                        | `U1 x2929 ->
                                            BCP47LanguageTag.t_to_js x2929
                                        | `U2 x2930 ->
                                            Ojs.list_to_js
                                              BCP47LanguageTag.t_to_js x2930))|]);
                               (match x2926 with
                                | Some x2928 ->
                                    ignore
                                      (Ojs.call x2927 "push"
                                         [|(AnonymousInterface2.t_to_js x2928)|])
                                | None -> ());
                               x2927))|])
      end
    module ResolvedDateTimeFormatOptions =
      struct
        type t = [ `Intl_ResolvedDateTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2935 : Ojs.t) -> t_of_js x2935
        and t_0_to_js : t_0 -> Ojs.t = fun (x2934 : t) -> t_to_js x2934
        type tags = [ `Intl_ResolvedDateTimeFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `Intl_ResolvedDateTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2938 : Ojs.t) -> intf_of_js __tags_of_js x2938
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2936 : __tags intf) -> intf_to_js __tags_to_js x2936
        let (get_formatMatcher :
          'tags this -> [ `L_s23_basic  | `L_s24_best_fit ]) =
          fun (x2940 : 'tags this) ->
            let x2942 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2940) "formatMatcher" in
            match Ojs.string_of_js x2942 with
            | "basic" -> `L_s23_basic
            | "best fit" -> `L_s24_best_fit
            | _ -> assert false
        let (set_formatMatcher :
          'tags this ->
            [ `U1 of [ `L_s23_basic ]  | `U2 of [ `L_s24_best_fit ] 
            | `U3 of [ `L_s24_best_fit ] ] -> unit)
          =
          fun (x2943 : 'tags this) ->
            fun
              (x2944 :
                [ `U1 of [ `L_s23_basic ]  | `U2 of [ `L_s24_best_fit ] 
                | `U3 of [ `L_s24_best_fit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2943) "formatMatcher"
                (match x2944 with
                 | `U1 x2945 ->
                     (match x2945 with
                      | `L_s23_basic -> Ojs.string_to_js "basic")
                 | `U2 x2946 ->
                     (match x2946 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit")
                 | `U3 x2947 ->
                     (match x2947 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit"))
        let (get_dateStyle :
          'tags this ->
            [ `L_s44_full  | `L_s56_long  | `L_s60_medium  | `L_s89_short ])
          =
          fun (x2949 : 'tags this) ->
            let x2951 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2949) "dateStyle" in
            match Ojs.string_of_js x2951 with
            | "full" -> `L_s44_full
            | "long" -> `L_s56_long
            | "medium" -> `L_s60_medium
            | "short" -> `L_s89_short
            | _ -> assert false
        let (set_dateStyle :
          'tags this ->
            [ `U1 of [ `L_s44_full ]  | `U2 of [ `L_s56_long ] 
            | `U3 of [ `L_s60_medium ]  | `U4 of [ `L_s89_short ] ] -> 
              unit)
          =
          fun (x2952 : 'tags this) ->
            fun
              (x2953 :
                [ `U1 of [ `L_s44_full ]  | `U2 of [ `L_s56_long ] 
                | `U3 of [ `L_s60_medium ]  | `U4 of [ `L_s89_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2952) "dateStyle"
                (match x2953 with
                 | `U1 x2954 ->
                     (match x2954 with
                      | `L_s44_full -> Ojs.string_to_js "full")
                 | `U2 x2955 ->
                     (match x2955 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U3 x2956 ->
                     (match x2956 with
                      | `L_s60_medium -> Ojs.string_to_js "medium")
                 | `U4 x2957 ->
                     (match x2957 with
                      | `L_s89_short -> Ojs.string_to_js "short"))
        let (get_timeStyle :
          'tags this ->
            [ `L_s44_full  | `L_s56_long  | `L_s60_medium  | `L_s89_short ])
          =
          fun (x2959 : 'tags this) ->
            let x2961 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2959) "timeStyle" in
            match Ojs.string_of_js x2961 with
            | "full" -> `L_s44_full
            | "long" -> `L_s56_long
            | "medium" -> `L_s60_medium
            | "short" -> `L_s89_short
            | _ -> assert false
        let (set_timeStyle :
          'tags this ->
            [ `U1 of [ `L_s44_full ]  | `U2 of [ `L_s56_long ] 
            | `U3 of [ `L_s60_medium ]  | `U4 of [ `L_s89_short ] ] -> 
              unit)
          =
          fun (x2962 : 'tags this) ->
            fun
              (x2963 :
                [ `U1 of [ `L_s44_full ]  | `U2 of [ `L_s56_long ] 
                | `U3 of [ `L_s60_medium ]  | `U4 of [ `L_s89_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2962) "timeStyle"
                (match x2963 with
                 | `U1 x2964 ->
                     (match x2964 with
                      | `L_s44_full -> Ojs.string_to_js "full")
                 | `U2 x2965 ->
                     (match x2965 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U3 x2966 ->
                     (match x2966 with
                      | `L_s60_medium -> Ojs.string_to_js "medium")
                 | `U4 x2967 ->
                     (match x2967 with
                      | `L_s89_short -> Ojs.string_to_js "short"))
        let (get_hourCycle :
          'tags this ->
            [ `L_s46_h11  | `L_s47_h12  | `L_s48_h23  | `L_s49_h24 ])
          =
          fun (x2969 : 'tags this) ->
            let x2971 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2969) "hourCycle" in
            match Ojs.string_of_js x2971 with
            | "h11" -> `L_s46_h11
            | "h12" -> `L_s47_h12
            | "h23" -> `L_s48_h23
            | "h24" -> `L_s49_h24
            | _ -> assert false
        let (set_hourCycle :
          'tags this ->
            [ `U1 of [ `L_s46_h11 ]  | `U2 of [ `L_s47_h12 ] 
            | `U3 of [ `L_s48_h23 ]  | `U4 of [ `L_s49_h24 ] ] -> unit)
          =
          fun (x2972 : 'tags this) ->
            fun
              (x2973 :
                [ `U1 of [ `L_s46_h11 ]  | `U2 of [ `L_s47_h12 ] 
                | `U3 of [ `L_s48_h23 ]  | `U4 of [ `L_s49_h24 ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2972) "hourCycle"
                (match x2973 with
                 | `U1 x2974 ->
                     (match x2974 with | `L_s46_h11 -> Ojs.string_to_js "h11")
                 | `U2 x2975 ->
                     (match x2975 with | `L_s47_h12 -> Ojs.string_to_js "h12")
                 | `U3 x2976 ->
                     (match x2976 with | `L_s48_h23 -> Ojs.string_to_js "h23")
                 | `U4 x2977 ->
                     (match x2977 with | `L_s49_h24 -> Ojs.string_to_js "h24"))
        let (get_dayPeriod :
          'tags this -> [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ]) =
          fun (x2979 : 'tags this) ->
            let x2981 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2979) "dayPeriod" in
            match Ojs.string_of_js x2981 with
            | "long" -> `L_s56_long
            | "narrow" -> `L_s68_narrow
            | "short" -> `L_s89_short
            | _ -> assert false
        let (set_dayPeriod :
          'tags this ->
            [ `U1 of [ `L_s68_narrow ]  | `U2 of [ `L_s89_short ] 
            | `U3 of [ `L_s56_long ] ] -> unit)
          =
          fun (x2982 : 'tags this) ->
            fun
              (x2983 :
                [ `U1 of [ `L_s68_narrow ]  | `U2 of [ `L_s89_short ] 
                | `U3 of [ `L_s56_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2982) "dayPeriod"
                (match x2983 with
                 | `U1 x2984 ->
                     (match x2984 with
                      | `L_s68_narrow -> Ojs.string_to_js "narrow")
                 | `U2 x2985 ->
                     (match x2985 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U3 x2986 ->
                     (match x2986 with
                      | `L_s56_long -> Ojs.string_to_js "long"))
        let (get_fractionalSecondDigits :
          'tags this -> [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ]) =
          fun (x2988 : 'tags this) ->
            let x2990 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2988)
                "fractionalSecondDigits" in
            match Ojs.int_of_js x2990 with
            | 0 -> `L_n_0
            | 1 -> `L_n_1
            | 2 -> `L_n_2
            | 3 -> `L_n_3
            | _ -> assert false
        let (set_fractionalSecondDigits :
          'tags this ->
            [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
            | `U4 of [ `L_n_3 ] ] -> unit)
          =
          fun (x2991 : 'tags this) ->
            fun
              (x2992 :
                [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ] 
                | `U3 of [ `L_n_2 ]  | `U4 of [ `L_n_3 ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2991)
                "fractionalSecondDigits"
                (match x2992 with
                 | `U1 x2993 ->
                     (match x2993 with | `L_n_0 -> Ojs.int_to_js 0)
                 | `U2 x2994 ->
                     (match x2994 with | `L_n_1 -> Ojs.int_to_js 1)
                 | `U3 x2995 ->
                     (match x2995 with | `L_n_2 -> Ojs.int_to_js 2)
                 | `U4 x2996 ->
                     (match x2996 with | `L_n_3 -> Ojs.int_to_js 3))
        let (get_locale : 'tags this -> string) =
          fun (x2998 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2998) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x3000 : 'tags this) ->
            fun (x3001 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3000) "locale"
                (Ojs.string_to_js x3001)
        let (get_calendar : 'tags this -> string) =
          fun (x3003 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3003) "calendar")
        let (set_calendar : 'tags this -> string -> unit) =
          fun (x3005 : 'tags this) ->
            fun (x3006 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3005) "calendar"
                (Ojs.string_to_js x3006)
        let (get_numberingSystem : 'tags this -> string) =
          fun (x3008 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3008)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x3010 : 'tags this) ->
            fun (x3011 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3010)
                "numberingSystem" (Ojs.string_to_js x3011)
        let (get_timeZone : 'tags this -> string) =
          fun (x3013 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3013) "timeZone")
        let (set_timeZone : 'tags this -> string -> unit) =
          fun (x3015 : 'tags this) ->
            fun (x3016 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3015) "timeZone"
                (Ojs.string_to_js x3016)
        let (get_hour12 : 'tags this -> bool) =
          fun (x3018 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3018) "hour12")
        let (set_hour12 : 'tags this -> bool -> unit) =
          fun (x3020 : 'tags this) ->
            fun (x3021 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3020) "hour12"
                (Ojs.bool_to_js x3021)
        let (get_weekday : 'tags this -> string) =
          fun (x3023 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3023) "weekday")
        let (set_weekday : 'tags this -> string -> unit) =
          fun (x3025 : 'tags this) ->
            fun (x3026 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3025) "weekday"
                (Ojs.string_to_js x3026)
        let (get_era : 'tags this -> string) =
          fun (x3028 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3028) "era")
        let (set_era : 'tags this -> string -> unit) =
          fun (x3030 : 'tags this) ->
            fun (x3031 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3030) "era"
                (Ojs.string_to_js x3031)
        let (get_year : 'tags this -> string) =
          fun (x3033 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3033) "year")
        let (set_year : 'tags this -> string -> unit) =
          fun (x3035 : 'tags this) ->
            fun (x3036 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3035) "year"
                (Ojs.string_to_js x3036)
        let (get_month : 'tags this -> string) =
          fun (x3038 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3038) "month")
        let (set_month : 'tags this -> string -> unit) =
          fun (x3040 : 'tags this) ->
            fun (x3041 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3040) "month"
                (Ojs.string_to_js x3041)
        let (get_day : 'tags this -> string) =
          fun (x3043 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3043) "day")
        let (set_day : 'tags this -> string -> unit) =
          fun (x3045 : 'tags this) ->
            fun (x3046 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3045) "day"
                (Ojs.string_to_js x3046)
        let (get_hour : 'tags this -> string) =
          fun (x3048 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3048) "hour")
        let (set_hour : 'tags this -> string -> unit) =
          fun (x3050 : 'tags this) ->
            fun (x3051 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3050) "hour"
                (Ojs.string_to_js x3051)
        let (get_minute : 'tags this -> string) =
          fun (x3053 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3053) "minute")
        let (set_minute : 'tags this -> string -> unit) =
          fun (x3055 : 'tags this) ->
            fun (x3056 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3055) "minute"
                (Ojs.string_to_js x3056)
        let (get_second : 'tags this -> string) =
          fun (x3058 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3058) "second")
        let (set_second : 'tags this -> string -> unit) =
          fun (x3060 : 'tags this) ->
            fun (x3061 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3060) "second"
                (Ojs.string_to_js x3061)
        let (get_timeZoneName : 'tags this -> string) =
          fun (x3063 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3063) "timeZoneName")
        let (set_timeZoneName : 'tags this -> string -> unit) =
          fun (x3065 : 'tags this) ->
            fun (x3066 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3065) "timeZoneName"
                (Ojs.string_to_js x3066)
        let (create :
          formatMatcher:[ `L_s23_basic  | `L_s24_best_fit ] ->
            dateStyle:[ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                      | `L_s89_short ]
              ->
              timeStyle:[ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                        | `L_s89_short ]
                ->
                hourCycle:[ `L_s46_h11  | `L_s47_h12  | `L_s48_h23 
                          | `L_s49_h24 ]
                  ->
                  dayPeriod:[ `L_s56_long  | `L_s68_narrow  | `L_s89_short ]
                    ->
                    fractionalSecondDigits:[ `L_n_0  | `L_n_1  | `L_n_2 
                                           | `L_n_3 ]
                      ->
                      locale:string ->
                        calendar:string ->
                          numberingSystem:string ->
                            timeZone:string ->
                              hour12:bool ->
                                weekday:string ->
                                  era:string ->
                                    year:string ->
                                      month:string ->
                                        day:string ->
                                          hour:string ->
                                            minute:string ->
                                              second:string ->
                                                timeZoneName:string ->
                                                  unit -> t)
          =
          fun ~formatMatcher:(x3068 : [ `L_s23_basic  | `L_s24_best_fit ]) ->
            fun
              ~dateStyle:(x3069 :
                           [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                           | `L_s89_short ])
              ->
              fun
                ~timeStyle:(x3070 :
                             [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                             | `L_s89_short ])
                ->
                fun
                  ~hourCycle:(x3071 :
                               [ `L_s46_h11  | `L_s47_h12  | `L_s48_h23 
                               | `L_s49_h24 ])
                  ->
                  fun
                    ~dayPeriod:(x3072 :
                                 [ `L_s56_long  | `L_s68_narrow 
                                 | `L_s89_short ])
                    ->
                    fun
                      ~fractionalSecondDigits:(x3073 :
                                                [ `L_n_0  | `L_n_1  | 
                                                  `L_n_2 
                                                | `L_n_3 ])
                      ->
                      fun ~locale:(x3074 : string) ->
                        fun ~calendar:(x3075 : string) ->
                          fun ~numberingSystem:(x3076 : string) ->
                            fun ~timeZone:(x3077 : string) ->
                              fun ~hour12:(x3078 : bool) ->
                                fun ~weekday:(x3079 : string) ->
                                  fun ~era:(x3080 : string) ->
                                    fun ~year:(x3081 : string) ->
                                      fun ~month:(x3082 : string) ->
                                        fun ~day:(x3083 : string) ->
                                          fun ~hour:(x3084 : string) ->
                                            fun ~minute:(x3085 : string) ->
                                              fun ~second:(x3086 : string) ->
                                                fun
                                                  ~timeZoneName:(x3087 :
                                                                  string)
                                                  ->
                                                  fun () ->
                                                    let x3088 =
                                                      Ojs.empty_obj () in
                                                    Ojs.set_prop_ascii x3088
                                                      "formatMatcher"
                                                      (match x3068 with
                                                       | `L_s23_basic ->
                                                           Ojs.string_to_js
                                                             "basic"
                                                       | `L_s24_best_fit ->
                                                           Ojs.string_to_js
                                                             "best fit");
                                                    Ojs.set_prop_ascii x3088
                                                      "dateStyle"
                                                      (match x3069 with
                                                       | `L_s44_full ->
                                                           Ojs.string_to_js
                                                             "full"
                                                       | `L_s56_long ->
                                                           Ojs.string_to_js
                                                             "long"
                                                       | `L_s60_medium ->
                                                           Ojs.string_to_js
                                                             "medium"
                                                       | `L_s89_short ->
                                                           Ojs.string_to_js
                                                             "short");
                                                    Ojs.set_prop_ascii x3088
                                                      "timeStyle"
                                                      (match x3070 with
                                                       | `L_s44_full ->
                                                           Ojs.string_to_js
                                                             "full"
                                                       | `L_s56_long ->
                                                           Ojs.string_to_js
                                                             "long"
                                                       | `L_s60_medium ->
                                                           Ojs.string_to_js
                                                             "medium"
                                                       | `L_s89_short ->
                                                           Ojs.string_to_js
                                                             "short");
                                                    Ojs.set_prop_ascii x3088
                                                      "hourCycle"
                                                      (match x3071 with
                                                       | `L_s46_h11 ->
                                                           Ojs.string_to_js
                                                             "h11"
                                                       | `L_s47_h12 ->
                                                           Ojs.string_to_js
                                                             "h12"
                                                       | `L_s48_h23 ->
                                                           Ojs.string_to_js
                                                             "h23"
                                                       | `L_s49_h24 ->
                                                           Ojs.string_to_js
                                                             "h24");
                                                    Ojs.set_prop_ascii x3088
                                                      "dayPeriod"
                                                      (match x3072 with
                                                       | `L_s56_long ->
                                                           Ojs.string_to_js
                                                             "long"
                                                       | `L_s68_narrow ->
                                                           Ojs.string_to_js
                                                             "narrow"
                                                       | `L_s89_short ->
                                                           Ojs.string_to_js
                                                             "short");
                                                    Ojs.set_prop_ascii x3088
                                                      "fractionalSecondDigits"
                                                      (match x3073 with
                                                       | `L_n_0 ->
                                                           Ojs.int_to_js 0
                                                       | `L_n_1 ->
                                                           Ojs.int_to_js 1
                                                       | `L_n_2 ->
                                                           Ojs.int_to_js 2
                                                       | `L_n_3 ->
                                                           Ojs.int_to_js 3);
                                                    Ojs.set_prop_ascii x3088
                                                      "locale"
                                                      (Ojs.string_to_js x3074);
                                                    Ojs.set_prop_ascii x3088
                                                      "calendar"
                                                      (Ojs.string_to_js x3075);
                                                    Ojs.set_prop_ascii x3088
                                                      "numberingSystem"
                                                      (Ojs.string_to_js x3076);
                                                    Ojs.set_prop_ascii x3088
                                                      "timeZone"
                                                      (Ojs.string_to_js x3077);
                                                    Ojs.set_prop_ascii x3088
                                                      "hour12"
                                                      (Ojs.bool_to_js x3078);
                                                    Ojs.set_prop_ascii x3088
                                                      "weekday"
                                                      (Ojs.string_to_js x3079);
                                                    Ojs.set_prop_ascii x3088
                                                      "era"
                                                      (Ojs.string_to_js x3080);
                                                    Ojs.set_prop_ascii x3088
                                                      "year"
                                                      (Ojs.string_to_js x3081);
                                                    Ojs.set_prop_ascii x3088
                                                      "month"
                                                      (Ojs.string_to_js x3082);
                                                    Ojs.set_prop_ascii x3088
                                                      "day"
                                                      (Ojs.string_to_js x3083);
                                                    Ojs.set_prop_ascii x3088
                                                      "hour"
                                                      (Ojs.string_to_js x3084);
                                                    Ojs.set_prop_ascii x3088
                                                      "minute"
                                                      (Ojs.string_to_js x3085);
                                                    Ojs.set_prop_ascii x3088
                                                      "second"
                                                      (Ojs.string_to_js x3086);
                                                    Ojs.set_prop_ascii x3088
                                                      "timeZoneName"
                                                      (Ojs.string_to_js x3087);
                                                    t_of_js x3088
        let cast_from = Obj.magic
      end
    module DateTimeFormatPartTypes =
      struct
        type t =
          [ `L_s100_weekday  | `L_s102_year  | `L_s29_day 
          | `L_s30_dayPeriod  | `L_s35_era  | `L_s50_hour  | `L_s55_literal 
          | `L_s62_minute  | `L_s64_month  | `L_s87_second 
          | `L_s93_timeZoneName ]
        let rec t_of_js : Ojs.t -> t =
          fun (x3090 : Ojs.t) ->
            let x3091 = x3090 in
            match Ojs.string_of_js x3091 with
            | "weekday" -> `L_s100_weekday
            | "year" -> `L_s102_year
            | "day" -> `L_s29_day
            | "dayPeriod" -> `L_s30_dayPeriod
            | "era" -> `L_s35_era
            | "hour" -> `L_s50_hour
            | "literal" -> `L_s55_literal
            | "minute" -> `L_s62_minute
            | "month" -> `L_s64_month
            | "second" -> `L_s87_second
            | "timeZoneName" -> `L_s93_timeZoneName
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x3089 :
              [ `L_s100_weekday  | `L_s102_year  | `L_s29_day 
              | `L_s30_dayPeriod  | `L_s35_era  | `L_s50_hour 
              | `L_s55_literal  | `L_s62_minute  | `L_s64_month 
              | `L_s87_second  | `L_s93_timeZoneName ])
            ->
            match x3089 with
            | `L_s100_weekday -> Ojs.string_to_js "weekday"
            | `L_s102_year -> Ojs.string_to_js "year"
            | `L_s29_day -> Ojs.string_to_js "day"
            | `L_s30_dayPeriod -> Ojs.string_to_js "dayPeriod"
            | `L_s35_era -> Ojs.string_to_js "era"
            | `L_s50_hour -> Ojs.string_to_js "hour"
            | `L_s55_literal -> Ojs.string_to_js "literal"
            | `L_s62_minute -> Ojs.string_to_js "minute"
            | `L_s64_month -> Ojs.string_to_js "month"
            | `L_s87_second -> Ojs.string_to_js "second"
            | `L_s93_timeZoneName -> Ojs.string_to_js "timeZoneName"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3093 : Ojs.t) -> t_of_js x3093
        and t_0_to_js : t_0 -> Ojs.t = fun (x3092 : t) -> t_to_js x3092
      end
    module DateTimeFormatPart =
      struct
        type t = [ `Intl_DateTimeFormatPart ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3095 : Ojs.t) -> t_of_js x3095
        and t_0_to_js : t_0 -> Ojs.t = fun (x3094 : t) -> t_to_js x3094
        type tags = [ `Intl_DateTimeFormatPart ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DateTimeFormatPart ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x3098 : Ojs.t) -> intf_of_js __tags_of_js x3098
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x3096 : __tags intf) -> intf_to_js __tags_to_js x3096
        let (get_type : 'tags this -> DateTimeFormatPartTypes.t) =
          fun (x3100 : 'tags this) ->
            DateTimeFormatPartTypes.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3100) "type")
        let (set_type : 'tags this -> DateTimeFormatPartTypes.t -> unit) =
          fun (x3102 : 'tags this) ->
            fun (x3103 : DateTimeFormatPartTypes.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3102) "type"
                (DateTimeFormatPartTypes.t_to_js x3103)
        let (get_value : 'tags this -> string) =
          fun (x3105 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3105) "value")
        let (set_value : 'tags this -> string -> unit) =
          fun (x3107 : 'tags this) ->
            fun (x3108 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3107) "value"
                (Ojs.string_to_js x3108)
        let (create :
          type_:DateTimeFormatPartTypes.t -> value:string -> unit -> t) =
          fun ~type_:(x3110 : DateTimeFormatPartTypes.t) ->
            fun ~value:(x3111 : string) ->
              fun () ->
                let x3112 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x3112 "type"
                  (DateTimeFormatPartTypes.t_to_js x3110);
                Ojs.set_prop_ascii x3112 "value" (Ojs.string_to_js x3111);
                t_of_js x3112
        let cast_from = Obj.magic
      end
    module DateTimeFormatOptions =
      struct
        type t = [ `Intl_DateTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3114 : Ojs.t) -> t_of_js x3114
        and t_0_to_js : t_0 -> Ojs.t = fun (x3113 : t) -> t_to_js x3113
        type tags = [ `Intl_DateTimeFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DateTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x3117 : Ojs.t) -> intf_of_js __tags_of_js x3117
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x3115 : __tags intf) -> intf_to_js __tags_to_js x3115
        let (get_formatMatcher :
          'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] option) =
          fun (x3119 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3121 : Ojs.t) ->
                 let x3122 = x3121 in
                 match Ojs.string_of_js x3122 with
                 | "basic" -> `L_s23_basic
                 | "best fit" -> `L_s24_best_fit
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3119)
                 "formatMatcher")
        let (set_formatMatcher :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s23_basic ] 
            | `U2 of [ `L_s24_best_fit ]  | `U3 of [ `L_s24_best_fit ] ] ->
              unit)
          =
          fun (x3123 : 'tags this) ->
            fun
              (x3124 :
                [ `Undefined of undefined  | `U1 of [ `L_s23_basic ] 
                | `U2 of [ `L_s24_best_fit ]  | `U3 of [ `L_s24_best_fit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3123) "formatMatcher"
                (match x3124 with
                 | `Undefined x3125 -> undefined_to_js x3125
                 | `U1 x3126 ->
                     (match x3126 with
                      | `L_s23_basic -> Ojs.string_to_js "basic")
                 | `U2 x3127 ->
                     (match x3127 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit")
                 | `U3 x3128 ->
                     (match x3128 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit"))
        let (get_dateStyle :
          'tags this ->
            [ `L_s44_full  | `L_s56_long  | `L_s60_medium  | `L_s89_short ]
              option)
          =
          fun (x3130 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3132 : Ojs.t) ->
                 let x3133 = x3132 in
                 match Ojs.string_of_js x3133 with
                 | "full" -> `L_s44_full
                 | "long" -> `L_s56_long
                 | "medium" -> `L_s60_medium
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3130) "dateStyle")
        let (set_dateStyle :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
            | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
            | `U4 of [ `L_s89_short ] ] -> unit)
          =
          fun (x3134 : 'tags this) ->
            fun
              (x3135 :
                [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
                | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
                | `U4 of [ `L_s89_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3134) "dateStyle"
                (match x3135 with
                 | `Undefined x3136 -> undefined_to_js x3136
                 | `U1 x3137 ->
                     (match x3137 with
                      | `L_s44_full -> Ojs.string_to_js "full")
                 | `U2 x3138 ->
                     (match x3138 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U3 x3139 ->
                     (match x3139 with
                      | `L_s60_medium -> Ojs.string_to_js "medium")
                 | `U4 x3140 ->
                     (match x3140 with
                      | `L_s89_short -> Ojs.string_to_js "short"))
        let (get_timeStyle :
          'tags this ->
            [ `L_s44_full  | `L_s56_long  | `L_s60_medium  | `L_s89_short ]
              option)
          =
          fun (x3142 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3144 : Ojs.t) ->
                 let x3145 = x3144 in
                 match Ojs.string_of_js x3145 with
                 | "full" -> `L_s44_full
                 | "long" -> `L_s56_long
                 | "medium" -> `L_s60_medium
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3142) "timeStyle")
        let (set_timeStyle :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
            | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
            | `U4 of [ `L_s89_short ] ] -> unit)
          =
          fun (x3146 : 'tags this) ->
            fun
              (x3147 :
                [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
                | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
                | `U4 of [ `L_s89_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3146) "timeStyle"
                (match x3147 with
                 | `Undefined x3148 -> undefined_to_js x3148
                 | `U1 x3149 ->
                     (match x3149 with
                      | `L_s44_full -> Ojs.string_to_js "full")
                 | `U2 x3150 ->
                     (match x3150 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U3 x3151 ->
                     (match x3151 with
                      | `L_s60_medium -> Ojs.string_to_js "medium")
                 | `U4 x3152 ->
                     (match x3152 with
                      | `L_s89_short -> Ojs.string_to_js "short"))
        let (get_dayPeriod :
          'tags this ->
            [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option)
          =
          fun (x3154 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3156 : Ojs.t) ->
                 let x3157 = x3156 in
                 match Ojs.string_of_js x3157 with
                 | "long" -> `L_s56_long
                 | "narrow" -> `L_s68_narrow
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3154) "dayPeriod")
        let (set_dayPeriod :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s68_narrow ] 
            | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s56_long ] ] -> 
              unit)
          =
          fun (x3158 : 'tags this) ->
            fun
              (x3159 :
                [ `Undefined of undefined  | `U1 of [ `L_s68_narrow ] 
                | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s56_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3158) "dayPeriod"
                (match x3159 with
                 | `Undefined x3160 -> undefined_to_js x3160
                 | `U1 x3161 ->
                     (match x3161 with
                      | `L_s68_narrow -> Ojs.string_to_js "narrow")
                 | `U2 x3162 ->
                     (match x3162 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U3 x3163 ->
                     (match x3163 with
                      | `L_s56_long -> Ojs.string_to_js "long"))
        let (get_fractionalSecondDigits :
          'tags this -> [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ] option) =
          fun (x3165 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3167 : Ojs.t) ->
                 let x3168 = x3167 in
                 match Ojs.int_of_js x3168 with
                 | 0 -> `L_n_0
                 | 1 -> `L_n_1
                 | 2 -> `L_n_2
                 | 3 -> `L_n_3
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3165)
                 "fractionalSecondDigits")
        let (set_fractionalSecondDigits :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_n_0 ] 
            | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ]  | `U4 of [ `L_n_3 ] ]
              -> unit)
          =
          fun (x3169 : 'tags this) ->
            fun
              (x3170 :
                [ `Undefined of undefined  | `U1 of [ `L_n_0 ] 
                | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
                | `U4 of [ `L_n_3 ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3169)
                "fractionalSecondDigits"
                (match x3170 with
                 | `Undefined x3171 -> undefined_to_js x3171
                 | `U1 x3172 ->
                     (match x3172 with | `L_n_0 -> Ojs.int_to_js 0)
                 | `U2 x3173 ->
                     (match x3173 with | `L_n_1 -> Ojs.int_to_js 1)
                 | `U3 x3174 ->
                     (match x3174 with | `L_n_2 -> Ojs.int_to_js 2)
                 | `U4 x3175 ->
                     (match x3175 with | `L_n_3 -> Ojs.int_to_js 3))
        let (get_calendar : 'tags this -> string option) =
          fun (x3177 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3177) "calendar")
        let (set_calendar :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3180 : 'tags this) ->
            fun (x3181 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3180) "calendar"
                (match x3181 with
                 | `Undefined x3182 -> undefined_to_js x3182
                 | `U1 x3183 -> Ojs.string_to_js x3183)
        let (get_dayPeriod' :
          'tags this ->
            [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option)
          =
          fun (x3185 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3187 : Ojs.t) ->
                 let x3188 = x3187 in
                 match Ojs.string_of_js x3188 with
                 | "long" -> `L_s56_long
                 | "narrow" -> `L_s68_narrow
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3185) "dayPeriod")
        let (set_dayPeriod' :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s68_narrow ] 
            | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s56_long ] ] -> 
              unit)
          =
          fun (x3189 : 'tags this) ->
            fun
              (x3190 :
                [ `Undefined of undefined  | `U1 of [ `L_s68_narrow ] 
                | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s56_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3189) "dayPeriod"
                (match x3190 with
                 | `Undefined x3191 -> undefined_to_js x3191
                 | `U1 x3192 ->
                     (match x3192 with
                      | `L_s68_narrow -> Ojs.string_to_js "narrow")
                 | `U2 x3193 ->
                     (match x3193 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U3 x3194 ->
                     (match x3194 with
                      | `L_s56_long -> Ojs.string_to_js "long"))
        let (get_numberingSystem : 'tags this -> string option) =
          fun (x3196 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3196)
                 "numberingSystem")
        let (set_numberingSystem :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3199 : 'tags this) ->
            fun (x3200 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3199)
                "numberingSystem"
                (match x3200 with
                 | `Undefined x3201 -> undefined_to_js x3201
                 | `U1 x3202 -> Ojs.string_to_js x3202)
        let (get_dateStyle' :
          'tags this ->
            [ `L_s44_full  | `L_s56_long  | `L_s60_medium  | `L_s89_short ]
              option)
          =
          fun (x3204 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3206 : Ojs.t) ->
                 let x3207 = x3206 in
                 match Ojs.string_of_js x3207 with
                 | "full" -> `L_s44_full
                 | "long" -> `L_s56_long
                 | "medium" -> `L_s60_medium
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3204) "dateStyle")
        let (set_dateStyle' :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
            | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
            | `U4 of [ `L_s89_short ] ] -> unit)
          =
          fun (x3208 : 'tags this) ->
            fun
              (x3209 :
                [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
                | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
                | `U4 of [ `L_s89_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3208) "dateStyle"
                (match x3209 with
                 | `Undefined x3210 -> undefined_to_js x3210
                 | `U1 x3211 ->
                     (match x3211 with
                      | `L_s44_full -> Ojs.string_to_js "full")
                 | `U2 x3212 ->
                     (match x3212 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U3 x3213 ->
                     (match x3213 with
                      | `L_s60_medium -> Ojs.string_to_js "medium")
                 | `U4 x3214 ->
                     (match x3214 with
                      | `L_s89_short -> Ojs.string_to_js "short"))
        let (get_timeStyle' :
          'tags this ->
            [ `L_s44_full  | `L_s56_long  | `L_s60_medium  | `L_s89_short ]
              option)
          =
          fun (x3216 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3218 : Ojs.t) ->
                 let x3219 = x3218 in
                 match Ojs.string_of_js x3219 with
                 | "full" -> `L_s44_full
                 | "long" -> `L_s56_long
                 | "medium" -> `L_s60_medium
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3216) "timeStyle")
        let (set_timeStyle' :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
            | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
            | `U4 of [ `L_s89_short ] ] -> unit)
          =
          fun (x3220 : 'tags this) ->
            fun
              (x3221 :
                [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
                | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
                | `U4 of [ `L_s89_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3220) "timeStyle"
                (match x3221 with
                 | `Undefined x3222 -> undefined_to_js x3222
                 | `U1 x3223 ->
                     (match x3223 with
                      | `L_s44_full -> Ojs.string_to_js "full")
                 | `U2 x3224 ->
                     (match x3224 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U3 x3225 ->
                     (match x3225 with
                      | `L_s60_medium -> Ojs.string_to_js "medium")
                 | `U4 x3226 ->
                     (match x3226 with
                      | `L_s89_short -> Ojs.string_to_js "short"))
        let (get_hourCycle :
          'tags this ->
            [ `L_s46_h11  | `L_s47_h12  | `L_s48_h23  | `L_s49_h24 ] option)
          =
          fun (x3228 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3230 : Ojs.t) ->
                 let x3231 = x3230 in
                 match Ojs.string_of_js x3231 with
                 | "h11" -> `L_s46_h11
                 | "h12" -> `L_s47_h12
                 | "h23" -> `L_s48_h23
                 | "h24" -> `L_s49_h24
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3228) "hourCycle")
        let (set_hourCycle :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s46_h11 ] 
            | `U2 of [ `L_s47_h12 ]  | `U3 of [ `L_s48_h23 ] 
            | `U4 of [ `L_s49_h24 ] ] -> unit)
          =
          fun (x3232 : 'tags this) ->
            fun
              (x3233 :
                [ `Undefined of undefined  | `U1 of [ `L_s46_h11 ] 
                | `U2 of [ `L_s47_h12 ]  | `U3 of [ `L_s48_h23 ] 
                | `U4 of [ `L_s49_h24 ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3232) "hourCycle"
                (match x3233 with
                 | `Undefined x3234 -> undefined_to_js x3234
                 | `U1 x3235 ->
                     (match x3235 with | `L_s46_h11 -> Ojs.string_to_js "h11")
                 | `U2 x3236 ->
                     (match x3236 with | `L_s47_h12 -> Ojs.string_to_js "h12")
                 | `U3 x3237 ->
                     (match x3237 with | `L_s48_h23 -> Ojs.string_to_js "h23")
                 | `U4 x3238 ->
                     (match x3238 with | `L_s49_h24 -> Ojs.string_to_js "h24"))
        let (get_localeMatcher :
          'tags this -> [ `L_s24_best_fit  | `L_s57_lookup ] option) =
          fun (x3240 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3242 : Ojs.t) ->
                 let x3243 = x3242 in
                 match Ojs.string_of_js x3243 with
                 | "best fit" -> `L_s24_best_fit
                 | "lookup" -> `L_s57_lookup
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3240)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s24_best_fit ] 
            | `U2 of [ `L_s57_lookup ] ] -> unit)
          =
          fun (x3244 : 'tags this) ->
            fun
              (x3245 :
                [ `Undefined of undefined  | `U1 of [ `L_s24_best_fit ] 
                | `U2 of [ `L_s57_lookup ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3244) "localeMatcher"
                (match x3245 with
                 | `Undefined x3246 -> undefined_to_js x3246
                 | `U1 x3247 ->
                     (match x3247 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit")
                 | `U2 x3248 ->
                     (match x3248 with
                      | `L_s57_lookup -> Ojs.string_to_js "lookup"))
        let (get_weekday :
          'tags this ->
            [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option)
          =
          fun (x3250 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3252 : Ojs.t) ->
                 let x3253 = x3252 in
                 match Ojs.string_of_js x3253 with
                 | "long" -> `L_s56_long
                 | "narrow" -> `L_s68_narrow
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3250) "weekday")
        let (set_weekday :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s56_long ] 
            | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s68_narrow ] ] -> 
              unit)
          =
          fun (x3254 : 'tags this) ->
            fun
              (x3255 :
                [ `Undefined of undefined  | `U1 of [ `L_s56_long ] 
                | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s68_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3254) "weekday"
                (match x3255 with
                 | `Undefined x3256 -> undefined_to_js x3256
                 | `U1 x3257 ->
                     (match x3257 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U2 x3258 ->
                     (match x3258 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U3 x3259 ->
                     (match x3259 with
                      | `L_s68_narrow -> Ojs.string_to_js "narrow"))
        let (get_era :
          'tags this ->
            [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option)
          =
          fun (x3261 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3263 : Ojs.t) ->
                 let x3264 = x3263 in
                 match Ojs.string_of_js x3264 with
                 | "long" -> `L_s56_long
                 | "narrow" -> `L_s68_narrow
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3261) "era")
        let (set_era :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s56_long ] 
            | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s68_narrow ] ] -> 
              unit)
          =
          fun (x3265 : 'tags this) ->
            fun
              (x3266 :
                [ `Undefined of undefined  | `U1 of [ `L_s56_long ] 
                | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s68_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3265) "era"
                (match x3266 with
                 | `Undefined x3267 -> undefined_to_js x3267
                 | `U1 x3268 ->
                     (match x3268 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U2 x3269 ->
                     (match x3269 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U3 x3270 ->
                     (match x3270 with
                      | `L_s68_narrow -> Ojs.string_to_js "narrow"))
        let (get_year :
          'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option) =
          fun (x3272 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3274 : Ojs.t) ->
                 let x3275 = x3274 in
                 match Ojs.string_of_js x3275 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s73_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3272) "year")
        let (set_year :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x3276 : 'tags this) ->
            fun
              (x3277 :
                [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3276) "year"
                (match x3277 with
                 | `Undefined x3278 -> undefined_to_js x3278
                 | `U1 x3279 ->
                     (match x3279 with
                      | `L_s73_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3280 ->
                     (match x3280 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_month :
          'tags this ->
            [ `L_s0_2_digit  | `L_s56_long  | `L_s68_narrow 
            | `L_s73_numeric  | `L_s89_short ] option)
          =
          fun (x3282 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3284 : Ojs.t) ->
                 let x3285 = x3284 in
                 match Ojs.string_of_js x3285 with
                 | "2-digit" -> `L_s0_2_digit
                 | "long" -> `L_s56_long
                 | "narrow" -> `L_s68_narrow
                 | "numeric" -> `L_s73_numeric
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3282) "month")
        let (set_month :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
            | `U2 of [ `L_s0_2_digit ]  | `U3 of [ `L_s56_long ] 
            | `U4 of [ `L_s89_short ]  | `U5 of [ `L_s68_narrow ] ] -> 
              unit)
          =
          fun (x3286 : 'tags this) ->
            fun
              (x3287 :
                [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
                | `U2 of [ `L_s0_2_digit ]  | `U3 of [ `L_s56_long ] 
                | `U4 of [ `L_s89_short ]  | `U5 of [ `L_s68_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3286) "month"
                (match x3287 with
                 | `Undefined x3288 -> undefined_to_js x3288
                 | `U1 x3289 ->
                     (match x3289 with
                      | `L_s73_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3290 ->
                     (match x3290 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit")
                 | `U3 x3291 ->
                     (match x3291 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U4 x3292 ->
                     (match x3292 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U5 x3293 ->
                     (match x3293 with
                      | `L_s68_narrow -> Ojs.string_to_js "narrow"))
        let (get_day :
          'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option) =
          fun (x3295 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3297 : Ojs.t) ->
                 let x3298 = x3297 in
                 match Ojs.string_of_js x3298 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s73_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3295) "day")
        let (set_day :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x3299 : 'tags this) ->
            fun
              (x3300 :
                [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3299) "day"
                (match x3300 with
                 | `Undefined x3301 -> undefined_to_js x3301
                 | `U1 x3302 ->
                     (match x3302 with
                      | `L_s73_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3303 ->
                     (match x3303 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_hour :
          'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option) =
          fun (x3305 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3307 : Ojs.t) ->
                 let x3308 = x3307 in
                 match Ojs.string_of_js x3308 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s73_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3305) "hour")
        let (set_hour :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x3309 : 'tags this) ->
            fun
              (x3310 :
                [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3309) "hour"
                (match x3310 with
                 | `Undefined x3311 -> undefined_to_js x3311
                 | `U1 x3312 ->
                     (match x3312 with
                      | `L_s73_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3313 ->
                     (match x3313 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_minute :
          'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option) =
          fun (x3315 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3317 : Ojs.t) ->
                 let x3318 = x3317 in
                 match Ojs.string_of_js x3318 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s73_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3315) "minute")
        let (set_minute :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x3319 : 'tags this) ->
            fun
              (x3320 :
                [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3319) "minute"
                (match x3320 with
                 | `Undefined x3321 -> undefined_to_js x3321
                 | `U1 x3322 ->
                     (match x3322 with
                      | `L_s73_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3323 ->
                     (match x3323 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_second :
          'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option) =
          fun (x3325 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3327 : Ojs.t) ->
                 let x3328 = x3327 in
                 match Ojs.string_of_js x3328 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s73_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3325) "second")
        let (set_second :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x3329 : 'tags this) ->
            fun
              (x3330 :
                [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3329) "second"
                (match x3330 with
                 | `Undefined x3331 -> undefined_to_js x3331
                 | `U1 x3332 ->
                     (match x3332 with
                      | `L_s73_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3333 ->
                     (match x3333 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_timeZoneName :
          'tags this -> [ `L_s56_long  | `L_s89_short ] option) =
          fun (x3335 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3337 : Ojs.t) ->
                 let x3338 = x3337 in
                 match Ojs.string_of_js x3338 with
                 | "long" -> `L_s56_long
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3335) "timeZoneName")
        let (set_timeZoneName :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s56_long ] 
            | `U2 of [ `L_s89_short ] ] -> unit)
          =
          fun (x3339 : 'tags this) ->
            fun
              (x3340 :
                [ `Undefined of undefined  | `U1 of [ `L_s56_long ] 
                | `U2 of [ `L_s89_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3339) "timeZoneName"
                (match x3340 with
                 | `Undefined x3341 -> undefined_to_js x3341
                 | `U1 x3342 ->
                     (match x3342 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U2 x3343 ->
                     (match x3343 with
                      | `L_s89_short -> Ojs.string_to_js "short"))
        let (get_formatMatcher' :
          'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] option) =
          fun (x3345 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3347 : Ojs.t) ->
                 let x3348 = x3347 in
                 match Ojs.string_of_js x3348 with
                 | "basic" -> `L_s23_basic
                 | "best fit" -> `L_s24_best_fit
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3345)
                 "formatMatcher")
        let (set_formatMatcher' :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s24_best_fit ] 
            | `U2 of [ `L_s23_basic ] ] -> unit)
          =
          fun (x3349 : 'tags this) ->
            fun
              (x3350 :
                [ `Undefined of undefined  | `U1 of [ `L_s24_best_fit ] 
                | `U2 of [ `L_s23_basic ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3349) "formatMatcher"
                (match x3350 with
                 | `Undefined x3351 -> undefined_to_js x3351
                 | `U1 x3352 ->
                     (match x3352 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit")
                 | `U2 x3353 ->
                     (match x3353 with
                      | `L_s23_basic -> Ojs.string_to_js "basic"))
        let (get_hour12 : 'tags this -> bool option) =
          fun (x3355 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3355) "hour12")
        let (set_hour12 :
          'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit) =
          fun (x3358 : 'tags this) ->
            fun (x3359 : [ `Undefined of undefined  | `U1 of bool ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3358) "hour12"
                (match x3359 with
                 | `Undefined x3360 -> undefined_to_js x3360
                 | `U1 x3361 -> Ojs.bool_to_js x3361)
        let (get_timeZone : 'tags this -> string option) =
          fun (x3363 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3363) "timeZone")
        let (set_timeZone :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3366 : 'tags this) ->
            fun (x3367 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3366) "timeZone"
                (match x3367 with
                 | `Undefined x3368 -> undefined_to_js x3368
                 | `U1 x3369 -> Ojs.string_to_js x3369)
        let (create :
          ?formatMatcher:[ `L_s23_basic  | `L_s24_best_fit ] ->
            ?dateStyle:[ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                       | `L_s89_short ]
              ->
              ?timeStyle:[ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                         | `L_s89_short ]
                ->
                ?dayPeriod:[ `L_s56_long  | `L_s68_narrow  | `L_s89_short ]
                  ->
                  ?fractionalSecondDigits:[ `L_n_0  | `L_n_1  | `L_n_2 
                                          | `L_n_3 ]
                    ->
                    ?calendar:string ->
                      ?dayPeriod:[ `L_s56_long  | `L_s68_narrow 
                                 | `L_s89_short ]
                        ->
                        ?numberingSystem:string ->
                          ?dateStyle:[ `L_s44_full  | `L_s56_long 
                                     | `L_s60_medium  | `L_s89_short ]
                            ->
                            ?timeStyle:[ `L_s44_full  | `L_s56_long 
                                       | `L_s60_medium  | `L_s89_short ]
                              ->
                              ?hourCycle:[ `L_s46_h11  | `L_s47_h12 
                                         | `L_s48_h23  | `L_s49_h24 ]
                                ->
                                ?localeMatcher:[ `L_s24_best_fit 
                                               | `L_s57_lookup ]
                                  ->
                                  ?weekday:[ `L_s56_long  | `L_s68_narrow 
                                           | `L_s89_short ]
                                    ->
                                    ?era:[ `L_s56_long  | `L_s68_narrow 
                                         | `L_s89_short ]
                                      ->
                                      ?year:[ `L_s0_2_digit 
                                            | `L_s73_numeric ]
                                        ->
                                        ?month:[ `L_s0_2_digit 
                                               | `L_s56_long 
                                               | `L_s68_narrow 
                                               | `L_s73_numeric 
                                               | `L_s89_short ]
                                          ->
                                          ?day:[ `L_s0_2_digit 
                                               | `L_s73_numeric ]
                                            ->
                                            ?hour:[ `L_s0_2_digit 
                                                  | `L_s73_numeric ]
                                              ->
                                              ?minute:[ `L_s0_2_digit 
                                                      | `L_s73_numeric ]
                                                ->
                                                ?second:[ `L_s0_2_digit 
                                                        | `L_s73_numeric ]
                                                  ->
                                                  ?timeZoneName:[
                                                                  `L_s56_long 
                                                                | `L_s89_short
                                                                    ]
                                                    ->
                                                    ?formatMatcher:[
                                                                    `L_s23_basic
                                                                     | 
                                                                    `L_s24_best_fit
                                                                    ]
                                                      ->
                                                      ?hour12:bool ->
                                                        ?timeZone:string ->
                                                          unit -> t)
          =
          fun
            ?formatMatcher:(x3371 :
                             [ `L_s23_basic  | `L_s24_best_fit ] option)
            ->
            fun
              ?dateStyle:(x3372 :
                           [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                           | `L_s89_short ] option)
              ->
              fun
                ?timeStyle:(x3373 :
                             [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                             | `L_s89_short ] option)
                ->
                fun
                  ?dayPeriod:(x3374 :
                               [ `L_s56_long  | `L_s68_narrow 
                               | `L_s89_short ] option)
                  ->
                  fun
                    ?fractionalSecondDigits:(x3375 :
                                              [ `L_n_0  | `L_n_1  | `L_n_2 
                                              | `L_n_3 ] option)
                    ->
                    fun ?calendar:(x3376 : string option) ->
                      fun
                        ?dayPeriod:(x3377 :
                                     [ `L_s56_long  | `L_s68_narrow 
                                     | `L_s89_short ] option)
                        ->
                        fun ?numberingSystem:(x3378 : string option) ->
                          fun
                            ?dateStyle:(x3379 :
                                         [ `L_s44_full  | `L_s56_long 
                                         | `L_s60_medium  | `L_s89_short ]
                                           option)
                            ->
                            fun
                              ?timeStyle:(x3380 :
                                           [ `L_s44_full  | `L_s56_long 
                                           | `L_s60_medium  | `L_s89_short ]
                                             option)
                              ->
                              fun
                                ?hourCycle:(x3381 :
                                             [ `L_s46_h11  | `L_s47_h12 
                                             | `L_s48_h23  | `L_s49_h24 ]
                                               option)
                                ->
                                fun
                                  ?localeMatcher:(x3382 :
                                                   [ `L_s24_best_fit 
                                                   | `L_s57_lookup ] option)
                                  ->
                                  fun
                                    ?weekday:(x3383 :
                                               [ `L_s56_long 
                                               | `L_s68_narrow 
                                               | `L_s89_short ] option)
                                    ->
                                    fun
                                      ?era:(x3384 :
                                             [ `L_s56_long  | `L_s68_narrow 
                                             | `L_s89_short ] option)
                                      ->
                                      fun
                                        ?year:(x3385 :
                                                [ `L_s0_2_digit 
                                                | `L_s73_numeric ] option)
                                        ->
                                        fun
                                          ?month:(x3386 :
                                                   [ `L_s0_2_digit 
                                                   | `L_s56_long 
                                                   | `L_s68_narrow 
                                                   | `L_s73_numeric 
                                                   | `L_s89_short ] option)
                                          ->
                                          fun
                                            ?day:(x3387 :
                                                   [ `L_s0_2_digit 
                                                   | `L_s73_numeric ] option)
                                            ->
                                            fun
                                              ?hour:(x3388 :
                                                      [ `L_s0_2_digit 
                                                      | `L_s73_numeric ]
                                                        option)
                                              ->
                                              fun
                                                ?minute:(x3389 :
                                                          [ `L_s0_2_digit 
                                                          | `L_s73_numeric ]
                                                            option)
                                                ->
                                                fun
                                                  ?second:(x3390 :
                                                            [ `L_s0_2_digit 
                                                            | `L_s73_numeric ]
                                                              option)
                                                  ->
                                                  fun
                                                    ?timeZoneName:(x3391 :
                                                                    [
                                                                    `L_s56_long
                                                                     | 
                                                                    `L_s89_short
                                                                    ] option)
                                                    ->
                                                    fun
                                                      ?formatMatcher:
                                                      (x3392 :
                                                        [ `L_s23_basic 
                                                        | `L_s24_best_fit ]
                                                          option)
                                                      ->
                                                      fun
                                                        ?hour12:(x3393 :
                                                                  bool option)
                                                        ->
                                                        fun
                                                          ?timeZone:(x3394 :
                                                                    string
                                                                    option)
                                                          ->
                                                          fun () ->
                                                            let x3395 =
                                                              Ojs.empty_obj
                                                                () in
                                                            (match x3371 with
                                                             | Some x3419 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "formatMatcher"
                                                                   (match x3419
                                                                    with
                                                                    | 
                                                                    `L_s23_basic
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "basic"
                                                                    | 
                                                                    `L_s24_best_fit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "best fit")
                                                             | None -> ());
                                                            (match x3372 with
                                                             | Some x3418 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "dateStyle"
                                                                   (match x3418
                                                                    with
                                                                    | 
                                                                    `L_s44_full
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "full"
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s60_medium
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "medium"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3373 with
                                                             | Some x3417 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "timeStyle"
                                                                   (match x3417
                                                                    with
                                                                    | 
                                                                    `L_s44_full
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "full"
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s60_medium
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "medium"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3374 with
                                                             | Some x3416 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "dayPeriod"
                                                                   (match x3416
                                                                    with
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s68_narrow
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "narrow"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3375 with
                                                             | Some x3415 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "fractionalSecondDigits"
                                                                   (match x3415
                                                                    with
                                                                    | 
                                                                    `L_n_0 ->
                                                                    Ojs.int_to_js
                                                                    0
                                                                    | 
                                                                    `L_n_1 ->
                                                                    Ojs.int_to_js
                                                                    1
                                                                    | 
                                                                    `L_n_2 ->
                                                                    Ojs.int_to_js
                                                                    2
                                                                    | 
                                                                    `L_n_3 ->
                                                                    Ojs.int_to_js
                                                                    3)
                                                             | None -> ());
                                                            (match x3376 with
                                                             | Some x3414 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "calendar"
                                                                   (Ojs.string_to_js
                                                                    x3414)
                                                             | None -> ());
                                                            (match x3377 with
                                                             | Some x3413 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "dayPeriod"
                                                                   (match x3413
                                                                    with
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s68_narrow
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "narrow"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3378 with
                                                             | Some x3412 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "numberingSystem"
                                                                   (Ojs.string_to_js
                                                                    x3412)
                                                             | None -> ());
                                                            (match x3379 with
                                                             | Some x3411 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "dateStyle"
                                                                   (match x3411
                                                                    with
                                                                    | 
                                                                    `L_s44_full
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "full"
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s60_medium
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "medium"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3380 with
                                                             | Some x3410 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "timeStyle"
                                                                   (match x3410
                                                                    with
                                                                    | 
                                                                    `L_s44_full
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "full"
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s60_medium
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "medium"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3381 with
                                                             | Some x3409 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "hourCycle"
                                                                   (match x3409
                                                                    with
                                                                    | 
                                                                    `L_s46_h11
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "h11"
                                                                    | 
                                                                    `L_s47_h12
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "h12"
                                                                    | 
                                                                    `L_s48_h23
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "h23"
                                                                    | 
                                                                    `L_s49_h24
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "h24")
                                                             | None -> ());
                                                            (match x3382 with
                                                             | Some x3408 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "localeMatcher"
                                                                   (match x3408
                                                                    with
                                                                    | 
                                                                    `L_s24_best_fit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "best fit"
                                                                    | 
                                                                    `L_s57_lookup
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "lookup")
                                                             | None -> ());
                                                            (match x3383 with
                                                             | Some x3407 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "weekday"
                                                                   (match x3407
                                                                    with
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s68_narrow
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "narrow"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3384 with
                                                             | Some x3406 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "era"
                                                                   (match x3406
                                                                    with
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s68_narrow
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "narrow"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3385 with
                                                             | Some x3405 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "year"
                                                                   (match x3405
                                                                    with
                                                                    | 
                                                                    `L_s0_2_digit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "2-digit"
                                                                    | 
                                                                    `L_s73_numeric
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "numeric")
                                                             | None -> ());
                                                            (match x3386 with
                                                             | Some x3404 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "month"
                                                                   (match x3404
                                                                    with
                                                                    | 
                                                                    `L_s0_2_digit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "2-digit"
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s68_narrow
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "narrow"
                                                                    | 
                                                                    `L_s73_numeric
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "numeric"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3387 with
                                                             | Some x3403 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "day"
                                                                   (match x3403
                                                                    with
                                                                    | 
                                                                    `L_s0_2_digit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "2-digit"
                                                                    | 
                                                                    `L_s73_numeric
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "numeric")
                                                             | None -> ());
                                                            (match x3388 with
                                                             | Some x3402 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "hour"
                                                                   (match x3402
                                                                    with
                                                                    | 
                                                                    `L_s0_2_digit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "2-digit"
                                                                    | 
                                                                    `L_s73_numeric
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "numeric")
                                                             | None -> ());
                                                            (match x3389 with
                                                             | Some x3401 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "minute"
                                                                   (match x3401
                                                                    with
                                                                    | 
                                                                    `L_s0_2_digit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "2-digit"
                                                                    | 
                                                                    `L_s73_numeric
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "numeric")
                                                             | None -> ());
                                                            (match x3390 with
                                                             | Some x3400 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "second"
                                                                   (match x3400
                                                                    with
                                                                    | 
                                                                    `L_s0_2_digit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "2-digit"
                                                                    | 
                                                                    `L_s73_numeric
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "numeric")
                                                             | None -> ());
                                                            (match x3391 with
                                                             | Some x3399 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "timeZoneName"
                                                                   (match x3399
                                                                    with
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3392 with
                                                             | Some x3398 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "formatMatcher"
                                                                   (match x3398
                                                                    with
                                                                    | 
                                                                    `L_s23_basic
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "basic"
                                                                    | 
                                                                    `L_s24_best_fit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "best fit")
                                                             | None -> ());
                                                            (match x3393 with
                                                             | Some x3397 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "hour12"
                                                                   (Ojs.bool_to_js
                                                                    x3397)
                                                             | None -> ());
                                                            (match x3394 with
                                                             | Some x3396 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "timeZone"
                                                                   (Ojs.string_to_js
                                                                    x3396)
                                                             | None -> ());
                                                            t_of_js x3395
        let cast_from = Obj.magic
      end
    module DateTimeFormat =
      struct
        type t = [ `Intl_DateTimeFormat ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3421 : Ojs.t) -> t_of_js x3421
        and t_0_to_js : t_0 -> Ojs.t = fun (x3420 : t) -> t_to_js x3420
        type tags = [ `Intl_DateTimeFormat ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DateTimeFormat ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x3424 : Ojs.t) -> intf_of_js __tags_of_js x3424
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x3422 : __tags intf) -> intf_to_js __tags_to_js x3422
        let (formatToParts :
          'tags this ->
            ?date:[ `U1 of Date.t  | `U2 of float ] ->
              unit -> DateTimeFormatPart.t list)
          =
          fun (x3431 : 'tags this) ->
            fun ?date:(x3426 : [ `U1 of Date.t  | `U2 of float ] option) ->
              fun () ->
                Ojs.list_of_js DateTimeFormatPart.t_of_js
                  (let x3433 = this_to_js Obj.magic x3431 in
                   Ojs.call (Ojs.get_prop_ascii x3433 "formatToParts")
                     "apply"
                     [|x3433;((let x3427 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x3426 with
                                | Some x3428 ->
                                    ignore
                                      (Ojs.call x3427 "push"
                                         [|((match x3428 with
                                             | `U1 x3429 ->
                                                 Date.t_to_js x3429
                                             | `U2 x3430 ->
                                                 Ojs.float_to_js x3430))|])
                                | None -> ());
                               x3427))|])
        let (format :
          'tags this ->
            ?date:[ `U1 of Date.t  | `U2 of float ] -> unit -> string)
          =
          fun (x3440 : 'tags this) ->
            fun ?date:(x3435 : [ `U1 of Date.t  | `U2 of float ] option) ->
              fun () ->
                Ojs.string_of_js
                  (let x3442 = this_to_js Obj.magic x3440 in
                   Ojs.call (Ojs.get_prop_ascii x3442 "format") "apply"
                     [|x3442;((let x3436 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x3435 with
                                | Some x3437 ->
                                    ignore
                                      (Ojs.call x3436 "push"
                                         [|((match x3437 with
                                             | `U1 x3438 ->
                                                 Date.t_to_js x3438
                                             | `U2 x3439 ->
                                                 Ojs.float_to_js x3439))|])
                                | None -> ());
                               x3436))|])
        let (resolvedOptions : 'tags this -> ResolvedDateTimeFormatOptions.t)
          =
          fun (x3443 : 'tags this) ->
            ResolvedDateTimeFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x3443) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:DateTimeFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x3445 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x3446 : DateTimeFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl")
                        "DateTimeFormat")
                     (let x3447 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x3445 with
                       | Some x3449 ->
                           ignore
                             (Ojs.call x3447 "push"
                                [|((match x3449 with
                                    | `U1 x3450 -> Ojs.string_to_js x3450
                                    | `U2 x3451 ->
                                        Ojs.list_to_js Ojs.string_to_js x3451))|])
                       | None -> ());
                      (match x3446 with
                       | Some x3448 ->
                           ignore
                             (Ojs.call x3447 "push"
                                [|(DateTimeFormatOptions.t_to_js x3448)|])
                       | None -> ());
                      x3447))
        let (invoke :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:DateTimeFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x3453 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x3454 : DateTimeFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl")
                        "DateTimeFormat") "apply"
                     [|Ojs.null;((let x3455 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x3453 with
                                   | Some x3457 ->
                                       ignore
                                         (Ojs.call x3455 "push"
                                            [|((match x3457 with
                                                | `U1 x3458 ->
                                                    Ojs.string_to_js x3458
                                                | `U2 x3459 ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x3459))|])
                                   | None -> ());
                                  (match x3454 with
                                   | Some x3456 ->
                                       ignore
                                         (Ojs.call x3455 "push"
                                            [|(DateTimeFormatOptions.t_to_js
                                                 x3456)|])
                                   | None -> ());
                                  x3455))|])
        let (supportedLocalesOf :
          locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:DateTimeFormatOptions.t -> unit -> string list)
          =
          fun ~locales:(x3461 : [ `U1 of string  | `U2 of string list ]) ->
            fun ?options:(x3462 : DateTimeFormatOptions.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x3468 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl")
                       "DateTimeFormat" in
                   Ojs.call (Ojs.get_prop_ascii x3468 "supportedLocalesOf")
                     "apply"
                     [|x3468;((let x3463 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3463 "push"
                                    [|((match x3461 with
                                        | `U1 x3465 -> Ojs.string_to_js x3465
                                        | `U2 x3466 ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x3466))|]);
                               (match x3462 with
                                | Some x3464 ->
                                    ignore
                                      (Ojs.call x3463 "push"
                                         [|(DateTimeFormatOptions.t_to_js
                                              x3464)|])
                                | None -> ());
                               x3463))|])
      end
    module ResolvedCollatorOptions =
      struct
        type t = [ `Intl_ResolvedCollatorOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3471 : Ojs.t) -> t_of_js x3471
        and t_0_to_js : t_0 -> Ojs.t = fun (x3470 : t) -> t_to_js x3470
        type tags = [ `Intl_ResolvedCollatorOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_ResolvedCollatorOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x3474 : Ojs.t) -> intf_of_js __tags_of_js x3474
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x3472 : __tags intf) -> intf_to_js __tags_to_js x3472
        let (get_locale : 'tags this -> string) =
          fun (x3476 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3476) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x3478 : 'tags this) ->
            fun (x3479 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3478) "locale"
                (Ojs.string_to_js x3479)
        let (get_usage : 'tags this -> string) =
          fun (x3481 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3481) "usage")
        let (set_usage : 'tags this -> string -> unit) =
          fun (x3483 : 'tags this) ->
            fun (x3484 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3483) "usage"
                (Ojs.string_to_js x3484)
        let (get_sensitivity : 'tags this -> string) =
          fun (x3486 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3486) "sensitivity")
        let (set_sensitivity : 'tags this -> string -> unit) =
          fun (x3488 : 'tags this) ->
            fun (x3489 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3488) "sensitivity"
                (Ojs.string_to_js x3489)
        let (get_ignorePunctuation : 'tags this -> bool) =
          fun (x3491 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3491)
                 "ignorePunctuation")
        let (set_ignorePunctuation : 'tags this -> bool -> unit) =
          fun (x3493 : 'tags this) ->
            fun (x3494 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3493)
                "ignorePunctuation" (Ojs.bool_to_js x3494)
        let (get_collation : 'tags this -> string) =
          fun (x3496 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3496) "collation")
        let (set_collation : 'tags this -> string -> unit) =
          fun (x3498 : 'tags this) ->
            fun (x3499 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3498) "collation"
                (Ojs.string_to_js x3499)
        let (get_caseFirst : 'tags this -> string) =
          fun (x3501 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3501) "caseFirst")
        let (set_caseFirst : 'tags this -> string -> unit) =
          fun (x3503 : 'tags this) ->
            fun (x3504 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3503) "caseFirst"
                (Ojs.string_to_js x3504)
        let (get_numeric : 'tags this -> bool) =
          fun (x3506 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3506) "numeric")
        let (set_numeric : 'tags this -> bool -> unit) =
          fun (x3508 : 'tags this) ->
            fun (x3509 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3508) "numeric"
                (Ojs.bool_to_js x3509)
        let (create :
          locale:string ->
            usage:string ->
              sensitivity:string ->
                ignorePunctuation:bool ->
                  collation:string ->
                    caseFirst:string -> numeric:bool -> unit -> t)
          =
          fun ~locale:(x3511 : string) ->
            fun ~usage:(x3512 : string) ->
              fun ~sensitivity:(x3513 : string) ->
                fun ~ignorePunctuation:(x3514 : bool) ->
                  fun ~collation:(x3515 : string) ->
                    fun ~caseFirst:(x3516 : string) ->
                      fun ~numeric:(x3517 : bool) ->
                        fun () ->
                          let x3518 = Ojs.empty_obj () in
                          Ojs.set_prop_ascii x3518 "locale"
                            (Ojs.string_to_js x3511);
                          Ojs.set_prop_ascii x3518 "usage"
                            (Ojs.string_to_js x3512);
                          Ojs.set_prop_ascii x3518 "sensitivity"
                            (Ojs.string_to_js x3513);
                          Ojs.set_prop_ascii x3518 "ignorePunctuation"
                            (Ojs.bool_to_js x3514);
                          Ojs.set_prop_ascii x3518 "collation"
                            (Ojs.string_to_js x3515);
                          Ojs.set_prop_ascii x3518 "caseFirst"
                            (Ojs.string_to_js x3516);
                          Ojs.set_prop_ascii x3518 "numeric"
                            (Ojs.bool_to_js x3517);
                          t_of_js x3518
        let cast_from = Obj.magic
      end
    module CollatorOptions =
      struct
        type t = [ `Intl_CollatorOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3520 : Ojs.t) -> t_of_js x3520
        and t_0_to_js : t_0 -> Ojs.t = fun (x3519 : t) -> t_to_js x3519
        type tags = [ `Intl_CollatorOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_CollatorOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x3523 : Ojs.t) -> intf_of_js __tags_of_js x3523
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x3521 : __tags intf) -> intf_to_js __tags_to_js x3521
        let (get_usage : 'tags this -> string option) =
          fun (x3525 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3525) "usage")
        let (set_usage :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3528 : 'tags this) ->
            fun (x3529 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3528) "usage"
                (match x3529 with
                 | `Undefined x3530 -> undefined_to_js x3530
                 | `U1 x3531 -> Ojs.string_to_js x3531)
        let (get_localeMatcher : 'tags this -> string option) =
          fun (x3533 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3533)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3536 : 'tags this) ->
            fun (x3537 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3536) "localeMatcher"
                (match x3537 with
                 | `Undefined x3538 -> undefined_to_js x3538
                 | `U1 x3539 -> Ojs.string_to_js x3539)
        let (get_numeric : 'tags this -> bool option) =
          fun (x3541 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3541) "numeric")
        let (set_numeric :
          'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit) =
          fun (x3544 : 'tags this) ->
            fun (x3545 : [ `Undefined of undefined  | `U1 of bool ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3544) "numeric"
                (match x3545 with
                 | `Undefined x3546 -> undefined_to_js x3546
                 | `U1 x3547 -> Ojs.bool_to_js x3547)
        let (get_caseFirst : 'tags this -> string option) =
          fun (x3549 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3549) "caseFirst")
        let (set_caseFirst :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3552 : 'tags this) ->
            fun (x3553 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3552) "caseFirst"
                (match x3553 with
                 | `Undefined x3554 -> undefined_to_js x3554
                 | `U1 x3555 -> Ojs.string_to_js x3555)
        let (get_sensitivity : 'tags this -> string option) =
          fun (x3557 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3557) "sensitivity")
        let (set_sensitivity :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3560 : 'tags this) ->
            fun (x3561 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3560) "sensitivity"
                (match x3561 with
                 | `Undefined x3562 -> undefined_to_js x3562
                 | `U1 x3563 -> Ojs.string_to_js x3563)
        let (get_ignorePunctuation : 'tags this -> bool option) =
          fun (x3565 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3565)
                 "ignorePunctuation")
        let (set_ignorePunctuation :
          'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit) =
          fun (x3568 : 'tags this) ->
            fun (x3569 : [ `Undefined of undefined  | `U1 of bool ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3568)
                "ignorePunctuation"
                (match x3569 with
                 | `Undefined x3570 -> undefined_to_js x3570
                 | `U1 x3571 -> Ojs.bool_to_js x3571)
        let (create :
          ?usage:string ->
            ?localeMatcher:string ->
              ?numeric:bool ->
                ?caseFirst:string ->
                  ?sensitivity:string -> ?ignorePunctuation:bool -> unit -> t)
          =
          fun ?usage:(x3573 : string option) ->
            fun ?localeMatcher:(x3574 : string option) ->
              fun ?numeric:(x3575 : bool option) ->
                fun ?caseFirst:(x3576 : string option) ->
                  fun ?sensitivity:(x3577 : string option) ->
                    fun ?ignorePunctuation:(x3578 : bool option) ->
                      fun () ->
                        let x3579 = Ojs.empty_obj () in
                        (match x3573 with
                         | Some x3585 ->
                             Ojs.set_prop_ascii x3579 "usage"
                               (Ojs.string_to_js x3585)
                         | None -> ());
                        (match x3574 with
                         | Some x3584 ->
                             Ojs.set_prop_ascii x3579 "localeMatcher"
                               (Ojs.string_to_js x3584)
                         | None -> ());
                        (match x3575 with
                         | Some x3583 ->
                             Ojs.set_prop_ascii x3579 "numeric"
                               (Ojs.bool_to_js x3583)
                         | None -> ());
                        (match x3576 with
                         | Some x3582 ->
                             Ojs.set_prop_ascii x3579 "caseFirst"
                               (Ojs.string_to_js x3582)
                         | None -> ());
                        (match x3577 with
                         | Some x3581 ->
                             Ojs.set_prop_ascii x3579 "sensitivity"
                               (Ojs.string_to_js x3581)
                         | None -> ());
                        (match x3578 with
                         | Some x3580 ->
                             Ojs.set_prop_ascii x3579 "ignorePunctuation"
                               (Ojs.bool_to_js x3580)
                         | None -> ());
                        t_of_js x3579
        let cast_from = Obj.magic
      end
    module Collator =
      struct
        type t = [ `Intl_Collator ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3587 : Ojs.t) -> t_of_js x3587
        and t_0_to_js : t_0 -> Ojs.t = fun (x3586 : t) -> t_to_js x3586
        type tags = [ `Intl_Collator ]
        type tags_0 = tags
        type 'tags this = 'tags intf constraint 'tags = [> `Intl_Collator ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x3590 : Ojs.t) -> intf_of_js __tags_of_js x3590
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x3588 : __tags intf) -> intf_to_js __tags_to_js x3588
        let (compare : 'tags this -> x:string -> y:string -> float) =
          fun (x3594 : 'tags this) ->
            fun ~x:(x3592 : string) ->
              fun ~y:(x3593 : string) ->
                Ojs.float_of_js
                  (Ojs.call (this_to_js Obj.magic x3594) "compare"
                     [|(Ojs.string_to_js x3592);(Ojs.string_to_js x3593)|])
        let (resolvedOptions : 'tags this -> ResolvedCollatorOptions.t) =
          fun (x3596 : 'tags this) ->
            ResolvedCollatorOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x3596) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:CollatorOptions.t -> unit -> t)
          =
          fun
            ?locales:(x3598 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x3599 : CollatorOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "Collator")
                     (let x3600 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x3598 with
                       | Some x3602 ->
                           ignore
                             (Ojs.call x3600 "push"
                                [|((match x3602 with
                                    | `U1 x3603 -> Ojs.string_to_js x3603
                                    | `U2 x3604 ->
                                        Ojs.list_to_js Ojs.string_to_js x3604))|])
                       | None -> ());
                      (match x3599 with
                       | Some x3601 ->
                           ignore
                             (Ojs.call x3600 "push"
                                [|(CollatorOptions.t_to_js x3601)|])
                       | None -> ());
                      x3600))
        let (invoke :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:CollatorOptions.t -> unit -> t)
          =
          fun
            ?locales:(x3606 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x3607 : CollatorOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "Collator")
                     "apply"
                     [|Ojs.null;((let x3608 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x3606 with
                                   | Some x3610 ->
                                       ignore
                                         (Ojs.call x3608 "push"
                                            [|((match x3610 with
                                                | `U1 x3611 ->
                                                    Ojs.string_to_js x3611
                                                | `U2 x3612 ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x3612))|])
                                   | None -> ());
                                  (match x3607 with
                                   | Some x3609 ->
                                       ignore
                                         (Ojs.call x3608 "push"
                                            [|(CollatorOptions.t_to_js x3609)|])
                                   | None -> ());
                                  x3608))|])
        let (supportedLocalesOf :
          locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:CollatorOptions.t -> unit -> string list)
          =
          fun ~locales:(x3614 : [ `U1 of string  | `U2 of string list ]) ->
            fun ?options:(x3615 : CollatorOptions.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x3621 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "Collator" in
                   Ojs.call (Ojs.get_prop_ascii x3621 "supportedLocalesOf")
                     "apply"
                     [|x3621;((let x3616 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3616 "push"
                                    [|((match x3614 with
                                        | `U1 x3618 -> Ojs.string_to_js x3618
                                        | `U2 x3619 ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x3619))|]);
                               (match x3615 with
                                | Some x3617 ->
                                    ignore
                                      (Ojs.call x3616 "push"
                                         [|(CollatorOptions.t_to_js x3617)|])
                                | None -> ());
                               x3616))|])
      end
  end
module String =
  struct
    module AnonymousInterface6 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3624 : Ojs.t) -> x3624
        and t_to_js : t -> Ojs.t = fun (x3623 : Ojs.t) -> x3623
        let (get_raw : t -> (string ArrayLike.t, string list) union2) =
          fun (x3625 : t) ->
            union2_of_js
              (fun (x3626 : Ojs.t) ->
                 ArrayLike.t_of_js Ojs.string_of_js x3626)
              (fun (x3628 : Ojs.t) -> Ojs.list_of_js Ojs.string_of_js x3628)
              (Ojs.get_prop_ascii (t_to_js x3625) "raw")
        let (set_raw :
          t -> [ `U1 of string list  | `U2 of string ArrayLike.t ] -> unit) =
          fun (x3630 : t) ->
            fun (x3631 : [ `U1 of string list  | `U2 of string ArrayLike.t ])
              ->
              Ojs.set_prop_ascii (t_to_js x3630) "raw"
                (match x3631 with
                 | `U1 x3632 -> Ojs.list_to_js Ojs.string_to_js x3632
                 | `U2 x3634 -> ArrayLike.t_to_js Ojs.string_to_js x3634)
        let (create :
          raw:(string ArrayLike.t, string list) union2 -> unit -> t) =
          fun ~raw:(x3636 : (string ArrayLike.t, string list) union2) ->
            fun () ->
              let x3637 = Ojs.empty_obj () in
              Ojs.set_prop_ascii x3637 "raw"
                (union2_to_js
                   (fun (x3638 : string ArrayLike.t) ->
                      ArrayLike.t_to_js Ojs.string_to_js x3638)
                   (fun (x3640 : string list) ->
                      Ojs.list_to_js Ojs.string_to_js x3640) x3636);
              t_of_js x3637
      end
    module AnonymousInterface22 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3643 : Ojs.t) -> x3643
        and t_to_js : t -> Ojs.t = fun (x3642 : Ojs.t) -> x3642
      end
    module AnonymousInterface21 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3645 : Ojs.t) -> x3645
        and t_to_js : t -> Ojs.t = fun (x3644 : Ojs.t) -> x3644
      end
    module AnonymousInterface20 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3647 : Ojs.t) -> x3647
        and t_to_js : t -> Ojs.t = fun (x3646 : Ojs.t) -> x3646
      end
    module AnonymousInterface19 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3649 : Ojs.t) -> x3649
        and t_to_js : t -> Ojs.t = fun (x3648 : Ojs.t) -> x3648
      end
    module AnonymousInterface18 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3651 : Ojs.t) -> x3651
        and t_to_js : t -> Ojs.t = fun (x3650 : Ojs.t) -> x3650
      end
    type t =
      [ `String  | string ArrayLike.tags_1 | string IterableIterator.tags_1]
        intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3653 : Ojs.t) -> t_of_js x3653
    and t_0_to_js : t_0 -> Ojs.t = fun (x3652 : t) -> t_to_js x3652
    type tags =
      [ `String  | string ArrayLike.tags_1 | string IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `String ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3656 : Ojs.t) -> intf_of_js __tags_of_js x3656
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3654 : __tags intf) -> intf_to_js __tags_to_js x3654
    let (at : 'tags this -> index:float -> string option) =
      fun (x3659 : 'tags this) ->
        fun ~index:(x3658 : float) ->
          Ojs.option_of_js Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3659) "at"
               [|(Ojs.float_to_js x3658)|])
    let (replaceAll :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replaceValue:string -> string)
      =
      fun (x3666 : 'tags this) ->
        fun ~searchValue:(x3662 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replaceValue:(x3665 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3666) "replaceAll"
                 [|((match x3662 with
                     | `U1 x3663 -> Ojs.string_to_js x3663
                     | `U2 x3664 -> RegExp.t_to_js x3664));(Ojs.string_to_js
                                                              x3665)|])
    let (replaceAll' :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x3674 : 'tags this) ->
        fun ~searchValue:(x3668 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replacer:(x3671 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3674) "replaceAll"
                 [|((match x3668 with
                     | `U1 x3669 -> Ojs.string_to_js x3669
                     | `U2 x3670 -> RegExp.t_to_js x3670));(Ojs.fun_to_js_args
                                                              (fun
                                                                 (x3672 : _)
                                                                 ->
                                                                 Ojs.string_to_js
                                                                   (x3671
                                                                    ~substring:(
                                                                    Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x3672 0))
                                                                    ~args:(
                                                                    Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x3672 1))))|])
    let (replaceAll'' :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replaceValue:string -> string)
      =
      fun (x3680 : 'tags this) ->
        fun ~searchValue:(x3676 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replaceValue:(x3679 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3680) "replaceAll"
                 [|((match x3676 with
                     | `U1 x3677 -> Ojs.string_to_js x3677
                     | `U2 x3678 -> RegExp.t_to_js x3678));(Ojs.string_to_js
                                                              x3679)|])
    let (replaceAll''' :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x3688 : 'tags this) ->
        fun ~searchValue:(x3682 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replacer:(x3685 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3688) "replaceAll"
                 [|((match x3682 with
                     | `U1 x3683 -> Ojs.string_to_js x3683
                     | `U2 x3684 -> RegExp.t_to_js x3684));(Ojs.fun_to_js_args
                                                              (fun
                                                                 (x3686 : _)
                                                                 ->
                                                                 Ojs.string_to_js
                                                                   (x3685
                                                                    ~substring:(
                                                                    Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x3686 0))
                                                                    ~args:(
                                                                    Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x3686 1))))|])
    let (matchAll :
      'tags this -> regexp:RegExp.t -> RegExpMatchArray.t IterableIterator.t)
      =
      fun (x3691 : 'tags this) ->
        fun ~regexp:(x3690 : RegExp.t) ->
          IterableIterator.t_of_js RegExpMatchArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x3691) "matchAll"
               [|(RegExp.t_to_js x3690)|])
    let (trimEnd : 'tags this -> string) =
      fun (x3694 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3694) "trimEnd" [||])
    let (trimStart : 'tags this -> string) =
      fun (x3696 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3696) "trimStart" [||])
    let (trimLeft : 'tags this -> string) =
      fun (x3698 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3698) "trimLeft" [||])
    let (trimRight : 'tags this -> string) =
      fun (x3700 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3700) "trimRight" [||])
    let (padStart :
      'tags this -> maxLength:float -> ?fillString:string -> unit -> string)
      =
      fun (x3706 : 'tags this) ->
        fun ~maxLength:(x3702 : float) ->
          fun ?fillString:(x3703 : string option) ->
            fun () ->
              Ojs.string_of_js
                (let x3708 = this_to_js Obj.magic x3706 in
                 Ojs.call (Ojs.get_prop_ascii x3708 "padStart") "apply"
                   [|x3708;((let x3704 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3704 "push"
                                  [|(Ojs.float_to_js x3702)|]);
                             (match x3703 with
                              | Some x3705 ->
                                  ignore
                                    (Ojs.call x3704 "push"
                                       [|(Ojs.string_to_js x3705)|])
                              | None -> ());
                             x3704))|])
    let (padEnd :
      'tags this -> maxLength:float -> ?fillString:string -> unit -> string)
      =
      fun (x3713 : 'tags this) ->
        fun ~maxLength:(x3709 : float) ->
          fun ?fillString:(x3710 : string option) ->
            fun () ->
              Ojs.string_of_js
                (let x3715 = this_to_js Obj.magic x3713 in
                 Ojs.call (Ojs.get_prop_ascii x3715 "padEnd") "apply"
                   [|x3715;((let x3711 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3711 "push"
                                  [|(Ojs.float_to_js x3709)|]);
                             (match x3710 with
                              | Some x3712 ->
                                  ignore
                                    (Ojs.call x3711 "push"
                                       [|(Ojs.string_to_js x3712)|])
                              | None -> ());
                             x3711))|])
    let (match_ :
      'tags this ->
        matcher:AnonymousInterface18.t -> RegExpMatchArray.t option)
      =
      fun (x3717 : 'tags this) ->
        fun ~matcher:(x3716 : AnonymousInterface18.t) ->
          Ojs.option_of_js RegExpMatchArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x3717) "match"
               [|(AnonymousInterface18.t_to_js x3716)|])
    let (replace :
      'tags this ->
        searchValue:AnonymousInterface19.t -> replaceValue:string -> string)
      =
      fun (x3722 : 'tags this) ->
        fun ~searchValue:(x3720 : AnonymousInterface19.t) ->
          fun ~replaceValue:(x3721 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3722) "replace"
                 [|(AnonymousInterface19.t_to_js x3720);(Ojs.string_to_js
                                                           x3721)|])
    let (replace' :
      'tags this ->
        searchValue:AnonymousInterface20.t ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x3728 : 'tags this) ->
        fun ~searchValue:(x3724 : AnonymousInterface20.t) ->
          fun ~replacer:(x3725 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3728) "replace"
                 [|(AnonymousInterface20.t_to_js x3724);(Ojs.fun_to_js_args
                                                           (fun (x3726 : _)
                                                              ->
                                                              Ojs.string_to_js
                                                                (x3725
                                                                   ~substring:(
                                                                   Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x3726 0))
                                                                   ~args:(
                                                                   Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x3726 1))))|])
    let (search : 'tags this -> searcher:AnonymousInterface21.t -> float) =
      fun (x3731 : 'tags this) ->
        fun ~searcher:(x3730 : AnonymousInterface21.t) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3731) "search"
               [|(AnonymousInterface21.t_to_js x3730)|])
    let (split :
      'tags this ->
        splitter:AnonymousInterface22.t ->
          ?limit:float -> unit -> string list)
      =
      fun (x3737 : 'tags this) ->
        fun ~splitter:(x3733 : AnonymousInterface22.t) ->
          fun ?limit:(x3734 : float option) ->
            fun () ->
              Ojs.list_of_js Ojs.string_of_js
                (let x3739 = this_to_js Obj.magic x3737 in
                 Ojs.call (Ojs.get_prop_ascii x3739 "split") "apply"
                   [|x3739;((let x3735 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3735 "push"
                                  [|(AnonymousInterface22.t_to_js x3733)|]);
                             (match x3734 with
                              | Some x3736 ->
                                  ignore
                                    (Ojs.call x3735 "push"
                                       [|(Ojs.float_to_js x3736)|])
                              | None -> ());
                             x3735))|])
    let (codePointAt : 'tags this -> pos:float -> float option) =
      fun (x3742 : 'tags this) ->
        fun ~pos:(x3741 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3742) "codePointAt"
               [|(Ojs.float_to_js x3741)|])
    let (includes :
      'tags this -> searchString:string -> ?position:float -> unit -> bool) =
      fun (x3749 : 'tags this) ->
        fun ~searchString:(x3745 : string) ->
          fun ?position:(x3746 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3751 = this_to_js Obj.magic x3749 in
                 Ojs.call (Ojs.get_prop_ascii x3751 "includes") "apply"
                   [|x3751;((let x3747 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3747 "push"
                                  [|(Ojs.string_to_js x3745)|]);
                             (match x3746 with
                              | Some x3748 ->
                                  ignore
                                    (Ojs.call x3747 "push"
                                       [|(Ojs.float_to_js x3748)|])
                              | None -> ());
                             x3747))|])
    let (endsWith :
      'tags this -> searchString:string -> ?endPosition:float -> unit -> bool)
      =
      fun (x3756 : 'tags this) ->
        fun ~searchString:(x3752 : string) ->
          fun ?endPosition:(x3753 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3758 = this_to_js Obj.magic x3756 in
                 Ojs.call (Ojs.get_prop_ascii x3758 "endsWith") "apply"
                   [|x3758;((let x3754 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3754 "push"
                                  [|(Ojs.string_to_js x3752)|]);
                             (match x3753 with
                              | Some x3755 ->
                                  ignore
                                    (Ojs.call x3754 "push"
                                       [|(Ojs.float_to_js x3755)|])
                              | None -> ());
                             x3754))|])
    let (normalize :
      'tags this ->
        form:[ `U1 of [ `L_s11_NFC ]  | `U2 of [ `L_s12_NFD ] 
             | `U3 of [ `L_s13_NFKC ]  | `U4 of [ `L_s14_NFKD ] ]
          -> string)
      =
      fun (x3764 : 'tags this) ->
        fun
          ~form:(x3759 :
                  [ `U1 of [ `L_s11_NFC ]  | `U2 of [ `L_s12_NFD ] 
                  | `U3 of [ `L_s13_NFKC ]  | `U4 of [ `L_s14_NFKD ] ])
          ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3764) "normalize"
               [|((match x3759 with
                   | `U1 x3760 ->
                       (match x3760 with
                        | `L_s11_NFC -> Ojs.string_to_js "NFC")
                   | `U2 x3761 ->
                       (match x3761 with
                        | `L_s12_NFD -> Ojs.string_to_js "NFD")
                   | `U3 x3762 ->
                       (match x3762 with
                        | `L_s13_NFKC -> Ojs.string_to_js "NFKC")
                   | `U4 x3763 ->
                       (match x3763 with
                        | `L_s14_NFKD -> Ojs.string_to_js "NFKD")))|])
    let (normalize' : 'tags this -> ?form:string -> unit -> string) =
      fun (x3769 : 'tags this) ->
        fun ?form:(x3766 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x3771 = this_to_js Obj.magic x3769 in
               Ojs.call (Ojs.get_prop_ascii x3771 "normalize") "apply"
                 [|x3771;((let x3767 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3766 with
                            | Some x3768 ->
                                ignore
                                  (Ojs.call x3767 "push"
                                     [|(Ojs.string_to_js x3768)|])
                            | None -> ());
                           x3767))|])
    let (repeat : 'tags this -> count:float -> string) =
      fun (x3773 : 'tags this) ->
        fun ~count:(x3772 : float) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3773) "repeat"
               [|(Ojs.float_to_js x3772)|])
    let (startsWith :
      'tags this -> searchString:string -> ?position:float -> unit -> bool) =
      fun (x3779 : 'tags this) ->
        fun ~searchString:(x3775 : string) ->
          fun ?position:(x3776 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3781 = this_to_js Obj.magic x3779 in
                 Ojs.call (Ojs.get_prop_ascii x3781 "startsWith") "apply"
                   [|x3781;((let x3777 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3777 "push"
                                  [|(Ojs.string_to_js x3775)|]);
                             (match x3776 with
                              | Some x3778 ->
                                  ignore
                                    (Ojs.call x3777 "push"
                                       [|(Ojs.float_to_js x3778)|])
                              | None -> ());
                             x3777))|])
    let (anchor : 'tags this -> name:string -> string) =
      fun (x3783 : 'tags this) ->
        fun ~name:(x3782 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3783) "anchor"
               [|(Ojs.string_to_js x3782)|])
    let (big : 'tags this -> string) =
      fun (x3785 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3785) "big" [||])
    let (blink : 'tags this -> string) =
      fun (x3787 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3787) "blink" [||])
    let (bold : 'tags this -> string) =
      fun (x3789 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3789) "bold" [||])
    let (fixed : 'tags this -> string) =
      fun (x3791 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3791) "fixed" [||])
    let (fontcolor : 'tags this -> color:string -> string) =
      fun (x3794 : 'tags this) ->
        fun ~color:(x3793 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3794) "fontcolor"
               [|(Ojs.string_to_js x3793)|])
    let (fontsize : 'tags this -> size:float -> string) =
      fun (x3797 : 'tags this) ->
        fun ~size:(x3796 : float) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3797) "fontsize"
               [|(Ojs.float_to_js x3796)|])
    let (fontsize' : 'tags this -> size:string -> string) =
      fun (x3800 : 'tags this) ->
        fun ~size:(x3799 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3800) "fontsize"
               [|(Ojs.string_to_js x3799)|])
    let (italics : 'tags this -> string) =
      fun (x3802 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3802) "italics" [||])
    let (link : 'tags this -> url:string -> string) =
      fun (x3805 : 'tags this) ->
        fun ~url:(x3804 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3805) "link"
               [|(Ojs.string_to_js x3804)|])
    let (small : 'tags this -> string) =
      fun (x3807 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3807) "small" [||])
    let (strike : 'tags this -> string) =
      fun (x3809 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3809) "strike" [||])
    let (sub : 'tags this -> string) =
      fun (x3811 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3811) "sub" [||])
    let (sup : 'tags this -> string) =
      fun (x3813 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3813) "sup" [||])
    let (localeCompare :
      'tags this ->
        that:string ->
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:Intl.CollatorOptions.t -> unit -> float)
      =
      fun (x3824 : 'tags this) ->
        fun ~that:(x3815 : string) ->
          fun
            ?locales:(x3816 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x3817 : Intl.CollatorOptions.t option) ->
              fun () ->
                Ojs.float_of_js
                  (let x3826 = this_to_js Obj.magic x3824 in
                   Ojs.call (Ojs.get_prop_ascii x3826 "localeCompare")
                     "apply"
                     [|x3826;((let x3818 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3818 "push"
                                    [|(Ojs.string_to_js x3815)|]);
                               (match x3816 with
                                | Some x3820 ->
                                    ignore
                                      (Ojs.call x3818 "push"
                                         [|((match x3820 with
                                             | `U1 x3821 ->
                                                 Ojs.string_to_js x3821
                                             | `U2 x3822 ->
                                                 Ojs.list_to_js
                                                   Ojs.string_to_js x3822))|])
                                | None -> ());
                               (match x3817 with
                                | Some x3819 ->
                                    ignore
                                      (Ojs.call x3818 "push"
                                         [|(Intl.CollatorOptions.t_to_js
                                              x3819)|])
                                | None -> ());
                               x3818))|])
    let (toString : 'tags this -> string) =
      fun (x3827 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3827) "toString" [||])
    let (charAt : 'tags this -> pos:float -> string) =
      fun (x3830 : 'tags this) ->
        fun ~pos:(x3829 : float) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3830) "charAt"
               [|(Ojs.float_to_js x3829)|])
    let (charCodeAt : 'tags this -> index:float -> float) =
      fun (x3833 : 'tags this) ->
        fun ~index:(x3832 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3833) "charCodeAt"
               [|(Ojs.float_to_js x3832)|])
    let (concat : 'tags this -> strings:string list -> string) =
      fun (x3838 : 'tags this) ->
        fun ~strings:(x3835 : string list) ->
          Ojs.string_of_js
            (let x3840 = this_to_js Obj.magic x3838 in
             Ojs.call (Ojs.get_prop_ascii x3840 "concat") "apply"
               [|x3840;((let x3836 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x3837 : string) ->
                              ignore
                                (Ojs.call x3836 "push"
                                   [|(Ojs.string_to_js x3837)|])) x3835;
                         x3836))|])
    let (indexOf :
      'tags this -> searchString:string -> ?position:float -> unit -> float)
      =
      fun (x3845 : 'tags this) ->
        fun ~searchString:(x3841 : string) ->
          fun ?position:(x3842 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3847 = this_to_js Obj.magic x3845 in
                 Ojs.call (Ojs.get_prop_ascii x3847 "indexOf") "apply"
                   [|x3847;((let x3843 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3843 "push"
                                  [|(Ojs.string_to_js x3841)|]);
                             (match x3842 with
                              | Some x3844 ->
                                  ignore
                                    (Ojs.call x3843 "push"
                                       [|(Ojs.float_to_js x3844)|])
                              | None -> ());
                             x3843))|])
    let (lastIndexOf :
      'tags this -> searchString:string -> ?position:float -> unit -> float)
      =
      fun (x3852 : 'tags this) ->
        fun ~searchString:(x3848 : string) ->
          fun ?position:(x3849 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3854 = this_to_js Obj.magic x3852 in
                 Ojs.call (Ojs.get_prop_ascii x3854 "lastIndexOf") "apply"
                   [|x3854;((let x3850 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3850 "push"
                                  [|(Ojs.string_to_js x3848)|]);
                             (match x3849 with
                              | Some x3851 ->
                                  ignore
                                    (Ojs.call x3850 "push"
                                       [|(Ojs.float_to_js x3851)|])
                              | None -> ());
                             x3850))|])
    let (localeCompare' : 'tags this -> that:string -> float) =
      fun (x3856 : 'tags this) ->
        fun ~that:(x3855 : string) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3856) "localeCompare"
               [|(Ojs.string_to_js x3855)|])
    let (match_' :
      'tags this ->
        regexp:[ `U1 of string  | `U2 of RegExp.t ] ->
          RegExpMatchArray.t option)
      =
      fun (x3861 : 'tags this) ->
        fun ~regexp:(x3858 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          Ojs.option_of_js RegExpMatchArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x3861) "match"
               [|((match x3858 with
                   | `U1 x3859 -> Ojs.string_to_js x3859
                   | `U2 x3860 -> RegExp.t_to_js x3860))|])
    let (replace'' :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replaceValue:string -> string)
      =
      fun (x3868 : 'tags this) ->
        fun ~searchValue:(x3864 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replaceValue:(x3867 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3868) "replace"
                 [|((match x3864 with
                     | `U1 x3865 -> Ojs.string_to_js x3865
                     | `U2 x3866 -> RegExp.t_to_js x3866));(Ojs.string_to_js
                                                              x3867)|])
    let (replace''' :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x3876 : 'tags this) ->
        fun ~searchValue:(x3870 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replacer:(x3873 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3876) "replace"
                 [|((match x3870 with
                     | `U1 x3871 -> Ojs.string_to_js x3871
                     | `U2 x3872 -> RegExp.t_to_js x3872));(Ojs.fun_to_js_args
                                                              (fun
                                                                 (x3874 : _)
                                                                 ->
                                                                 Ojs.string_to_js
                                                                   (x3873
                                                                    ~substring:(
                                                                    Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x3874 0))
                                                                    ~args:(
                                                                    Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x3874 1))))|])
    let (search' :
      'tags this -> regexp:[ `U1 of string  | `U2 of RegExp.t ] -> float) =
      fun (x3881 : 'tags this) ->
        fun ~regexp:(x3878 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3881) "search"
               [|((match x3878 with
                   | `U1 x3879 -> Ojs.string_to_js x3879
                   | `U2 x3880 -> RegExp.t_to_js x3880))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> string)
      =
      fun (x3888 : 'tags this) ->
        fun ?start:(x3883 : float option) ->
          fun ?end_:(x3884 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x3890 = this_to_js Obj.magic x3888 in
                 Ojs.call (Ojs.get_prop_ascii x3890 "slice") "apply"
                   [|x3890;((let x3885 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3883 with
                              | Some x3887 ->
                                  ignore
                                    (Ojs.call x3885 "push"
                                       [|(Ojs.float_to_js x3887)|])
                              | None -> ());
                             (match x3884 with
                              | Some x3886 ->
                                  ignore
                                    (Ojs.call x3885 "push"
                                       [|(Ojs.float_to_js x3886)|])
                              | None -> ());
                             x3885))|])
    let (split' :
      'tags this ->
        separator:[ `U1 of string  | `U2 of RegExp.t ] ->
          ?limit:float -> unit -> string list)
      =
      fun (x3897 : 'tags this) ->
        fun ~separator:(x3891 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ?limit:(x3892 : float option) ->
            fun () ->
              Ojs.list_of_js Ojs.string_of_js
                (let x3899 = this_to_js Obj.magic x3897 in
                 Ojs.call (Ojs.get_prop_ascii x3899 "split") "apply"
                   [|x3899;((let x3893 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3893 "push"
                                  [|((match x3891 with
                                      | `U1 x3895 -> Ojs.string_to_js x3895
                                      | `U2 x3896 -> RegExp.t_to_js x3896))|]);
                             (match x3892 with
                              | Some x3894 ->
                                  ignore
                                    (Ojs.call x3893 "push"
                                       [|(Ojs.float_to_js x3894)|])
                              | None -> ());
                             x3893))|])
    let (substring :
      'tags this -> start:float -> ?end_:float -> unit -> string) =
      fun (x3905 : 'tags this) ->
        fun ~start:(x3901 : float) ->
          fun ?end_:(x3902 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x3907 = this_to_js Obj.magic x3905 in
                 Ojs.call (Ojs.get_prop_ascii x3907 "substring") "apply"
                   [|x3907;((let x3903 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3903 "push"
                                  [|(Ojs.float_to_js x3901)|]);
                             (match x3902 with
                              | Some x3904 ->
                                  ignore
                                    (Ojs.call x3903 "push"
                                       [|(Ojs.float_to_js x3904)|])
                              | None -> ());
                             x3903))|])
    let (toLowerCase : 'tags this -> string) =
      fun (x3908 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3908) "toLowerCase" [||])
    let (toLocaleLowerCase :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] -> unit -> string)
      =
      fun (x3916 : 'tags this) ->
        fun ?locales:(x3910 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun () ->
            Ojs.string_of_js
              (let x3918 = this_to_js Obj.magic x3916 in
               Ojs.call (Ojs.get_prop_ascii x3918 "toLocaleLowerCase")
                 "apply"
                 [|x3918;((let x3911 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3910 with
                            | Some x3912 ->
                                ignore
                                  (Ojs.call x3911 "push"
                                     [|((match x3912 with
                                         | `U1 x3913 ->
                                             Ojs.string_to_js x3913
                                         | `U2 x3914 ->
                                             Ojs.list_to_js Ojs.string_to_js
                                               x3914))|])
                            | None -> ());
                           x3911))|])
    let (toUpperCase : 'tags this -> string) =
      fun (x3919 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3919) "toUpperCase" [||])
    let (toLocaleUpperCase :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] -> unit -> string)
      =
      fun (x3927 : 'tags this) ->
        fun ?locales:(x3921 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun () ->
            Ojs.string_of_js
              (let x3929 = this_to_js Obj.magic x3927 in
               Ojs.call (Ojs.get_prop_ascii x3929 "toLocaleUpperCase")
                 "apply"
                 [|x3929;((let x3922 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3921 with
                            | Some x3923 ->
                                ignore
                                  (Ojs.call x3922 "push"
                                     [|((match x3923 with
                                         | `U1 x3924 ->
                                             Ojs.string_to_js x3924
                                         | `U2 x3925 ->
                                             Ojs.list_to_js Ojs.string_to_js
                                               x3925))|])
                            | None -> ());
                           x3922))|])
    let (trim : 'tags this -> string) =
      fun (x3930 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3930) "trim" [||])
    let (get_length : 'tags this -> float) =
      fun (x3932 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3932) "length")
    let (substr :
      'tags this -> from:float -> ?length:float -> unit -> string) =
      fun (x3938 : 'tags this) ->
        fun ~from:(x3934 : float) ->
          fun ?length:(x3935 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x3940 = this_to_js Obj.magic x3938 in
                 Ojs.call (Ojs.get_prop_ascii x3940 "substr") "apply"
                   [|x3940;((let x3936 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3936 "push"
                                  [|(Ojs.float_to_js x3934)|]);
                             (match x3935 with
                              | Some x3937 ->
                                  ignore
                                    (Ojs.call x3936 "push"
                                       [|(Ojs.float_to_js x3937)|])
                              | None -> ());
                             x3936))|])
    let (valueOf : 'tags this -> string) =
      fun (x3941 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3941) "valueOf" [||])
    let (get : 'tags this -> float -> string) =
      fun (x3943 : 'tags this) ->
        fun (x3945 : float) ->
          Ojs.string_of_js
            (Ojs.get_prop (this_to_js Obj.magic x3943)
               (Ojs.float_to_js x3945))
    let (fromCodePoint : float list -> string) =
      fun (x3946 : float list) ->
        Ojs.string_of_js
          (let x3949 = Ojs.get_prop_ascii Ojs.global "String" in
           Ojs.call (Ojs.get_prop_ascii x3949 "fromCodePoint") "apply"
             [|x3949;((let x3947 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x3948 : float) ->
                            ignore
                              (Ojs.call x3947 "push"
                                 [|(Ojs.float_to_js x3948)|])) x3946;
                       x3947))|])
    let (raw :
      template:AnonymousInterface6.t -> substitutions:any list -> string) =
      fun ~template:(x3950 : AnonymousInterface6.t) ->
        fun ~substitutions:(x3951 : any list) ->
          Ojs.string_of_js
            (let x3954 = Ojs.get_prop_ascii Ojs.global "String" in
             Ojs.call (Ojs.get_prop_ascii x3954 "raw") "apply"
               [|x3954;((let x3952 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         ignore
                           (Ojs.call x3952 "push"
                              [|(AnonymousInterface6.t_to_js x3950)|]);
                         List.iter
                           (fun (x3953 : any) ->
                              ignore
                                (Ojs.call x3952 "push" [|(any_to_js x3953)|]))
                           x3951;
                         x3952))|])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x3955 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "String")
               (let x3956 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x3955 with
                 | Some x3957 ->
                     ignore (Ojs.call x3956 "push" [|(any_to_js x3957)|])
                 | None -> ());
                x3956))
    let (invoke : ?value:any -> unit -> string) =
      fun ?value:(x3958 : any option) ->
        fun () ->
          Ojs.string_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "String") "apply"
               [|Ojs.null;((let x3959 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x3958 with
                             | Some x3960 ->
                                 ignore
                                   (Ojs.call x3959 "push"
                                      [|(any_to_js x3960)|])
                             | None -> ());
                            x3959))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "String")
             "prototype")
    let (fromCharCode : float list -> string) =
      fun (x3961 : float list) ->
        Ojs.string_of_js
          (let x3964 = Ojs.get_prop_ascii Ojs.global "String" in
           Ojs.call (Ojs.get_prop_ascii x3964 "fromCharCode") "apply"
             [|x3964;((let x3962 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x3963 : float) ->
                            ignore
                              (Ojs.call x3962 "push"
                                 [|(Ojs.float_to_js x3963)|])) x3961;
                       x3962))|])
    let cast_from = Obj.magic
    let (of_ml : string -> t) =
      fun (x3965 : string) -> t_of_js (Ojs.string_to_js x3965)
    let (to_ml : t -> string) =
      fun (x3966 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x3966) "valueOf" [||])
  end
module Set =
  struct
    type 'T t = [ `Set of 'T  | 'T IterableIterator.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3969 : Ojs.t) -> t_of_js __T_of_js x3969
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x3967 : __T t) -> t_to_js __T_to_js x3967
    type 'T tags = [ `Set of 'T  | 'T IterableIterator.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `Set of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x3973 : Ojs.t) -> intf_of_js __tags_of_js x3973
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x3971 : __tags intf) -> intf_to_js __tags_to_js x3971
    let (entries : ('tags, 'T) this -> ('T * 'T) IterableIterator.t) =
      fun (x3975 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x3978 : Ojs.t) ->
             let x3979 = x3978 in
             ((Obj.magic (Ojs.array_get x3979 0)),
               (Obj.magic (Ojs.array_get x3979 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x3975) "entries" [||])
    let (keys : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x3980 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x3980) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x3984 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x3984) "values" [||])
    let (add : ('tags, 'T) this -> value:'T -> ('tags, 'T) this) =
      fun (x3989 : ('tags, 'T) this) ->
        fun ~value:(x3988 : 'T) ->
          this_of_js Obj.magic Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x3989) "add"
               [|(Obj.magic x3988)|])
    let (clear : ('tags, 'T) this -> unit) =
      fun (x3994 : ('tags, 'T) this) ->
        ignore (Ojs.call (this_to_js Obj.magic Obj.magic x3994) "clear" [||])
    let (delete : ('tags, 'T) this -> value:'T -> bool) =
      fun (x3998 : ('tags, 'T) this) ->
        fun ~value:(x3997 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x3998) "delete"
               [|(Obj.magic x3997)|])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> value2:'T -> set_:'T t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x4009 : ('tags, 'T) this) ->
        fun ~callbackfn:(x4001 : value:'T -> value2:'T -> set_:'T t -> unit)
          ->
          fun ?thisArg:(x4002 : any option) ->
            fun () ->
              ignore
                (let x4012 = this_to_js Obj.magic Obj.magic x4009 in
                 Ojs.call (Ojs.get_prop_ascii x4012 "forEach") "apply"
                   [|x4012;((let x4003 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4003 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4005 : Ojs.t) ->
                                          fun (x4006 : Ojs.t) ->
                                            fun (x4007 : Ojs.t) ->
                                              x4001 ~value:(Obj.magic x4005)
                                                ~value2:(Obj.magic x4006)
                                                ~set_:(t_of_js Obj.magic
                                                         x4007)))|]);
                             (match x4002 with
                              | Some x4004 ->
                                  ignore
                                    (Ojs.call x4003 "push"
                                       [|(any_to_js x4004)|])
                              | None -> ());
                             x4003))|])
    let (has : ('tags, 'T) this -> value:'T -> bool) =
      fun (x4014 : ('tags, 'T) this) ->
        fun ~value:(x4013 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4014) "has"
               [|(Obj.magic x4013)|])
    let (get_size : ('tags, 'T) this -> float) =
      fun (x4017 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4017) "size")
    let (create : ?iterable:'T Iterable.t option -> unit -> 'T t) =
      fun ?iterable:(x4020 : 'T Iterable.t option option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x4021 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4020 with
                 | Some x4022 ->
                     ignore
                       (Ojs.call x4021 "push"
                          [|(Ojs.option_to_js
                               (fun (x4023 : 'T Iterable.t) ->
                                  Iterable.t_to_js Obj.magic x4023) x4022)|])
                 | None -> ());
                x4021))
    let (create' : ?values:'T list option -> unit -> 'T t) =
      fun ?values:(x4026 : 'T list option option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x4027 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4026 with
                 | Some x4028 ->
                     ignore
                       (Ojs.call x4027 "push"
                          [|(Ojs.option_to_js
                               (fun (x4029 : 'T list) ->
                                  Ojs.list_to_js Obj.magic x4029) x4028)|])
                 | None -> ());
                x4027))
    let (prototype : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Set")
             "prototype")
    let cast_from = Obj.magic
  end
module ReturnType =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4034 : Ojs.t) -> any_of_js x4034
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x4033 : any) -> any_to_js x4033
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4037 : Ojs.t) -> t_of_js __T_of_js x4037
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4035 : __T t) -> t_to_js __T_to_js x4035
  end
module Required =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4040 : Ojs.t) -> any_of_js x4040
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x4039 : any) -> any_to_js x4039
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4043 : Ojs.t) -> t_of_js __T_of_js x4043
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4041 : __T t) -> t_to_js __T_to_js x4041
  end
module PropertyKey =
  struct
    type t =
      [ `Number of float  | `String of string  | `Symbol of symbol ]
        Primitive.t
    let rec t_of_js : Ojs.t -> t =
      fun (x4050 : Ojs.t) ->
        Primitive.t_of_js
          (fun (x4051 : Ojs.t) ->
             let x4052 = x4051 in
             match Ojs.string_of_js (Ojs.get_prop_ascii x4052 "dummy") with
             | "Number" -> `Number (Ojs.float_of_js x4052)
             | "String" -> `String (Ojs.string_of_js x4052)
             | "Symbol" -> `Symbol (symbol_of_js x4052)
             | _ -> assert false) x4050
    and t_to_js : t -> Ojs.t =
      fun
        (x4045 :
          [ `Number of float  | `String of string  | `Symbol of symbol ]
            Primitive.t)
        ->
        Primitive.t_to_js
          (fun
             (x4046 :
               [ `Number of float  | `String of string  | `Symbol of symbol ])
             ->
             match x4046 with
             | `Number x4047 -> Ojs.float_to_js x4047
             | `String x4048 -> Ojs.string_to_js x4048
             | `Symbol x4049 -> symbol_to_js x4049) x4045
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4054 : Ojs.t) -> t_of_js x4054
    and t_0_to_js : t_0 -> Ojs.t = fun (x4053 : t) -> t_to_js x4053
  end
module PropertyDescriptor =
  struct
    type t = [ `PropertyDescriptor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4056 : Ojs.t) -> t_of_js x4056
    and t_0_to_js : t_0 -> Ojs.t = fun (x4055 : t) -> t_to_js x4055
    type tags = [ `PropertyDescriptor ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `PropertyDescriptor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4059 : Ojs.t) -> intf_of_js __tags_of_js x4059
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4057 : __tags intf) -> intf_to_js __tags_to_js x4057
    let (get_configurable : 'tags this -> bool) =
      fun (x4061 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4061) "configurable")
    let (set_configurable : 'tags this -> bool -> unit) =
      fun (x4063 : 'tags this) ->
        fun (x4064 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4063) "configurable"
            (Ojs.bool_to_js x4064)
    let (get_enumerable : 'tags this -> bool) =
      fun (x4066 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4066) "enumerable")
    let (set_enumerable : 'tags this -> bool -> unit) =
      fun (x4068 : 'tags this) ->
        fun (x4069 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4068) "enumerable"
            (Ojs.bool_to_js x4069)
    let (get_value : 'tags this -> any) =
      fun (x4071 : 'tags this) ->
        any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x4071) "value")
    let (set_value : 'tags this -> any -> unit) =
      fun (x4073 : 'tags this) ->
        fun (x4074 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4073) "value"
            (any_to_js x4074)
    let (get_writable : 'tags this -> bool) =
      fun (x4076 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4076) "writable")
    let (set_writable : 'tags this -> bool -> unit) =
      fun (x4078 : 'tags this) ->
        fun (x4079 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4078) "writable"
            (Ojs.bool_to_js x4079)
    let (get_ : 'tags this -> any) =
      fun (x4081 : 'tags this) ->
        any_of_js (Ojs.call (this_to_js Obj.magic x4081) "get" [||])
    let (set_ : 'tags this -> v:any -> unit) =
      fun (x4084 : 'tags this) ->
        fun ~v:(x4083 : any) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x4084) "set"
               [|(any_to_js x4083)|])
    let cast_from = Obj.magic
  end
module Function =
  struct
    type t = [ `Function ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4087 : Ojs.t) -> t_of_js x4087
    and t_0_to_js : t_0 -> Ojs.t = fun (x4086 : t) -> t_to_js x4086
    type tags = [ `Function ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Function ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4090 : Ojs.t) -> intf_of_js __tags_of_js x4090
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4088 : __tags intf) -> intf_to_js __tags_to_js x4088
    let (get_name : 'tags this -> string) =
      fun (x4092 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4092) "name")
    let (apply_ :
      'tags this -> this:t -> thisArg:any -> ?argArray:any -> unit -> any) =
      fun (x4099 : 'tags this) ->
        fun ~this:(x4094 : t) ->
          fun ~thisArg:(x4095 : any) ->
            fun ?argArray:(x4096 : any option) ->
              fun () ->
                any_of_js
                  (let x4101 = this_to_js Obj.magic x4099 in
                   Ojs.call (Ojs.get_prop_ascii x4101 "apply") "apply"
                     [|x4101;((let x4097 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4097 "push" [|(t_to_js x4094)|]);
                               ignore
                                 (Ojs.call x4097 "push" [|(any_to_js x4095)|]);
                               (match x4096 with
                                | Some x4098 ->
                                    ignore
                                      (Ojs.call x4097 "push"
                                         [|(any_to_js x4098)|])
                                | None -> ());
                               x4097))|])
    let (call :
      'tags this -> this:t -> thisArg:any -> argArray:any list -> any) =
      fun (x4107 : 'tags this) ->
        fun ~this:(x4102 : t) ->
          fun ~thisArg:(x4103 : any) ->
            fun ~argArray:(x4104 : any list) ->
              any_of_js
                (let x4109 = this_to_js Obj.magic x4107 in
                 Ojs.call (Ojs.get_prop_ascii x4109 "call") "apply"
                   [|x4109;((let x4105 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4105 "push" [|(t_to_js x4102)|]);
                             ignore
                               (Ojs.call x4105 "push" [|(any_to_js x4103)|]);
                             List.iter
                               (fun (x4106 : any) ->
                                  ignore
                                    (Ojs.call x4105 "push"
                                       [|(any_to_js x4106)|])) x4104;
                             x4105))|])
    let (bind :
      'tags this -> this:t -> thisArg:any -> argArray:any list -> any) =
      fun (x4115 : 'tags this) ->
        fun ~this:(x4110 : t) ->
          fun ~thisArg:(x4111 : any) ->
            fun ~argArray:(x4112 : any list) ->
              any_of_js
                (let x4117 = this_to_js Obj.magic x4115 in
                 Ojs.call (Ojs.get_prop_ascii x4117 "bind") "apply"
                   [|x4117;((let x4113 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4113 "push" [|(t_to_js x4110)|]);
                             ignore
                               (Ojs.call x4113 "push" [|(any_to_js x4111)|]);
                             List.iter
                               (fun (x4114 : any) ->
                                  ignore
                                    (Ojs.call x4113 "push"
                                       [|(any_to_js x4114)|])) x4112;
                             x4113))|])
    let (toString : 'tags this -> string) =
      fun (x4118 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4118) "toString" [||])
    let (get_prototype : 'tags this -> any) =
      fun (x4120 : 'tags this) ->
        any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4120) "prototype")
    let (set_prototype : 'tags this -> any -> unit) =
      fun (x4122 : 'tags this) ->
        fun (x4123 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4122) "prototype"
            (any_to_js x4123)
    let (get_length : 'tags this -> float) =
      fun (x4125 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4125) "length")
    let (get_arguments : 'tags this -> any) =
      fun (x4127 : 'tags this) ->
        any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4127) "arguments")
    let (set_arguments : 'tags this -> any -> unit) =
      fun (x4129 : 'tags this) ->
        fun (x4130 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4129) "arguments"
            (any_to_js x4130)
    let (get_caller : 'tags this -> t) =
      fun (x4132 : 'tags this) ->
        t_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x4132) "caller")
    let (set_caller : 'tags this -> t -> unit) =
      fun (x4134 : 'tags this) ->
        fun (x4135 : t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4134) "caller"
            (t_to_js x4135)
    let (create : string list -> t) =
      fun (x4137 : string list) ->
        t_of_js
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Function")
             (let x4138 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x4139 : string) ->
                   ignore
                     (Ojs.call x4138 "push" [|(Ojs.string_to_js x4139)|]))
                x4137;
              x4138))
    let (invoke : string list -> t) =
      fun (x4140 : string list) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Function") "apply"
             [|Ojs.null;((let x4141 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x4142 : string) ->
                               ignore
                                 (Ojs.call x4141 "push"
                                    [|(Ojs.string_to_js x4142)|])) x4140;
                          x4141))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Function")
             "prototype")
    let cast_from = Obj.magic
  end
module Reflect =
  struct
    let (apply_ :
      target:Function.t ->
        thisArgument:any -> argumentsList:any ArrayLike.t -> any)
      =
      fun ~target:(x4143 : Function.t) ->
        fun ~thisArgument:(x4144 : any) ->
          fun ~argumentsList:(x4145 : any ArrayLike.t) ->
            any_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "apply"
                 [|(Function.t_to_js x4143);(any_to_js x4144);(ArrayLike.t_to_js
                                                                 any_to_js
                                                                 x4145)|])
    let (construct :
      target:Function.t ->
        argumentsList:any ArrayLike.t -> ?newTarget:Function.t -> unit -> any)
      =
      fun ~target:(x4147 : Function.t) ->
        fun ~argumentsList:(x4148 : any ArrayLike.t) ->
          fun ?newTarget:(x4149 : Function.t option) ->
            fun () ->
              any_of_js
                (let x4153 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                 Ojs.call (Ojs.get_prop_ascii x4153 "construct") "apply"
                   [|x4153;((let x4150 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4150 "push"
                                  [|(Function.t_to_js x4147)|]);
                             ignore
                               (Ojs.call x4150 "push"
                                  [|(ArrayLike.t_to_js any_to_js x4148)|]);
                             (match x4149 with
                              | Some x4151 ->
                                  ignore
                                    (Ojs.call x4150 "push"
                                       [|(Function.t_to_js x4151)|])
                              | None -> ());
                             x4150))|])
    let (defineProperty :
      target:untyped_object ->
        propertyKey:PropertyKey.t -> attributes:PropertyDescriptor.t -> bool)
      =
      fun ~target:(x4154 : untyped_object) ->
        fun ~propertyKey:(x4155 : PropertyKey.t) ->
          fun ~attributes:(x4156 : PropertyDescriptor.t) ->
            Ojs.bool_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
                 "defineProperty"
                 [|(untyped_object_to_js x4154);(PropertyKey.t_to_js x4155);(
                   PropertyDescriptor.t_to_js x4156)|])
    let (deleteProperty :
      target:untyped_object -> propertyKey:PropertyKey.t -> bool) =
      fun ~target:(x4157 : untyped_object) ->
        fun ~propertyKey:(x4158 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
               "deleteProperty"
               [|(untyped_object_to_js x4157);(PropertyKey.t_to_js x4158)|])
    let (get_ :
      target:untyped_object ->
        propertyKey:PropertyKey.t -> ?receiver:any -> unit -> any)
      =
      fun ~target:(x4159 : untyped_object) ->
        fun ~propertyKey:(x4160 : PropertyKey.t) ->
          fun ?receiver:(x4161 : any option) ->
            fun () ->
              any_of_js
                (let x4164 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                 Ojs.call (Ojs.get_prop_ascii x4164 "get") "apply"
                   [|x4164;((let x4162 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4162 "push"
                                  [|(untyped_object_to_js x4159)|]);
                             ignore
                               (Ojs.call x4162 "push"
                                  [|(PropertyKey.t_to_js x4160)|]);
                             (match x4161 with
                              | Some x4163 ->
                                  ignore
                                    (Ojs.call x4162 "push"
                                       [|(any_to_js x4163)|])
                              | None -> ());
                             x4162))|])
    let (getOwnPropertyDescriptor :
      target:untyped_object ->
        propertyKey:PropertyKey.t -> PropertyDescriptor.t option)
      =
      fun ~target:(x4165 : untyped_object) ->
        fun ~propertyKey:(x4166 : PropertyKey.t) ->
          Ojs.option_of_js PropertyDescriptor.t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
               "getOwnPropertyDescriptor"
               [|(untyped_object_to_js x4165);(PropertyKey.t_to_js x4166)|])
    let (getPrototypeOf : untyped_object -> untyped_object option) =
      fun (x4168 : untyped_object) ->
        Ojs.option_of_js untyped_object_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
             "getPrototypeOf" [|(untyped_object_to_js x4168)|])
    let (has : target:untyped_object -> propertyKey:PropertyKey.t -> bool) =
      fun ~target:(x4170 : untyped_object) ->
        fun ~propertyKey:(x4171 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "has"
               [|(untyped_object_to_js x4170);(PropertyKey.t_to_js x4171)|])
    let (isExtensible : untyped_object -> bool) =
      fun (x4172 : untyped_object) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "isExtensible"
             [|(untyped_object_to_js x4172)|])
    let (ownKeys :
      untyped_object ->
        [ `String of string  | `Symbol of symbol ] Primitive.t list)
      =
      fun (x4173 : untyped_object) ->
        Ojs.list_of_js
          (fun (x4174 : Ojs.t) ->
             Primitive.t_of_js
               (fun (x4175 : Ojs.t) ->
                  let x4176 = x4175 in
                  match Ojs.string_of_js (Ojs.get_prop_ascii x4176 "dummy")
                  with
                  | "String" -> `String (Ojs.string_of_js x4176)
                  | "Symbol" -> `Symbol (symbol_of_js x4176)
                  | _ -> assert false) x4174)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "ownKeys"
             [|(untyped_object_to_js x4173)|])
    let (preventExtensions : untyped_object -> bool) =
      fun (x4177 : untyped_object) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
             "preventExtensions" [|(untyped_object_to_js x4177)|])
    let (set_ :
      target:untyped_object ->
        propertyKey:PropertyKey.t ->
          value:any -> ?receiver:any -> unit -> bool)
      =
      fun ~target:(x4178 : untyped_object) ->
        fun ~propertyKey:(x4179 : PropertyKey.t) ->
          fun ~value:(x4180 : any) ->
            fun ?receiver:(x4181 : any option) ->
              fun () ->
                Ojs.bool_of_js
                  (let x4184 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                   Ojs.call (Ojs.get_prop_ascii x4184 "set") "apply"
                     [|x4184;((let x4182 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4182 "push"
                                    [|(untyped_object_to_js x4178)|]);
                               ignore
                                 (Ojs.call x4182 "push"
                                    [|(PropertyKey.t_to_js x4179)|]);
                               ignore
                                 (Ojs.call x4182 "push" [|(any_to_js x4180)|]);
                               (match x4181 with
                                | Some x4183 ->
                                    ignore
                                      (Ojs.call x4182 "push"
                                         [|(any_to_js x4183)|])
                                | None -> ());
                               x4182))|])
    let (setPrototypeOf :
      target:untyped_object -> proto:untyped_object option -> bool) =
      fun ~target:(x4185 : untyped_object) ->
        fun ~proto:(x4186 : untyped_object option) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
               "setPrototypeOf"
               [|(untyped_object_to_js x4185);(Ojs.option_to_js
                                                 untyped_object_to_js x4186)|])
  end
module ReferenceError =
  struct
    type t = [ `Error  | `ReferenceError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4189 : Ojs.t) -> t_of_js x4189
    and t_0_to_js : t_0 -> Ojs.t = fun (x4188 : t) -> t_to_js x4188
    type tags = [ `Error  | `ReferenceError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ReferenceError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4192 : Ojs.t) -> intf_of_js __tags_of_js x4192
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4190 : __tags intf) -> intf_to_js __tags_to_js x4190
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x4194 : string option) ->
        fun ?options:(x4195 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "ReferenceError")
                 (let x4196 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x4194 with
                   | Some x4198 ->
                       ignore
                         (Ojs.call x4196 "push" [|(Ojs.string_to_js x4198)|])
                   | None -> ());
                  (match x4195 with
                   | Some x4197 ->
                       ignore
                         (Ojs.call x4196 "push"
                            [|(ErrorOptions.t_to_js x4197)|])
                   | None -> ());
                  x4196))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x4199 : string option) ->
        fun ?options:(x4200 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "ReferenceError")
                 "apply"
                 [|Ojs.null;((let x4201 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x4199 with
                               | Some x4203 ->
                                   ignore
                                     (Ojs.call x4201 "push"
                                        [|(Ojs.string_to_js x4203)|])
                               | None -> ());
                              (match x4200 with
                               | Some x4202 ->
                                   ignore
                                     (Ojs.call x4201 "push"
                                        [|(ErrorOptions.t_to_js x4202)|])
                               | None -> ());
                              x4201))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x4204 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "ReferenceError")
               (let x4205 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4204 with
                 | Some x4206 ->
                     ignore
                       (Ojs.call x4205 "push" [|(Ojs.string_to_js x4206)|])
                 | None -> ());
                x4205))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x4207 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "ReferenceError")
               "apply"
               [|Ojs.null;((let x4208 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x4207 with
                             | Some x4209 ->
                                 ignore
                                   (Ojs.call x4208 "push"
                                      [|(Ojs.string_to_js x4209)|])
                             | None -> ());
                            x4208))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "ReferenceError") "prototype")
    let cast_from = Obj.magic
  end
module Record =
  struct
    type ('K, 'T) t = any
    let rec t_of_js :
      'K 'T . (Ojs.t -> 'K) -> (Ojs.t -> 'T) -> Ojs.t -> ('K, 'T) t = fun
      (type __K) -> fun (type __T) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4211 : Ojs.t) -> any_of_js x4211
    and t_to_js :
      'K 'T . ('K -> Ojs.t) -> ('T -> Ojs.t) -> ('K, 'T) t -> Ojs.t = fun
      (type __K) -> fun (type __T) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4210 : any) -> any_to_js x4210
    type ('K, 'T) t_2 = ('K, 'T) t
    let rec t_2_of_js :
      'K 'T . (Ojs.t -> 'K) -> (Ojs.t -> 'T) -> Ojs.t -> ('K, 'T) t_2 = fun
      (type __K) -> fun (type __T) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4215 : Ojs.t) -> t_of_js __K_of_js __T_of_js x4215
    and t_2_to_js :
      'K 'T . ('K -> Ojs.t) -> ('T -> Ojs.t) -> ('K, 'T) t_2 -> Ojs.t = fun
      (type __K) -> fun (type __T) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4212 : (__K, __T) t) -> t_to_js __K_to_js __T_to_js x4212
  end
module ReadonlySet =
  struct
    type 'T t = [ `ReadonlySet of 'T  | 'T IterableIterator.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4220 : Ojs.t) -> t_of_js __T_of_js x4220
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4218 : __T t) -> t_to_js __T_to_js x4218
    type 'T tags = [ `ReadonlySet of 'T  | 'T IterableIterator.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ReadonlySet of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4224 : Ojs.t) -> intf_of_js __tags_of_js x4224
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4222 : __tags intf) -> intf_to_js __tags_to_js x4222
    let (entries : ('tags, 'T) this -> ('T * 'T) IterableIterator.t) =
      fun (x4226 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x4229 : Ojs.t) ->
             let x4230 = x4229 in
             ((Obj.magic (Ojs.array_get x4230 0)),
               (Obj.magic (Ojs.array_get x4230 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x4226) "entries" [||])
    let (keys : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x4231 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x4231) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x4235 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x4235) "values" [||])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> value2:'T -> set_:'T t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x4247 : ('tags, 'T) this) ->
        fun ~callbackfn:(x4239 : value:'T -> value2:'T -> set_:'T t -> unit)
          ->
          fun ?thisArg:(x4240 : any option) ->
            fun () ->
              ignore
                (let x4250 = this_to_js Obj.magic Obj.magic x4247 in
                 Ojs.call (Ojs.get_prop_ascii x4250 "forEach") "apply"
                   [|x4250;((let x4241 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4241 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4243 : Ojs.t) ->
                                          fun (x4244 : Ojs.t) ->
                                            fun (x4245 : Ojs.t) ->
                                              x4239 ~value:(Obj.magic x4243)
                                                ~value2:(Obj.magic x4244)
                                                ~set_:(t_of_js Obj.magic
                                                         x4245)))|]);
                             (match x4240 with
                              | Some x4242 ->
                                  ignore
                                    (Ojs.call x4241 "push"
                                       [|(any_to_js x4242)|])
                              | None -> ());
                             x4241))|])
    let (has : ('tags, 'T) this -> value:'T -> bool) =
      fun (x4252 : ('tags, 'T) this) ->
        fun ~value:(x4251 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4252) "has"
               [|(Obj.magic x4251)|])
    let (get_size : ('tags, 'T) this -> float) =
      fun (x4255 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4255) "size")
    let cast_from = Obj.magic
  end
module ReadonlyMap =
  struct
    type ('K, 'V) t =
      [ `ReadonlyMap of ('K * 'V)  | ('K * 'V) IterableIterator.tags_1] intf
    let rec t_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t =
      fun _K -> fun _V -> Obj.magic
    and t_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t -> Ojs.t =
      fun _K -> fun _V -> Obj.magic
    type ('K, 'V) t_2 = ('K, 'V) t
    let rec t_2_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t_2 = fun
      (type __K) -> fun (type __V) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__V_of_js : Ojs.t -> __V) ->
          fun (x4261 : Ojs.t) -> t_of_js __K_of_js __V_of_js x4261
    and t_2_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t_2 -> Ojs.t = fun
      (type __K) -> fun (type __V) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__V_to_js : __V -> Ojs.t) ->
          fun (x4258 : (__K, __V) t) -> t_to_js __K_to_js __V_to_js x4258
    type ('K, 'V) tags =
      [ `ReadonlyMap of ('K * 'V)  | ('K * 'V) IterableIterator.tags_1]
    type ('K, 'V) tags_2 = ('K, 'V) tags
    type ('tags, 'K, 'V) this =
      'tags intf constraint 'tags = [> `ReadonlyMap of ('K * 'V) ]
    let rec this_of_js :
      'tags 'K 'V .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('tags, 'K, 'V) this
      = fun (type __tags) -> fun (type __K) -> fun (type __V) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (__V_of_js : Ojs.t -> __V) ->
            fun (x4266 : Ojs.t) -> intf_of_js __tags_of_js x4266
    and this_to_js :
      'tags 'K 'V .
        ('tags -> Ojs.t) ->
          ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('tags, 'K, 'V) this -> Ojs.t
      = fun (type __tags) -> fun (type __K) -> fun (type __V) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (__V_to_js : __V -> Ojs.t) ->
            fun (x4264 : __tags intf) -> intf_to_js __tags_to_js x4264
    let (entries : ('tags, 'K, 'V) this -> ('K * 'V) IterableIterator.t) =
      fun (x4268 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js
          (fun (x4272 : Ojs.t) ->
             let x4273 = x4272 in
             ((Obj.magic (Ojs.array_get x4273 0)),
               (Obj.magic (Ojs.array_get x4273 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4268)
             "entries" [||])
    let (keys : ('tags, 'K, 'V) this -> 'K IterableIterator.t) =
      fun (x4274 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4274) "keys"
             [||])
    let (values : ('tags, 'K, 'V) this -> 'V IterableIterator.t) =
      fun (x4279 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4279) "values"
             [||])
    let (forEach :
      ('tags, 'K, 'V) this ->
        callbackfn:(value:'V -> key:'K -> map:('K, 'V) t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x4293 : ('tags, 'K, 'V) this) ->
        fun
          ~callbackfn:(x4284 : value:'V -> key:'K -> map:('K, 'V) t -> unit)
          ->
          fun ?thisArg:(x4285 : any option) ->
            fun () ->
              ignore
                (let x4297 = this_to_js Obj.magic Obj.magic Obj.magic x4293 in
                 Ojs.call (Ojs.get_prop_ascii x4297 "forEach") "apply"
                   [|x4297;((let x4286 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4286 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4288 : Ojs.t) ->
                                          fun (x4289 : Ojs.t) ->
                                            fun (x4290 : Ojs.t) ->
                                              x4284 ~value:(Obj.magic x4288)
                                                ~key:(Obj.magic x4289)
                                                ~map:(t_of_js Obj.magic
                                                        Obj.magic x4290)))|]);
                             (match x4285 with
                              | Some x4287 ->
                                  ignore
                                    (Ojs.call x4286 "push"
                                       [|(any_to_js x4287)|])
                              | None -> ());
                             x4286))|])
    let (get_ : ('tags, 'K, 'V) this -> key:'K -> 'V option) =
      fun (x4299 : ('tags, 'K, 'V) this) ->
        fun ~key:(x4298 : 'K) ->
          Ojs.option_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4299) "get"
               [|(Obj.magic x4298)|])
    let (has : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x4305 : ('tags, 'K, 'V) this) ->
        fun ~key:(x4304 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4305) "has"
               [|(Obj.magic x4304)|])
    let (get_size : ('tags, 'K, 'V) this -> float) =
      fun (x4309 : ('tags, 'K, 'V) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (this_to_js Obj.magic Obj.magic Obj.magic x4309) "size")
    let cast_from = Obj.magic
  end
module RangeError =
  struct
    type t = [ `Error  | `RangeError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4314 : Ojs.t) -> t_of_js x4314
    and t_0_to_js : t_0 -> Ojs.t = fun (x4313 : t) -> t_to_js x4313
    type tags = [ `Error  | `RangeError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RangeError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4317 : Ojs.t) -> intf_of_js __tags_of_js x4317
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4315 : __tags intf) -> intf_to_js __tags_to_js x4315
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x4319 : string option) ->
        fun ?options:(x4320 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RangeError")
                 (let x4321 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x4319 with
                   | Some x4323 ->
                       ignore
                         (Ojs.call x4321 "push" [|(Ojs.string_to_js x4323)|])
                   | None -> ());
                  (match x4320 with
                   | Some x4322 ->
                       ignore
                         (Ojs.call x4321 "push"
                            [|(ErrorOptions.t_to_js x4322)|])
                   | None -> ());
                  x4321))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x4324 : string option) ->
        fun ?options:(x4325 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "RangeError") "apply"
                 [|Ojs.null;((let x4326 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x4324 with
                               | Some x4328 ->
                                   ignore
                                     (Ojs.call x4326 "push"
                                        [|(Ojs.string_to_js x4328)|])
                               | None -> ());
                              (match x4325 with
                               | Some x4327 ->
                                   ignore
                                     (Ojs.call x4326 "push"
                                        [|(ErrorOptions.t_to_js x4327)|])
                               | None -> ());
                              x4326))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x4329 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RangeError")
               (let x4330 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4329 with
                 | Some x4331 ->
                     ignore
                       (Ojs.call x4330 "push" [|(Ojs.string_to_js x4331)|])
                 | None -> ());
                x4330))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x4332 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "RangeError") "apply"
               [|Ojs.null;((let x4333 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x4332 with
                             | Some x4334 ->
                                 ignore
                                   (Ojs.call x4333 "push"
                                      [|(Ojs.string_to_js x4334)|])
                             | None -> ());
                            x4333))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RangeError")
             "prototype")
    let cast_from = Obj.magic
  end
module ProxyHandler =
  struct
    type 'T t = [ `ProxyHandler of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4337 : Ojs.t) -> t_of_js __T_of_js x4337
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4335 : __T t) -> t_to_js __T_to_js x4335
    type 'T tags = [ `ProxyHandler of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ProxyHandler of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4341 : Ojs.t) -> intf_of_js __tags_of_js x4341
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4339 : __tags intf) -> intf_to_js __tags_to_js x4339
    let (apply_ :
      ('tags, 'T) this ->
        target:'T -> thisArg:any -> argArray:any list -> any)
      =
      fun (x4347 : ('tags, 'T) this) ->
        fun ~target:(x4343 : 'T) ->
          fun ~thisArg:(x4344 : any) ->
            fun ~argArray:(x4345 : any list) ->
              any_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x4347) "apply"
                   [|(Obj.magic x4343);(any_to_js x4344);(Ojs.list_to_js
                                                            any_to_js x4345)|])
    let (construct :
      ('tags, 'T) this ->
        target:'T ->
          argArray:any list -> newTarget:Function.t -> untyped_object)
      =
      fun (x4354 : ('tags, 'T) this) ->
        fun ~target:(x4350 : 'T) ->
          fun ~argArray:(x4351 : any list) ->
            fun ~newTarget:(x4353 : Function.t) ->
              untyped_object_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x4354) "construct"
                   [|(Obj.magic x4350);(Ojs.list_to_js any_to_js x4351);(
                     Function.t_to_js x4353)|])
    let (defineProperty :
      ('tags, 'T) this ->
        target:'T ->
          p:[ `U1 of string  | `U2 of symbol ] ->
            attributes:PropertyDescriptor.t -> bool)
      =
      fun (x4362 : ('tags, 'T) this) ->
        fun ~target:(x4357 : 'T) ->
          fun ~p:(x4358 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~attributes:(x4361 : PropertyDescriptor.t) ->
              Ojs.bool_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x4362)
                   "defineProperty"
                   [|(Obj.magic x4357);((match x4358 with
                                         | `U1 x4359 ->
                                             Ojs.string_to_js x4359
                                         | `U2 x4360 -> symbol_to_js x4360));(
                     PropertyDescriptor.t_to_js x4361)|])
    let (deleteProperty :
      ('tags, 'T) this ->
        target:'T -> p:[ `U1 of string  | `U2 of symbol ] -> bool)
      =
      fun (x4369 : ('tags, 'T) this) ->
        fun ~target:(x4365 : 'T) ->
          fun ~p:(x4366 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.bool_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x4369)
                 "deleteProperty"
                 [|(Obj.magic x4365);((match x4366 with
                                       | `U1 x4367 -> Ojs.string_to_js x4367
                                       | `U2 x4368 -> symbol_to_js x4368))|])
    let (get_ :
      ('tags, 'T) this ->
        target:'T ->
          p:[ `U1 of string  | `U2 of symbol ] -> receiver:any -> any)
      =
      fun (x4377 : ('tags, 'T) this) ->
        fun ~target:(x4372 : 'T) ->
          fun ~p:(x4373 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~receiver:(x4376 : any) ->
              any_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x4377) "get"
                   [|(Obj.magic x4372);((match x4373 with
                                         | `U1 x4374 ->
                                             Ojs.string_to_js x4374
                                         | `U2 x4375 -> symbol_to_js x4375));(
                     any_to_js x4376)|])
    let (getOwnPropertyDescriptor :
      ('tags, 'T) this ->
        target:'T ->
          p:[ `U1 of string  | `U2 of symbol ] -> PropertyDescriptor.t option)
      =
      fun (x4384 : ('tags, 'T) this) ->
        fun ~target:(x4380 : 'T) ->
          fun ~p:(x4381 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.option_of_js PropertyDescriptor.t_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x4384)
                 "getOwnPropertyDescriptor"
                 [|(Obj.magic x4380);((match x4381 with
                                       | `U1 x4382 -> Ojs.string_to_js x4382
                                       | `U2 x4383 -> symbol_to_js x4383))|])
    let (getPrototypeOf :
      ('tags, 'T) this -> target:'T -> untyped_object option) =
      fun (x4389 : ('tags, 'T) this) ->
        fun ~target:(x4388 : 'T) ->
          Ojs.option_of_js untyped_object_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4389) "getPrototypeOf"
               [|(Obj.magic x4388)|])
    let (has :
      ('tags, 'T) this ->
        target:'T -> p:[ `U1 of string  | `U2 of symbol ] -> bool)
      =
      fun (x4397 : ('tags, 'T) this) ->
        fun ~target:(x4393 : 'T) ->
          fun ~p:(x4394 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.bool_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x4397) "has"
                 [|(Obj.magic x4393);((match x4394 with
                                       | `U1 x4395 -> Ojs.string_to_js x4395
                                       | `U2 x4396 -> symbol_to_js x4396))|])
    let (isExtensible : ('tags, 'T) this -> target:'T -> bool) =
      fun (x4401 : ('tags, 'T) this) ->
        fun ~target:(x4400 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4401) "isExtensible"
               [|(Obj.magic x4400)|])
    let (ownKeys :
      ('tags, 'T) this ->
        target:'T ->
          [ `String of string  | `Symbol of symbol ] Primitive.t ArrayLike.t)
      =
      fun (x4405 : ('tags, 'T) this) ->
        fun ~target:(x4404 : 'T) ->
          ArrayLike.t_of_js
            (fun (x4408 : Ojs.t) ->
               Primitive.t_of_js
                 (fun (x4409 : Ojs.t) ->
                    let x4410 = x4409 in
                    match Ojs.string_of_js (Ojs.get_prop_ascii x4410 "dummy")
                    with
                    | "String" -> `String (Ojs.string_of_js x4410)
                    | "Symbol" -> `Symbol (symbol_of_js x4410)
                    | _ -> assert false) x4408)
            (Ojs.call (this_to_js Obj.magic Obj.magic x4405) "ownKeys"
               [|(Obj.magic x4404)|])
    let (preventExtensions : ('tags, 'T) this -> target:'T -> bool) =
      fun (x4412 : ('tags, 'T) this) ->
        fun ~target:(x4411 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4412)
               "preventExtensions" [|(Obj.magic x4411)|])
    let (set_ :
      ('tags, 'T) this ->
        target:'T ->
          p:[ `U1 of string  | `U2 of symbol ] ->
            value:any -> receiver:any -> bool)
      =
      fun (x4421 : ('tags, 'T) this) ->
        fun ~target:(x4415 : 'T) ->
          fun ~p:(x4416 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~value:(x4419 : any) ->
              fun ~receiver:(x4420 : any) ->
                Ojs.bool_of_js
                  (Ojs.call (this_to_js Obj.magic Obj.magic x4421) "set"
                     [|(Obj.magic x4415);((match x4416 with
                                           | `U1 x4417 ->
                                               Ojs.string_to_js x4417
                                           | `U2 x4418 -> symbol_to_js x4418));(
                       any_to_js x4419);(any_to_js x4420)|])
    let (setPrototypeOf :
      ('tags, 'T) this -> target:'T -> v:untyped_object option -> bool) =
      fun (x4427 : ('tags, 'T) this) ->
        fun ~target:(x4424 : 'T) ->
          fun ~v:(x4425 : untyped_object option) ->
            Ojs.bool_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x4427)
                 "setPrototypeOf"
                 [|(Obj.magic x4424);(Ojs.option_to_js untyped_object_to_js
                                        x4425)|])
    let cast_from = Obj.magic
  end
module ProxyStatic =
  struct
    module AnonymousInterface41 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) -> fun (x4431 : Ojs.t) -> x4431
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) -> fun (x4430 : Ojs.t) -> x4430
        let (get_proxy : 'T t -> 'T) =
          fun (x4432 : 'T t) ->
            Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x4432) "proxy")
        let (set_proxy : 'T t -> 'T -> unit) =
          fun (x4434 : 'T t) ->
            fun (x4435 : 'T) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4434) "proxy"
                (Obj.magic x4435)
        let (revoke : 'T t -> unit) =
          fun (x4437 : 'T t) ->
            ignore (Ojs.call (t_to_js Obj.magic x4437) "revoke" [||])
        let (create : proxy:'T -> revoke:(unit -> unit) -> unit -> 'T t) =
          fun ~proxy:(x4439 : 'T) ->
            fun ~revoke:(x4440 : unit -> unit) ->
              fun () ->
                let x4441 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x4441 "proxy" (Obj.magic x4439);
                Ojs.set_prop_ascii x4441 "revoke"
                  (Ojs.fun_to_js 1 (fun _ -> x4440 ()));
                t_of_js Obj.magic x4441
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
              fun (__T_of_js : Ojs.t -> __T) ->
                fun (x4445 : Ojs.t) -> t_of_js __T_of_js x4445
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t = fun
              (type __T) ->
              fun (__T_to_js : __T -> Ojs.t) ->
                fun (x4443 : __T t) -> t_to_js __T_to_js x4443
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x4449 : Ojs.t) -> parent_of_js T.t_of_js x4449
            and t_to_js : t -> Ojs.t =
              fun (x4447 : T.t parent) -> parent_to_js T.t_to_js x4447
            let (get_proxy : t -> T.t) =
              fun (x4451 : t) ->
                T.t_of_js (Ojs.get_prop_ascii (t_to_js x4451) "proxy")
            let (set_proxy : t -> T.t -> unit) =
              fun (x4452 : t) ->
                fun (x4453 : T.t) ->
                  Ojs.set_prop_ascii (t_to_js x4452) "proxy"
                    (T.t_to_js x4453)
            let (revoke : t -> unit) =
              fun (x4454 : t) ->
                ignore (Ojs.call (t_to_js x4454) "revoke" [||])
          end
      end
    let (revocable :
      target:'T -> handler:'T ProxyHandler.t -> 'T AnonymousInterface41.t) =
      fun ~target:(x4455 : 'T) ->
        fun ~handler:(x4456 : 'T ProxyHandler.t) ->
          AnonymousInterface41.t_of_js Obj.magic
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Proxy") "revocable"
               [|(Obj.magic x4455);(ProxyHandler.t_to_js Obj.magic x4456)|])
    let (create : target:'T -> handler:'T ProxyHandler.t -> 'T) =
      fun ~target:(x4459 : 'T) ->
        fun ~handler:(x4460 : 'T ProxyHandler.t) ->
          Obj.magic
            (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Proxy")
               [|(Obj.magic x4459);(ProxyHandler.t_to_js Obj.magic x4460)|])
  end
module ProxyConstructor =
  struct
    module AnonymousInterface41 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) -> fun (x4463 : Ojs.t) -> x4463
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) -> fun (x4462 : Ojs.t) -> x4462
        let (get_proxy : 'T t -> 'T) =
          fun (x4464 : 'T t) ->
            Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x4464) "proxy")
        let (set_proxy : 'T t -> 'T -> unit) =
          fun (x4466 : 'T t) ->
            fun (x4467 : 'T) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4466) "proxy"
                (Obj.magic x4467)
        let (revoke : 'T t -> unit) =
          fun (x4469 : 'T t) ->
            ignore (Ojs.call (t_to_js Obj.magic x4469) "revoke" [||])
        let (create : proxy:'T -> revoke:(unit -> unit) -> unit -> 'T t) =
          fun ~proxy:(x4471 : 'T) ->
            fun ~revoke:(x4472 : unit -> unit) ->
              fun () ->
                let x4473 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x4473 "proxy" (Obj.magic x4471);
                Ojs.set_prop_ascii x4473 "revoke"
                  (Ojs.fun_to_js 1 (fun _ -> x4472 ()));
                t_of_js Obj.magic x4473
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
              fun (__T_of_js : Ojs.t -> __T) ->
                fun (x4477 : Ojs.t) -> t_of_js __T_of_js x4477
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t = fun
              (type __T) ->
              fun (__T_to_js : __T -> Ojs.t) ->
                fun (x4475 : __T t) -> t_to_js __T_to_js x4475
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x4481 : Ojs.t) -> parent_of_js T.t_of_js x4481
            and t_to_js : t -> Ojs.t =
              fun (x4479 : T.t parent) -> parent_to_js T.t_to_js x4479
            let (get_proxy : t -> T.t) =
              fun (x4483 : t) ->
                T.t_of_js (Ojs.get_prop_ascii (t_to_js x4483) "proxy")
            let (set_proxy : t -> T.t -> unit) =
              fun (x4484 : t) ->
                fun (x4485 : T.t) ->
                  Ojs.set_prop_ascii (t_to_js x4484) "proxy"
                    (T.t_to_js x4485)
            let (revoke : t -> unit) =
              fun (x4486 : t) ->
                ignore (Ojs.call (t_to_js x4486) "revoke" [||])
          end
      end
    type t = [ `ProxyConstructor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4488 : Ojs.t) -> t_of_js x4488
    and t_0_to_js : t_0 -> Ojs.t = fun (x4487 : t) -> t_to_js x4487
    type tags = [ `ProxyConstructor ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ProxyConstructor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4491 : Ojs.t) -> intf_of_js __tags_of_js x4491
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4489 : __tags intf) -> intf_to_js __tags_to_js x4489
    let (revocable :
      'tags this ->
        target:'T -> handler:'T ProxyHandler.t -> 'T AnonymousInterface41.t)
      =
      fun (x4496 : 'tags this) ->
        fun ~target:(x4493 : 'T) ->
          fun ~handler:(x4494 : 'T ProxyHandler.t) ->
            AnonymousInterface41.t_of_js Obj.magic
              (Ojs.call (this_to_js Obj.magic x4496) "revocable"
                 [|(Obj.magic x4493);(ProxyHandler.t_to_js Obj.magic x4494)|])
    let (create : 'tags this -> target:'T -> handler:'T ProxyHandler.t -> 'T)
      =
      fun (x4502 : 'tags this) ->
        fun ~target:(x4499 : 'T) ->
          fun ~handler:(x4500 : 'T ProxyHandler.t) ->
            Obj.magic
              (Ojs.new_obj (this_to_js Obj.magic x4502)
                 [|(Obj.magic x4499);(ProxyHandler.t_to_js Obj.magic x4500)|])
    let cast_from = Obj.magic
  end
module ThisType =
  struct
    type 'T t = [ `ThisType of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4506 : Ojs.t) -> t_of_js __T_of_js x4506
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4504 : __T t) -> t_to_js __T_to_js x4504
    type 'T tags = [ `ThisType of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ThisType of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4510 : Ojs.t) -> intf_of_js __tags_of_js x4510
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4508 : __tags intf) -> intf_to_js __tags_to_js x4508
    let cast_from = Obj.magic
  end
module Readonly =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4513 : Ojs.t) -> any_of_js x4513
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x4512 : any) -> any_to_js x4512
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4516 : Ojs.t) -> t_of_js __T_of_js x4516
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4514 : __T t) -> t_to_js __T_to_js x4514
  end
module PropertyDescriptorMap =
  struct
    type t = [ `PropertyDescriptorMap ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4519 : Ojs.t) -> t_of_js x4519
    and t_0_to_js : t_0 -> Ojs.t = fun (x4518 : t) -> t_to_js x4518
    type tags = [ `PropertyDescriptorMap ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `PropertyDescriptorMap ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4522 : Ojs.t) -> intf_of_js __tags_of_js x4522
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4520 : __tags intf) -> intf_to_js __tags_to_js x4520
    let (get : 'tags this -> PropertyKey.t -> PropertyDescriptor.t) =
      fun (x4524 : 'tags this) ->
        fun (x4526 : PropertyKey.t) ->
          PropertyDescriptor.t_of_js
            (Ojs.get_prop (this_to_js Obj.magic x4524)
               (PropertyKey.t_to_js x4526))
    let (set : 'tags this -> PropertyKey.t -> PropertyDescriptor.t -> unit) =
      fun (x4527 : 'tags this) ->
        fun (x4529 : PropertyKey.t) ->
          fun (x4530 : PropertyDescriptor.t) ->
            Ojs.set_prop (this_to_js Obj.magic x4527)
              (PropertyKey.t_to_js x4529) (PropertyDescriptor.t_to_js x4530)
    let cast_from = Obj.magic
  end
module Object =
  struct
    module AnonymousInterface48 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) -> fun (x4532 : Ojs.t) -> x4532
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) -> fun (x4531 : Ojs.t) -> x4531
        let (get : 'T t -> string -> 'T) =
          fun (x4533 : 'T t) ->
            fun (x4535 : string) ->
              Obj.magic
                (Ojs.get_prop (t_to_js Obj.magic x4533)
                   (Ojs.string_to_js x4535))
        let (set : 'T t -> string -> 'T -> unit) =
          fun (x4536 : 'T t) ->
            fun (x4538 : string) ->
              fun (x4539 : 'T) ->
                Ojs.set_prop (t_to_js Obj.magic x4536)
                  (Ojs.string_to_js x4538) (Obj.magic x4539)
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
              fun (__T_of_js : Ojs.t -> __T) ->
                fun (x4542 : Ojs.t) -> t_of_js __T_of_js x4542
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t = fun
              (type __T) ->
              fun (__T_to_js : __T -> Ojs.t) ->
                fun (x4540 : __T t) -> t_to_js __T_to_js x4540
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x4546 : Ojs.t) -> parent_of_js T.t_of_js x4546
            and t_to_js : t -> Ojs.t =
              fun (x4544 : T.t parent) -> parent_to_js T.t_to_js x4544
            let (get : t -> string -> T.t) =
              fun (x4548 : t) ->
                fun (x4549 : string) ->
                  T.t_of_js
                    (Ojs.get_prop (t_to_js x4548) (Ojs.string_to_js x4549))
            let (set : t -> string -> T.t -> unit) =
              fun (x4550 : t) ->
                fun (x4551 : string) ->
                  fun (x4552 : T.t) ->
                    Ojs.set_prop (t_to_js x4550) (Ojs.string_to_js x4551)
                      (T.t_to_js x4552)
          end
      end
    module AnonymousInterface45 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) -> fun (x4554 : Ojs.t) -> x4554
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) -> fun (x4553 : Ojs.t) -> x4553
        let (get : 'T t -> string -> 'T) =
          fun (x4555 : 'T t) ->
            fun (x4557 : string) ->
              Obj.magic
                (Ojs.get_prop (t_to_js Obj.magic x4555)
                   (Ojs.string_to_js x4557))
        let (set : 'T t -> string -> 'T -> unit) =
          fun (x4558 : 'T t) ->
            fun (x4560 : string) ->
              fun (x4561 : 'T) ->
                Ojs.set_prop (t_to_js Obj.magic x4558)
                  (Ojs.string_to_js x4560) (Obj.magic x4561)
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
              fun (__T_of_js : Ojs.t -> __T) ->
                fun (x4564 : Ojs.t) -> t_of_js __T_of_js x4564
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t = fun
              (type __T) ->
              fun (__T_to_js : __T -> Ojs.t) ->
                fun (x4562 : __T t) -> t_to_js __T_to_js x4562
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x4568 : Ojs.t) -> parent_of_js T.t_of_js x4568
            and t_to_js : t -> Ojs.t =
              fun (x4566 : T.t parent) -> parent_to_js T.t_to_js x4566
            let (get : t -> string -> T.t) =
              fun (x4570 : t) ->
                fun (x4571 : string) ->
                  T.t_of_js
                    (Ojs.get_prop (t_to_js x4570) (Ojs.string_to_js x4571))
            let (set : t -> string -> T.t -> unit) =
              fun (x4572 : t) ->
                fun (x4573 : string) ->
                  fun (x4574 : T.t) ->
                    Ojs.set_prop (t_to_js x4572) (Ojs.string_to_js x4573)
                      (T.t_to_js x4574)
          end
      end
    module AnonymousInterface17 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x4576 : Ojs.t) -> x4576
        and t_to_js : t -> Ojs.t = fun (x4575 : Ojs.t) -> x4575
        let (get : t -> string -> PropertyDescriptor.t) =
          fun (x4577 : t) ->
            fun (x4578 : string) ->
              PropertyDescriptor.t_of_js
                (Ojs.get_prop (t_to_js x4577) (Ojs.string_to_js x4578))
        let (set : t -> string -> PropertyDescriptor.t -> unit) =
          fun (x4579 : t) ->
            fun (x4580 : string) ->
              fun (x4581 : PropertyDescriptor.t) ->
                Ojs.set_prop (t_to_js x4579) (Ojs.string_to_js x4580)
                  (PropertyDescriptor.t_to_js x4581)
      end
    type t = [ `Object ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4583 : Ojs.t) -> t_of_js x4583
    and t_0_to_js : t_0 -> Ojs.t = fun (x4582 : t) -> t_to_js x4582
    type tags = [ `Object ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Object ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4586 : Ojs.t) -> intf_of_js __tags_of_js x4586
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4584 : __tags intf) -> intf_to_js __tags_to_js x4584
    let (hasOwn : 'tags this -> o:untyped_object -> v:PropertyKey.t -> bool)
      =
      fun (x4590 : 'tags this) ->
        fun ~o:(x4588 : untyped_object) ->
          fun ~v:(x4589 : PropertyKey.t) ->
            Ojs.bool_of_js
              (Ojs.call (this_to_js Obj.magic x4590) "hasOwn"
                 [|(untyped_object_to_js x4588);(PropertyKey.t_to_js x4589)|])
    let (get_constructor : 'tags this -> Function.t) =
      fun (x4592 : 'tags this) ->
        Function.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4592) "constructor")
    let (set_constructor : 'tags this -> Function.t -> unit) =
      fun (x4594 : 'tags this) ->
        fun (x4595 : Function.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4594) "constructor"
            (Function.t_to_js x4595)
    let (toString : 'tags this -> string) =
      fun (x4597 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4597) "toString" [||])
    let (toLocaleString : 'tags this -> string) =
      fun (x4599 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4599) "toLocaleString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x4601 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x4601) "valueOf" [||])
    let (hasOwnProperty : 'tags this -> v:PropertyKey.t -> bool) =
      fun (x4604 : 'tags this) ->
        fun ~v:(x4603 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x4604) "hasOwnProperty"
               [|(PropertyKey.t_to_js x4603)|])
    let (isPrototypeOf : 'tags this -> v:t -> bool) =
      fun (x4607 : 'tags this) ->
        fun ~v:(x4606 : t) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x4607) "isPrototypeOf"
               [|(t_to_js x4606)|])
    let (propertyIsEnumerable : 'tags this -> v:PropertyKey.t -> bool) =
      fun (x4610 : 'tags this) ->
        fun ~v:(x4609 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x4610) "propertyIsEnumerable"
               [|(PropertyKey.t_to_js x4609)|])
    let (fromEntries :
      (PropertyKey.t * 'T) Iterable.t -> 'T AnonymousInterface45.t) =
      fun (x4612 : (PropertyKey.t * 'T) Iterable.t) ->
        AnonymousInterface45.t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "fromEntries"
             [|(Iterable.t_to_js
                  (fun (x4613 : (PropertyKey.t * 'T)) ->
                     let (x4614, x4615) = x4613 in
                     let x4616 = Ojs.array_make 2 in
                     Ojs.array_set x4616 0 (PropertyKey.t_to_js x4614);
                     Ojs.array_set x4616 1 (Obj.magic x4615);
                     x4616) x4612)|])
    let (fromEntries' : any list Iterable.t -> any) =
      fun (x4618 : any list Iterable.t) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "fromEntries"
             [|(Iterable.t_to_js
                  (fun (x4619 : any list) -> Ojs.list_to_js any_to_js x4619)
                  x4618)|])
    let (values :
      [ `U1 of 'T AnonymousInterface48.t  | `U2 of 'T ArrayLike.t ] ->
        'T list)
      =
      fun
        (x4621 :
          [ `U1 of 'T AnonymousInterface48.t  | `U2 of 'T ArrayLike.t ])
        ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "values"
             [|((match x4621 with
                 | `U1 x4622 -> AnonymousInterface48.t_to_js Obj.magic x4622
                 | `U2 x4624 -> ArrayLike.t_to_js Obj.magic x4624))|])
    let (values' : untyped_object -> any list) =
      fun (x4627 : untyped_object) ->
        Ojs.list_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "values"
             [|(untyped_object_to_js x4627)|])
    let (entries :
      [ `U1 of 'T AnonymousInterface48.t  | `U2 of 'T ArrayLike.t ] ->
        (string * 'T) list)
      =
      fun
        (x4629 :
          [ `U1 of 'T AnonymousInterface48.t  | `U2 of 'T ArrayLike.t ])
        ->
        Ojs.list_of_js
          (fun (x4634 : Ojs.t) ->
             let x4635 = x4634 in
             ((Ojs.string_of_js (Ojs.array_get x4635 0)),
               (Obj.magic (Ojs.array_get x4635 1))))
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "entries"
             [|((match x4629 with
                 | `U1 x4630 -> AnonymousInterface48.t_to_js Obj.magic x4630
                 | `U2 x4632 -> ArrayLike.t_to_js Obj.magic x4632))|])
    let (entries' : untyped_object -> (string * any) list) =
      fun (x4636 : untyped_object) ->
        Ojs.list_of_js
          (fun (x4637 : Ojs.t) ->
             let x4638 = x4637 in
             ((Ojs.string_of_js (Ojs.array_get x4638 0)),
               (any_of_js (Ojs.array_get x4638 1))))
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "entries"
             [|(untyped_object_to_js x4636)|])
    let (getOwnPropertyDescriptors :
      'T -> (any, AnonymousInterface17.t) intersection2) =
      fun (x4639 : 'T) ->
        intersection2_of_js any_of_js AnonymousInterface17.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertyDescriptors" [|(Obj.magic x4639)|])
    let (assign : target:'T -> source:'U -> ('T, 'U) intersection2) =
      fun ~target:(x4642 : 'T) ->
        fun ~source:(x4643 : 'U) ->
          intersection2_of_js Obj.magic Obj.magic
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "assign"
               [|(Obj.magic x4642);(Obj.magic x4643)|])
    let (assign' :
      target:'T -> source1:'U -> source2:'V -> ('T, 'U, 'V) intersection3) =
      fun ~target:(x4646 : 'T) ->
        fun ~source1:(x4647 : 'U) ->
          fun ~source2:(x4648 : 'V) ->
            intersection3_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "assign"
                 [|(Obj.magic x4646);(Obj.magic x4647);(Obj.magic x4648)|])
    let (assign'' :
      target:'T ->
        source1:'U ->
          source2:'V -> source3:'W -> ('T, 'U, 'V, 'W) intersection4)
      =
      fun ~target:(x4652 : 'T) ->
        fun ~source1:(x4653 : 'U) ->
          fun ~source2:(x4654 : 'V) ->
            fun ~source3:(x4655 : 'W) ->
              intersection4_of_js Obj.magic Obj.magic Obj.magic Obj.magic
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "assign"
                   [|(Obj.magic x4652);(Obj.magic x4653);(Obj.magic x4654);(
                     Obj.magic x4655)|])
    let (assign''' : target:untyped_object -> sources:any list -> any) =
      fun ~target:(x4660 : untyped_object) ->
        fun ~sources:(x4661 : any list) ->
          any_of_js
            (let x4664 = Ojs.get_prop_ascii Ojs.global "Object" in
             Ojs.call (Ojs.get_prop_ascii x4664 "assign") "apply"
               [|x4664;((let x4662 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         ignore
                           (Ojs.call x4662 "push"
                              [|(untyped_object_to_js x4660)|]);
                         List.iter
                           (fun (x4663 : any) ->
                              ignore
                                (Ojs.call x4662 "push" [|(any_to_js x4663)|]))
                           x4661;
                         x4662))|])
    let (getOwnPropertySymbols : any -> symbol list) =
      fun (x4665 : any) ->
        Ojs.list_of_js symbol_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertySymbols" [|(any_to_js x4665)|])
    let (keys : untyped_object -> string list) =
      fun (x4667 : untyped_object) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "keys"
             [|(untyped_object_to_js x4667)|])
    let (is : value1:any -> value2:any -> bool) =
      fun ~value1:(x4669 : any) ->
        fun ~value2:(x4670 : any) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "is"
               [|(any_to_js x4669);(any_to_js x4670)|])
    let (setPrototypeOf : o:any -> proto:untyped_object option -> any) =
      fun ~o:(x4671 : any) ->
        fun ~proto:(x4672 : untyped_object option) ->
          any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "setPrototypeOf"
               [|(any_to_js x4671);(Ojs.option_to_js untyped_object_to_js
                                      x4672)|])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x4674 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Object")
               (let x4675 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4674 with
                 | Some x4676 ->
                     ignore (Ojs.call x4675 "push" [|(any_to_js x4676)|])
                 | None -> ());
                x4675))
    let (invoke : unit -> any) =
      fun () ->
        any_of_js (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Object") [||])
    let (invoke' : any -> any) =
      fun (x4677 : any) ->
        any_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Object")
             [|(any_to_js x4677)|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Object")
             "prototype")
    let (getPrototypeOf : any -> any) =
      fun (x4678 : any) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "getPrototypeOf"
             [|(any_to_js x4678)|])
    let (getOwnPropertyDescriptor :
      o:any -> p:PropertyKey.t -> PropertyDescriptor.t option) =
      fun ~o:(x4679 : any) ->
        fun ~p:(x4680 : PropertyKey.t) ->
          Ojs.option_of_js PropertyDescriptor.t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "getOwnPropertyDescriptor"
               [|(any_to_js x4679);(PropertyKey.t_to_js x4680)|])
    let (getOwnPropertyNames : any -> string list) =
      fun (x4682 : any) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertyNames" [|(any_to_js x4682)|])
    let (create_ : untyped_object option -> any) =
      fun (x4684 : untyped_object option) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "create"
             [|(Ojs.option_to_js untyped_object_to_js x4684)|])
    let (create_' :
      o:untyped_object option ->
        properties:(PropertyDescriptorMap.t, any ThisType.t) intersection2 ->
          any)
      =
      fun ~o:(x4686 : untyped_object option) ->
        fun
          ~properties:(x4688 :
                        (PropertyDescriptorMap.t, any ThisType.t)
                          intersection2)
          ->
          any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "create"
               [|(Ojs.option_to_js untyped_object_to_js x4686);(intersection2_to_js
                                                                  PropertyDescriptorMap.t_to_js
                                                                  (fun
                                                                    (x4690 :
                                                                    any
                                                                    ThisType.t)
                                                                    ->
                                                                    ThisType.t_to_js
                                                                    any_to_js
                                                                    x4690)
                                                                  x4688)|])
    let (defineProperty :
      o:'T ->
        p:PropertyKey.t ->
          attributes:(PropertyDescriptor.t, any ThisType.t) intersection2 ->
            'T)
      =
      fun ~o:(x4692 : 'T) ->
        fun ~p:(x4693 : PropertyKey.t) ->
          fun
            ~attributes:(x4694 :
                          (PropertyDescriptor.t, any ThisType.t)
                            intersection2)
            ->
            Obj.magic
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
                 "defineProperty"
                 [|(Obj.magic x4692);(PropertyKey.t_to_js x4693);(intersection2_to_js
                                                                    PropertyDescriptor.t_to_js
                                                                    (
                                                                    fun
                                                                    (x4696 :
                                                                    any
                                                                    ThisType.t)
                                                                    ->
                                                                    ThisType.t_to_js
                                                                    any_to_js
                                                                    x4696)
                                                                    x4694)|])
    let (defineProperties :
      o:'T ->
        properties:(PropertyDescriptorMap.t, any ThisType.t) intersection2 ->
          'T)
      =
      fun ~o:(x4698 : 'T) ->
        fun
          ~properties:(x4699 :
                        (PropertyDescriptorMap.t, any ThisType.t)
                          intersection2)
          ->
          Obj.magic
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "defineProperties"
               [|(Obj.magic x4698);(intersection2_to_js
                                      PropertyDescriptorMap.t_to_js
                                      (fun (x4701 : any ThisType.t) ->
                                         ThisType.t_to_js any_to_js x4701)
                                      x4699)|])
    let (seal : 'T -> 'T) =
      fun (x4703 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "seal"
             [|(Obj.magic x4703)|])
    let (freeze : 'T list -> 'T list) =
      fun (x4704 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Ojs.list_to_js Obj.magic x4704)|])
    let (freeze' : 'T -> 'T) =
      fun (x4707 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Obj.magic x4707)|])
    let (freeze'' : 'T -> 'T Readonly.t) =
      fun (x4708 : 'T) ->
        Readonly.t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Obj.magic x4708)|])
    let (preventExtensions : 'T -> 'T) =
      fun (x4710 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "preventExtensions" [|(Obj.magic x4710)|])
    let (isSealed : any -> bool) =
      fun (x4711 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isSealed"
             [|(any_to_js x4711)|])
    let (isFrozen : any -> bool) =
      fun (x4712 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isFrozen"
             [|(any_to_js x4712)|])
    let (isExtensible : any -> bool) =
      fun (x4713 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isExtensible"
             [|(any_to_js x4713)|])
    let (keys' : untyped_object -> string list) =
      fun (x4714 : untyped_object) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "keys"
             [|(untyped_object_to_js x4714)|])
    let cast_from = Obj.magic
  end
module PropertyDecorator =
  struct
    type t = [ `PropertyDecorator ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4717 : Ojs.t) -> t_of_js x4717
    and t_0_to_js : t_0 -> Ojs.t = fun (x4716 : t) -> t_to_js x4716
    type tags = [ `PropertyDecorator ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `PropertyDecorator ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4720 : Ojs.t) -> intf_of_js __tags_of_js x4720
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4718 : __tags intf) -> intf_to_js __tags_to_js x4718
    let (apply :
      'tags this ->
        target:Object.t ->
          propertyKey:[ `U1 of string  | `U2 of symbol ] -> unit)
      =
      fun (x4726 : 'tags this) ->
        fun ~target:(x4722 : Object.t) ->
          fun ~propertyKey:(x4723 : [ `U1 of string  | `U2 of symbol ]) ->
            ignore
              (Ojs.apply (this_to_js Obj.magic x4726)
                 [|(Object.t_to_js x4722);((match x4723 with
                                            | `U1 x4724 ->
                                                Ojs.string_to_js x4724
                                            | `U2 x4725 -> symbol_to_js x4725))|])
    let cast_from = Obj.magic
  end
module PromiseLike =
  struct
    type 'T t = [ `PromiseLike of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4730 : Ojs.t) -> t_of_js __T_of_js x4730
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4728 : __T t) -> t_to_js __T_to_js x4728
    type 'T tags = [ `PromiseLike of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `PromiseLike of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4734 : Ojs.t) -> intf_of_js __tags_of_js x4734
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4732 : __tags intf) -> intf_to_js __tags_to_js x4732
    let (then_ :
      ('tags, 'T) this ->
        ?onfulfilled:[ `Null  | `Undefined of undefined 
                     | `U1 of
                         'T -> [ `U1 of 'TResult1  | `U2 of 'TResult1 t ] ]
          ->
          ?onrejected:[ `Null  | `Undefined of undefined 
                      | `U1 of
                          any -> [ `U1 of 'TResult2  | `U2 of 'TResult2 t ] ]
            -> unit -> ('TResult1, 'TResult2) union2 t)
      =
      fun (x4753 : ('tags, 'T) this) ->
        fun
          ?onfulfilled:(x4736 :
                         [ `Null  | `Undefined of undefined 
                         | `U1 of
                             'T -> [ `U1 of 'TResult1  | `U2 of 'TResult1 t ] ]
                           option)
          ->
          fun
            ?onrejected:(x4737 :
                          [ `Null  | `Undefined of undefined 
                          | `U1 of
                              any ->
                                [ `U1 of 'TResult2  | `U2 of 'TResult2 t ]
                              ]
                            option)
            ->
            fun () ->
              t_of_js
                (fun (x4757 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x4757)
                (let x4756 = this_to_js Obj.magic Obj.magic x4753 in
                 Ojs.call (Ojs.get_prop_ascii x4756 "then") "apply"
                   [|x4756;((let x4738 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4736 with
                              | Some x4746 ->
                                  ignore
                                    (Ojs.call x4738 "push"
                                       [|((match x4746 with
                                           | `Null -> Ojs.null
                                           | `Undefined x4747 ->
                                               undefined_to_js x4747
                                           | `U1 x4748 ->
                                               Ojs.fun_to_js 1
                                                 (fun (x4749 : Ojs.t) ->
                                                    match x4748
                                                            (Obj.magic x4749)
                                                    with
                                                    | `U1 x4750 ->
                                                        Obj.magic x4750
                                                    | `U2 x4751 ->
                                                        t_to_js Obj.magic
                                                          x4751)))|])
                              | None -> ());
                             (match x4737 with
                              | Some x4739 ->
                                  ignore
                                    (Ojs.call x4738 "push"
                                       [|((match x4739 with
                                           | `Null -> Ojs.null
                                           | `Undefined x4740 ->
                                               undefined_to_js x4740
                                           | `U1 x4741 ->
                                               Ojs.fun_to_js 1
                                                 (fun (x4742 : Ojs.t) ->
                                                    match x4741
                                                            (any_of_js x4742)
                                                    with
                                                    | `U1 x4743 ->
                                                        Obj.magic x4743
                                                    | `U2 x4744 ->
                                                        t_to_js Obj.magic
                                                          x4744)))|])
                              | None -> ());
                             x4738))|])
    let cast_from = Obj.magic
  end
module PromiseConstructorLike =
  struct
    module AnonymousInterface9 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x4761 : Ojs.t) -> x4761
        and t_to_js : t -> Ojs.t = fun (x4760 : Ojs.t) -> x4760
        let (create :
          t ->
            executor:(resolve:([ `U1 of 'T  | `U2 of 'T PromiseLike.t ] ->
                                 unit)
                        -> reject:(?reason:any -> unit -> unit) -> unit)
              -> 'T PromiseLike.t)
          =
          fun (x4772 : t) ->
            fun
              ~executor:(x4762 :
                          resolve:([ `U1 of 'T  | `U2 of 'T PromiseLike.t ]
                                     -> unit)
                            -> reject:(?reason:any -> unit -> unit) -> unit)
              ->
              PromiseLike.t_of_js Obj.magic
                (Ojs.new_obj (t_to_js x4772)
                   [|(Ojs.fun_to_js 2
                        (fun (x4763 : Ojs.t) ->
                           fun (x4768 : Ojs.t) ->
                             x4762
                               ~resolve:(fun
                                           (x4764 :
                                             [ `U1 of 'T 
                                             | `U2 of 'T PromiseLike.t ])
                                           ->
                                           ignore
                                             (Ojs.apply x4763
                                                [|((match x4764 with
                                                    | `U1 x4765 ->
                                                        Obj.magic x4765
                                                    | `U2 x4766 ->
                                                        PromiseLike.t_to_js
                                                          Obj.magic x4766))|]))
                               ~reject:(fun ?reason:(x4769 : any option) ->
                                          fun () ->
                                            ignore
                                              (Ojs.call x4768 "apply"
                                                 [|Ojs.null;((let x4770 =
                                                                Ojs.new_obj
                                                                  (Ojs.get_prop_ascii
                                                                    Ojs.global
                                                                    "Array")
                                                                  [||] in
                                                              (match x4769
                                                               with
                                                               | Some x4771
                                                                   ->
                                                                   ignore
                                                                    (Ojs.call
                                                                    x4770
                                                                    "push"
                                                                    [|(
                                                                    any_to_js
                                                                    x4771)|])
                                                               | None -> ());
                                                              x4770))|]))))|])
      end
    type t = AnonymousInterface9.t
    let rec t_of_js : Ojs.t -> t =
      fun (x4775 : Ojs.t) -> AnonymousInterface9.t_of_js x4775
    and t_to_js : t -> Ojs.t =
      fun (x4774 : AnonymousInterface9.t) ->
        AnonymousInterface9.t_to_js x4774
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4777 : Ojs.t) -> t_of_js x4777
    and t_0_to_js : t_0 -> Ojs.t = fun (x4776 : t) -> t_to_js x4776
  end
module Parameters =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4779 : Ojs.t) -> any_of_js x4779
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x4778 : any) -> any_to_js x4778
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4782 : Ojs.t) -> t_of_js __T_of_js x4782
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4780 : __T t) -> t_to_js __T_to_js x4780
  end
module ParameterDecorator =
  struct
    type t = [ `ParameterDecorator ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4785 : Ojs.t) -> t_of_js x4785
    and t_0_to_js : t_0 -> Ojs.t = fun (x4784 : t) -> t_to_js x4784
    type tags = [ `ParameterDecorator ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ParameterDecorator ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4788 : Ojs.t) -> intf_of_js __tags_of_js x4788
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4786 : __tags intf) -> intf_to_js __tags_to_js x4786
    let (apply :
      'tags this ->
        target:Object.t ->
          propertyKey:[ `U1 of string  | `U2 of symbol ] ->
            parameterIndex:float -> unit)
      =
      fun (x4795 : 'tags this) ->
        fun ~target:(x4790 : Object.t) ->
          fun ~propertyKey:(x4791 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~parameterIndex:(x4794 : float) ->
              ignore
                (Ojs.apply (this_to_js Obj.magic x4795)
                   [|(Object.t_to_js x4790);((match x4791 with
                                              | `U1 x4792 ->
                                                  Ojs.string_to_js x4792
                                              | `U2 x4793 ->
                                                  symbol_to_js x4793));(
                     Ojs.float_to_js x4794)|])
    let cast_from = Obj.magic
  end
module Pick =
  struct
    type ('T, 'K) t = any
    let rec t_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (x4798 : Ojs.t) -> any_of_js x4798
    and t_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t -> Ojs.t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (x4797 : any) -> any_to_js x4797
    type ('T, 'K) t_2 = ('T, 'K) t
    let rec t_2_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t_2 = fun
      (type __T) -> fun (type __K) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (x4802 : Ojs.t) -> t_of_js __T_of_js __K_of_js x4802
    and t_2_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t_2 -> Ojs.t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (x4799 : (__T, __K) t) -> t_to_js __T_to_js __K_to_js x4799
  end
module Exclude =
  struct
    type ('T, 'U) t = any
    let rec t_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__U_of_js : Ojs.t -> __U) ->
          fun (x4806 : Ojs.t) -> any_of_js x4806
    and t_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t -> Ojs.t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__U_to_js : __U -> Ojs.t) ->
          fun (x4805 : any) -> any_to_js x4805
    type ('T, 'U) t_2 = ('T, 'U) t
    let rec t_2_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t_2 = fun
      (type __T) -> fun (type __U) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__U_of_js : Ojs.t -> __U) ->
          fun (x4810 : Ojs.t) -> t_of_js __T_of_js __U_of_js x4810
    and t_2_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t_2 -> Ojs.t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__U_to_js : __U -> Ojs.t) ->
          fun (x4807 : (__T, __U) t) -> t_to_js __T_to_js __U_to_js x4807
  end
module Omit =
  struct
    type ('T, 'K) t = ('T, (any, 'K) Exclude.t) Pick.t
    let rec t_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (x4818 : Ojs.t) ->
            Pick.t_of_js __T_of_js
              (fun (x4820 : Ojs.t) ->
                 Exclude.t_of_js any_of_js __K_of_js x4820) x4818
    and t_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t -> Ojs.t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (x4813 : (__T, (any, __K) Exclude.t) Pick.t) ->
            Pick.t_to_js __T_to_js
              (fun (x4815 : (any, __K) Exclude.t) ->
                 Exclude.t_to_js any_to_js __K_to_js x4815) x4813
    type ('T, 'K) t_2 = ('T, 'K) t
    let rec t_2_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t_2 = fun
      (type __T) -> fun (type __K) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (x4826 : Ojs.t) -> t_of_js __T_of_js __K_of_js x4826
    and t_2_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t_2 -> Ojs.t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (x4823 : (__T, __K) t) -> t_to_js __T_to_js __K_to_js x4823
  end
module Number =
  struct
    type t = [ `Number ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4830 : Ojs.t) -> t_of_js x4830
    and t_0_to_js : t_0 -> Ojs.t = fun (x4829 : t) -> t_to_js x4829
    type tags = [ `Number ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Number ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4833 : Ojs.t) -> intf_of_js __tags_of_js x4833
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4831 : __tags intf) -> intf_to_js __tags_to_js x4831
    let (toLocaleString :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] ->
          ?options:Intl.NumberFormatOptions.t -> unit -> string)
      =
      fun (x4843 : 'tags this) ->
        fun ?locales:(x4835 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun ?options:(x4836 : Intl.NumberFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x4845 = this_to_js Obj.magic x4843 in
                 Ojs.call (Ojs.get_prop_ascii x4845 "toLocaleString") "apply"
                   [|x4845;((let x4837 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4835 with
                              | Some x4839 ->
                                  ignore
                                    (Ojs.call x4837 "push"
                                       [|((match x4839 with
                                           | `U1 x4840 ->
                                               Ojs.string_to_js x4840
                                           | `U2 x4841 ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x4841))|])
                              | None -> ());
                             (match x4836 with
                              | Some x4838 ->
                                  ignore
                                    (Ojs.call x4837 "push"
                                       [|(Intl.NumberFormatOptions.t_to_js
                                            x4838)|])
                              | None -> ());
                             x4837))|])
    let (toString : 'tags this -> ?radix:float -> unit -> string) =
      fun (x4849 : 'tags this) ->
        fun ?radix:(x4846 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x4851 = this_to_js Obj.magic x4849 in
               Ojs.call (Ojs.get_prop_ascii x4851 "toString") "apply"
                 [|x4851;((let x4847 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4846 with
                            | Some x4848 ->
                                ignore
                                  (Ojs.call x4847 "push"
                                     [|(Ojs.float_to_js x4848)|])
                            | None -> ());
                           x4847))|])
    let (toFixed : 'tags this -> ?fractionDigits:float -> unit -> string) =
      fun (x4855 : 'tags this) ->
        fun ?fractionDigits:(x4852 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x4857 = this_to_js Obj.magic x4855 in
               Ojs.call (Ojs.get_prop_ascii x4857 "toFixed") "apply"
                 [|x4857;((let x4853 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4852 with
                            | Some x4854 ->
                                ignore
                                  (Ojs.call x4853 "push"
                                     [|(Ojs.float_to_js x4854)|])
                            | None -> ());
                           x4853))|])
    let (toExponential :
      'tags this -> ?fractionDigits:float -> unit -> string) =
      fun (x4861 : 'tags this) ->
        fun ?fractionDigits:(x4858 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x4863 = this_to_js Obj.magic x4861 in
               Ojs.call (Ojs.get_prop_ascii x4863 "toExponential") "apply"
                 [|x4863;((let x4859 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4858 with
                            | Some x4860 ->
                                ignore
                                  (Ojs.call x4859 "push"
                                     [|(Ojs.float_to_js x4860)|])
                            | None -> ());
                           x4859))|])
    let (toPrecision : 'tags this -> ?precision:float -> unit -> string) =
      fun (x4867 : 'tags this) ->
        fun ?precision:(x4864 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x4869 = this_to_js Obj.magic x4867 in
               Ojs.call (Ojs.get_prop_ascii x4869 "toPrecision") "apply"
                 [|x4869;((let x4865 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4864 with
                            | Some x4866 ->
                                ignore
                                  (Ojs.call x4865 "push"
                                     [|(Ojs.float_to_js x4866)|])
                            | None -> ());
                           x4865))|])
    let (valueOf : 'tags this -> float) =
      fun (x4870 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x4870) "valueOf" [||])
    let (epsilon : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "EPSILON")
    let (isFinite : unknown -> bool) =
      fun (x4872 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isFinite"
             [|(unknown_to_js x4872)|])
    let (isInteger : unknown -> bool) =
      fun (x4873 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isInteger"
             [|(unknown_to_js x4873)|])
    let (isNaN : unknown -> bool) =
      fun (x4874 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isNaN"
             [|(unknown_to_js x4874)|])
    let (isSafeInteger : unknown -> bool) =
      fun (x4875 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isSafeInteger"
             [|(unknown_to_js x4875)|])
    let (max_safe_integer : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MAX_SAFE_INTEGER")
    let (min_safe_integer : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MIN_SAFE_INTEGER")
    let (parseFloat : string -> float) =
      fun (x4876 : string) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "parseFloat"
             [|(Ojs.string_to_js x4876)|])
    let (parseInt : string:string -> ?radix:float -> unit -> float) =
      fun ~string:(x4877 : string) ->
        fun ?radix:(x4878 : float option) ->
          fun () ->
            Ojs.float_of_js
              (let x4881 = Ojs.get_prop_ascii Ojs.global "Number" in
               Ojs.call (Ojs.get_prop_ascii x4881 "parseInt") "apply"
                 [|x4881;((let x4879 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x4879 "push"
                                [|(Ojs.string_to_js x4877)|]);
                           (match x4878 with
                            | Some x4880 ->
                                ignore
                                  (Ojs.call x4879 "push"
                                     [|(Ojs.float_to_js x4880)|])
                            | None -> ());
                           x4879))|])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x4882 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Number")
               (let x4883 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4882 with
                 | Some x4884 ->
                     ignore (Ojs.call x4883 "push" [|(any_to_js x4884)|])
                 | None -> ());
                x4883))
    let (invoke : ?value:any -> unit -> float) =
      fun ?value:(x4885 : any option) ->
        fun () ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "apply"
               [|Ojs.null;((let x4886 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x4885 with
                             | Some x4887 ->
                                 ignore
                                   (Ojs.call x4886 "push"
                                      [|(any_to_js x4887)|])
                             | None -> ());
                            x4886))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "prototype")
    let (max_value : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MAX_VALUE")
    let (min_value : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MIN_VALUE")
    let (nan : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number") "NaN")
    let (negative_infinity : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "NEGATIVE_INFINITY")
    let (positive_infinity : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "POSITIVE_INFINITY")
    let cast_from = Obj.magic
    let (of_ml : float -> t) =
      fun (x4888 : float) -> t_of_js (Ojs.float_to_js x4888)
    let (to_ml : t -> float) =
      fun (x4889 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x4889) "valueOf" [||])
  end
module NonNullable =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4891 : Ojs.t) -> any_of_js x4891
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x4890 : any) -> any_to_js x4890
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4894 : Ojs.t) -> t_of_js __T_of_js x4894
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4892 : __T t) -> t_to_js __T_to_js x4892
  end
module NewableFunction =
  struct
    module AnonymousInterface43 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) -> fun (x4897 : Ojs.t) -> x4897
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) -> fun (x4896 : Ojs.t) -> x4896
        let (create : 'T t -> 'T) =
          fun (x4898 : 'T t) ->
            Obj.magic (Ojs.new_obj (t_to_js Obj.magic x4898) [||])
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
              fun (__T_of_js : Ojs.t -> __T) ->
                fun (x4902 : Ojs.t) -> t_of_js __T_of_js x4902
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t = fun
              (type __T) ->
              fun (__T_to_js : __T -> Ojs.t) ->
                fun (x4900 : __T t) -> t_to_js __T_to_js x4900
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x4906 : Ojs.t) -> parent_of_js T.t_of_js x4906
            and t_to_js : t -> Ojs.t =
              fun (x4904 : T.t parent) -> parent_to_js T.t_to_js x4904
            let (create : t -> T.t) =
              fun (x4908 : t) -> T.t_of_js (Ojs.new_obj (t_to_js x4908) [||])
          end
      end
    module AnonymousInterface39 =
      struct
        type ('AX, 'R) t = Ojs.t
        let rec t_of_js :
          'AX 'R . (Ojs.t -> 'AX) -> (Ojs.t -> 'R) -> Ojs.t -> ('AX, 'R) t =
          fun (type __AX) -> fun (type __R) ->
          fun (__AX_of_js : Ojs.t -> __AX) ->
            fun (__R_of_js : Ojs.t -> __R) -> fun (x4910 : Ojs.t) -> x4910
        and t_to_js :
          'AX 'R . ('AX -> Ojs.t) -> ('R -> Ojs.t) -> ('AX, 'R) t -> Ojs.t =
          fun (type __AX) -> fun (type __R) ->
          fun (__AX_to_js : __AX -> Ojs.t) ->
            fun (__R_to_js : __R -> Ojs.t) -> fun (x4909 : Ojs.t) -> x4909
        let (create : ('AX, 'R) t -> args:'AX list -> 'R) =
          fun (x4914 : ('AX, 'R) t) ->
            fun ~args:(x4911 : 'AX list) ->
              Obj.magic
                (Ojs.new_obj_arr (t_to_js Obj.magic Obj.magic x4914)
                   (let x4912 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x4913 : 'AX) ->
                         ignore (Ojs.call x4912 "push" [|(Obj.magic x4913)|]))
                      x4911;
                    x4912))
        module Make(AX:Ojs.T)(R:Ojs.T) =
          struct
            type ('AX, 'R) parent = ('AX, 'R) t
            let rec parent_of_js :
              'AX 'R .
                (Ojs.t -> 'AX) -> (Ojs.t -> 'R) -> Ojs.t -> ('AX, 'R) parent
              = fun (type __AX) -> fun (type __R) ->
              fun (__AX_of_js : Ojs.t -> __AX) ->
                fun (__R_of_js : Ojs.t -> __R) ->
                  fun (x4920 : Ojs.t) -> t_of_js __AX_of_js __R_of_js x4920
            and parent_to_js :
              'AX 'R .
                ('AX -> Ojs.t) -> ('R -> Ojs.t) -> ('AX, 'R) parent -> Ojs.t
              = fun (type __AX) -> fun (type __R) ->
              fun (__AX_to_js : __AX -> Ojs.t) ->
                fun (__R_to_js : __R -> Ojs.t) ->
                  fun (x4917 : (__AX, __R) t) ->
                    t_to_js __AX_to_js __R_to_js x4917
            type t = (AX.t, R.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x4926 : Ojs.t) -> parent_of_js AX.t_of_js R.t_of_js x4926
            and t_to_js : t -> Ojs.t =
              fun (x4923 : (AX.t, R.t) parent) ->
                parent_to_js AX.t_to_js R.t_to_js x4923
            let (create : t -> args:AX.t list -> R.t) =
              fun (x4932 : t) ->
                fun ~args:(x4929 : AX.t list) ->
                  R.t_of_js
                    (Ojs.new_obj_arr (t_to_js x4932)
                       (let x4930 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x4931 : AX.t) ->
                             ignore
                               (Ojs.call x4930 "push" [|(AX.t_to_js x4931)|]))
                          x4929;
                        x4930))
          end
      end
    module AnonymousInterface36 =
      struct
        type ('A, 'T) t = Ojs.t
        let rec t_of_js :
          'A 'T . (Ojs.t -> 'A) -> (Ojs.t -> 'T) -> Ojs.t -> ('A, 'T) t = fun
          (type __A) -> fun (type __T) ->
          fun (__A_of_js : Ojs.t -> __A) ->
            fun (__T_of_js : Ojs.t -> __T) -> fun (x4934 : Ojs.t) -> x4934
        and t_to_js :
          'A 'T . ('A -> Ojs.t) -> ('T -> Ojs.t) -> ('A, 'T) t -> Ojs.t = fun
          (type __A) -> fun (type __T) ->
          fun (__A_to_js : __A -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) -> fun (x4933 : Ojs.t) -> x4933
        let (create : ('A, 'T) t -> args:any list -> 'T) =
          fun (x4938 : ('A, 'T) t) ->
            fun ~args:(x4935 : any list) ->
              Obj.magic
                (Ojs.new_obj_arr (t_to_js Obj.magic Obj.magic x4938)
                   (let x4936 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x4937 : any) ->
                         ignore (Ojs.call x4936 "push" [|(any_to_js x4937)|]))
                      x4935;
                    x4936))
        module Make(A:Ojs.T)(T:Ojs.T) =
          struct
            type ('A, 'T) parent = ('A, 'T) t
            let rec parent_of_js :
              'A 'T .
                (Ojs.t -> 'A) -> (Ojs.t -> 'T) -> Ojs.t -> ('A, 'T) parent
              = fun (type __A) -> fun (type __T) ->
              fun (__A_of_js : Ojs.t -> __A) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (x4944 : Ojs.t) -> t_of_js __A_of_js __T_of_js x4944
            and parent_to_js :
              'A 'T .
                ('A -> Ojs.t) -> ('T -> Ojs.t) -> ('A, 'T) parent -> Ojs.t
              = fun (type __A) -> fun (type __T) ->
              fun (__A_to_js : __A -> Ojs.t) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (x4941 : (__A, __T) t) ->
                    t_to_js __A_to_js __T_to_js x4941
            type t = (A.t, T.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x4950 : Ojs.t) -> parent_of_js A.t_of_js T.t_of_js x4950
            and t_to_js : t -> Ojs.t =
              fun (x4947 : (A.t, T.t) parent) ->
                parent_to_js A.t_to_js T.t_to_js x4947
            let (create : t -> args:any list -> T.t) =
              fun (x4956 : t) ->
                fun ~args:(x4953 : any list) ->
                  T.t_of_js
                    (Ojs.new_obj_arr (t_to_js x4956)
                       (let x4954 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x4955 : any) ->
                             ignore
                               (Ojs.call x4954 "push" [|(any_to_js x4955)|]))
                          x4953;
                        x4954))
          end
      end
    module AnonymousInterface33 =
      struct
        type ('A, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'R . (Ojs.t -> 'A) -> (Ojs.t -> 'R) -> Ojs.t -> ('A, 'R) t = fun
          (type __A) -> fun (type __R) ->
          fun (__A_of_js : Ojs.t -> __A) ->
            fun (__R_of_js : Ojs.t -> __R) -> fun (x4958 : Ojs.t) -> x4958
        and t_to_js :
          'A 'R . ('A -> Ojs.t) -> ('R -> Ojs.t) -> ('A, 'R) t -> Ojs.t = fun
          (type __A) -> fun (type __R) ->
          fun (__A_to_js : __A -> Ojs.t) ->
            fun (__R_to_js : __R -> Ojs.t) -> fun (x4957 : Ojs.t) -> x4957
        let (create : ('A, 'R) t -> args:any list -> 'R) =
          fun (x4962 : ('A, 'R) t) ->
            fun ~args:(x4959 : any list) ->
              Obj.magic
                (Ojs.new_obj_arr (t_to_js Obj.magic Obj.magic x4962)
                   (let x4960 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x4961 : any) ->
                         ignore (Ojs.call x4960 "push" [|(any_to_js x4961)|]))
                      x4959;
                    x4960))
        module Make(A:Ojs.T)(R:Ojs.T) =
          struct
            type ('A, 'R) parent = ('A, 'R) t
            let rec parent_of_js :
              'A 'R .
                (Ojs.t -> 'A) -> (Ojs.t -> 'R) -> Ojs.t -> ('A, 'R) parent
              = fun (type __A) -> fun (type __R) ->
              fun (__A_of_js : Ojs.t -> __A) ->
                fun (__R_of_js : Ojs.t -> __R) ->
                  fun (x4968 : Ojs.t) -> t_of_js __A_of_js __R_of_js x4968
            and parent_to_js :
              'A 'R .
                ('A -> Ojs.t) -> ('R -> Ojs.t) -> ('A, 'R) parent -> Ojs.t
              = fun (type __A) -> fun (type __R) ->
              fun (__A_to_js : __A -> Ojs.t) ->
                fun (__R_to_js : __R -> Ojs.t) ->
                  fun (x4965 : (__A, __R) t) ->
                    t_to_js __A_to_js __R_to_js x4965
            type t = (A.t, R.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x4974 : Ojs.t) -> parent_of_js A.t_of_js R.t_of_js x4974
            and t_to_js : t -> Ojs.t =
              fun (x4971 : (A.t, R.t) parent) ->
                parent_to_js A.t_to_js R.t_to_js x4971
            let (create : t -> args:any list -> R.t) =
              fun (x4980 : t) ->
                fun ~args:(x4977 : any list) ->
                  R.t_of_js
                    (Ojs.new_obj_arr (t_to_js x4980)
                       (let x4978 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x4979 : any) ->
                             ignore
                               (Ojs.call x4978 "push" [|(any_to_js x4979)|]))
                          x4977;
                        x4978))
          end
      end
    module AnonymousInterface31 =
      struct
        type ('A, 'A0, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'A0 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) -> (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'R) t
          = fun (type __A) -> fun (type __A0) -> fun (type __R) ->
          fun (__A_of_js : Ojs.t -> __A) ->
            fun (__A0_of_js : Ojs.t -> __A0) ->
              fun (__R_of_js : Ojs.t -> __R) -> fun (x4982 : Ojs.t) -> x4982
        and t_to_js :
          'A 'A0 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) -> ('R -> Ojs.t) -> ('A, 'A0, 'R) t -> Ojs.t
          = fun (type __A) -> fun (type __A0) -> fun (type __R) ->
          fun (__A_to_js : __A -> Ojs.t) ->
            fun (__A0_to_js : __A0 -> Ojs.t) ->
              fun (__R_to_js : __R -> Ojs.t) -> fun (x4981 : Ojs.t) -> x4981
        let (create : ('A, 'A0, 'R) t -> arg0:'A0 -> args:any list -> 'R) =
          fun (x4987 : ('A, 'A0, 'R) t) ->
            fun ~arg0:(x4983 : 'A0) ->
              fun ~args:(x4984 : any list) ->
                Obj.magic
                  (Ojs.new_obj_arr
                     (t_to_js Obj.magic Obj.magic Obj.magic x4987)
                     (let x4985 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore (Ojs.call x4985 "push" [|(Obj.magic x4983)|]);
                      List.iter
                        (fun (x4986 : any) ->
                           ignore
                             (Ojs.call x4985 "push" [|(any_to_js x4986)|]))
                        x4984;
                      x4985))
        module Make(A:Ojs.T)(A0:Ojs.T)(R:Ojs.T) =
          struct
            type ('A, 'A0, 'R) parent = ('A, 'A0, 'R) t
            let rec parent_of_js :
              'A 'A0 'R .
                (Ojs.t -> 'A) ->
                  (Ojs.t -> 'A0) ->
                    (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'R) parent
              = fun (type __A) -> fun (type __A0) -> fun (type __R) ->
              fun (__A_of_js : Ojs.t -> __A) ->
                fun (__A0_of_js : Ojs.t -> __A0) ->
                  fun (__R_of_js : Ojs.t -> __R) ->
                    fun (x4995 : Ojs.t) ->
                      t_of_js __A_of_js __A0_of_js __R_of_js x4995
            and parent_to_js :
              'A 'A0 'R .
                ('A -> Ojs.t) ->
                  ('A0 -> Ojs.t) ->
                    ('R -> Ojs.t) -> ('A, 'A0, 'R) parent -> Ojs.t
              = fun (type __A) -> fun (type __A0) -> fun (type __R) ->
              fun (__A_to_js : __A -> Ojs.t) ->
                fun (__A0_to_js : __A0 -> Ojs.t) ->
                  fun (__R_to_js : __R -> Ojs.t) ->
                    fun (x4991 : (__A, __A0, __R) t) ->
                      t_to_js __A_to_js __A0_to_js __R_to_js x4991
            type t = (A.t, A0.t, R.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5003 : Ojs.t) ->
                parent_of_js A.t_of_js A0.t_of_js R.t_of_js x5003
            and t_to_js : t -> Ojs.t =
              fun (x4999 : (A.t, A0.t, R.t) parent) ->
                parent_to_js A.t_to_js A0.t_to_js R.t_to_js x4999
            let (create : t -> arg0:A0.t -> args:any list -> R.t) =
              fun (x5011 : t) ->
                fun ~arg0:(x5007 : A0.t) ->
                  fun ~args:(x5008 : any list) ->
                    R.t_of_js
                      (Ojs.new_obj_arr (t_to_js x5011)
                         (let x5009 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          ignore
                            (Ojs.call x5009 "push" [|(A0.t_to_js x5007)|]);
                          List.iter
                            (fun (x5010 : any) ->
                               ignore
                                 (Ojs.call x5009 "push" [|(any_to_js x5010)|]))
                            x5008;
                          x5009))
          end
      end
    module AnonymousInterface29 =
      struct
        type ('A, 'A0, 'A1, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'A0 'A1 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'A1) ->
                  (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'A1, 'R) t
          = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun (type
          __R) ->
          fun (__A_of_js : Ojs.t -> __A) ->
            fun (__A0_of_js : Ojs.t -> __A0) ->
              fun (__A1_of_js : Ojs.t -> __A1) ->
                fun (__R_of_js : Ojs.t -> __R) ->
                  fun (x5013 : Ojs.t) -> x5013
        and t_to_js :
          'A 'A0 'A1 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('A1 -> Ojs.t) ->
                  ('R -> Ojs.t) -> ('A, 'A0, 'A1, 'R) t -> Ojs.t
          = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun (type
          __R) ->
          fun (__A_to_js : __A -> Ojs.t) ->
            fun (__A0_to_js : __A0 -> Ojs.t) ->
              fun (__A1_to_js : __A1 -> Ojs.t) ->
                fun (__R_to_js : __R -> Ojs.t) ->
                  fun (x5012 : Ojs.t) -> x5012
        let (create :
          ('A, 'A0, 'A1, 'R) t -> arg0:'A0 -> arg1:'A1 -> args:any list -> 'R)
          =
          fun (x5019 : ('A, 'A0, 'A1, 'R) t) ->
            fun ~arg0:(x5014 : 'A0) ->
              fun ~arg1:(x5015 : 'A1) ->
                fun ~args:(x5016 : any list) ->
                  Obj.magic
                    (Ojs.new_obj_arr
                       (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic x5019)
                       (let x5017 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        ignore (Ojs.call x5017 "push" [|(Obj.magic x5014)|]);
                        ignore (Ojs.call x5017 "push" [|(Obj.magic x5015)|]);
                        List.iter
                          (fun (x5018 : any) ->
                             ignore
                               (Ojs.call x5017 "push" [|(any_to_js x5018)|]))
                          x5016;
                        x5017))
        module Make(A:Ojs.T)(A0:Ojs.T)(A1:Ojs.T)(R:Ojs.T) =
          struct
            type ('A, 'A0, 'A1, 'R) parent = ('A, 'A0, 'A1, 'R) t
            let rec parent_of_js :
              'A 'A0 'A1 'R .
                (Ojs.t -> 'A) ->
                  (Ojs.t -> 'A0) ->
                    (Ojs.t -> 'A1) ->
                      (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'A1, 'R) parent
              = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun
              (type __R) ->
              fun (__A_of_js : Ojs.t -> __A) ->
                fun (__A0_of_js : Ojs.t -> __A0) ->
                  fun (__A1_of_js : Ojs.t -> __A1) ->
                    fun (__R_of_js : Ojs.t -> __R) ->
                      fun (x5029 : Ojs.t) ->
                        t_of_js __A_of_js __A0_of_js __A1_of_js __R_of_js
                          x5029
            and parent_to_js :
              'A 'A0 'A1 'R .
                ('A -> Ojs.t) ->
                  ('A0 -> Ojs.t) ->
                    ('A1 -> Ojs.t) ->
                      ('R -> Ojs.t) -> ('A, 'A0, 'A1, 'R) parent -> Ojs.t
              = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun
              (type __R) ->
              fun (__A_to_js : __A -> Ojs.t) ->
                fun (__A0_to_js : __A0 -> Ojs.t) ->
                  fun (__A1_to_js : __A1 -> Ojs.t) ->
                    fun (__R_to_js : __R -> Ojs.t) ->
                      fun (x5024 : (__A, __A0, __A1, __R) t) ->
                        t_to_js __A_to_js __A0_to_js __A1_to_js __R_to_js
                          x5024
            type t = (A.t, A0.t, A1.t, R.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5039 : Ojs.t) ->
                parent_of_js A.t_of_js A0.t_of_js A1.t_of_js R.t_of_js x5039
            and t_to_js : t -> Ojs.t =
              fun (x5034 : (A.t, A0.t, A1.t, R.t) parent) ->
                parent_to_js A.t_to_js A0.t_to_js A1.t_to_js R.t_to_js x5034
            let (create :
              t -> arg0:A0.t -> arg1:A1.t -> args:any list -> R.t) =
              fun (x5049 : t) ->
                fun ~arg0:(x5044 : A0.t) ->
                  fun ~arg1:(x5045 : A1.t) ->
                    fun ~args:(x5046 : any list) ->
                      R.t_of_js
                        (Ojs.new_obj_arr (t_to_js x5049)
                           (let x5047 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x5047 "push" [|(A0.t_to_js x5044)|]);
                            ignore
                              (Ojs.call x5047 "push" [|(A1.t_to_js x5045)|]);
                            List.iter
                              (fun (x5048 : any) ->
                                 ignore
                                   (Ojs.call x5047 "push"
                                      [|(any_to_js x5048)|])) x5046;
                            x5047))
          end
      end
    module AnonymousInterface27 =
      struct
        type ('A, 'A0, 'A1, 'A2, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'A0 'A1 'A2 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'A1) ->
                  (Ojs.t -> 'A2) ->
                    (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'A1, 'A2, 'R) t
          = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun (type
          __A2) -> fun (type __R) ->
          fun (__A_of_js : Ojs.t -> __A) ->
            fun (__A0_of_js : Ojs.t -> __A0) ->
              fun (__A1_of_js : Ojs.t -> __A1) ->
                fun (__A2_of_js : Ojs.t -> __A2) ->
                  fun (__R_of_js : Ojs.t -> __R) ->
                    fun (x5051 : Ojs.t) -> x5051
        and t_to_js :
          'A 'A0 'A1 'A2 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('A1 -> Ojs.t) ->
                  ('A2 -> Ojs.t) ->
                    ('R -> Ojs.t) -> ('A, 'A0, 'A1, 'A2, 'R) t -> Ojs.t
          = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun (type
          __A2) -> fun (type __R) ->
          fun (__A_to_js : __A -> Ojs.t) ->
            fun (__A0_to_js : __A0 -> Ojs.t) ->
              fun (__A1_to_js : __A1 -> Ojs.t) ->
                fun (__A2_to_js : __A2 -> Ojs.t) ->
                  fun (__R_to_js : __R -> Ojs.t) ->
                    fun (x5050 : Ojs.t) -> x5050
        let (create :
          ('A, 'A0, 'A1, 'A2, 'R) t ->
            arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> args:any list -> 'R)
          =
          fun (x5058 : ('A, 'A0, 'A1, 'A2, 'R) t) ->
            fun ~arg0:(x5052 : 'A0) ->
              fun ~arg1:(x5053 : 'A1) ->
                fun ~arg2:(x5054 : 'A2) ->
                  fun ~args:(x5055 : any list) ->
                    Obj.magic
                      (Ojs.new_obj_arr
                         (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic
                            Obj.magic x5058)
                         (let x5056 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          ignore
                            (Ojs.call x5056 "push" [|(Obj.magic x5052)|]);
                          ignore
                            (Ojs.call x5056 "push" [|(Obj.magic x5053)|]);
                          ignore
                            (Ojs.call x5056 "push" [|(Obj.magic x5054)|]);
                          List.iter
                            (fun (x5057 : any) ->
                               ignore
                                 (Ojs.call x5056 "push" [|(any_to_js x5057)|]))
                            x5055;
                          x5056))
        module Make(A:Ojs.T)(A0:Ojs.T)(A1:Ojs.T)(A2:Ojs.T)(R:Ojs.T) =
          struct
            type ('A, 'A0, 'A1, 'A2, 'R) parent = ('A, 'A0, 'A1, 'A2, 'R) t
            let rec parent_of_js :
              'A 'A0 'A1 'A2 'R .
                (Ojs.t -> 'A) ->
                  (Ojs.t -> 'A0) ->
                    (Ojs.t -> 'A1) ->
                      (Ojs.t -> 'A2) ->
                        (Ojs.t -> 'R) ->
                          Ojs.t -> ('A, 'A0, 'A1, 'A2, 'R) parent
              = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun
              (type __A2) -> fun (type __R) ->
              fun (__A_of_js : Ojs.t -> __A) ->
                fun (__A0_of_js : Ojs.t -> __A0) ->
                  fun (__A1_of_js : Ojs.t -> __A1) ->
                    fun (__A2_of_js : Ojs.t -> __A2) ->
                      fun (__R_of_js : Ojs.t -> __R) ->
                        fun (x5070 : Ojs.t) ->
                          t_of_js __A_of_js __A0_of_js __A1_of_js __A2_of_js
                            __R_of_js x5070
            and parent_to_js :
              'A 'A0 'A1 'A2 'R .
                ('A -> Ojs.t) ->
                  ('A0 -> Ojs.t) ->
                    ('A1 -> Ojs.t) ->
                      ('A2 -> Ojs.t) ->
                        ('R -> Ojs.t) ->
                          ('A, 'A0, 'A1, 'A2, 'R) parent -> Ojs.t
              = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun
              (type __A2) -> fun (type __R) ->
              fun (__A_to_js : __A -> Ojs.t) ->
                fun (__A0_to_js : __A0 -> Ojs.t) ->
                  fun (__A1_to_js : __A1 -> Ojs.t) ->
                    fun (__A2_to_js : __A2 -> Ojs.t) ->
                      fun (__R_to_js : __R -> Ojs.t) ->
                        fun (x5064 : (__A, __A0, __A1, __A2, __R) t) ->
                          t_to_js __A_to_js __A0_to_js __A1_to_js __A2_to_js
                            __R_to_js x5064
            type t = (A.t, A0.t, A1.t, A2.t, R.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5082 : Ojs.t) ->
                parent_of_js A.t_of_js A0.t_of_js A1.t_of_js A2.t_of_js
                  R.t_of_js x5082
            and t_to_js : t -> Ojs.t =
              fun (x5076 : (A.t, A0.t, A1.t, A2.t, R.t) parent) ->
                parent_to_js A.t_to_js A0.t_to_js A1.t_to_js A2.t_to_js
                  R.t_to_js x5076
            let (create :
              t ->
                arg0:A0.t -> arg1:A1.t -> arg2:A2.t -> args:any list -> R.t)
              =
              fun (x5094 : t) ->
                fun ~arg0:(x5088 : A0.t) ->
                  fun ~arg1:(x5089 : A1.t) ->
                    fun ~arg2:(x5090 : A2.t) ->
                      fun ~args:(x5091 : any list) ->
                        R.t_of_js
                          (Ojs.new_obj_arr (t_to_js x5094)
                             (let x5092 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x5092 "push" [|(A0.t_to_js x5088)|]);
                              ignore
                                (Ojs.call x5092 "push" [|(A1.t_to_js x5089)|]);
                              ignore
                                (Ojs.call x5092 "push" [|(A2.t_to_js x5090)|]);
                              List.iter
                                (fun (x5093 : any) ->
                                   ignore
                                     (Ojs.call x5092 "push"
                                        [|(any_to_js x5093)|])) x5091;
                              x5092))
          end
      end
    module AnonymousInterface25 =
      struct
        type ('A, 'A0, 'A1, 'A2, 'A3, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'A0 'A1 'A2 'A3 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'A1) ->
                  (Ojs.t -> 'A2) ->
                    (Ojs.t -> 'A3) ->
                      (Ojs.t -> 'R) ->
                        Ojs.t -> ('A, 'A0, 'A1, 'A2, 'A3, 'R) t
          = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun (type
          __A2) -> fun (type __A3) -> fun (type __R) ->
          fun (__A_of_js : Ojs.t -> __A) ->
            fun (__A0_of_js : Ojs.t -> __A0) ->
              fun (__A1_of_js : Ojs.t -> __A1) ->
                fun (__A2_of_js : Ojs.t -> __A2) ->
                  fun (__A3_of_js : Ojs.t -> __A3) ->
                    fun (__R_of_js : Ojs.t -> __R) ->
                      fun (x5096 : Ojs.t) -> x5096
        and t_to_js :
          'A 'A0 'A1 'A2 'A3 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('A1 -> Ojs.t) ->
                  ('A2 -> Ojs.t) ->
                    ('A3 -> Ojs.t) ->
                      ('R -> Ojs.t) ->
                        ('A, 'A0, 'A1, 'A2, 'A3, 'R) t -> Ojs.t
          = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun (type
          __A2) -> fun (type __A3) -> fun (type __R) ->
          fun (__A_to_js : __A -> Ojs.t) ->
            fun (__A0_to_js : __A0 -> Ojs.t) ->
              fun (__A1_to_js : __A1 -> Ojs.t) ->
                fun (__A2_to_js : __A2 -> Ojs.t) ->
                  fun (__A3_to_js : __A3 -> Ojs.t) ->
                    fun (__R_to_js : __R -> Ojs.t) ->
                      fun (x5095 : Ojs.t) -> x5095
        let (create :
          ('A, 'A0, 'A1, 'A2, 'A3, 'R) t ->
            arg0:'A0 ->
              arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> args:any list -> 'R)
          =
          fun (x5104 : ('A, 'A0, 'A1, 'A2, 'A3, 'R) t) ->
            fun ~arg0:(x5097 : 'A0) ->
              fun ~arg1:(x5098 : 'A1) ->
                fun ~arg2:(x5099 : 'A2) ->
                  fun ~arg3:(x5100 : 'A3) ->
                    fun ~args:(x5101 : any list) ->
                      Obj.magic
                        (Ojs.new_obj_arr
                           (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic
                              Obj.magic Obj.magic x5104)
                           (let x5102 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x5102 "push" [|(Obj.magic x5097)|]);
                            ignore
                              (Ojs.call x5102 "push" [|(Obj.magic x5098)|]);
                            ignore
                              (Ojs.call x5102 "push" [|(Obj.magic x5099)|]);
                            ignore
                              (Ojs.call x5102 "push" [|(Obj.magic x5100)|]);
                            List.iter
                              (fun (x5103 : any) ->
                                 ignore
                                   (Ojs.call x5102 "push"
                                      [|(any_to_js x5103)|])) x5101;
                            x5102))
        module Make(A:Ojs.T)(A0:Ojs.T)(A1:Ojs.T)(A2:Ojs.T)(A3:Ojs.T)(R:Ojs.T) =
          struct
            type ('A, 'A0, 'A1, 'A2, 'A3, 'R) parent =
              ('A, 'A0, 'A1, 'A2, 'A3, 'R) t
            let rec parent_of_js :
              'A 'A0 'A1 'A2 'A3 'R .
                (Ojs.t -> 'A) ->
                  (Ojs.t -> 'A0) ->
                    (Ojs.t -> 'A1) ->
                      (Ojs.t -> 'A2) ->
                        (Ojs.t -> 'A3) ->
                          (Ojs.t -> 'R) ->
                            Ojs.t -> ('A, 'A0, 'A1, 'A2, 'A3, 'R) parent
              = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun
              (type __A2) -> fun (type __A3) -> fun (type __R) ->
              fun (__A_of_js : Ojs.t -> __A) ->
                fun (__A0_of_js : Ojs.t -> __A0) ->
                  fun (__A1_of_js : Ojs.t -> __A1) ->
                    fun (__A2_of_js : Ojs.t -> __A2) ->
                      fun (__A3_of_js : Ojs.t -> __A3) ->
                        fun (__R_of_js : Ojs.t -> __R) ->
                          fun (x5118 : Ojs.t) ->
                            t_of_js __A_of_js __A0_of_js __A1_of_js
                              __A2_of_js __A3_of_js __R_of_js x5118
            and parent_to_js :
              'A 'A0 'A1 'A2 'A3 'R .
                ('A -> Ojs.t) ->
                  ('A0 -> Ojs.t) ->
                    ('A1 -> Ojs.t) ->
                      ('A2 -> Ojs.t) ->
                        ('A3 -> Ojs.t) ->
                          ('R -> Ojs.t) ->
                            ('A, 'A0, 'A1, 'A2, 'A3, 'R) parent -> Ojs.t
              = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun
              (type __A2) -> fun (type __A3) -> fun (type __R) ->
              fun (__A_to_js : __A -> Ojs.t) ->
                fun (__A0_to_js : __A0 -> Ojs.t) ->
                  fun (__A1_to_js : __A1 -> Ojs.t) ->
                    fun (__A2_to_js : __A2 -> Ojs.t) ->
                      fun (__A3_to_js : __A3 -> Ojs.t) ->
                        fun (__R_to_js : __R -> Ojs.t) ->
                          fun (x5111 : (__A, __A0, __A1, __A2, __A3, __R) t)
                            ->
                            t_to_js __A_to_js __A0_to_js __A1_to_js
                              __A2_to_js __A3_to_js __R_to_js x5111
            type t = (A.t, A0.t, A1.t, A2.t, A3.t, R.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5132 : Ojs.t) ->
                parent_of_js A.t_of_js A0.t_of_js A1.t_of_js A2.t_of_js
                  A3.t_of_js R.t_of_js x5132
            and t_to_js : t -> Ojs.t =
              fun (x5125 : (A.t, A0.t, A1.t, A2.t, A3.t, R.t) parent) ->
                parent_to_js A.t_to_js A0.t_to_js A1.t_to_js A2.t_to_js
                  A3.t_to_js R.t_to_js x5125
            let (create :
              t ->
                arg0:A0.t ->
                  arg1:A1.t -> arg2:A2.t -> arg3:A3.t -> args:any list -> R.t)
              =
              fun (x5146 : t) ->
                fun ~arg0:(x5139 : A0.t) ->
                  fun ~arg1:(x5140 : A1.t) ->
                    fun ~arg2:(x5141 : A2.t) ->
                      fun ~arg3:(x5142 : A3.t) ->
                        fun ~args:(x5143 : any list) ->
                          R.t_of_js
                            (Ojs.new_obj_arr (t_to_js x5146)
                               (let x5144 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x5144 "push"
                                     [|(A0.t_to_js x5139)|]);
                                ignore
                                  (Ojs.call x5144 "push"
                                     [|(A1.t_to_js x5140)|]);
                                ignore
                                  (Ojs.call x5144 "push"
                                     [|(A2.t_to_js x5141)|]);
                                ignore
                                  (Ojs.call x5144 "push"
                                     [|(A3.t_to_js x5142)|]);
                                List.iter
                                  (fun (x5145 : any) ->
                                     ignore
                                       (Ojs.call x5144 "push"
                                          [|(any_to_js x5145)|])) x5143;
                                x5144))
          end
      end
    type t = [ `Function  | `Function  | `NewableFunction ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5148 : Ojs.t) -> t_of_js x5148
    and t_0_to_js : t_0 -> Ojs.t = fun (x5147 : t) -> t_to_js x5147
    type tags = [ `Function  | `Function  | `NewableFunction ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `NewableFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5151 : Ojs.t) -> intf_of_js __tags_of_js x5151
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5149 : __tags intf) -> intf_to_js __tags_to_js x5149
    let (apply_ :
      'tags this -> this:'T AnonymousInterface43.t -> thisArg:'T -> unit) =
      fun (x5156 : 'tags this) ->
        fun ~this:(x5153 : 'T AnonymousInterface43.t) ->
          fun ~thisArg:(x5155 : 'T) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x5156) "apply"
                 [|(AnonymousInterface43.t_to_js Obj.magic x5153);(Obj.magic
                                                                    x5155)|])
    let (apply_' :
      'tags this ->
        this:('A, 'T) AnonymousInterface36.t -> thisArg:'T -> args:'A -> unit)
      =
      fun (x5163 : 'tags this) ->
        fun ~this:(x5158 : ('A, 'T) AnonymousInterface36.t) ->
          fun ~thisArg:(x5161 : 'T) ->
            fun ~args:(x5162 : 'A) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x5163) "apply"
                   [|(AnonymousInterface36.t_to_js Obj.magic Obj.magic x5158);(
                     Obj.magic x5161);(Obj.magic x5162)|])
    let (call :
      'tags this ->
        this:('A, 'T) AnonymousInterface36.t ->
          thisArg:'T -> args:any list -> unit)
      =
      fun (x5172 : 'tags this) ->
        fun ~this:(x5165 : ('A, 'T) AnonymousInterface36.t) ->
          fun ~thisArg:(x5166 : 'T) ->
            fun ~args:(x5167 : any list) ->
              ignore
                (let x5174 = this_to_js Obj.magic x5172 in
                 Ojs.call (Ojs.get_prop_ascii x5174 "call") "apply"
                   [|x5174;((let x5168 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5168 "push"
                                  [|(AnonymousInterface36.t_to_js Obj.magic
                                       Obj.magic x5165)|]);
                             ignore
                               (Ojs.call x5168 "push" [|(Obj.magic x5166)|]);
                             List.iter
                               (fun (x5169 : any) ->
                                  ignore
                                    (Ojs.call x5168 "push"
                                       [|(any_to_js x5169)|])) x5167;
                             x5168))|])
    let (bind : 'tags this -> this:'T -> thisArg:any -> 'T) =
      fun (x5177 : 'tags this) ->
        fun ~this:(x5175 : 'T) ->
          fun ~thisArg:(x5176 : any) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x5177) "bind"
                 [|(Obj.magic x5175);(any_to_js x5176)|])
    let (bind' :
      'tags this ->
        this:('A, 'A0, 'R) AnonymousInterface31.t ->
          thisArg:any -> arg0:'A0 -> ('A, 'R) AnonymousInterface33.t)
      =
      fun (x5185 : 'tags this) ->
        fun ~this:(x5179 : ('A, 'A0, 'R) AnonymousInterface31.t) ->
          fun ~thisArg:(x5183 : any) ->
            fun ~arg0:(x5184 : 'A0) ->
              AnonymousInterface33.t_of_js Obj.magic Obj.magic
                (Ojs.call (this_to_js Obj.magic x5185) "bind"
                   [|(AnonymousInterface31.t_to_js Obj.magic Obj.magic
                        Obj.magic x5179);(any_to_js x5183);(Obj.magic x5184)|])
    let (bind'' :
      'tags this ->
        this:('A, 'A0, 'A1, 'R) AnonymousInterface29.t ->
          thisArg:any ->
            arg0:'A0 -> arg1:'A1 -> ('A, 'R) AnonymousInterface33.t)
      =
      fun (x5197 : 'tags this) ->
        fun ~this:(x5189 : ('A, 'A0, 'A1, 'R) AnonymousInterface29.t) ->
          fun ~thisArg:(x5194 : any) ->
            fun ~arg0:(x5195 : 'A0) ->
              fun ~arg1:(x5196 : 'A1) ->
                AnonymousInterface33.t_of_js Obj.magic Obj.magic
                  (Ojs.call (this_to_js Obj.magic x5197) "bind"
                     [|(AnonymousInterface29.t_to_js Obj.magic Obj.magic
                          Obj.magic Obj.magic x5189);(any_to_js x5194);(
                       Obj.magic x5195);(Obj.magic x5196)|])
    let (bind''' :
      'tags this ->
        this:('A, 'A0, 'A1, 'A2, 'R) AnonymousInterface27.t ->
          thisArg:any ->
            arg0:'A0 ->
              arg1:'A1 -> arg2:'A2 -> ('A, 'R) AnonymousInterface33.t)
      =
      fun (x5211 : 'tags this) ->
        fun ~this:(x5201 : ('A, 'A0, 'A1, 'A2, 'R) AnonymousInterface27.t) ->
          fun ~thisArg:(x5207 : any) ->
            fun ~arg0:(x5208 : 'A0) ->
              fun ~arg1:(x5209 : 'A1) ->
                fun ~arg2:(x5210 : 'A2) ->
                  AnonymousInterface33.t_of_js Obj.magic Obj.magic
                    (Ojs.call (this_to_js Obj.magic x5211) "bind"
                       [|(AnonymousInterface27.t_to_js Obj.magic Obj.magic
                            Obj.magic Obj.magic Obj.magic x5201);(any_to_js
                                                                    x5207);(
                         Obj.magic x5208);(Obj.magic x5209);(Obj.magic x5210)|])
    let (bind'''' :
      'tags this ->
        this:('A, 'A0, 'A1, 'A2, 'A3, 'R) AnonymousInterface25.t ->
          thisArg:any ->
            arg0:'A0 ->
              arg1:'A1 ->
                arg2:'A2 -> arg3:'A3 -> ('A, 'R) AnonymousInterface33.t)
      =
      fun (x5227 : 'tags this) ->
        fun
          ~this:(x5215 : ('A, 'A0, 'A1, 'A2, 'A3, 'R) AnonymousInterface25.t)
          ->
          fun ~thisArg:(x5222 : any) ->
            fun ~arg0:(x5223 : 'A0) ->
              fun ~arg1:(x5224 : 'A1) ->
                fun ~arg2:(x5225 : 'A2) ->
                  fun ~arg3:(x5226 : 'A3) ->
                    AnonymousInterface33.t_of_js Obj.magic Obj.magic
                      (Ojs.call (this_to_js Obj.magic x5227) "bind"
                         [|(AnonymousInterface25.t_to_js Obj.magic Obj.magic
                              Obj.magic Obj.magic Obj.magic Obj.magic x5215);(
                           any_to_js x5222);(Obj.magic x5223);(Obj.magic
                                                                 x5224);(
                           Obj.magic x5225);(Obj.magic x5226)|])
    let (bind''''' :
      'tags this ->
        this:('AX, 'R) AnonymousInterface39.t ->
          thisArg:any -> args:'AX list -> ('AX, 'R) AnonymousInterface39.t)
      =
      fun (x5238 : 'tags this) ->
        fun ~this:(x5231 : ('AX, 'R) AnonymousInterface39.t) ->
          fun ~thisArg:(x5232 : any) ->
            fun ~args:(x5233 : 'AX list) ->
              AnonymousInterface39.t_of_js Obj.magic Obj.magic
                (let x5240 = this_to_js Obj.magic x5238 in
                 Ojs.call (Ojs.get_prop_ascii x5240 "bind") "apply"
                   [|x5240;((let x5234 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5234 "push"
                                  [|(AnonymousInterface39.t_to_js Obj.magic
                                       Obj.magic x5231)|]);
                             ignore
                               (Ojs.call x5234 "push" [|(any_to_js x5232)|]);
                             List.iter
                               (fun (x5235 : 'AX) ->
                                  ignore
                                    (Ojs.call x5234 "push"
                                       [|(Obj.magic x5235)|])) x5233;
                             x5234))|])
    let cast_from = Obj.magic
  end
module TypedPropertyDescriptor =
  struct
    type 'T t = [ `TypedPropertyDescriptor of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x5245 : Ojs.t) -> t_of_js __T_of_js x5245
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x5243 : __T t) -> t_to_js __T_to_js x5243
    type 'T tags = [ `TypedPropertyDescriptor of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `TypedPropertyDescriptor of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x5249 : Ojs.t) -> intf_of_js __tags_of_js x5249
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x5247 : __tags intf) -> intf_to_js __tags_to_js x5247
    let (get_enumerable : ('tags, 'T) this -> bool) =
      fun (x5251 : ('tags, 'T) this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x5251)
             "enumerable")
    let (set_enumerable : ('tags, 'T) this -> bool -> unit) =
      fun (x5254 : ('tags, 'T) this) ->
        fun (x5255 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x5254)
            "enumerable" (Ojs.bool_to_js x5255)
    let (get_configurable : ('tags, 'T) this -> bool) =
      fun (x5258 : ('tags, 'T) this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x5258)
             "configurable")
    let (set_configurable : ('tags, 'T) this -> bool -> unit) =
      fun (x5261 : ('tags, 'T) this) ->
        fun (x5262 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x5261)
            "configurable" (Ojs.bool_to_js x5262)
    let (get_writable : ('tags, 'T) this -> bool) =
      fun (x5265 : ('tags, 'T) this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x5265)
             "writable")
    let (set_writable : ('tags, 'T) this -> bool -> unit) =
      fun (x5268 : ('tags, 'T) this) ->
        fun (x5269 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x5268)
            "writable" (Ojs.bool_to_js x5269)
    let (get_value : ('tags, 'T) this -> 'T) =
      fun (x5272 : ('tags, 'T) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x5272) "value")
    let (set_value : ('tags, 'T) this -> 'T -> unit) =
      fun (x5275 : ('tags, 'T) this) ->
        fun (x5276 : 'T) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x5275) "value"
            (Obj.magic x5276)
    let (get_ : ('tags, 'T) this -> 'T) =
      fun (x5279 : ('tags, 'T) this) ->
        Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x5279) "get" [||])
    let (set_ : ('tags, 'T) this -> value:'T -> unit) =
      fun (x5283 : ('tags, 'T) this) ->
        fun ~value:(x5282 : 'T) ->
          ignore
            (Ojs.call (this_to_js Obj.magic Obj.magic x5283) "set"
               [|(Obj.magic x5282)|])
    let (create :
      enumerable:bool ->
        configurable:bool ->
          writable:bool ->
            value:'T ->
              get_:(unit -> 'T) -> set_:('T -> unit) -> unit -> 'T t)
      =
      fun ~enumerable:(x5286 : bool) ->
        fun ~configurable:(x5287 : bool) ->
          fun ~writable:(x5288 : bool) ->
            fun ~value:(x5289 : 'T) ->
              fun ~get_:(x5290 : unit -> 'T) ->
                fun ~set_:(x5291 : 'T -> unit) ->
                  fun () ->
                    let x5292 = Ojs.empty_obj () in
                    Ojs.set_prop_ascii x5292 "enumerable"
                      (Ojs.bool_to_js x5286);
                    Ojs.set_prop_ascii x5292 "configurable"
                      (Ojs.bool_to_js x5287);
                    Ojs.set_prop_ascii x5292 "writable"
                      (Ojs.bool_to_js x5288);
                    Ojs.set_prop_ascii x5292 "value" (Obj.magic x5289);
                    Ojs.set_prop_ascii x5292 "get"
                      (Ojs.fun_to_js 1 (fun _ -> Obj.magic (x5290 ())));
                    Ojs.set_prop_ascii x5292 "set"
                      (Ojs.fun_to_js 1
                         (fun (x5294 : Ojs.t) -> x5291 (Obj.magic x5294)));
                    t_of_js Obj.magic x5292
    let cast_from = Obj.magic
  end
module MethodDecorator =
  struct
    type t = [ `MethodDecorator ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5296 : Ojs.t) -> t_of_js x5296
    and t_0_to_js : t_0 -> Ojs.t = fun (x5295 : t) -> t_to_js x5295
    type tags = [ `MethodDecorator ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `MethodDecorator ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5299 : Ojs.t) -> intf_of_js __tags_of_js x5299
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5297 : __tags intf) -> intf_to_js __tags_to_js x5297
    let (apply :
      'tags this ->
        target:Object.t ->
          propertyKey:[ `U1 of string  | `U2 of symbol ] ->
            descriptor:'T TypedPropertyDescriptor.t ->
              (unit, 'T TypedPropertyDescriptor.t) union2)
      =
      fun (x5307 : 'tags this) ->
        fun ~target:(x5301 : Object.t) ->
          fun ~propertyKey:(x5302 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~descriptor:(x5305 : 'T TypedPropertyDescriptor.t) ->
              union2_of_js Ojs.unit_of_js
                (fun (x5310 : Ojs.t) ->
                   TypedPropertyDescriptor.t_of_js Obj.magic x5310)
                (Ojs.apply (this_to_js Obj.magic x5307)
                   [|(Object.t_to_js x5301);((match x5302 with
                                              | `U1 x5303 ->
                                                  Ojs.string_to_js x5303
                                              | `U2 x5304 ->
                                                  symbol_to_js x5304));(
                     TypedPropertyDescriptor.t_to_js Obj.magic x5305)|])
    let cast_from = Obj.magic
  end
module Math =
  struct
    let (clz32 : float -> float) =
      fun (x5312 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "clz32"
             [|(Ojs.float_to_js x5312)|])
    let (imul : x:float -> y:float -> float) =
      fun ~x:(x5313 : float) ->
        fun ~y:(x5314 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "imul"
               [|(Ojs.float_to_js x5313);(Ojs.float_to_js x5314)|])
    let (sign : float -> float) =
      fun (x5315 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sign"
             [|(Ojs.float_to_js x5315)|])
    let (log10 : float -> float) =
      fun (x5316 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log10"
             [|(Ojs.float_to_js x5316)|])
    let (log2 : float -> float) =
      fun (x5317 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log2"
             [|(Ojs.float_to_js x5317)|])
    let (log1p : float -> float) =
      fun (x5318 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log1p"
             [|(Ojs.float_to_js x5318)|])
    let (expm1 : float -> float) =
      fun (x5319 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "expm1"
             [|(Ojs.float_to_js x5319)|])
    let (cosh : float -> float) =
      fun (x5320 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "cosh"
             [|(Ojs.float_to_js x5320)|])
    let (sinh : float -> float) =
      fun (x5321 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sinh"
             [|(Ojs.float_to_js x5321)|])
    let (tanh : float -> float) =
      fun (x5322 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "tanh"
             [|(Ojs.float_to_js x5322)|])
    let (acosh : float -> float) =
      fun (x5323 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "acosh"
             [|(Ojs.float_to_js x5323)|])
    let (asinh : float -> float) =
      fun (x5324 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "asinh"
             [|(Ojs.float_to_js x5324)|])
    let (atanh : float -> float) =
      fun (x5325 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atanh"
             [|(Ojs.float_to_js x5325)|])
    let (hypot : float list -> float) =
      fun (x5326 : float list) ->
        Ojs.float_of_js
          (let x5329 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x5329 "hypot") "apply"
             [|x5329;((let x5327 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x5328 : float) ->
                            ignore
                              (Ojs.call x5327 "push"
                                 [|(Ojs.float_to_js x5328)|])) x5326;
                       x5327))|])
    let (trunc : float -> float) =
      fun (x5330 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "trunc"
             [|(Ojs.float_to_js x5330)|])
    let (fround : float -> float) =
      fun (x5331 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "fround"
             [|(Ojs.float_to_js x5331)|])
    let (cbrt : float -> float) =
      fun (x5332 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "cbrt"
             [|(Ojs.float_to_js x5332)|])
    let (e : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "E")
    let (ln10 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LN10")
    let (ln2 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LN2")
    let (log2e : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LOG2E")
    let (log10e : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LOG10E")
    let (pi : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "PI")
    let (sqrt1_2 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math")
             "SQRT1_2")
    let (sqrt2 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "SQRT2")
    let (abs : float -> float) =
      fun (x5333 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "abs"
             [|(Ojs.float_to_js x5333)|])
    let (acos : float -> float) =
      fun (x5334 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "acos"
             [|(Ojs.float_to_js x5334)|])
    let (asin : float -> float) =
      fun (x5335 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "asin"
             [|(Ojs.float_to_js x5335)|])
    let (atan : float -> float) =
      fun (x5336 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atan"
             [|(Ojs.float_to_js x5336)|])
    let (atan2 : y:float -> x:float -> float) =
      fun ~y:(x5337 : float) ->
        fun ~x:(x5338 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atan2"
               [|(Ojs.float_to_js x5337);(Ojs.float_to_js x5338)|])
    let (ceil : float -> float) =
      fun (x5339 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "ceil"
             [|(Ojs.float_to_js x5339)|])
    let (cos : float -> float) =
      fun (x5340 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "cos"
             [|(Ojs.float_to_js x5340)|])
    let (exp : float -> float) =
      fun (x5341 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "exp"
             [|(Ojs.float_to_js x5341)|])
    let (floor : float -> float) =
      fun (x5342 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "floor"
             [|(Ojs.float_to_js x5342)|])
    let (log : float -> float) =
      fun (x5343 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log"
             [|(Ojs.float_to_js x5343)|])
    let (max : float list -> float) =
      fun (x5344 : float list) ->
        Ojs.float_of_js
          (let x5347 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x5347 "max") "apply"
             [|x5347;((let x5345 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x5346 : float) ->
                            ignore
                              (Ojs.call x5345 "push"
                                 [|(Ojs.float_to_js x5346)|])) x5344;
                       x5345))|])
    let (min : float list -> float) =
      fun (x5348 : float list) ->
        Ojs.float_of_js
          (let x5351 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x5351 "min") "apply"
             [|x5351;((let x5349 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x5350 : float) ->
                            ignore
                              (Ojs.call x5349 "push"
                                 [|(Ojs.float_to_js x5350)|])) x5348;
                       x5349))|])
    let (pow : x:float -> y:float -> float) =
      fun ~x:(x5352 : float) ->
        fun ~y:(x5353 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "pow"
               [|(Ojs.float_to_js x5352);(Ojs.float_to_js x5353)|])
    let (random : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "random" [||])
    let (round : float -> float) =
      fun (x5354 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "round"
             [|(Ojs.float_to_js x5354)|])
    let (sin : float -> float) =
      fun (x5355 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sin"
             [|(Ojs.float_to_js x5355)|])
    let (sqrt : float -> float) =
      fun (x5356 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sqrt"
             [|(Ojs.float_to_js x5356)|])
    let (tan : float -> float) =
      fun (x5357 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "tan"
             [|(Ojs.float_to_js x5357)|])
  end
module Map =
  struct
    type ('K, 'V) t =
      [ `Map of ('K * 'V)  | ('K * 'V) IterableIterator.tags_1] intf
    let rec t_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t =
      fun _K -> fun _V -> Obj.magic
    and t_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t -> Ojs.t =
      fun _K -> fun _V -> Obj.magic
    type ('K, 'V) t_2 = ('K, 'V) t
    let rec t_2_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t_2 = fun
      (type __K) -> fun (type __V) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__V_of_js : Ojs.t -> __V) ->
          fun (x5361 : Ojs.t) -> t_of_js __K_of_js __V_of_js x5361
    and t_2_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t_2 -> Ojs.t = fun
      (type __K) -> fun (type __V) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__V_to_js : __V -> Ojs.t) ->
          fun (x5358 : (__K, __V) t) -> t_to_js __K_to_js __V_to_js x5358
    type ('K, 'V) tags =
      [ `Map of ('K * 'V)  | ('K * 'V) IterableIterator.tags_1]
    type ('K, 'V) tags_2 = ('K, 'V) tags
    type ('tags, 'K, 'V) this =
      'tags intf constraint 'tags = [> `Map of ('K * 'V) ]
    let rec this_of_js :
      'tags 'K 'V .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('tags, 'K, 'V) this
      = fun (type __tags) -> fun (type __K) -> fun (type __V) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (__V_of_js : Ojs.t -> __V) ->
            fun (x5366 : Ojs.t) -> intf_of_js __tags_of_js x5366
    and this_to_js :
      'tags 'K 'V .
        ('tags -> Ojs.t) ->
          ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('tags, 'K, 'V) this -> Ojs.t
      = fun (type __tags) -> fun (type __K) -> fun (type __V) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (__V_to_js : __V -> Ojs.t) ->
            fun (x5364 : __tags intf) -> intf_to_js __tags_to_js x5364
    let (entries : ('tags, 'K, 'V) this -> ('K * 'V) IterableIterator.t) =
      fun (x5368 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js
          (fun (x5372 : Ojs.t) ->
             let x5373 = x5372 in
             ((Obj.magic (Ojs.array_get x5373 0)),
               (Obj.magic (Ojs.array_get x5373 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5368)
             "entries" [||])
    let (keys : ('tags, 'K, 'V) this -> 'K IterableIterator.t) =
      fun (x5374 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5374) "keys"
             [||])
    let (values : ('tags, 'K, 'V) this -> 'V IterableIterator.t) =
      fun (x5379 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5379) "values"
             [||])
    let (clear : ('tags, 'K, 'V) this -> unit) =
      fun (x5384 : ('tags, 'K, 'V) this) ->
        ignore
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5384) "clear"
             [||])
    let (delete : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x5389 : ('tags, 'K, 'V) this) ->
        fun ~key:(x5388 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5389)
               "delete" [|(Obj.magic x5388)|])
    let (forEach :
      ('tags, 'K, 'V) this ->
        callbackfn:(value:'V -> key:'K -> map:('K, 'V) t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x5402 : ('tags, 'K, 'V) this) ->
        fun
          ~callbackfn:(x5393 : value:'V -> key:'K -> map:('K, 'V) t -> unit)
          ->
          fun ?thisArg:(x5394 : any option) ->
            fun () ->
              ignore
                (let x5406 = this_to_js Obj.magic Obj.magic Obj.magic x5402 in
                 Ojs.call (Ojs.get_prop_ascii x5406 "forEach") "apply"
                   [|x5406;((let x5395 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5395 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5397 : Ojs.t) ->
                                          fun (x5398 : Ojs.t) ->
                                            fun (x5399 : Ojs.t) ->
                                              x5393 ~value:(Obj.magic x5397)
                                                ~key:(Obj.magic x5398)
                                                ~map:(t_of_js Obj.magic
                                                        Obj.magic x5399)))|]);
                             (match x5394 with
                              | Some x5396 ->
                                  ignore
                                    (Ojs.call x5395 "push"
                                       [|(any_to_js x5396)|])
                              | None -> ());
                             x5395))|])
    let (get_ : ('tags, 'K, 'V) this -> key:'K -> 'V option) =
      fun (x5408 : ('tags, 'K, 'V) this) ->
        fun ~key:(x5407 : 'K) ->
          Ojs.option_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5408) "get"
               [|(Obj.magic x5407)|])
    let (has : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x5414 : ('tags, 'K, 'V) this) ->
        fun ~key:(x5413 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5414) "has"
               [|(Obj.magic x5413)|])
    let (set_ :
      ('tags, 'K, 'V) this -> key:'K -> value:'V -> ('tags, 'K, 'V) this) =
      fun (x5420 : ('tags, 'K, 'V) this) ->
        fun ~key:(x5418 : 'K) ->
          fun ~value:(x5419 : 'V) ->
            this_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5420)
                 "set" [|(Obj.magic x5418);(Obj.magic x5419)|])
    let (get_size : ('tags, 'K, 'V) this -> float) =
      fun (x5427 : ('tags, 'K, 'V) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (this_to_js Obj.magic Obj.magic Obj.magic x5427) "size")
    let (create : unit -> (any, any) t) =
      fun () ->
        t_of_js any_of_js any_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map") [||])
    let (create' :
      ?iterable:('K * 'V) Iterable.t option -> unit -> ('K, 'V) t) =
      fun ?iterable:(x5433 : ('K * 'V) Iterable.t option option) ->
        fun () ->
          t_of_js Obj.magic Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Map")
               (let x5434 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x5433 with
                 | Some x5435 ->
                     ignore
                       (Ojs.call x5434 "push"
                          [|(Ojs.option_to_js
                               (fun (x5436 : ('K * 'V) Iterable.t) ->
                                  Iterable.t_to_js
                                    (fun (x5437 : ('K * 'V)) ->
                                       let (x5438, x5439) = x5437 in
                                       let x5440 = Ojs.array_make 2 in
                                       Ojs.array_set x5440 0
                                         (Obj.magic x5438);
                                       Ojs.array_set x5440 1
                                         (Obj.magic x5439);
                                       x5440) x5436) x5435)|])
                 | None -> ());
                x5434))
    let (create'' : unit -> (any, any) t) =
      fun () ->
        t_of_js any_of_js any_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map") [||])
    let (create''' : ?entries:('K * 'V) list option -> unit -> ('K, 'V) t) =
      fun ?entries:(x5445 : ('K * 'V) list option option) ->
        fun () ->
          t_of_js Obj.magic Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Map")
               (let x5446 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x5445 with
                 | Some x5447 ->
                     ignore
                       (Ojs.call x5446 "push"
                          [|(Ojs.option_to_js
                               (fun (x5448 : ('K * 'V) list) ->
                                  Ojs.list_to_js
                                    (fun (x5449 : ('K * 'V)) ->
                                       let (x5450, x5451) = x5449 in
                                       let x5452 = Ojs.array_make 2 in
                                       Ojs.array_set x5452 0
                                         (Obj.magic x5450);
                                       Ojs.array_set x5452 1
                                         (Obj.magic x5451);
                                       x5452) x5448) x5447)|])
                 | None -> ());
                x5446))
    let (prototype : unit -> (any, any) t) =
      fun () ->
        t_of_js any_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Map")
             "prototype")
    let cast_from = Obj.magic
  end
module Lowercase =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t = fun (type __S) ->
      fun (__S_of_js : Ojs.t -> __S) -> fun (x5458 : Ojs.t) -> x5458
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) -> fun (x5457 : Ojs.t) -> x5457
    type 'S t_1 = 'S t
    let rec t_1_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t_1 = fun (type
      __S) ->
      fun (__S_of_js : Ojs.t -> __S) ->
        fun (x5461 : Ojs.t) -> t_of_js __S_of_js x5461
    and t_1_to_js : 'S . ('S -> Ojs.t) -> 'S t_1 -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) ->
        fun (x5459 : __S t) -> t_to_js __S_to_js x5459
  end
module JSON =
  struct
    let (parse :
      text:string ->
        ?reviver:(this:any -> key:string -> value:any -> any) -> unit -> any)
      =
      fun ~text:(x5463 : string) ->
        fun
          ?reviver:(x5464 :
                     (this:any -> key:string -> value:any -> any) option)
          ->
          fun () ->
            any_of_js
              (let x5470 = Ojs.get_prop_ascii Ojs.global "JSON" in
               Ojs.call (Ojs.get_prop_ascii x5470 "parse") "apply"
                 [|x5470;((let x5465 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x5465 "push"
                                [|(Ojs.string_to_js x5463)|]);
                           (match x5464 with
                            | Some x5466 ->
                                ignore
                                  (Ojs.call x5465 "push"
                                     [|(Ojs.fun_to_js 3
                                          (fun (x5467 : Ojs.t) ->
                                             fun (x5468 : Ojs.t) ->
                                               fun (x5469 : Ojs.t) ->
                                                 any_to_js
                                                   (x5466
                                                      ~this:(any_of_js x5467)
                                                      ~key:(Ojs.string_of_js
                                                              x5468)
                                                      ~value:(any_of_js x5469))))|])
                            | None -> ());
                           x5465))|])
    let (stringify :
      value:any ->
        ?replacer:(this:any -> key:string -> value:any -> any) ->
          ?space:[ `U1 of string  | `U2 of float ] -> unit -> string)
      =
      fun ~value:(x5471 : any) ->
        fun
          ?replacer:(x5472 :
                      (this:any -> key:string -> value:any -> any) option)
          ->
          fun ?space:(x5473 : [ `U1 of string  | `U2 of float ] option) ->
            fun () ->
              Ojs.string_of_js
                (let x5482 = Ojs.get_prop_ascii Ojs.global "JSON" in
                 Ojs.call (Ojs.get_prop_ascii x5482 "stringify") "apply"
                   [|x5482;((let x5474 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5474 "push" [|(any_to_js x5471)|]);
                             (match x5472 with
                              | Some x5478 ->
                                  ignore
                                    (Ojs.call x5474 "push"
                                       [|(Ojs.fun_to_js 3
                                            (fun (x5479 : Ojs.t) ->
                                               fun (x5480 : Ojs.t) ->
                                                 fun (x5481 : Ojs.t) ->
                                                   any_to_js
                                                     (x5478
                                                        ~this:(any_of_js
                                                                 x5479)
                                                        ~key:(Ojs.string_of_js
                                                                x5480)
                                                        ~value:(any_of_js
                                                                  x5481))))|])
                              | None -> ());
                             (match x5473 with
                              | Some x5475 ->
                                  ignore
                                    (Ojs.call x5474 "push"
                                       [|((match x5475 with
                                           | `U1 x5476 ->
                                               Ojs.string_to_js x5476
                                           | `U2 x5477 ->
                                               Ojs.float_to_js x5477))|])
                              | None -> ());
                             x5474))|])
    let (stringify' :
      value:any ->
        ?replacer:[ `U1 of float  | `U2 of string ] list option ->
          ?space:[ `U1 of string  | `U2 of float ] -> unit -> string)
      =
      fun ~value:(x5483 : any) ->
        fun
          ?replacer:(x5484 :
                      [ `U1 of float  | `U2 of string ] list option option)
          ->
          fun ?space:(x5485 : [ `U1 of string  | `U2 of float ] option) ->
            fun () ->
              Ojs.string_of_js
                (let x5495 = Ojs.get_prop_ascii Ojs.global "JSON" in
                 Ojs.call (Ojs.get_prop_ascii x5495 "stringify") "apply"
                   [|x5495;((let x5486 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5486 "push" [|(any_to_js x5483)|]);
                             (match x5484 with
                              | Some x5490 ->
                                  ignore
                                    (Ojs.call x5486 "push"
                                       [|(Ojs.option_to_js
                                            (fun
                                               (x5491 :
                                                 [ `U1 of float 
                                                 | `U2 of string ] list)
                                               ->
                                               Ojs.list_to_js
                                                 (fun
                                                    (x5492 :
                                                      [ `U1 of float 
                                                      | `U2 of string ])
                                                    ->
                                                    match x5492 with
                                                    | `U1 x5493 ->
                                                        Ojs.float_to_js x5493
                                                    | `U2 x5494 ->
                                                        Ojs.string_to_js
                                                          x5494) x5491) x5490)|])
                              | None -> ());
                             (match x5485 with
                              | Some x5487 ->
                                  ignore
                                    (Ojs.call x5486 "push"
                                       [|((match x5487 with
                                           | `U1 x5488 ->
                                               Ojs.string_to_js x5488
                                           | `U2 x5489 ->
                                               Ojs.float_to_js x5489))|])
                              | None -> ());
                             x5486))|])
  end
module InstanceType =
  struct
    module AnonymousInterface8 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x5497 : Ojs.t) -> x5497
        and t_to_js : t -> Ojs.t = fun (x5496 : Ojs.t) -> x5496
        let (create : t -> args:any list -> any) =
          fun (x5501 : t) ->
            fun ~args:(x5498 : any list) ->
              any_of_js
                (Ojs.new_obj_arr (t_to_js x5501)
                   (let x5499 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x5500 : any) ->
                         ignore (Ojs.call x5499 "push" [|(any_to_js x5500)|]))
                      x5498;
                    x5499))
      end
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x5503 : Ojs.t) -> any_of_js x5503
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x5502 : any) -> any_to_js x5502
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x5506 : Ojs.t) -> t_of_js __T_of_js x5506
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x5504 : __T t) -> t_to_js __T_to_js x5504
  end
module ImportMeta =
  struct
    type t = [ `ImportMeta ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5509 : Ojs.t) -> t_of_js x5509
    and t_0_to_js : t_0 -> Ojs.t = fun (x5508 : t) -> t_to_js x5508
    type tags = [ `ImportMeta ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ImportMeta ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5512 : Ojs.t) -> intf_of_js __tags_of_js x5512
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5510 : __tags intf) -> intf_to_js __tags_to_js x5510
    let cast_from = Obj.magic
  end
module ImportAssertions =
  struct
    type t = [ `ImportAssertions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5515 : Ojs.t) -> t_of_js x5515
    and t_0_to_js : t_0 -> Ojs.t = fun (x5514 : t) -> t_to_js x5514
    type tags = [ `ImportAssertions ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ImportAssertions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5518 : Ojs.t) -> intf_of_js __tags_of_js x5518
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5516 : __tags intf) -> intf_to_js __tags_to_js x5516
    let (get : 'tags this -> string -> string) =
      fun (x5520 : 'tags this) ->
        fun (x5522 : string) ->
          Ojs.string_of_js
            (Ojs.get_prop (this_to_js Obj.magic x5520)
               (Ojs.string_to_js x5522))
    let (set : 'tags this -> string -> string -> unit) =
      fun (x5523 : 'tags this) ->
        fun (x5525 : string) ->
          fun (x5526 : string) ->
            Ojs.set_prop (this_to_js Obj.magic x5523)
              (Ojs.string_to_js x5525) (Ojs.string_to_js x5526)
    let cast_from = Obj.magic
  end
module ImportCallOptions =
  struct
    type t = [ `ImportCallOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5528 : Ojs.t) -> t_of_js x5528
    and t_0_to_js : t_0 -> Ojs.t = fun (x5527 : t) -> t_to_js x5527
    type tags = [ `ImportCallOptions ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ImportCallOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5531 : Ojs.t) -> intf_of_js __tags_of_js x5531
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5529 : __tags intf) -> intf_to_js __tags_to_js x5529
    let (get_assert : 'tags this -> ImportAssertions.t) =
      fun (x5533 : 'tags this) ->
        ImportAssertions.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5533) "assert")
    let (set_assert : 'tags this -> ImportAssertions.t -> unit) =
      fun (x5535 : 'tags this) ->
        fun (x5536 : ImportAssertions.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5535) "assert"
            (ImportAssertions.t_to_js x5536)
    let (create : assert_:ImportAssertions.t -> unit -> t) =
      fun ~assert_:(x5538 : ImportAssertions.t) ->
        fun () ->
          let x5539 = Ojs.empty_obj () in
          Ojs.set_prop_ascii x5539 "assert" (ImportAssertions.t_to_js x5538);
          t_of_js x5539
    let cast_from = Obj.magic
  end
module IArguments =
  struct
    type t =
      [ `IArguments  | any ArrayLike.tags_1 | any IterableIterator.tags_1]
        intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5541 : Ojs.t) -> t_of_js x5541
    and t_0_to_js : t_0 -> Ojs.t = fun (x5540 : t) -> t_to_js x5540
    type tags =
      [ `IArguments  | any ArrayLike.tags_1 | any IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `IArguments ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5544 : Ojs.t) -> intf_of_js __tags_of_js x5544
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5542 : __tags intf) -> intf_to_js __tags_to_js x5542
    let (get : 'tags this -> float -> any) =
      fun (x5546 : 'tags this) ->
        fun (x5548 : float) ->
          any_of_js
            (Ojs.get_prop (this_to_js Obj.magic x5546)
               (Ojs.float_to_js x5548))
    let (set : 'tags this -> float -> any -> unit) =
      fun (x5549 : 'tags this) ->
        fun (x5551 : float) ->
          fun (x5552 : any) ->
            Ojs.set_prop (this_to_js Obj.magic x5549) (Ojs.float_to_js x5551)
              (any_to_js x5552)
    let (get_length : 'tags this -> float) =
      fun (x5553 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5553) "length")
    let (set_length : 'tags this -> float -> unit) =
      fun (x5555 : 'tags this) ->
        fun (x5556 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5555) "length"
            (Ojs.float_to_js x5556)
    let (get_callee : 'tags this -> Function.t) =
      fun (x5558 : 'tags this) ->
        Function.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5558) "callee")
    let (set_callee : 'tags this -> Function.t -> unit) =
      fun (x5560 : 'tags this) ->
        fun (x5561 : Function.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5560) "callee"
            (Function.t_to_js x5561)
    let cast_from = Obj.magic
  end
module Generator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `Generator of ('T * 'TReturn * 'TNext) 
      | `Iterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn, 'TNext) t_3 = ('T, 'TReturn, 'TNext) t
    let rec t_3_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t_3
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (__TNext_of_js : Ojs.t -> __TNext) ->
            fun (x5567 : Ojs.t) ->
              t_of_js __T_of_js __TReturn_of_js __TNext_of_js x5567
    and t_3_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t_3 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (__TNext_to_js : __TNext -> Ojs.t) ->
            fun (x5563 : (__T, __TReturn, __TNext) t) ->
              t_to_js __T_to_js __TReturn_to_js __TNext_to_js x5563
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, unknown) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x5575 : Ojs.t) ->
            t_of_js __T_of_js __TReturn_of_js unknown_of_js x5575
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x5571 : (__T, __TReturn, unknown) t) ->
            t_to_js __T_to_js __TReturn_to_js unknown_to_js x5571
    type 'T t_1 = ('T, any, unknown) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x5583 : Ojs.t) ->
          t_of_js __T_of_js any_of_js unknown_of_js x5583
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x5579 : (__T, any, unknown) t) ->
          t_to_js __T_to_js any_to_js unknown_to_js x5579
    type t_0 = (unknown, any, unknown) t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x5591 : Ojs.t) ->
        t_of_js unknown_of_js any_of_js unknown_of_js x5591
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x5587 : (unknown, any, unknown) t) ->
        t_to_js unknown_to_js any_to_js unknown_to_js x5587
    type ('T, 'TReturn, 'TNext) tags =
      [ `Generator of ('T * 'TReturn * 'TNext) 
      | `Iterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn, 'TNext) tags_3 = ('T, 'TReturn, 'TNext) tags
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, unknown) tags
    type 'T tags_1 = ('T, any, unknown) tags
    type tags_0 = (unknown, any, unknown) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `Generator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
            fun (__TNext_of_js : Ojs.t -> __TNext) ->
              fun (x5597 : Ojs.t) -> intf_of_js __tags_of_js x5597
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
            fun (__TNext_to_js : __TNext -> Ojs.t) ->
              fun (x5595 : __tags intf) -> intf_to_js __tags_to_js x5595
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x5602 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x5599 : any list) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (let x5607 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x5602 in
             Ojs.call (Ojs.get_prop_ascii x5607 "next") "apply"
               [|x5607;((let x5600 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x5601 : any) ->
                              ignore
                                (Ojs.call x5600 "push" [|(any_to_js x5601)|]))
                           x5599;
                         x5600))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        value:'TReturn -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x5611 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~value:(x5610 : 'TReturn) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x5611)
               "return" [|(Obj.magic x5610)|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        e:any -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x5619 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~e:(x5618 : any) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x5619)
               "throw" [|(any_to_js x5618)|])
    let cast_from = Obj.magic
  end
module GeneratorFunction =
  struct
    type t = [ `GeneratorFunction ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5627 : Ojs.t) -> t_of_js x5627
    and t_0_to_js : t_0 -> Ojs.t = fun (x5626 : t) -> t_to_js x5626
    type tags = [ `GeneratorFunction ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `GeneratorFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5630 : Ojs.t) -> intf_of_js __tags_of_js x5630
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5628 : __tags intf) -> intf_to_js __tags_to_js x5628
    let (create : 'tags this -> args:any list -> Generator.t_0) =
      fun (x5635 : 'tags this) ->
        fun ~args:(x5632 : any list) ->
          Generator.t_0_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x5635)
               (let x5633 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x5634 : any) ->
                     ignore (Ojs.call x5633 "push" [|(any_to_js x5634)|]))
                  x5632;
                x5633))
    let (apply : 'tags this -> args:any list -> Generator.t_0) =
      fun (x5640 : 'tags this) ->
        fun ~args:(x5637 : any list) ->
          Generator.t_0_of_js
            (Ojs.call (this_to_js Obj.magic x5640) "apply"
               [|Ojs.null;((let x5638 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x5639 : any) ->
                                 ignore
                                   (Ojs.call x5638 "push"
                                      [|(any_to_js x5639)|])) x5637;
                            x5638))|])
    let (get_length : 'tags this -> float) =
      fun (x5642 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5642) "length")
    let (get_name : 'tags this -> string) =
      fun (x5644 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5644) "name")
    let (get_prototype : 'tags this -> Generator.t_0) =
      fun (x5646 : 'tags this) ->
        Generator.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5646) "prototype")
    let cast_from = Obj.magic
  end
module GeneratorFunctionConstructor =
  struct
    type t = [ `GeneratorFunctionConstructor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5649 : Ojs.t) -> t_of_js x5649
    and t_0_to_js : t_0 -> Ojs.t = fun (x5648 : t) -> t_to_js x5648
    type tags = [ `GeneratorFunctionConstructor ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `GeneratorFunctionConstructor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5652 : Ojs.t) -> intf_of_js __tags_of_js x5652
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5650 : __tags intf) -> intf_to_js __tags_to_js x5650
    let (create : 'tags this -> args:string list -> GeneratorFunction.t) =
      fun (x5657 : 'tags this) ->
        fun ~args:(x5654 : string list) ->
          GeneratorFunction.t_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x5657)
               (let x5655 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x5656 : string) ->
                     ignore
                       (Ojs.call x5655 "push" [|(Ojs.string_to_js x5656)|]))
                  x5654;
                x5655))
    let (apply : 'tags this -> args:string list -> GeneratorFunction.t) =
      fun (x5662 : 'tags this) ->
        fun ~args:(x5659 : string list) ->
          GeneratorFunction.t_of_js
            (Ojs.call (this_to_js Obj.magic x5662) "apply"
               [|Ojs.null;((let x5660 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x5661 : string) ->
                                 ignore
                                   (Ojs.call x5660 "push"
                                      [|(Ojs.string_to_js x5661)|])) x5659;
                            x5660))|])
    let (get_length : 'tags this -> float) =
      fun (x5664 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5664) "length")
    let (get_name : 'tags this -> string) =
      fun (x5666 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5666) "name")
    let (get_prototype : 'tags this -> GeneratorFunction.t) =
      fun (x5668 : 'tags this) ->
        GeneratorFunction.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5668) "prototype")
    let cast_from = Obj.magic
  end
module Float64Array =
  struct
    type t =
      [ `Float64Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5671 : Ojs.t) -> t_of_js x5671
    and t_0_to_js : t_0 -> Ojs.t = fun (x5670 : t) -> t_to_js x5670
    type tags =
      [ `Float64Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Float64Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5674 : Ojs.t) -> intf_of_js __tags_of_js x5674
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5672 : __tags intf) -> intf_to_js __tags_to_js x5672
    let (at : 'tags this -> index:float -> float option) =
      fun (x5677 : 'tags this) ->
        fun ~index:(x5676 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x5677) "at"
               [|(Ojs.float_to_js x5676)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x5684 : 'tags this) ->
        fun ~searchElement:(x5680 : float) ->
          fun ?fromIndex:(x5681 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5686 = this_to_js Obj.magic x5684 in
                 Ojs.call (Ojs.get_prop_ascii x5686 "includes") "apply"
                   [|x5686;((let x5682 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5682 "push"
                                  [|(Ojs.float_to_js x5680)|]);
                             (match x5681 with
                              | Some x5683 ->
                                  ignore
                                    (Ojs.call x5682 "push"
                                       [|(Ojs.float_to_js x5683)|])
                              | None -> ());
                             x5682))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x5687 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x5689 : Ojs.t) ->
             let x5690 = x5689 in
             ((Ojs.float_of_js (Ojs.array_get x5690 0)),
               (Ojs.float_of_js (Ojs.array_get x5690 1))))
          (Ojs.call (this_to_js Obj.magic x5687) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x5691 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x5691) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x5694 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x5694) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x5697 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5697)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x5699 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5699) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x5701 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5701) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x5703 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5703) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x5710 : 'tags this) ->
        fun ~target:(x5705 : float) ->
          fun ~start:(x5706 : float) ->
            fun ?end_:(x5707 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x5712 = this_to_js Obj.magic x5710 in
                   Ojs.call (Ojs.get_prop_ascii x5712 "copyWithin") "apply"
                     [|x5712;((let x5708 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5708 "push"
                                    [|(Ojs.float_to_js x5705)|]);
                               ignore
                                 (Ojs.call x5708 "push"
                                    [|(Ojs.float_to_js x5706)|]);
                               (match x5707 with
                                | Some x5709 ->
                                    ignore
                                      (Ojs.call x5708 "push"
                                         [|(Ojs.float_to_js x5709)|])
                                | None -> ());
                               x5708))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x5721 : 'tags this) ->
        fun
          ~predicate:(x5714 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x5715 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5723 = this_to_js Obj.magic x5721 in
                 Ojs.call (Ojs.get_prop_ascii x5723 "every") "apply"
                   [|x5723;((let x5716 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5716 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5718 : Ojs.t) ->
                                          fun (x5719 : Ojs.t) ->
                                            fun (x5720 : Ojs.t) ->
                                              unknown_to_js
                                                (x5714
                                                   ~value:(Ojs.float_of_js
                                                             x5718)
                                                   ~index:(Ojs.float_of_js
                                                             x5719)
                                                   ~array:(t_of_js x5720))))|]);
                             (match x5715 with
                              | Some x5717 ->
                                  ignore
                                    (Ojs.call x5716 "push"
                                       [|(any_to_js x5717)|])
                              | None -> ());
                             x5716))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x5730 : 'tags this) ->
        fun ~value:(x5724 : float) ->
          fun ?start:(x5725 : float option) ->
            fun ?end_:(x5726 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x5732 = this_to_js Obj.magic x5730 in
                   Ojs.call (Ojs.get_prop_ascii x5732 "fill") "apply"
                     [|x5732;((let x5727 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5727 "push"
                                    [|(Ojs.float_to_js x5724)|]);
                               (match x5725 with
                                | Some x5729 ->
                                    ignore
                                      (Ojs.call x5727 "push"
                                         [|(Ojs.float_to_js x5729)|])
                                | None -> ());
                               (match x5726 with
                                | Some x5728 ->
                                    ignore
                                      (Ojs.call x5727 "push"
                                         [|(Ojs.float_to_js x5728)|])
                                | None -> ());
                               x5727))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x5741 : 'tags this) ->
        fun ~predicate:(x5734 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x5735 : any option) ->
            fun () ->
              t_of_js
                (let x5743 = this_to_js Obj.magic x5741 in
                 Ojs.call (Ojs.get_prop_ascii x5743 "filter") "apply"
                   [|x5743;((let x5736 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5736 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5738 : Ojs.t) ->
                                          fun (x5739 : Ojs.t) ->
                                            fun (x5740 : Ojs.t) ->
                                              any_to_js
                                                (x5734
                                                   ~value:(Ojs.float_of_js
                                                             x5738)
                                                   ~index:(Ojs.float_of_js
                                                             x5739)
                                                   ~array:(t_of_js x5740))))|]);
                             (match x5735 with
                              | Some x5737 ->
                                  ignore
                                    (Ojs.call x5736 "push"
                                       [|(any_to_js x5737)|])
                              | None -> ());
                             x5736))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x5751 : 'tags this) ->
        fun ~predicate:(x5744 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x5745 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x5753 = this_to_js Obj.magic x5751 in
                 Ojs.call (Ojs.get_prop_ascii x5753 "find") "apply"
                   [|x5753;((let x5746 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5746 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5748 : Ojs.t) ->
                                          fun (x5749 : Ojs.t) ->
                                            fun (x5750 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x5744
                                                   ~value:(Ojs.float_of_js
                                                             x5748)
                                                   ~index:(Ojs.float_of_js
                                                             x5749)
                                                   ~obj:(t_of_js x5750))))|]);
                             (match x5745 with
                              | Some x5747 ->
                                  ignore
                                    (Ojs.call x5746 "push"
                                       [|(any_to_js x5747)|])
                              | None -> ());
                             x5746))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x5762 : 'tags this) ->
        fun ~predicate:(x5755 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x5756 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x5764 = this_to_js Obj.magic x5762 in
                 Ojs.call (Ojs.get_prop_ascii x5764 "findIndex") "apply"
                   [|x5764;((let x5757 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5757 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5759 : Ojs.t) ->
                                          fun (x5760 : Ojs.t) ->
                                            fun (x5761 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x5755
                                                   ~value:(Ojs.float_of_js
                                                             x5759)
                                                   ~index:(Ojs.float_of_js
                                                             x5760)
                                                   ~obj:(t_of_js x5761))))|]);
                             (match x5756 with
                              | Some x5758 ->
                                  ignore
                                    (Ojs.call x5757 "push"
                                       [|(any_to_js x5758)|])
                              | None -> ());
                             x5757))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x5772 : 'tags this) ->
        fun
          ~callbackfn:(x5765 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x5766 : any option) ->
            fun () ->
              ignore
                (let x5774 = this_to_js Obj.magic x5772 in
                 Ojs.call (Ojs.get_prop_ascii x5774 "forEach") "apply"
                   [|x5774;((let x5767 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5767 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5769 : Ojs.t) ->
                                          fun (x5770 : Ojs.t) ->
                                            fun (x5771 : Ojs.t) ->
                                              x5765
                                                ~value:(Ojs.float_of_js x5769)
                                                ~index:(Ojs.float_of_js x5770)
                                                ~array:(t_of_js x5771)))|]);
                             (match x5766 with
                              | Some x5768 ->
                                  ignore
                                    (Ojs.call x5767 "push"
                                       [|(any_to_js x5768)|])
                              | None -> ());
                             x5767))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x5779 : 'tags this) ->
        fun ~searchElement:(x5775 : float) ->
          fun ?fromIndex:(x5776 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x5781 = this_to_js Obj.magic x5779 in
                 Ojs.call (Ojs.get_prop_ascii x5781 "indexOf") "apply"
                   [|x5781;((let x5777 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5777 "push"
                                  [|(Ojs.float_to_js x5775)|]);
                             (match x5776 with
                              | Some x5778 ->
                                  ignore
                                    (Ojs.call x5777 "push"
                                       [|(Ojs.float_to_js x5778)|])
                              | None -> ());
                             x5777))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x5785 : 'tags this) ->
        fun ?separator:(x5782 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x5787 = this_to_js Obj.magic x5785 in
               Ojs.call (Ojs.get_prop_ascii x5787 "join") "apply"
                 [|x5787;((let x5783 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5782 with
                            | Some x5784 ->
                                ignore
                                  (Ojs.call x5783 "push"
                                     [|(Ojs.string_to_js x5784)|])
                            | None -> ());
                           x5783))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x5792 : 'tags this) ->
        fun ~searchElement:(x5788 : float) ->
          fun ?fromIndex:(x5789 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x5794 = this_to_js Obj.magic x5792 in
                 Ojs.call (Ojs.get_prop_ascii x5794 "lastIndexOf") "apply"
                   [|x5794;((let x5790 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5790 "push"
                                  [|(Ojs.float_to_js x5788)|]);
                             (match x5789 with
                              | Some x5791 ->
                                  ignore
                                    (Ojs.call x5790 "push"
                                       [|(Ojs.float_to_js x5791)|])
                              | None -> ());
                             x5790))|])
    let (get_length : 'tags this -> float) =
      fun (x5795 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5795) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x5804 : 'tags this) ->
        fun
          ~callbackfn:(x5797 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x5798 : any option) ->
            fun () ->
              t_of_js
                (let x5806 = this_to_js Obj.magic x5804 in
                 Ojs.call (Ojs.get_prop_ascii x5806 "map") "apply"
                   [|x5806;((let x5799 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5799 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5801 : Ojs.t) ->
                                          fun (x5802 : Ojs.t) ->
                                            fun (x5803 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x5797
                                                   ~value:(Ojs.float_of_js
                                                             x5801)
                                                   ~index:(Ojs.float_of_js
                                                             x5802)
                                                   ~array:(t_of_js x5803))))|]);
                             (match x5798 with
                              | Some x5800 ->
                                  ignore
                                    (Ojs.call x5799 "push"
                                       [|(any_to_js x5800)|])
                              | None -> ());
                             x5799))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x5812 : 'tags this) ->
        fun
          ~callbackfn:(x5807 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x5812) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x5808 : Ojs.t) ->
                       fun (x5809 : Ojs.t) ->
                         fun (x5810 : Ojs.t) ->
                           fun (x5811 : Ojs.t) ->
                             Ojs.float_to_js
                               (x5807 ~previousValue:(Ojs.float_of_js x5808)
                                  ~currentValue:(Ojs.float_of_js x5809)
                                  ~currentIndex:(Ojs.float_of_js x5810)
                                  ~array:(t_of_js x5811))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x5820 : 'tags this) ->
        fun
          ~callbackfn:(x5814 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x5819 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x5820) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x5815 : Ojs.t) ->
                         fun (x5816 : Ojs.t) ->
                           fun (x5817 : Ojs.t) ->
                             fun (x5818 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x5814
                                    ~previousValue:(Ojs.float_of_js x5815)
                                    ~currentValue:(Ojs.float_of_js x5816)
                                    ~currentIndex:(Ojs.float_of_js x5817)
                                    ~array:(t_of_js x5818))));(Ojs.float_to_js
                                                                 x5819)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x5828 : 'tags this) ->
        fun
          ~callbackfn:(x5822 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x5827 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x5828) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x5823 : Ojs.t) ->
                         fun (x5824 : Ojs.t) ->
                           fun (x5825 : Ojs.t) ->
                             fun (x5826 : Ojs.t) ->
                               Obj.magic
                                 (x5822 ~previousValue:(Obj.magic x5823)
                                    ~currentValue:(Ojs.float_of_js x5824)
                                    ~currentIndex:(Ojs.float_of_js x5825)
                                    ~array:(t_of_js x5826))));(Obj.magic
                                                                 x5827)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x5835 : 'tags this) ->
        fun
          ~callbackfn:(x5830 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x5835) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x5831 : Ojs.t) ->
                       fun (x5832 : Ojs.t) ->
                         fun (x5833 : Ojs.t) ->
                           fun (x5834 : Ojs.t) ->
                             Ojs.float_to_js
                               (x5830 ~previousValue:(Ojs.float_of_js x5831)
                                  ~currentValue:(Ojs.float_of_js x5832)
                                  ~currentIndex:(Ojs.float_of_js x5833)
                                  ~array:(t_of_js x5834))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x5843 : 'tags this) ->
        fun
          ~callbackfn:(x5837 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x5842 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x5843) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x5838 : Ojs.t) ->
                         fun (x5839 : Ojs.t) ->
                           fun (x5840 : Ojs.t) ->
                             fun (x5841 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x5837
                                    ~previousValue:(Ojs.float_of_js x5838)
                                    ~currentValue:(Ojs.float_of_js x5839)
                                    ~currentIndex:(Ojs.float_of_js x5840)
                                    ~array:(t_of_js x5841))));(Ojs.float_to_js
                                                                 x5842)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x5851 : 'tags this) ->
        fun
          ~callbackfn:(x5845 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x5850 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x5851) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x5846 : Ojs.t) ->
                         fun (x5847 : Ojs.t) ->
                           fun (x5848 : Ojs.t) ->
                             fun (x5849 : Ojs.t) ->
                               Obj.magic
                                 (x5845 ~previousValue:(Obj.magic x5846)
                                    ~currentValue:(Ojs.float_of_js x5847)
                                    ~currentIndex:(Ojs.float_of_js x5848)
                                    ~array:(t_of_js x5849))));(Obj.magic
                                                                 x5850)|])
    let (reverse : 'tags this -> t) =
      fun (x5853 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x5853) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x5860 : 'tags this) ->
        fun ~array:(x5855 : float ArrayLike.t) ->
          fun ?offset:(x5856 : float option) ->
            fun () ->
              ignore
                (let x5862 = this_to_js Obj.magic x5860 in
                 Ojs.call (Ojs.get_prop_ascii x5862 "set") "apply"
                   [|x5862;((let x5857 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5857 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x5855)|]);
                             (match x5856 with
                              | Some x5858 ->
                                  ignore
                                    (Ojs.call x5857 "push"
                                       [|(Ojs.float_to_js x5858)|])
                              | None -> ());
                             x5857))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x5868 : 'tags this) ->
        fun ?start:(x5863 : float option) ->
          fun ?end_:(x5864 : float option) ->
            fun () ->
              t_of_js
                (let x5870 = this_to_js Obj.magic x5868 in
                 Ojs.call (Ojs.get_prop_ascii x5870 "slice") "apply"
                   [|x5870;((let x5865 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5863 with
                              | Some x5867 ->
                                  ignore
                                    (Ojs.call x5865 "push"
                                       [|(Ojs.float_to_js x5867)|])
                              | None -> ());
                             (match x5864 with
                              | Some x5866 ->
                                  ignore
                                    (Ojs.call x5865 "push"
                                       [|(Ojs.float_to_js x5866)|])
                              | None -> ());
                             x5865))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x5878 : 'tags this) ->
        fun
          ~predicate:(x5871 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x5872 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5880 = this_to_js Obj.magic x5878 in
                 Ojs.call (Ojs.get_prop_ascii x5880 "some") "apply"
                   [|x5880;((let x5873 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5873 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5875 : Ojs.t) ->
                                          fun (x5876 : Ojs.t) ->
                                            fun (x5877 : Ojs.t) ->
                                              unknown_to_js
                                                (x5871
                                                   ~value:(Ojs.float_of_js
                                                             x5875)
                                                   ~index:(Ojs.float_of_js
                                                             x5876)
                                                   ~array:(t_of_js x5877))))|]);
                             (match x5872 with
                              | Some x5874 ->
                                  ignore
                                    (Ojs.call x5873 "push"
                                       [|(any_to_js x5874)|])
                              | None -> ());
                             x5873))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x5886 : 'tags this) ->
        fun ?compareFn:(x5881 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x5888 = this_to_js Obj.magic x5886 in
               Ojs.call (Ojs.get_prop_ascii x5888 "sort") "apply"
                 [|x5888;((let x5882 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5881 with
                            | Some x5883 ->
                                ignore
                                  (Ojs.call x5882 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x5884 : Ojs.t) ->
                                             fun (x5885 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x5883
                                                    ~a:(Ojs.float_of_js x5884)
                                                    ~b:(Ojs.float_of_js x5885))))|])
                            | None -> ());
                           x5882))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x5895 : 'tags this) ->
        fun ?begin_:(x5890 : float option) ->
          fun ?end_:(x5891 : float option) ->
            fun () ->
              t_of_js
                (let x5897 = this_to_js Obj.magic x5895 in
                 Ojs.call (Ojs.get_prop_ascii x5897 "subarray") "apply"
                   [|x5897;((let x5892 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5890 with
                              | Some x5894 ->
                                  ignore
                                    (Ojs.call x5892 "push"
                                       [|(Ojs.float_to_js x5894)|])
                              | None -> ());
                             (match x5891 with
                              | Some x5893 ->
                                  ignore
                                    (Ojs.call x5892 "push"
                                       [|(Ojs.float_to_js x5893)|])
                              | None -> ());
                             x5892))|])
    let (toString : 'tags this -> string) =
      fun (x5898 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x5898) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x5900 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x5900) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x5902 : 'tags this) ->
        fun (x5904 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x5902)
               (Ojs.float_to_js x5904))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x5905 : 'tags this) ->
        fun (x5907 : float) ->
          fun (x5908 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x5905) (Ojs.float_to_js x5907)
              (Ojs.float_to_js x5908)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x5909 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|(Iterable.t_to_js Ojs.float_to_js x5909)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x5911 : float Iterable.t) ->
        fun ?mapfn:(x5912 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x5913 : any option) ->
            fun () ->
              t_of_js
                (let x5920 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
                 Ojs.call (Ojs.get_prop_ascii x5920 "from") "apply"
                   [|x5920;((let x5914 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5914 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x5911)|]);
                             (match x5912 with
                              | Some x5916 ->
                                  ignore
                                    (Ojs.call x5914 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x5917 : Ojs.t) ->
                                               fun (x5918 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x5916
                                                      ~v:(Ojs.float_of_js
                                                            x5917)
                                                      ~k:(Ojs.float_of_js
                                                            x5918))))|])
                              | None -> ());
                             (match x5913 with
                              | Some x5915 ->
                                  ignore
                                    (Ojs.call x5914 "push"
                                       [|(any_to_js x5915)|])
                              | None -> ());
                             x5914))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float64Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x5921 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|(Ojs.float_to_js x5921)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x5922 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|((match x5922 with
                 | `U1 x5923 -> ArrayLike.t_to_js Ojs.float_to_js x5923
                 | `U2 x5925 -> ArrayBufferLike.t_to_js x5925))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x5926 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x5927 : float option) ->
          fun ?length:(x5928 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Float64Array")
                   (let x5929 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x5929 "push"
                         [|(ArrayBufferLike.t_to_js x5926)|]);
                    (match x5927 with
                     | Some x5931 ->
                         ignore
                           (Ojs.call x5929 "push" [|(Ojs.float_to_js x5931)|])
                     | None -> ());
                    (match x5928 with
                     | Some x5930 ->
                         ignore
                           (Ojs.call x5929 "push" [|(Ojs.float_to_js x5930)|])
                     | None -> ());
                    x5929))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float64Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x5932 : float list) ->
        t_of_js
          (let x5935 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
           Ojs.call (Ojs.get_prop_ascii x5935 "of") "apply"
             [|x5935;((let x5933 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x5934 : float) ->
                            ignore
                              (Ojs.call x5933 "push"
                                 [|(Ojs.float_to_js x5934)|])) x5932;
                       x5933))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x5936 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Float64Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x5936)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x5938 : 'T ArrayLike.t) ->
        fun ~mapfn:(x5939 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x5940 : any option) ->
            fun () ->
              t_of_js
                (let x5946 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
                 Ojs.call (Ojs.get_prop_ascii x5946 "from") "apply"
                   [|x5946;((let x5941 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5941 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x5938)|]);
                             ignore
                               (Ojs.call x5941 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x5943 : Ojs.t) ->
                                          fun (x5944 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x5939 ~v:(Obj.magic x5943)
                                                 ~k:(Ojs.float_of_js x5944))))|]);
                             (match x5940 with
                              | Some x5942 ->
                                  ignore
                                    (Ojs.call x5941 "push"
                                       [|(any_to_js x5942)|])
                              | None -> ());
                             x5941))|])
    let cast_from = Obj.magic
  end
module Float32Array =
  struct
    type t =
      [ `Float32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5948 : Ojs.t) -> t_of_js x5948
    and t_0_to_js : t_0 -> Ojs.t = fun (x5947 : t) -> t_to_js x5947
    type tags =
      [ `Float32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Float32Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5951 : Ojs.t) -> intf_of_js __tags_of_js x5951
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5949 : __tags intf) -> intf_to_js __tags_to_js x5949
    let (at : 'tags this -> index:float -> float option) =
      fun (x5954 : 'tags this) ->
        fun ~index:(x5953 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x5954) "at"
               [|(Ojs.float_to_js x5953)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x5961 : 'tags this) ->
        fun ~searchElement:(x5957 : float) ->
          fun ?fromIndex:(x5958 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5963 = this_to_js Obj.magic x5961 in
                 Ojs.call (Ojs.get_prop_ascii x5963 "includes") "apply"
                   [|x5963;((let x5959 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5959 "push"
                                  [|(Ojs.float_to_js x5957)|]);
                             (match x5958 with
                              | Some x5960 ->
                                  ignore
                                    (Ojs.call x5959 "push"
                                       [|(Ojs.float_to_js x5960)|])
                              | None -> ());
                             x5959))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x5964 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x5966 : Ojs.t) ->
             let x5967 = x5966 in
             ((Ojs.float_of_js (Ojs.array_get x5967 0)),
               (Ojs.float_of_js (Ojs.array_get x5967 1))))
          (Ojs.call (this_to_js Obj.magic x5964) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x5968 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x5968) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x5971 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x5971) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x5974 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5974)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x5976 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5976) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x5978 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5978) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x5980 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5980) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x5987 : 'tags this) ->
        fun ~target:(x5982 : float) ->
          fun ~start:(x5983 : float) ->
            fun ?end_:(x5984 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x5989 = this_to_js Obj.magic x5987 in
                   Ojs.call (Ojs.get_prop_ascii x5989 "copyWithin") "apply"
                     [|x5989;((let x5985 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5985 "push"
                                    [|(Ojs.float_to_js x5982)|]);
                               ignore
                                 (Ojs.call x5985 "push"
                                    [|(Ojs.float_to_js x5983)|]);
                               (match x5984 with
                                | Some x5986 ->
                                    ignore
                                      (Ojs.call x5985 "push"
                                         [|(Ojs.float_to_js x5986)|])
                                | None -> ());
                               x5985))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x5998 : 'tags this) ->
        fun
          ~predicate:(x5991 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x5992 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6000 = this_to_js Obj.magic x5998 in
                 Ojs.call (Ojs.get_prop_ascii x6000 "every") "apply"
                   [|x6000;((let x5993 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5993 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5995 : Ojs.t) ->
                                          fun (x5996 : Ojs.t) ->
                                            fun (x5997 : Ojs.t) ->
                                              unknown_to_js
                                                (x5991
                                                   ~value:(Ojs.float_of_js
                                                             x5995)
                                                   ~index:(Ojs.float_of_js
                                                             x5996)
                                                   ~array:(t_of_js x5997))))|]);
                             (match x5992 with
                              | Some x5994 ->
                                  ignore
                                    (Ojs.call x5993 "push"
                                       [|(any_to_js x5994)|])
                              | None -> ());
                             x5993))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6007 : 'tags this) ->
        fun ~value:(x6001 : float) ->
          fun ?start:(x6002 : float option) ->
            fun ?end_:(x6003 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6009 = this_to_js Obj.magic x6007 in
                   Ojs.call (Ojs.get_prop_ascii x6009 "fill") "apply"
                     [|x6009;((let x6004 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6004 "push"
                                    [|(Ojs.float_to_js x6001)|]);
                               (match x6002 with
                                | Some x6006 ->
                                    ignore
                                      (Ojs.call x6004 "push"
                                         [|(Ojs.float_to_js x6006)|])
                                | None -> ());
                               (match x6003 with
                                | Some x6005 ->
                                    ignore
                                      (Ojs.call x6004 "push"
                                         [|(Ojs.float_to_js x6005)|])
                                | None -> ());
                               x6004))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6018 : 'tags this) ->
        fun ~predicate:(x6011 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x6012 : any option) ->
            fun () ->
              t_of_js
                (let x6020 = this_to_js Obj.magic x6018 in
                 Ojs.call (Ojs.get_prop_ascii x6020 "filter") "apply"
                   [|x6020;((let x6013 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6013 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6015 : Ojs.t) ->
                                          fun (x6016 : Ojs.t) ->
                                            fun (x6017 : Ojs.t) ->
                                              any_to_js
                                                (x6011
                                                   ~value:(Ojs.float_of_js
                                                             x6015)
                                                   ~index:(Ojs.float_of_js
                                                             x6016)
                                                   ~array:(t_of_js x6017))))|]);
                             (match x6012 with
                              | Some x6014 ->
                                  ignore
                                    (Ojs.call x6013 "push"
                                       [|(any_to_js x6014)|])
                              | None -> ());
                             x6013))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x6028 : 'tags this) ->
        fun ~predicate:(x6021 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6022 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x6030 = this_to_js Obj.magic x6028 in
                 Ojs.call (Ojs.get_prop_ascii x6030 "find") "apply"
                   [|x6030;((let x6023 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6023 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6025 : Ojs.t) ->
                                          fun (x6026 : Ojs.t) ->
                                            fun (x6027 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6021
                                                   ~value:(Ojs.float_of_js
                                                             x6025)
                                                   ~index:(Ojs.float_of_js
                                                             x6026)
                                                   ~obj:(t_of_js x6027))))|]);
                             (match x6022 with
                              | Some x6024 ->
                                  ignore
                                    (Ojs.call x6023 "push"
                                       [|(any_to_js x6024)|])
                              | None -> ());
                             x6023))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x6039 : 'tags this) ->
        fun ~predicate:(x6032 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6033 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x6041 = this_to_js Obj.magic x6039 in
                 Ojs.call (Ojs.get_prop_ascii x6041 "findIndex") "apply"
                   [|x6041;((let x6034 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6034 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6036 : Ojs.t) ->
                                          fun (x6037 : Ojs.t) ->
                                            fun (x6038 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6032
                                                   ~value:(Ojs.float_of_js
                                                             x6036)
                                                   ~index:(Ojs.float_of_js
                                                             x6037)
                                                   ~obj:(t_of_js x6038))))|]);
                             (match x6033 with
                              | Some x6035 ->
                                  ignore
                                    (Ojs.call x6034 "push"
                                       [|(any_to_js x6035)|])
                              | None -> ());
                             x6034))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x6049 : 'tags this) ->
        fun
          ~callbackfn:(x6042 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x6043 : any option) ->
            fun () ->
              ignore
                (let x6051 = this_to_js Obj.magic x6049 in
                 Ojs.call (Ojs.get_prop_ascii x6051 "forEach") "apply"
                   [|x6051;((let x6044 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6044 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6046 : Ojs.t) ->
                                          fun (x6047 : Ojs.t) ->
                                            fun (x6048 : Ojs.t) ->
                                              x6042
                                                ~value:(Ojs.float_of_js x6046)
                                                ~index:(Ojs.float_of_js x6047)
                                                ~array:(t_of_js x6048)))|]);
                             (match x6043 with
                              | Some x6045 ->
                                  ignore
                                    (Ojs.call x6044 "push"
                                       [|(any_to_js x6045)|])
                              | None -> ());
                             x6044))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6056 : 'tags this) ->
        fun ~searchElement:(x6052 : float) ->
          fun ?fromIndex:(x6053 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6058 = this_to_js Obj.magic x6056 in
                 Ojs.call (Ojs.get_prop_ascii x6058 "indexOf") "apply"
                   [|x6058;((let x6054 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6054 "push"
                                  [|(Ojs.float_to_js x6052)|]);
                             (match x6053 with
                              | Some x6055 ->
                                  ignore
                                    (Ojs.call x6054 "push"
                                       [|(Ojs.float_to_js x6055)|])
                              | None -> ());
                             x6054))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x6062 : 'tags this) ->
        fun ?separator:(x6059 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x6064 = this_to_js Obj.magic x6062 in
               Ojs.call (Ojs.get_prop_ascii x6064 "join") "apply"
                 [|x6064;((let x6060 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6059 with
                            | Some x6061 ->
                                ignore
                                  (Ojs.call x6060 "push"
                                     [|(Ojs.string_to_js x6061)|])
                            | None -> ());
                           x6060))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6069 : 'tags this) ->
        fun ~searchElement:(x6065 : float) ->
          fun ?fromIndex:(x6066 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6071 = this_to_js Obj.magic x6069 in
                 Ojs.call (Ojs.get_prop_ascii x6071 "lastIndexOf") "apply"
                   [|x6071;((let x6067 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6067 "push"
                                  [|(Ojs.float_to_js x6065)|]);
                             (match x6066 with
                              | Some x6068 ->
                                  ignore
                                    (Ojs.call x6067 "push"
                                       [|(Ojs.float_to_js x6068)|])
                              | None -> ());
                             x6067))|])
    let (get_length : 'tags this -> float) =
      fun (x6072 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6072) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6081 : 'tags this) ->
        fun
          ~callbackfn:(x6074 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x6075 : any option) ->
            fun () ->
              t_of_js
                (let x6083 = this_to_js Obj.magic x6081 in
                 Ojs.call (Ojs.get_prop_ascii x6083 "map") "apply"
                   [|x6083;((let x6076 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6076 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6078 : Ojs.t) ->
                                          fun (x6079 : Ojs.t) ->
                                            fun (x6080 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x6074
                                                   ~value:(Ojs.float_of_js
                                                             x6078)
                                                   ~index:(Ojs.float_of_js
                                                             x6079)
                                                   ~array:(t_of_js x6080))))|]);
                             (match x6075 with
                              | Some x6077 ->
                                  ignore
                                    (Ojs.call x6076 "push"
                                       [|(any_to_js x6077)|])
                              | None -> ());
                             x6076))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6089 : 'tags this) ->
        fun
          ~callbackfn:(x6084 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6089) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x6085 : Ojs.t) ->
                       fun (x6086 : Ojs.t) ->
                         fun (x6087 : Ojs.t) ->
                           fun (x6088 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6084 ~previousValue:(Ojs.float_of_js x6085)
                                  ~currentValue:(Ojs.float_of_js x6086)
                                  ~currentIndex:(Ojs.float_of_js x6087)
                                  ~array:(t_of_js x6088))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6097 : 'tags this) ->
        fun
          ~callbackfn:(x6091 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6096 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6097) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6092 : Ojs.t) ->
                         fun (x6093 : Ojs.t) ->
                           fun (x6094 : Ojs.t) ->
                             fun (x6095 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6091
                                    ~previousValue:(Ojs.float_of_js x6092)
                                    ~currentValue:(Ojs.float_of_js x6093)
                                    ~currentIndex:(Ojs.float_of_js x6094)
                                    ~array:(t_of_js x6095))));(Ojs.float_to_js
                                                                 x6096)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6105 : 'tags this) ->
        fun
          ~callbackfn:(x6099 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6104 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6105) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6100 : Ojs.t) ->
                         fun (x6101 : Ojs.t) ->
                           fun (x6102 : Ojs.t) ->
                             fun (x6103 : Ojs.t) ->
                               Obj.magic
                                 (x6099 ~previousValue:(Obj.magic x6100)
                                    ~currentValue:(Ojs.float_of_js x6101)
                                    ~currentIndex:(Ojs.float_of_js x6102)
                                    ~array:(t_of_js x6103))));(Obj.magic
                                                                 x6104)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6112 : 'tags this) ->
        fun
          ~callbackfn:(x6107 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6112) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x6108 : Ojs.t) ->
                       fun (x6109 : Ojs.t) ->
                         fun (x6110 : Ojs.t) ->
                           fun (x6111 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6107 ~previousValue:(Ojs.float_of_js x6108)
                                  ~currentValue:(Ojs.float_of_js x6109)
                                  ~currentIndex:(Ojs.float_of_js x6110)
                                  ~array:(t_of_js x6111))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6120 : 'tags this) ->
        fun
          ~callbackfn:(x6114 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6119 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6120) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6115 : Ojs.t) ->
                         fun (x6116 : Ojs.t) ->
                           fun (x6117 : Ojs.t) ->
                             fun (x6118 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6114
                                    ~previousValue:(Ojs.float_of_js x6115)
                                    ~currentValue:(Ojs.float_of_js x6116)
                                    ~currentIndex:(Ojs.float_of_js x6117)
                                    ~array:(t_of_js x6118))));(Ojs.float_to_js
                                                                 x6119)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6128 : 'tags this) ->
        fun
          ~callbackfn:(x6122 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6127 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6128) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6123 : Ojs.t) ->
                         fun (x6124 : Ojs.t) ->
                           fun (x6125 : Ojs.t) ->
                             fun (x6126 : Ojs.t) ->
                               Obj.magic
                                 (x6122 ~previousValue:(Obj.magic x6123)
                                    ~currentValue:(Ojs.float_of_js x6124)
                                    ~currentIndex:(Ojs.float_of_js x6125)
                                    ~array:(t_of_js x6126))));(Obj.magic
                                                                 x6127)|])
    let (reverse : 'tags this -> t) =
      fun (x6130 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6130) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x6137 : 'tags this) ->
        fun ~array:(x6132 : float ArrayLike.t) ->
          fun ?offset:(x6133 : float option) ->
            fun () ->
              ignore
                (let x6139 = this_to_js Obj.magic x6137 in
                 Ojs.call (Ojs.get_prop_ascii x6139 "set") "apply"
                   [|x6139;((let x6134 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6134 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x6132)|]);
                             (match x6133 with
                              | Some x6135 ->
                                  ignore
                                    (Ojs.call x6134 "push"
                                       [|(Ojs.float_to_js x6135)|])
                              | None -> ());
                             x6134))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x6145 : 'tags this) ->
        fun ?start:(x6140 : float option) ->
          fun ?end_:(x6141 : float option) ->
            fun () ->
              t_of_js
                (let x6147 = this_to_js Obj.magic x6145 in
                 Ojs.call (Ojs.get_prop_ascii x6147 "slice") "apply"
                   [|x6147;((let x6142 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6140 with
                              | Some x6144 ->
                                  ignore
                                    (Ojs.call x6142 "push"
                                       [|(Ojs.float_to_js x6144)|])
                              | None -> ());
                             (match x6141 with
                              | Some x6143 ->
                                  ignore
                                    (Ojs.call x6142 "push"
                                       [|(Ojs.float_to_js x6143)|])
                              | None -> ());
                             x6142))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6155 : 'tags this) ->
        fun
          ~predicate:(x6148 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6149 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6157 = this_to_js Obj.magic x6155 in
                 Ojs.call (Ojs.get_prop_ascii x6157 "some") "apply"
                   [|x6157;((let x6150 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6150 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6152 : Ojs.t) ->
                                          fun (x6153 : Ojs.t) ->
                                            fun (x6154 : Ojs.t) ->
                                              unknown_to_js
                                                (x6148
                                                   ~value:(Ojs.float_of_js
                                                             x6152)
                                                   ~index:(Ojs.float_of_js
                                                             x6153)
                                                   ~array:(t_of_js x6154))))|]);
                             (match x6149 with
                              | Some x6151 ->
                                  ignore
                                    (Ojs.call x6150 "push"
                                       [|(any_to_js x6151)|])
                              | None -> ());
                             x6150))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x6163 : 'tags this) ->
        fun ?compareFn:(x6158 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x6165 = this_to_js Obj.magic x6163 in
               Ojs.call (Ojs.get_prop_ascii x6165 "sort") "apply"
                 [|x6165;((let x6159 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6158 with
                            | Some x6160 ->
                                ignore
                                  (Ojs.call x6159 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x6161 : Ojs.t) ->
                                             fun (x6162 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x6160
                                                    ~a:(Ojs.float_of_js x6161)
                                                    ~b:(Ojs.float_of_js x6162))))|])
                            | None -> ());
                           x6159))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x6172 : 'tags this) ->
        fun ?begin_:(x6167 : float option) ->
          fun ?end_:(x6168 : float option) ->
            fun () ->
              t_of_js
                (let x6174 = this_to_js Obj.magic x6172 in
                 Ojs.call (Ojs.get_prop_ascii x6174 "subarray") "apply"
                   [|x6174;((let x6169 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6167 with
                              | Some x6171 ->
                                  ignore
                                    (Ojs.call x6169 "push"
                                       [|(Ojs.float_to_js x6171)|])
                              | None -> ());
                             (match x6168 with
                              | Some x6170 ->
                                  ignore
                                    (Ojs.call x6169 "push"
                                       [|(Ojs.float_to_js x6170)|])
                              | None -> ());
                             x6169))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x6175 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6175) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x6177 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6177) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x6179 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6179) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x6181 : 'tags this) ->
        fun (x6183 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x6181)
               (Ojs.float_to_js x6183))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x6184 : 'tags this) ->
        fun (x6186 : float) ->
          fun (x6187 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x6184) (Ojs.float_to_js x6186)
              (Ojs.float_to_js x6187)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x6188 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|(Iterable.t_to_js Ojs.float_to_js x6188)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6190 : float Iterable.t) ->
        fun ?mapfn:(x6191 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x6192 : any option) ->
            fun () ->
              t_of_js
                (let x6199 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
                 Ojs.call (Ojs.get_prop_ascii x6199 "from") "apply"
                   [|x6199;((let x6193 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6193 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x6190)|]);
                             (match x6191 with
                              | Some x6195 ->
                                  ignore
                                    (Ojs.call x6193 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x6196 : Ojs.t) ->
                                               fun (x6197 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x6195
                                                      ~v:(Ojs.float_of_js
                                                            x6196)
                                                      ~k:(Ojs.float_of_js
                                                            x6197))))|])
                              | None -> ());
                             (match x6192 with
                              | Some x6194 ->
                                  ignore
                                    (Ojs.call x6193 "push"
                                       [|(any_to_js x6194)|])
                              | None -> ());
                             x6193))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float32Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x6200 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|(Ojs.float_to_js x6200)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x6201 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|((match x6201 with
                 | `U1 x6202 -> ArrayLike.t_to_js Ojs.float_to_js x6202
                 | `U2 x6204 -> ArrayBufferLike.t_to_js x6204))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x6205 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x6206 : float option) ->
          fun ?length:(x6207 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Float32Array")
                   (let x6208 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x6208 "push"
                         [|(ArrayBufferLike.t_to_js x6205)|]);
                    (match x6206 with
                     | Some x6210 ->
                         ignore
                           (Ojs.call x6208 "push" [|(Ojs.float_to_js x6210)|])
                     | None -> ());
                    (match x6207 with
                     | Some x6209 ->
                         ignore
                           (Ojs.call x6208 "push" [|(Ojs.float_to_js x6209)|])
                     | None -> ());
                    x6208))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float32Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x6211 : float list) ->
        t_of_js
          (let x6214 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
           Ojs.call (Ojs.get_prop_ascii x6214 "of") "apply"
             [|x6214;((let x6212 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x6213 : float) ->
                            ignore
                              (Ojs.call x6212 "push"
                                 [|(Ojs.float_to_js x6213)|])) x6211;
                       x6212))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x6215 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Float32Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x6215)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6217 : 'T ArrayLike.t) ->
        fun ~mapfn:(x6218 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x6219 : any option) ->
            fun () ->
              t_of_js
                (let x6225 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
                 Ojs.call (Ojs.get_prop_ascii x6225 "from") "apply"
                   [|x6225;((let x6220 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6220 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x6217)|]);
                             ignore
                               (Ojs.call x6220 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x6222 : Ojs.t) ->
                                          fun (x6223 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x6218 ~v:(Obj.magic x6222)
                                                 ~k:(Ojs.float_of_js x6223))))|]);
                             (match x6219 with
                              | Some x6221 ->
                                  ignore
                                    (Ojs.call x6220 "push"
                                       [|(any_to_js x6221)|])
                              | None -> ());
                             x6220))|])
    let cast_from = Obj.magic
  end
module FinalizationRegistry =
  struct
    type 'T t = [ `FinalizationRegistry of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x6228 : Ojs.t) -> t_of_js __T_of_js x6228
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x6226 : __T t) -> t_to_js __T_to_js x6226
    type t_0 = any t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x6232 : Ojs.t) -> t_of_js any_of_js x6232
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x6230 : any t) -> t_to_js any_to_js x6230
    type 'T tags = [ `FinalizationRegistry of 'T ]
    type 'T tags_1 = 'T tags
    type tags_0 = any tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `FinalizationRegistry of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x6236 : Ojs.t) -> intf_of_js __tags_of_js x6236
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x6234 : __tags intf) -> intf_to_js __tags_to_js x6234
    let (register :
      ('tags, 'T) this ->
        target:untyped_object ->
          heldValue:any -> ?unregisterToken:untyped_object -> unit -> unit)
      =
      fun (x6243 : ('tags, 'T) this) ->
        fun ~target:(x6238 : untyped_object) ->
          fun ~heldValue:(x6239 : any) ->
            fun ?unregisterToken:(x6240 : untyped_object option) ->
              fun () ->
                ignore
                  (let x6246 = this_to_js Obj.magic Obj.magic x6243 in
                   Ojs.call (Ojs.get_prop_ascii x6246 "register") "apply"
                     [|x6246;((let x6241 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6241 "push"
                                    [|(untyped_object_to_js x6238)|]);
                               ignore
                                 (Ojs.call x6241 "push" [|(any_to_js x6239)|]);
                               (match x6240 with
                                | Some x6242 ->
                                    ignore
                                      (Ojs.call x6241 "push"
                                         [|(untyped_object_to_js x6242)|])
                                | None -> ());
                               x6241))|])
    let (unregister :
      ('tags, 'T) this -> unregisterToken:untyped_object -> unit) =
      fun (x6248 : ('tags, 'T) this) ->
        fun ~unregisterToken:(x6247 : untyped_object) ->
          ignore
            (Ojs.call (this_to_js Obj.magic Obj.magic x6248) "unregister"
               [|(untyped_object_to_js x6247)|])
    let (register' :
      ('tags, 'T) this ->
        target:untyped_object ->
          heldValue:'T -> ?unregisterToken:untyped_object -> unit -> unit)
      =
      fun (x6256 : ('tags, 'T) this) ->
        fun ~target:(x6251 : untyped_object) ->
          fun ~heldValue:(x6252 : 'T) ->
            fun ?unregisterToken:(x6253 : untyped_object option) ->
              fun () ->
                ignore
                  (let x6259 = this_to_js Obj.magic Obj.magic x6256 in
                   Ojs.call (Ojs.get_prop_ascii x6259 "register") "apply"
                     [|x6259;((let x6254 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6254 "push"
                                    [|(untyped_object_to_js x6251)|]);
                               ignore
                                 (Ojs.call x6254 "push" [|(Obj.magic x6252)|]);
                               (match x6253 with
                                | Some x6255 ->
                                    ignore
                                      (Ojs.call x6254 "push"
                                         [|(untyped_object_to_js x6255)|])
                                | None -> ());
                               x6254))|])
    let (unregister' :
      ('tags, 'T) this -> unregisterToken:untyped_object -> unit) =
      fun (x6261 : ('tags, 'T) this) ->
        fun ~unregisterToken:(x6260 : untyped_object) ->
          ignore
            (Ojs.call (this_to_js Obj.magic Obj.magic x6261) "unregister"
               [|(untyped_object_to_js x6260)|])
    let (prototype : unit -> t_0) =
      fun () ->
        t_0_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             "prototype")
    let (create : (any -> unit) -> t_0) =
      fun (x6264 : any -> unit) ->
        t_0_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             [|(Ojs.fun_to_js 1
                  (fun (x6265 : Ojs.t) -> x6264 (any_of_js x6265)))|])
    let (prototype' : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             "prototype")
    let (create' : ('T -> unit) -> 'T t) =
      fun (x6267 : 'T -> unit) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             [|(Ojs.fun_to_js 1
                  (fun (x6268 : Ojs.t) -> x6267 (Obj.magic x6268)))|])
    let cast_from = Obj.magic
  end
module Extract =
  struct
    type ('T, 'U) t = any
    let rec t_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__U_of_js : Ojs.t -> __U) ->
          fun (x6271 : Ojs.t) -> any_of_js x6271
    and t_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t -> Ojs.t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__U_to_js : __U -> Ojs.t) ->
          fun (x6270 : any) -> any_to_js x6270
    type ('T, 'U) t_2 = ('T, 'U) t
    let rec t_2_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t_2 = fun
      (type __T) -> fun (type __U) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__U_of_js : Ojs.t -> __U) ->
          fun (x6275 : Ojs.t) -> t_of_js __T_of_js __U_of_js x6275
    and t_2_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t_2 -> Ojs.t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__U_to_js : __U -> Ojs.t) ->
          fun (x6272 : (__T, __U) t) -> t_to_js __T_to_js __U_to_js x6272
  end
module EvalError =
  struct
    type t = [ `Error  | `EvalError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6279 : Ojs.t) -> t_of_js x6279
    and t_0_to_js : t_0 -> Ojs.t = fun (x6278 : t) -> t_to_js x6278
    type tags = [ `Error  | `EvalError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `EvalError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6282 : Ojs.t) -> intf_of_js __tags_of_js x6282
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6280 : __tags intf) -> intf_to_js __tags_to_js x6280
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x6284 : string option) ->
        fun ?options:(x6285 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "EvalError")
                 (let x6286 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x6284 with
                   | Some x6288 ->
                       ignore
                         (Ojs.call x6286 "push" [|(Ojs.string_to_js x6288)|])
                   | None -> ());
                  (match x6285 with
                   | Some x6287 ->
                       ignore
                         (Ojs.call x6286 "push"
                            [|(ErrorOptions.t_to_js x6287)|])
                   | None -> ());
                  x6286))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x6289 : string option) ->
        fun ?options:(x6290 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "EvalError") "apply"
                 [|Ojs.null;((let x6291 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x6289 with
                               | Some x6293 ->
                                   ignore
                                     (Ojs.call x6291 "push"
                                        [|(Ojs.string_to_js x6293)|])
                               | None -> ());
                              (match x6290 with
                               | Some x6292 ->
                                   ignore
                                     (Ojs.call x6291 "push"
                                        [|(ErrorOptions.t_to_js x6292)|])
                               | None -> ());
                              x6291))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x6294 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "EvalError")
               (let x6295 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x6294 with
                 | Some x6296 ->
                     ignore
                       (Ojs.call x6295 "push" [|(Ojs.string_to_js x6296)|])
                 | None -> ());
                x6295))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x6297 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "EvalError") "apply"
               [|Ojs.null;((let x6298 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x6297 with
                             | Some x6299 ->
                                 ignore
                                   (Ojs.call x6298 "push"
                                      [|(Ojs.string_to_js x6299)|])
                             | None -> ());
                            x6298))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "EvalError")
             "prototype")
    let cast_from = Obj.magic
  end
module DataView =
  struct
    type t = [ `DataView ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6301 : Ojs.t) -> t_of_js x6301
    and t_0_to_js : t_0 -> Ojs.t = fun (x6300 : t) -> t_to_js x6300
    type tags = [ `DataView ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `DataView ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6304 : Ojs.t) -> intf_of_js __tags_of_js x6304
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6302 : __tags intf) -> intf_to_js __tags_to_js x6302
    let (getBigInt64 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> bigint)
      =
      fun (x6310 : 'tags this) ->
        fun ~byteOffset:(x6306 : float) ->
          fun ?littleEndian:(x6307 : bool option) ->
            fun () ->
              bigint_of_js
                (let x6312 = this_to_js Obj.magic x6310 in
                 Ojs.call (Ojs.get_prop_ascii x6312 "getBigInt64") "apply"
                   [|x6312;((let x6308 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6308 "push"
                                  [|(Ojs.float_to_js x6306)|]);
                             (match x6307 with
                              | Some x6309 ->
                                  ignore
                                    (Ojs.call x6308 "push"
                                       [|(Ojs.bool_to_js x6309)|])
                              | None -> ());
                             x6308))|])
    let (getBigUint64 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> bigint)
      =
      fun (x6317 : 'tags this) ->
        fun ~byteOffset:(x6313 : float) ->
          fun ?littleEndian:(x6314 : bool option) ->
            fun () ->
              bigint_of_js
                (let x6319 = this_to_js Obj.magic x6317 in
                 Ojs.call (Ojs.get_prop_ascii x6319 "getBigUint64") "apply"
                   [|x6319;((let x6315 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6315 "push"
                                  [|(Ojs.float_to_js x6313)|]);
                             (match x6314 with
                              | Some x6316 ->
                                  ignore
                                    (Ojs.call x6315 "push"
                                       [|(Ojs.bool_to_js x6316)|])
                              | None -> ());
                             x6315))|])
    let (setBigInt64 :
      'tags this ->
        byteOffset:float ->
          value:bigint -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6325 : 'tags this) ->
        fun ~byteOffset:(x6320 : float) ->
          fun ~value:(x6321 : bigint) ->
            fun ?littleEndian:(x6322 : bool option) ->
              fun () ->
                ignore
                  (let x6327 = this_to_js Obj.magic x6325 in
                   Ojs.call (Ojs.get_prop_ascii x6327 "setBigInt64") "apply"
                     [|x6327;((let x6323 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6323 "push"
                                    [|(Ojs.float_to_js x6320)|]);
                               ignore
                                 (Ojs.call x6323 "push"
                                    [|(bigint_to_js x6321)|]);
                               (match x6322 with
                                | Some x6324 ->
                                    ignore
                                      (Ojs.call x6323 "push"
                                         [|(Ojs.bool_to_js x6324)|])
                                | None -> ());
                               x6323))|])
    let (setBigUint64 :
      'tags this ->
        byteOffset:float ->
          value:bigint -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6333 : 'tags this) ->
        fun ~byteOffset:(x6328 : float) ->
          fun ~value:(x6329 : bigint) ->
            fun ?littleEndian:(x6330 : bool option) ->
              fun () ->
                ignore
                  (let x6335 = this_to_js Obj.magic x6333 in
                   Ojs.call (Ojs.get_prop_ascii x6335 "setBigUint64") "apply"
                     [|x6335;((let x6331 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6331 "push"
                                    [|(Ojs.float_to_js x6328)|]);
                               ignore
                                 (Ojs.call x6331 "push"
                                    [|(bigint_to_js x6329)|]);
                               (match x6330 with
                                | Some x6332 ->
                                    ignore
                                      (Ojs.call x6331 "push"
                                         [|(Ojs.bool_to_js x6332)|])
                                | None -> ());
                               x6331))|])
    let (get_buffer : 'tags this -> ArrayBuffer.t) =
      fun (x6336 : 'tags this) ->
        ArrayBuffer.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6336) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x6338 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6338) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x6340 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6340) "byteOffset")
    let (getFloat32 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6346 : 'tags this) ->
        fun ~byteOffset:(x6342 : float) ->
          fun ?littleEndian:(x6343 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6348 = this_to_js Obj.magic x6346 in
                 Ojs.call (Ojs.get_prop_ascii x6348 "getFloat32") "apply"
                   [|x6348;((let x6344 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6344 "push"
                                  [|(Ojs.float_to_js x6342)|]);
                             (match x6343 with
                              | Some x6345 ->
                                  ignore
                                    (Ojs.call x6344 "push"
                                       [|(Ojs.bool_to_js x6345)|])
                              | None -> ());
                             x6344))|])
    let (getFloat64 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6353 : 'tags this) ->
        fun ~byteOffset:(x6349 : float) ->
          fun ?littleEndian:(x6350 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6355 = this_to_js Obj.magic x6353 in
                 Ojs.call (Ojs.get_prop_ascii x6355 "getFloat64") "apply"
                   [|x6355;((let x6351 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6351 "push"
                                  [|(Ojs.float_to_js x6349)|]);
                             (match x6350 with
                              | Some x6352 ->
                                  ignore
                                    (Ojs.call x6351 "push"
                                       [|(Ojs.bool_to_js x6352)|])
                              | None -> ());
                             x6351))|])
    let (getInt8 : 'tags this -> byteOffset:float -> float) =
      fun (x6357 : 'tags this) ->
        fun ~byteOffset:(x6356 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6357) "getInt8"
               [|(Ojs.float_to_js x6356)|])
    let (getInt16 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6363 : 'tags this) ->
        fun ~byteOffset:(x6359 : float) ->
          fun ?littleEndian:(x6360 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6365 = this_to_js Obj.magic x6363 in
                 Ojs.call (Ojs.get_prop_ascii x6365 "getInt16") "apply"
                   [|x6365;((let x6361 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6361 "push"
                                  [|(Ojs.float_to_js x6359)|]);
                             (match x6360 with
                              | Some x6362 ->
                                  ignore
                                    (Ojs.call x6361 "push"
                                       [|(Ojs.bool_to_js x6362)|])
                              | None -> ());
                             x6361))|])
    let (getInt32 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6370 : 'tags this) ->
        fun ~byteOffset:(x6366 : float) ->
          fun ?littleEndian:(x6367 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6372 = this_to_js Obj.magic x6370 in
                 Ojs.call (Ojs.get_prop_ascii x6372 "getInt32") "apply"
                   [|x6372;((let x6368 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6368 "push"
                                  [|(Ojs.float_to_js x6366)|]);
                             (match x6367 with
                              | Some x6369 ->
                                  ignore
                                    (Ojs.call x6368 "push"
                                       [|(Ojs.bool_to_js x6369)|])
                              | None -> ());
                             x6368))|])
    let (getUint8 : 'tags this -> byteOffset:float -> float) =
      fun (x6374 : 'tags this) ->
        fun ~byteOffset:(x6373 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6374) "getUint8"
               [|(Ojs.float_to_js x6373)|])
    let (getUint16 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6380 : 'tags this) ->
        fun ~byteOffset:(x6376 : float) ->
          fun ?littleEndian:(x6377 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6382 = this_to_js Obj.magic x6380 in
                 Ojs.call (Ojs.get_prop_ascii x6382 "getUint16") "apply"
                   [|x6382;((let x6378 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6378 "push"
                                  [|(Ojs.float_to_js x6376)|]);
                             (match x6377 with
                              | Some x6379 ->
                                  ignore
                                    (Ojs.call x6378 "push"
                                       [|(Ojs.bool_to_js x6379)|])
                              | None -> ());
                             x6378))|])
    let (getUint32 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6387 : 'tags this) ->
        fun ~byteOffset:(x6383 : float) ->
          fun ?littleEndian:(x6384 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6389 = this_to_js Obj.magic x6387 in
                 Ojs.call (Ojs.get_prop_ascii x6389 "getUint32") "apply"
                   [|x6389;((let x6385 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6385 "push"
                                  [|(Ojs.float_to_js x6383)|]);
                             (match x6384 with
                              | Some x6386 ->
                                  ignore
                                    (Ojs.call x6385 "push"
                                       [|(Ojs.bool_to_js x6386)|])
                              | None -> ());
                             x6385))|])
    let (setFloat32 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6395 : 'tags this) ->
        fun ~byteOffset:(x6390 : float) ->
          fun ~value:(x6391 : float) ->
            fun ?littleEndian:(x6392 : bool option) ->
              fun () ->
                ignore
                  (let x6397 = this_to_js Obj.magic x6395 in
                   Ojs.call (Ojs.get_prop_ascii x6397 "setFloat32") "apply"
                     [|x6397;((let x6393 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6393 "push"
                                    [|(Ojs.float_to_js x6390)|]);
                               ignore
                                 (Ojs.call x6393 "push"
                                    [|(Ojs.float_to_js x6391)|]);
                               (match x6392 with
                                | Some x6394 ->
                                    ignore
                                      (Ojs.call x6393 "push"
                                         [|(Ojs.bool_to_js x6394)|])
                                | None -> ());
                               x6393))|])
    let (setFloat64 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6403 : 'tags this) ->
        fun ~byteOffset:(x6398 : float) ->
          fun ~value:(x6399 : float) ->
            fun ?littleEndian:(x6400 : bool option) ->
              fun () ->
                ignore
                  (let x6405 = this_to_js Obj.magic x6403 in
                   Ojs.call (Ojs.get_prop_ascii x6405 "setFloat64") "apply"
                     [|x6405;((let x6401 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6401 "push"
                                    [|(Ojs.float_to_js x6398)|]);
                               ignore
                                 (Ojs.call x6401 "push"
                                    [|(Ojs.float_to_js x6399)|]);
                               (match x6400 with
                                | Some x6402 ->
                                    ignore
                                      (Ojs.call x6401 "push"
                                         [|(Ojs.bool_to_js x6402)|])
                                | None -> ());
                               x6401))|])
    let (setInt8 : 'tags this -> byteOffset:float -> value:float -> unit) =
      fun (x6408 : 'tags this) ->
        fun ~byteOffset:(x6406 : float) ->
          fun ~value:(x6407 : float) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x6408) "setInt8"
                 [|(Ojs.float_to_js x6406);(Ojs.float_to_js x6407)|])
    let (setInt16 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6415 : 'tags this) ->
        fun ~byteOffset:(x6410 : float) ->
          fun ~value:(x6411 : float) ->
            fun ?littleEndian:(x6412 : bool option) ->
              fun () ->
                ignore
                  (let x6417 = this_to_js Obj.magic x6415 in
                   Ojs.call (Ojs.get_prop_ascii x6417 "setInt16") "apply"
                     [|x6417;((let x6413 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6413 "push"
                                    [|(Ojs.float_to_js x6410)|]);
                               ignore
                                 (Ojs.call x6413 "push"
                                    [|(Ojs.float_to_js x6411)|]);
                               (match x6412 with
                                | Some x6414 ->
                                    ignore
                                      (Ojs.call x6413 "push"
                                         [|(Ojs.bool_to_js x6414)|])
                                | None -> ());
                               x6413))|])
    let (setInt32 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6423 : 'tags this) ->
        fun ~byteOffset:(x6418 : float) ->
          fun ~value:(x6419 : float) ->
            fun ?littleEndian:(x6420 : bool option) ->
              fun () ->
                ignore
                  (let x6425 = this_to_js Obj.magic x6423 in
                   Ojs.call (Ojs.get_prop_ascii x6425 "setInt32") "apply"
                     [|x6425;((let x6421 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6421 "push"
                                    [|(Ojs.float_to_js x6418)|]);
                               ignore
                                 (Ojs.call x6421 "push"
                                    [|(Ojs.float_to_js x6419)|]);
                               (match x6420 with
                                | Some x6422 ->
                                    ignore
                                      (Ojs.call x6421 "push"
                                         [|(Ojs.bool_to_js x6422)|])
                                | None -> ());
                               x6421))|])
    let (setUint8 : 'tags this -> byteOffset:float -> value:float -> unit) =
      fun (x6428 : 'tags this) ->
        fun ~byteOffset:(x6426 : float) ->
          fun ~value:(x6427 : float) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x6428) "setUint8"
                 [|(Ojs.float_to_js x6426);(Ojs.float_to_js x6427)|])
    let (setUint16 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6435 : 'tags this) ->
        fun ~byteOffset:(x6430 : float) ->
          fun ~value:(x6431 : float) ->
            fun ?littleEndian:(x6432 : bool option) ->
              fun () ->
                ignore
                  (let x6437 = this_to_js Obj.magic x6435 in
                   Ojs.call (Ojs.get_prop_ascii x6437 "setUint16") "apply"
                     [|x6437;((let x6433 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6433 "push"
                                    [|(Ojs.float_to_js x6430)|]);
                               ignore
                                 (Ojs.call x6433 "push"
                                    [|(Ojs.float_to_js x6431)|]);
                               (match x6432 with
                                | Some x6434 ->
                                    ignore
                                      (Ojs.call x6433 "push"
                                         [|(Ojs.bool_to_js x6434)|])
                                | None -> ());
                               x6433))|])
    let (setUint32 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6443 : 'tags this) ->
        fun ~byteOffset:(x6438 : float) ->
          fun ~value:(x6439 : float) ->
            fun ?littleEndian:(x6440 : bool option) ->
              fun () ->
                ignore
                  (let x6445 = this_to_js Obj.magic x6443 in
                   Ojs.call (Ojs.get_prop_ascii x6445 "setUint32") "apply"
                     [|x6445;((let x6441 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6441 "push"
                                    [|(Ojs.float_to_js x6438)|]);
                               ignore
                                 (Ojs.call x6441 "push"
                                    [|(Ojs.float_to_js x6439)|]);
                               (match x6440 with
                                | Some x6442 ->
                                    ignore
                                      (Ojs.call x6441 "push"
                                         [|(Ojs.bool_to_js x6442)|])
                                | None -> ());
                               x6441))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DataView")
             "prototype")
    let (create :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?byteLength:float -> unit -> t)
      =
      fun ~buffer:(x6446 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x6447 : float option) ->
          fun ?byteLength:(x6448 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "DataView")
                   (let x6449 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x6449 "push"
                         [|(ArrayBufferLike.t_to_js x6446)|]);
                    (match x6447 with
                     | Some x6451 ->
                         ignore
                           (Ojs.call x6449 "push" [|(Ojs.float_to_js x6451)|])
                     | None -> ());
                    (match x6448 with
                     | Some x6450 ->
                         ignore
                           (Ojs.call x6449 "push" [|(Ojs.float_to_js x6450)|])
                     | None -> ());
                    x6449))
    let cast_from = Obj.magic
  end
module ConstructorParameters =
  struct
    module AnonymousInterface8 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x6453 : Ojs.t) -> x6453
        and t_to_js : t -> Ojs.t = fun (x6452 : Ojs.t) -> x6452
        let (create : t -> args:any list -> any) =
          fun (x6457 : t) ->
            fun ~args:(x6454 : any list) ->
              any_of_js
                (Ojs.new_obj_arr (t_to_js x6457)
                   (let x6455 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x6456 : any) ->
                         ignore (Ojs.call x6455 "push" [|(any_to_js x6456)|]))
                      x6454;
                    x6455))
      end
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x6459 : Ojs.t) -> any_of_js x6459
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x6458 : any) -> any_to_js x6458
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x6462 : Ojs.t) -> t_of_js __T_of_js x6462
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x6460 : __T t) -> t_to_js __T_to_js x6460
  end
module ClassDecorator =
  struct
    type t = [ `ClassDecorator ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6465 : Ojs.t) -> t_of_js x6465
    and t_0_to_js : t_0 -> Ojs.t = fun (x6464 : t) -> t_to_js x6464
    type tags = [ `ClassDecorator ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ClassDecorator ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6468 : Ojs.t) -> intf_of_js __tags_of_js x6468
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6466 : __tags intf) -> intf_to_js __tags_to_js x6466
    let (apply :
      'tags this -> target:'TFunction -> ('TFunction, unit) union2) =
      fun (x6471 : 'tags this) ->
        fun ~target:(x6470 : 'TFunction) ->
          union2_of_js Obj.magic Ojs.unit_of_js
            (Ojs.apply (this_to_js Obj.magic x6471) [|(Obj.magic x6470)|])
    let cast_from = Obj.magic
  end
module Capitalize =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t = fun (type __S) ->
      fun (__S_of_js : Ojs.t -> __S) -> fun (x6476 : Ojs.t) -> x6476
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) -> fun (x6475 : Ojs.t) -> x6475
    type 'S t_1 = 'S t
    let rec t_1_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t_1 = fun (type
      __S) ->
      fun (__S_of_js : Ojs.t -> __S) ->
        fun (x6479 : Ojs.t) -> t_of_js __S_of_js x6479
    and t_1_to_js : 'S . ('S -> Ojs.t) -> 'S t_1 -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) ->
        fun (x6477 : __S t) -> t_to_js __S_to_js x6477
  end
module ThisParameterType =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x6482 : Ojs.t) -> any_of_js x6482
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x6481 : any) -> any_to_js x6481
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x6485 : Ojs.t) -> t_of_js __T_of_js x6485
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x6483 : __T t) -> t_to_js __T_to_js x6483
  end
module OmitThisParameter =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x6488 : Ojs.t) -> any_of_js x6488
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x6487 : any) -> any_to_js x6487
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x6491 : Ojs.t) -> t_of_js __T_of_js x6491
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x6489 : __T t) -> t_to_js __T_to_js x6489
  end
module CallableFunction =
  struct
    type t = [ `CallableFunction  | `Function  | `Function ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6494 : Ojs.t) -> t_of_js x6494
    and t_0_to_js : t_0 -> Ojs.t = fun (x6493 : t) -> t_to_js x6493
    type tags = [ `CallableFunction  | `Function  | `Function ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `CallableFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6497 : Ojs.t) -> intf_of_js __tags_of_js x6497
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6495 : __tags intf) -> intf_to_js __tags_to_js x6495
    let (apply_ : 'tags this -> this:('T -> 'R) -> thisArg:'T -> 'R) =
      fun (x6502 : 'tags this) ->
        fun ~this:(x6499 : 'T -> 'R) ->
          fun ~thisArg:(x6501 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6502) "apply"
                 [|(Ojs.fun_to_js 1
                      (fun (x6500 : Ojs.t) ->
                         Obj.magic (x6499 (Obj.magic x6500))));(Obj.magic
                                                                  x6501)|])
    let (apply_' :
      'tags this ->
        this:(this:'T -> args:any list -> 'R) -> thisArg:'T -> args:'A -> 'R)
      =
      fun (x6509 : 'tags this) ->
        fun ~this:(x6504 : this:'T -> args:any list -> 'R) ->
          fun ~thisArg:(x6507 : 'T) ->
            fun ~args:(x6508 : 'A) ->
              Obj.magic
                (Ojs.call (this_to_js Obj.magic x6509) "apply"
                   [|(Ojs.fun_to_js_args
                        (fun (x6505 : _) ->
                           Obj.magic
                             (x6504 ~this:(Obj.magic (Ojs.array_get x6505 0))
                                ~args:(Ojs.list_of_js_from any_of_js x6505 1))));(
                     Obj.magic x6507);(Obj.magic x6508)|])
    let (call :
      'tags this ->
        this:(this:'T -> args:any list -> 'R) ->
          thisArg:'T -> args:any list -> 'R)
      =
      fun (x6518 : 'tags this) ->
        fun ~this:(x6511 : this:'T -> args:any list -> 'R) ->
          fun ~thisArg:(x6512 : 'T) ->
            fun ~args:(x6513 : any list) ->
              Obj.magic
                (let x6520 = this_to_js Obj.magic x6518 in
                 Ojs.call (Ojs.get_prop_ascii x6520 "call") "apply"
                   [|x6520;((let x6514 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6514 "push"
                                  [|(Ojs.fun_to_js_args
                                       (fun (x6516 : _) ->
                                          Obj.magic
                                            (x6511
                                               ~this:(Obj.magic
                                                        (Ojs.array_get x6516
                                                           0))
                                               ~args:(Ojs.list_of_js_from
                                                        any_of_js x6516 1))))|]);
                             ignore
                               (Ojs.call x6514 "push" [|(Obj.magic x6512)|]);
                             List.iter
                               (fun (x6515 : any) ->
                                  ignore
                                    (Ojs.call x6514 "push"
                                       [|(any_to_js x6515)|])) x6513;
                             x6514))|])
    let (bind :
      'tags this ->
        this:'T -> thisArg:'T ThisParameterType.t -> 'T OmitThisParameter.t)
      =
      fun (x6524 : 'tags this) ->
        fun ~this:(x6521 : 'T) ->
          fun ~thisArg:(x6522 : 'T ThisParameterType.t) ->
            OmitThisParameter.t_of_js Obj.magic
              (Ojs.call (this_to_js Obj.magic x6524) "bind"
                 [|(Obj.magic x6521);(ThisParameterType.t_to_js Obj.magic
                                        x6522)|])
    let (bind' :
      'tags this ->
        this:(this:'T -> arg0:'A0 -> args:any list -> 'R) ->
          thisArg:'T -> arg0:'A0 -> any list -> 'R)
      =
      fun (x6532 : 'tags this) ->
        fun ~this:(x6527 : this:'T -> arg0:'A0 -> args:any list -> 'R) ->
          fun ~thisArg:(x6530 : 'T) ->
            fun ~arg0:(x6531 : 'A0) ->
              fun (x6534 : any list) ->
                Obj.magic
                  (Ojs.call
                     (Ojs.call (this_to_js Obj.magic x6532) "bind"
                        [|(Ojs.fun_to_js_args
                             (fun (x6528 : _) ->
                                Obj.magic
                                  (x6527
                                     ~this:(Obj.magic (Ojs.array_get x6528 0))
                                     ~arg0:(Obj.magic (Ojs.array_get x6528 1))
                                     ~args:(Ojs.list_of_js_from any_of_js
                                              x6528 2))));(Obj.magic x6530);(
                          Obj.magic x6531)|]) "apply"
                     [|Ojs.null;((let x6535 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  List.iter
                                    (fun (x6536 : any) ->
                                       ignore
                                         (Ojs.call x6535 "push"
                                            [|(any_to_js x6536)|])) x6534;
                                  x6535))|])
    let (bind'' :
      'tags this ->
        this:(this:'T -> arg0:'A0 -> arg1:'A1 -> args:any list -> 'R) ->
          thisArg:'T -> arg0:'A0 -> arg1:'A1 -> any list -> 'R)
      =
      fun (x6543 : 'tags this) ->
        fun
          ~this:(x6537 :
                  this:'T -> arg0:'A0 -> arg1:'A1 -> args:any list -> 'R)
          ->
          fun ~thisArg:(x6540 : 'T) ->
            fun ~arg0:(x6541 : 'A0) ->
              fun ~arg1:(x6542 : 'A1) ->
                fun (x6545 : any list) ->
                  Obj.magic
                    (Ojs.call
                       (Ojs.call (this_to_js Obj.magic x6543) "bind"
                          [|(Ojs.fun_to_js_args
                               (fun (x6538 : _) ->
                                  Obj.magic
                                    (x6537
                                       ~this:(Obj.magic
                                                (Ojs.array_get x6538 0))
                                       ~arg0:(Obj.magic
                                                (Ojs.array_get x6538 1))
                                       ~arg1:(Obj.magic
                                                (Ojs.array_get x6538 2))
                                       ~args:(Ojs.list_of_js_from any_of_js
                                                x6538 3))));(Obj.magic x6540);(
                            Obj.magic x6541);(Obj.magic x6542)|]) "apply"
                       [|Ojs.null;((let x6546 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    List.iter
                                      (fun (x6547 : any) ->
                                         ignore
                                           (Ojs.call x6546 "push"
                                              [|(any_to_js x6547)|])) x6545;
                                    x6546))|])
    let (bind''' :
      'tags this ->
        this:(this:'T ->
                arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> args:any list -> 'R)
          -> thisArg:'T -> arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> any list -> 'R)
      =
      fun (x6555 : 'tags this) ->
        fun
          ~this:(x6548 :
                  this:'T ->
                    arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> args:any list -> 'R)
          ->
          fun ~thisArg:(x6551 : 'T) ->
            fun ~arg0:(x6552 : 'A0) ->
              fun ~arg1:(x6553 : 'A1) ->
                fun ~arg2:(x6554 : 'A2) ->
                  fun (x6557 : any list) ->
                    Obj.magic
                      (Ojs.call
                         (Ojs.call (this_to_js Obj.magic x6555) "bind"
                            [|(Ojs.fun_to_js_args
                                 (fun (x6549 : _) ->
                                    Obj.magic
                                      (x6548
                                         ~this:(Obj.magic
                                                  (Ojs.array_get x6549 0))
                                         ~arg0:(Obj.magic
                                                  (Ojs.array_get x6549 1))
                                         ~arg1:(Obj.magic
                                                  (Ojs.array_get x6549 2))
                                         ~arg2:(Obj.magic
                                                  (Ojs.array_get x6549 3))
                                         ~args:(Ojs.list_of_js_from any_of_js
                                                  x6549 4))));(Obj.magic
                                                                 x6551);(
                              Obj.magic x6552);(Obj.magic x6553);(Obj.magic
                                                                    x6554)|])
                         "apply"
                         [|Ojs.null;((let x6558 =
                                        Ojs.new_obj
                                          (Ojs.get_prop_ascii Ojs.global
                                             "Array") [||] in
                                      List.iter
                                        (fun (x6559 : any) ->
                                           ignore
                                             (Ojs.call x6558 "push"
                                                [|(any_to_js x6559)|])) x6557;
                                      x6558))|])
    let (bind'''' :
      'tags this ->
        this:(this:'T ->
                arg0:'A0 ->
                  arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> args:any list -> 'R)
          ->
          thisArg:'T ->
            arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> any list -> 'R)
      =
      fun (x6568 : 'tags this) ->
        fun
          ~this:(x6560 :
                  this:'T ->
                    arg0:'A0 ->
                      arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> args:any list -> 'R)
          ->
          fun ~thisArg:(x6563 : 'T) ->
            fun ~arg0:(x6564 : 'A0) ->
              fun ~arg1:(x6565 : 'A1) ->
                fun ~arg2:(x6566 : 'A2) ->
                  fun ~arg3:(x6567 : 'A3) ->
                    fun (x6570 : any list) ->
                      Obj.magic
                        (Ojs.call
                           (Ojs.call (this_to_js Obj.magic x6568) "bind"
                              [|(Ojs.fun_to_js_args
                                   (fun (x6561 : _) ->
                                      Obj.magic
                                        (x6560
                                           ~this:(Obj.magic
                                                    (Ojs.array_get x6561 0))
                                           ~arg0:(Obj.magic
                                                    (Ojs.array_get x6561 1))
                                           ~arg1:(Obj.magic
                                                    (Ojs.array_get x6561 2))
                                           ~arg2:(Obj.magic
                                                    (Ojs.array_get x6561 3))
                                           ~arg3:(Obj.magic
                                                    (Ojs.array_get x6561 4))
                                           ~args:(Ojs.list_of_js_from
                                                    any_of_js x6561 5))));(
                                Obj.magic x6563);(Obj.magic x6564);(Obj.magic
                                                                    x6565);(
                                Obj.magic x6566);(Obj.magic x6567)|]) "apply"
                           [|Ojs.null;((let x6571 =
                                          Ojs.new_obj
                                            (Ojs.get_prop_ascii Ojs.global
                                               "Array") [||] in
                                        List.iter
                                          (fun (x6572 : any) ->
                                             ignore
                                               (Ojs.call x6571 "push"
                                                  [|(any_to_js x6572)|]))
                                          x6570;
                                        x6571))|])
    let (bind''''' :
      'tags this ->
        this:(this:'T -> args:'AX list -> 'R) ->
          thisArg:'T -> args:'AX list -> 'AX list -> 'R)
      =
      fun (x6580 : 'tags this) ->
        fun ~this:(x6573 : this:'T -> args:'AX list -> 'R) ->
          fun ~thisArg:(x6574 : 'T) ->
            fun ~args:(x6575 : 'AX list) ->
              fun (x6583 : 'AX list) ->
                Obj.magic
                  (Ojs.call
                     (let x6582 = this_to_js Obj.magic x6580 in
                      Ojs.call (Ojs.get_prop_ascii x6582 "bind") "apply"
                        [|x6582;((let x6576 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x6576 "push"
                                       [|(Ojs.fun_to_js_args
                                            (fun (x6578 : _) ->
                                               Obj.magic
                                                 (x6573
                                                    ~this:(Obj.magic
                                                             (Ojs.array_get
                                                                x6578 0))
                                                    ~args:(Ojs.list_of_js_from
                                                             Obj.magic x6578
                                                             1))))|]);
                                  ignore
                                    (Ojs.call x6576 "push"
                                       [|(Obj.magic x6574)|]);
                                  List.iter
                                    (fun (x6577 : 'AX) ->
                                       ignore
                                         (Ojs.call x6576 "push"
                                            [|(Obj.magic x6577)|])) x6575;
                                  x6576))|]) "apply"
                     [|Ojs.null;((let x6584 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  List.iter
                                    (fun (x6585 : 'AX) ->
                                       ignore
                                         (Ojs.call x6584 "push"
                                            [|(Obj.magic x6585)|])) x6583;
                                  x6584))|])
    let cast_from = Obj.magic
  end
module Boolean =
  struct
    type t = [ `Boolean ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6587 : Ojs.t) -> t_of_js x6587
    and t_0_to_js : t_0 -> Ojs.t = fun (x6586 : t) -> t_to_js x6586
    type tags = [ `Boolean ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Boolean ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6590 : Ojs.t) -> intf_of_js __tags_of_js x6590
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6588 : __tags intf) -> intf_to_js __tags_to_js x6588
    let (valueOf : 'tags this -> bool) =
      fun (x6592 : 'tags this) ->
        Ojs.bool_of_js (Ojs.call (this_to_js Obj.magic x6592) "valueOf" [||])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x6594 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Boolean")
               (let x6595 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x6594 with
                 | Some x6596 ->
                     ignore (Ojs.call x6595 "push" [|(any_to_js x6596)|])
                 | None -> ());
                x6595))
    let (invoke : ?value:'T -> unit -> bool) =
      fun ?value:(x6597 : 'T option) ->
        fun () ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Boolean") "apply"
               [|Ojs.null;((let x6598 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x6597 with
                             | Some x6599 ->
                                 ignore
                                   (Ojs.call x6598 "push"
                                      [|(Obj.magic x6599)|])
                             | None -> ());
                            x6598))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Boolean")
             "prototype")
    let cast_from = Obj.magic
    let (of_ml : bool -> t) =
      fun (x6600 : bool) -> t_of_js (Ojs.bool_to_js x6600)
    let (to_ml : t -> bool) =
      fun (x6601 : t) ->
        Ojs.bool_of_js (Ojs.call (t_to_js x6601) "valueOf" [||])
  end
module BigIntToLocaleStringOptions =
  struct
    type t = [ `BigIntToLocaleStringOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6603 : Ojs.t) -> t_of_js x6603
    and t_0_to_js : t_0 -> Ojs.t = fun (x6602 : t) -> t_to_js x6602
    type tags = [ `BigIntToLocaleStringOptions ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `BigIntToLocaleStringOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6606 : Ojs.t) -> intf_of_js __tags_of_js x6606
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6604 : __tags intf) -> intf_to_js __tags_to_js x6604
    let (get_localeMatcher : 'tags this -> string) =
      fun (x6608 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6608) "localeMatcher")
    let (set_localeMatcher : 'tags this -> string -> unit) =
      fun (x6610 : 'tags this) ->
        fun (x6611 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6610) "localeMatcher"
            (Ojs.string_to_js x6611)
    let (get_style : 'tags this -> string) =
      fun (x6613 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6613) "style")
    let (set_style : 'tags this -> string -> unit) =
      fun (x6615 : 'tags this) ->
        fun (x6616 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6615) "style"
            (Ojs.string_to_js x6616)
    let (get_numberingSystem : 'tags this -> string) =
      fun (x6618 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6618) "numberingSystem")
    let (set_numberingSystem : 'tags this -> string -> unit) =
      fun (x6620 : 'tags this) ->
        fun (x6621 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6620) "numberingSystem"
            (Ojs.string_to_js x6621)
    let (get_unit : 'tags this -> string) =
      fun (x6623 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6623) "unit")
    let (set_unit : 'tags this -> string -> unit) =
      fun (x6625 : 'tags this) ->
        fun (x6626 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6625) "unit"
            (Ojs.string_to_js x6626)
    let (get_unitDisplay : 'tags this -> string) =
      fun (x6628 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6628) "unitDisplay")
    let (set_unitDisplay : 'tags this -> string -> unit) =
      fun (x6630 : 'tags this) ->
        fun (x6631 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6630) "unitDisplay"
            (Ojs.string_to_js x6631)
    let (get_currency : 'tags this -> string) =
      fun (x6633 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6633) "currency")
    let (set_currency : 'tags this -> string -> unit) =
      fun (x6635 : 'tags this) ->
        fun (x6636 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6635) "currency"
            (Ojs.string_to_js x6636)
    let (get_currencyDisplay : 'tags this -> string) =
      fun (x6638 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6638) "currencyDisplay")
    let (set_currencyDisplay : 'tags this -> string -> unit) =
      fun (x6640 : 'tags this) ->
        fun (x6641 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6640) "currencyDisplay"
            (Ojs.string_to_js x6641)
    let (get_useGrouping : 'tags this -> bool) =
      fun (x6643 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6643) "useGrouping")
    let (set_useGrouping : 'tags this -> bool -> unit) =
      fun (x6645 : 'tags this) ->
        fun (x6646 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6645) "useGrouping"
            (Ojs.bool_to_js x6646)
    let (get_minimumIntegerDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ])
      =
      fun (x6648 : 'tags this) ->
        let x6650 =
          Ojs.get_prop_ascii (this_to_js Obj.magic x6648)
            "minimumIntegerDigits" in
        match Ojs.int_of_js x6650 with
        | 1 -> `L_n_1
        | 10 -> `L_n_10
        | 11 -> `L_n_11
        | 12 -> `L_n_12
        | 13 -> `L_n_13
        | 14 -> `L_n_14
        | 15 -> `L_n_15
        | 16 -> `L_n_16
        | 17 -> `L_n_17
        | 18 -> `L_n_18
        | 19 -> `L_n_19
        | 2 -> `L_n_2
        | 20 -> `L_n_20
        | 21 -> `L_n_21
        | 3 -> `L_n_3
        | 4 -> `L_n_4
        | 5 -> `L_n_5
        | 6 -> `L_n_6
        | 7 -> `L_n_7
        | 8 -> `L_n_8
        | 9 -> `L_n_9
        | _ -> assert false
    let (set_minimumIntegerDigits :
      'tags this ->
        [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
        | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
        | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
        | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ]  | `U12 of [ `L_n_12 ] 
        | `U13 of [ `L_n_13 ]  | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
        | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ]  | `U18 of [ `L_n_18 ] 
        | `U19 of [ `L_n_19 ]  | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ]
          -> unit)
      =
      fun (x6651 : 'tags this) ->
        fun
          (x6652 :
            [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
            | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
            | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
            | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ] 
            | `U12 of [ `L_n_12 ]  | `U13 of [ `L_n_13 ] 
            | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
            | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ] 
            | `U18 of [ `L_n_18 ]  | `U19 of [ `L_n_19 ] 
            | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6651)
            "minimumIntegerDigits"
            (match x6652 with
             | `U1 x6653 -> (match x6653 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U2 x6654 -> (match x6654 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U3 x6655 -> (match x6655 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U4 x6656 -> (match x6656 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U5 x6657 -> (match x6657 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U6 x6658 -> (match x6658 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U7 x6659 -> (match x6659 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U8 x6660 -> (match x6660 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U9 x6661 -> (match x6661 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U10 x6662 -> (match x6662 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U11 x6663 -> (match x6663 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U12 x6664 -> (match x6664 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U13 x6665 -> (match x6665 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U14 x6666 -> (match x6666 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U15 x6667 -> (match x6667 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U16 x6668 -> (match x6668 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U17 x6669 -> (match x6669 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U18 x6670 -> (match x6670 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U19 x6671 -> (match x6671 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U20 x6672 -> (match x6672 with | `L_n_20 -> Ojs.int_to_js 20)
             | `U21 x6673 -> (match x6673 with | `L_n_21 -> Ojs.int_to_js 21))
    let (get_minimumFractionDigits :
      'tags this ->
        [ `L_n_0  | `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
        | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19 
        | `L_n_2  | `L_n_20  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ])
      =
      fun (x6675 : 'tags this) ->
        let x6677 =
          Ojs.get_prop_ascii (this_to_js Obj.magic x6675)
            "minimumFractionDigits" in
        match Ojs.int_of_js x6677 with
        | 0 -> `L_n_0
        | 1 -> `L_n_1
        | 10 -> `L_n_10
        | 11 -> `L_n_11
        | 12 -> `L_n_12
        | 13 -> `L_n_13
        | 14 -> `L_n_14
        | 15 -> `L_n_15
        | 16 -> `L_n_16
        | 17 -> `L_n_17
        | 18 -> `L_n_18
        | 19 -> `L_n_19
        | 2 -> `L_n_2
        | 20 -> `L_n_20
        | 3 -> `L_n_3
        | 4 -> `L_n_4
        | 5 -> `L_n_5
        | 6 -> `L_n_6
        | 7 -> `L_n_7
        | 8 -> `L_n_8
        | 9 -> `L_n_9
        | _ -> assert false
    let (set_minimumFractionDigits :
      'tags this ->
        [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
        | `U4 of [ `L_n_3 ]  | `U5 of [ `L_n_4 ]  | `U6 of [ `L_n_5 ] 
        | `U7 of [ `L_n_6 ]  | `U8 of [ `L_n_7 ]  | `U9 of [ `L_n_8 ] 
        | `U10 of [ `L_n_9 ]  | `U11 of [ `L_n_10 ]  | `U12 of [ `L_n_11 ] 
        | `U13 of [ `L_n_12 ]  | `U14 of [ `L_n_13 ]  | `U15 of [ `L_n_14 ] 
        | `U16 of [ `L_n_15 ]  | `U17 of [ `L_n_16 ]  | `U18 of [ `L_n_17 ] 
        | `U19 of [ `L_n_18 ]  | `U20 of [ `L_n_19 ]  | `U21 of [ `L_n_20 ] ]
          -> unit)
      =
      fun (x6678 : 'tags this) ->
        fun
          (x6679 :
            [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
            | `U4 of [ `L_n_3 ]  | `U5 of [ `L_n_4 ]  | `U6 of [ `L_n_5 ] 
            | `U7 of [ `L_n_6 ]  | `U8 of [ `L_n_7 ]  | `U9 of [ `L_n_8 ] 
            | `U10 of [ `L_n_9 ]  | `U11 of [ `L_n_10 ] 
            | `U12 of [ `L_n_11 ]  | `U13 of [ `L_n_12 ] 
            | `U14 of [ `L_n_13 ]  | `U15 of [ `L_n_14 ] 
            | `U16 of [ `L_n_15 ]  | `U17 of [ `L_n_16 ] 
            | `U18 of [ `L_n_17 ]  | `U19 of [ `L_n_18 ] 
            | `U20 of [ `L_n_19 ]  | `U21 of [ `L_n_20 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6678)
            "minimumFractionDigits"
            (match x6679 with
             | `U1 x6680 -> (match x6680 with | `L_n_0 -> Ojs.int_to_js 0)
             | `U2 x6681 -> (match x6681 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U3 x6682 -> (match x6682 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U4 x6683 -> (match x6683 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U5 x6684 -> (match x6684 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U6 x6685 -> (match x6685 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U7 x6686 -> (match x6686 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U8 x6687 -> (match x6687 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U9 x6688 -> (match x6688 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U10 x6689 -> (match x6689 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U11 x6690 -> (match x6690 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U12 x6691 -> (match x6691 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U13 x6692 -> (match x6692 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U14 x6693 -> (match x6693 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U15 x6694 -> (match x6694 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U16 x6695 -> (match x6695 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U17 x6696 -> (match x6696 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U18 x6697 -> (match x6697 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U19 x6698 -> (match x6698 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U20 x6699 -> (match x6699 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U21 x6700 -> (match x6700 with | `L_n_20 -> Ojs.int_to_js 20))
    let (get_maximumFractionDigits :
      'tags this ->
        [ `L_n_0  | `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
        | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19 
        | `L_n_2  | `L_n_20  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ])
      =
      fun (x6702 : 'tags this) ->
        let x6704 =
          Ojs.get_prop_ascii (this_to_js Obj.magic x6702)
            "maximumFractionDigits" in
        match Ojs.int_of_js x6704 with
        | 0 -> `L_n_0
        | 1 -> `L_n_1
        | 10 -> `L_n_10
        | 11 -> `L_n_11
        | 12 -> `L_n_12
        | 13 -> `L_n_13
        | 14 -> `L_n_14
        | 15 -> `L_n_15
        | 16 -> `L_n_16
        | 17 -> `L_n_17
        | 18 -> `L_n_18
        | 19 -> `L_n_19
        | 2 -> `L_n_2
        | 20 -> `L_n_20
        | 3 -> `L_n_3
        | 4 -> `L_n_4
        | 5 -> `L_n_5
        | 6 -> `L_n_6
        | 7 -> `L_n_7
        | 8 -> `L_n_8
        | 9 -> `L_n_9
        | _ -> assert false
    let (set_maximumFractionDigits :
      'tags this ->
        [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
        | `U4 of [ `L_n_3 ]  | `U5 of [ `L_n_4 ]  | `U6 of [ `L_n_5 ] 
        | `U7 of [ `L_n_6 ]  | `U8 of [ `L_n_7 ]  | `U9 of [ `L_n_8 ] 
        | `U10 of [ `L_n_9 ]  | `U11 of [ `L_n_10 ]  | `U12 of [ `L_n_11 ] 
        | `U13 of [ `L_n_12 ]  | `U14 of [ `L_n_13 ]  | `U15 of [ `L_n_14 ] 
        | `U16 of [ `L_n_15 ]  | `U17 of [ `L_n_16 ]  | `U18 of [ `L_n_17 ] 
        | `U19 of [ `L_n_18 ]  | `U20 of [ `L_n_19 ]  | `U21 of [ `L_n_20 ] ]
          -> unit)
      =
      fun (x6705 : 'tags this) ->
        fun
          (x6706 :
            [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
            | `U4 of [ `L_n_3 ]  | `U5 of [ `L_n_4 ]  | `U6 of [ `L_n_5 ] 
            | `U7 of [ `L_n_6 ]  | `U8 of [ `L_n_7 ]  | `U9 of [ `L_n_8 ] 
            | `U10 of [ `L_n_9 ]  | `U11 of [ `L_n_10 ] 
            | `U12 of [ `L_n_11 ]  | `U13 of [ `L_n_12 ] 
            | `U14 of [ `L_n_13 ]  | `U15 of [ `L_n_14 ] 
            | `U16 of [ `L_n_15 ]  | `U17 of [ `L_n_16 ] 
            | `U18 of [ `L_n_17 ]  | `U19 of [ `L_n_18 ] 
            | `U20 of [ `L_n_19 ]  | `U21 of [ `L_n_20 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6705)
            "maximumFractionDigits"
            (match x6706 with
             | `U1 x6707 -> (match x6707 with | `L_n_0 -> Ojs.int_to_js 0)
             | `U2 x6708 -> (match x6708 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U3 x6709 -> (match x6709 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U4 x6710 -> (match x6710 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U5 x6711 -> (match x6711 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U6 x6712 -> (match x6712 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U7 x6713 -> (match x6713 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U8 x6714 -> (match x6714 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U9 x6715 -> (match x6715 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U10 x6716 -> (match x6716 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U11 x6717 -> (match x6717 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U12 x6718 -> (match x6718 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U13 x6719 -> (match x6719 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U14 x6720 -> (match x6720 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U15 x6721 -> (match x6721 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U16 x6722 -> (match x6722 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U17 x6723 -> (match x6723 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U18 x6724 -> (match x6724 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U19 x6725 -> (match x6725 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U20 x6726 -> (match x6726 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U21 x6727 -> (match x6727 with | `L_n_20 -> Ojs.int_to_js 20))
    let (get_minimumSignificantDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ])
      =
      fun (x6729 : 'tags this) ->
        let x6731 =
          Ojs.get_prop_ascii (this_to_js Obj.magic x6729)
            "minimumSignificantDigits" in
        match Ojs.int_of_js x6731 with
        | 1 -> `L_n_1
        | 10 -> `L_n_10
        | 11 -> `L_n_11
        | 12 -> `L_n_12
        | 13 -> `L_n_13
        | 14 -> `L_n_14
        | 15 -> `L_n_15
        | 16 -> `L_n_16
        | 17 -> `L_n_17
        | 18 -> `L_n_18
        | 19 -> `L_n_19
        | 2 -> `L_n_2
        | 20 -> `L_n_20
        | 21 -> `L_n_21
        | 3 -> `L_n_3
        | 4 -> `L_n_4
        | 5 -> `L_n_5
        | 6 -> `L_n_6
        | 7 -> `L_n_7
        | 8 -> `L_n_8
        | 9 -> `L_n_9
        | _ -> assert false
    let (set_minimumSignificantDigits :
      'tags this ->
        [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
        | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
        | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
        | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ]  | `U12 of [ `L_n_12 ] 
        | `U13 of [ `L_n_13 ]  | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
        | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ]  | `U18 of [ `L_n_18 ] 
        | `U19 of [ `L_n_19 ]  | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ]
          -> unit)
      =
      fun (x6732 : 'tags this) ->
        fun
          (x6733 :
            [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
            | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
            | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
            | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ] 
            | `U12 of [ `L_n_12 ]  | `U13 of [ `L_n_13 ] 
            | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
            | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ] 
            | `U18 of [ `L_n_18 ]  | `U19 of [ `L_n_19 ] 
            | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6732)
            "minimumSignificantDigits"
            (match x6733 with
             | `U1 x6734 -> (match x6734 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U2 x6735 -> (match x6735 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U3 x6736 -> (match x6736 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U4 x6737 -> (match x6737 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U5 x6738 -> (match x6738 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U6 x6739 -> (match x6739 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U7 x6740 -> (match x6740 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U8 x6741 -> (match x6741 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U9 x6742 -> (match x6742 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U10 x6743 -> (match x6743 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U11 x6744 -> (match x6744 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U12 x6745 -> (match x6745 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U13 x6746 -> (match x6746 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U14 x6747 -> (match x6747 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U15 x6748 -> (match x6748 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U16 x6749 -> (match x6749 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U17 x6750 -> (match x6750 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U18 x6751 -> (match x6751 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U19 x6752 -> (match x6752 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U20 x6753 -> (match x6753 with | `L_n_20 -> Ojs.int_to_js 20)
             | `U21 x6754 -> (match x6754 with | `L_n_21 -> Ojs.int_to_js 21))
    let (get_maximumSignificantDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ])
      =
      fun (x6756 : 'tags this) ->
        let x6758 =
          Ojs.get_prop_ascii (this_to_js Obj.magic x6756)
            "maximumSignificantDigits" in
        match Ojs.int_of_js x6758 with
        | 1 -> `L_n_1
        | 10 -> `L_n_10
        | 11 -> `L_n_11
        | 12 -> `L_n_12
        | 13 -> `L_n_13
        | 14 -> `L_n_14
        | 15 -> `L_n_15
        | 16 -> `L_n_16
        | 17 -> `L_n_17
        | 18 -> `L_n_18
        | 19 -> `L_n_19
        | 2 -> `L_n_2
        | 20 -> `L_n_20
        | 21 -> `L_n_21
        | 3 -> `L_n_3
        | 4 -> `L_n_4
        | 5 -> `L_n_5
        | 6 -> `L_n_6
        | 7 -> `L_n_7
        | 8 -> `L_n_8
        | 9 -> `L_n_9
        | _ -> assert false
    let (set_maximumSignificantDigits :
      'tags this ->
        [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
        | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
        | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
        | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ]  | `U12 of [ `L_n_12 ] 
        | `U13 of [ `L_n_13 ]  | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
        | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ]  | `U18 of [ `L_n_18 ] 
        | `U19 of [ `L_n_19 ]  | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ]
          -> unit)
      =
      fun (x6759 : 'tags this) ->
        fun
          (x6760 :
            [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
            | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
            | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
            | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ] 
            | `U12 of [ `L_n_12 ]  | `U13 of [ `L_n_13 ] 
            | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
            | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ] 
            | `U18 of [ `L_n_18 ]  | `U19 of [ `L_n_19 ] 
            | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6759)
            "maximumSignificantDigits"
            (match x6760 with
             | `U1 x6761 -> (match x6761 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U2 x6762 -> (match x6762 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U3 x6763 -> (match x6763 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U4 x6764 -> (match x6764 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U5 x6765 -> (match x6765 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U6 x6766 -> (match x6766 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U7 x6767 -> (match x6767 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U8 x6768 -> (match x6768 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U9 x6769 -> (match x6769 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U10 x6770 -> (match x6770 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U11 x6771 -> (match x6771 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U12 x6772 -> (match x6772 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U13 x6773 -> (match x6773 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U14 x6774 -> (match x6774 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U15 x6775 -> (match x6775 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U16 x6776 -> (match x6776 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U17 x6777 -> (match x6777 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U18 x6778 -> (match x6778 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U19 x6779 -> (match x6779 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U20 x6780 -> (match x6780 with | `L_n_20 -> Ojs.int_to_js 20)
             | `U21 x6781 -> (match x6781 with | `L_n_21 -> Ojs.int_to_js 21))
    let (get_notation : 'tags this -> string) =
      fun (x6783 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6783) "notation")
    let (set_notation : 'tags this -> string -> unit) =
      fun (x6785 : 'tags this) ->
        fun (x6786 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6785) "notation"
            (Ojs.string_to_js x6786)
    let (get_compactDisplay : 'tags this -> string) =
      fun (x6788 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6788) "compactDisplay")
    let (set_compactDisplay : 'tags this -> string -> unit) =
      fun (x6790 : 'tags this) ->
        fun (x6791 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6790) "compactDisplay"
            (Ojs.string_to_js x6791)
    let (create :
      localeMatcher:string ->
        style:string ->
          numberingSystem:string ->
            unit:string ->
              unitDisplay:string ->
                currency:string ->
                  currencyDisplay:string ->
                    useGrouping:bool ->
                      minimumIntegerDigits:[ `L_n_1  | `L_n_10  | `L_n_11 
                                           | `L_n_12  | `L_n_13  | `L_n_14 
                                           | `L_n_15  | `L_n_16  | `L_n_17 
                                           | `L_n_18  | `L_n_19  | `L_n_2 
                                           | `L_n_20  | `L_n_21  | `L_n_3 
                                           | `L_n_4  | `L_n_5  | `L_n_6 
                                           | `L_n_7  | `L_n_8  | `L_n_9 ]
                        ->
                        minimumFractionDigits:[ `L_n_0  | `L_n_1  | `L_n_10 
                                              | `L_n_11  | `L_n_12 
                                              | `L_n_13  | `L_n_14 
                                              | `L_n_15  | `L_n_16 
                                              | `L_n_17  | `L_n_18 
                                              | `L_n_19  | `L_n_2  | 
                                                `L_n_20 
                                              | `L_n_3  | `L_n_4  | `L_n_5 
                                              | `L_n_6  | `L_n_7  | `L_n_8 
                                              | `L_n_9 ]
                          ->
                          maximumFractionDigits:[ `L_n_0  | `L_n_1 
                                                | `L_n_10  | `L_n_11 
                                                | `L_n_12  | `L_n_13 
                                                | `L_n_14  | `L_n_15 
                                                | `L_n_16  | `L_n_17 
                                                | `L_n_18  | `L_n_19 
                                                | `L_n_2  | `L_n_20 
                                                | `L_n_3  | `L_n_4  | 
                                                  `L_n_5 
                                                | `L_n_6  | `L_n_7  | 
                                                  `L_n_8 
                                                | `L_n_9 ]
                            ->
                            minimumSignificantDigits:[ `L_n_1  | `L_n_10 
                                                     | `L_n_11  | `L_n_12 
                                                     | `L_n_13  | `L_n_14 
                                                     | `L_n_15  | `L_n_16 
                                                     | `L_n_17  | `L_n_18 
                                                     | `L_n_19  | `L_n_2 
                                                     | `L_n_20  | `L_n_21 
                                                     | `L_n_3  | `L_n_4 
                                                     | `L_n_5  | `L_n_6 
                                                     | `L_n_7  | `L_n_8 
                                                     | `L_n_9 ]
                              ->
                              maximumSignificantDigits:[ `L_n_1  | `L_n_10 
                                                       | `L_n_11  | `L_n_12 
                                                       | `L_n_13  | `L_n_14 
                                                       | `L_n_15  | `L_n_16 
                                                       | `L_n_17  | `L_n_18 
                                                       | `L_n_19  | `L_n_2 
                                                       | `L_n_20  | `L_n_21 
                                                       | `L_n_3  | `L_n_4 
                                                       | `L_n_5  | `L_n_6 
                                                       | `L_n_7  | `L_n_8 
                                                       | `L_n_9 ]
                                ->
                                notation:string ->
                                  compactDisplay:string -> unit -> t)
      =
      fun ~localeMatcher:(x6793 : string) ->
        fun ~style:(x6794 : string) ->
          fun ~numberingSystem:(x6795 : string) ->
            fun ~unit:(x6796 : string) ->
              fun ~unitDisplay:(x6797 : string) ->
                fun ~currency:(x6798 : string) ->
                  fun ~currencyDisplay:(x6799 : string) ->
                    fun ~useGrouping:(x6800 : bool) ->
                      fun
                        ~minimumIntegerDigits:(x6801 :
                                                [ `L_n_1  | `L_n_10 
                                                | `L_n_11  | `L_n_12 
                                                | `L_n_13  | `L_n_14 
                                                | `L_n_15  | `L_n_16 
                                                | `L_n_17  | `L_n_18 
                                                | `L_n_19  | `L_n_2 
                                                | `L_n_20  | `L_n_21 
                                                | `L_n_3  | `L_n_4  | 
                                                  `L_n_5 
                                                | `L_n_6  | `L_n_7  | 
                                                  `L_n_8 
                                                | `L_n_9 ])
                        ->
                        fun
                          ~minimumFractionDigits:(x6802 :
                                                   [ `L_n_0  | `L_n_1 
                                                   | `L_n_10  | `L_n_11 
                                                   | `L_n_12  | `L_n_13 
                                                   | `L_n_14  | `L_n_15 
                                                   | `L_n_16  | `L_n_17 
                                                   | `L_n_18  | `L_n_19 
                                                   | `L_n_2  | `L_n_20 
                                                   | `L_n_3  | `L_n_4 
                                                   | `L_n_5  | `L_n_6 
                                                   | `L_n_7  | `L_n_8 
                                                   | `L_n_9 ])
                          ->
                          fun
                            ~maximumFractionDigits:(x6803 :
                                                     [ `L_n_0  | `L_n_1 
                                                     | `L_n_10  | `L_n_11 
                                                     | `L_n_12  | `L_n_13 
                                                     | `L_n_14  | `L_n_15 
                                                     | `L_n_16  | `L_n_17 
                                                     | `L_n_18  | `L_n_19 
                                                     | `L_n_2  | `L_n_20 
                                                     | `L_n_3  | `L_n_4 
                                                     | `L_n_5  | `L_n_6 
                                                     | `L_n_7  | `L_n_8 
                                                     | `L_n_9 ])
                            ->
                            fun
                              ~minimumSignificantDigits:(x6804 :
                                                          [ `L_n_1 
                                                          | `L_n_10 
                                                          | `L_n_11 
                                                          | `L_n_12 
                                                          | `L_n_13 
                                                          | `L_n_14 
                                                          | `L_n_15 
                                                          | `L_n_16 
                                                          | `L_n_17 
                                                          | `L_n_18 
                                                          | `L_n_19 
                                                          | `L_n_2 
                                                          | `L_n_20 
                                                          | `L_n_21 
                                                          | `L_n_3  | 
                                                            `L_n_4 
                                                          | `L_n_5  | 
                                                            `L_n_6 
                                                          | `L_n_7  | 
                                                            `L_n_8 
                                                          | `L_n_9 ])
                              ->
                              fun
                                ~maximumSignificantDigits:(x6805 :
                                                            [ `L_n_1 
                                                            | `L_n_10 
                                                            | `L_n_11 
                                                            | `L_n_12 
                                                            | `L_n_13 
                                                            | `L_n_14 
                                                            | `L_n_15 
                                                            | `L_n_16 
                                                            | `L_n_17 
                                                            | `L_n_18 
                                                            | `L_n_19 
                                                            | `L_n_2 
                                                            | `L_n_20 
                                                            | `L_n_21 
                                                            | `L_n_3 
                                                            | `L_n_4 
                                                            | `L_n_5 
                                                            | `L_n_6 
                                                            | `L_n_7 
                                                            | `L_n_8 
                                                            | `L_n_9 ])
                                ->
                                fun ~notation:(x6806 : string) ->
                                  fun ~compactDisplay:(x6807 : string) ->
                                    fun () ->
                                      let x6808 = Ojs.empty_obj () in
                                      Ojs.set_prop_ascii x6808
                                        "localeMatcher"
                                        (Ojs.string_to_js x6793);
                                      Ojs.set_prop_ascii x6808 "style"
                                        (Ojs.string_to_js x6794);
                                      Ojs.set_prop_ascii x6808
                                        "numberingSystem"
                                        (Ojs.string_to_js x6795);
                                      Ojs.set_prop_ascii x6808 "unit"
                                        (Ojs.string_to_js x6796);
                                      Ojs.set_prop_ascii x6808 "unitDisplay"
                                        (Ojs.string_to_js x6797);
                                      Ojs.set_prop_ascii x6808 "currency"
                                        (Ojs.string_to_js x6798);
                                      Ojs.set_prop_ascii x6808
                                        "currencyDisplay"
                                        (Ojs.string_to_js x6799);
                                      Ojs.set_prop_ascii x6808 "useGrouping"
                                        (Ojs.bool_to_js x6800);
                                      Ojs.set_prop_ascii x6808
                                        "minimumIntegerDigits"
                                        (match x6801 with
                                         | `L_n_1 -> Ojs.int_to_js 1
                                         | `L_n_10 -> Ojs.int_to_js 10
                                         | `L_n_11 -> Ojs.int_to_js 11
                                         | `L_n_12 -> Ojs.int_to_js 12
                                         | `L_n_13 -> Ojs.int_to_js 13
                                         | `L_n_14 -> Ojs.int_to_js 14
                                         | `L_n_15 -> Ojs.int_to_js 15
                                         | `L_n_16 -> Ojs.int_to_js 16
                                         | `L_n_17 -> Ojs.int_to_js 17
                                         | `L_n_18 -> Ojs.int_to_js 18
                                         | `L_n_19 -> Ojs.int_to_js 19
                                         | `L_n_2 -> Ojs.int_to_js 2
                                         | `L_n_20 -> Ojs.int_to_js 20
                                         | `L_n_21 -> Ojs.int_to_js 21
                                         | `L_n_3 -> Ojs.int_to_js 3
                                         | `L_n_4 -> Ojs.int_to_js 4
                                         | `L_n_5 -> Ojs.int_to_js 5
                                         | `L_n_6 -> Ojs.int_to_js 6
                                         | `L_n_7 -> Ojs.int_to_js 7
                                         | `L_n_8 -> Ojs.int_to_js 8
                                         | `L_n_9 -> Ojs.int_to_js 9);
                                      Ojs.set_prop_ascii x6808
                                        "minimumFractionDigits"
                                        (match x6802 with
                                         | `L_n_0 -> Ojs.int_to_js 0
                                         | `L_n_1 -> Ojs.int_to_js 1
                                         | `L_n_10 -> Ojs.int_to_js 10
                                         | `L_n_11 -> Ojs.int_to_js 11
                                         | `L_n_12 -> Ojs.int_to_js 12
                                         | `L_n_13 -> Ojs.int_to_js 13
                                         | `L_n_14 -> Ojs.int_to_js 14
                                         | `L_n_15 -> Ojs.int_to_js 15
                                         | `L_n_16 -> Ojs.int_to_js 16
                                         | `L_n_17 -> Ojs.int_to_js 17
                                         | `L_n_18 -> Ojs.int_to_js 18
                                         | `L_n_19 -> Ojs.int_to_js 19
                                         | `L_n_2 -> Ojs.int_to_js 2
                                         | `L_n_20 -> Ojs.int_to_js 20
                                         | `L_n_3 -> Ojs.int_to_js 3
                                         | `L_n_4 -> Ojs.int_to_js 4
                                         | `L_n_5 -> Ojs.int_to_js 5
                                         | `L_n_6 -> Ojs.int_to_js 6
                                         | `L_n_7 -> Ojs.int_to_js 7
                                         | `L_n_8 -> Ojs.int_to_js 8
                                         | `L_n_9 -> Ojs.int_to_js 9);
                                      Ojs.set_prop_ascii x6808
                                        "maximumFractionDigits"
                                        (match x6803 with
                                         | `L_n_0 -> Ojs.int_to_js 0
                                         | `L_n_1 -> Ojs.int_to_js 1
                                         | `L_n_10 -> Ojs.int_to_js 10
                                         | `L_n_11 -> Ojs.int_to_js 11
                                         | `L_n_12 -> Ojs.int_to_js 12
                                         | `L_n_13 -> Ojs.int_to_js 13
                                         | `L_n_14 -> Ojs.int_to_js 14
                                         | `L_n_15 -> Ojs.int_to_js 15
                                         | `L_n_16 -> Ojs.int_to_js 16
                                         | `L_n_17 -> Ojs.int_to_js 17
                                         | `L_n_18 -> Ojs.int_to_js 18
                                         | `L_n_19 -> Ojs.int_to_js 19
                                         | `L_n_2 -> Ojs.int_to_js 2
                                         | `L_n_20 -> Ojs.int_to_js 20
                                         | `L_n_3 -> Ojs.int_to_js 3
                                         | `L_n_4 -> Ojs.int_to_js 4
                                         | `L_n_5 -> Ojs.int_to_js 5
                                         | `L_n_6 -> Ojs.int_to_js 6
                                         | `L_n_7 -> Ojs.int_to_js 7
                                         | `L_n_8 -> Ojs.int_to_js 8
                                         | `L_n_9 -> Ojs.int_to_js 9);
                                      Ojs.set_prop_ascii x6808
                                        "minimumSignificantDigits"
                                        (match x6804 with
                                         | `L_n_1 -> Ojs.int_to_js 1
                                         | `L_n_10 -> Ojs.int_to_js 10
                                         | `L_n_11 -> Ojs.int_to_js 11
                                         | `L_n_12 -> Ojs.int_to_js 12
                                         | `L_n_13 -> Ojs.int_to_js 13
                                         | `L_n_14 -> Ojs.int_to_js 14
                                         | `L_n_15 -> Ojs.int_to_js 15
                                         | `L_n_16 -> Ojs.int_to_js 16
                                         | `L_n_17 -> Ojs.int_to_js 17
                                         | `L_n_18 -> Ojs.int_to_js 18
                                         | `L_n_19 -> Ojs.int_to_js 19
                                         | `L_n_2 -> Ojs.int_to_js 2
                                         | `L_n_20 -> Ojs.int_to_js 20
                                         | `L_n_21 -> Ojs.int_to_js 21
                                         | `L_n_3 -> Ojs.int_to_js 3
                                         | `L_n_4 -> Ojs.int_to_js 4
                                         | `L_n_5 -> Ojs.int_to_js 5
                                         | `L_n_6 -> Ojs.int_to_js 6
                                         | `L_n_7 -> Ojs.int_to_js 7
                                         | `L_n_8 -> Ojs.int_to_js 8
                                         | `L_n_9 -> Ojs.int_to_js 9);
                                      Ojs.set_prop_ascii x6808
                                        "maximumSignificantDigits"
                                        (match x6805 with
                                         | `L_n_1 -> Ojs.int_to_js 1
                                         | `L_n_10 -> Ojs.int_to_js 10
                                         | `L_n_11 -> Ojs.int_to_js 11
                                         | `L_n_12 -> Ojs.int_to_js 12
                                         | `L_n_13 -> Ojs.int_to_js 13
                                         | `L_n_14 -> Ojs.int_to_js 14
                                         | `L_n_15 -> Ojs.int_to_js 15
                                         | `L_n_16 -> Ojs.int_to_js 16
                                         | `L_n_17 -> Ojs.int_to_js 17
                                         | `L_n_18 -> Ojs.int_to_js 18
                                         | `L_n_19 -> Ojs.int_to_js 19
                                         | `L_n_2 -> Ojs.int_to_js 2
                                         | `L_n_20 -> Ojs.int_to_js 20
                                         | `L_n_21 -> Ojs.int_to_js 21
                                         | `L_n_3 -> Ojs.int_to_js 3
                                         | `L_n_4 -> Ojs.int_to_js 4
                                         | `L_n_5 -> Ojs.int_to_js 5
                                         | `L_n_6 -> Ojs.int_to_js 6
                                         | `L_n_7 -> Ojs.int_to_js 7
                                         | `L_n_8 -> Ojs.int_to_js 8
                                         | `L_n_9 -> Ojs.int_to_js 9);
                                      Ojs.set_prop_ascii x6808 "notation"
                                        (Ojs.string_to_js x6806);
                                      Ojs.set_prop_ascii x6808
                                        "compactDisplay"
                                        (Ojs.string_to_js x6807);
                                      t_of_js x6808
    let cast_from = Obj.magic
  end
module BigInt =
  struct
    type t = [ `BigInt ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6810 : Ojs.t) -> t_of_js x6810
    and t_0_to_js : t_0 -> Ojs.t = fun (x6809 : t) -> t_to_js x6809
    type tags = [ `BigInt ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `BigInt ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6813 : Ojs.t) -> intf_of_js __tags_of_js x6813
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6811 : __tags intf) -> intf_to_js __tags_to_js x6811
    let (toString : 'tags this -> ?radix:float -> unit -> string) =
      fun (x6818 : 'tags this) ->
        fun ?radix:(x6815 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x6820 = this_to_js Obj.magic x6818 in
               Ojs.call (Ojs.get_prop_ascii x6820 "toString") "apply"
                 [|x6820;((let x6816 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6815 with
                            | Some x6817 ->
                                ignore
                                  (Ojs.call x6816 "push"
                                     [|(Ojs.float_to_js x6817)|])
                            | None -> ());
                           x6816))|])
    let (toLocaleString :
      'tags this ->
        ?locales:string ->
          ?options:BigIntToLocaleStringOptions.t -> unit -> string)
      =
      fun (x6826 : 'tags this) ->
        fun ?locales:(x6821 : string option) ->
          fun ?options:(x6822 : BigIntToLocaleStringOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x6828 = this_to_js Obj.magic x6826 in
                 Ojs.call (Ojs.get_prop_ascii x6828 "toLocaleString") "apply"
                   [|x6828;((let x6823 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6821 with
                              | Some x6825 ->
                                  ignore
                                    (Ojs.call x6823 "push"
                                       [|(Ojs.string_to_js x6825)|])
                              | None -> ());
                             (match x6822 with
                              | Some x6824 ->
                                  ignore
                                    (Ojs.call x6823 "push"
                                       [|(BigIntToLocaleStringOptions.t_to_js
                                            x6824)|])
                              | None -> ());
                             x6823))|])
    let (valueOf : 'tags this -> bigint) =
      fun (x6829 : 'tags this) ->
        bigint_of_js (Ojs.call (this_to_js Obj.magic x6829) "valueOf" [||])
    let (invoke :
      [ `U1 of bigint  | `U2 of bool  | `U3 of float  | `U4 of string ] ->
        bigint)
      =
      fun
        (x6831 :
          [ `U1 of bigint  | `U2 of bool  | `U3 of float  | `U4 of string ])
        ->
        bigint_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "BigInt")
             [|((match x6831 with
                 | `U1 x6832 -> bigint_to_js x6832
                 | `U2 x6833 -> Ojs.bool_to_js x6833
                 | `U3 x6834 -> Ojs.float_to_js x6834
                 | `U4 x6835 -> Ojs.string_to_js x6835))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "BigInt")
             "prototype")
    let (asIntN : bits:float -> int:bigint -> bigint) =
      fun ~bits:(x6836 : float) ->
        fun ~int:(x6837 : bigint) ->
          bigint_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigInt") "asIntN"
               [|(Ojs.float_to_js x6836);(bigint_to_js x6837)|])
    let (asUintN : bits:float -> int:bigint -> bigint) =
      fun ~bits:(x6838 : float) ->
        fun ~int:(x6839 : bigint) ->
          bigint_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigInt") "asUintN"
               [|(Ojs.float_to_js x6838);(bigint_to_js x6839)|])
    let cast_from = Obj.magic
  end
module Uint8Array =
  struct
    type t =
      [ `Uint8Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6841 : Ojs.t) -> t_of_js x6841
    and t_0_to_js : t_0 -> Ojs.t = fun (x6840 : t) -> t_to_js x6840
    type tags =
      [ `Uint8Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Uint8Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6844 : Ojs.t) -> intf_of_js __tags_of_js x6844
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6842 : __tags intf) -> intf_to_js __tags_to_js x6842
    let (at : 'tags this -> index:float -> float option) =
      fun (x6847 : 'tags this) ->
        fun ~index:(x6846 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6847) "at"
               [|(Ojs.float_to_js x6846)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x6854 : 'tags this) ->
        fun ~searchElement:(x6850 : float) ->
          fun ?fromIndex:(x6851 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6856 = this_to_js Obj.magic x6854 in
                 Ojs.call (Ojs.get_prop_ascii x6856 "includes") "apply"
                   [|x6856;((let x6852 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6852 "push"
                                  [|(Ojs.float_to_js x6850)|]);
                             (match x6851 with
                              | Some x6853 ->
                                  ignore
                                    (Ojs.call x6852 "push"
                                       [|(Ojs.float_to_js x6853)|])
                              | None -> ());
                             x6852))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x6857 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x6859 : Ojs.t) ->
             let x6860 = x6859 in
             ((Ojs.float_of_js (Ojs.array_get x6860 0)),
               (Ojs.float_of_js (Ojs.array_get x6860 1))))
          (Ojs.call (this_to_js Obj.magic x6857) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x6861 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6861) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x6864 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6864) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x6867 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6867)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x6869 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6869) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x6871 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6871) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x6873 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6873) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6880 : 'tags this) ->
        fun ~target:(x6875 : float) ->
          fun ~start:(x6876 : float) ->
            fun ?end_:(x6877 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6882 = this_to_js Obj.magic x6880 in
                   Ojs.call (Ojs.get_prop_ascii x6882 "copyWithin") "apply"
                     [|x6882;((let x6878 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6878 "push"
                                    [|(Ojs.float_to_js x6875)|]);
                               ignore
                                 (Ojs.call x6878 "push"
                                    [|(Ojs.float_to_js x6876)|]);
                               (match x6877 with
                                | Some x6879 ->
                                    ignore
                                      (Ojs.call x6878 "push"
                                         [|(Ojs.float_to_js x6879)|])
                                | None -> ());
                               x6878))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6891 : 'tags this) ->
        fun
          ~predicate:(x6884 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6885 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6893 = this_to_js Obj.magic x6891 in
                 Ojs.call (Ojs.get_prop_ascii x6893 "every") "apply"
                   [|x6893;((let x6886 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6886 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6888 : Ojs.t) ->
                                          fun (x6889 : Ojs.t) ->
                                            fun (x6890 : Ojs.t) ->
                                              unknown_to_js
                                                (x6884
                                                   ~value:(Ojs.float_of_js
                                                             x6888)
                                                   ~index:(Ojs.float_of_js
                                                             x6889)
                                                   ~array:(t_of_js x6890))))|]);
                             (match x6885 with
                              | Some x6887 ->
                                  ignore
                                    (Ojs.call x6886 "push"
                                       [|(any_to_js x6887)|])
                              | None -> ());
                             x6886))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6900 : 'tags this) ->
        fun ~value:(x6894 : float) ->
          fun ?start:(x6895 : float option) ->
            fun ?end_:(x6896 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6902 = this_to_js Obj.magic x6900 in
                   Ojs.call (Ojs.get_prop_ascii x6902 "fill") "apply"
                     [|x6902;((let x6897 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6897 "push"
                                    [|(Ojs.float_to_js x6894)|]);
                               (match x6895 with
                                | Some x6899 ->
                                    ignore
                                      (Ojs.call x6897 "push"
                                         [|(Ojs.float_to_js x6899)|])
                                | None -> ());
                               (match x6896 with
                                | Some x6898 ->
                                    ignore
                                      (Ojs.call x6897 "push"
                                         [|(Ojs.float_to_js x6898)|])
                                | None -> ());
                               x6897))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6911 : 'tags this) ->
        fun ~predicate:(x6904 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x6905 : any option) ->
            fun () ->
              t_of_js
                (let x6913 = this_to_js Obj.magic x6911 in
                 Ojs.call (Ojs.get_prop_ascii x6913 "filter") "apply"
                   [|x6913;((let x6906 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6906 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6908 : Ojs.t) ->
                                          fun (x6909 : Ojs.t) ->
                                            fun (x6910 : Ojs.t) ->
                                              any_to_js
                                                (x6904
                                                   ~value:(Ojs.float_of_js
                                                             x6908)
                                                   ~index:(Ojs.float_of_js
                                                             x6909)
                                                   ~array:(t_of_js x6910))))|]);
                             (match x6905 with
                              | Some x6907 ->
                                  ignore
                                    (Ojs.call x6906 "push"
                                       [|(any_to_js x6907)|])
                              | None -> ());
                             x6906))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x6921 : 'tags this) ->
        fun ~predicate:(x6914 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6915 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x6923 = this_to_js Obj.magic x6921 in
                 Ojs.call (Ojs.get_prop_ascii x6923 "find") "apply"
                   [|x6923;((let x6916 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6916 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6918 : Ojs.t) ->
                                          fun (x6919 : Ojs.t) ->
                                            fun (x6920 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6914
                                                   ~value:(Ojs.float_of_js
                                                             x6918)
                                                   ~index:(Ojs.float_of_js
                                                             x6919)
                                                   ~obj:(t_of_js x6920))))|]);
                             (match x6915 with
                              | Some x6917 ->
                                  ignore
                                    (Ojs.call x6916 "push"
                                       [|(any_to_js x6917)|])
                              | None -> ());
                             x6916))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x6932 : 'tags this) ->
        fun ~predicate:(x6925 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6926 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x6934 = this_to_js Obj.magic x6932 in
                 Ojs.call (Ojs.get_prop_ascii x6934 "findIndex") "apply"
                   [|x6934;((let x6927 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6927 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6929 : Ojs.t) ->
                                          fun (x6930 : Ojs.t) ->
                                            fun (x6931 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6925
                                                   ~value:(Ojs.float_of_js
                                                             x6929)
                                                   ~index:(Ojs.float_of_js
                                                             x6930)
                                                   ~obj:(t_of_js x6931))))|]);
                             (match x6926 with
                              | Some x6928 ->
                                  ignore
                                    (Ojs.call x6927 "push"
                                       [|(any_to_js x6928)|])
                              | None -> ());
                             x6927))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x6942 : 'tags this) ->
        fun
          ~callbackfn:(x6935 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x6936 : any option) ->
            fun () ->
              ignore
                (let x6944 = this_to_js Obj.magic x6942 in
                 Ojs.call (Ojs.get_prop_ascii x6944 "forEach") "apply"
                   [|x6944;((let x6937 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6937 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6939 : Ojs.t) ->
                                          fun (x6940 : Ojs.t) ->
                                            fun (x6941 : Ojs.t) ->
                                              x6935
                                                ~value:(Ojs.float_of_js x6939)
                                                ~index:(Ojs.float_of_js x6940)
                                                ~array:(t_of_js x6941)))|]);
                             (match x6936 with
                              | Some x6938 ->
                                  ignore
                                    (Ojs.call x6937 "push"
                                       [|(any_to_js x6938)|])
                              | None -> ());
                             x6937))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6949 : 'tags this) ->
        fun ~searchElement:(x6945 : float) ->
          fun ?fromIndex:(x6946 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6951 = this_to_js Obj.magic x6949 in
                 Ojs.call (Ojs.get_prop_ascii x6951 "indexOf") "apply"
                   [|x6951;((let x6947 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6947 "push"
                                  [|(Ojs.float_to_js x6945)|]);
                             (match x6946 with
                              | Some x6948 ->
                                  ignore
                                    (Ojs.call x6947 "push"
                                       [|(Ojs.float_to_js x6948)|])
                              | None -> ());
                             x6947))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x6955 : 'tags this) ->
        fun ?separator:(x6952 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x6957 = this_to_js Obj.magic x6955 in
               Ojs.call (Ojs.get_prop_ascii x6957 "join") "apply"
                 [|x6957;((let x6953 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6952 with
                            | Some x6954 ->
                                ignore
                                  (Ojs.call x6953 "push"
                                     [|(Ojs.string_to_js x6954)|])
                            | None -> ());
                           x6953))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6962 : 'tags this) ->
        fun ~searchElement:(x6958 : float) ->
          fun ?fromIndex:(x6959 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6964 = this_to_js Obj.magic x6962 in
                 Ojs.call (Ojs.get_prop_ascii x6964 "lastIndexOf") "apply"
                   [|x6964;((let x6960 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6960 "push"
                                  [|(Ojs.float_to_js x6958)|]);
                             (match x6959 with
                              | Some x6961 ->
                                  ignore
                                    (Ojs.call x6960 "push"
                                       [|(Ojs.float_to_js x6961)|])
                              | None -> ());
                             x6960))|])
    let (get_length : 'tags this -> float) =
      fun (x6965 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6965) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6974 : 'tags this) ->
        fun
          ~callbackfn:(x6967 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x6968 : any option) ->
            fun () ->
              t_of_js
                (let x6976 = this_to_js Obj.magic x6974 in
                 Ojs.call (Ojs.get_prop_ascii x6976 "map") "apply"
                   [|x6976;((let x6969 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6969 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6971 : Ojs.t) ->
                                          fun (x6972 : Ojs.t) ->
                                            fun (x6973 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x6967
                                                   ~value:(Ojs.float_of_js
                                                             x6971)
                                                   ~index:(Ojs.float_of_js
                                                             x6972)
                                                   ~array:(t_of_js x6973))))|]);
                             (match x6968 with
                              | Some x6970 ->
                                  ignore
                                    (Ojs.call x6969 "push"
                                       [|(any_to_js x6970)|])
                              | None -> ());
                             x6969))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6982 : 'tags this) ->
        fun
          ~callbackfn:(x6977 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6982) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x6978 : Ojs.t) ->
                       fun (x6979 : Ojs.t) ->
                         fun (x6980 : Ojs.t) ->
                           fun (x6981 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6977 ~previousValue:(Ojs.float_of_js x6978)
                                  ~currentValue:(Ojs.float_of_js x6979)
                                  ~currentIndex:(Ojs.float_of_js x6980)
                                  ~array:(t_of_js x6981))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6990 : 'tags this) ->
        fun
          ~callbackfn:(x6984 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6989 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6990) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6985 : Ojs.t) ->
                         fun (x6986 : Ojs.t) ->
                           fun (x6987 : Ojs.t) ->
                             fun (x6988 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6984
                                    ~previousValue:(Ojs.float_of_js x6985)
                                    ~currentValue:(Ojs.float_of_js x6986)
                                    ~currentIndex:(Ojs.float_of_js x6987)
                                    ~array:(t_of_js x6988))));(Ojs.float_to_js
                                                                 x6989)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6998 : 'tags this) ->
        fun
          ~callbackfn:(x6992 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6997 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6998) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6993 : Ojs.t) ->
                         fun (x6994 : Ojs.t) ->
                           fun (x6995 : Ojs.t) ->
                             fun (x6996 : Ojs.t) ->
                               Obj.magic
                                 (x6992 ~previousValue:(Obj.magic x6993)
                                    ~currentValue:(Ojs.float_of_js x6994)
                                    ~currentIndex:(Ojs.float_of_js x6995)
                                    ~array:(t_of_js x6996))));(Obj.magic
                                                                 x6997)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7005 : 'tags this) ->
        fun
          ~callbackfn:(x7000 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7005) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7001 : Ojs.t) ->
                       fun (x7002 : Ojs.t) ->
                         fun (x7003 : Ojs.t) ->
                           fun (x7004 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7000 ~previousValue:(Ojs.float_of_js x7001)
                                  ~currentValue:(Ojs.float_of_js x7002)
                                  ~currentIndex:(Ojs.float_of_js x7003)
                                  ~array:(t_of_js x7004))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7013 : 'tags this) ->
        fun
          ~callbackfn:(x7007 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7012 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7013) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7008 : Ojs.t) ->
                         fun (x7009 : Ojs.t) ->
                           fun (x7010 : Ojs.t) ->
                             fun (x7011 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7007
                                    ~previousValue:(Ojs.float_of_js x7008)
                                    ~currentValue:(Ojs.float_of_js x7009)
                                    ~currentIndex:(Ojs.float_of_js x7010)
                                    ~array:(t_of_js x7011))));(Ojs.float_to_js
                                                                 x7012)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7021 : 'tags this) ->
        fun
          ~callbackfn:(x7015 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7020 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7021) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7016 : Ojs.t) ->
                         fun (x7017 : Ojs.t) ->
                           fun (x7018 : Ojs.t) ->
                             fun (x7019 : Ojs.t) ->
                               Obj.magic
                                 (x7015 ~previousValue:(Obj.magic x7016)
                                    ~currentValue:(Ojs.float_of_js x7017)
                                    ~currentIndex:(Ojs.float_of_js x7018)
                                    ~array:(t_of_js x7019))));(Obj.magic
                                                                 x7020)|])
    let (reverse : 'tags this -> t) =
      fun (x7023 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7023) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7030 : 'tags this) ->
        fun ~array:(x7025 : float ArrayLike.t) ->
          fun ?offset:(x7026 : float option) ->
            fun () ->
              ignore
                (let x7032 = this_to_js Obj.magic x7030 in
                 Ojs.call (Ojs.get_prop_ascii x7032 "set") "apply"
                   [|x7032;((let x7027 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7027 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x7025)|]);
                             (match x7026 with
                              | Some x7028 ->
                                  ignore
                                    (Ojs.call x7027 "push"
                                       [|(Ojs.float_to_js x7028)|])
                              | None -> ());
                             x7027))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7038 : 'tags this) ->
        fun ?start:(x7033 : float option) ->
          fun ?end_:(x7034 : float option) ->
            fun () ->
              t_of_js
                (let x7040 = this_to_js Obj.magic x7038 in
                 Ojs.call (Ojs.get_prop_ascii x7040 "slice") "apply"
                   [|x7040;((let x7035 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7033 with
                              | Some x7037 ->
                                  ignore
                                    (Ojs.call x7035 "push"
                                       [|(Ojs.float_to_js x7037)|])
                              | None -> ());
                             (match x7034 with
                              | Some x7036 ->
                                  ignore
                                    (Ojs.call x7035 "push"
                                       [|(Ojs.float_to_js x7036)|])
                              | None -> ());
                             x7035))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7048 : 'tags this) ->
        fun
          ~predicate:(x7041 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7042 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7050 = this_to_js Obj.magic x7048 in
                 Ojs.call (Ojs.get_prop_ascii x7050 "some") "apply"
                   [|x7050;((let x7043 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7043 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7045 : Ojs.t) ->
                                          fun (x7046 : Ojs.t) ->
                                            fun (x7047 : Ojs.t) ->
                                              unknown_to_js
                                                (x7041
                                                   ~value:(Ojs.float_of_js
                                                             x7045)
                                                   ~index:(Ojs.float_of_js
                                                             x7046)
                                                   ~array:(t_of_js x7047))))|]);
                             (match x7042 with
                              | Some x7044 ->
                                  ignore
                                    (Ojs.call x7043 "push"
                                       [|(any_to_js x7044)|])
                              | None -> ());
                             x7043))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x7056 : 'tags this) ->
        fun ?compareFn:(x7051 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x7058 = this_to_js Obj.magic x7056 in
               Ojs.call (Ojs.get_prop_ascii x7058 "sort") "apply"
                 [|x7058;((let x7052 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7051 with
                            | Some x7053 ->
                                ignore
                                  (Ojs.call x7052 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7054 : Ojs.t) ->
                                             fun (x7055 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x7053
                                                    ~a:(Ojs.float_of_js x7054)
                                                    ~b:(Ojs.float_of_js x7055))))|])
                            | None -> ());
                           x7052))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x7065 : 'tags this) ->
        fun ?begin_:(x7060 : float option) ->
          fun ?end_:(x7061 : float option) ->
            fun () ->
              t_of_js
                (let x7067 = this_to_js Obj.magic x7065 in
                 Ojs.call (Ojs.get_prop_ascii x7067 "subarray") "apply"
                   [|x7067;((let x7062 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7060 with
                              | Some x7064 ->
                                  ignore
                                    (Ojs.call x7062 "push"
                                       [|(Ojs.float_to_js x7064)|])
                              | None -> ());
                             (match x7061 with
                              | Some x7063 ->
                                  ignore
                                    (Ojs.call x7062 "push"
                                       [|(Ojs.float_to_js x7063)|])
                              | None -> ());
                             x7062))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x7068 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7068) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x7070 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7070) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x7072 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7072) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x7074 : 'tags this) ->
        fun (x7076 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x7074)
               (Ojs.float_to_js x7076))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x7077 : 'tags this) ->
        fun (x7079 : float) ->
          fun (x7080 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x7077) (Ojs.float_to_js x7079)
              (Ojs.float_to_js x7080)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x7081 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|(Iterable.t_to_js Ojs.float_to_js x7081)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7083 : float Iterable.t) ->
        fun ?mapfn:(x7084 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x7085 : any option) ->
            fun () ->
              t_of_js
                (let x7092 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
                 Ojs.call (Ojs.get_prop_ascii x7092 "from") "apply"
                   [|x7092;((let x7086 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7086 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x7083)|]);
                             (match x7084 with
                              | Some x7088 ->
                                  ignore
                                    (Ojs.call x7086 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x7089 : Ojs.t) ->
                                               fun (x7090 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x7088
                                                      ~v:(Ojs.float_of_js
                                                            x7089)
                                                      ~k:(Ojs.float_of_js
                                                            x7090))))|])
                              | None -> ());
                             (match x7085 with
                              | Some x7087 ->
                                  ignore
                                    (Ojs.call x7086 "push"
                                       [|(any_to_js x7087)|])
                              | None -> ());
                             x7086))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x7093 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|(Ojs.float_to_js x7093)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x7094 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|((match x7094 with
                 | `U1 x7095 -> ArrayLike.t_to_js Ojs.float_to_js x7095
                 | `U2 x7097 -> ArrayBufferLike.t_to_js x7097))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x7098 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x7099 : float option) ->
          fun ?length:(x7100 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Uint8Array")
                   (let x7101 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x7101 "push"
                         [|(ArrayBufferLike.t_to_js x7098)|]);
                    (match x7099 with
                     | Some x7103 ->
                         ignore
                           (Ojs.call x7101 "push" [|(Ojs.float_to_js x7103)|])
                     | None -> ());
                    (match x7100 with
                     | Some x7102 ->
                         ignore
                           (Ojs.call x7101 "push" [|(Ojs.float_to_js x7102)|])
                     | None -> ());
                    x7101))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x7104 : float list) ->
        t_of_js
          (let x7107 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
           Ojs.call (Ojs.get_prop_ascii x7107 "of") "apply"
             [|x7107;((let x7105 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x7106 : float) ->
                            ignore
                              (Ojs.call x7105 "push"
                                 [|(Ojs.float_to_js x7106)|])) x7104;
                       x7105))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x7108 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint8Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x7108)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7110 : 'T ArrayLike.t) ->
        fun ~mapfn:(x7111 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x7112 : any option) ->
            fun () ->
              t_of_js
                (let x7118 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
                 Ojs.call (Ojs.get_prop_ascii x7118 "from") "apply"
                   [|x7118;((let x7113 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7113 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x7110)|]);
                             ignore
                               (Ojs.call x7113 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x7115 : Ojs.t) ->
                                          fun (x7116 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x7111 ~v:(Obj.magic x7115)
                                                 ~k:(Ojs.float_of_js x7116))))|]);
                             (match x7112 with
                              | Some x7114 ->
                                  ignore
                                    (Ojs.call x7113 "push"
                                       [|(any_to_js x7114)|])
                              | None -> ());
                             x7113))|])
    let cast_from = Obj.magic
  end
module Uint32Array =
  struct
    type t =
      [ `Uint32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7120 : Ojs.t) -> t_of_js x7120
    and t_0_to_js : t_0 -> Ojs.t = fun (x7119 : t) -> t_to_js x7119
    type tags =
      [ `Uint32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Uint32Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7123 : Ojs.t) -> intf_of_js __tags_of_js x7123
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7121 : __tags intf) -> intf_to_js __tags_to_js x7121
    let (at : 'tags this -> index:float -> float option) =
      fun (x7126 : 'tags this) ->
        fun ~index:(x7125 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7126) "at"
               [|(Ojs.float_to_js x7125)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x7133 : 'tags this) ->
        fun ~searchElement:(x7129 : float) ->
          fun ?fromIndex:(x7130 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7135 = this_to_js Obj.magic x7133 in
                 Ojs.call (Ojs.get_prop_ascii x7135 "includes") "apply"
                   [|x7135;((let x7131 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7131 "push"
                                  [|(Ojs.float_to_js x7129)|]);
                             (match x7130 with
                              | Some x7132 ->
                                  ignore
                                    (Ojs.call x7131 "push"
                                       [|(Ojs.float_to_js x7132)|])
                              | None -> ());
                             x7131))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x7136 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x7138 : Ojs.t) ->
             let x7139 = x7138 in
             ((Ojs.float_of_js (Ojs.array_get x7139 0)),
               (Ojs.float_of_js (Ojs.array_get x7139 1))))
          (Ojs.call (this_to_js Obj.magic x7136) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x7140 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7140) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x7143 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7143) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x7146 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7146)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x7148 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7148) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x7150 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7150) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x7152 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7152) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7159 : 'tags this) ->
        fun ~target:(x7154 : float) ->
          fun ~start:(x7155 : float) ->
            fun ?end_:(x7156 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7161 = this_to_js Obj.magic x7159 in
                   Ojs.call (Ojs.get_prop_ascii x7161 "copyWithin") "apply"
                     [|x7161;((let x7157 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7157 "push"
                                    [|(Ojs.float_to_js x7154)|]);
                               ignore
                                 (Ojs.call x7157 "push"
                                    [|(Ojs.float_to_js x7155)|]);
                               (match x7156 with
                                | Some x7158 ->
                                    ignore
                                      (Ojs.call x7157 "push"
                                         [|(Ojs.float_to_js x7158)|])
                                | None -> ());
                               x7157))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7170 : 'tags this) ->
        fun
          ~predicate:(x7163 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7164 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7172 = this_to_js Obj.magic x7170 in
                 Ojs.call (Ojs.get_prop_ascii x7172 "every") "apply"
                   [|x7172;((let x7165 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7165 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7167 : Ojs.t) ->
                                          fun (x7168 : Ojs.t) ->
                                            fun (x7169 : Ojs.t) ->
                                              unknown_to_js
                                                (x7163
                                                   ~value:(Ojs.float_of_js
                                                             x7167)
                                                   ~index:(Ojs.float_of_js
                                                             x7168)
                                                   ~array:(t_of_js x7169))))|]);
                             (match x7164 with
                              | Some x7166 ->
                                  ignore
                                    (Ojs.call x7165 "push"
                                       [|(any_to_js x7166)|])
                              | None -> ());
                             x7165))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7179 : 'tags this) ->
        fun ~value:(x7173 : float) ->
          fun ?start:(x7174 : float option) ->
            fun ?end_:(x7175 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7181 = this_to_js Obj.magic x7179 in
                   Ojs.call (Ojs.get_prop_ascii x7181 "fill") "apply"
                     [|x7181;((let x7176 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7176 "push"
                                    [|(Ojs.float_to_js x7173)|]);
                               (match x7174 with
                                | Some x7178 ->
                                    ignore
                                      (Ojs.call x7176 "push"
                                         [|(Ojs.float_to_js x7178)|])
                                | None -> ());
                               (match x7175 with
                                | Some x7177 ->
                                    ignore
                                      (Ojs.call x7176 "push"
                                         [|(Ojs.float_to_js x7177)|])
                                | None -> ());
                               x7176))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7190 : 'tags this) ->
        fun ~predicate:(x7183 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7184 : any option) ->
            fun () ->
              t_of_js
                (let x7192 = this_to_js Obj.magic x7190 in
                 Ojs.call (Ojs.get_prop_ascii x7192 "filter") "apply"
                   [|x7192;((let x7185 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7185 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7187 : Ojs.t) ->
                                          fun (x7188 : Ojs.t) ->
                                            fun (x7189 : Ojs.t) ->
                                              any_to_js
                                                (x7183
                                                   ~value:(Ojs.float_of_js
                                                             x7187)
                                                   ~index:(Ojs.float_of_js
                                                             x7188)
                                                   ~array:(t_of_js x7189))))|]);
                             (match x7184 with
                              | Some x7186 ->
                                  ignore
                                    (Ojs.call x7185 "push"
                                       [|(any_to_js x7186)|])
                              | None -> ());
                             x7185))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x7200 : 'tags this) ->
        fun ~predicate:(x7193 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7194 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x7202 = this_to_js Obj.magic x7200 in
                 Ojs.call (Ojs.get_prop_ascii x7202 "find") "apply"
                   [|x7202;((let x7195 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7195 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7197 : Ojs.t) ->
                                          fun (x7198 : Ojs.t) ->
                                            fun (x7199 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7193
                                                   ~value:(Ojs.float_of_js
                                                             x7197)
                                                   ~index:(Ojs.float_of_js
                                                             x7198)
                                                   ~obj:(t_of_js x7199))))|]);
                             (match x7194 with
                              | Some x7196 ->
                                  ignore
                                    (Ojs.call x7195 "push"
                                       [|(any_to_js x7196)|])
                              | None -> ());
                             x7195))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7211 : 'tags this) ->
        fun ~predicate:(x7204 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7205 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7213 = this_to_js Obj.magic x7211 in
                 Ojs.call (Ojs.get_prop_ascii x7213 "findIndex") "apply"
                   [|x7213;((let x7206 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7206 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7208 : Ojs.t) ->
                                          fun (x7209 : Ojs.t) ->
                                            fun (x7210 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7204
                                                   ~value:(Ojs.float_of_js
                                                             x7208)
                                                   ~index:(Ojs.float_of_js
                                                             x7209)
                                                   ~obj:(t_of_js x7210))))|]);
                             (match x7205 with
                              | Some x7207 ->
                                  ignore
                                    (Ojs.call x7206 "push"
                                       [|(any_to_js x7207)|])
                              | None -> ());
                             x7206))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x7221 : 'tags this) ->
        fun
          ~callbackfn:(x7214 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x7215 : any option) ->
            fun () ->
              ignore
                (let x7223 = this_to_js Obj.magic x7221 in
                 Ojs.call (Ojs.get_prop_ascii x7223 "forEach") "apply"
                   [|x7223;((let x7216 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7216 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7218 : Ojs.t) ->
                                          fun (x7219 : Ojs.t) ->
                                            fun (x7220 : Ojs.t) ->
                                              x7214
                                                ~value:(Ojs.float_of_js x7218)
                                                ~index:(Ojs.float_of_js x7219)
                                                ~array:(t_of_js x7220)))|]);
                             (match x7215 with
                              | Some x7217 ->
                                  ignore
                                    (Ojs.call x7216 "push"
                                       [|(any_to_js x7217)|])
                              | None -> ());
                             x7216))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7228 : 'tags this) ->
        fun ~searchElement:(x7224 : float) ->
          fun ?fromIndex:(x7225 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7230 = this_to_js Obj.magic x7228 in
                 Ojs.call (Ojs.get_prop_ascii x7230 "indexOf") "apply"
                   [|x7230;((let x7226 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7226 "push"
                                  [|(Ojs.float_to_js x7224)|]);
                             (match x7225 with
                              | Some x7227 ->
                                  ignore
                                    (Ojs.call x7226 "push"
                                       [|(Ojs.float_to_js x7227)|])
                              | None -> ());
                             x7226))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x7234 : 'tags this) ->
        fun ?separator:(x7231 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x7236 = this_to_js Obj.magic x7234 in
               Ojs.call (Ojs.get_prop_ascii x7236 "join") "apply"
                 [|x7236;((let x7232 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7231 with
                            | Some x7233 ->
                                ignore
                                  (Ojs.call x7232 "push"
                                     [|(Ojs.string_to_js x7233)|])
                            | None -> ());
                           x7232))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7241 : 'tags this) ->
        fun ~searchElement:(x7237 : float) ->
          fun ?fromIndex:(x7238 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7243 = this_to_js Obj.magic x7241 in
                 Ojs.call (Ojs.get_prop_ascii x7243 "lastIndexOf") "apply"
                   [|x7243;((let x7239 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7239 "push"
                                  [|(Ojs.float_to_js x7237)|]);
                             (match x7238 with
                              | Some x7240 ->
                                  ignore
                                    (Ojs.call x7239 "push"
                                       [|(Ojs.float_to_js x7240)|])
                              | None -> ());
                             x7239))|])
    let (get_length : 'tags this -> float) =
      fun (x7244 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7244) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7253 : 'tags this) ->
        fun
          ~callbackfn:(x7246 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x7247 : any option) ->
            fun () ->
              t_of_js
                (let x7255 = this_to_js Obj.magic x7253 in
                 Ojs.call (Ojs.get_prop_ascii x7255 "map") "apply"
                   [|x7255;((let x7248 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7248 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7250 : Ojs.t) ->
                                          fun (x7251 : Ojs.t) ->
                                            fun (x7252 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x7246
                                                   ~value:(Ojs.float_of_js
                                                             x7250)
                                                   ~index:(Ojs.float_of_js
                                                             x7251)
                                                   ~array:(t_of_js x7252))))|]);
                             (match x7247 with
                              | Some x7249 ->
                                  ignore
                                    (Ojs.call x7248 "push"
                                       [|(any_to_js x7249)|])
                              | None -> ());
                             x7248))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7261 : 'tags this) ->
        fun
          ~callbackfn:(x7256 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7261) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x7257 : Ojs.t) ->
                       fun (x7258 : Ojs.t) ->
                         fun (x7259 : Ojs.t) ->
                           fun (x7260 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7256 ~previousValue:(Ojs.float_of_js x7257)
                                  ~currentValue:(Ojs.float_of_js x7258)
                                  ~currentIndex:(Ojs.float_of_js x7259)
                                  ~array:(t_of_js x7260))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7269 : 'tags this) ->
        fun
          ~callbackfn:(x7263 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7268 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7269) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7264 : Ojs.t) ->
                         fun (x7265 : Ojs.t) ->
                           fun (x7266 : Ojs.t) ->
                             fun (x7267 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7263
                                    ~previousValue:(Ojs.float_of_js x7264)
                                    ~currentValue:(Ojs.float_of_js x7265)
                                    ~currentIndex:(Ojs.float_of_js x7266)
                                    ~array:(t_of_js x7267))));(Ojs.float_to_js
                                                                 x7268)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7277 : 'tags this) ->
        fun
          ~callbackfn:(x7271 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7276 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7277) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7272 : Ojs.t) ->
                         fun (x7273 : Ojs.t) ->
                           fun (x7274 : Ojs.t) ->
                             fun (x7275 : Ojs.t) ->
                               Obj.magic
                                 (x7271 ~previousValue:(Obj.magic x7272)
                                    ~currentValue:(Ojs.float_of_js x7273)
                                    ~currentIndex:(Ojs.float_of_js x7274)
                                    ~array:(t_of_js x7275))));(Obj.magic
                                                                 x7276)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7284 : 'tags this) ->
        fun
          ~callbackfn:(x7279 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7284) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7280 : Ojs.t) ->
                       fun (x7281 : Ojs.t) ->
                         fun (x7282 : Ojs.t) ->
                           fun (x7283 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7279 ~previousValue:(Ojs.float_of_js x7280)
                                  ~currentValue:(Ojs.float_of_js x7281)
                                  ~currentIndex:(Ojs.float_of_js x7282)
                                  ~array:(t_of_js x7283))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7292 : 'tags this) ->
        fun
          ~callbackfn:(x7286 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7291 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7292) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7287 : Ojs.t) ->
                         fun (x7288 : Ojs.t) ->
                           fun (x7289 : Ojs.t) ->
                             fun (x7290 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7286
                                    ~previousValue:(Ojs.float_of_js x7287)
                                    ~currentValue:(Ojs.float_of_js x7288)
                                    ~currentIndex:(Ojs.float_of_js x7289)
                                    ~array:(t_of_js x7290))));(Ojs.float_to_js
                                                                 x7291)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7300 : 'tags this) ->
        fun
          ~callbackfn:(x7294 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7299 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7300) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7295 : Ojs.t) ->
                         fun (x7296 : Ojs.t) ->
                           fun (x7297 : Ojs.t) ->
                             fun (x7298 : Ojs.t) ->
                               Obj.magic
                                 (x7294 ~previousValue:(Obj.magic x7295)
                                    ~currentValue:(Ojs.float_of_js x7296)
                                    ~currentIndex:(Ojs.float_of_js x7297)
                                    ~array:(t_of_js x7298))));(Obj.magic
                                                                 x7299)|])
    let (reverse : 'tags this -> t) =
      fun (x7302 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7302) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7309 : 'tags this) ->
        fun ~array:(x7304 : float ArrayLike.t) ->
          fun ?offset:(x7305 : float option) ->
            fun () ->
              ignore
                (let x7311 = this_to_js Obj.magic x7309 in
                 Ojs.call (Ojs.get_prop_ascii x7311 "set") "apply"
                   [|x7311;((let x7306 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7306 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x7304)|]);
                             (match x7305 with
                              | Some x7307 ->
                                  ignore
                                    (Ojs.call x7306 "push"
                                       [|(Ojs.float_to_js x7307)|])
                              | None -> ());
                             x7306))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7317 : 'tags this) ->
        fun ?start:(x7312 : float option) ->
          fun ?end_:(x7313 : float option) ->
            fun () ->
              t_of_js
                (let x7319 = this_to_js Obj.magic x7317 in
                 Ojs.call (Ojs.get_prop_ascii x7319 "slice") "apply"
                   [|x7319;((let x7314 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7312 with
                              | Some x7316 ->
                                  ignore
                                    (Ojs.call x7314 "push"
                                       [|(Ojs.float_to_js x7316)|])
                              | None -> ());
                             (match x7313 with
                              | Some x7315 ->
                                  ignore
                                    (Ojs.call x7314 "push"
                                       [|(Ojs.float_to_js x7315)|])
                              | None -> ());
                             x7314))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7327 : 'tags this) ->
        fun
          ~predicate:(x7320 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7321 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7329 = this_to_js Obj.magic x7327 in
                 Ojs.call (Ojs.get_prop_ascii x7329 "some") "apply"
                   [|x7329;((let x7322 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7322 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7324 : Ojs.t) ->
                                          fun (x7325 : Ojs.t) ->
                                            fun (x7326 : Ojs.t) ->
                                              unknown_to_js
                                                (x7320
                                                   ~value:(Ojs.float_of_js
                                                             x7324)
                                                   ~index:(Ojs.float_of_js
                                                             x7325)
                                                   ~array:(t_of_js x7326))))|]);
                             (match x7321 with
                              | Some x7323 ->
                                  ignore
                                    (Ojs.call x7322 "push"
                                       [|(any_to_js x7323)|])
                              | None -> ());
                             x7322))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x7335 : 'tags this) ->
        fun ?compareFn:(x7330 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x7337 = this_to_js Obj.magic x7335 in
               Ojs.call (Ojs.get_prop_ascii x7337 "sort") "apply"
                 [|x7337;((let x7331 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7330 with
                            | Some x7332 ->
                                ignore
                                  (Ojs.call x7331 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7333 : Ojs.t) ->
                                             fun (x7334 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x7332
                                                    ~a:(Ojs.float_of_js x7333)
                                                    ~b:(Ojs.float_of_js x7334))))|])
                            | None -> ());
                           x7331))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x7344 : 'tags this) ->
        fun ?begin_:(x7339 : float option) ->
          fun ?end_:(x7340 : float option) ->
            fun () ->
              t_of_js
                (let x7346 = this_to_js Obj.magic x7344 in
                 Ojs.call (Ojs.get_prop_ascii x7346 "subarray") "apply"
                   [|x7346;((let x7341 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7339 with
                              | Some x7343 ->
                                  ignore
                                    (Ojs.call x7341 "push"
                                       [|(Ojs.float_to_js x7343)|])
                              | None -> ());
                             (match x7340 with
                              | Some x7342 ->
                                  ignore
                                    (Ojs.call x7341 "push"
                                       [|(Ojs.float_to_js x7342)|])
                              | None -> ());
                             x7341))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x7347 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7347) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x7349 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7349) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x7351 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7351) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x7353 : 'tags this) ->
        fun (x7355 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x7353)
               (Ojs.float_to_js x7355))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x7356 : 'tags this) ->
        fun (x7358 : float) ->
          fun (x7359 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x7356) (Ojs.float_to_js x7358)
              (Ojs.float_to_js x7359)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x7360 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|(Iterable.t_to_js Ojs.float_to_js x7360)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7362 : float Iterable.t) ->
        fun ?mapfn:(x7363 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x7364 : any option) ->
            fun () ->
              t_of_js
                (let x7371 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
                 Ojs.call (Ojs.get_prop_ascii x7371 "from") "apply"
                   [|x7371;((let x7365 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7365 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x7362)|]);
                             (match x7363 with
                              | Some x7367 ->
                                  ignore
                                    (Ojs.call x7365 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x7368 : Ojs.t) ->
                                               fun (x7369 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x7367
                                                      ~v:(Ojs.float_of_js
                                                            x7368)
                                                      ~k:(Ojs.float_of_js
                                                            x7369))))|])
                              | None -> ());
                             (match x7364 with
                              | Some x7366 ->
                                  ignore
                                    (Ojs.call x7365 "push"
                                       [|(any_to_js x7366)|])
                              | None -> ());
                             x7365))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x7372 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|(Ojs.float_to_js x7372)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x7373 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|((match x7373 with
                 | `U1 x7374 -> ArrayLike.t_to_js Ojs.float_to_js x7374
                 | `U2 x7376 -> ArrayBufferLike.t_to_js x7376))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x7377 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x7378 : float option) ->
          fun ?length:(x7379 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint32Array")
                   (let x7380 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x7380 "push"
                         [|(ArrayBufferLike.t_to_js x7377)|]);
                    (match x7378 with
                     | Some x7382 ->
                         ignore
                           (Ojs.call x7380 "push" [|(Ojs.float_to_js x7382)|])
                     | None -> ());
                    (match x7379 with
                     | Some x7381 ->
                         ignore
                           (Ojs.call x7380 "push" [|(Ojs.float_to_js x7381)|])
                     | None -> ());
                    x7380))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x7383 : float list) ->
        t_of_js
          (let x7386 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
           Ojs.call (Ojs.get_prop_ascii x7386 "of") "apply"
             [|x7386;((let x7384 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x7385 : float) ->
                            ignore
                              (Ojs.call x7384 "push"
                                 [|(Ojs.float_to_js x7385)|])) x7383;
                       x7384))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x7387 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint32Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x7387)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7389 : 'T ArrayLike.t) ->
        fun ~mapfn:(x7390 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x7391 : any option) ->
            fun () ->
              t_of_js
                (let x7397 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
                 Ojs.call (Ojs.get_prop_ascii x7397 "from") "apply"
                   [|x7397;((let x7392 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7392 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x7389)|]);
                             ignore
                               (Ojs.call x7392 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x7394 : Ojs.t) ->
                                          fun (x7395 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x7390 ~v:(Obj.magic x7394)
                                                 ~k:(Ojs.float_of_js x7395))))|]);
                             (match x7391 with
                              | Some x7393 ->
                                  ignore
                                    (Ojs.call x7392 "push"
                                       [|(any_to_js x7393)|])
                              | None -> ());
                             x7392))|])
    let cast_from = Obj.magic
  end
module Uint16Array =
  struct
    type t =
      [ `Uint16Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7399 : Ojs.t) -> t_of_js x7399
    and t_0_to_js : t_0 -> Ojs.t = fun (x7398 : t) -> t_to_js x7398
    type tags =
      [ `Uint16Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Uint16Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7402 : Ojs.t) -> intf_of_js __tags_of_js x7402
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7400 : __tags intf) -> intf_to_js __tags_to_js x7400
    let (at : 'tags this -> index:float -> float option) =
      fun (x7405 : 'tags this) ->
        fun ~index:(x7404 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7405) "at"
               [|(Ojs.float_to_js x7404)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x7412 : 'tags this) ->
        fun ~searchElement:(x7408 : float) ->
          fun ?fromIndex:(x7409 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7414 = this_to_js Obj.magic x7412 in
                 Ojs.call (Ojs.get_prop_ascii x7414 "includes") "apply"
                   [|x7414;((let x7410 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7410 "push"
                                  [|(Ojs.float_to_js x7408)|]);
                             (match x7409 with
                              | Some x7411 ->
                                  ignore
                                    (Ojs.call x7410 "push"
                                       [|(Ojs.float_to_js x7411)|])
                              | None -> ());
                             x7410))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x7415 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x7417 : Ojs.t) ->
             let x7418 = x7417 in
             ((Ojs.float_of_js (Ojs.array_get x7418 0)),
               (Ojs.float_of_js (Ojs.array_get x7418 1))))
          (Ojs.call (this_to_js Obj.magic x7415) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x7419 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7419) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x7422 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7422) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x7425 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7425)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x7427 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7427) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x7429 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7429) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x7431 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7431) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7438 : 'tags this) ->
        fun ~target:(x7433 : float) ->
          fun ~start:(x7434 : float) ->
            fun ?end_:(x7435 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7440 = this_to_js Obj.magic x7438 in
                   Ojs.call (Ojs.get_prop_ascii x7440 "copyWithin") "apply"
                     [|x7440;((let x7436 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7436 "push"
                                    [|(Ojs.float_to_js x7433)|]);
                               ignore
                                 (Ojs.call x7436 "push"
                                    [|(Ojs.float_to_js x7434)|]);
                               (match x7435 with
                                | Some x7437 ->
                                    ignore
                                      (Ojs.call x7436 "push"
                                         [|(Ojs.float_to_js x7437)|])
                                | None -> ());
                               x7436))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7449 : 'tags this) ->
        fun
          ~predicate:(x7442 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7443 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7451 = this_to_js Obj.magic x7449 in
                 Ojs.call (Ojs.get_prop_ascii x7451 "every") "apply"
                   [|x7451;((let x7444 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7444 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7446 : Ojs.t) ->
                                          fun (x7447 : Ojs.t) ->
                                            fun (x7448 : Ojs.t) ->
                                              unknown_to_js
                                                (x7442
                                                   ~value:(Ojs.float_of_js
                                                             x7446)
                                                   ~index:(Ojs.float_of_js
                                                             x7447)
                                                   ~array:(t_of_js x7448))))|]);
                             (match x7443 with
                              | Some x7445 ->
                                  ignore
                                    (Ojs.call x7444 "push"
                                       [|(any_to_js x7445)|])
                              | None -> ());
                             x7444))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7458 : 'tags this) ->
        fun ~value:(x7452 : float) ->
          fun ?start:(x7453 : float option) ->
            fun ?end_:(x7454 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7460 = this_to_js Obj.magic x7458 in
                   Ojs.call (Ojs.get_prop_ascii x7460 "fill") "apply"
                     [|x7460;((let x7455 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7455 "push"
                                    [|(Ojs.float_to_js x7452)|]);
                               (match x7453 with
                                | Some x7457 ->
                                    ignore
                                      (Ojs.call x7455 "push"
                                         [|(Ojs.float_to_js x7457)|])
                                | None -> ());
                               (match x7454 with
                                | Some x7456 ->
                                    ignore
                                      (Ojs.call x7455 "push"
                                         [|(Ojs.float_to_js x7456)|])
                                | None -> ());
                               x7455))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7469 : 'tags this) ->
        fun ~predicate:(x7462 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7463 : any option) ->
            fun () ->
              t_of_js
                (let x7471 = this_to_js Obj.magic x7469 in
                 Ojs.call (Ojs.get_prop_ascii x7471 "filter") "apply"
                   [|x7471;((let x7464 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7464 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7466 : Ojs.t) ->
                                          fun (x7467 : Ojs.t) ->
                                            fun (x7468 : Ojs.t) ->
                                              any_to_js
                                                (x7462
                                                   ~value:(Ojs.float_of_js
                                                             x7466)
                                                   ~index:(Ojs.float_of_js
                                                             x7467)
                                                   ~array:(t_of_js x7468))))|]);
                             (match x7463 with
                              | Some x7465 ->
                                  ignore
                                    (Ojs.call x7464 "push"
                                       [|(any_to_js x7465)|])
                              | None -> ());
                             x7464))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x7479 : 'tags this) ->
        fun ~predicate:(x7472 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7473 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x7481 = this_to_js Obj.magic x7479 in
                 Ojs.call (Ojs.get_prop_ascii x7481 "find") "apply"
                   [|x7481;((let x7474 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7474 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7476 : Ojs.t) ->
                                          fun (x7477 : Ojs.t) ->
                                            fun (x7478 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7472
                                                   ~value:(Ojs.float_of_js
                                                             x7476)
                                                   ~index:(Ojs.float_of_js
                                                             x7477)
                                                   ~obj:(t_of_js x7478))))|]);
                             (match x7473 with
                              | Some x7475 ->
                                  ignore
                                    (Ojs.call x7474 "push"
                                       [|(any_to_js x7475)|])
                              | None -> ());
                             x7474))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7490 : 'tags this) ->
        fun ~predicate:(x7483 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7484 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7492 = this_to_js Obj.magic x7490 in
                 Ojs.call (Ojs.get_prop_ascii x7492 "findIndex") "apply"
                   [|x7492;((let x7485 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7485 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7487 : Ojs.t) ->
                                          fun (x7488 : Ojs.t) ->
                                            fun (x7489 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7483
                                                   ~value:(Ojs.float_of_js
                                                             x7487)
                                                   ~index:(Ojs.float_of_js
                                                             x7488)
                                                   ~obj:(t_of_js x7489))))|]);
                             (match x7484 with
                              | Some x7486 ->
                                  ignore
                                    (Ojs.call x7485 "push"
                                       [|(any_to_js x7486)|])
                              | None -> ());
                             x7485))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x7500 : 'tags this) ->
        fun
          ~callbackfn:(x7493 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x7494 : any option) ->
            fun () ->
              ignore
                (let x7502 = this_to_js Obj.magic x7500 in
                 Ojs.call (Ojs.get_prop_ascii x7502 "forEach") "apply"
                   [|x7502;((let x7495 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7495 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7497 : Ojs.t) ->
                                          fun (x7498 : Ojs.t) ->
                                            fun (x7499 : Ojs.t) ->
                                              x7493
                                                ~value:(Ojs.float_of_js x7497)
                                                ~index:(Ojs.float_of_js x7498)
                                                ~array:(t_of_js x7499)))|]);
                             (match x7494 with
                              | Some x7496 ->
                                  ignore
                                    (Ojs.call x7495 "push"
                                       [|(any_to_js x7496)|])
                              | None -> ());
                             x7495))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7507 : 'tags this) ->
        fun ~searchElement:(x7503 : float) ->
          fun ?fromIndex:(x7504 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7509 = this_to_js Obj.magic x7507 in
                 Ojs.call (Ojs.get_prop_ascii x7509 "indexOf") "apply"
                   [|x7509;((let x7505 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7505 "push"
                                  [|(Ojs.float_to_js x7503)|]);
                             (match x7504 with
                              | Some x7506 ->
                                  ignore
                                    (Ojs.call x7505 "push"
                                       [|(Ojs.float_to_js x7506)|])
                              | None -> ());
                             x7505))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x7513 : 'tags this) ->
        fun ?separator:(x7510 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x7515 = this_to_js Obj.magic x7513 in
               Ojs.call (Ojs.get_prop_ascii x7515 "join") "apply"
                 [|x7515;((let x7511 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7510 with
                            | Some x7512 ->
                                ignore
                                  (Ojs.call x7511 "push"
                                     [|(Ojs.string_to_js x7512)|])
                            | None -> ());
                           x7511))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7520 : 'tags this) ->
        fun ~searchElement:(x7516 : float) ->
          fun ?fromIndex:(x7517 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7522 = this_to_js Obj.magic x7520 in
                 Ojs.call (Ojs.get_prop_ascii x7522 "lastIndexOf") "apply"
                   [|x7522;((let x7518 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7518 "push"
                                  [|(Ojs.float_to_js x7516)|]);
                             (match x7517 with
                              | Some x7519 ->
                                  ignore
                                    (Ojs.call x7518 "push"
                                       [|(Ojs.float_to_js x7519)|])
                              | None -> ());
                             x7518))|])
    let (get_length : 'tags this -> float) =
      fun (x7523 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7523) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7532 : 'tags this) ->
        fun
          ~callbackfn:(x7525 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x7526 : any option) ->
            fun () ->
              t_of_js
                (let x7534 = this_to_js Obj.magic x7532 in
                 Ojs.call (Ojs.get_prop_ascii x7534 "map") "apply"
                   [|x7534;((let x7527 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7527 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7529 : Ojs.t) ->
                                          fun (x7530 : Ojs.t) ->
                                            fun (x7531 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x7525
                                                   ~value:(Ojs.float_of_js
                                                             x7529)
                                                   ~index:(Ojs.float_of_js
                                                             x7530)
                                                   ~array:(t_of_js x7531))))|]);
                             (match x7526 with
                              | Some x7528 ->
                                  ignore
                                    (Ojs.call x7527 "push"
                                       [|(any_to_js x7528)|])
                              | None -> ());
                             x7527))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7540 : 'tags this) ->
        fun
          ~callbackfn:(x7535 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7540) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x7536 : Ojs.t) ->
                       fun (x7537 : Ojs.t) ->
                         fun (x7538 : Ojs.t) ->
                           fun (x7539 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7535 ~previousValue:(Ojs.float_of_js x7536)
                                  ~currentValue:(Ojs.float_of_js x7537)
                                  ~currentIndex:(Ojs.float_of_js x7538)
                                  ~array:(t_of_js x7539))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7548 : 'tags this) ->
        fun
          ~callbackfn:(x7542 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7547 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7548) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7543 : Ojs.t) ->
                         fun (x7544 : Ojs.t) ->
                           fun (x7545 : Ojs.t) ->
                             fun (x7546 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7542
                                    ~previousValue:(Ojs.float_of_js x7543)
                                    ~currentValue:(Ojs.float_of_js x7544)
                                    ~currentIndex:(Ojs.float_of_js x7545)
                                    ~array:(t_of_js x7546))));(Ojs.float_to_js
                                                                 x7547)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7556 : 'tags this) ->
        fun
          ~callbackfn:(x7550 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7555 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7556) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7551 : Ojs.t) ->
                         fun (x7552 : Ojs.t) ->
                           fun (x7553 : Ojs.t) ->
                             fun (x7554 : Ojs.t) ->
                               Obj.magic
                                 (x7550 ~previousValue:(Obj.magic x7551)
                                    ~currentValue:(Ojs.float_of_js x7552)
                                    ~currentIndex:(Ojs.float_of_js x7553)
                                    ~array:(t_of_js x7554))));(Obj.magic
                                                                 x7555)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7563 : 'tags this) ->
        fun
          ~callbackfn:(x7558 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7563) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7559 : Ojs.t) ->
                       fun (x7560 : Ojs.t) ->
                         fun (x7561 : Ojs.t) ->
                           fun (x7562 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7558 ~previousValue:(Ojs.float_of_js x7559)
                                  ~currentValue:(Ojs.float_of_js x7560)
                                  ~currentIndex:(Ojs.float_of_js x7561)
                                  ~array:(t_of_js x7562))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7571 : 'tags this) ->
        fun
          ~callbackfn:(x7565 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7570 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7571) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7566 : Ojs.t) ->
                         fun (x7567 : Ojs.t) ->
                           fun (x7568 : Ojs.t) ->
                             fun (x7569 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7565
                                    ~previousValue:(Ojs.float_of_js x7566)
                                    ~currentValue:(Ojs.float_of_js x7567)
                                    ~currentIndex:(Ojs.float_of_js x7568)
                                    ~array:(t_of_js x7569))));(Ojs.float_to_js
                                                                 x7570)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7579 : 'tags this) ->
        fun
          ~callbackfn:(x7573 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7578 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7579) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7574 : Ojs.t) ->
                         fun (x7575 : Ojs.t) ->
                           fun (x7576 : Ojs.t) ->
                             fun (x7577 : Ojs.t) ->
                               Obj.magic
                                 (x7573 ~previousValue:(Obj.magic x7574)
                                    ~currentValue:(Ojs.float_of_js x7575)
                                    ~currentIndex:(Ojs.float_of_js x7576)
                                    ~array:(t_of_js x7577))));(Obj.magic
                                                                 x7578)|])
    let (reverse : 'tags this -> t) =
      fun (x7581 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7581) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7588 : 'tags this) ->
        fun ~array:(x7583 : float ArrayLike.t) ->
          fun ?offset:(x7584 : float option) ->
            fun () ->
              ignore
                (let x7590 = this_to_js Obj.magic x7588 in
                 Ojs.call (Ojs.get_prop_ascii x7590 "set") "apply"
                   [|x7590;((let x7585 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7585 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x7583)|]);
                             (match x7584 with
                              | Some x7586 ->
                                  ignore
                                    (Ojs.call x7585 "push"
                                       [|(Ojs.float_to_js x7586)|])
                              | None -> ());
                             x7585))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7596 : 'tags this) ->
        fun ?start:(x7591 : float option) ->
          fun ?end_:(x7592 : float option) ->
            fun () ->
              t_of_js
                (let x7598 = this_to_js Obj.magic x7596 in
                 Ojs.call (Ojs.get_prop_ascii x7598 "slice") "apply"
                   [|x7598;((let x7593 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7591 with
                              | Some x7595 ->
                                  ignore
                                    (Ojs.call x7593 "push"
                                       [|(Ojs.float_to_js x7595)|])
                              | None -> ());
                             (match x7592 with
                              | Some x7594 ->
                                  ignore
                                    (Ojs.call x7593 "push"
                                       [|(Ojs.float_to_js x7594)|])
                              | None -> ());
                             x7593))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7606 : 'tags this) ->
        fun
          ~predicate:(x7599 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7600 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7608 = this_to_js Obj.magic x7606 in
                 Ojs.call (Ojs.get_prop_ascii x7608 "some") "apply"
                   [|x7608;((let x7601 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7601 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7603 : Ojs.t) ->
                                          fun (x7604 : Ojs.t) ->
                                            fun (x7605 : Ojs.t) ->
                                              unknown_to_js
                                                (x7599
                                                   ~value:(Ojs.float_of_js
                                                             x7603)
                                                   ~index:(Ojs.float_of_js
                                                             x7604)
                                                   ~array:(t_of_js x7605))))|]);
                             (match x7600 with
                              | Some x7602 ->
                                  ignore
                                    (Ojs.call x7601 "push"
                                       [|(any_to_js x7602)|])
                              | None -> ());
                             x7601))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x7614 : 'tags this) ->
        fun ?compareFn:(x7609 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x7616 = this_to_js Obj.magic x7614 in
               Ojs.call (Ojs.get_prop_ascii x7616 "sort") "apply"
                 [|x7616;((let x7610 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7609 with
                            | Some x7611 ->
                                ignore
                                  (Ojs.call x7610 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7612 : Ojs.t) ->
                                             fun (x7613 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x7611
                                                    ~a:(Ojs.float_of_js x7612)
                                                    ~b:(Ojs.float_of_js x7613))))|])
                            | None -> ());
                           x7610))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x7623 : 'tags this) ->
        fun ?begin_:(x7618 : float option) ->
          fun ?end_:(x7619 : float option) ->
            fun () ->
              t_of_js
                (let x7625 = this_to_js Obj.magic x7623 in
                 Ojs.call (Ojs.get_prop_ascii x7625 "subarray") "apply"
                   [|x7625;((let x7620 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7618 with
                              | Some x7622 ->
                                  ignore
                                    (Ojs.call x7620 "push"
                                       [|(Ojs.float_to_js x7622)|])
                              | None -> ());
                             (match x7619 with
                              | Some x7621 ->
                                  ignore
                                    (Ojs.call x7620 "push"
                                       [|(Ojs.float_to_js x7621)|])
                              | None -> ());
                             x7620))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x7626 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7626) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x7628 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7628) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x7630 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7630) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x7632 : 'tags this) ->
        fun (x7634 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x7632)
               (Ojs.float_to_js x7634))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x7635 : 'tags this) ->
        fun (x7637 : float) ->
          fun (x7638 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x7635) (Ojs.float_to_js x7637)
              (Ojs.float_to_js x7638)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x7639 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|(Iterable.t_to_js Ojs.float_to_js x7639)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7641 : float Iterable.t) ->
        fun ?mapfn:(x7642 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x7643 : any option) ->
            fun () ->
              t_of_js
                (let x7650 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
                 Ojs.call (Ojs.get_prop_ascii x7650 "from") "apply"
                   [|x7650;((let x7644 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7644 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x7641)|]);
                             (match x7642 with
                              | Some x7646 ->
                                  ignore
                                    (Ojs.call x7644 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x7647 : Ojs.t) ->
                                               fun (x7648 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x7646
                                                      ~v:(Ojs.float_of_js
                                                            x7647)
                                                      ~k:(Ojs.float_of_js
                                                            x7648))))|])
                              | None -> ());
                             (match x7643 with
                              | Some x7645 ->
                                  ignore
                                    (Ojs.call x7644 "push"
                                       [|(any_to_js x7645)|])
                              | None -> ());
                             x7644))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x7651 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|(Ojs.float_to_js x7651)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x7652 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|((match x7652 with
                 | `U1 x7653 -> ArrayLike.t_to_js Ojs.float_to_js x7653
                 | `U2 x7655 -> ArrayBufferLike.t_to_js x7655))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x7656 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x7657 : float option) ->
          fun ?length:(x7658 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint16Array")
                   (let x7659 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x7659 "push"
                         [|(ArrayBufferLike.t_to_js x7656)|]);
                    (match x7657 with
                     | Some x7661 ->
                         ignore
                           (Ojs.call x7659 "push" [|(Ojs.float_to_js x7661)|])
                     | None -> ());
                    (match x7658 with
                     | Some x7660 ->
                         ignore
                           (Ojs.call x7659 "push" [|(Ojs.float_to_js x7660)|])
                     | None -> ());
                    x7659))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x7662 : float list) ->
        t_of_js
          (let x7665 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
           Ojs.call (Ojs.get_prop_ascii x7665 "of") "apply"
             [|x7665;((let x7663 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x7664 : float) ->
                            ignore
                              (Ojs.call x7663 "push"
                                 [|(Ojs.float_to_js x7664)|])) x7662;
                       x7663))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x7666 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint16Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x7666)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7668 : 'T ArrayLike.t) ->
        fun ~mapfn:(x7669 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x7670 : any option) ->
            fun () ->
              t_of_js
                (let x7676 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
                 Ojs.call (Ojs.get_prop_ascii x7676 "from") "apply"
                   [|x7676;((let x7671 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7671 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x7668)|]);
                             ignore
                               (Ojs.call x7671 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x7673 : Ojs.t) ->
                                          fun (x7674 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x7669 ~v:(Obj.magic x7673)
                                                 ~k:(Ojs.float_of_js x7674))))|]);
                             (match x7670 with
                              | Some x7672 ->
                                  ignore
                                    (Ojs.call x7671 "push"
                                       [|(any_to_js x7672)|])
                              | None -> ());
                             x7671))|])
    let cast_from = Obj.magic
  end
module Int8Array =
  struct
    type t =
      [ `Int8Array  | float ArrayLike.tags_1 | float IterableIterator.tags_1]
        intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7678 : Ojs.t) -> t_of_js x7678
    and t_0_to_js : t_0 -> Ojs.t = fun (x7677 : t) -> t_to_js x7677
    type tags =
      [ `Int8Array  | float ArrayLike.tags_1 | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Int8Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7681 : Ojs.t) -> intf_of_js __tags_of_js x7681
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7679 : __tags intf) -> intf_to_js __tags_to_js x7679
    let (at : 'tags this -> index:float -> float option) =
      fun (x7684 : 'tags this) ->
        fun ~index:(x7683 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7684) "at"
               [|(Ojs.float_to_js x7683)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x7691 : 'tags this) ->
        fun ~searchElement:(x7687 : float) ->
          fun ?fromIndex:(x7688 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7693 = this_to_js Obj.magic x7691 in
                 Ojs.call (Ojs.get_prop_ascii x7693 "includes") "apply"
                   [|x7693;((let x7689 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7689 "push"
                                  [|(Ojs.float_to_js x7687)|]);
                             (match x7688 with
                              | Some x7690 ->
                                  ignore
                                    (Ojs.call x7689 "push"
                                       [|(Ojs.float_to_js x7690)|])
                              | None -> ());
                             x7689))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x7694 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x7696 : Ojs.t) ->
             let x7697 = x7696 in
             ((Ojs.float_of_js (Ojs.array_get x7697 0)),
               (Ojs.float_of_js (Ojs.array_get x7697 1))))
          (Ojs.call (this_to_js Obj.magic x7694) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x7698 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7698) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x7701 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7701) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x7704 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7704)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x7706 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7706) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x7708 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7708) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x7710 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7710) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7717 : 'tags this) ->
        fun ~target:(x7712 : float) ->
          fun ~start:(x7713 : float) ->
            fun ?end_:(x7714 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7719 = this_to_js Obj.magic x7717 in
                   Ojs.call (Ojs.get_prop_ascii x7719 "copyWithin") "apply"
                     [|x7719;((let x7715 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7715 "push"
                                    [|(Ojs.float_to_js x7712)|]);
                               ignore
                                 (Ojs.call x7715 "push"
                                    [|(Ojs.float_to_js x7713)|]);
                               (match x7714 with
                                | Some x7716 ->
                                    ignore
                                      (Ojs.call x7715 "push"
                                         [|(Ojs.float_to_js x7716)|])
                                | None -> ());
                               x7715))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7728 : 'tags this) ->
        fun
          ~predicate:(x7721 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7722 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7730 = this_to_js Obj.magic x7728 in
                 Ojs.call (Ojs.get_prop_ascii x7730 "every") "apply"
                   [|x7730;((let x7723 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7723 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7725 : Ojs.t) ->
                                          fun (x7726 : Ojs.t) ->
                                            fun (x7727 : Ojs.t) ->
                                              unknown_to_js
                                                (x7721
                                                   ~value:(Ojs.float_of_js
                                                             x7725)
                                                   ~index:(Ojs.float_of_js
                                                             x7726)
                                                   ~array:(t_of_js x7727))))|]);
                             (match x7722 with
                              | Some x7724 ->
                                  ignore
                                    (Ojs.call x7723 "push"
                                       [|(any_to_js x7724)|])
                              | None -> ());
                             x7723))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7737 : 'tags this) ->
        fun ~value:(x7731 : float) ->
          fun ?start:(x7732 : float option) ->
            fun ?end_:(x7733 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7739 = this_to_js Obj.magic x7737 in
                   Ojs.call (Ojs.get_prop_ascii x7739 "fill") "apply"
                     [|x7739;((let x7734 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7734 "push"
                                    [|(Ojs.float_to_js x7731)|]);
                               (match x7732 with
                                | Some x7736 ->
                                    ignore
                                      (Ojs.call x7734 "push"
                                         [|(Ojs.float_to_js x7736)|])
                                | None -> ());
                               (match x7733 with
                                | Some x7735 ->
                                    ignore
                                      (Ojs.call x7734 "push"
                                         [|(Ojs.float_to_js x7735)|])
                                | None -> ());
                               x7734))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7748 : 'tags this) ->
        fun ~predicate:(x7741 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7742 : any option) ->
            fun () ->
              t_of_js
                (let x7750 = this_to_js Obj.magic x7748 in
                 Ojs.call (Ojs.get_prop_ascii x7750 "filter") "apply"
                   [|x7750;((let x7743 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7743 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7745 : Ojs.t) ->
                                          fun (x7746 : Ojs.t) ->
                                            fun (x7747 : Ojs.t) ->
                                              any_to_js
                                                (x7741
                                                   ~value:(Ojs.float_of_js
                                                             x7745)
                                                   ~index:(Ojs.float_of_js
                                                             x7746)
                                                   ~array:(t_of_js x7747))))|]);
                             (match x7742 with
                              | Some x7744 ->
                                  ignore
                                    (Ojs.call x7743 "push"
                                       [|(any_to_js x7744)|])
                              | None -> ());
                             x7743))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x7758 : 'tags this) ->
        fun ~predicate:(x7751 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7752 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x7760 = this_to_js Obj.magic x7758 in
                 Ojs.call (Ojs.get_prop_ascii x7760 "find") "apply"
                   [|x7760;((let x7753 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7753 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7755 : Ojs.t) ->
                                          fun (x7756 : Ojs.t) ->
                                            fun (x7757 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7751
                                                   ~value:(Ojs.float_of_js
                                                             x7755)
                                                   ~index:(Ojs.float_of_js
                                                             x7756)
                                                   ~obj:(t_of_js x7757))))|]);
                             (match x7752 with
                              | Some x7754 ->
                                  ignore
                                    (Ojs.call x7753 "push"
                                       [|(any_to_js x7754)|])
                              | None -> ());
                             x7753))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7769 : 'tags this) ->
        fun ~predicate:(x7762 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7763 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7771 = this_to_js Obj.magic x7769 in
                 Ojs.call (Ojs.get_prop_ascii x7771 "findIndex") "apply"
                   [|x7771;((let x7764 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7764 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7766 : Ojs.t) ->
                                          fun (x7767 : Ojs.t) ->
                                            fun (x7768 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7762
                                                   ~value:(Ojs.float_of_js
                                                             x7766)
                                                   ~index:(Ojs.float_of_js
                                                             x7767)
                                                   ~obj:(t_of_js x7768))))|]);
                             (match x7763 with
                              | Some x7765 ->
                                  ignore
                                    (Ojs.call x7764 "push"
                                       [|(any_to_js x7765)|])
                              | None -> ());
                             x7764))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x7779 : 'tags this) ->
        fun
          ~callbackfn:(x7772 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x7773 : any option) ->
            fun () ->
              ignore
                (let x7781 = this_to_js Obj.magic x7779 in
                 Ojs.call (Ojs.get_prop_ascii x7781 "forEach") "apply"
                   [|x7781;((let x7774 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7774 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7776 : Ojs.t) ->
                                          fun (x7777 : Ojs.t) ->
                                            fun (x7778 : Ojs.t) ->
                                              x7772
                                                ~value:(Ojs.float_of_js x7776)
                                                ~index:(Ojs.float_of_js x7777)
                                                ~array:(t_of_js x7778)))|]);
                             (match x7773 with
                              | Some x7775 ->
                                  ignore
                                    (Ojs.call x7774 "push"
                                       [|(any_to_js x7775)|])
                              | None -> ());
                             x7774))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7786 : 'tags this) ->
        fun ~searchElement:(x7782 : float) ->
          fun ?fromIndex:(x7783 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7788 = this_to_js Obj.magic x7786 in
                 Ojs.call (Ojs.get_prop_ascii x7788 "indexOf") "apply"
                   [|x7788;((let x7784 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7784 "push"
                                  [|(Ojs.float_to_js x7782)|]);
                             (match x7783 with
                              | Some x7785 ->
                                  ignore
                                    (Ojs.call x7784 "push"
                                       [|(Ojs.float_to_js x7785)|])
                              | None -> ());
                             x7784))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x7792 : 'tags this) ->
        fun ?separator:(x7789 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x7794 = this_to_js Obj.magic x7792 in
               Ojs.call (Ojs.get_prop_ascii x7794 "join") "apply"
                 [|x7794;((let x7790 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7789 with
                            | Some x7791 ->
                                ignore
                                  (Ojs.call x7790 "push"
                                     [|(Ojs.string_to_js x7791)|])
                            | None -> ());
                           x7790))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7799 : 'tags this) ->
        fun ~searchElement:(x7795 : float) ->
          fun ?fromIndex:(x7796 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7801 = this_to_js Obj.magic x7799 in
                 Ojs.call (Ojs.get_prop_ascii x7801 "lastIndexOf") "apply"
                   [|x7801;((let x7797 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7797 "push"
                                  [|(Ojs.float_to_js x7795)|]);
                             (match x7796 with
                              | Some x7798 ->
                                  ignore
                                    (Ojs.call x7797 "push"
                                       [|(Ojs.float_to_js x7798)|])
                              | None -> ());
                             x7797))|])
    let (get_length : 'tags this -> float) =
      fun (x7802 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7802) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7811 : 'tags this) ->
        fun
          ~callbackfn:(x7804 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x7805 : any option) ->
            fun () ->
              t_of_js
                (let x7813 = this_to_js Obj.magic x7811 in
                 Ojs.call (Ojs.get_prop_ascii x7813 "map") "apply"
                   [|x7813;((let x7806 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7806 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7808 : Ojs.t) ->
                                          fun (x7809 : Ojs.t) ->
                                            fun (x7810 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x7804
                                                   ~value:(Ojs.float_of_js
                                                             x7808)
                                                   ~index:(Ojs.float_of_js
                                                             x7809)
                                                   ~array:(t_of_js x7810))))|]);
                             (match x7805 with
                              | Some x7807 ->
                                  ignore
                                    (Ojs.call x7806 "push"
                                       [|(any_to_js x7807)|])
                              | None -> ());
                             x7806))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7819 : 'tags this) ->
        fun
          ~callbackfn:(x7814 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7819) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x7815 : Ojs.t) ->
                       fun (x7816 : Ojs.t) ->
                         fun (x7817 : Ojs.t) ->
                           fun (x7818 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7814 ~previousValue:(Ojs.float_of_js x7815)
                                  ~currentValue:(Ojs.float_of_js x7816)
                                  ~currentIndex:(Ojs.float_of_js x7817)
                                  ~array:(t_of_js x7818))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7827 : 'tags this) ->
        fun
          ~callbackfn:(x7821 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7826 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7827) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7822 : Ojs.t) ->
                         fun (x7823 : Ojs.t) ->
                           fun (x7824 : Ojs.t) ->
                             fun (x7825 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7821
                                    ~previousValue:(Ojs.float_of_js x7822)
                                    ~currentValue:(Ojs.float_of_js x7823)
                                    ~currentIndex:(Ojs.float_of_js x7824)
                                    ~array:(t_of_js x7825))));(Ojs.float_to_js
                                                                 x7826)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7835 : 'tags this) ->
        fun
          ~callbackfn:(x7829 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7834 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7835) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7830 : Ojs.t) ->
                         fun (x7831 : Ojs.t) ->
                           fun (x7832 : Ojs.t) ->
                             fun (x7833 : Ojs.t) ->
                               Obj.magic
                                 (x7829 ~previousValue:(Obj.magic x7830)
                                    ~currentValue:(Ojs.float_of_js x7831)
                                    ~currentIndex:(Ojs.float_of_js x7832)
                                    ~array:(t_of_js x7833))));(Obj.magic
                                                                 x7834)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7842 : 'tags this) ->
        fun
          ~callbackfn:(x7837 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7842) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7838 : Ojs.t) ->
                       fun (x7839 : Ojs.t) ->
                         fun (x7840 : Ojs.t) ->
                           fun (x7841 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7837 ~previousValue:(Ojs.float_of_js x7838)
                                  ~currentValue:(Ojs.float_of_js x7839)
                                  ~currentIndex:(Ojs.float_of_js x7840)
                                  ~array:(t_of_js x7841))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7850 : 'tags this) ->
        fun
          ~callbackfn:(x7844 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7849 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7850) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7845 : Ojs.t) ->
                         fun (x7846 : Ojs.t) ->
                           fun (x7847 : Ojs.t) ->
                             fun (x7848 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7844
                                    ~previousValue:(Ojs.float_of_js x7845)
                                    ~currentValue:(Ojs.float_of_js x7846)
                                    ~currentIndex:(Ojs.float_of_js x7847)
                                    ~array:(t_of_js x7848))));(Ojs.float_to_js
                                                                 x7849)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7858 : 'tags this) ->
        fun
          ~callbackfn:(x7852 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7857 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7858) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7853 : Ojs.t) ->
                         fun (x7854 : Ojs.t) ->
                           fun (x7855 : Ojs.t) ->
                             fun (x7856 : Ojs.t) ->
                               Obj.magic
                                 (x7852 ~previousValue:(Obj.magic x7853)
                                    ~currentValue:(Ojs.float_of_js x7854)
                                    ~currentIndex:(Ojs.float_of_js x7855)
                                    ~array:(t_of_js x7856))));(Obj.magic
                                                                 x7857)|])
    let (reverse : 'tags this -> t) =
      fun (x7860 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7860) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7867 : 'tags this) ->
        fun ~array:(x7862 : float ArrayLike.t) ->
          fun ?offset:(x7863 : float option) ->
            fun () ->
              ignore
                (let x7869 = this_to_js Obj.magic x7867 in
                 Ojs.call (Ojs.get_prop_ascii x7869 "set") "apply"
                   [|x7869;((let x7864 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7864 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x7862)|]);
                             (match x7863 with
                              | Some x7865 ->
                                  ignore
                                    (Ojs.call x7864 "push"
                                       [|(Ojs.float_to_js x7865)|])
                              | None -> ());
                             x7864))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7875 : 'tags this) ->
        fun ?start:(x7870 : float option) ->
          fun ?end_:(x7871 : float option) ->
            fun () ->
              t_of_js
                (let x7877 = this_to_js Obj.magic x7875 in
                 Ojs.call (Ojs.get_prop_ascii x7877 "slice") "apply"
                   [|x7877;((let x7872 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7870 with
                              | Some x7874 ->
                                  ignore
                                    (Ojs.call x7872 "push"
                                       [|(Ojs.float_to_js x7874)|])
                              | None -> ());
                             (match x7871 with
                              | Some x7873 ->
                                  ignore
                                    (Ojs.call x7872 "push"
                                       [|(Ojs.float_to_js x7873)|])
                              | None -> ());
                             x7872))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7885 : 'tags this) ->
        fun
          ~predicate:(x7878 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7879 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7887 = this_to_js Obj.magic x7885 in
                 Ojs.call (Ojs.get_prop_ascii x7887 "some") "apply"
                   [|x7887;((let x7880 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7880 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7882 : Ojs.t) ->
                                          fun (x7883 : Ojs.t) ->
                                            fun (x7884 : Ojs.t) ->
                                              unknown_to_js
                                                (x7878
                                                   ~value:(Ojs.float_of_js
                                                             x7882)
                                                   ~index:(Ojs.float_of_js
                                                             x7883)
                                                   ~array:(t_of_js x7884))))|]);
                             (match x7879 with
                              | Some x7881 ->
                                  ignore
                                    (Ojs.call x7880 "push"
                                       [|(any_to_js x7881)|])
                              | None -> ());
                             x7880))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x7893 : 'tags this) ->
        fun ?compareFn:(x7888 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x7895 = this_to_js Obj.magic x7893 in
               Ojs.call (Ojs.get_prop_ascii x7895 "sort") "apply"
                 [|x7895;((let x7889 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7888 with
                            | Some x7890 ->
                                ignore
                                  (Ojs.call x7889 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7891 : Ojs.t) ->
                                             fun (x7892 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x7890
                                                    ~a:(Ojs.float_of_js x7891)
                                                    ~b:(Ojs.float_of_js x7892))))|])
                            | None -> ());
                           x7889))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x7902 : 'tags this) ->
        fun ?begin_:(x7897 : float option) ->
          fun ?end_:(x7898 : float option) ->
            fun () ->
              t_of_js
                (let x7904 = this_to_js Obj.magic x7902 in
                 Ojs.call (Ojs.get_prop_ascii x7904 "subarray") "apply"
                   [|x7904;((let x7899 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7897 with
                              | Some x7901 ->
                                  ignore
                                    (Ojs.call x7899 "push"
                                       [|(Ojs.float_to_js x7901)|])
                              | None -> ());
                             (match x7898 with
                              | Some x7900 ->
                                  ignore
                                    (Ojs.call x7899 "push"
                                       [|(Ojs.float_to_js x7900)|])
                              | None -> ());
                             x7899))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x7905 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7905) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x7907 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7907) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x7909 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7909) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x7911 : 'tags this) ->
        fun (x7913 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x7911)
               (Ojs.float_to_js x7913))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x7914 : 'tags this) ->
        fun (x7916 : float) ->
          fun (x7917 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x7914) (Ojs.float_to_js x7916)
              (Ojs.float_to_js x7917)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x7918 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|(Iterable.t_to_js Ojs.float_to_js x7918)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7920 : float Iterable.t) ->
        fun ?mapfn:(x7921 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x7922 : any option) ->
            fun () ->
              t_of_js
                (let x7929 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
                 Ojs.call (Ojs.get_prop_ascii x7929 "from") "apply"
                   [|x7929;((let x7923 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7923 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x7920)|]);
                             (match x7921 with
                              | Some x7925 ->
                                  ignore
                                    (Ojs.call x7923 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x7926 : Ojs.t) ->
                                               fun (x7927 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x7925
                                                      ~v:(Ojs.float_of_js
                                                            x7926)
                                                      ~k:(Ojs.float_of_js
                                                            x7927))))|])
                              | None -> ());
                             (match x7922 with
                              | Some x7924 ->
                                  ignore
                                    (Ojs.call x7923 "push"
                                       [|(any_to_js x7924)|])
                              | None -> ());
                             x7923))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int8Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x7930 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|(Ojs.float_to_js x7930)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x7931 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|((match x7931 with
                 | `U1 x7932 -> ArrayLike.t_to_js Ojs.float_to_js x7932
                 | `U2 x7934 -> ArrayBufferLike.t_to_js x7934))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x7935 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x7936 : float option) ->
          fun ?length:(x7937 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int8Array")
                   (let x7938 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x7938 "push"
                         [|(ArrayBufferLike.t_to_js x7935)|]);
                    (match x7936 with
                     | Some x7940 ->
                         ignore
                           (Ojs.call x7938 "push" [|(Ojs.float_to_js x7940)|])
                     | None -> ());
                    (match x7937 with
                     | Some x7939 ->
                         ignore
                           (Ojs.call x7938 "push" [|(Ojs.float_to_js x7939)|])
                     | None -> ());
                    x7938))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int8Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x7941 : float list) ->
        t_of_js
          (let x7944 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
           Ojs.call (Ojs.get_prop_ascii x7944 "of") "apply"
             [|x7944;((let x7942 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x7943 : float) ->
                            ignore
                              (Ojs.call x7942 "push"
                                 [|(Ojs.float_to_js x7943)|])) x7941;
                       x7942))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x7945 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int8Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x7945)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7947 : 'T ArrayLike.t) ->
        fun ~mapfn:(x7948 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x7949 : any option) ->
            fun () ->
              t_of_js
                (let x7955 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
                 Ojs.call (Ojs.get_prop_ascii x7955 "from") "apply"
                   [|x7955;((let x7950 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7950 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x7947)|]);
                             ignore
                               (Ojs.call x7950 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x7952 : Ojs.t) ->
                                          fun (x7953 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x7948 ~v:(Obj.magic x7952)
                                                 ~k:(Ojs.float_of_js x7953))))|]);
                             (match x7949 with
                              | Some x7951 ->
                                  ignore
                                    (Ojs.call x7950 "push"
                                       [|(any_to_js x7951)|])
                              | None -> ());
                             x7950))|])
    let cast_from = Obj.magic
  end
module Int32Array =
  struct
    type t =
      [ `Int32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7957 : Ojs.t) -> t_of_js x7957
    and t_0_to_js : t_0 -> Ojs.t = fun (x7956 : t) -> t_to_js x7956
    type tags =
      [ `Int32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Int32Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7960 : Ojs.t) -> intf_of_js __tags_of_js x7960
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7958 : __tags intf) -> intf_to_js __tags_to_js x7958
    let (at : 'tags this -> index:float -> float option) =
      fun (x7963 : 'tags this) ->
        fun ~index:(x7962 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7963) "at"
               [|(Ojs.float_to_js x7962)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x7970 : 'tags this) ->
        fun ~searchElement:(x7966 : float) ->
          fun ?fromIndex:(x7967 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7972 = this_to_js Obj.magic x7970 in
                 Ojs.call (Ojs.get_prop_ascii x7972 "includes") "apply"
                   [|x7972;((let x7968 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7968 "push"
                                  [|(Ojs.float_to_js x7966)|]);
                             (match x7967 with
                              | Some x7969 ->
                                  ignore
                                    (Ojs.call x7968 "push"
                                       [|(Ojs.float_to_js x7969)|])
                              | None -> ());
                             x7968))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x7973 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x7975 : Ojs.t) ->
             let x7976 = x7975 in
             ((Ojs.float_of_js (Ojs.array_get x7976 0)),
               (Ojs.float_of_js (Ojs.array_get x7976 1))))
          (Ojs.call (this_to_js Obj.magic x7973) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x7977 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7977) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x7980 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7980) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x7983 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7983)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x7985 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7985) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x7987 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7987) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x7989 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7989) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7996 : 'tags this) ->
        fun ~target:(x7991 : float) ->
          fun ~start:(x7992 : float) ->
            fun ?end_:(x7993 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7998 = this_to_js Obj.magic x7996 in
                   Ojs.call (Ojs.get_prop_ascii x7998 "copyWithin") "apply"
                     [|x7998;((let x7994 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7994 "push"
                                    [|(Ojs.float_to_js x7991)|]);
                               ignore
                                 (Ojs.call x7994 "push"
                                    [|(Ojs.float_to_js x7992)|]);
                               (match x7993 with
                                | Some x7995 ->
                                    ignore
                                      (Ojs.call x7994 "push"
                                         [|(Ojs.float_to_js x7995)|])
                                | None -> ());
                               x7994))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8007 : 'tags this) ->
        fun
          ~predicate:(x8000 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8001 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8009 = this_to_js Obj.magic x8007 in
                 Ojs.call (Ojs.get_prop_ascii x8009 "every") "apply"
                   [|x8009;((let x8002 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8002 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8004 : Ojs.t) ->
                                          fun (x8005 : Ojs.t) ->
                                            fun (x8006 : Ojs.t) ->
                                              unknown_to_js
                                                (x8000
                                                   ~value:(Ojs.float_of_js
                                                             x8004)
                                                   ~index:(Ojs.float_of_js
                                                             x8005)
                                                   ~array:(t_of_js x8006))))|]);
                             (match x8001 with
                              | Some x8003 ->
                                  ignore
                                    (Ojs.call x8002 "push"
                                       [|(any_to_js x8003)|])
                              | None -> ());
                             x8002))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8016 : 'tags this) ->
        fun ~value:(x8010 : float) ->
          fun ?start:(x8011 : float option) ->
            fun ?end_:(x8012 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8018 = this_to_js Obj.magic x8016 in
                   Ojs.call (Ojs.get_prop_ascii x8018 "fill") "apply"
                     [|x8018;((let x8013 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8013 "push"
                                    [|(Ojs.float_to_js x8010)|]);
                               (match x8011 with
                                | Some x8015 ->
                                    ignore
                                      (Ojs.call x8013 "push"
                                         [|(Ojs.float_to_js x8015)|])
                                | None -> ());
                               (match x8012 with
                                | Some x8014 ->
                                    ignore
                                      (Ojs.call x8013 "push"
                                         [|(Ojs.float_to_js x8014)|])
                                | None -> ());
                               x8013))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8027 : 'tags this) ->
        fun ~predicate:(x8020 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x8021 : any option) ->
            fun () ->
              t_of_js
                (let x8029 = this_to_js Obj.magic x8027 in
                 Ojs.call (Ojs.get_prop_ascii x8029 "filter") "apply"
                   [|x8029;((let x8022 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8022 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8024 : Ojs.t) ->
                                          fun (x8025 : Ojs.t) ->
                                            fun (x8026 : Ojs.t) ->
                                              any_to_js
                                                (x8020
                                                   ~value:(Ojs.float_of_js
                                                             x8024)
                                                   ~index:(Ojs.float_of_js
                                                             x8025)
                                                   ~array:(t_of_js x8026))))|]);
                             (match x8021 with
                              | Some x8023 ->
                                  ignore
                                    (Ojs.call x8022 "push"
                                       [|(any_to_js x8023)|])
                              | None -> ());
                             x8022))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x8037 : 'tags this) ->
        fun ~predicate:(x8030 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x8031 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x8039 = this_to_js Obj.magic x8037 in
                 Ojs.call (Ojs.get_prop_ascii x8039 "find") "apply"
                   [|x8039;((let x8032 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8032 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8034 : Ojs.t) ->
                                          fun (x8035 : Ojs.t) ->
                                            fun (x8036 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8030
                                                   ~value:(Ojs.float_of_js
                                                             x8034)
                                                   ~index:(Ojs.float_of_js
                                                             x8035)
                                                   ~obj:(t_of_js x8036))))|]);
                             (match x8031 with
                              | Some x8033 ->
                                  ignore
                                    (Ojs.call x8032 "push"
                                       [|(any_to_js x8033)|])
                              | None -> ());
                             x8032))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8048 : 'tags this) ->
        fun ~predicate:(x8041 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x8042 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8050 = this_to_js Obj.magic x8048 in
                 Ojs.call (Ojs.get_prop_ascii x8050 "findIndex") "apply"
                   [|x8050;((let x8043 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8043 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8045 : Ojs.t) ->
                                          fun (x8046 : Ojs.t) ->
                                            fun (x8047 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8041
                                                   ~value:(Ojs.float_of_js
                                                             x8045)
                                                   ~index:(Ojs.float_of_js
                                                             x8046)
                                                   ~obj:(t_of_js x8047))))|]);
                             (match x8042 with
                              | Some x8044 ->
                                  ignore
                                    (Ojs.call x8043 "push"
                                       [|(any_to_js x8044)|])
                              | None -> ());
                             x8043))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x8058 : 'tags this) ->
        fun
          ~callbackfn:(x8051 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x8052 : any option) ->
            fun () ->
              ignore
                (let x8060 = this_to_js Obj.magic x8058 in
                 Ojs.call (Ojs.get_prop_ascii x8060 "forEach") "apply"
                   [|x8060;((let x8053 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8053 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8055 : Ojs.t) ->
                                          fun (x8056 : Ojs.t) ->
                                            fun (x8057 : Ojs.t) ->
                                              x8051
                                                ~value:(Ojs.float_of_js x8055)
                                                ~index:(Ojs.float_of_js x8056)
                                                ~array:(t_of_js x8057)))|]);
                             (match x8052 with
                              | Some x8054 ->
                                  ignore
                                    (Ojs.call x8053 "push"
                                       [|(any_to_js x8054)|])
                              | None -> ());
                             x8053))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x8065 : 'tags this) ->
        fun ~searchElement:(x8061 : float) ->
          fun ?fromIndex:(x8062 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8067 = this_to_js Obj.magic x8065 in
                 Ojs.call (Ojs.get_prop_ascii x8067 "indexOf") "apply"
                   [|x8067;((let x8063 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8063 "push"
                                  [|(Ojs.float_to_js x8061)|]);
                             (match x8062 with
                              | Some x8064 ->
                                  ignore
                                    (Ojs.call x8063 "push"
                                       [|(Ojs.float_to_js x8064)|])
                              | None -> ());
                             x8063))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x8071 : 'tags this) ->
        fun ?separator:(x8068 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x8073 = this_to_js Obj.magic x8071 in
               Ojs.call (Ojs.get_prop_ascii x8073 "join") "apply"
                 [|x8073;((let x8069 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8068 with
                            | Some x8070 ->
                                ignore
                                  (Ojs.call x8069 "push"
                                     [|(Ojs.string_to_js x8070)|])
                            | None -> ());
                           x8069))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x8078 : 'tags this) ->
        fun ~searchElement:(x8074 : float) ->
          fun ?fromIndex:(x8075 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8080 = this_to_js Obj.magic x8078 in
                 Ojs.call (Ojs.get_prop_ascii x8080 "lastIndexOf") "apply"
                   [|x8080;((let x8076 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8076 "push"
                                  [|(Ojs.float_to_js x8074)|]);
                             (match x8075 with
                              | Some x8077 ->
                                  ignore
                                    (Ojs.call x8076 "push"
                                       [|(Ojs.float_to_js x8077)|])
                              | None -> ());
                             x8076))|])
    let (get_length : 'tags this -> float) =
      fun (x8081 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8081) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8090 : 'tags this) ->
        fun
          ~callbackfn:(x8083 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x8084 : any option) ->
            fun () ->
              t_of_js
                (let x8092 = this_to_js Obj.magic x8090 in
                 Ojs.call (Ojs.get_prop_ascii x8092 "map") "apply"
                   [|x8092;((let x8085 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8085 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8087 : Ojs.t) ->
                                          fun (x8088 : Ojs.t) ->
                                            fun (x8089 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x8083
                                                   ~value:(Ojs.float_of_js
                                                             x8087)
                                                   ~index:(Ojs.float_of_js
                                                             x8088)
                                                   ~array:(t_of_js x8089))))|]);
                             (match x8084 with
                              | Some x8086 ->
                                  ignore
                                    (Ojs.call x8085 "push"
                                       [|(any_to_js x8086)|])
                              | None -> ());
                             x8085))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x8098 : 'tags this) ->
        fun
          ~callbackfn:(x8093 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8098) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x8094 : Ojs.t) ->
                       fun (x8095 : Ojs.t) ->
                         fun (x8096 : Ojs.t) ->
                           fun (x8097 : Ojs.t) ->
                             Ojs.float_to_js
                               (x8093 ~previousValue:(Ojs.float_of_js x8094)
                                  ~currentValue:(Ojs.float_of_js x8095)
                                  ~currentIndex:(Ojs.float_of_js x8096)
                                  ~array:(t_of_js x8097))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x8106 : 'tags this) ->
        fun
          ~callbackfn:(x8100 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x8105 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x8106) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8101 : Ojs.t) ->
                         fun (x8102 : Ojs.t) ->
                           fun (x8103 : Ojs.t) ->
                             fun (x8104 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x8100
                                    ~previousValue:(Ojs.float_of_js x8101)
                                    ~currentValue:(Ojs.float_of_js x8102)
                                    ~currentIndex:(Ojs.float_of_js x8103)
                                    ~array:(t_of_js x8104))));(Ojs.float_to_js
                                                                 x8105)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8114 : 'tags this) ->
        fun
          ~callbackfn:(x8108 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8113 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8114) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8109 : Ojs.t) ->
                         fun (x8110 : Ojs.t) ->
                           fun (x8111 : Ojs.t) ->
                             fun (x8112 : Ojs.t) ->
                               Obj.magic
                                 (x8108 ~previousValue:(Obj.magic x8109)
                                    ~currentValue:(Ojs.float_of_js x8110)
                                    ~currentIndex:(Ojs.float_of_js x8111)
                                    ~array:(t_of_js x8112))));(Obj.magic
                                                                 x8113)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x8121 : 'tags this) ->
        fun
          ~callbackfn:(x8116 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8121) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x8117 : Ojs.t) ->
                       fun (x8118 : Ojs.t) ->
                         fun (x8119 : Ojs.t) ->
                           fun (x8120 : Ojs.t) ->
                             Ojs.float_to_js
                               (x8116 ~previousValue:(Ojs.float_of_js x8117)
                                  ~currentValue:(Ojs.float_of_js x8118)
                                  ~currentIndex:(Ojs.float_of_js x8119)
                                  ~array:(t_of_js x8120))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x8129 : 'tags this) ->
        fun
          ~callbackfn:(x8123 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x8128 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x8129) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8124 : Ojs.t) ->
                         fun (x8125 : Ojs.t) ->
                           fun (x8126 : Ojs.t) ->
                             fun (x8127 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x8123
                                    ~previousValue:(Ojs.float_of_js x8124)
                                    ~currentValue:(Ojs.float_of_js x8125)
                                    ~currentIndex:(Ojs.float_of_js x8126)
                                    ~array:(t_of_js x8127))));(Ojs.float_to_js
                                                                 x8128)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8137 : 'tags this) ->
        fun
          ~callbackfn:(x8131 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8136 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8137) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8132 : Ojs.t) ->
                         fun (x8133 : Ojs.t) ->
                           fun (x8134 : Ojs.t) ->
                             fun (x8135 : Ojs.t) ->
                               Obj.magic
                                 (x8131 ~previousValue:(Obj.magic x8132)
                                    ~currentValue:(Ojs.float_of_js x8133)
                                    ~currentIndex:(Ojs.float_of_js x8134)
                                    ~array:(t_of_js x8135))));(Obj.magic
                                                                 x8136)|])
    let (reverse : 'tags this -> t) =
      fun (x8139 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8139) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x8146 : 'tags this) ->
        fun ~array:(x8141 : float ArrayLike.t) ->
          fun ?offset:(x8142 : float option) ->
            fun () ->
              ignore
                (let x8148 = this_to_js Obj.magic x8146 in
                 Ojs.call (Ojs.get_prop_ascii x8148 "set") "apply"
                   [|x8148;((let x8143 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8143 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x8141)|]);
                             (match x8142 with
                              | Some x8144 ->
                                  ignore
                                    (Ojs.call x8143 "push"
                                       [|(Ojs.float_to_js x8144)|])
                              | None -> ());
                             x8143))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x8154 : 'tags this) ->
        fun ?start:(x8149 : float option) ->
          fun ?end_:(x8150 : float option) ->
            fun () ->
              t_of_js
                (let x8156 = this_to_js Obj.magic x8154 in
                 Ojs.call (Ojs.get_prop_ascii x8156 "slice") "apply"
                   [|x8156;((let x8151 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8149 with
                              | Some x8153 ->
                                  ignore
                                    (Ojs.call x8151 "push"
                                       [|(Ojs.float_to_js x8153)|])
                              | None -> ());
                             (match x8150 with
                              | Some x8152 ->
                                  ignore
                                    (Ojs.call x8151 "push"
                                       [|(Ojs.float_to_js x8152)|])
                              | None -> ());
                             x8151))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8164 : 'tags this) ->
        fun
          ~predicate:(x8157 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8158 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8166 = this_to_js Obj.magic x8164 in
                 Ojs.call (Ojs.get_prop_ascii x8166 "some") "apply"
                   [|x8166;((let x8159 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8159 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8161 : Ojs.t) ->
                                          fun (x8162 : Ojs.t) ->
                                            fun (x8163 : Ojs.t) ->
                                              unknown_to_js
                                                (x8157
                                                   ~value:(Ojs.float_of_js
                                                             x8161)
                                                   ~index:(Ojs.float_of_js
                                                             x8162)
                                                   ~array:(t_of_js x8163))))|]);
                             (match x8158 with
                              | Some x8160 ->
                                  ignore
                                    (Ojs.call x8159 "push"
                                       [|(any_to_js x8160)|])
                              | None -> ());
                             x8159))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x8172 : 'tags this) ->
        fun ?compareFn:(x8167 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x8174 = this_to_js Obj.magic x8172 in
               Ojs.call (Ojs.get_prop_ascii x8174 "sort") "apply"
                 [|x8174;((let x8168 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8167 with
                            | Some x8169 ->
                                ignore
                                  (Ojs.call x8168 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x8170 : Ojs.t) ->
                                             fun (x8171 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x8169
                                                    ~a:(Ojs.float_of_js x8170)
                                                    ~b:(Ojs.float_of_js x8171))))|])
                            | None -> ());
                           x8168))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x8181 : 'tags this) ->
        fun ?begin_:(x8176 : float option) ->
          fun ?end_:(x8177 : float option) ->
            fun () ->
              t_of_js
                (let x8183 = this_to_js Obj.magic x8181 in
                 Ojs.call (Ojs.get_prop_ascii x8183 "subarray") "apply"
                   [|x8183;((let x8178 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8176 with
                              | Some x8180 ->
                                  ignore
                                    (Ojs.call x8178 "push"
                                       [|(Ojs.float_to_js x8180)|])
                              | None -> ());
                             (match x8177 with
                              | Some x8179 ->
                                  ignore
                                    (Ojs.call x8178 "push"
                                       [|(Ojs.float_to_js x8179)|])
                              | None -> ());
                             x8178))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x8184 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8184) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x8186 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8186) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x8188 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8188) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x8190 : 'tags this) ->
        fun (x8192 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x8190)
               (Ojs.float_to_js x8192))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x8193 : 'tags this) ->
        fun (x8195 : float) ->
          fun (x8196 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x8193) (Ojs.float_to_js x8195)
              (Ojs.float_to_js x8196)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x8197 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|(Iterable.t_to_js Ojs.float_to_js x8197)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8199 : float Iterable.t) ->
        fun ?mapfn:(x8200 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x8201 : any option) ->
            fun () ->
              t_of_js
                (let x8208 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
                 Ojs.call (Ojs.get_prop_ascii x8208 "from") "apply"
                   [|x8208;((let x8202 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8202 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x8199)|]);
                             (match x8200 with
                              | Some x8204 ->
                                  ignore
                                    (Ojs.call x8202 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x8205 : Ojs.t) ->
                                               fun (x8206 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x8204
                                                      ~v:(Ojs.float_of_js
                                                            x8205)
                                                      ~k:(Ojs.float_of_js
                                                            x8206))))|])
                              | None -> ());
                             (match x8201 with
                              | Some x8203 ->
                                  ignore
                                    (Ojs.call x8202 "push"
                                       [|(any_to_js x8203)|])
                              | None -> ());
                             x8202))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int32Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x8209 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|(Ojs.float_to_js x8209)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x8210 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|((match x8210 with
                 | `U1 x8211 -> ArrayLike.t_to_js Ojs.float_to_js x8211
                 | `U2 x8213 -> ArrayBufferLike.t_to_js x8213))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x8214 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x8215 : float option) ->
          fun ?length:(x8216 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int32Array")
                   (let x8217 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8217 "push"
                         [|(ArrayBufferLike.t_to_js x8214)|]);
                    (match x8215 with
                     | Some x8219 ->
                         ignore
                           (Ojs.call x8217 "push" [|(Ojs.float_to_js x8219)|])
                     | None -> ());
                    (match x8216 with
                     | Some x8218 ->
                         ignore
                           (Ojs.call x8217 "push" [|(Ojs.float_to_js x8218)|])
                     | None -> ());
                    x8217))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int32Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x8220 : float list) ->
        t_of_js
          (let x8223 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
           Ojs.call (Ojs.get_prop_ascii x8223 "of") "apply"
             [|x8223;((let x8221 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x8222 : float) ->
                            ignore
                              (Ojs.call x8221 "push"
                                 [|(Ojs.float_to_js x8222)|])) x8220;
                       x8221))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x8224 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int32Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x8224)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8226 : 'T ArrayLike.t) ->
        fun ~mapfn:(x8227 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x8228 : any option) ->
            fun () ->
              t_of_js
                (let x8234 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
                 Ojs.call (Ojs.get_prop_ascii x8234 "from") "apply"
                   [|x8234;((let x8229 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8229 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x8226)|]);
                             ignore
                               (Ojs.call x8229 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x8231 : Ojs.t) ->
                                          fun (x8232 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x8227 ~v:(Obj.magic x8231)
                                                 ~k:(Ojs.float_of_js x8232))))|]);
                             (match x8228 with
                              | Some x8230 ->
                                  ignore
                                    (Ojs.call x8229 "push"
                                       [|(any_to_js x8230)|])
                              | None -> ());
                             x8229))|])
    let cast_from = Obj.magic
  end
module Int16Array =
  struct
    type t =
      [ `Int16Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8236 : Ojs.t) -> t_of_js x8236
    and t_0_to_js : t_0 -> Ojs.t = fun (x8235 : t) -> t_to_js x8235
    type tags =
      [ `Int16Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Int16Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8239 : Ojs.t) -> intf_of_js __tags_of_js x8239
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8237 : __tags intf) -> intf_to_js __tags_to_js x8237
    let (at : 'tags this -> index:float -> float option) =
      fun (x8242 : 'tags this) ->
        fun ~index:(x8241 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8242) "at"
               [|(Ojs.float_to_js x8241)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x8249 : 'tags this) ->
        fun ~searchElement:(x8245 : float) ->
          fun ?fromIndex:(x8246 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8251 = this_to_js Obj.magic x8249 in
                 Ojs.call (Ojs.get_prop_ascii x8251 "includes") "apply"
                   [|x8251;((let x8247 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8247 "push"
                                  [|(Ojs.float_to_js x8245)|]);
                             (match x8246 with
                              | Some x8248 ->
                                  ignore
                                    (Ojs.call x8247 "push"
                                       [|(Ojs.float_to_js x8248)|])
                              | None -> ());
                             x8247))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x8252 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x8254 : Ojs.t) ->
             let x8255 = x8254 in
             ((Ojs.float_of_js (Ojs.array_get x8255 0)),
               (Ojs.float_of_js (Ojs.array_get x8255 1))))
          (Ojs.call (this_to_js Obj.magic x8252) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x8256 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8256) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x8259 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8259) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x8262 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8262)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x8264 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8264) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x8266 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8266) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x8268 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8268) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8275 : 'tags this) ->
        fun ~target:(x8270 : float) ->
          fun ~start:(x8271 : float) ->
            fun ?end_:(x8272 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8277 = this_to_js Obj.magic x8275 in
                   Ojs.call (Ojs.get_prop_ascii x8277 "copyWithin") "apply"
                     [|x8277;((let x8273 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8273 "push"
                                    [|(Ojs.float_to_js x8270)|]);
                               ignore
                                 (Ojs.call x8273 "push"
                                    [|(Ojs.float_to_js x8271)|]);
                               (match x8272 with
                                | Some x8274 ->
                                    ignore
                                      (Ojs.call x8273 "push"
                                         [|(Ojs.float_to_js x8274)|])
                                | None -> ());
                               x8273))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8286 : 'tags this) ->
        fun
          ~predicate:(x8279 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8280 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8288 = this_to_js Obj.magic x8286 in
                 Ojs.call (Ojs.get_prop_ascii x8288 "every") "apply"
                   [|x8288;((let x8281 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8281 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8283 : Ojs.t) ->
                                          fun (x8284 : Ojs.t) ->
                                            fun (x8285 : Ojs.t) ->
                                              unknown_to_js
                                                (x8279
                                                   ~value:(Ojs.float_of_js
                                                             x8283)
                                                   ~index:(Ojs.float_of_js
                                                             x8284)
                                                   ~array:(t_of_js x8285))))|]);
                             (match x8280 with
                              | Some x8282 ->
                                  ignore
                                    (Ojs.call x8281 "push"
                                       [|(any_to_js x8282)|])
                              | None -> ());
                             x8281))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8295 : 'tags this) ->
        fun ~value:(x8289 : float) ->
          fun ?start:(x8290 : float option) ->
            fun ?end_:(x8291 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8297 = this_to_js Obj.magic x8295 in
                   Ojs.call (Ojs.get_prop_ascii x8297 "fill") "apply"
                     [|x8297;((let x8292 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8292 "push"
                                    [|(Ojs.float_to_js x8289)|]);
                               (match x8290 with
                                | Some x8294 ->
                                    ignore
                                      (Ojs.call x8292 "push"
                                         [|(Ojs.float_to_js x8294)|])
                                | None -> ());
                               (match x8291 with
                                | Some x8293 ->
                                    ignore
                                      (Ojs.call x8292 "push"
                                         [|(Ojs.float_to_js x8293)|])
                                | None -> ());
                               x8292))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8306 : 'tags this) ->
        fun ~predicate:(x8299 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x8300 : any option) ->
            fun () ->
              t_of_js
                (let x8308 = this_to_js Obj.magic x8306 in
                 Ojs.call (Ojs.get_prop_ascii x8308 "filter") "apply"
                   [|x8308;((let x8301 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8301 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8303 : Ojs.t) ->
                                          fun (x8304 : Ojs.t) ->
                                            fun (x8305 : Ojs.t) ->
                                              any_to_js
                                                (x8299
                                                   ~value:(Ojs.float_of_js
                                                             x8303)
                                                   ~index:(Ojs.float_of_js
                                                             x8304)
                                                   ~array:(t_of_js x8305))))|]);
                             (match x8300 with
                              | Some x8302 ->
                                  ignore
                                    (Ojs.call x8301 "push"
                                       [|(any_to_js x8302)|])
                              | None -> ());
                             x8301))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x8316 : 'tags this) ->
        fun ~predicate:(x8309 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x8310 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x8318 = this_to_js Obj.magic x8316 in
                 Ojs.call (Ojs.get_prop_ascii x8318 "find") "apply"
                   [|x8318;((let x8311 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8311 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8313 : Ojs.t) ->
                                          fun (x8314 : Ojs.t) ->
                                            fun (x8315 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8309
                                                   ~value:(Ojs.float_of_js
                                                             x8313)
                                                   ~index:(Ojs.float_of_js
                                                             x8314)
                                                   ~obj:(t_of_js x8315))))|]);
                             (match x8310 with
                              | Some x8312 ->
                                  ignore
                                    (Ojs.call x8311 "push"
                                       [|(any_to_js x8312)|])
                              | None -> ());
                             x8311))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8327 : 'tags this) ->
        fun ~predicate:(x8320 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x8321 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8329 = this_to_js Obj.magic x8327 in
                 Ojs.call (Ojs.get_prop_ascii x8329 "findIndex") "apply"
                   [|x8329;((let x8322 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8322 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8324 : Ojs.t) ->
                                          fun (x8325 : Ojs.t) ->
                                            fun (x8326 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8320
                                                   ~value:(Ojs.float_of_js
                                                             x8324)
                                                   ~index:(Ojs.float_of_js
                                                             x8325)
                                                   ~obj:(t_of_js x8326))))|]);
                             (match x8321 with
                              | Some x8323 ->
                                  ignore
                                    (Ojs.call x8322 "push"
                                       [|(any_to_js x8323)|])
                              | None -> ());
                             x8322))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x8337 : 'tags this) ->
        fun
          ~callbackfn:(x8330 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x8331 : any option) ->
            fun () ->
              ignore
                (let x8339 = this_to_js Obj.magic x8337 in
                 Ojs.call (Ojs.get_prop_ascii x8339 "forEach") "apply"
                   [|x8339;((let x8332 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8332 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8334 : Ojs.t) ->
                                          fun (x8335 : Ojs.t) ->
                                            fun (x8336 : Ojs.t) ->
                                              x8330
                                                ~value:(Ojs.float_of_js x8334)
                                                ~index:(Ojs.float_of_js x8335)
                                                ~array:(t_of_js x8336)))|]);
                             (match x8331 with
                              | Some x8333 ->
                                  ignore
                                    (Ojs.call x8332 "push"
                                       [|(any_to_js x8333)|])
                              | None -> ());
                             x8332))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x8344 : 'tags this) ->
        fun ~searchElement:(x8340 : float) ->
          fun ?fromIndex:(x8341 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8346 = this_to_js Obj.magic x8344 in
                 Ojs.call (Ojs.get_prop_ascii x8346 "indexOf") "apply"
                   [|x8346;((let x8342 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8342 "push"
                                  [|(Ojs.float_to_js x8340)|]);
                             (match x8341 with
                              | Some x8343 ->
                                  ignore
                                    (Ojs.call x8342 "push"
                                       [|(Ojs.float_to_js x8343)|])
                              | None -> ());
                             x8342))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x8350 : 'tags this) ->
        fun ?separator:(x8347 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x8352 = this_to_js Obj.magic x8350 in
               Ojs.call (Ojs.get_prop_ascii x8352 "join") "apply"
                 [|x8352;((let x8348 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8347 with
                            | Some x8349 ->
                                ignore
                                  (Ojs.call x8348 "push"
                                     [|(Ojs.string_to_js x8349)|])
                            | None -> ());
                           x8348))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x8357 : 'tags this) ->
        fun ~searchElement:(x8353 : float) ->
          fun ?fromIndex:(x8354 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8359 = this_to_js Obj.magic x8357 in
                 Ojs.call (Ojs.get_prop_ascii x8359 "lastIndexOf") "apply"
                   [|x8359;((let x8355 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8355 "push"
                                  [|(Ojs.float_to_js x8353)|]);
                             (match x8354 with
                              | Some x8356 ->
                                  ignore
                                    (Ojs.call x8355 "push"
                                       [|(Ojs.float_to_js x8356)|])
                              | None -> ());
                             x8355))|])
    let (get_length : 'tags this -> float) =
      fun (x8360 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8360) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8369 : 'tags this) ->
        fun
          ~callbackfn:(x8362 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x8363 : any option) ->
            fun () ->
              t_of_js
                (let x8371 = this_to_js Obj.magic x8369 in
                 Ojs.call (Ojs.get_prop_ascii x8371 "map") "apply"
                   [|x8371;((let x8364 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8364 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8366 : Ojs.t) ->
                                          fun (x8367 : Ojs.t) ->
                                            fun (x8368 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x8362
                                                   ~value:(Ojs.float_of_js
                                                             x8366)
                                                   ~index:(Ojs.float_of_js
                                                             x8367)
                                                   ~array:(t_of_js x8368))))|]);
                             (match x8363 with
                              | Some x8365 ->
                                  ignore
                                    (Ojs.call x8364 "push"
                                       [|(any_to_js x8365)|])
                              | None -> ());
                             x8364))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x8377 : 'tags this) ->
        fun
          ~callbackfn:(x8372 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8377) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x8373 : Ojs.t) ->
                       fun (x8374 : Ojs.t) ->
                         fun (x8375 : Ojs.t) ->
                           fun (x8376 : Ojs.t) ->
                             Ojs.float_to_js
                               (x8372 ~previousValue:(Ojs.float_of_js x8373)
                                  ~currentValue:(Ojs.float_of_js x8374)
                                  ~currentIndex:(Ojs.float_of_js x8375)
                                  ~array:(t_of_js x8376))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x8385 : 'tags this) ->
        fun
          ~callbackfn:(x8379 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x8384 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x8385) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8380 : Ojs.t) ->
                         fun (x8381 : Ojs.t) ->
                           fun (x8382 : Ojs.t) ->
                             fun (x8383 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x8379
                                    ~previousValue:(Ojs.float_of_js x8380)
                                    ~currentValue:(Ojs.float_of_js x8381)
                                    ~currentIndex:(Ojs.float_of_js x8382)
                                    ~array:(t_of_js x8383))));(Ojs.float_to_js
                                                                 x8384)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8393 : 'tags this) ->
        fun
          ~callbackfn:(x8387 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8392 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8393) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8388 : Ojs.t) ->
                         fun (x8389 : Ojs.t) ->
                           fun (x8390 : Ojs.t) ->
                             fun (x8391 : Ojs.t) ->
                               Obj.magic
                                 (x8387 ~previousValue:(Obj.magic x8388)
                                    ~currentValue:(Ojs.float_of_js x8389)
                                    ~currentIndex:(Ojs.float_of_js x8390)
                                    ~array:(t_of_js x8391))));(Obj.magic
                                                                 x8392)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x8400 : 'tags this) ->
        fun
          ~callbackfn:(x8395 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8400) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x8396 : Ojs.t) ->
                       fun (x8397 : Ojs.t) ->
                         fun (x8398 : Ojs.t) ->
                           fun (x8399 : Ojs.t) ->
                             Ojs.float_to_js
                               (x8395 ~previousValue:(Ojs.float_of_js x8396)
                                  ~currentValue:(Ojs.float_of_js x8397)
                                  ~currentIndex:(Ojs.float_of_js x8398)
                                  ~array:(t_of_js x8399))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x8408 : 'tags this) ->
        fun
          ~callbackfn:(x8402 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x8407 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x8408) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8403 : Ojs.t) ->
                         fun (x8404 : Ojs.t) ->
                           fun (x8405 : Ojs.t) ->
                             fun (x8406 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x8402
                                    ~previousValue:(Ojs.float_of_js x8403)
                                    ~currentValue:(Ojs.float_of_js x8404)
                                    ~currentIndex:(Ojs.float_of_js x8405)
                                    ~array:(t_of_js x8406))));(Ojs.float_to_js
                                                                 x8407)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8416 : 'tags this) ->
        fun
          ~callbackfn:(x8410 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8415 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8416) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8411 : Ojs.t) ->
                         fun (x8412 : Ojs.t) ->
                           fun (x8413 : Ojs.t) ->
                             fun (x8414 : Ojs.t) ->
                               Obj.magic
                                 (x8410 ~previousValue:(Obj.magic x8411)
                                    ~currentValue:(Ojs.float_of_js x8412)
                                    ~currentIndex:(Ojs.float_of_js x8413)
                                    ~array:(t_of_js x8414))));(Obj.magic
                                                                 x8415)|])
    let (reverse : 'tags this -> t) =
      fun (x8418 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8418) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x8425 : 'tags this) ->
        fun ~array:(x8420 : float ArrayLike.t) ->
          fun ?offset:(x8421 : float option) ->
            fun () ->
              ignore
                (let x8427 = this_to_js Obj.magic x8425 in
                 Ojs.call (Ojs.get_prop_ascii x8427 "set") "apply"
                   [|x8427;((let x8422 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8422 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x8420)|]);
                             (match x8421 with
                              | Some x8423 ->
                                  ignore
                                    (Ojs.call x8422 "push"
                                       [|(Ojs.float_to_js x8423)|])
                              | None -> ());
                             x8422))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x8433 : 'tags this) ->
        fun ?start:(x8428 : float option) ->
          fun ?end_:(x8429 : float option) ->
            fun () ->
              t_of_js
                (let x8435 = this_to_js Obj.magic x8433 in
                 Ojs.call (Ojs.get_prop_ascii x8435 "slice") "apply"
                   [|x8435;((let x8430 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8428 with
                              | Some x8432 ->
                                  ignore
                                    (Ojs.call x8430 "push"
                                       [|(Ojs.float_to_js x8432)|])
                              | None -> ());
                             (match x8429 with
                              | Some x8431 ->
                                  ignore
                                    (Ojs.call x8430 "push"
                                       [|(Ojs.float_to_js x8431)|])
                              | None -> ());
                             x8430))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8443 : 'tags this) ->
        fun
          ~predicate:(x8436 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8437 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8445 = this_to_js Obj.magic x8443 in
                 Ojs.call (Ojs.get_prop_ascii x8445 "some") "apply"
                   [|x8445;((let x8438 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8438 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8440 : Ojs.t) ->
                                          fun (x8441 : Ojs.t) ->
                                            fun (x8442 : Ojs.t) ->
                                              unknown_to_js
                                                (x8436
                                                   ~value:(Ojs.float_of_js
                                                             x8440)
                                                   ~index:(Ojs.float_of_js
                                                             x8441)
                                                   ~array:(t_of_js x8442))))|]);
                             (match x8437 with
                              | Some x8439 ->
                                  ignore
                                    (Ojs.call x8438 "push"
                                       [|(any_to_js x8439)|])
                              | None -> ());
                             x8438))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x8451 : 'tags this) ->
        fun ?compareFn:(x8446 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x8453 = this_to_js Obj.magic x8451 in
               Ojs.call (Ojs.get_prop_ascii x8453 "sort") "apply"
                 [|x8453;((let x8447 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8446 with
                            | Some x8448 ->
                                ignore
                                  (Ojs.call x8447 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x8449 : Ojs.t) ->
                                             fun (x8450 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x8448
                                                    ~a:(Ojs.float_of_js x8449)
                                                    ~b:(Ojs.float_of_js x8450))))|])
                            | None -> ());
                           x8447))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x8460 : 'tags this) ->
        fun ?begin_:(x8455 : float option) ->
          fun ?end_:(x8456 : float option) ->
            fun () ->
              t_of_js
                (let x8462 = this_to_js Obj.magic x8460 in
                 Ojs.call (Ojs.get_prop_ascii x8462 "subarray") "apply"
                   [|x8462;((let x8457 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8455 with
                              | Some x8459 ->
                                  ignore
                                    (Ojs.call x8457 "push"
                                       [|(Ojs.float_to_js x8459)|])
                              | None -> ());
                             (match x8456 with
                              | Some x8458 ->
                                  ignore
                                    (Ojs.call x8457 "push"
                                       [|(Ojs.float_to_js x8458)|])
                              | None -> ());
                             x8457))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x8463 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8463) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x8465 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8465) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x8467 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8467) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x8469 : 'tags this) ->
        fun (x8471 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x8469)
               (Ojs.float_to_js x8471))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x8472 : 'tags this) ->
        fun (x8474 : float) ->
          fun (x8475 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x8472) (Ojs.float_to_js x8474)
              (Ojs.float_to_js x8475)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x8476 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|(Iterable.t_to_js Ojs.float_to_js x8476)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8478 : float Iterable.t) ->
        fun ?mapfn:(x8479 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x8480 : any option) ->
            fun () ->
              t_of_js
                (let x8487 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
                 Ojs.call (Ojs.get_prop_ascii x8487 "from") "apply"
                   [|x8487;((let x8481 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8481 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x8478)|]);
                             (match x8479 with
                              | Some x8483 ->
                                  ignore
                                    (Ojs.call x8481 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x8484 : Ojs.t) ->
                                               fun (x8485 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x8483
                                                      ~v:(Ojs.float_of_js
                                                            x8484)
                                                      ~k:(Ojs.float_of_js
                                                            x8485))))|])
                              | None -> ());
                             (match x8480 with
                              | Some x8482 ->
                                  ignore
                                    (Ojs.call x8481 "push"
                                       [|(any_to_js x8482)|])
                              | None -> ());
                             x8481))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int16Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x8488 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|(Ojs.float_to_js x8488)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x8489 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|((match x8489 with
                 | `U1 x8490 -> ArrayLike.t_to_js Ojs.float_to_js x8490
                 | `U2 x8492 -> ArrayBufferLike.t_to_js x8492))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x8493 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x8494 : float option) ->
          fun ?length:(x8495 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int16Array")
                   (let x8496 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8496 "push"
                         [|(ArrayBufferLike.t_to_js x8493)|]);
                    (match x8494 with
                     | Some x8498 ->
                         ignore
                           (Ojs.call x8496 "push" [|(Ojs.float_to_js x8498)|])
                     | None -> ());
                    (match x8495 with
                     | Some x8497 ->
                         ignore
                           (Ojs.call x8496 "push" [|(Ojs.float_to_js x8497)|])
                     | None -> ());
                    x8496))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int16Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x8499 : float list) ->
        t_of_js
          (let x8502 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
           Ojs.call (Ojs.get_prop_ascii x8502 "of") "apply"
             [|x8502;((let x8500 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x8501 : float) ->
                            ignore
                              (Ojs.call x8500 "push"
                                 [|(Ojs.float_to_js x8501)|])) x8499;
                       x8500))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x8503 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int16Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x8503)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8505 : 'T ArrayLike.t) ->
        fun ~mapfn:(x8506 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x8507 : any option) ->
            fun () ->
              t_of_js
                (let x8513 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
                 Ojs.call (Ojs.get_prop_ascii x8513 "from") "apply"
                   [|x8513;((let x8508 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8508 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x8505)|]);
                             ignore
                               (Ojs.call x8508 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x8510 : Ojs.t) ->
                                          fun (x8511 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x8506 ~v:(Obj.magic x8510)
                                                 ~k:(Ojs.float_of_js x8511))))|]);
                             (match x8507 with
                              | Some x8509 ->
                                  ignore
                                    (Ojs.call x8508 "push"
                                       [|(any_to_js x8509)|])
                              | None -> ());
                             x8508))|])
    let cast_from = Obj.magic
  end
module BigUint64Array =
  struct
    type t =
      [ `BigUint64Array  | bigint ArrayLike.tags_1
      | bigint IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8515 : Ojs.t) -> t_of_js x8515
    and t_0_to_js : t_0 -> Ojs.t = fun (x8514 : t) -> t_to_js x8514
    type tags =
      [ `BigUint64Array  | bigint ArrayLike.tags_1
      | bigint IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `BigUint64Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8518 : Ojs.t) -> intf_of_js __tags_of_js x8518
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8516 : __tags intf) -> intf_to_js __tags_to_js x8516
    let (at : 'tags this -> index:float -> bigint option) =
      fun (x8521 : 'tags this) ->
        fun ~index:(x8520 : float) ->
          Ojs.option_of_js bigint_of_js
            (Ojs.call (this_to_js Obj.magic x8521) "at"
               [|(Ojs.float_to_js x8520)|])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x8524 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8524)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x8526 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8526) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x8528 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8528) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x8530 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8530) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8537 : 'tags this) ->
        fun ~target:(x8532 : float) ->
          fun ~start:(x8533 : float) ->
            fun ?end_:(x8534 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8539 = this_to_js Obj.magic x8537 in
                   Ojs.call (Ojs.get_prop_ascii x8539 "copyWithin") "apply"
                     [|x8539;((let x8535 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8535 "push"
                                    [|(Ojs.float_to_js x8532)|]);
                               ignore
                                 (Ojs.call x8535 "push"
                                    [|(Ojs.float_to_js x8533)|]);
                               (match x8534 with
                                | Some x8536 ->
                                    ignore
                                      (Ojs.call x8535 "push"
                                         [|(Ojs.float_to_js x8536)|])
                                | None -> ());
                               x8535))|])
    let (entries : 'tags this -> (float * bigint) IterableIterator.t) =
      fun (x8541 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x8543 : Ojs.t) ->
             let x8544 = x8543 in
             ((Ojs.float_of_js (Ojs.array_get x8544 0)),
               (bigint_of_js (Ojs.array_get x8544 1))))
          (Ojs.call (this_to_js Obj.magic x8541) "entries" [||])
    let (every :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8552 : 'tags this) ->
        fun
          ~predicate:(x8545 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8546 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8554 = this_to_js Obj.magic x8552 in
                 Ojs.call (Ojs.get_prop_ascii x8554 "every") "apply"
                   [|x8554;((let x8547 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8547 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8549 : Ojs.t) ->
                                          fun (x8550 : Ojs.t) ->
                                            fun (x8551 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8545
                                                   ~value:(bigint_of_js x8549)
                                                   ~index:(Ojs.float_of_js
                                                             x8550)
                                                   ~array:(t_of_js x8551))))|]);
                             (match x8546 with
                              | Some x8548 ->
                                  ignore
                                    (Ojs.call x8547 "push"
                                       [|(any_to_js x8548)|])
                              | None -> ());
                             x8547))|])
    let (fill :
      'tags this ->
        value:bigint -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8561 : 'tags this) ->
        fun ~value:(x8555 : bigint) ->
          fun ?start:(x8556 : float option) ->
            fun ?end_:(x8557 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8563 = this_to_js Obj.magic x8561 in
                   Ojs.call (Ojs.get_prop_ascii x8563 "fill") "apply"
                     [|x8563;((let x8558 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8558 "push"
                                    [|(bigint_to_js x8555)|]);
                               (match x8556 with
                                | Some x8560 ->
                                    ignore
                                      (Ojs.call x8558 "push"
                                         [|(Ojs.float_to_js x8560)|])
                                | None -> ());
                               (match x8557 with
                                | Some x8559 ->
                                    ignore
                                      (Ojs.call x8558 "push"
                                         [|(Ojs.float_to_js x8559)|])
                                | None -> ());
                               x8558))|])
    let (filter :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8572 : 'tags this) ->
        fun
          ~predicate:(x8565 : value:bigint -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x8566 : any option) ->
            fun () ->
              t_of_js
                (let x8574 = this_to_js Obj.magic x8572 in
                 Ojs.call (Ojs.get_prop_ascii x8574 "filter") "apply"
                   [|x8574;((let x8567 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8567 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8569 : Ojs.t) ->
                                          fun (x8570 : Ojs.t) ->
                                            fun (x8571 : Ojs.t) ->
                                              any_to_js
                                                (x8565
                                                   ~value:(bigint_of_js x8569)
                                                   ~index:(Ojs.float_of_js
                                                             x8570)
                                                   ~array:(t_of_js x8571))))|]);
                             (match x8566 with
                              | Some x8568 ->
                                  ignore
                                    (Ojs.call x8567 "push"
                                       [|(any_to_js x8568)|])
                              | None -> ());
                             x8567))|])
    let (find :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bigint option)
      =
      fun (x8582 : 'tags this) ->
        fun
          ~predicate:(x8575 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8576 : any option) ->
            fun () ->
              Ojs.option_of_js bigint_of_js
                (let x8584 = this_to_js Obj.magic x8582 in
                 Ojs.call (Ojs.get_prop_ascii x8584 "find") "apply"
                   [|x8584;((let x8577 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8577 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8579 : Ojs.t) ->
                                          fun (x8580 : Ojs.t) ->
                                            fun (x8581 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8575
                                                   ~value:(bigint_of_js x8579)
                                                   ~index:(Ojs.float_of_js
                                                             x8580)
                                                   ~array:(t_of_js x8581))))|]);
                             (match x8576 with
                              | Some x8578 ->
                                  ignore
                                    (Ojs.call x8577 "push"
                                       [|(any_to_js x8578)|])
                              | None -> ());
                             x8577))|])
    let (findIndex :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8593 : 'tags this) ->
        fun
          ~predicate:(x8586 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8587 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8595 = this_to_js Obj.magic x8593 in
                 Ojs.call (Ojs.get_prop_ascii x8595 "findIndex") "apply"
                   [|x8595;((let x8588 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8588 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8590 : Ojs.t) ->
                                          fun (x8591 : Ojs.t) ->
                                            fun (x8592 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8586
                                                   ~value:(bigint_of_js x8590)
                                                   ~index:(Ojs.float_of_js
                                                             x8591)
                                                   ~array:(t_of_js x8592))))|]);
                             (match x8587 with
                              | Some x8589 ->
                                  ignore
                                    (Ojs.call x8588 "push"
                                       [|(any_to_js x8589)|])
                              | None -> ());
                             x8588))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x8603 : 'tags this) ->
        fun
          ~callbackfn:(x8596 :
                        value:bigint -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x8597 : any option) ->
            fun () ->
              ignore
                (let x8605 = this_to_js Obj.magic x8603 in
                 Ojs.call (Ojs.get_prop_ascii x8605 "forEach") "apply"
                   [|x8605;((let x8598 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8598 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8600 : Ojs.t) ->
                                          fun (x8601 : Ojs.t) ->
                                            fun (x8602 : Ojs.t) ->
                                              x8596
                                                ~value:(bigint_of_js x8600)
                                                ~index:(Ojs.float_of_js x8601)
                                                ~array:(t_of_js x8602)))|]);
                             (match x8597 with
                              | Some x8599 ->
                                  ignore
                                    (Ojs.call x8598 "push"
                                       [|(any_to_js x8599)|])
                              | None -> ());
                             x8598))|])
    let (includes :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> bool)
      =
      fun (x8610 : 'tags this) ->
        fun ~searchElement:(x8606 : bigint) ->
          fun ?fromIndex:(x8607 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8612 = this_to_js Obj.magic x8610 in
                 Ojs.call (Ojs.get_prop_ascii x8612 "includes") "apply"
                   [|x8612;((let x8608 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8608 "push"
                                  [|(bigint_to_js x8606)|]);
                             (match x8607 with
                              | Some x8609 ->
                                  ignore
                                    (Ojs.call x8608 "push"
                                       [|(Ojs.float_to_js x8609)|])
                              | None -> ());
                             x8608))|])
    let (indexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x8617 : 'tags this) ->
        fun ~searchElement:(x8613 : bigint) ->
          fun ?fromIndex:(x8614 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8619 = this_to_js Obj.magic x8617 in
                 Ojs.call (Ojs.get_prop_ascii x8619 "indexOf") "apply"
                   [|x8619;((let x8615 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8615 "push"
                                  [|(bigint_to_js x8613)|]);
                             (match x8614 with
                              | Some x8616 ->
                                  ignore
                                    (Ojs.call x8615 "push"
                                       [|(Ojs.float_to_js x8616)|])
                              | None -> ());
                             x8615))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x8623 : 'tags this) ->
        fun ?separator:(x8620 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x8625 = this_to_js Obj.magic x8623 in
               Ojs.call (Ojs.get_prop_ascii x8625 "join") "apply"
                 [|x8625;((let x8621 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8620 with
                            | Some x8622 ->
                                ignore
                                  (Ojs.call x8621 "push"
                                     [|(Ojs.string_to_js x8622)|])
                            | None -> ());
                           x8621))|])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x8626 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8626) "keys" [||])
    let (lastIndexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x8633 : 'tags this) ->
        fun ~searchElement:(x8629 : bigint) ->
          fun ?fromIndex:(x8630 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8635 = this_to_js Obj.magic x8633 in
                 Ojs.call (Ojs.get_prop_ascii x8635 "lastIndexOf") "apply"
                   [|x8635;((let x8631 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8631 "push"
                                  [|(bigint_to_js x8629)|]);
                             (match x8630 with
                              | Some x8632 ->
                                  ignore
                                    (Ojs.call x8631 "push"
                                       [|(Ojs.float_to_js x8632)|])
                              | None -> ());
                             x8631))|])
    let (get_length : 'tags this -> float) =
      fun (x8636 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8636) "length")
    let (map :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> bigint) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8645 : 'tags this) ->
        fun
          ~callbackfn:(x8638 :
                        value:bigint -> index:float -> array:t -> bigint)
          ->
          fun ?thisArg:(x8639 : any option) ->
            fun () ->
              t_of_js
                (let x8647 = this_to_js Obj.magic x8645 in
                 Ojs.call (Ojs.get_prop_ascii x8647 "map") "apply"
                   [|x8647;((let x8640 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8640 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8642 : Ojs.t) ->
                                          fun (x8643 : Ojs.t) ->
                                            fun (x8644 : Ojs.t) ->
                                              bigint_to_js
                                                (x8638
                                                   ~value:(bigint_of_js x8642)
                                                   ~index:(Ojs.float_of_js
                                                             x8643)
                                                   ~array:(t_of_js x8644))))|]);
                             (match x8639 with
                              | Some x8641 ->
                                  ignore
                                    (Ojs.call x8640 "push"
                                       [|(any_to_js x8641)|])
                              | None -> ());
                             x8640))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x8653 : 'tags this) ->
        fun
          ~callbackfn:(x8648 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x8653) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x8649 : Ojs.t) ->
                       fun (x8650 : Ojs.t) ->
                         fun (x8651 : Ojs.t) ->
                           fun (x8652 : Ojs.t) ->
                             bigint_to_js
                               (x8648 ~previousValue:(bigint_of_js x8649)
                                  ~currentValue:(bigint_of_js x8650)
                                  ~currentIndex:(Ojs.float_of_js x8651)
                                  ~array:(t_of_js x8652))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8661 : 'tags this) ->
        fun
          ~callbackfn:(x8655 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8660 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8661) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8656 : Ojs.t) ->
                         fun (x8657 : Ojs.t) ->
                           fun (x8658 : Ojs.t) ->
                             fun (x8659 : Ojs.t) ->
                               Obj.magic
                                 (x8655 ~previousValue:(Obj.magic x8656)
                                    ~currentValue:(bigint_of_js x8657)
                                    ~currentIndex:(Ojs.float_of_js x8658)
                                    ~array:(t_of_js x8659))));(Obj.magic
                                                                 x8660)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x8668 : 'tags this) ->
        fun
          ~callbackfn:(x8663 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x8668) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x8664 : Ojs.t) ->
                       fun (x8665 : Ojs.t) ->
                         fun (x8666 : Ojs.t) ->
                           fun (x8667 : Ojs.t) ->
                             bigint_to_js
                               (x8663 ~previousValue:(bigint_of_js x8664)
                                  ~currentValue:(bigint_of_js x8665)
                                  ~currentIndex:(Ojs.float_of_js x8666)
                                  ~array:(t_of_js x8667))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8676 : 'tags this) ->
        fun
          ~callbackfn:(x8670 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8675 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8676) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8671 : Ojs.t) ->
                         fun (x8672 : Ojs.t) ->
                           fun (x8673 : Ojs.t) ->
                             fun (x8674 : Ojs.t) ->
                               Obj.magic
                                 (x8670 ~previousValue:(Obj.magic x8671)
                                    ~currentValue:(bigint_of_js x8672)
                                    ~currentIndex:(Ojs.float_of_js x8673)
                                    ~array:(t_of_js x8674))));(Obj.magic
                                                                 x8675)|])
    let (reverse : 'tags this -> 'tags this) =
      fun (x8678 : 'tags this) ->
        this_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic x8678) "reverse" [||])
    let (set_ :
      'tags this -> array:bigint ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x8686 : 'tags this) ->
        fun ~array:(x8681 : bigint ArrayLike.t) ->
          fun ?offset:(x8682 : float option) ->
            fun () ->
              ignore
                (let x8688 = this_to_js Obj.magic x8686 in
                 Ojs.call (Ojs.get_prop_ascii x8688 "set") "apply"
                   [|x8688;((let x8683 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8683 "push"
                                  [|(ArrayLike.t_to_js bigint_to_js x8681)|]);
                             (match x8682 with
                              | Some x8684 ->
                                  ignore
                                    (Ojs.call x8683 "push"
                                       [|(Ojs.float_to_js x8684)|])
                              | None -> ());
                             x8683))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x8694 : 'tags this) ->
        fun ?start:(x8689 : float option) ->
          fun ?end_:(x8690 : float option) ->
            fun () ->
              t_of_js
                (let x8696 = this_to_js Obj.magic x8694 in
                 Ojs.call (Ojs.get_prop_ascii x8696 "slice") "apply"
                   [|x8696;((let x8691 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8689 with
                              | Some x8693 ->
                                  ignore
                                    (Ojs.call x8691 "push"
                                       [|(Ojs.float_to_js x8693)|])
                              | None -> ());
                             (match x8690 with
                              | Some x8692 ->
                                  ignore
                                    (Ojs.call x8691 "push"
                                       [|(Ojs.float_to_js x8692)|])
                              | None -> ());
                             x8691))|])
    let (some :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8704 : 'tags this) ->
        fun
          ~predicate:(x8697 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8698 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8706 = this_to_js Obj.magic x8704 in
                 Ojs.call (Ojs.get_prop_ascii x8706 "some") "apply"
                   [|x8706;((let x8699 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8699 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8701 : Ojs.t) ->
                                          fun (x8702 : Ojs.t) ->
                                            fun (x8703 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8697
                                                   ~value:(bigint_of_js x8701)
                                                   ~index:(Ojs.float_of_js
                                                             x8702)
                                                   ~array:(t_of_js x8703))))|]);
                             (match x8698 with
                              | Some x8700 ->
                                  ignore
                                    (Ojs.call x8699 "push"
                                       [|(any_to_js x8700)|])
                              | None -> ());
                             x8699))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:bigint -> b:bigint -> [ `U1 of float  | `U2 of bigint ])
          -> unit -> 'tags this)
      =
      fun (x8714 : 'tags this) ->
        fun
          ?compareFn:(x8707 :
                       (a:bigint ->
                          b:bigint -> [ `U1 of float  | `U2 of bigint ])
                         option)
          ->
          fun () ->
            this_of_js Obj.magic
              (let x8716 = this_to_js Obj.magic x8714 in
               Ojs.call (Ojs.get_prop_ascii x8716 "sort") "apply"
                 [|x8716;((let x8708 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8707 with
                            | Some x8709 ->
                                ignore
                                  (Ojs.call x8708 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x8710 : Ojs.t) ->
                                             fun (x8711 : Ojs.t) ->
                                               match x8709
                                                       ~a:(bigint_of_js x8710)
                                                       ~b:(bigint_of_js x8711)
                                               with
                                               | `U1 x8712 ->
                                                   Ojs.float_to_js x8712
                                               | `U2 x8713 ->
                                                   bigint_to_js x8713))|])
                            | None -> ());
                           x8708))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x8723 : 'tags this) ->
        fun ?begin_:(x8718 : float option) ->
          fun ?end_:(x8719 : float option) ->
            fun () ->
              t_of_js
                (let x8725 = this_to_js Obj.magic x8723 in
                 Ojs.call (Ojs.get_prop_ascii x8725 "subarray") "apply"
                   [|x8725;((let x8720 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8718 with
                              | Some x8722 ->
                                  ignore
                                    (Ojs.call x8720 "push"
                                       [|(Ojs.float_to_js x8722)|])
                              | None -> ());
                             (match x8719 with
                              | Some x8721 ->
                                  ignore
                                    (Ojs.call x8720 "push"
                                       [|(Ojs.float_to_js x8721)|])
                              | None -> ());
                             x8720))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x8726 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8726) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x8728 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8728) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x8730 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8730) "valueOf" [||])
    let (values : 'tags this -> bigint IterableIterator.t) =
      fun (x8732 : 'tags this) ->
        IterableIterator.t_of_js bigint_of_js
          (Ojs.call (this_to_js Obj.magic x8732) "values" [||])
    let (get : 'tags this -> float -> bigint) =
      fun (x8735 : 'tags this) ->
        fun (x8737 : float) ->
          bigint_of_js
            (Ojs.get_prop (this_to_js Obj.magic x8735)
               (Ojs.float_to_js x8737))
    let (set : 'tags this -> float -> bigint -> unit) =
      fun (x8738 : 'tags this) ->
        fun (x8740 : float) ->
          fun (x8741 : bigint) ->
            Ojs.set_prop (this_to_js Obj.magic x8738) (Ojs.float_to_js x8740)
              (bigint_to_js x8741)
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "BigUint64Array") "prototype")
    let (create : ?length:float -> unit -> t) =
      fun ?length:(x8742 : float option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
               (let x8743 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x8742 with
                 | Some x8744 ->
                     ignore
                       (Ojs.call x8743 "push" [|(Ojs.float_to_js x8744)|])
                 | None -> ());
                x8743))
    let (create' : bigint Iterable.t -> t) =
      fun (x8745 : bigint Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
             [|(Iterable.t_to_js bigint_to_js x8745)|])
    let (create'' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x8747 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x8748 : float option) ->
          fun ?length:(x8749 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
                   (let x8750 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8750 "push"
                         [|(ArrayBufferLike.t_to_js x8747)|]);
                    (match x8748 with
                     | Some x8752 ->
                         ignore
                           (Ojs.call x8750 "push" [|(Ojs.float_to_js x8752)|])
                     | None -> ());
                    (match x8749 with
                     | Some x8751 ->
                         ignore
                           (Ojs.call x8750 "push" [|(Ojs.float_to_js x8751)|])
                     | None -> ());
                    x8750))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
             "BYTES_PER_ELEMENT")
    let (of_ : bigint list -> t) =
      fun (x8753 : bigint list) ->
        t_of_js
          (let x8756 = Ojs.get_prop_ascii Ojs.global "BigUint64Array" in
           Ojs.call (Ojs.get_prop_ascii x8756 "of") "apply"
             [|x8756;((let x8754 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x8755 : bigint) ->
                            ignore
                              (Ojs.call x8754 "push" [|(bigint_to_js x8755)|]))
                         x8753;
                       x8754))|])
    let (from : bigint ArrayLike.t -> t) =
      fun (x8757 : bigint ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigUint64Array") "from"
             [|(ArrayLike.t_to_js bigint_to_js x8757)|])
    let (from' :
      arrayLike:'U ArrayLike.t ->
        mapfn:(v:'U -> k:float -> bigint) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8759 : 'U ArrayLike.t) ->
        fun ~mapfn:(x8760 : v:'U -> k:float -> bigint) ->
          fun ?thisArg:(x8761 : any option) ->
            fun () ->
              t_of_js
                (let x8767 = Ojs.get_prop_ascii Ojs.global "BigUint64Array" in
                 Ojs.call (Ojs.get_prop_ascii x8767 "from") "apply"
                   [|x8767;((let x8762 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8762 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x8759)|]);
                             ignore
                               (Ojs.call x8762 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x8764 : Ojs.t) ->
                                          fun (x8765 : Ojs.t) ->
                                            bigint_to_js
                                              (x8760 ~v:(Obj.magic x8764)
                                                 ~k:(Ojs.float_of_js x8765))))|]);
                             (match x8761 with
                              | Some x8763 ->
                                  ignore
                                    (Ojs.call x8762 "push"
                                       [|(any_to_js x8763)|])
                              | None -> ());
                             x8762))|])
    let cast_from = Obj.magic
  end
module BigInt64Array =
  struct
    type t =
      [ `BigInt64Array  | bigint ArrayLike.tags_1
      | bigint IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8769 : Ojs.t) -> t_of_js x8769
    and t_0_to_js : t_0 -> Ojs.t = fun (x8768 : t) -> t_to_js x8768
    type tags =
      [ `BigInt64Array  | bigint ArrayLike.tags_1
      | bigint IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `BigInt64Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8772 : Ojs.t) -> intf_of_js __tags_of_js x8772
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8770 : __tags intf) -> intf_to_js __tags_to_js x8770
    let (at : 'tags this -> index:float -> bigint option) =
      fun (x8775 : 'tags this) ->
        fun ~index:(x8774 : float) ->
          Ojs.option_of_js bigint_of_js
            (Ojs.call (this_to_js Obj.magic x8775) "at"
               [|(Ojs.float_to_js x8774)|])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x8778 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8778)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x8780 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8780) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x8782 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8782) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x8784 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8784) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8791 : 'tags this) ->
        fun ~target:(x8786 : float) ->
          fun ~start:(x8787 : float) ->
            fun ?end_:(x8788 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8793 = this_to_js Obj.magic x8791 in
                   Ojs.call (Ojs.get_prop_ascii x8793 "copyWithin") "apply"
                     [|x8793;((let x8789 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8789 "push"
                                    [|(Ojs.float_to_js x8786)|]);
                               ignore
                                 (Ojs.call x8789 "push"
                                    [|(Ojs.float_to_js x8787)|]);
                               (match x8788 with
                                | Some x8790 ->
                                    ignore
                                      (Ojs.call x8789 "push"
                                         [|(Ojs.float_to_js x8790)|])
                                | None -> ());
                               x8789))|])
    let (entries : 'tags this -> (float * bigint) IterableIterator.t) =
      fun (x8795 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x8797 : Ojs.t) ->
             let x8798 = x8797 in
             ((Ojs.float_of_js (Ojs.array_get x8798 0)),
               (bigint_of_js (Ojs.array_get x8798 1))))
          (Ojs.call (this_to_js Obj.magic x8795) "entries" [||])
    let (every :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8806 : 'tags this) ->
        fun
          ~predicate:(x8799 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8800 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8808 = this_to_js Obj.magic x8806 in
                 Ojs.call (Ojs.get_prop_ascii x8808 "every") "apply"
                   [|x8808;((let x8801 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8801 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8803 : Ojs.t) ->
                                          fun (x8804 : Ojs.t) ->
                                            fun (x8805 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8799
                                                   ~value:(bigint_of_js x8803)
                                                   ~index:(Ojs.float_of_js
                                                             x8804)
                                                   ~array:(t_of_js x8805))))|]);
                             (match x8800 with
                              | Some x8802 ->
                                  ignore
                                    (Ojs.call x8801 "push"
                                       [|(any_to_js x8802)|])
                              | None -> ());
                             x8801))|])
    let (fill :
      'tags this ->
        value:bigint -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8815 : 'tags this) ->
        fun ~value:(x8809 : bigint) ->
          fun ?start:(x8810 : float option) ->
            fun ?end_:(x8811 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8817 = this_to_js Obj.magic x8815 in
                   Ojs.call (Ojs.get_prop_ascii x8817 "fill") "apply"
                     [|x8817;((let x8812 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8812 "push"
                                    [|(bigint_to_js x8809)|]);
                               (match x8810 with
                                | Some x8814 ->
                                    ignore
                                      (Ojs.call x8812 "push"
                                         [|(Ojs.float_to_js x8814)|])
                                | None -> ());
                               (match x8811 with
                                | Some x8813 ->
                                    ignore
                                      (Ojs.call x8812 "push"
                                         [|(Ojs.float_to_js x8813)|])
                                | None -> ());
                               x8812))|])
    let (filter :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8826 : 'tags this) ->
        fun
          ~predicate:(x8819 : value:bigint -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x8820 : any option) ->
            fun () ->
              t_of_js
                (let x8828 = this_to_js Obj.magic x8826 in
                 Ojs.call (Ojs.get_prop_ascii x8828 "filter") "apply"
                   [|x8828;((let x8821 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8821 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8823 : Ojs.t) ->
                                          fun (x8824 : Ojs.t) ->
                                            fun (x8825 : Ojs.t) ->
                                              any_to_js
                                                (x8819
                                                   ~value:(bigint_of_js x8823)
                                                   ~index:(Ojs.float_of_js
                                                             x8824)
                                                   ~array:(t_of_js x8825))))|]);
                             (match x8820 with
                              | Some x8822 ->
                                  ignore
                                    (Ojs.call x8821 "push"
                                       [|(any_to_js x8822)|])
                              | None -> ());
                             x8821))|])
    let (find :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bigint option)
      =
      fun (x8836 : 'tags this) ->
        fun
          ~predicate:(x8829 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8830 : any option) ->
            fun () ->
              Ojs.option_of_js bigint_of_js
                (let x8838 = this_to_js Obj.magic x8836 in
                 Ojs.call (Ojs.get_prop_ascii x8838 "find") "apply"
                   [|x8838;((let x8831 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8831 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8833 : Ojs.t) ->
                                          fun (x8834 : Ojs.t) ->
                                            fun (x8835 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8829
                                                   ~value:(bigint_of_js x8833)
                                                   ~index:(Ojs.float_of_js
                                                             x8834)
                                                   ~array:(t_of_js x8835))))|]);
                             (match x8830 with
                              | Some x8832 ->
                                  ignore
                                    (Ojs.call x8831 "push"
                                       [|(any_to_js x8832)|])
                              | None -> ());
                             x8831))|])
    let (findIndex :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8847 : 'tags this) ->
        fun
          ~predicate:(x8840 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8841 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8849 = this_to_js Obj.magic x8847 in
                 Ojs.call (Ojs.get_prop_ascii x8849 "findIndex") "apply"
                   [|x8849;((let x8842 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8842 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8844 : Ojs.t) ->
                                          fun (x8845 : Ojs.t) ->
                                            fun (x8846 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8840
                                                   ~value:(bigint_of_js x8844)
                                                   ~index:(Ojs.float_of_js
                                                             x8845)
                                                   ~array:(t_of_js x8846))))|]);
                             (match x8841 with
                              | Some x8843 ->
                                  ignore
                                    (Ojs.call x8842 "push"
                                       [|(any_to_js x8843)|])
                              | None -> ());
                             x8842))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x8857 : 'tags this) ->
        fun
          ~callbackfn:(x8850 :
                        value:bigint -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x8851 : any option) ->
            fun () ->
              ignore
                (let x8859 = this_to_js Obj.magic x8857 in
                 Ojs.call (Ojs.get_prop_ascii x8859 "forEach") "apply"
                   [|x8859;((let x8852 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8852 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8854 : Ojs.t) ->
                                          fun (x8855 : Ojs.t) ->
                                            fun (x8856 : Ojs.t) ->
                                              x8850
                                                ~value:(bigint_of_js x8854)
                                                ~index:(Ojs.float_of_js x8855)
                                                ~array:(t_of_js x8856)))|]);
                             (match x8851 with
                              | Some x8853 ->
                                  ignore
                                    (Ojs.call x8852 "push"
                                       [|(any_to_js x8853)|])
                              | None -> ());
                             x8852))|])
    let (includes :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> bool)
      =
      fun (x8864 : 'tags this) ->
        fun ~searchElement:(x8860 : bigint) ->
          fun ?fromIndex:(x8861 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8866 = this_to_js Obj.magic x8864 in
                 Ojs.call (Ojs.get_prop_ascii x8866 "includes") "apply"
                   [|x8866;((let x8862 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8862 "push"
                                  [|(bigint_to_js x8860)|]);
                             (match x8861 with
                              | Some x8863 ->
                                  ignore
                                    (Ojs.call x8862 "push"
                                       [|(Ojs.float_to_js x8863)|])
                              | None -> ());
                             x8862))|])
    let (indexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x8871 : 'tags this) ->
        fun ~searchElement:(x8867 : bigint) ->
          fun ?fromIndex:(x8868 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8873 = this_to_js Obj.magic x8871 in
                 Ojs.call (Ojs.get_prop_ascii x8873 "indexOf") "apply"
                   [|x8873;((let x8869 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8869 "push"
                                  [|(bigint_to_js x8867)|]);
                             (match x8868 with
                              | Some x8870 ->
                                  ignore
                                    (Ojs.call x8869 "push"
                                       [|(Ojs.float_to_js x8870)|])
                              | None -> ());
                             x8869))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x8877 : 'tags this) ->
        fun ?separator:(x8874 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x8879 = this_to_js Obj.magic x8877 in
               Ojs.call (Ojs.get_prop_ascii x8879 "join") "apply"
                 [|x8879;((let x8875 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8874 with
                            | Some x8876 ->
                                ignore
                                  (Ojs.call x8875 "push"
                                     [|(Ojs.string_to_js x8876)|])
                            | None -> ());
                           x8875))|])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x8880 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8880) "keys" [||])
    let (lastIndexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x8887 : 'tags this) ->
        fun ~searchElement:(x8883 : bigint) ->
          fun ?fromIndex:(x8884 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8889 = this_to_js Obj.magic x8887 in
                 Ojs.call (Ojs.get_prop_ascii x8889 "lastIndexOf") "apply"
                   [|x8889;((let x8885 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8885 "push"
                                  [|(bigint_to_js x8883)|]);
                             (match x8884 with
                              | Some x8886 ->
                                  ignore
                                    (Ojs.call x8885 "push"
                                       [|(Ojs.float_to_js x8886)|])
                              | None -> ());
                             x8885))|])
    let (get_length : 'tags this -> float) =
      fun (x8890 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8890) "length")
    let (map :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> bigint) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8899 : 'tags this) ->
        fun
          ~callbackfn:(x8892 :
                        value:bigint -> index:float -> array:t -> bigint)
          ->
          fun ?thisArg:(x8893 : any option) ->
            fun () ->
              t_of_js
                (let x8901 = this_to_js Obj.magic x8899 in
                 Ojs.call (Ojs.get_prop_ascii x8901 "map") "apply"
                   [|x8901;((let x8894 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8894 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8896 : Ojs.t) ->
                                          fun (x8897 : Ojs.t) ->
                                            fun (x8898 : Ojs.t) ->
                                              bigint_to_js
                                                (x8892
                                                   ~value:(bigint_of_js x8896)
                                                   ~index:(Ojs.float_of_js
                                                             x8897)
                                                   ~array:(t_of_js x8898))))|]);
                             (match x8893 with
                              | Some x8895 ->
                                  ignore
                                    (Ojs.call x8894 "push"
                                       [|(any_to_js x8895)|])
                              | None -> ());
                             x8894))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x8907 : 'tags this) ->
        fun
          ~callbackfn:(x8902 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x8907) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x8903 : Ojs.t) ->
                       fun (x8904 : Ojs.t) ->
                         fun (x8905 : Ojs.t) ->
                           fun (x8906 : Ojs.t) ->
                             bigint_to_js
                               (x8902 ~previousValue:(bigint_of_js x8903)
                                  ~currentValue:(bigint_of_js x8904)
                                  ~currentIndex:(Ojs.float_of_js x8905)
                                  ~array:(t_of_js x8906))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8915 : 'tags this) ->
        fun
          ~callbackfn:(x8909 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8914 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8915) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8910 : Ojs.t) ->
                         fun (x8911 : Ojs.t) ->
                           fun (x8912 : Ojs.t) ->
                             fun (x8913 : Ojs.t) ->
                               Obj.magic
                                 (x8909 ~previousValue:(Obj.magic x8910)
                                    ~currentValue:(bigint_of_js x8911)
                                    ~currentIndex:(Ojs.float_of_js x8912)
                                    ~array:(t_of_js x8913))));(Obj.magic
                                                                 x8914)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x8922 : 'tags this) ->
        fun
          ~callbackfn:(x8917 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x8922) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x8918 : Ojs.t) ->
                       fun (x8919 : Ojs.t) ->
                         fun (x8920 : Ojs.t) ->
                           fun (x8921 : Ojs.t) ->
                             bigint_to_js
                               (x8917 ~previousValue:(bigint_of_js x8918)
                                  ~currentValue:(bigint_of_js x8919)
                                  ~currentIndex:(Ojs.float_of_js x8920)
                                  ~array:(t_of_js x8921))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8930 : 'tags this) ->
        fun
          ~callbackfn:(x8924 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8929 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8930) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8925 : Ojs.t) ->
                         fun (x8926 : Ojs.t) ->
                           fun (x8927 : Ojs.t) ->
                             fun (x8928 : Ojs.t) ->
                               Obj.magic
                                 (x8924 ~previousValue:(Obj.magic x8925)
                                    ~currentValue:(bigint_of_js x8926)
                                    ~currentIndex:(Ojs.float_of_js x8927)
                                    ~array:(t_of_js x8928))));(Obj.magic
                                                                 x8929)|])
    let (reverse : 'tags this -> 'tags this) =
      fun (x8932 : 'tags this) ->
        this_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic x8932) "reverse" [||])
    let (set_ :
      'tags this -> array:bigint ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x8940 : 'tags this) ->
        fun ~array:(x8935 : bigint ArrayLike.t) ->
          fun ?offset:(x8936 : float option) ->
            fun () ->
              ignore
                (let x8942 = this_to_js Obj.magic x8940 in
                 Ojs.call (Ojs.get_prop_ascii x8942 "set") "apply"
                   [|x8942;((let x8937 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8937 "push"
                                  [|(ArrayLike.t_to_js bigint_to_js x8935)|]);
                             (match x8936 with
                              | Some x8938 ->
                                  ignore
                                    (Ojs.call x8937 "push"
                                       [|(Ojs.float_to_js x8938)|])
                              | None -> ());
                             x8937))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x8948 : 'tags this) ->
        fun ?start:(x8943 : float option) ->
          fun ?end_:(x8944 : float option) ->
            fun () ->
              t_of_js
                (let x8950 = this_to_js Obj.magic x8948 in
                 Ojs.call (Ojs.get_prop_ascii x8950 "slice") "apply"
                   [|x8950;((let x8945 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8943 with
                              | Some x8947 ->
                                  ignore
                                    (Ojs.call x8945 "push"
                                       [|(Ojs.float_to_js x8947)|])
                              | None -> ());
                             (match x8944 with
                              | Some x8946 ->
                                  ignore
                                    (Ojs.call x8945 "push"
                                       [|(Ojs.float_to_js x8946)|])
                              | None -> ());
                             x8945))|])
    let (some :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8958 : 'tags this) ->
        fun
          ~predicate:(x8951 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8952 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8960 = this_to_js Obj.magic x8958 in
                 Ojs.call (Ojs.get_prop_ascii x8960 "some") "apply"
                   [|x8960;((let x8953 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8953 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8955 : Ojs.t) ->
                                          fun (x8956 : Ojs.t) ->
                                            fun (x8957 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8951
                                                   ~value:(bigint_of_js x8955)
                                                   ~index:(Ojs.float_of_js
                                                             x8956)
                                                   ~array:(t_of_js x8957))))|]);
                             (match x8952 with
                              | Some x8954 ->
                                  ignore
                                    (Ojs.call x8953 "push"
                                       [|(any_to_js x8954)|])
                              | None -> ());
                             x8953))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:bigint -> b:bigint -> [ `U1 of float  | `U2 of bigint ])
          -> unit -> 'tags this)
      =
      fun (x8968 : 'tags this) ->
        fun
          ?compareFn:(x8961 :
                       (a:bigint ->
                          b:bigint -> [ `U1 of float  | `U2 of bigint ])
                         option)
          ->
          fun () ->
            this_of_js Obj.magic
              (let x8970 = this_to_js Obj.magic x8968 in
               Ojs.call (Ojs.get_prop_ascii x8970 "sort") "apply"
                 [|x8970;((let x8962 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8961 with
                            | Some x8963 ->
                                ignore
                                  (Ojs.call x8962 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x8964 : Ojs.t) ->
                                             fun (x8965 : Ojs.t) ->
                                               match x8963
                                                       ~a:(bigint_of_js x8964)
                                                       ~b:(bigint_of_js x8965)
                                               with
                                               | `U1 x8966 ->
                                                   Ojs.float_to_js x8966
                                               | `U2 x8967 ->
                                                   bigint_to_js x8967))|])
                            | None -> ());
                           x8962))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x8977 : 'tags this) ->
        fun ?begin_:(x8972 : float option) ->
          fun ?end_:(x8973 : float option) ->
            fun () ->
              t_of_js
                (let x8979 = this_to_js Obj.magic x8977 in
                 Ojs.call (Ojs.get_prop_ascii x8979 "subarray") "apply"
                   [|x8979;((let x8974 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8972 with
                              | Some x8976 ->
                                  ignore
                                    (Ojs.call x8974 "push"
                                       [|(Ojs.float_to_js x8976)|])
                              | None -> ());
                             (match x8973 with
                              | Some x8975 ->
                                  ignore
                                    (Ojs.call x8974 "push"
                                       [|(Ojs.float_to_js x8975)|])
                              | None -> ());
                             x8974))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x8980 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8980) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x8982 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8982) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x8984 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8984) "valueOf" [||])
    let (values : 'tags this -> bigint IterableIterator.t) =
      fun (x8986 : 'tags this) ->
        IterableIterator.t_of_js bigint_of_js
          (Ojs.call (this_to_js Obj.magic x8986) "values" [||])
    let (get : 'tags this -> float -> bigint) =
      fun (x8989 : 'tags this) ->
        fun (x8991 : float) ->
          bigint_of_js
            (Ojs.get_prop (this_to_js Obj.magic x8989)
               (Ojs.float_to_js x8991))
    let (set : 'tags this -> float -> bigint -> unit) =
      fun (x8992 : 'tags this) ->
        fun (x8994 : float) ->
          fun (x8995 : bigint) ->
            Ojs.set_prop (this_to_js Obj.magic x8992) (Ojs.float_to_js x8994)
              (bigint_to_js x8995)
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
             "prototype")
    let (create : ?length:float -> unit -> t) =
      fun ?length:(x8996 : float option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
               (let x8997 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x8996 with
                 | Some x8998 ->
                     ignore
                       (Ojs.call x8997 "push" [|(Ojs.float_to_js x8998)|])
                 | None -> ());
                x8997))
    let (create' : bigint Iterable.t -> t) =
      fun (x8999 : bigint Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
             [|(Iterable.t_to_js bigint_to_js x8999)|])
    let (create'' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x9001 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x9002 : float option) ->
          fun ?length:(x9003 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
                   (let x9004 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x9004 "push"
                         [|(ArrayBufferLike.t_to_js x9001)|]);
                    (match x9002 with
                     | Some x9006 ->
                         ignore
                           (Ojs.call x9004 "push" [|(Ojs.float_to_js x9006)|])
                     | None -> ());
                    (match x9003 with
                     | Some x9005 ->
                         ignore
                           (Ojs.call x9004 "push" [|(Ojs.float_to_js x9005)|])
                     | None -> ());
                    x9004))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
             "BYTES_PER_ELEMENT")
    let (of_ : bigint list -> t) =
      fun (x9007 : bigint list) ->
        t_of_js
          (let x9010 = Ojs.get_prop_ascii Ojs.global "BigInt64Array" in
           Ojs.call (Ojs.get_prop_ascii x9010 "of") "apply"
             [|x9010;((let x9008 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x9009 : bigint) ->
                            ignore
                              (Ojs.call x9008 "push" [|(bigint_to_js x9009)|]))
                         x9007;
                       x9008))|])
    let (from : bigint ArrayLike.t -> t) =
      fun (x9011 : bigint ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigInt64Array") "from"
             [|(ArrayLike.t_to_js bigint_to_js x9011)|])
    let (from' :
      arrayLike:'U ArrayLike.t ->
        mapfn:(v:'U -> k:float -> bigint) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x9013 : 'U ArrayLike.t) ->
        fun ~mapfn:(x9014 : v:'U -> k:float -> bigint) ->
          fun ?thisArg:(x9015 : any option) ->
            fun () ->
              t_of_js
                (let x9021 = Ojs.get_prop_ascii Ojs.global "BigInt64Array" in
                 Ojs.call (Ojs.get_prop_ascii x9021 "from") "apply"
                   [|x9021;((let x9016 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9016 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x9013)|]);
                             ignore
                               (Ojs.call x9016 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x9018 : Ojs.t) ->
                                          fun (x9019 : Ojs.t) ->
                                            bigint_to_js
                                              (x9014 ~v:(Obj.magic x9018)
                                                 ~k:(Ojs.float_of_js x9019))))|]);
                             (match x9015 with
                              | Some x9017 ->
                                  ignore
                                    (Ojs.call x9016 "push"
                                       [|(any_to_js x9017)|])
                              | None -> ());
                             x9016))|])
    let cast_from = Obj.magic
  end
module Atomics =
  struct
    let (add :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x9022 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9025 : float) ->
          fun ~value:(x9026 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "add"
                 [|((match x9022 with
                     | `U1 x9023 -> BigInt64Array.t_to_js x9023
                     | `U2 x9024 -> BigUint64Array.t_to_js x9024));(Ojs.float_to_js
                                                                    x9025);(
                   bigint_to_js x9026)|])
    let (and_ :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x9027 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9030 : float) ->
          fun ~value:(x9031 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "and"
                 [|((match x9027 with
                     | `U1 x9028 -> BigInt64Array.t_to_js x9028
                     | `U2 x9029 -> BigUint64Array.t_to_js x9029));(Ojs.float_to_js
                                                                    x9030);(
                   bigint_to_js x9031)|])
    let (compareExchange :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float ->
          expectedValue:bigint -> replacementValue:bigint -> bigint)
      =
      fun
        ~typedArray:(x9032 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9035 : float) ->
          fun ~expectedValue:(x9036 : bigint) ->
            fun ~replacementValue:(x9037 : bigint) ->
              bigint_of_js
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics")
                   "compareExchange"
                   [|((match x9032 with
                       | `U1 x9033 -> BigInt64Array.t_to_js x9033
                       | `U2 x9034 -> BigUint64Array.t_to_js x9034));(
                     Ojs.float_to_js x9035);(bigint_to_js x9036);(bigint_to_js
                                                                    x9037)|])
    let (exchange :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x9038 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9041 : float) ->
          fun ~value:(x9042 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "exchange"
                 [|((match x9038 with
                     | `U1 x9039 -> BigInt64Array.t_to_js x9039
                     | `U2 x9040 -> BigUint64Array.t_to_js x9040));(Ojs.float_to_js
                                                                    x9041);(
                   bigint_to_js x9042)|])
    let (load :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> bigint)
      =
      fun
        ~typedArray:(x9043 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9046 : float) ->
          bigint_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "load"
               [|((match x9043 with
                   | `U1 x9044 -> BigInt64Array.t_to_js x9044
                   | `U2 x9045 -> BigUint64Array.t_to_js x9045));(Ojs.float_to_js
                                                                    x9046)|])
    let (or_ :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x9047 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9050 : float) ->
          fun ~value:(x9051 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "or"
                 [|((match x9047 with
                     | `U1 x9048 -> BigInt64Array.t_to_js x9048
                     | `U2 x9049 -> BigUint64Array.t_to_js x9049));(Ojs.float_to_js
                                                                    x9050);(
                   bigint_to_js x9051)|])
    let (store :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x9052 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9055 : float) ->
          fun ~value:(x9056 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "store"
                 [|((match x9052 with
                     | `U1 x9053 -> BigInt64Array.t_to_js x9053
                     | `U2 x9054 -> BigUint64Array.t_to_js x9054));(Ojs.float_to_js
                                                                    x9055);(
                   bigint_to_js x9056)|])
    let (sub :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x9057 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9060 : float) ->
          fun ~value:(x9061 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "sub"
                 [|((match x9057 with
                     | `U1 x9058 -> BigInt64Array.t_to_js x9058
                     | `U2 x9059 -> BigUint64Array.t_to_js x9059));(Ojs.float_to_js
                                                                    x9060);(
                   bigint_to_js x9061)|])
    let (wait :
      typedArray:BigInt64Array.t ->
        index:float ->
          value:bigint ->
            ?timeout:float ->
              unit -> [ `L_s71_not_equal  | `L_s74_ok  | `L_s94_timed_out ])
      =
      fun ~typedArray:(x9062 : BigInt64Array.t) ->
        fun ~index:(x9063 : float) ->
          fun ~value:(x9064 : bigint) ->
            fun ?timeout:(x9065 : float option) ->
              fun () ->
                let x9069 =
                  let x9068 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                  Ojs.call (Ojs.get_prop_ascii x9068 "wait") "apply"
                    [|x9068;((let x9066 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x9066 "push"
                                   [|(BigInt64Array.t_to_js x9062)|]);
                              ignore
                                (Ojs.call x9066 "push"
                                   [|(Ojs.float_to_js x9063)|]);
                              ignore
                                (Ojs.call x9066 "push"
                                   [|(bigint_to_js x9064)|]);
                              (match x9065 with
                               | Some x9067 ->
                                   ignore
                                     (Ojs.call x9066 "push"
                                        [|(Ojs.float_to_js x9067)|])
                               | None -> ());
                              x9066))|] in
                match Ojs.string_of_js x9069 with
                | "not-equal" -> `L_s71_not_equal
                | "ok" -> `L_s74_ok
                | "timed-out" -> `L_s94_timed_out
                | _ -> assert false
    let (notify :
      typedArray:BigInt64Array.t ->
        index:float -> ?count:float -> unit -> float)
      =
      fun ~typedArray:(x9070 : BigInt64Array.t) ->
        fun ~index:(x9071 : float) ->
          fun ?count:(x9072 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9075 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                 Ojs.call (Ojs.get_prop_ascii x9075 "notify") "apply"
                   [|x9075;((let x9073 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9073 "push"
                                  [|(BigInt64Array.t_to_js x9070)|]);
                             ignore
                               (Ojs.call x9073 "push"
                                  [|(Ojs.float_to_js x9071)|]);
                             (match x9072 with
                              | Some x9074 ->
                                  ignore
                                    (Ojs.call x9073 "push"
                                       [|(Ojs.float_to_js x9074)|])
                              | None -> ());
                             x9073))|])
    let (xor :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x9076 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9079 : float) ->
          fun ~value:(x9080 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "xor"
                 [|((match x9076 with
                     | `U1 x9077 -> BigInt64Array.t_to_js x9077
                     | `U2 x9078 -> BigUint64Array.t_to_js x9078));(Ojs.float_to_js
                                                                    x9079);(
                   bigint_to_js x9080)|])
    let (add' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x9081 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9088 : float) ->
          fun ~value:(x9089 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "add"
                 [|((match x9081 with
                     | `U1 x9082 -> Int8Array.t_to_js x9082
                     | `U2 x9083 -> Uint8Array.t_to_js x9083
                     | `U3 x9084 -> Int16Array.t_to_js x9084
                     | `U4 x9085 -> Uint16Array.t_to_js x9085
                     | `U5 x9086 -> Int32Array.t_to_js x9086
                     | `U6 x9087 -> Uint32Array.t_to_js x9087));(Ojs.float_to_js
                                                                   x9088);(
                   Ojs.float_to_js x9089)|])
    let (and_' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x9090 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9097 : float) ->
          fun ~value:(x9098 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "and"
                 [|((match x9090 with
                     | `U1 x9091 -> Int8Array.t_to_js x9091
                     | `U2 x9092 -> Uint8Array.t_to_js x9092
                     | `U3 x9093 -> Int16Array.t_to_js x9093
                     | `U4 x9094 -> Uint16Array.t_to_js x9094
                     | `U5 x9095 -> Int32Array.t_to_js x9095
                     | `U6 x9096 -> Uint32Array.t_to_js x9096));(Ojs.float_to_js
                                                                   x9097);(
                   Ojs.float_to_js x9098)|])
    let (compareExchange' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        ->
        index:float -> expectedValue:float -> replacementValue:float -> float)
      =
      fun
        ~typedArray:(x9099 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9106 : float) ->
          fun ~expectedValue:(x9107 : float) ->
            fun ~replacementValue:(x9108 : float) ->
              Ojs.float_of_js
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics")
                   "compareExchange"
                   [|((match x9099 with
                       | `U1 x9100 -> Int8Array.t_to_js x9100
                       | `U2 x9101 -> Uint8Array.t_to_js x9101
                       | `U3 x9102 -> Int16Array.t_to_js x9102
                       | `U4 x9103 -> Uint16Array.t_to_js x9103
                       | `U5 x9104 -> Int32Array.t_to_js x9104
                       | `U6 x9105 -> Uint32Array.t_to_js x9105));(Ojs.float_to_js
                                                                    x9106);(
                     Ojs.float_to_js x9107);(Ojs.float_to_js x9108)|])
    let (exchange' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x9109 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9116 : float) ->
          fun ~value:(x9117 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "exchange"
                 [|((match x9109 with
                     | `U1 x9110 -> Int8Array.t_to_js x9110
                     | `U2 x9111 -> Uint8Array.t_to_js x9111
                     | `U3 x9112 -> Int16Array.t_to_js x9112
                     | `U4 x9113 -> Uint16Array.t_to_js x9113
                     | `U5 x9114 -> Int32Array.t_to_js x9114
                     | `U6 x9115 -> Uint32Array.t_to_js x9115));(Ojs.float_to_js
                                                                   x9116);(
                   Ojs.float_to_js x9117)|])
    let (isLockFree : float -> bool) =
      fun (x9118 : float) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "isLockFree"
             [|(Ojs.float_to_js x9118)|])
    let (load' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> float)
      =
      fun
        ~typedArray:(x9119 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9126 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "load"
               [|((match x9119 with
                   | `U1 x9120 -> Int8Array.t_to_js x9120
                   | `U2 x9121 -> Uint8Array.t_to_js x9121
                   | `U3 x9122 -> Int16Array.t_to_js x9122
                   | `U4 x9123 -> Uint16Array.t_to_js x9123
                   | `U5 x9124 -> Int32Array.t_to_js x9124
                   | `U6 x9125 -> Uint32Array.t_to_js x9125));(Ojs.float_to_js
                                                                 x9126)|])
    let (or_' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x9127 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9134 : float) ->
          fun ~value:(x9135 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "or"
                 [|((match x9127 with
                     | `U1 x9128 -> Int8Array.t_to_js x9128
                     | `U2 x9129 -> Uint8Array.t_to_js x9129
                     | `U3 x9130 -> Int16Array.t_to_js x9130
                     | `U4 x9131 -> Uint16Array.t_to_js x9131
                     | `U5 x9132 -> Int32Array.t_to_js x9132
                     | `U6 x9133 -> Uint32Array.t_to_js x9133));(Ojs.float_to_js
                                                                   x9134);(
                   Ojs.float_to_js x9135)|])
    let (store' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x9136 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9143 : float) ->
          fun ~value:(x9144 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "store"
                 [|((match x9136 with
                     | `U1 x9137 -> Int8Array.t_to_js x9137
                     | `U2 x9138 -> Uint8Array.t_to_js x9138
                     | `U3 x9139 -> Int16Array.t_to_js x9139
                     | `U4 x9140 -> Uint16Array.t_to_js x9140
                     | `U5 x9141 -> Int32Array.t_to_js x9141
                     | `U6 x9142 -> Uint32Array.t_to_js x9142));(Ojs.float_to_js
                                                                   x9143);(
                   Ojs.float_to_js x9144)|])
    let (sub' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x9145 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9152 : float) ->
          fun ~value:(x9153 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "sub"
                 [|((match x9145 with
                     | `U1 x9146 -> Int8Array.t_to_js x9146
                     | `U2 x9147 -> Uint8Array.t_to_js x9147
                     | `U3 x9148 -> Int16Array.t_to_js x9148
                     | `U4 x9149 -> Uint16Array.t_to_js x9149
                     | `U5 x9150 -> Int32Array.t_to_js x9150
                     | `U6 x9151 -> Uint32Array.t_to_js x9151));(Ojs.float_to_js
                                                                   x9152);(
                   Ojs.float_to_js x9153)|])
    let (wait' :
      typedArray:Int32Array.t ->
        index:float ->
          value:float ->
            ?timeout:float ->
              unit -> [ `L_s71_not_equal  | `L_s74_ok  | `L_s94_timed_out ])
      =
      fun ~typedArray:(x9154 : Int32Array.t) ->
        fun ~index:(x9155 : float) ->
          fun ~value:(x9156 : float) ->
            fun ?timeout:(x9157 : float option) ->
              fun () ->
                let x9161 =
                  let x9160 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                  Ojs.call (Ojs.get_prop_ascii x9160 "wait") "apply"
                    [|x9160;((let x9158 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x9158 "push"
                                   [|(Int32Array.t_to_js x9154)|]);
                              ignore
                                (Ojs.call x9158 "push"
                                   [|(Ojs.float_to_js x9155)|]);
                              ignore
                                (Ojs.call x9158 "push"
                                   [|(Ojs.float_to_js x9156)|]);
                              (match x9157 with
                               | Some x9159 ->
                                   ignore
                                     (Ojs.call x9158 "push"
                                        [|(Ojs.float_to_js x9159)|])
                               | None -> ());
                              x9158))|] in
                match Ojs.string_of_js x9161 with
                | "not-equal" -> `L_s71_not_equal
                | "ok" -> `L_s74_ok
                | "timed-out" -> `L_s94_timed_out
                | _ -> assert false
    let (notify' :
      typedArray:Int32Array.t -> index:float -> ?count:float -> unit -> float)
      =
      fun ~typedArray:(x9162 : Int32Array.t) ->
        fun ~index:(x9163 : float) ->
          fun ?count:(x9164 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9167 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                 Ojs.call (Ojs.get_prop_ascii x9167 "notify") "apply"
                   [|x9167;((let x9165 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9165 "push"
                                  [|(Int32Array.t_to_js x9162)|]);
                             ignore
                               (Ojs.call x9165 "push"
                                  [|(Ojs.float_to_js x9163)|]);
                             (match x9164 with
                              | Some x9166 ->
                                  ignore
                                    (Ojs.call x9165 "push"
                                       [|(Ojs.float_to_js x9166)|])
                              | None -> ());
                             x9165))|])
    let (xor' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x9168 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9175 : float) ->
          fun ~value:(x9176 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "xor"
                 [|((match x9168 with
                     | `U1 x9169 -> Int8Array.t_to_js x9169
                     | `U2 x9170 -> Uint8Array.t_to_js x9170
                     | `U3 x9171 -> Int16Array.t_to_js x9171
                     | `U4 x9172 -> Uint16Array.t_to_js x9172
                     | `U5 x9173 -> Int32Array.t_to_js x9173
                     | `U6 x9174 -> Uint32Array.t_to_js x9174));(Ojs.float_to_js
                                                                   x9175);(
                   Ojs.float_to_js x9176)|])
  end
module PromiseRejectedResult =
  struct
    type t = [ `PromiseRejectedResult ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9178 : Ojs.t) -> t_of_js x9178
    and t_0_to_js : t_0 -> Ojs.t = fun (x9177 : t) -> t_to_js x9177
    type tags = [ `PromiseRejectedResult ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `PromiseRejectedResult ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x9181 : Ojs.t) -> intf_of_js __tags_of_js x9181
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x9179 : __tags intf) -> intf_to_js __tags_to_js x9179
    let (get_status : 'tags this -> [ `L_s84_rejected ]) =
      fun (x9183 : 'tags this) ->
        let x9185 = Ojs.get_prop_ascii (this_to_js Obj.magic x9183) "status" in
        match Ojs.string_of_js x9185 with
        | "rejected" -> `L_s84_rejected
        | _ -> assert false
    let (set_status : 'tags this -> [ `L_s84_rejected ] -> unit) =
      fun (x9186 : 'tags this) ->
        fun (x9187 : [ `L_s84_rejected ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9186) "status"
            (match x9187 with
             | `L_s84_rejected -> Ojs.string_to_js "rejected")
    let (get_reason : 'tags this -> any) =
      fun (x9189 : 'tags this) ->
        any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x9189) "reason")
    let (set_reason : 'tags this -> any -> unit) =
      fun (x9191 : 'tags this) ->
        fun (x9192 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9191) "reason"
            (any_to_js x9192)
    let (create : status:[ `L_s84_rejected ] -> reason:any -> unit -> t) =
      fun ~status:(x9194 : [ `L_s84_rejected ]) ->
        fun ~reason:(x9195 : any) ->
          fun () ->
            let x9196 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x9196 "status"
              (match x9194 with
               | `L_s84_rejected -> Ojs.string_to_js "rejected");
            Ojs.set_prop_ascii x9196 "reason" (any_to_js x9195);
            t_of_js x9196
    let cast_from = Obj.magic
  end
module PromiseFulfilledResult =
  struct
    type 'T t = [ `PromiseFulfilledResult of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x9199 : Ojs.t) -> t_of_js __T_of_js x9199
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x9197 : __T t) -> t_to_js __T_to_js x9197
    type 'T tags = [ `PromiseFulfilledResult of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `PromiseFulfilledResult of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9203 : Ojs.t) -> intf_of_js __tags_of_js x9203
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9201 : __tags intf) -> intf_to_js __tags_to_js x9201
    let (get_status : ('tags, 'T) this -> [ `L_s43_fulfilled ]) =
      fun (x9205 : ('tags, 'T) this) ->
        let x9208 =
          Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x9205) "status" in
        match Ojs.string_of_js x9208 with
        | "fulfilled" -> `L_s43_fulfilled
        | _ -> assert false
    let (set_status : ('tags, 'T) this -> [ `L_s43_fulfilled ] -> unit) =
      fun (x9209 : ('tags, 'T) this) ->
        fun (x9210 : [ `L_s43_fulfilled ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x9209) "status"
            (match x9210 with
             | `L_s43_fulfilled -> Ojs.string_to_js "fulfilled")
    let (get_value : ('tags, 'T) this -> 'T) =
      fun (x9213 : ('tags, 'T) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x9213) "value")
    let (set_value : ('tags, 'T) this -> 'T -> unit) =
      fun (x9216 : ('tags, 'T) this) ->
        fun (x9217 : 'T) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x9216) "value"
            (Obj.magic x9217)
    let (create : status:[ `L_s43_fulfilled ] -> value:'T -> unit -> 'T t) =
      fun ~status:(x9220 : [ `L_s43_fulfilled ]) ->
        fun ~value:(x9221 : 'T) ->
          fun () ->
            let x9222 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x9222 "status"
              (match x9220 with
               | `L_s43_fulfilled -> Ojs.string_to_js "fulfilled");
            Ojs.set_prop_ascii x9222 "value" (Obj.magic x9221);
            t_of_js Obj.magic x9222
    let cast_from = Obj.magic
  end
module PromiseSettledResult =
  struct
    type 'T t =
      [ `U_s43_fulfilled of 'T PromiseFulfilledResult.t 
      | `U_s84_rejected of PromiseRejectedResult.t ]
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x9228 : Ojs.t) ->
          let x9229 = x9228 in
          match Ojs.string_of_js (Ojs.get_prop_ascii x9229 "status") with
          | "fulfilled" ->
              `U_s43_fulfilled
                (PromiseFulfilledResult.t_of_js __T_of_js x9229)
          | "rejected" ->
              `U_s84_rejected (PromiseRejectedResult.t_of_js x9229)
          | _ -> assert false
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun
          (x9224 :
            [ `U_s43_fulfilled of __T PromiseFulfilledResult.t 
            | `U_s84_rejected of PromiseRejectedResult.t ])
          ->
          match x9224 with
          | `U_s43_fulfilled x9225 ->
              PromiseFulfilledResult.t_to_js __T_to_js x9225
          | `U_s84_rejected x9227 -> PromiseRejectedResult.t_to_js x9227
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x9233 : Ojs.t) -> t_of_js __T_of_js x9233
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x9231 : __T t) -> t_to_js __T_to_js x9231
  end
module Awaited =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x9236 : Ojs.t) -> any_of_js x9236
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x9235 : any) -> any_to_js x9235
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x9239 : Ojs.t) -> t_of_js __T_of_js x9239
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x9237 : __T t) -> t_to_js __T_to_js x9237
  end
module Promise =
  struct
    type 'T t = [ `Promise of 'T  | 'T PromiseLike.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x9243 : Ojs.t) -> t_of_js __T_of_js x9243
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x9241 : __T t) -> t_to_js __T_to_js x9241
    type 'T tags = [ `Promise of 'T  | 'T PromiseLike.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `Promise of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9247 : Ojs.t) -> intf_of_js __tags_of_js x9247
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9245 : __tags intf) -> intf_to_js __tags_to_js x9245
    let (finally :
      ('tags, 'T) this ->
        ?onfinally:[ `Null  | `Undefined of undefined 
                   | `U1 of unit -> unit ]
          -> unit -> 'T t)
      =
      fun (x9254 : ('tags, 'T) this) ->
        fun
          ?onfinally:(x9249 :
                       [ `Null  | `Undefined of undefined 
                       | `U1 of unit -> unit ] option)
          ->
          fun () ->
            t_of_js Obj.magic
              (let x9257 = this_to_js Obj.magic Obj.magic x9254 in
               Ojs.call (Ojs.get_prop_ascii x9257 "finally") "apply"
                 [|x9257;((let x9250 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9249 with
                            | Some x9251 ->
                                ignore
                                  (Ojs.call x9250 "push"
                                     [|((match x9251 with
                                         | `Null -> Ojs.null
                                         | `Undefined x9252 ->
                                             undefined_to_js x9252
                                         | `U1 x9253 ->
                                             Ojs.fun_to_js 1
                                               (fun _ -> x9253 ())))|])
                            | None -> ());
                           x9250))|])
    let (then_ :
      ('tags, 'T) this ->
        ?onfulfilled:[ `Null  | `Undefined of undefined 
                     | `U1 of
                         'T ->
                           [ `U1 of 'TResult1 
                           | `U2 of 'TResult1 PromiseLike.t ]
                         ]
          ->
          ?onrejected:[ `Null  | `Undefined of undefined 
                      | `U1 of
                          any ->
                            [ `U1 of 'TResult2 
                            | `U2 of 'TResult2 PromiseLike.t ]
                          ]
            -> unit -> ('TResult1, 'TResult2) union2 t)
      =
      fun (x9276 : ('tags, 'T) this) ->
        fun
          ?onfulfilled:(x9259 :
                         [ `Null  | `Undefined of undefined 
                         | `U1 of
                             'T ->
                               [ `U1 of 'TResult1 
                               | `U2 of 'TResult1 PromiseLike.t ]
                             ]
                           option)
          ->
          fun
            ?onrejected:(x9260 :
                          [ `Null  | `Undefined of undefined 
                          | `U1 of
                              any ->
                                [ `U1 of 'TResult2 
                                | `U2 of 'TResult2 PromiseLike.t ]
                              ]
                            option)
            ->
            fun () ->
              t_of_js
                (fun (x9280 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x9280)
                (let x9279 = this_to_js Obj.magic Obj.magic x9276 in
                 Ojs.call (Ojs.get_prop_ascii x9279 "then") "apply"
                   [|x9279;((let x9261 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x9259 with
                              | Some x9269 ->
                                  ignore
                                    (Ojs.call x9261 "push"
                                       [|((match x9269 with
                                           | `Null -> Ojs.null
                                           | `Undefined x9270 ->
                                               undefined_to_js x9270
                                           | `U1 x9271 ->
                                               Ojs.fun_to_js 1
                                                 (fun (x9272 : Ojs.t) ->
                                                    match x9271
                                                            (Obj.magic x9272)
                                                    with
                                                    | `U1 x9273 ->
                                                        Obj.magic x9273
                                                    | `U2 x9274 ->
                                                        PromiseLike.t_to_js
                                                          Obj.magic x9274)))|])
                              | None -> ());
                             (match x9260 with
                              | Some x9262 ->
                                  ignore
                                    (Ojs.call x9261 "push"
                                       [|((match x9262 with
                                           | `Null -> Ojs.null
                                           | `Undefined x9263 ->
                                               undefined_to_js x9263
                                           | `U1 x9264 ->
                                               Ojs.fun_to_js 1
                                                 (fun (x9265 : Ojs.t) ->
                                                    match x9264
                                                            (any_of_js x9265)
                                                    with
                                                    | `U1 x9266 ->
                                                        Obj.magic x9266
                                                    | `U2 x9267 ->
                                                        PromiseLike.t_to_js
                                                          Obj.magic x9267)))|])
                              | None -> ());
                             x9261))|])
    let (catch :
      ('tags, 'T) this ->
        ?onrejected:[ `Null  | `Undefined of undefined 
                    | `U1 of
                        any ->
                          [ `U1 of 'TResult 
                          | `U2 of 'TResult PromiseLike.t ]
                        ]
          -> unit -> ('T, 'TResult) union2 t)
      =
      fun (x9292 : ('tags, 'T) this) ->
        fun
          ?onrejected:(x9283 :
                        [ `Null  | `Undefined of undefined 
                        | `U1 of
                            any ->
                              [ `U1 of 'TResult 
                              | `U2 of 'TResult PromiseLike.t ]
                            ]
                          option)
          ->
          fun () ->
            t_of_js
              (fun (x9296 : Ojs.t) -> union2_of_js Obj.magic Obj.magic x9296)
              (let x9295 = this_to_js Obj.magic Obj.magic x9292 in
               Ojs.call (Ojs.get_prop_ascii x9295 "catch") "apply"
                 [|x9295;((let x9284 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9283 with
                            | Some x9285 ->
                                ignore
                                  (Ojs.call x9284 "push"
                                     [|((match x9285 with
                                         | `Null -> Ojs.null
                                         | `Undefined x9286 ->
                                             undefined_to_js x9286
                                         | `U1 x9287 ->
                                             Ojs.fun_to_js 1
                                               (fun (x9288 : Ojs.t) ->
                                                  match x9287
                                                          (any_of_js x9288)
                                                  with
                                                  | `U1 x9289 ->
                                                      Obj.magic x9289
                                                  | `U2 x9290 ->
                                                      PromiseLike.t_to_js
                                                        Obj.magic x9290)))|])
                            | None -> ());
                           x9284))|])
    let (any :
      [ `U1 of [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] list 
      | `U2 of [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t ] -> 
        'T t)
      =
      fun
        (x9299 :
          [ `U1 of [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] list 
          | `U2 of [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t ])
        ->
        t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|((match x9299 with
                 | `U1 x9300 ->
                     Ojs.list_to_js
                       (fun
                          (x9301 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ])
                          ->
                          match x9301 with
                          | `U1 x9302 -> Obj.magic x9302
                          | `U2 x9303 -> PromiseLike.t_to_js Obj.magic x9303)
                       x9300
                 | `U2 x9305 ->
                     Iterable.t_to_js
                       (fun
                          (x9306 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ])
                          ->
                          match x9306 with
                          | `U1 x9307 -> Obj.magic x9307
                          | `U2 x9308 -> PromiseLike.t_to_js Obj.magic x9308)
                       x9305))|])
    let (any' : 'T -> any Awaited.t t) =
      fun (x9311 : 'T) ->
        t_of_js (fun (x9312 : Ojs.t) -> Awaited.t_of_js any_of_js x9312)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(Obj.magic x9311)|])
    let (any'' :
      [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t -> 'T Awaited.t t)
      =
      fun (x9314 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t) ->
        t_of_js (fun (x9319 : Ojs.t) -> Awaited.t_of_js Obj.magic x9319)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(Iterable.t_to_js
                  (fun (x9315 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
                     match x9315 with
                     | `U1 x9316 -> Obj.magic x9316
                     | `U2 x9317 -> PromiseLike.t_to_js Obj.magic x9317)
                  x9314)|])
    let (allSettled : 'T -> any t) =
      fun (x9321 : 'T) ->
        t_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(Obj.magic x9321)|])
    let (allSettled' :
      [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t ->
        'T Awaited.t PromiseSettledResult.t list t)
      =
      fun (x9323 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t) ->
        t_of_js
          (fun (x9328 : Ojs.t) ->
             Ojs.list_of_js
               (fun (x9329 : Ojs.t) ->
                  PromiseSettledResult.t_of_js
                    (fun (x9330 : Ojs.t) -> Awaited.t_of_js Obj.magic x9330)
                    x9329) x9328)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(Iterable.t_to_js
                  (fun (x9324 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
                     match x9324 with
                     | `U1 x9325 -> Obj.magic x9325
                     | `U2 x9326 -> PromiseLike.t_to_js Obj.magic x9326)
                  x9323)|])
    let (prototype : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Promise")
             "prototype")
    let (create :
      (resolve:([ `U1 of 'T  | `U2 of 'T PromiseLike.t ] -> unit) ->
         reject:(?reason:any -> unit -> unit) -> unit)
        -> 'T t)
      =
      fun
        (x9333 :
          resolve:([ `U1 of 'T  | `U2 of 'T PromiseLike.t ] -> unit) ->
            reject:(?reason:any -> unit -> unit) -> unit)
        ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Promise")
             [|(Ojs.fun_to_js 2
                  (fun (x9334 : Ojs.t) ->
                     fun (x9339 : Ojs.t) ->
                       x9333
                         ~resolve:(fun
                                     (x9335 :
                                       [ `U1 of 'T 
                                       | `U2 of 'T PromiseLike.t ])
                                     ->
                                     ignore
                                       (Ojs.apply x9334
                                          [|((match x9335 with
                                              | `U1 x9336 -> Obj.magic x9336
                                              | `U2 x9337 ->
                                                  PromiseLike.t_to_js
                                                    Obj.magic x9337))|]))
                         ~reject:(fun ?reason:(x9340 : any option) ->
                                    fun () ->
                                      ignore
                                        (Ojs.call x9339 "apply"
                                           [|Ojs.null;((let x9341 =
                                                          Ojs.new_obj
                                                            (Ojs.get_prop_ascii
                                                               Ojs.global
                                                               "Array") 
                                                            [||] in
                                                        (match x9340 with
                                                         | Some x9342 ->
                                                             ignore
                                                               (Ojs.call
                                                                  x9341
                                                                  "push"
                                                                  [|(
                                                                    any_to_js
                                                                    x9342)|])
                                                         | None -> ());
                                                        x9341))|]))))|])
    let (all : 'T -> any t) =
      fun (x9344 : 'T) ->
        t_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(Obj.magic x9344)|])
    let (race : 'T -> any Awaited.t t) =
      fun (x9346 : 'T) ->
        t_of_js (fun (x9347 : Ojs.t) -> Awaited.t_of_js any_of_js x9347)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(Obj.magic x9346)|])
    let (reject : ?reason:any -> unit -> 'T t) =
      fun ?reason:(x9349 : any option) ->
        fun () ->
          t_of_js Obj.magic
            (let x9352 = Ojs.get_prop_ascii Ojs.global "Promise" in
             Ojs.call (Ojs.get_prop_ascii x9352 "reject") "apply"
               [|x9352;((let x9350 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         (match x9349 with
                          | Some x9351 ->
                              ignore
                                (Ojs.call x9350 "push" [|(any_to_js x9351)|])
                          | None -> ());
                         x9350))|])
    let (resolve : unit -> unit t) =
      fun () ->
        t_of_js Ojs.unit_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve" [||])
    let (resolve' : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] -> 'T t) =
      fun (x9355 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
        t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve"
             [|((match x9355 with
                 | `U1 x9356 -> Obj.magic x9356
                 | `U2 x9357 -> PromiseLike.t_to_js Obj.magic x9357))|])
    let (all' :
      [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t ->
        'T Awaited.t list t)
      =
      fun (x9360 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t) ->
        t_of_js
          (fun (x9365 : Ojs.t) ->
             Ojs.list_of_js
               (fun (x9366 : Ojs.t) -> Awaited.t_of_js Obj.magic x9366) x9365)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(Iterable.t_to_js
                  (fun (x9361 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
                     match x9361 with
                     | `U1 x9362 -> Obj.magic x9362
                     | `U2 x9363 -> PromiseLike.t_to_js Obj.magic x9363)
                  x9360)|])
    let (race' :
      [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t -> 'T Awaited.t t)
      =
      fun (x9368 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t) ->
        t_of_js (fun (x9373 : Ojs.t) -> Awaited.t_of_js Obj.magic x9373)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(Iterable.t_to_js
                  (fun (x9369 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
                     match x9369 with
                     | `U1 x9370 -> Obj.magic x9370
                     | `U2 x9371 -> PromiseLike.t_to_js Obj.magic x9371)
                  x9368)|])
    let cast_from = Obj.magic
  end
module AsyncIterator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `AsyncIterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn, 'TNext) t_3 = ('T, 'TReturn, 'TNext) t
    let rec t_3_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t_3
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (__TNext_of_js : Ojs.t -> __TNext) ->
            fun (x9379 : Ojs.t) ->
              t_of_js __T_of_js __TReturn_of_js __TNext_of_js x9379
    and t_3_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t_3 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (__TNext_to_js : __TNext -> Ojs.t) ->
            fun (x9375 : (__T, __TReturn, __TNext) t) ->
              t_to_js __T_to_js __TReturn_to_js __TNext_to_js x9375
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, undefined) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x9387 : Ojs.t) ->
            t_of_js __T_of_js __TReturn_of_js undefined_of_js x9387
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x9383 : (__T, __TReturn, undefined) t) ->
            t_to_js __T_to_js __TReturn_to_js undefined_to_js x9383
    type 'T t_1 = ('T, any, undefined) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x9395 : Ojs.t) ->
          t_of_js __T_of_js any_of_js undefined_of_js x9395
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x9391 : (__T, any, undefined) t) ->
          t_to_js __T_to_js any_to_js undefined_to_js x9391
    type ('T, 'TReturn, 'TNext) tags =
      [ `AsyncIterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn, 'TNext) tags_3 = ('T, 'TReturn, 'TNext) tags
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, undefined) tags
    type 'T tags_1 = ('T, any, undefined) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `AsyncIterator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
            fun (__TNext_of_js : Ojs.t -> __TNext) ->
              fun (x9401 : Ojs.t) -> intf_of_js __tags_of_js x9401
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
            fun (__TNext_to_js : __TNext -> Ojs.t) ->
              fun (x9399 : __tags intf) -> intf_to_js __tags_to_js x9399
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x9406 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x9403 : any list) ->
          Promise.t_of_js
            (fun (x9412 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x9412)
            (let x9411 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x9406 in
             Ojs.call (Ojs.get_prop_ascii x9411 "next") "apply"
               [|x9411;((let x9404 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x9405 : any) ->
                              ignore
                                (Ojs.call x9404 "push" [|(any_to_js x9405)|]))
                           x9403;
                         x9404))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?value:[ `U1 of 'TReturn  | `U2 of 'TReturn PromiseLike.t ] ->
          unit -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x9421 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun
          ?value:(x9415 :
                   [ `U1 of 'TReturn  | `U2 of 'TReturn PromiseLike.t ]
                     option)
          ->
          fun () ->
            Promise.t_of_js
              (fun (x9427 : Ojs.t) ->
                 IteratorResult.t_of_js Obj.magic Obj.magic x9427)
              (let x9426 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x9421 in
               Ojs.call (Ojs.get_prop_ascii x9426 "return") "apply"
                 [|x9426;((let x9416 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9415 with
                            | Some x9417 ->
                                ignore
                                  (Ojs.call x9416 "push"
                                     [|((match x9417 with
                                         | `U1 x9418 -> Obj.magic x9418
                                         | `U2 x9419 ->
                                             PromiseLike.t_to_js Obj.magic
                                               x9419))|])
                            | None -> ());
                           x9416))|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?e:any -> unit -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x9433 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?e:(x9430 : any option) ->
          fun () ->
            Promise.t_of_js
              (fun (x9439 : Ojs.t) ->
                 IteratorResult.t_of_js Obj.magic Obj.magic x9439)
              (let x9438 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x9433 in
               Ojs.call (Ojs.get_prop_ascii x9438 "throw") "apply"
                 [|x9438;((let x9431 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9430 with
                            | Some x9432 ->
                                ignore
                                  (Ojs.call x9431 "push"
                                     [|(any_to_js x9432)|])
                            | None -> ());
                           x9431))|])
    let cast_from = Obj.magic
  end
module AsyncIterableIterator =
  struct
    type 'T t =
      [ `AsyncIterableIterator of 'T 
      | `AsyncIterator of ('T * any * undefined) ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x9444 : Ojs.t) -> t_of_js __T_of_js x9444
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x9442 : __T t) -> t_to_js __T_to_js x9442
    type 'T tags =
      [ `AsyncIterableIterator of 'T 
      | `AsyncIterator of ('T * any * undefined) ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `AsyncIterableIterator of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9448 : Ojs.t) -> intf_of_js __tags_of_js x9448
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9446 : __tags intf) -> intf_to_js __tags_to_js x9446
    let cast_from = Obj.magic
  end
module AsyncIterable =
  struct
    type 'T t = [ `AsyncIterable of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x9452 : Ojs.t) -> t_of_js __T_of_js x9452
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x9450 : __T t) -> t_to_js __T_to_js x9450
    type 'T tags = [ `AsyncIterable of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `AsyncIterable of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9456 : Ojs.t) -> intf_of_js __tags_of_js x9456
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9454 : __tags intf) -> intf_to_js __tags_to_js x9454
    let cast_from = Obj.magic
  end
module AsyncGenerator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `AsyncGenerator of ('T * 'TReturn * 'TNext) 
      | `AsyncIterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn, 'TNext) t_3 = ('T, 'TReturn, 'TNext) t
    let rec t_3_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t_3
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (__TNext_of_js : Ojs.t -> __TNext) ->
            fun (x9462 : Ojs.t) ->
              t_of_js __T_of_js __TReturn_of_js __TNext_of_js x9462
    and t_3_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t_3 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (__TNext_to_js : __TNext -> Ojs.t) ->
            fun (x9458 : (__T, __TReturn, __TNext) t) ->
              t_to_js __T_to_js __TReturn_to_js __TNext_to_js x9458
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, unknown) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x9470 : Ojs.t) ->
            t_of_js __T_of_js __TReturn_of_js unknown_of_js x9470
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x9466 : (__T, __TReturn, unknown) t) ->
            t_to_js __T_to_js __TReturn_to_js unknown_to_js x9466
    type 'T t_1 = ('T, any, unknown) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x9478 : Ojs.t) ->
          t_of_js __T_of_js any_of_js unknown_of_js x9478
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x9474 : (__T, any, unknown) t) ->
          t_to_js __T_to_js any_to_js unknown_to_js x9474
    type t_0 = (unknown, any, unknown) t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x9486 : Ojs.t) ->
        t_of_js unknown_of_js any_of_js unknown_of_js x9486
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x9482 : (unknown, any, unknown) t) ->
        t_to_js unknown_to_js any_to_js unknown_to_js x9482
    type ('T, 'TReturn, 'TNext) tags =
      [ `AsyncGenerator of ('T * 'TReturn * 'TNext) 
      | `AsyncIterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn, 'TNext) tags_3 = ('T, 'TReturn, 'TNext) tags
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, unknown) tags
    type 'T tags_1 = ('T, any, unknown) tags
    type tags_0 = (unknown, any, unknown) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `AsyncGenerator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
            fun (__TNext_of_js : Ojs.t -> __TNext) ->
              fun (x9492 : Ojs.t) -> intf_of_js __tags_of_js x9492
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
            fun (__TNext_to_js : __TNext -> Ojs.t) ->
              fun (x9490 : __tags intf) -> intf_to_js __tags_to_js x9490
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x9497 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x9494 : any list) ->
          Promise.t_of_js
            (fun (x9503 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x9503)
            (let x9502 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x9497 in
             Ojs.call (Ojs.get_prop_ascii x9502 "next") "apply"
               [|x9502;((let x9495 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x9496 : any) ->
                              ignore
                                (Ojs.call x9495 "push" [|(any_to_js x9496)|]))
                           x9494;
                         x9495))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        value:[ `U1 of 'TReturn  | `U2 of 'TReturn PromiseLike.t ] ->
          ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x9510 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun
          ~value:(x9506 :
                   [ `U1 of 'TReturn  | `U2 of 'TReturn PromiseLike.t ])
          ->
          Promise.t_of_js
            (fun (x9515 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x9515)
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x9510)
               "return"
               [|((match x9506 with
                   | `U1 x9507 -> Obj.magic x9507
                   | `U2 x9508 -> PromiseLike.t_to_js Obj.magic x9508))|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        e:any -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x9519 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~e:(x9518 : any) ->
          Promise.t_of_js
            (fun (x9524 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x9524)
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x9519)
               "throw" [|(any_to_js x9518)|])
    let cast_from = Obj.magic
  end
module AsyncGeneratorFunction =
  struct
    type t = [ `AsyncGeneratorFunction ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9528 : Ojs.t) -> t_of_js x9528
    and t_0_to_js : t_0 -> Ojs.t = fun (x9527 : t) -> t_to_js x9527
    type tags = [ `AsyncGeneratorFunction ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `AsyncGeneratorFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x9531 : Ojs.t) -> intf_of_js __tags_of_js x9531
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x9529 : __tags intf) -> intf_to_js __tags_to_js x9529
    let (create : 'tags this -> args:any list -> AsyncGenerator.t_0) =
      fun (x9536 : 'tags this) ->
        fun ~args:(x9533 : any list) ->
          AsyncGenerator.t_0_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x9536)
               (let x9534 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x9535 : any) ->
                     ignore (Ojs.call x9534 "push" [|(any_to_js x9535)|]))
                  x9533;
                x9534))
    let (apply : 'tags this -> args:any list -> AsyncGenerator.t_0) =
      fun (x9541 : 'tags this) ->
        fun ~args:(x9538 : any list) ->
          AsyncGenerator.t_0_of_js
            (Ojs.call (this_to_js Obj.magic x9541) "apply"
               [|Ojs.null;((let x9539 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x9540 : any) ->
                                 ignore
                                   (Ojs.call x9539 "push"
                                      [|(any_to_js x9540)|])) x9538;
                            x9539))|])
    let (get_length : 'tags this -> float) =
      fun (x9543 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9543) "length")
    let (get_name : 'tags this -> string) =
      fun (x9545 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9545) "name")
    let (get_prototype : 'tags this -> AsyncGenerator.t_0) =
      fun (x9547 : 'tags this) ->
        AsyncGenerator.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9547) "prototype")
    let cast_from = Obj.magic
  end
module AsyncGeneratorFunctionConstructor =
  struct
    type t = [ `AsyncGeneratorFunctionConstructor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9550 : Ojs.t) -> t_of_js x9550
    and t_0_to_js : t_0 -> Ojs.t = fun (x9549 : t) -> t_to_js x9549
    type tags = [ `AsyncGeneratorFunctionConstructor ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `AsyncGeneratorFunctionConstructor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x9553 : Ojs.t) -> intf_of_js __tags_of_js x9553
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x9551 : __tags intf) -> intf_to_js __tags_to_js x9551
    let (create : 'tags this -> args:string list -> AsyncGeneratorFunction.t)
      =
      fun (x9558 : 'tags this) ->
        fun ~args:(x9555 : string list) ->
          AsyncGeneratorFunction.t_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x9558)
               (let x9556 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x9557 : string) ->
                     ignore
                       (Ojs.call x9556 "push" [|(Ojs.string_to_js x9557)|]))
                  x9555;
                x9556))
    let (apply : 'tags this -> args:string list -> AsyncGeneratorFunction.t)
      =
      fun (x9563 : 'tags this) ->
        fun ~args:(x9560 : string list) ->
          AsyncGeneratorFunction.t_of_js
            (Ojs.call (this_to_js Obj.magic x9563) "apply"
               [|Ojs.null;((let x9561 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x9562 : string) ->
                                 ignore
                                   (Ojs.call x9561 "push"
                                      [|(Ojs.string_to_js x9562)|])) x9560;
                            x9561))|])
    let (get_length : 'tags this -> float) =
      fun (x9565 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9565) "length")
    let (get_name : 'tags this -> string) =
      fun (x9567 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9567) "name")
    let (get_prototype : 'tags this -> AsyncGeneratorFunction.t) =
      fun (x9569 : 'tags this) ->
        AsyncGeneratorFunction.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9569) "prototype")
    let cast_from = Obj.magic
  end
module ArrayBufferView =
  struct
    type t = [ `ArrayBufferView ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9572 : Ojs.t) -> t_of_js x9572
    and t_0_to_js : t_0 -> Ojs.t = fun (x9571 : t) -> t_to_js x9571
    type tags = [ `ArrayBufferView ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ArrayBufferView ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x9575 : Ojs.t) -> intf_of_js __tags_of_js x9575
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x9573 : __tags intf) -> intf_to_js __tags_to_js x9573
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x9577 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9577) "buffer")
    let (set_buffer : 'tags this -> ArrayBufferLike.t -> unit) =
      fun (x9579 : 'tags this) ->
        fun (x9580 : ArrayBufferLike.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9579) "buffer"
            (ArrayBufferLike.t_to_js x9580)
    let (get_byteLength : 'tags this -> float) =
      fun (x9582 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9582) "byteLength")
    let (set_byteLength : 'tags this -> float -> unit) =
      fun (x9584 : 'tags this) ->
        fun (x9585 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9584) "byteLength"
            (Ojs.float_to_js x9585)
    let (get_byteOffset : 'tags this -> float) =
      fun (x9587 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9587) "byteOffset")
    let (set_byteOffset : 'tags this -> float -> unit) =
      fun (x9589 : 'tags this) ->
        fun (x9590 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9589) "byteOffset"
            (Ojs.float_to_js x9590)
    let (create :
      buffer:ArrayBufferLike.t ->
        byteLength:float -> byteOffset:float -> unit -> t)
      =
      fun ~buffer:(x9592 : ArrayBufferLike.t) ->
        fun ~byteLength:(x9593 : float) ->
          fun ~byteOffset:(x9594 : float) ->
            fun () ->
              let x9595 = Ojs.empty_obj () in
              Ojs.set_prop_ascii x9595 "buffer"
                (ArrayBufferLike.t_to_js x9592);
              Ojs.set_prop_ascii x9595 "byteLength" (Ojs.float_to_js x9593);
              Ojs.set_prop_ascii x9595 "byteOffset" (Ojs.float_to_js x9594);
              t_of_js x9595
    let cast_from = Obj.magic
  end
module ArrayBufferTypes =
  struct
    type t = [ `ArrayBufferTypes ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9597 : Ojs.t) -> t_of_js x9597
    and t_0_to_js : t_0 -> Ojs.t = fun (x9596 : t) -> t_to_js x9596
    type tags = [ `ArrayBufferTypes ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ArrayBufferTypes ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x9600 : Ojs.t) -> intf_of_js __tags_of_js x9600
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x9598 : __tags intf) -> intf_to_js __tags_to_js x9598
    let (get_SharedArrayBuffer : 'tags this -> SharedArrayBuffer.t) =
      fun (x9602 : 'tags this) ->
        SharedArrayBuffer.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9602)
             "SharedArrayBuffer")
    let (set_SharedArrayBuffer : 'tags this -> SharedArrayBuffer.t -> unit) =
      fun (x9604 : 'tags this) ->
        fun (x9605 : SharedArrayBuffer.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9604) "SharedArrayBuffer"
            (SharedArrayBuffer.t_to_js x9605)
    let (get_ArrayBuffer : 'tags this -> ArrayBuffer.t) =
      fun (x9607 : 'tags this) ->
        ArrayBuffer.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9607) "ArrayBuffer")
    let (set_ArrayBuffer : 'tags this -> ArrayBuffer.t -> unit) =
      fun (x9609 : 'tags this) ->
        fun (x9610 : ArrayBuffer.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9609) "ArrayBuffer"
            (ArrayBuffer.t_to_js x9610)
    let (create :
      sharedArrayBuffer:SharedArrayBuffer.t ->
        arrayBuffer:ArrayBuffer.t -> unit -> t)
      =
      fun ~sharedArrayBuffer:(x9612 : SharedArrayBuffer.t) ->
        fun ~arrayBuffer:(x9613 : ArrayBuffer.t) ->
          fun () ->
            let x9614 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x9614 "SharedArrayBuffer"
              (SharedArrayBuffer.t_to_js x9612);
            Ojs.set_prop_ascii x9614 "ArrayBuffer"
              (ArrayBuffer.t_to_js x9613);
            t_of_js x9614
    let cast_from = Obj.magic
  end
module AggregateError =
  struct
    type t = [ `AggregateError  | `Error ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9616 : Ojs.t) -> t_of_js x9616
    and t_0_to_js : t_0 -> Ojs.t = fun (x9615 : t) -> t_to_js x9615
    type tags = [ `AggregateError  | `Error ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `AggregateError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x9619 : Ojs.t) -> intf_of_js __tags_of_js x9619
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x9617 : __tags intf) -> intf_to_js __tags_to_js x9617
    let (get_errors : 'tags this -> any list) =
      fun (x9621 : 'tags this) ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9621) "errors")
    let (set_errors : 'tags this -> any list -> unit) =
      fun (x9624 : 'tags this) ->
        fun (x9625 : any list) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9624) "errors"
            (Ojs.list_to_js any_to_js x9625)
    let (get_errors' : 'tags this -> any list) =
      fun (x9628 : 'tags this) ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9628) "errors")
    let (set_errors' : 'tags this -> any list -> unit) =
      fun (x9631 : 'tags this) ->
        fun (x9632 : any list) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9631) "errors"
            (Ojs.list_to_js any_to_js x9632)
    let (create : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x9635 : any Iterable.t) ->
        fun ?message:(x9636 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 (let x9637 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x9637 "push"
                       [|(Iterable.t_to_js any_to_js x9635)|]);
                  (match x9636 with
                   | Some x9638 ->
                       ignore
                         (Ojs.call x9637 "push" [|(Ojs.string_to_js x9638)|])
                   | None -> ());
                  x9637))
    let (invoke : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x9640 : any Iterable.t) ->
        fun ?message:(x9641 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 "apply"
                 [|Ojs.null;((let x9642 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x9642 "push"
                                   [|(Iterable.t_to_js any_to_js x9640)|]);
                              (match x9641 with
                               | Some x9643 ->
                                   ignore
                                     (Ojs.call x9642 "push"
                                        [|(Ojs.string_to_js x9643)|])
                               | None -> ());
                              x9642))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "AggregateError") "prototype")
    let (create' :
      errors:any Iterable.t ->
        ?message:string -> ?options:ErrorOptions.t -> unit -> t)
      =
      fun ~errors:(x9645 : any Iterable.t) ->
        fun ?message:(x9646 : string option) ->
          fun ?options:(x9647 : ErrorOptions.t option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "AggregateError")
                   (let x9648 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x9648 "push"
                         [|(Iterable.t_to_js any_to_js x9645)|]);
                    (match x9646 with
                     | Some x9650 ->
                         ignore
                           (Ojs.call x9648 "push"
                              [|(Ojs.string_to_js x9650)|])
                     | None -> ());
                    (match x9647 with
                     | Some x9649 ->
                         ignore
                           (Ojs.call x9648 "push"
                              [|(ErrorOptions.t_to_js x9649)|])
                     | None -> ());
                    x9648))
    let (invoke' :
      errors:any Iterable.t ->
        ?message:string -> ?options:ErrorOptions.t -> unit -> t)
      =
      fun ~errors:(x9652 : any Iterable.t) ->
        fun ?message:(x9653 : string option) ->
          fun ?options:(x9654 : ErrorOptions.t option) ->
            fun () ->
              t_of_js
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "AggregateError")
                   "apply"
                   [|Ojs.null;((let x9655 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x9655 "push"
                                     [|(Iterable.t_to_js any_to_js x9652)|]);
                                (match x9653 with
                                 | Some x9657 ->
                                     ignore
                                       (Ojs.call x9655 "push"
                                          [|(Ojs.string_to_js x9657)|])
                                 | None -> ());
                                (match x9654 with
                                 | Some x9656 ->
                                     ignore
                                       (Ojs.call x9655 "push"
                                          [|(ErrorOptions.t_to_js x9656)|])
                                 | None -> ());
                                x9655))|])
    let (create'' : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x9659 : any Iterable.t) ->
        fun ?message:(x9660 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 (let x9661 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x9661 "push"
                       [|(Iterable.t_to_js any_to_js x9659)|]);
                  (match x9660 with
                   | Some x9662 ->
                       ignore
                         (Ojs.call x9661 "push" [|(Ojs.string_to_js x9662)|])
                   | None -> ());
                  x9661))
    let (invoke'' : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x9664 : any Iterable.t) ->
        fun ?message:(x9665 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 "apply"
                 [|Ojs.null;((let x9666 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x9666 "push"
                                   [|(Iterable.t_to_js any_to_js x9664)|]);
                              (match x9665 with
                               | Some x9667 ->
                                   ignore
                                     (Ojs.call x9666 "push"
                                        [|(Ojs.string_to_js x9667)|])
                               | None -> ());
                              x9666))|])
    let (prototype' : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "AggregateError") "prototype")
    let (create''' : errors:any list -> errors:any list -> unit -> t) =
      fun ~errors:(x9669 : any list) ->
        fun ~errors:(x9670 : any list) ->
          fun () ->
            let x9671 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x9671 "errors"
              (Ojs.list_to_js any_to_js x9669);
            Ojs.set_prop_ascii x9671 "errors"
              (Ojs.list_to_js any_to_js x9670);
            t_of_js x9671
    let cast_from = Obj.magic
  end
module ReadonlyArray_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ReadonlyArray.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent = fun
      (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x9676 : Ojs.t) -> ReadonlyArray.t_of_js __T_of_js x9676
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t = fun (type
      __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x9674 : __T ReadonlyArray.t) ->
          ReadonlyArray.t_to_js __T_to_js x9674
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x9680 : Ojs.t) -> parent_of_js T.t_of_js x9680
    and t_to_js : t -> Ojs.t =
      fun (x9678 : T.t parent) -> parent_to_js T.t_to_js x9678
    let (at : t -> index:float -> T.t option) =
      fun (x9683 : t) ->
        fun ~index:(x9682 : float) ->
          Ojs.option_of_js T.t_of_js
            (Ojs.call (t_to_js x9683) "at" [|(Ojs.float_to_js x9682)|])
    let (flatMap :
      t ->
        callback:(this:'This ->
                    value:T.t ->
                      index:float ->
                        array:T.t list -> [ `U1 of 'U  | `U2 of 'U parent ])
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x9697 : t) ->
        fun
          ~callback:(x9685 :
                      this:'This ->
                        value:T.t ->
                          index:float ->
                            array:T.t list ->
                              [ `U1 of 'U  | `U2 of 'U parent ])
          ->
          fun ?thisArg:(x9686 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x9698 = t_to_js x9697 in
                 Ojs.call (Ojs.get_prop_ascii x9698 "flatMap") "apply"
                   [|x9698;((let x9687 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9687 "push"
                                  [|(Ojs.fun_to_js 4
                                       (fun (x9689 : Ojs.t) ->
                                          fun (x9690 : Ojs.t) ->
                                            fun (x9691 : Ojs.t) ->
                                              fun (x9692 : Ojs.t) ->
                                                match x9685
                                                        ~this:(Obj.magic
                                                                 x9689)
                                                        ~value:(T.t_of_js
                                                                  x9690)
                                                        ~index:(Ojs.float_of_js
                                                                  x9691)
                                                        ~array:(Ojs.list_of_js
                                                                  T.t_of_js
                                                                  x9692)
                                                with
                                                | `U1 x9694 ->
                                                    Obj.magic x9694
                                                | `U2 x9695 ->
                                                    parent_to_js Obj.magic
                                                      x9695))|]);
                             (match x9686 with
                              | Some x9688 ->
                                  ignore
                                    (Ojs.call x9687 "push"
                                       [|(Obj.magic x9688)|])
                              | None -> ());
                             x9687))|])
    let (flat :
      t -> this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list) =
      fun (x9704 : t) ->
        fun ~this:(x9700 : 'A) ->
          fun ?depth:(x9701 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x9706 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x9706)
                (let x9705 = t_to_js x9704 in
                 Ojs.call (Ojs.get_prop_ascii x9705 "flat") "apply"
                   [|x9705;((let x9702 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9702 "push" [|(Obj.magic x9700)|]);
                             (match x9701 with
                              | Some x9703 ->
                                  ignore
                                    (Ojs.call x9702 "push"
                                       [|(Obj.magic x9703)|])
                              | None -> ());
                             x9702))|])
    let (includes :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> bool) =
      fun (x9713 : t) ->
        fun ~searchElement:(x9709 : T.t) ->
          fun ?fromIndex:(x9710 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9714 = t_to_js x9713 in
                 Ojs.call (Ojs.get_prop_ascii x9714 "includes") "apply"
                   [|x9714;((let x9711 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9711 "push" [|(T.t_to_js x9709)|]);
                             (match x9710 with
                              | Some x9712 ->
                                  ignore
                                    (Ojs.call x9711 "push"
                                       [|(Ojs.float_to_js x9712)|])
                              | None -> ());
                             x9711))|])
    let (entries : t -> (float * T.t) IterableIterator.t) =
      fun (x9715 : t) ->
        IterableIterator.t_of_js
          (fun (x9716 : Ojs.t) ->
             let x9717 = x9716 in
             ((Ojs.float_of_js (Ojs.array_get x9717 0)),
               (T.t_of_js (Ojs.array_get x9717 1))))
          (Ojs.call (t_to_js x9715) "entries" [||])
    let (keys : t -> float IterableIterator.t) =
      fun (x9718 : t) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (t_to_js x9718) "keys" [||])
    let (values : t -> T.t IterableIterator.t) =
      fun (x9720 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x9720) "values" [||])
    let (find :
      t ->
        predicate:(this:unit ->
                     value:T.t -> index:float -> obj:T.t list -> bool)
          -> ?thisArg:any -> unit -> 'S option)
      =
      fun (x9731 : t) ->
        fun
          ~predicate:(x9722 :
                       this:unit ->
                         value:T.t -> index:float -> obj:T.t list -> bool)
          ->
          fun ?thisArg:(x9723 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x9732 = t_to_js x9731 in
                 Ojs.call (Ojs.get_prop_ascii x9732 "find") "apply"
                   [|x9732;((let x9724 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9724 "push"
                                  [|(Ojs.fun_to_js 4
                                       (fun (x9726 : Ojs.t) ->
                                          fun (x9727 : Ojs.t) ->
                                            fun (x9728 : Ojs.t) ->
                                              fun (x9729 : Ojs.t) ->
                                                Ojs.bool_to_js
                                                  (x9722
                                                     ~this:(Ojs.unit_of_js
                                                              x9726)
                                                     ~value:(T.t_of_js x9727)
                                                     ~index:(Ojs.float_of_js
                                                               x9728)
                                                     ~obj:(Ojs.list_of_js
                                                             T.t_of_js x9729))))|]);
                             (match x9723 with
                              | Some x9725 ->
                                  ignore
                                    (Ojs.call x9724 "push"
                                       [|(any_to_js x9725)|])
                              | None -> ());
                             x9724))|])
    let (find' :
      t ->
        predicate:(value:T.t -> index:float -> obj:T.t list -> unknown) ->
          ?thisArg:any -> unit -> T.t option)
      =
      fun (x9742 : t) ->
        fun
          ~predicate:(x9734 :
                       value:T.t -> index:float -> obj:T.t list -> unknown)
          ->
          fun ?thisArg:(x9735 : any option) ->
            fun () ->
              Ojs.option_of_js T.t_of_js
                (let x9743 = t_to_js x9742 in
                 Ojs.call (Ojs.get_prop_ascii x9743 "find") "apply"
                   [|x9743;((let x9736 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9736 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9738 : Ojs.t) ->
                                          fun (x9739 : Ojs.t) ->
                                            fun (x9740 : Ojs.t) ->
                                              unknown_to_js
                                                (x9734
                                                   ~value:(T.t_of_js x9738)
                                                   ~index:(Ojs.float_of_js
                                                             x9739)
                                                   ~obj:(Ojs.list_of_js
                                                           T.t_of_js x9740))))|]);
                             (match x9735 with
                              | Some x9737 ->
                                  ignore
                                    (Ojs.call x9736 "push"
                                       [|(any_to_js x9737)|])
                              | None -> ());
                             x9736))|])
    let (findIndex :
      t ->
        predicate:(value:T.t -> index:float -> obj:T.t list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x9753 : t) ->
        fun
          ~predicate:(x9745 :
                       value:T.t -> index:float -> obj:T.t list -> unknown)
          ->
          fun ?thisArg:(x9746 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x9754 = t_to_js x9753 in
                 Ojs.call (Ojs.get_prop_ascii x9754 "findIndex") "apply"
                   [|x9754;((let x9747 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9747 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9749 : Ojs.t) ->
                                          fun (x9750 : Ojs.t) ->
                                            fun (x9751 : Ojs.t) ->
                                              unknown_to_js
                                                (x9745
                                                   ~value:(T.t_of_js x9749)
                                                   ~index:(Ojs.float_of_js
                                                             x9750)
                                                   ~obj:(Ojs.list_of_js
                                                           T.t_of_js x9751))))|]);
                             (match x9746 with
                              | Some x9748 ->
                                  ignore
                                    (Ojs.call x9747 "push"
                                       [|(any_to_js x9748)|])
                              | None -> ());
                             x9747))|])
    let (get_length : t -> float) =
      fun (x9755 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x9755) "length")
    let (toString : t -> string) =
      fun (x9756 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x9756) "toString" [||])
    let (toLocaleString : t -> string) =
      fun (x9757 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x9757) "toLocaleString" [||])
    let (concat : t -> items:T.t ConcatArray.t list -> T.t list) =
      fun (x9762 : t) ->
        fun ~items:(x9758 : T.t ConcatArray.t list) ->
          Ojs.list_of_js T.t_of_js
            (let x9763 = t_to_js x9762 in
             Ojs.call (Ojs.get_prop_ascii x9763 "concat") "apply"
               [|x9763;((let x9759 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x9760 : T.t ConcatArray.t) ->
                              ignore
                                (Ojs.call x9759 "push"
                                   [|(ConcatArray.t_to_js T.t_to_js x9760)|]))
                           x9758;
                         x9759))|])
    let (concat' :
      t -> items:[ `U1 of T.t  | `U2 of T.t ConcatArray.t ] list -> T.t list)
      =
      fun (x9771 : t) ->
        fun ~items:(x9765 : [ `U1 of T.t  | `U2 of T.t ConcatArray.t ] list)
          ->
          Ojs.list_of_js T.t_of_js
            (let x9772 = t_to_js x9771 in
             Ojs.call (Ojs.get_prop_ascii x9772 "concat") "apply"
               [|x9772;((let x9766 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun
                              (x9767 :
                                [ `U1 of T.t  | `U2 of T.t ConcatArray.t ])
                              ->
                              ignore
                                (Ojs.call x9766 "push"
                                   [|((match x9767 with
                                       | `U1 x9768 -> T.t_to_js x9768
                                       | `U2 x9769 ->
                                           ConcatArray.t_to_js T.t_to_js
                                             x9769))|])) x9765;
                         x9766))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x9777 : t) ->
        fun ?separator:(x9774 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x9778 = t_to_js x9777 in
               Ojs.call (Ojs.get_prop_ascii x9778 "join") "apply"
                 [|x9778;((let x9775 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9774 with
                            | Some x9776 ->
                                ignore
                                  (Ojs.call x9775 "push"
                                     [|(Ojs.string_to_js x9776)|])
                            | None -> ());
                           x9775))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> T.t list) =
      fun (x9784 : t) ->
        fun ?start:(x9779 : float option) ->
          fun ?end_:(x9780 : float option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x9785 = t_to_js x9784 in
                 Ojs.call (Ojs.get_prop_ascii x9785 "slice") "apply"
                   [|x9785;((let x9781 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x9779 with
                              | Some x9783 ->
                                  ignore
                                    (Ojs.call x9781 "push"
                                       [|(Ojs.float_to_js x9783)|])
                              | None -> ());
                             (match x9780 with
                              | Some x9782 ->
                                  ignore
                                    (Ojs.call x9781 "push"
                                       [|(Ojs.float_to_js x9782)|])
                              | None -> ());
                             x9781))|])
    let (indexOf :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> float) =
      fun (x9791 : t) ->
        fun ~searchElement:(x9787 : T.t) ->
          fun ?fromIndex:(x9788 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9792 = t_to_js x9791 in
                 Ojs.call (Ojs.get_prop_ascii x9792 "indexOf") "apply"
                   [|x9792;((let x9789 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9789 "push" [|(T.t_to_js x9787)|]);
                             (match x9788 with
                              | Some x9790 ->
                                  ignore
                                    (Ojs.call x9789 "push"
                                       [|(Ojs.float_to_js x9790)|])
                              | None -> ());
                             x9789))|])
    let (lastIndexOf :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> float) =
      fun (x9797 : t) ->
        fun ~searchElement:(x9793 : T.t) ->
          fun ?fromIndex:(x9794 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9798 = t_to_js x9797 in
                 Ojs.call (Ojs.get_prop_ascii x9798 "lastIndexOf") "apply"
                   [|x9798;((let x9795 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9795 "push" [|(T.t_to_js x9793)|]);
                             (match x9794 with
                              | Some x9796 ->
                                  ignore
                                    (Ojs.call x9795 "push"
                                       [|(Ojs.float_to_js x9796)|])
                              | None -> ());
                             x9795))|])
    let (every :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x9807 : t) ->
        fun
          ~predicate:(x9799 :
                       value:T.t -> index:float -> array:T.t list -> bool)
          ->
          fun ?thisArg:(x9800 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9808 = t_to_js x9807 in
                 Ojs.call (Ojs.get_prop_ascii x9808 "every") "apply"
                   [|x9808;((let x9801 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9801 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9803 : Ojs.t) ->
                                          fun (x9804 : Ojs.t) ->
                                            fun (x9805 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9799
                                                   ~value:(T.t_of_js x9803)
                                                   ~index:(Ojs.float_of_js
                                                             x9804)
                                                   ~array:(Ojs.list_of_js
                                                             T.t_of_js x9805))))|]);
                             (match x9800 with
                              | Some x9802 ->
                                  ignore
                                    (Ojs.call x9801 "push"
                                       [|(any_to_js x9802)|])
                              | None -> ());
                             x9801))|])
    let (every' :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x9817 : t) ->
        fun
          ~predicate:(x9809 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x9810 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9818 = t_to_js x9817 in
                 Ojs.call (Ojs.get_prop_ascii x9818 "every") "apply"
                   [|x9818;((let x9811 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9811 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9813 : Ojs.t) ->
                                          fun (x9814 : Ojs.t) ->
                                            fun (x9815 : Ojs.t) ->
                                              unknown_to_js
                                                (x9809
                                                   ~value:(T.t_of_js x9813)
                                                   ~index:(Ojs.float_of_js
                                                             x9814)
                                                   ~array:(Ojs.list_of_js
                                                             T.t_of_js x9815))))|]);
                             (match x9810 with
                              | Some x9812 ->
                                  ignore
                                    (Ojs.call x9811 "push"
                                       [|(any_to_js x9812)|])
                              | None -> ());
                             x9811))|])
    let (some :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x9827 : t) ->
        fun
          ~predicate:(x9819 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x9820 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9828 = t_to_js x9827 in
                 Ojs.call (Ojs.get_prop_ascii x9828 "some") "apply"
                   [|x9828;((let x9821 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9821 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9823 : Ojs.t) ->
                                          fun (x9824 : Ojs.t) ->
                                            fun (x9825 : Ojs.t) ->
                                              unknown_to_js
                                                (x9819
                                                   ~value:(T.t_of_js x9823)
                                                   ~index:(Ojs.float_of_js
                                                             x9824)
                                                   ~array:(Ojs.list_of_js
                                                             T.t_of_js x9825))))|]);
                             (match x9820 with
                              | Some x9822 ->
                                  ignore
                                    (Ojs.call x9821 "push"
                                       [|(any_to_js x9822)|])
                              | None -> ());
                             x9821))|])
    let (forEach :
      t ->
        callbackfn:(value:T.t -> index:float -> array:T.t list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x9837 : t) ->
        fun
          ~callbackfn:(x9829 :
                        value:T.t -> index:float -> array:T.t list -> unit)
          ->
          fun ?thisArg:(x9830 : any option) ->
            fun () ->
              ignore
                (let x9838 = t_to_js x9837 in
                 Ojs.call (Ojs.get_prop_ascii x9838 "forEach") "apply"
                   [|x9838;((let x9831 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9831 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9833 : Ojs.t) ->
                                          fun (x9834 : Ojs.t) ->
                                            fun (x9835 : Ojs.t) ->
                                              x9829 ~value:(T.t_of_js x9833)
                                                ~index:(Ojs.float_of_js x9834)
                                                ~array:(Ojs.list_of_js
                                                          T.t_of_js x9835)))|]);
                             (match x9830 with
                              | Some x9832 ->
                                  ignore
                                    (Ojs.call x9831 "push"
                                       [|(any_to_js x9832)|])
                              | None -> ());
                             x9831))|])
    let (map :
      t ->
        callbackfn:(value:T.t -> index:float -> array:T.t list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x9847 : t) ->
        fun
          ~callbackfn:(x9839 :
                        value:T.t -> index:float -> array:T.t list -> 'U)
          ->
          fun ?thisArg:(x9840 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x9848 = t_to_js x9847 in
                 Ojs.call (Ojs.get_prop_ascii x9848 "map") "apply"
                   [|x9848;((let x9841 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9841 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9843 : Ojs.t) ->
                                          fun (x9844 : Ojs.t) ->
                                            fun (x9845 : Ojs.t) ->
                                              Obj.magic
                                                (x9839
                                                   ~value:(T.t_of_js x9843)
                                                   ~index:(Ojs.float_of_js
                                                             x9844)
                                                   ~array:(Ojs.list_of_js
                                                             T.t_of_js x9845))))|]);
                             (match x9840 with
                              | Some x9842 ->
                                  ignore
                                    (Ojs.call x9841 "push"
                                       [|(any_to_js x9842)|])
                              | None -> ());
                             x9841))|])
    let (filter :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x9858 : t) ->
        fun
          ~predicate:(x9850 :
                       value:T.t -> index:float -> array:T.t list -> bool)
          ->
          fun ?thisArg:(x9851 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x9859 = t_to_js x9858 in
                 Ojs.call (Ojs.get_prop_ascii x9859 "filter") "apply"
                   [|x9859;((let x9852 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9852 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9854 : Ojs.t) ->
                                          fun (x9855 : Ojs.t) ->
                                            fun (x9856 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9850
                                                   ~value:(T.t_of_js x9854)
                                                   ~index:(Ojs.float_of_js
                                                             x9855)
                                                   ~array:(Ojs.list_of_js
                                                             T.t_of_js x9856))))|]);
                             (match x9851 with
                              | Some x9853 ->
                                  ignore
                                    (Ojs.call x9852 "push"
                                       [|(any_to_js x9853)|])
                              | None -> ());
                             x9852))|])
    let (filter' :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> T.t list)
      =
      fun (x9869 : t) ->
        fun
          ~predicate:(x9861 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x9862 : any option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x9870 = t_to_js x9869 in
                 Ojs.call (Ojs.get_prop_ascii x9870 "filter") "apply"
                   [|x9870;((let x9863 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9863 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9865 : Ojs.t) ->
                                          fun (x9866 : Ojs.t) ->
                                            fun (x9867 : Ojs.t) ->
                                              unknown_to_js
                                                (x9861
                                                   ~value:(T.t_of_js x9865)
                                                   ~index:(Ojs.float_of_js
                                                             x9866)
                                                   ~array:(Ojs.list_of_js
                                                             T.t_of_js x9867))))|]);
                             (match x9862 with
                              | Some x9864 ->
                                  ignore
                                    (Ojs.call x9863 "push"
                                       [|(any_to_js x9864)|])
                              | None -> ());
                             x9863))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> T.t)
      =
      fun (x9878 : t) ->
        fun
          ~callbackfn:(x9872 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          T.t_of_js
            (Ojs.call (t_to_js x9878) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x9873 : Ojs.t) ->
                       fun (x9874 : Ojs.t) ->
                         fun (x9875 : Ojs.t) ->
                           fun (x9876 : Ojs.t) ->
                             T.t_to_js
                               (x9872 ~previousValue:(T.t_of_js x9873)
                                  ~currentValue:(T.t_of_js x9874)
                                  ~currentIndex:(Ojs.float_of_js x9875)
                                  ~array:(Ojs.list_of_js T.t_of_js x9876))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> initialValue:T.t -> T.t)
      =
      fun (x9886 : t) ->
        fun
          ~callbackfn:(x9879 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          fun ~initialValue:(x9885 : T.t) ->
            T.t_of_js
              (Ojs.call (t_to_js x9886) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x9880 : Ojs.t) ->
                         fun (x9881 : Ojs.t) ->
                           fun (x9882 : Ojs.t) ->
                             fun (x9883 : Ojs.t) ->
                               T.t_to_js
                                 (x9879 ~previousValue:(T.t_of_js x9880)
                                    ~currentValue:(T.t_of_js x9881)
                                    ~currentIndex:(Ojs.float_of_js x9882)
                                    ~array:(Ojs.list_of_js T.t_of_js x9883))));(
                   T.t_to_js x9885)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x9894 : t) ->
        fun
          ~callbackfn:(x9887 :
                        previousValue:'U ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> 'U)
          ->
          fun ~initialValue:(x9893 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x9894) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x9888 : Ojs.t) ->
                         fun (x9889 : Ojs.t) ->
                           fun (x9890 : Ojs.t) ->
                             fun (x9891 : Ojs.t) ->
                               Obj.magic
                                 (x9887 ~previousValue:(Obj.magic x9888)
                                    ~currentValue:(T.t_of_js x9889)
                                    ~currentIndex:(Ojs.float_of_js x9890)
                                    ~array:(Ojs.list_of_js T.t_of_js x9891))));(
                   Obj.magic x9893)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> T.t)
      =
      fun (x9901 : t) ->
        fun
          ~callbackfn:(x9895 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          T.t_of_js
            (Ojs.call (t_to_js x9901) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x9896 : Ojs.t) ->
                       fun (x9897 : Ojs.t) ->
                         fun (x9898 : Ojs.t) ->
                           fun (x9899 : Ojs.t) ->
                             T.t_to_js
                               (x9895 ~previousValue:(T.t_of_js x9896)
                                  ~currentValue:(T.t_of_js x9897)
                                  ~currentIndex:(Ojs.float_of_js x9898)
                                  ~array:(Ojs.list_of_js T.t_of_js x9899))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> initialValue:T.t -> T.t)
      =
      fun (x9909 : t) ->
        fun
          ~callbackfn:(x9902 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          fun ~initialValue:(x9908 : T.t) ->
            T.t_of_js
              (Ojs.call (t_to_js x9909) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x9903 : Ojs.t) ->
                         fun (x9904 : Ojs.t) ->
                           fun (x9905 : Ojs.t) ->
                             fun (x9906 : Ojs.t) ->
                               T.t_to_js
                                 (x9902 ~previousValue:(T.t_of_js x9903)
                                    ~currentValue:(T.t_of_js x9904)
                                    ~currentIndex:(Ojs.float_of_js x9905)
                                    ~array:(Ojs.list_of_js T.t_of_js x9906))));(
                   T.t_to_js x9908)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x9917 : t) ->
        fun
          ~callbackfn:(x9910 :
                        previousValue:'U ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> 'U)
          ->
          fun ~initialValue:(x9916 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x9917) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x9911 : Ojs.t) ->
                         fun (x9912 : Ojs.t) ->
                           fun (x9913 : Ojs.t) ->
                             fun (x9914 : Ojs.t) ->
                               Obj.magic
                                 (x9910 ~previousValue:(Obj.magic x9911)
                                    ~currentValue:(T.t_of_js x9912)
                                    ~currentIndex:(Ojs.float_of_js x9913)
                                    ~array:(Ojs.list_of_js T.t_of_js x9914))));(
                   Obj.magic x9916)|])
    let (get : t -> float -> T.t) =
      fun (x9918 : t) ->
        fun (x9919 : float) ->
          T.t_of_js (Ojs.get_prop (t_to_js x9918) (Ojs.float_to_js x9919))
  end
module ConcatArray_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ConcatArray.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent = fun
      (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x9922 : Ojs.t) -> ConcatArray.t_of_js __T_of_js x9922
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t = fun (type
      __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x9920 : __T ConcatArray.t) ->
          ConcatArray.t_to_js __T_to_js x9920
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x9926 : Ojs.t) -> parent_of_js T.t_of_js x9926
    and t_to_js : t -> Ojs.t =
      fun (x9924 : T.t parent) -> parent_to_js T.t_to_js x9924
    let (get_length : t -> float) =
      fun (x9928 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x9928) "length")
    let (get : t -> float -> T.t) =
      fun (x9929 : t) ->
        fun (x9930 : float) ->
          T.t_of_js (Ojs.get_prop (t_to_js x9929) (Ojs.float_to_js x9930))
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x9934 : t) ->
        fun ?separator:(x9931 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x9935 = t_to_js x9934 in
               Ojs.call (Ojs.get_prop_ascii x9935 "join") "apply"
                 [|x9935;((let x9932 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9931 with
                            | Some x9933 ->
                                ignore
                                  (Ojs.call x9932 "push"
                                     [|(Ojs.string_to_js x9933)|])
                            | None -> ());
                           x9932))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> T.t list) =
      fun (x9941 : t) ->
        fun ?start:(x9936 : float option) ->
          fun ?end_:(x9937 : float option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x9942 = t_to_js x9941 in
                 Ojs.call (Ojs.get_prop_ascii x9942 "slice") "apply"
                   [|x9942;((let x9938 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x9936 with
                              | Some x9940 ->
                                  ignore
                                    (Ojs.call x9938 "push"
                                       [|(Ojs.float_to_js x9940)|])
                              | None -> ());
                             (match x9937 with
                              | Some x9939 ->
                                  ignore
                                    (Ojs.call x9938 "push"
                                       [|(Ojs.float_to_js x9939)|])
                              | None -> ());
                             x9938))|])
  end
module Array_Make(T:Ojs.T) =
  struct
    module AnonymousInterface0 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x9945 : Ojs.t) -> x9945
        and t_to_js : t -> Ojs.t = fun (x9944 : Ojs.t) -> x9944
        let (get_copyWithin : t -> bool) =
          fun (x9946 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x9946) "copyWithin")
        let (set_copyWithin : t -> bool -> unit) =
          fun (x9947 : t) ->
            fun (x9948 : bool) ->
              Ojs.set_prop_ascii (t_to_js x9947) "copyWithin"
                (Ojs.bool_to_js x9948)
        let (get_entries : t -> bool) =
          fun (x9949 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x9949) "entries")
        let (set_entries : t -> bool -> unit) =
          fun (x9950 : t) ->
            fun (x9951 : bool) ->
              Ojs.set_prop_ascii (t_to_js x9950) "entries"
                (Ojs.bool_to_js x9951)
        let (get_fill : t -> bool) =
          fun (x9952 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x9952) "fill")
        let (set_fill : t -> bool -> unit) =
          fun (x9953 : t) ->
            fun (x9954 : bool) ->
              Ojs.set_prop_ascii (t_to_js x9953) "fill"
                (Ojs.bool_to_js x9954)
        let (get_find : t -> bool) =
          fun (x9955 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x9955) "find")
        let (set_find : t -> bool -> unit) =
          fun (x9956 : t) ->
            fun (x9957 : bool) ->
              Ojs.set_prop_ascii (t_to_js x9956) "find"
                (Ojs.bool_to_js x9957)
        let (get_findIndex : t -> bool) =
          fun (x9958 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x9958) "findIndex")
        let (set_findIndex : t -> bool -> unit) =
          fun (x9959 : t) ->
            fun (x9960 : bool) ->
              Ojs.set_prop_ascii (t_to_js x9959) "findIndex"
                (Ojs.bool_to_js x9960)
        let (get_keys : t -> bool) =
          fun (x9961 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x9961) "keys")
        let (set_keys : t -> bool -> unit) =
          fun (x9962 : t) ->
            fun (x9963 : bool) ->
              Ojs.set_prop_ascii (t_to_js x9962) "keys"
                (Ojs.bool_to_js x9963)
        let (get_values : t -> bool) =
          fun (x9964 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x9964) "values")
        let (set_values : t -> bool -> unit) =
          fun (x9965 : t) ->
            fun (x9966 : bool) ->
              Ojs.set_prop_ascii (t_to_js x9965) "values"
                (Ojs.bool_to_js x9966)
        let (create :
          copyWithin:bool ->
            entries:bool ->
              fill:bool ->
                find:bool ->
                  findIndex:bool -> keys:bool -> values:bool -> unit -> t)
          =
          fun ~copyWithin:(x9967 : bool) ->
            fun ~entries:(x9968 : bool) ->
              fun ~fill:(x9969 : bool) ->
                fun ~find:(x9970 : bool) ->
                  fun ~findIndex:(x9971 : bool) ->
                    fun ~keys:(x9972 : bool) ->
                      fun ~values:(x9973 : bool) ->
                        fun () ->
                          let x9974 = Ojs.empty_obj () in
                          Ojs.set_prop_ascii x9974 "copyWithin"
                            (Ojs.bool_to_js x9967);
                          Ojs.set_prop_ascii x9974 "entries"
                            (Ojs.bool_to_js x9968);
                          Ojs.set_prop_ascii x9974 "fill"
                            (Ojs.bool_to_js x9969);
                          Ojs.set_prop_ascii x9974 "find"
                            (Ojs.bool_to_js x9970);
                          Ojs.set_prop_ascii x9974 "findIndex"
                            (Ojs.bool_to_js x9971);
                          Ojs.set_prop_ascii x9974 "keys"
                            (Ojs.bool_to_js x9972);
                          Ojs.set_prop_ascii x9974 "values"
                            (Ojs.bool_to_js x9973);
                          t_of_js x9974
      end
    type 'T parent = 'T Array.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent = fun
      (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x9977 : Ojs.t) -> Array.t_of_js __T_of_js x9977
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t = fun (type
      __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x9975 : __T Array.t) -> Array.t_to_js __T_to_js x9975
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x9981 : Ojs.t) -> parent_of_js T.t_of_js x9981
    and t_to_js : t -> Ojs.t =
      fun (x9979 : T.t parent) -> parent_to_js T.t_to_js x9979
    let (at : t -> index:float -> T.t option) =
      fun (x9984 : t) ->
        fun ~index:(x9983 : float) ->
          Ojs.option_of_js T.t_of_js
            (Ojs.call (t_to_js x9984) "at" [|(Ojs.float_to_js x9983)|])
    let (flatMap :
      t ->
        callback:(this:'This ->
                    value:T.t ->
                      index:float ->
                        array:T.t list ->
                          [ `U1 of 'U  | `U2 of 'U ReadonlyArray.t ])
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x9998 : t) ->
        fun
          ~callback:(x9986 :
                      this:'This ->
                        value:T.t ->
                          index:float ->
                            array:T.t list ->
                              [ `U1 of 'U  | `U2 of 'U ReadonlyArray.t ])
          ->
          fun ?thisArg:(x9987 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x9999 = t_to_js x9998 in
                 Ojs.call (Ojs.get_prop_ascii x9999 "flatMap") "apply"
                   [|x9999;((let x9988 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9988 "push"
                                  [|(Ojs.fun_to_js 4
                                       (fun (x9990 : Ojs.t) ->
                                          fun (x9991 : Ojs.t) ->
                                            fun (x9992 : Ojs.t) ->
                                              fun (x9993 : Ojs.t) ->
                                                match x9986
                                                        ~this:(Obj.magic
                                                                 x9990)
                                                        ~value:(T.t_of_js
                                                                  x9991)
                                                        ~index:(Ojs.float_of_js
                                                                  x9992)
                                                        ~array:(Ojs.list_of_js
                                                                  T.t_of_js
                                                                  x9993)
                                                with
                                                | `U1 x9995 ->
                                                    Obj.magic x9995
                                                | `U2 x9996 ->
                                                    ReadonlyArray.t_to_js
                                                      Obj.magic x9996))|]);
                             (match x9987 with
                              | Some x9989 ->
                                  ignore
                                    (Ojs.call x9988 "push"
                                       [|(Obj.magic x9989)|])
                              | None -> ());
                             x9988))|])
    let (flat :
      t -> this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list) =
      fun (x10005 : t) ->
        fun ~this:(x10001 : 'A) ->
          fun ?depth:(x10002 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x10007 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x10007)
                (let x10006 = t_to_js x10005 in
                 Ojs.call (Ojs.get_prop_ascii x10006 "flat") "apply"
                   [|x10006;((let x10003 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10003 "push"
                                   [|(Obj.magic x10001)|]);
                              (match x10002 with
                               | Some x10004 ->
                                   ignore
                                     (Ojs.call x10003 "push"
                                        [|(Obj.magic x10004)|])
                               | None -> ());
                              x10003))|])
    let (includes :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> bool) =
      fun (x10014 : t) ->
        fun ~searchElement:(x10010 : T.t) ->
          fun ?fromIndex:(x10011 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x10015 = t_to_js x10014 in
                 Ojs.call (Ojs.get_prop_ascii x10015 "includes") "apply"
                   [|x10015;((let x10012 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10012 "push"
                                   [|(T.t_to_js x10010)|]);
                              (match x10011 with
                               | Some x10013 ->
                                   ignore
                                     (Ojs.call x10012 "push"
                                        [|(Ojs.float_to_js x10013)|])
                               | None -> ());
                              x10012))|])
    let (entries : t -> (float * T.t) IterableIterator.t) =
      fun (x10016 : t) ->
        IterableIterator.t_of_js
          (fun (x10017 : Ojs.t) ->
             let x10018 = x10017 in
             ((Ojs.float_of_js (Ojs.array_get x10018 0)),
               (T.t_of_js (Ojs.array_get x10018 1))))
          (Ojs.call (t_to_js x10016) "entries" [||])
    let (keys : t -> float IterableIterator.t) =
      fun (x10019 : t) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (t_to_js x10019) "keys" [||])
    let (values : t -> T.t IterableIterator.t) =
      fun (x10021 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x10021) "values" [||])
    let (find :
      t ->
        predicate:(this:unit ->
                     value:T.t -> index:float -> obj:T.t list -> bool)
          -> ?thisArg:any -> unit -> 'S option)
      =
      fun (x10032 : t) ->
        fun
          ~predicate:(x10023 :
                       this:unit ->
                         value:T.t -> index:float -> obj:T.t list -> bool)
          ->
          fun ?thisArg:(x10024 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x10033 = t_to_js x10032 in
                 Ojs.call (Ojs.get_prop_ascii x10033 "find") "apply"
                   [|x10033;((let x10025 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10025 "push"
                                   [|(Ojs.fun_to_js 4
                                        (fun (x10027 : Ojs.t) ->
                                           fun (x10028 : Ojs.t) ->
                                             fun (x10029 : Ojs.t) ->
                                               fun (x10030 : Ojs.t) ->
                                                 Ojs.bool_to_js
                                                   (x10023
                                                      ~this:(Ojs.unit_of_js
                                                               x10027)
                                                      ~value:(T.t_of_js
                                                                x10028)
                                                      ~index:(Ojs.float_of_js
                                                                x10029)
                                                      ~obj:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10030))))|]);
                              (match x10024 with
                               | Some x10026 ->
                                   ignore
                                     (Ojs.call x10025 "push"
                                        [|(any_to_js x10026)|])
                               | None -> ());
                              x10025))|])
    let (find' :
      t ->
        predicate:(value:T.t -> index:float -> obj:T.t list -> unknown) ->
          ?thisArg:any -> unit -> T.t option)
      =
      fun (x10043 : t) ->
        fun
          ~predicate:(x10035 :
                       value:T.t -> index:float -> obj:T.t list -> unknown)
          ->
          fun ?thisArg:(x10036 : any option) ->
            fun () ->
              Ojs.option_of_js T.t_of_js
                (let x10044 = t_to_js x10043 in
                 Ojs.call (Ojs.get_prop_ascii x10044 "find") "apply"
                   [|x10044;((let x10037 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10037 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10039 : Ojs.t) ->
                                           fun (x10040 : Ojs.t) ->
                                             fun (x10041 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10035
                                                    ~value:(T.t_of_js x10039)
                                                    ~index:(Ojs.float_of_js
                                                              x10040)
                                                    ~obj:(Ojs.list_of_js
                                                            T.t_of_js x10041))))|]);
                              (match x10036 with
                               | Some x10038 ->
                                   ignore
                                     (Ojs.call x10037 "push"
                                        [|(any_to_js x10038)|])
                               | None -> ());
                              x10037))|])
    let (findIndex :
      t ->
        predicate:(value:T.t -> index:float -> obj:T.t list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x10054 : t) ->
        fun
          ~predicate:(x10046 :
                       value:T.t -> index:float -> obj:T.t list -> unknown)
          ->
          fun ?thisArg:(x10047 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x10055 = t_to_js x10054 in
                 Ojs.call (Ojs.get_prop_ascii x10055 "findIndex") "apply"
                   [|x10055;((let x10048 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10048 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10050 : Ojs.t) ->
                                           fun (x10051 : Ojs.t) ->
                                             fun (x10052 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10046
                                                    ~value:(T.t_of_js x10050)
                                                    ~index:(Ojs.float_of_js
                                                              x10051)
                                                    ~obj:(Ojs.list_of_js
                                                            T.t_of_js x10052))))|]);
                              (match x10047 with
                               | Some x10049 ->
                                   ignore
                                     (Ojs.call x10048 "push"
                                        [|(any_to_js x10049)|])
                               | None -> ());
                              x10048))|])
    let (fill : t -> value:T.t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x10062 : t) ->
        fun ~value:(x10056 : T.t) ->
          fun ?start:(x10057 : float option) ->
            fun ?end_:(x10058 : float option) ->
              fun () ->
                t_of_js
                  (let x10063 = t_to_js x10062 in
                   Ojs.call (Ojs.get_prop_ascii x10063 "fill") "apply"
                     [|x10063;((let x10059 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x10059 "push"
                                     [|(T.t_to_js x10056)|]);
                                (match x10057 with
                                 | Some x10061 ->
                                     ignore
                                       (Ojs.call x10059 "push"
                                          [|(Ojs.float_to_js x10061)|])
                                 | None -> ());
                                (match x10058 with
                                 | Some x10060 ->
                                     ignore
                                       (Ojs.call x10059 "push"
                                          [|(Ojs.float_to_js x10060)|])
                                 | None -> ());
                                x10059))|])
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x10069 : t) ->
        fun ~target:(x10064 : float) ->
          fun ~start:(x10065 : float) ->
            fun ?end_:(x10066 : float option) ->
              fun () ->
                t_of_js
                  (let x10070 = t_to_js x10069 in
                   Ojs.call (Ojs.get_prop_ascii x10070 "copyWithin") "apply"
                     [|x10070;((let x10067 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x10067 "push"
                                     [|(Ojs.float_to_js x10064)|]);
                                ignore
                                  (Ojs.call x10067 "push"
                                     [|(Ojs.float_to_js x10065)|]);
                                (match x10066 with
                                 | Some x10068 ->
                                     ignore
                                       (Ojs.call x10067 "push"
                                          [|(Ojs.float_to_js x10068)|])
                                 | None -> ());
                                x10067))|])
    let (get_length : t -> float) =
      fun (x10071 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10071) "length")
    let (set_length : t -> float -> unit) =
      fun (x10072 : t) ->
        fun (x10073 : float) ->
          Ojs.set_prop_ascii (t_to_js x10072) "length"
            (Ojs.float_to_js x10073)
    let (toString : t -> string) =
      fun (x10074 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x10074) "toString" [||])
    let (toLocaleString : t -> string) =
      fun (x10075 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x10075) "toLocaleString" [||])
    let (pop : t -> T.t option) =
      fun (x10076 : t) ->
        Ojs.option_of_js T.t_of_js (Ojs.call (t_to_js x10076) "pop" [||])
    let (push : t -> items:T.t list -> float) =
      fun (x10081 : t) ->
        fun ~items:(x10078 : T.t list) ->
          Ojs.float_of_js
            (let x10082 = t_to_js x10081 in
             Ojs.call (Ojs.get_prop_ascii x10082 "push") "apply"
               [|x10082;((let x10079 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10080 : T.t) ->
                               ignore
                                 (Ojs.call x10079 "push"
                                    [|(T.t_to_js x10080)|])) x10078;
                          x10079))|])
    let (concat : t -> items:T.t ConcatArray.t list -> T.t list) =
      fun (x10087 : t) ->
        fun ~items:(x10083 : T.t ConcatArray.t list) ->
          Ojs.list_of_js T.t_of_js
            (let x10088 = t_to_js x10087 in
             Ojs.call (Ojs.get_prop_ascii x10088 "concat") "apply"
               [|x10088;((let x10084 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10085 : T.t ConcatArray.t) ->
                               ignore
                                 (Ojs.call x10084 "push"
                                    [|(ConcatArray.t_to_js T.t_to_js x10085)|]))
                            x10083;
                          x10084))|])
    let (concat' :
      t -> items:[ `U1 of T.t  | `U2 of T.t ConcatArray.t ] list -> T.t list)
      =
      fun (x10096 : t) ->
        fun ~items:(x10090 : [ `U1 of T.t  | `U2 of T.t ConcatArray.t ] list)
          ->
          Ojs.list_of_js T.t_of_js
            (let x10097 = t_to_js x10096 in
             Ojs.call (Ojs.get_prop_ascii x10097 "concat") "apply"
               [|x10097;((let x10091 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun
                               (x10092 :
                                 [ `U1 of T.t  | `U2 of T.t ConcatArray.t ])
                               ->
                               ignore
                                 (Ojs.call x10091 "push"
                                    [|((match x10092 with
                                        | `U1 x10093 -> T.t_to_js x10093
                                        | `U2 x10094 ->
                                            ConcatArray.t_to_js T.t_to_js
                                              x10094))|])) x10090;
                          x10091))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x10102 : t) ->
        fun ?separator:(x10099 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x10103 = t_to_js x10102 in
               Ojs.call (Ojs.get_prop_ascii x10103 "join") "apply"
                 [|x10103;((let x10100 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10099 with
                             | Some x10101 ->
                                 ignore
                                   (Ojs.call x10100 "push"
                                      [|(Ojs.string_to_js x10101)|])
                             | None -> ());
                            x10100))|])
    let (reverse : t -> T.t list) =
      fun (x10104 : t) ->
        Ojs.list_of_js T.t_of_js (Ojs.call (t_to_js x10104) "reverse" [||])
    let (shift : t -> T.t option) =
      fun (x10106 : t) ->
        Ojs.option_of_js T.t_of_js (Ojs.call (t_to_js x10106) "shift" [||])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> T.t list) =
      fun (x10113 : t) ->
        fun ?start:(x10108 : float option) ->
          fun ?end_:(x10109 : float option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x10114 = t_to_js x10113 in
                 Ojs.call (Ojs.get_prop_ascii x10114 "slice") "apply"
                   [|x10114;((let x10110 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x10108 with
                               | Some x10112 ->
                                   ignore
                                     (Ojs.call x10110 "push"
                                        [|(Ojs.float_to_js x10112)|])
                               | None -> ());
                              (match x10109 with
                               | Some x10111 ->
                                   ignore
                                     (Ojs.call x10110 "push"
                                        [|(Ojs.float_to_js x10111)|])
                               | None -> ());
                              x10110))|])
    let (sort : t -> ?compareFn:(a:T.t -> b:T.t -> float) -> unit -> t) =
      fun (x10121 : t) ->
        fun ?compareFn:(x10116 : (a:T.t -> b:T.t -> float) option) ->
          fun () ->
            t_of_js
              (let x10122 = t_to_js x10121 in
               Ojs.call (Ojs.get_prop_ascii x10122 "sort") "apply"
                 [|x10122;((let x10117 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10116 with
                             | Some x10118 ->
                                 ignore
                                   (Ojs.call x10117 "push"
                                      [|(Ojs.fun_to_js 2
                                           (fun (x10119 : Ojs.t) ->
                                              fun (x10120 : Ojs.t) ->
                                                Ojs.float_to_js
                                                  (x10118
                                                     ~a:(T.t_of_js x10119)
                                                     ~b:(T.t_of_js x10120))))|])
                             | None -> ());
                            x10117))|])
    let (splice : t -> start:float -> ?deleteCount:float -> unit -> T.t list)
      =
      fun (x10127 : t) ->
        fun ~start:(x10123 : float) ->
          fun ?deleteCount:(x10124 : float option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x10128 = t_to_js x10127 in
                 Ojs.call (Ojs.get_prop_ascii x10128 "splice") "apply"
                   [|x10128;((let x10125 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10125 "push"
                                   [|(Ojs.float_to_js x10123)|]);
                              (match x10124 with
                               | Some x10126 ->
                                   ignore
                                     (Ojs.call x10125 "push"
                                        [|(Ojs.float_to_js x10126)|])
                               | None -> ());
                              x10125))|])
    let (splice' :
      t -> start:float -> deleteCount:float -> items:T.t list -> T.t list) =
      fun (x10135 : t) ->
        fun ~start:(x10130 : float) ->
          fun ~deleteCount:(x10131 : float) ->
            fun ~items:(x10132 : T.t list) ->
              Ojs.list_of_js T.t_of_js
                (let x10136 = t_to_js x10135 in
                 Ojs.call (Ojs.get_prop_ascii x10136 "splice") "apply"
                   [|x10136;((let x10133 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10133 "push"
                                   [|(Ojs.float_to_js x10130)|]);
                              ignore
                                (Ojs.call x10133 "push"
                                   [|(Ojs.float_to_js x10131)|]);
                              List.iter
                                (fun (x10134 : T.t) ->
                                   ignore
                                     (Ojs.call x10133 "push"
                                        [|(T.t_to_js x10134)|])) x10132;
                              x10133))|])
    let (unshift : t -> items:T.t list -> float) =
      fun (x10141 : t) ->
        fun ~items:(x10138 : T.t list) ->
          Ojs.float_of_js
            (let x10142 = t_to_js x10141 in
             Ojs.call (Ojs.get_prop_ascii x10142 "unshift") "apply"
               [|x10142;((let x10139 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10140 : T.t) ->
                               ignore
                                 (Ojs.call x10139 "push"
                                    [|(T.t_to_js x10140)|])) x10138;
                          x10139))|])
    let (indexOf :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> float) =
      fun (x10147 : t) ->
        fun ~searchElement:(x10143 : T.t) ->
          fun ?fromIndex:(x10144 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x10148 = t_to_js x10147 in
                 Ojs.call (Ojs.get_prop_ascii x10148 "indexOf") "apply"
                   [|x10148;((let x10145 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10145 "push"
                                   [|(T.t_to_js x10143)|]);
                              (match x10144 with
                               | Some x10146 ->
                                   ignore
                                     (Ojs.call x10145 "push"
                                        [|(Ojs.float_to_js x10146)|])
                               | None -> ());
                              x10145))|])
    let (lastIndexOf :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> float) =
      fun (x10153 : t) ->
        fun ~searchElement:(x10149 : T.t) ->
          fun ?fromIndex:(x10150 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x10154 = t_to_js x10153 in
                 Ojs.call (Ojs.get_prop_ascii x10154 "lastIndexOf") "apply"
                   [|x10154;((let x10151 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10151 "push"
                                   [|(T.t_to_js x10149)|]);
                              (match x10150 with
                               | Some x10152 ->
                                   ignore
                                     (Ojs.call x10151 "push"
                                        [|(Ojs.float_to_js x10152)|])
                               | None -> ());
                              x10151))|])
    let (every :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x10163 : t) ->
        fun
          ~predicate:(x10155 :
                       value:T.t -> index:float -> array:T.t list -> bool)
          ->
          fun ?thisArg:(x10156 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x10164 = t_to_js x10163 in
                 Ojs.call (Ojs.get_prop_ascii x10164 "every") "apply"
                   [|x10164;((let x10157 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10157 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10159 : Ojs.t) ->
                                           fun (x10160 : Ojs.t) ->
                                             fun (x10161 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x10155
                                                    ~value:(T.t_of_js x10159)
                                                    ~index:(Ojs.float_of_js
                                                              x10160)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10161))))|]);
                              (match x10156 with
                               | Some x10158 ->
                                   ignore
                                     (Ojs.call x10157 "push"
                                        [|(any_to_js x10158)|])
                               | None -> ());
                              x10157))|])
    let (every' :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x10173 : t) ->
        fun
          ~predicate:(x10165 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10166 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x10174 = t_to_js x10173 in
                 Ojs.call (Ojs.get_prop_ascii x10174 "every") "apply"
                   [|x10174;((let x10167 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10167 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10169 : Ojs.t) ->
                                           fun (x10170 : Ojs.t) ->
                                             fun (x10171 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10165
                                                    ~value:(T.t_of_js x10169)
                                                    ~index:(Ojs.float_of_js
                                                              x10170)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10171))))|]);
                              (match x10166 with
                               | Some x10168 ->
                                   ignore
                                     (Ojs.call x10167 "push"
                                        [|(any_to_js x10168)|])
                               | None -> ());
                              x10167))|])
    let (some :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x10183 : t) ->
        fun
          ~predicate:(x10175 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10176 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x10184 = t_to_js x10183 in
                 Ojs.call (Ojs.get_prop_ascii x10184 "some") "apply"
                   [|x10184;((let x10177 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10177 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10179 : Ojs.t) ->
                                           fun (x10180 : Ojs.t) ->
                                             fun (x10181 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10175
                                                    ~value:(T.t_of_js x10179)
                                                    ~index:(Ojs.float_of_js
                                                              x10180)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10181))))|]);
                              (match x10176 with
                               | Some x10178 ->
                                   ignore
                                     (Ojs.call x10177 "push"
                                        [|(any_to_js x10178)|])
                               | None -> ());
                              x10177))|])
    let (forEach :
      t ->
        callbackfn:(value:T.t -> index:float -> array:T.t list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x10193 : t) ->
        fun
          ~callbackfn:(x10185 :
                        value:T.t -> index:float -> array:T.t list -> unit)
          ->
          fun ?thisArg:(x10186 : any option) ->
            fun () ->
              ignore
                (let x10194 = t_to_js x10193 in
                 Ojs.call (Ojs.get_prop_ascii x10194 "forEach") "apply"
                   [|x10194;((let x10187 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10187 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10189 : Ojs.t) ->
                                           fun (x10190 : Ojs.t) ->
                                             fun (x10191 : Ojs.t) ->
                                               x10185
                                                 ~value:(T.t_of_js x10189)
                                                 ~index:(Ojs.float_of_js
                                                           x10190)
                                                 ~array:(Ojs.list_of_js
                                                           T.t_of_js x10191)))|]);
                              (match x10186 with
                               | Some x10188 ->
                                   ignore
                                     (Ojs.call x10187 "push"
                                        [|(any_to_js x10188)|])
                               | None -> ());
                              x10187))|])
    let (map :
      t ->
        callbackfn:(value:T.t -> index:float -> array:T.t list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x10203 : t) ->
        fun
          ~callbackfn:(x10195 :
                        value:T.t -> index:float -> array:T.t list -> 'U)
          ->
          fun ?thisArg:(x10196 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10204 = t_to_js x10203 in
                 Ojs.call (Ojs.get_prop_ascii x10204 "map") "apply"
                   [|x10204;((let x10197 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10197 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10199 : Ojs.t) ->
                                           fun (x10200 : Ojs.t) ->
                                             fun (x10201 : Ojs.t) ->
                                               Obj.magic
                                                 (x10195
                                                    ~value:(T.t_of_js x10199)
                                                    ~index:(Ojs.float_of_js
                                                              x10200)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10201))))|]);
                              (match x10196 with
                               | Some x10198 ->
                                   ignore
                                     (Ojs.call x10197 "push"
                                        [|(any_to_js x10198)|])
                               | None -> ());
                              x10197))|])
    let (filter :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x10214 : t) ->
        fun
          ~predicate:(x10206 :
                       value:T.t -> index:float -> array:T.t list -> bool)
          ->
          fun ?thisArg:(x10207 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10215 = t_to_js x10214 in
                 Ojs.call (Ojs.get_prop_ascii x10215 "filter") "apply"
                   [|x10215;((let x10208 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10208 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10210 : Ojs.t) ->
                                           fun (x10211 : Ojs.t) ->
                                             fun (x10212 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x10206
                                                    ~value:(T.t_of_js x10210)
                                                    ~index:(Ojs.float_of_js
                                                              x10211)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10212))))|]);
                              (match x10207 with
                               | Some x10209 ->
                                   ignore
                                     (Ojs.call x10208 "push"
                                        [|(any_to_js x10209)|])
                               | None -> ());
                              x10208))|])
    let (filter' :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> T.t list)
      =
      fun (x10225 : t) ->
        fun
          ~predicate:(x10217 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10218 : any option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x10226 = t_to_js x10225 in
                 Ojs.call (Ojs.get_prop_ascii x10226 "filter") "apply"
                   [|x10226;((let x10219 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10219 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10221 : Ojs.t) ->
                                           fun (x10222 : Ojs.t) ->
                                             fun (x10223 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10217
                                                    ~value:(T.t_of_js x10221)
                                                    ~index:(Ojs.float_of_js
                                                              x10222)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10223))))|]);
                              (match x10218 with
                               | Some x10220 ->
                                   ignore
                                     (Ojs.call x10219 "push"
                                        [|(any_to_js x10220)|])
                               | None -> ());
                              x10219))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> T.t)
      =
      fun (x10234 : t) ->
        fun
          ~callbackfn:(x10228 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          T.t_of_js
            (Ojs.call (t_to_js x10234) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x10229 : Ojs.t) ->
                       fun (x10230 : Ojs.t) ->
                         fun (x10231 : Ojs.t) ->
                           fun (x10232 : Ojs.t) ->
                             T.t_to_js
                               (x10228 ~previousValue:(T.t_of_js x10229)
                                  ~currentValue:(T.t_of_js x10230)
                                  ~currentIndex:(Ojs.float_of_js x10231)
                                  ~array:(Ojs.list_of_js T.t_of_js x10232))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> initialValue:T.t -> T.t)
      =
      fun (x10242 : t) ->
        fun
          ~callbackfn:(x10235 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          fun ~initialValue:(x10241 : T.t) ->
            T.t_of_js
              (Ojs.call (t_to_js x10242) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x10236 : Ojs.t) ->
                         fun (x10237 : Ojs.t) ->
                           fun (x10238 : Ojs.t) ->
                             fun (x10239 : Ojs.t) ->
                               T.t_to_js
                                 (x10235 ~previousValue:(T.t_of_js x10236)
                                    ~currentValue:(T.t_of_js x10237)
                                    ~currentIndex:(Ojs.float_of_js x10238)
                                    ~array:(Ojs.list_of_js T.t_of_js x10239))));(
                   T.t_to_js x10241)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x10250 : t) ->
        fun
          ~callbackfn:(x10243 :
                        previousValue:'U ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> 'U)
          ->
          fun ~initialValue:(x10249 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x10250) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x10244 : Ojs.t) ->
                         fun (x10245 : Ojs.t) ->
                           fun (x10246 : Ojs.t) ->
                             fun (x10247 : Ojs.t) ->
                               Obj.magic
                                 (x10243 ~previousValue:(Obj.magic x10244)
                                    ~currentValue:(T.t_of_js x10245)
                                    ~currentIndex:(Ojs.float_of_js x10246)
                                    ~array:(Ojs.list_of_js T.t_of_js x10247))));(
                   Obj.magic x10249)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> T.t)
      =
      fun (x10257 : t) ->
        fun
          ~callbackfn:(x10251 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          T.t_of_js
            (Ojs.call (t_to_js x10257) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x10252 : Ojs.t) ->
                       fun (x10253 : Ojs.t) ->
                         fun (x10254 : Ojs.t) ->
                           fun (x10255 : Ojs.t) ->
                             T.t_to_js
                               (x10251 ~previousValue:(T.t_of_js x10252)
                                  ~currentValue:(T.t_of_js x10253)
                                  ~currentIndex:(Ojs.float_of_js x10254)
                                  ~array:(Ojs.list_of_js T.t_of_js x10255))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> initialValue:T.t -> T.t)
      =
      fun (x10265 : t) ->
        fun
          ~callbackfn:(x10258 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          fun ~initialValue:(x10264 : T.t) ->
            T.t_of_js
              (Ojs.call (t_to_js x10265) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x10259 : Ojs.t) ->
                         fun (x10260 : Ojs.t) ->
                           fun (x10261 : Ojs.t) ->
                             fun (x10262 : Ojs.t) ->
                               T.t_to_js
                                 (x10258 ~previousValue:(T.t_of_js x10259)
                                    ~currentValue:(T.t_of_js x10260)
                                    ~currentIndex:(Ojs.float_of_js x10261)
                                    ~array:(Ojs.list_of_js T.t_of_js x10262))));(
                   T.t_to_js x10264)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x10273 : t) ->
        fun
          ~callbackfn:(x10266 :
                        previousValue:'U ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> 'U)
          ->
          fun ~initialValue:(x10272 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x10273) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x10267 : Ojs.t) ->
                         fun (x10268 : Ojs.t) ->
                           fun (x10269 : Ojs.t) ->
                             fun (x10270 : Ojs.t) ->
                               Obj.magic
                                 (x10266 ~previousValue:(Obj.magic x10267)
                                    ~currentValue:(T.t_of_js x10268)
                                    ~currentIndex:(Ojs.float_of_js x10269)
                                    ~array:(Ojs.list_of_js T.t_of_js x10270))));(
                   Obj.magic x10272)|])
    let (get : t -> float -> T.t) =
      fun (x10274 : t) ->
        fun (x10275 : float) ->
          T.t_of_js (Ojs.get_prop (t_to_js x10274) (Ojs.float_to_js x10275))
    let (set : t -> float -> T.t -> unit) =
      fun (x10276 : t) ->
        fun (x10277 : float) ->
          fun (x10278 : T.t) ->
            Ojs.set_prop (t_to_js x10276) (Ojs.float_to_js x10277)
              (T.t_to_js x10278)
    let (from :
      [ `U1 of T.t Iterable.t  | `U2 of T.t ArrayLike.t ] -> T.t list) =
      fun (x10279 : [ `U1 of T.t Iterable.t  | `U2 of T.t ArrayLike.t ]) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|((match x10279 with
                 | `U1 x10280 -> Iterable.t_to_js T.t_to_js x10280
                 | `U2 x10282 -> ArrayLike.t_to_js T.t_to_js x10282))|])
    let (from' :
      iterable:[ `U1 of T.t Iterable.t  | `U2 of T.t ArrayLike.t ] ->
        mapfn:(v:T.t -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun
        ~iterable:(x10285 :
                    [ `U1 of T.t Iterable.t  | `U2 of T.t ArrayLike.t ])
        ->
        fun ~mapfn:(x10286 : v:T.t -> k:float -> 'U) ->
          fun ?thisArg:(x10287 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10296 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x10296 "from") "apply"
                   [|x10296;((let x10288 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10288 "push"
                                   [|((match x10285 with
                                       | `U1 x10292 ->
                                           Iterable.t_to_js T.t_to_js x10292
                                       | `U2 x10294 ->
                                           ArrayLike.t_to_js T.t_to_js x10294))|]);
                              ignore
                                (Ojs.call x10288 "push"
                                   [|(Ojs.fun_to_js 2
                                        (fun (x10290 : Ojs.t) ->
                                           fun (x10291 : Ojs.t) ->
                                             Obj.magic
                                               (x10286 ~v:(T.t_of_js x10290)
                                                  ~k:(Ojs.float_of_js x10291))))|]);
                              (match x10287 with
                               | Some x10289 ->
                                   ignore
                                     (Ojs.call x10288 "push"
                                        [|(any_to_js x10289)|])
                               | None -> ());
                              x10288))|])
    let (from'' : T.t ArrayLike.t -> T.t list) =
      fun (x10298 : T.t ArrayLike.t) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|(ArrayLike.t_to_js T.t_to_js x10298)|])
    let (from''' :
      arrayLike:T.t ArrayLike.t ->
        mapfn:(v:T.t -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun ~arrayLike:(x10301 : T.t ArrayLike.t) ->
        fun ~mapfn:(x10302 : v:T.t -> k:float -> 'U) ->
          fun ?thisArg:(x10303 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10309 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x10309 "from") "apply"
                   [|x10309;((let x10304 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10304 "push"
                                   [|(ArrayLike.t_to_js T.t_to_js x10301)|]);
                              ignore
                                (Ojs.call x10304 "push"
                                   [|(Ojs.fun_to_js 2
                                        (fun (x10306 : Ojs.t) ->
                                           fun (x10307 : Ojs.t) ->
                                             Obj.magic
                                               (x10302 ~v:(T.t_of_js x10306)
                                                  ~k:(Ojs.float_of_js x10307))))|]);
                              (match x10303 with
                               | Some x10305 ->
                                   ignore
                                     (Ojs.call x10304 "push"
                                        [|(any_to_js x10305)|])
                               | None -> ());
                              x10304))|])
    let (of_ : T.t list -> T.t list) =
      fun (x10311 : T.t list) ->
        Ojs.list_of_js T.t_of_js
          (let x10314 = Ojs.get_prop_ascii Ojs.global "Array" in
           Ojs.call (Ojs.get_prop_ascii x10314 "of") "apply"
             [|x10314;((let x10312 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x10313 : T.t) ->
                             ignore
                               (Ojs.call x10312 "push" [|(T.t_to_js x10313)|]))
                          x10311;
                        x10312))|])
    let (create : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x10316 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
               (let x10317 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10316 with
                 | Some x10318 ->
                     ignore
                       (Ojs.call x10317 "push" [|(Ojs.float_to_js x10318)|])
                 | None -> ());
                x10317))
    let (create' : float -> T.t list) =
      fun (x10320 : float) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x10320)|])
    let (create'' : T.t list -> T.t list) =
      fun (x10322 : T.t list) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
             (let x10323 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x10324 : T.t) ->
                   ignore (Ojs.call x10323 "push" [|(T.t_to_js x10324)|]))
                x10322;
              x10323))
    let (invoke : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x10326 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
               [|Ojs.null;((let x10327 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10326 with
                             | Some x10328 ->
                                 ignore
                                   (Ojs.call x10327 "push"
                                      [|(Ojs.float_to_js x10328)|])
                             | None -> ());
                            x10327))|])
    let (invoke' : float -> T.t list) =
      fun (x10330 : float) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x10330)|])
    let (invoke'' : T.t list -> T.t list) =
      fun (x10332 : T.t list) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
             [|Ojs.null;((let x10333 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10334 : T.t) ->
                               ignore
                                 (Ojs.call x10333 "push"
                                    [|(T.t_to_js x10334)|])) x10332;
                          x10333))|])
    let (isArray : any -> bool) =
      fun (x10336 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "isArray"
             [|(any_to_js x10336)|])
    let (prototype : unit -> any list) =
      fun () ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Array")
             "prototype")
  end
module TypedPropertyDescriptor_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T TypedPropertyDescriptor.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent = fun
      (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x10340 : Ojs.t) ->
          TypedPropertyDescriptor.t_of_js __T_of_js x10340
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t = fun (type
      __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x10338 : __T TypedPropertyDescriptor.t) ->
          TypedPropertyDescriptor.t_to_js __T_to_js x10338
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10344 : Ojs.t) -> parent_of_js T.t_of_js x10344
    and t_to_js : t -> Ojs.t =
      fun (x10342 : T.t parent) -> parent_to_js T.t_to_js x10342
    let (get_enumerable : t -> bool) =
      fun (x10346 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x10346) "enumerable")
    let (set_enumerable : t -> bool -> unit) =
      fun (x10347 : t) ->
        fun (x10348 : bool) ->
          Ojs.set_prop_ascii (t_to_js x10347) "enumerable"
            (Ojs.bool_to_js x10348)
    let (get_configurable : t -> bool) =
      fun (x10349 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x10349) "configurable")
    let (set_configurable : t -> bool -> unit) =
      fun (x10350 : t) ->
        fun (x10351 : bool) ->
          Ojs.set_prop_ascii (t_to_js x10350) "configurable"
            (Ojs.bool_to_js x10351)
    let (get_writable : t -> bool) =
      fun (x10352 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x10352) "writable")
    let (set_writable : t -> bool -> unit) =
      fun (x10353 : t) ->
        fun (x10354 : bool) ->
          Ojs.set_prop_ascii (t_to_js x10353) "writable"
            (Ojs.bool_to_js x10354)
    let (get_value : t -> T.t) =
      fun (x10355 : t) ->
        T.t_of_js (Ojs.get_prop_ascii (t_to_js x10355) "value")
    let (set_value : t -> T.t -> unit) =
      fun (x10356 : t) ->
        fun (x10357 : T.t) ->
          Ojs.set_prop_ascii (t_to_js x10356) "value" (T.t_to_js x10357)
    let (get_ : t -> T.t) =
      fun (x10358 : t) -> T.t_of_js (Ojs.call (t_to_js x10358) "get" [||])
    let (set_ : t -> value:T.t -> unit) =
      fun (x10360 : t) ->
        fun ~value:(x10359 : T.t) ->
          ignore (Ojs.call (t_to_js x10360) "set" [|(T.t_to_js x10359)|])
  end
module PromiseLike_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T PromiseLike.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent = fun
      (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x10363 : Ojs.t) -> PromiseLike.t_of_js __T_of_js x10363
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t = fun (type
      __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x10361 : __T PromiseLike.t) ->
          PromiseLike.t_to_js __T_to_js x10361
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10367 : Ojs.t) -> parent_of_js T.t_of_js x10367
    and t_to_js : t -> Ojs.t =
      fun (x10365 : T.t parent) -> parent_to_js T.t_to_js x10365
    let (then_ :
      t ->
        ?onfulfilled:[ `Null  | `Undefined of undefined 
                     | `U1 of
                         T.t ->
                           [ `U1 of 'TResult1  | `U2 of 'TResult1 parent ]
                         ]
          ->
          ?onrejected:[ `Null  | `Undefined of undefined 
                      | `U1 of
                          any ->
                            [ `U1 of 'TResult2  | `U2 of 'TResult2 parent ]
                          ]
            -> unit -> ('TResult1, 'TResult2) union2 parent)
      =
      fun (x10386 : t) ->
        fun
          ?onfulfilled:(x10369 :
                         [ `Null  | `Undefined of undefined 
                         | `U1 of
                             T.t ->
                               [ `U1 of 'TResult1 
                               | `U2 of 'TResult1 parent ]
                             ]
                           option)
          ->
          fun
            ?onrejected:(x10370 :
                          [ `Null  | `Undefined of undefined 
                          | `U1 of
                              any ->
                                [ `U1 of 'TResult2 
                                | `U2 of 'TResult2 parent ]
                              ]
                            option)
            ->
            fun () ->
              parent_of_js
                (fun (x10388 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x10388)
                (let x10387 = t_to_js x10386 in
                 Ojs.call (Ojs.get_prop_ascii x10387 "then") "apply"
                   [|x10387;((let x10371 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x10369 with
                               | Some x10379 ->
                                   ignore
                                     (Ojs.call x10371 "push"
                                        [|((match x10379 with
                                            | `Null -> Ojs.null
                                            | `Undefined x10380 ->
                                                undefined_to_js x10380
                                            | `U1 x10381 ->
                                                Ojs.fun_to_js 1
                                                  (fun (x10382 : Ojs.t) ->
                                                     match x10381
                                                             (T.t_of_js
                                                                x10382)
                                                     with
                                                     | `U1 x10383 ->
                                                         Obj.magic x10383
                                                     | `U2 x10384 ->
                                                         parent_to_js
                                                           Obj.magic x10384)))|])
                               | None -> ());
                              (match x10370 with
                               | Some x10372 ->
                                   ignore
                                     (Ojs.call x10371 "push"
                                        [|((match x10372 with
                                            | `Null -> Ojs.null
                                            | `Undefined x10373 ->
                                                undefined_to_js x10373
                                            | `U1 x10374 ->
                                                Ojs.fun_to_js 1
                                                  (fun (x10375 : Ojs.t) ->
                                                     match x10374
                                                             (any_of_js
                                                                x10375)
                                                     with
                                                     | `U1 x10376 ->
                                                         Obj.magic x10376
                                                     | `U2 x10377 ->
                                                         parent_to_js
                                                           Obj.magic x10377)))|])
                               | None -> ());
                              x10371))|])
  end
module ArrayLike_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ArrayLike.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent = fun
      (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x10393 : Ojs.t) -> ArrayLike.t_of_js __T_of_js x10393
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t = fun (type
      __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x10391 : __T ArrayLike.t) -> ArrayLike.t_to_js __T_to_js x10391
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10397 : Ojs.t) -> parent_of_js T.t_of_js x10397
    and t_to_js : t -> Ojs.t =
      fun (x10395 : T.t parent) -> parent_to_js T.t_to_js x10395
    let (get_length : t -> float) =
      fun (x10399 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10399) "length")
    let (get : t -> float -> T.t) =
      fun (x10400 : t) ->
        fun (x10401 : float) ->
          T.t_of_js (Ojs.get_prop (t_to_js x10400) (Ojs.float_to_js x10401))
  end
module Map_Make(K:Ojs.T)(V:Ojs.T) =
  struct
    type ('K, 'V) parent = ('K, 'V) Map.t
    let rec parent_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) parent =
      fun (type __K) -> fun (type __V) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__V_of_js : Ojs.t -> __V) ->
          fun (x10405 : Ojs.t) -> Map.t_of_js __K_of_js __V_of_js x10405
    and parent_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) parent -> Ojs.t =
      fun (type __K) -> fun (type __V) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__V_to_js : __V -> Ojs.t) ->
          fun (x10402 : (__K, __V) Map.t) ->
            Map.t_to_js __K_to_js __V_to_js x10402
    type t = (K.t, V.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10411 : Ojs.t) -> parent_of_js K.t_of_js V.t_of_js x10411
    and t_to_js : t -> Ojs.t =
      fun (x10408 : (K.t, V.t) parent) ->
        parent_to_js K.t_to_js V.t_to_js x10408
    let (entries : t -> (K.t * V.t) IterableIterator.t) =
      fun (x10414 : t) ->
        IterableIterator.t_of_js
          (fun (x10415 : Ojs.t) ->
             let x10416 = x10415 in
             ((K.t_of_js (Ojs.array_get x10416 0)),
               (V.t_of_js (Ojs.array_get x10416 1))))
          (Ojs.call (t_to_js x10414) "entries" [||])
    let (keys : t -> K.t IterableIterator.t) =
      fun (x10417 : t) ->
        IterableIterator.t_of_js K.t_of_js
          (Ojs.call (t_to_js x10417) "keys" [||])
    let (values : t -> V.t IterableIterator.t) =
      fun (x10419 : t) ->
        IterableIterator.t_of_js V.t_of_js
          (Ojs.call (t_to_js x10419) "values" [||])
    let (clear : t -> unit) =
      fun (x10421 : t) -> ignore (Ojs.call (t_to_js x10421) "clear" [||])
    let (delete : t -> key:K.t -> bool) =
      fun (x10423 : t) ->
        fun ~key:(x10422 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10423) "delete" [|(K.t_to_js x10422)|])
    let (forEach :
      t ->
        callbackfn:(value:V.t -> key:K.t -> map:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x10431 : t) ->
        fun ~callbackfn:(x10424 : value:V.t -> key:K.t -> map:t -> unit) ->
          fun ?thisArg:(x10425 : any option) ->
            fun () ->
              ignore
                (let x10432 = t_to_js x10431 in
                 Ojs.call (Ojs.get_prop_ascii x10432 "forEach") "apply"
                   [|x10432;((let x10426 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10426 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10428 : Ojs.t) ->
                                           fun (x10429 : Ojs.t) ->
                                             fun (x10430 : Ojs.t) ->
                                               x10424
                                                 ~value:(V.t_of_js x10428)
                                                 ~key:(K.t_of_js x10429)
                                                 ~map:(t_of_js x10430)))|]);
                              (match x10425 with
                               | Some x10427 ->
                                   ignore
                                     (Ojs.call x10426 "push"
                                        [|(any_to_js x10427)|])
                               | None -> ());
                              x10426))|])
    let (get_ : t -> key:K.t -> V.t option) =
      fun (x10434 : t) ->
        fun ~key:(x10433 : K.t) ->
          Ojs.option_of_js V.t_of_js
            (Ojs.call (t_to_js x10434) "get" [|(K.t_to_js x10433)|])
    let (has : t -> key:K.t -> bool) =
      fun (x10437 : t) ->
        fun ~key:(x10436 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10437) "has" [|(K.t_to_js x10436)|])
    let (set_ : t -> key:K.t -> value:V.t -> t) =
      fun (x10440 : t) ->
        fun ~key:(x10438 : K.t) ->
          fun ~value:(x10439 : V.t) ->
            t_of_js
              (Ojs.call (t_to_js x10440) "set"
                 [|(K.t_to_js x10438);(V.t_to_js x10439)|])
    let (get_size : t -> float) =
      fun (x10441 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10441) "size")
    let (create : unit -> (any, any) parent) =
      fun () ->
        parent_of_js any_of_js any_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map") [||])
    let (create' : ?iterable:(K.t * V.t) Iterable.t option -> unit -> t) =
      fun ?iterable:(x10444 : (K.t * V.t) Iterable.t option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Map")
               (let x10445 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10444 with
                 | Some x10446 ->
                     ignore
                       (Ojs.call x10445 "push"
                          [|(Ojs.option_to_js
                               (fun (x10447 : (K.t * V.t) Iterable.t) ->
                                  Iterable.t_to_js
                                    (fun (x10448 : (K.t * V.t)) ->
                                       let (x10449, x10450) = x10448 in
                                       let x10451 = Ojs.array_make 2 in
                                       Ojs.array_set x10451 0
                                         (K.t_to_js x10449);
                                       Ojs.array_set x10451 1
                                         (V.t_to_js x10450);
                                       x10451) x10447) x10446)|])
                 | None -> ());
                x10445))
    let (create'' : unit -> (any, any) parent) =
      fun () ->
        parent_of_js any_of_js any_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map") [||])
    let (create''' : ?entries:(K.t * V.t) list option -> unit -> t) =
      fun ?entries:(x10454 : (K.t * V.t) list option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Map")
               (let x10455 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10454 with
                 | Some x10456 ->
                     ignore
                       (Ojs.call x10455 "push"
                          [|(Ojs.option_to_js
                               (fun (x10457 : (K.t * V.t) list) ->
                                  Ojs.list_to_js
                                    (fun (x10458 : (K.t * V.t)) ->
                                       let (x10459, x10460) = x10458 in
                                       let x10461 = Ojs.array_make 2 in
                                       Ojs.array_set x10461 0
                                         (K.t_to_js x10459);
                                       Ojs.array_set x10461 1
                                         (V.t_to_js x10460);
                                       x10461) x10457) x10456)|])
                 | None -> ());
                x10455))
    let (prototype : unit -> (any, any) parent) =
      fun () ->
        parent_of_js any_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Map")
             "prototype")
  end
module ReadonlyMap_Make(K:Ojs.T)(V:Ojs.T) =
  struct
    type ('K, 'V) parent = ('K, 'V) ReadonlyMap.t
    let rec parent_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) parent =
      fun (type __K) -> fun (type __V) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__V_of_js : Ojs.t -> __V) ->
          fun (x10467 : Ojs.t) ->
            ReadonlyMap.t_of_js __K_of_js __V_of_js x10467
    and parent_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) parent -> Ojs.t =
      fun (type __K) -> fun (type __V) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__V_to_js : __V -> Ojs.t) ->
          fun (x10464 : (__K, __V) ReadonlyMap.t) ->
            ReadonlyMap.t_to_js __K_to_js __V_to_js x10464
    type t = (K.t, V.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10473 : Ojs.t) -> parent_of_js K.t_of_js V.t_of_js x10473
    and t_to_js : t -> Ojs.t =
      fun (x10470 : (K.t, V.t) parent) ->
        parent_to_js K.t_to_js V.t_to_js x10470
    let (entries : t -> (K.t * V.t) IterableIterator.t) =
      fun (x10476 : t) ->
        IterableIterator.t_of_js
          (fun (x10477 : Ojs.t) ->
             let x10478 = x10477 in
             ((K.t_of_js (Ojs.array_get x10478 0)),
               (V.t_of_js (Ojs.array_get x10478 1))))
          (Ojs.call (t_to_js x10476) "entries" [||])
    let (keys : t -> K.t IterableIterator.t) =
      fun (x10479 : t) ->
        IterableIterator.t_of_js K.t_of_js
          (Ojs.call (t_to_js x10479) "keys" [||])
    let (values : t -> V.t IterableIterator.t) =
      fun (x10481 : t) ->
        IterableIterator.t_of_js V.t_of_js
          (Ojs.call (t_to_js x10481) "values" [||])
    let (forEach :
      t ->
        callbackfn:(value:V.t -> key:K.t -> map:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x10490 : t) ->
        fun ~callbackfn:(x10483 : value:V.t -> key:K.t -> map:t -> unit) ->
          fun ?thisArg:(x10484 : any option) ->
            fun () ->
              ignore
                (let x10491 = t_to_js x10490 in
                 Ojs.call (Ojs.get_prop_ascii x10491 "forEach") "apply"
                   [|x10491;((let x10485 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10485 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10487 : Ojs.t) ->
                                           fun (x10488 : Ojs.t) ->
                                             fun (x10489 : Ojs.t) ->
                                               x10483
                                                 ~value:(V.t_of_js x10487)
                                                 ~key:(K.t_of_js x10488)
                                                 ~map:(t_of_js x10489)))|]);
                              (match x10484 with
                               | Some x10486 ->
                                   ignore
                                     (Ojs.call x10485 "push"
                                        [|(any_to_js x10486)|])
                               | None -> ());
                              x10485))|])
    let (get_ : t -> key:K.t -> V.t option) =
      fun (x10493 : t) ->
        fun ~key:(x10492 : K.t) ->
          Ojs.option_of_js V.t_of_js
            (Ojs.call (t_to_js x10493) "get" [|(K.t_to_js x10492)|])
    let (has : t -> key:K.t -> bool) =
      fun (x10496 : t) ->
        fun ~key:(x10495 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10496) "has" [|(K.t_to_js x10495)|])
    let (get_size : t -> float) =
      fun (x10497 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10497) "size")
  end
module WeakMap_Make(K:Ojs.T)(V:Ojs.T) =
  struct
    type ('K, 'V) parent = ('K, 'V) WeakMap.t
    let rec parent_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) parent =
      fun (type __K) -> fun (type __V) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__V_of_js : Ojs.t -> __V) ->
          fun (x10501 : Ojs.t) -> WeakMap.t_of_js __K_of_js __V_of_js x10501
    and parent_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) parent -> Ojs.t =
      fun (type __K) -> fun (type __V) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__V_to_js : __V -> Ojs.t) ->
          fun (x10498 : (__K, __V) WeakMap.t) ->
            WeakMap.t_to_js __K_to_js __V_to_js x10498
    type t = (K.t, V.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10507 : Ojs.t) -> parent_of_js K.t_of_js V.t_of_js x10507
    and t_to_js : t -> Ojs.t =
      fun (x10504 : (K.t, V.t) parent) ->
        parent_to_js K.t_to_js V.t_to_js x10504
    let (delete : t -> key:K.t -> bool) =
      fun (x10511 : t) ->
        fun ~key:(x10510 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10511) "delete" [|(K.t_to_js x10510)|])
    let (get_ : t -> key:K.t -> V.t option) =
      fun (x10513 : t) ->
        fun ~key:(x10512 : K.t) ->
          Ojs.option_of_js V.t_of_js
            (Ojs.call (t_to_js x10513) "get" [|(K.t_to_js x10512)|])
    let (has : t -> key:K.t -> bool) =
      fun (x10516 : t) ->
        fun ~key:(x10515 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10516) "has" [|(K.t_to_js x10515)|])
    let (set_ : t -> key:K.t -> value:V.t -> t) =
      fun (x10519 : t) ->
        fun ~key:(x10517 : K.t) ->
          fun ~value:(x10518 : V.t) ->
            t_of_js
              (Ojs.call (t_to_js x10519) "set"
                 [|(K.t_to_js x10517);(V.t_to_js x10518)|])
    let (create : (K.t * V.t) Iterable.t -> t) =
      fun (x10520 : (K.t * V.t) Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakMap")
             [|(Iterable.t_to_js
                  (fun (x10521 : (K.t * V.t)) ->
                     let (x10522, x10523) = x10521 in
                     let x10524 = Ojs.array_make 2 in
                     Ojs.array_set x10524 0 (K.t_to_js x10522);
                     Ojs.array_set x10524 1 (V.t_to_js x10523);
                     x10524) x10520)|])
    let (create' : ?entries:(K.t * V.t) list option -> unit -> t) =
      fun ?entries:(x10525 : (K.t * V.t) list option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakMap")
               (let x10526 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10525 with
                 | Some x10527 ->
                     ignore
                       (Ojs.call x10526 "push"
                          [|(Ojs.option_to_js
                               (fun (x10528 : (K.t * V.t) list) ->
                                  Ojs.list_to_js
                                    (fun (x10529 : (K.t * V.t)) ->
                                       let (x10530, x10531) = x10529 in
                                       let x10532 = Ojs.array_make 2 in
                                       Ojs.array_set x10532 0
                                         (K.t_to_js x10530);
                                       Ojs.array_set x10532 1
                                         (V.t_to_js x10531);
                                       x10532) x10528) x10527)|])
                 | None -> ());
                x10526))
    let (prototype : unit -> (untyped_object, any) parent) =
      fun () ->
        parent_of_js untyped_object_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakMap")
             "prototype")
  end
module Set_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T Set.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent = fun
      (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x10537 : Ojs.t) -> Set.t_of_js __T_of_js x10537
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t = fun (type
      __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x10535 : __T Set.t) -> Set.t_to_js __T_to_js x10535
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10541 : Ojs.t) -> parent_of_js T.t_of_js x10541
    and t_to_js : t -> Ojs.t =
      fun (x10539 : T.t parent) -> parent_to_js T.t_to_js x10539
    let (entries : t -> (T.t * T.t) IterableIterator.t) =
      fun (x10543 : t) ->
        IterableIterator.t_of_js
          (fun (x10544 : Ojs.t) ->
             let x10545 = x10544 in
             ((T.t_of_js (Ojs.array_get x10545 0)),
               (T.t_of_js (Ojs.array_get x10545 1))))
          (Ojs.call (t_to_js x10543) "entries" [||])
    let (keys : t -> T.t IterableIterator.t) =
      fun (x10546 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x10546) "keys" [||])
    let (values : t -> T.t IterableIterator.t) =
      fun (x10548 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x10548) "values" [||])
    let (add : t -> value:T.t -> t) =
      fun (x10551 : t) ->
        fun ~value:(x10550 : T.t) ->
          t_of_js (Ojs.call (t_to_js x10551) "add" [|(T.t_to_js x10550)|])
    let (clear : t -> unit) =
      fun (x10552 : t) -> ignore (Ojs.call (t_to_js x10552) "clear" [||])
    let (delete : t -> value:T.t -> bool) =
      fun (x10554 : t) ->
        fun ~value:(x10553 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10554) "delete" [|(T.t_to_js x10553)|])
    let (forEach :
      t ->
        callbackfn:(value:T.t -> value2:T.t -> set_:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x10562 : t) ->
        fun ~callbackfn:(x10555 : value:T.t -> value2:T.t -> set_:t -> unit)
          ->
          fun ?thisArg:(x10556 : any option) ->
            fun () ->
              ignore
                (let x10563 = t_to_js x10562 in
                 Ojs.call (Ojs.get_prop_ascii x10563 "forEach") "apply"
                   [|x10563;((let x10557 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10557 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10559 : Ojs.t) ->
                                           fun (x10560 : Ojs.t) ->
                                             fun (x10561 : Ojs.t) ->
                                               x10555
                                                 ~value:(T.t_of_js x10559)
                                                 ~value2:(T.t_of_js x10560)
                                                 ~set_:(t_of_js x10561)))|]);
                              (match x10556 with
                               | Some x10558 ->
                                   ignore
                                     (Ojs.call x10557 "push"
                                        [|(any_to_js x10558)|])
                               | None -> ());
                              x10557))|])
    let (has : t -> value:T.t -> bool) =
      fun (x10565 : t) ->
        fun ~value:(x10564 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10565) "has" [|(T.t_to_js x10564)|])
    let (get_size : t -> float) =
      fun (x10566 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10566) "size")
    let (create : ?iterable:T.t Iterable.t option -> unit -> t) =
      fun ?iterable:(x10567 : T.t Iterable.t option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x10568 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10567 with
                 | Some x10569 ->
                     ignore
                       (Ojs.call x10568 "push"
                          [|(Ojs.option_to_js
                               (fun (x10570 : T.t Iterable.t) ->
                                  Iterable.t_to_js T.t_to_js x10570) x10569)|])
                 | None -> ());
                x10568))
    let (create' : ?values:T.t list option -> unit -> t) =
      fun ?values:(x10572 : T.t list option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x10573 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10572 with
                 | Some x10574 ->
                     ignore
                       (Ojs.call x10573 "push"
                          [|(Ojs.option_to_js
                               (fun (x10575 : T.t list) ->
                                  Ojs.list_to_js T.t_to_js x10575) x10574)|])
                 | None -> ());
                x10573))
    let (prototype : unit -> any parent) =
      fun () ->
        parent_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Set")
             "prototype")
  end
module ReadonlySet_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ReadonlySet.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent = fun
      (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x10580 : Ojs.t) -> ReadonlySet.t_of_js __T_of_js x10580
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t = fun (type
      __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x10578 : __T ReadonlySet.t) ->
          ReadonlySet.t_to_js __T_to_js x10578
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10584 : Ojs.t) -> parent_of_js T.t_of_js x10584
    and t_to_js : t -> Ojs.t =
      fun (x10582 : T.t parent) -> parent_to_js T.t_to_js x10582
    let (entries : t -> (T.t * T.t) IterableIterator.t) =
      fun (x10586 : t) ->
        IterableIterator.t_of_js
          (fun (x10587 : Ojs.t) ->
             let x10588 = x10587 in
             ((T.t_of_js (Ojs.array_get x10588 0)),
               (T.t_of_js (Ojs.array_get x10588 1))))
          (Ojs.call (t_to_js x10586) "entries" [||])
    let (keys : t -> T.t IterableIterator.t) =
      fun (x10589 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x10589) "keys" [||])
    let (values : t -> T.t IterableIterator.t) =
      fun (x10591 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x10591) "values" [||])
    let (forEach :
      t ->
        callbackfn:(value:T.t -> value2:T.t -> set_:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x10600 : t) ->
        fun ~callbackfn:(x10593 : value:T.t -> value2:T.t -> set_:t -> unit)
          ->
          fun ?thisArg:(x10594 : any option) ->
            fun () ->
              ignore
                (let x10601 = t_to_js x10600 in
                 Ojs.call (Ojs.get_prop_ascii x10601 "forEach") "apply"
                   [|x10601;((let x10595 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10595 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10597 : Ojs.t) ->
                                           fun (x10598 : Ojs.t) ->
                                             fun (x10599 : Ojs.t) ->
                                               x10593
                                                 ~value:(T.t_of_js x10597)
                                                 ~value2:(T.t_of_js x10598)
                                                 ~set_:(t_of_js x10599)))|]);
                              (match x10594 with
                               | Some x10596 ->
                                   ignore
                                     (Ojs.call x10595 "push"
                                        [|(any_to_js x10596)|])
                               | None -> ());
                              x10595))|])
    let (has : t -> value:T.t -> bool) =
      fun (x10603 : t) ->
        fun ~value:(x10602 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10603) "has" [|(T.t_to_js x10602)|])
    let (get_size : t -> float) =
      fun (x10604 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10604) "size")
  end
module WeakSet_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T WeakSet.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent = fun
      (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x10607 : Ojs.t) -> WeakSet.t_of_js __T_of_js x10607
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t = fun (type
      __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x10605 : __T WeakSet.t) -> WeakSet.t_to_js __T_to_js x10605
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10611 : Ojs.t) -> parent_of_js T.t_of_js x10611
    and t_to_js : t -> Ojs.t =
      fun (x10609 : T.t parent) -> parent_to_js T.t_to_js x10609
    let (add : t -> value:T.t -> t) =
      fun (x10614 : t) ->
        fun ~value:(x10613 : T.t) ->
          t_of_js (Ojs.call (t_to_js x10614) "add" [|(T.t_to_js x10613)|])
    let (delete : t -> value:T.t -> bool) =
      fun (x10616 : t) ->
        fun ~value:(x10615 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10616) "delete" [|(T.t_to_js x10615)|])
    let (has : t -> value:T.t -> bool) =
      fun (x10618 : t) ->
        fun ~value:(x10617 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10618) "has" [|(T.t_to_js x10617)|])
    let (create : T.t Iterable.t -> t) =
      fun (x10619 : T.t Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakSet")
             [|(Iterable.t_to_js T.t_to_js x10619)|])
    let (create' : ?values:T.t list option -> unit -> t) =
      fun ?values:(x10621 : T.t list option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakSet")
               (let x10622 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10621 with
                 | Some x10623 ->
                     ignore
                       (Ojs.call x10622 "push"
                          [|(Ojs.option_to_js
                               (fun (x10624 : T.t list) ->
                                  Ojs.list_to_js T.t_to_js x10624) x10623)|])
                 | None -> ());
                x10622))
    let (prototype : unit -> untyped_object parent) =
      fun () ->
        parent_of_js untyped_object_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakSet")
             "prototype")
  end
module Generator_Make(T:Ojs.T)(TReturn:Ojs.T)(TNext:Ojs.T) =
  struct
    type ('T, 'TReturn, 'TNext) parent = ('T, 'TReturn, 'TNext) Generator.t
    let rec parent_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) parent
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (__TNext_of_js : Ojs.t -> __TNext) ->
            fun (x10631 : Ojs.t) ->
              Generator.t_of_js __T_of_js __TReturn_of_js __TNext_of_js
                x10631
    and parent_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) parent -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (__TNext_to_js : __TNext -> Ojs.t) ->
            fun (x10627 : (__T, __TReturn, __TNext) Generator.t) ->
              Generator.t_to_js __T_to_js __TReturn_to_js __TNext_to_js
                x10627
    type t = (T.t, TReturn.t, TNext.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10639 : Ojs.t) ->
        parent_of_js T.t_of_js TReturn.t_of_js TNext.t_of_js x10639
    and t_to_js : t -> Ojs.t =
      fun (x10635 : (T.t, TReturn.t, TNext.t) parent) ->
        parent_to_js T.t_to_js TReturn.t_to_js TNext.t_to_js x10635
    let (next : t -> args:any list -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x10646 : t) ->
        fun ~args:(x10643 : any list) ->
          IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
            (let x10647 = t_to_js x10646 in
             Ojs.call (Ojs.get_prop_ascii x10647 "next") "apply"
               [|x10647;((let x10644 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10645 : any) ->
                               ignore
                                 (Ojs.call x10644 "push"
                                    [|(any_to_js x10645)|])) x10643;
                          x10644))|])
    let (return : t -> value:TReturn.t -> (T.t, TReturn.t) IteratorResult.t)
      =
      fun (x10651 : t) ->
        fun ~value:(x10650 : TReturn.t) ->
          IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
            (Ojs.call (t_to_js x10651) "return" [|(TReturn.t_to_js x10650)|])
    let (throw : t -> e:any -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x10655 : t) ->
        fun ~e:(x10654 : any) ->
          IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
            (Ojs.call (t_to_js x10655) "throw" [|(any_to_js x10654)|])
  end
module IteratorYieldResult_Make(TYield:Ojs.T) =
  struct
    type 'TYield parent = 'TYield IteratorYieldResult.t
    let rec parent_of_js :
      'TYield . (Ojs.t -> 'TYield) -> Ojs.t -> 'TYield parent = fun (type
      __TYield) ->
      fun (__TYield_of_js : Ojs.t -> __TYield) ->
        fun (x10660 : Ojs.t) ->
          IteratorYieldResult.t_of_js __TYield_of_js x10660
    and parent_to_js :
      'TYield . ('TYield -> Ojs.t) -> 'TYield parent -> Ojs.t = fun (type
      __TYield) ->
      fun (__TYield_to_js : __TYield -> Ojs.t) ->
        fun (x10658 : __TYield IteratorYieldResult.t) ->
          IteratorYieldResult.t_to_js __TYield_to_js x10658
    type t = TYield.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10664 : Ojs.t) -> parent_of_js TYield.t_of_js x10664
    and t_to_js : t -> Ojs.t =
      fun (x10662 : TYield.t parent) -> parent_to_js TYield.t_to_js x10662
    let (get_done : t -> [ `L_b_false ]) =
      fun (x10666 : t) ->
        let x10667 = Ojs.get_prop_ascii (t_to_js x10666) "done" in
        match Ojs.bool_of_js x10667 with
        | false -> `L_b_false
        | _ -> assert false
    let (set_done : t -> [ `L_b_false ] -> unit) =
      fun (x10668 : t) ->
        fun (x10669 : [ `L_b_false ]) ->
          Ojs.set_prop_ascii (t_to_js x10668) "done"
            (match x10669 with | `L_b_false -> Ojs.bool_to_js false)
    let (get_value : t -> TYield.t) =
      fun (x10670 : t) ->
        TYield.t_of_js (Ojs.get_prop_ascii (t_to_js x10670) "value")
    let (set_value : t -> TYield.t -> unit) =
      fun (x10671 : t) ->
        fun (x10672 : TYield.t) ->
          Ojs.set_prop_ascii (t_to_js x10671) "value" (TYield.t_to_js x10672)
  end
module IteratorReturnResult_Make(TReturn:Ojs.T) =
  struct
    type 'TReturn parent = 'TReturn IteratorReturnResult.t
    let rec parent_of_js :
      'TReturn . (Ojs.t -> 'TReturn) -> Ojs.t -> 'TReturn parent = fun (type
      __TReturn) ->
      fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
        fun (x10675 : Ojs.t) ->
          IteratorReturnResult.t_of_js __TReturn_of_js x10675
    and parent_to_js :
      'TReturn . ('TReturn -> Ojs.t) -> 'TReturn parent -> Ojs.t = fun (type
      __TReturn) ->
      fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
        fun (x10673 : __TReturn IteratorReturnResult.t) ->
          IteratorReturnResult.t_to_js __TReturn_to_js x10673
    type t = TReturn.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10679 : Ojs.t) -> parent_of_js TReturn.t_of_js x10679
    and t_to_js : t -> Ojs.t =
      fun (x10677 : TReturn.t parent) -> parent_to_js TReturn.t_to_js x10677
    let (get_done : t -> [ `L_b_true ]) =
      fun (x10681 : t) ->
        let x10682 = Ojs.get_prop_ascii (t_to_js x10681) "done" in
        match Ojs.bool_of_js x10682 with
        | true -> `L_b_true
        | _ -> assert false
    let (set_done : t -> [ `L_b_true ] -> unit) =
      fun (x10683 : t) ->
        fun (x10684 : [ `L_b_true ]) ->
          Ojs.set_prop_ascii (t_to_js x10683) "done"
            (match x10684 with | `L_b_true -> Ojs.bool_to_js true)
    let (get_value : t -> TReturn.t) =
      fun (x10685 : t) ->
        TReturn.t_of_js (Ojs.get_prop_ascii (t_to_js x10685) "value")
    let (set_value : t -> TReturn.t -> unit) =
      fun (x10686 : t) ->
        fun (x10687 : TReturn.t) ->
          Ojs.set_prop_ascii (t_to_js x10686) "value"
            (TReturn.t_to_js x10687)
  end
module Iterator_Make(T:Ojs.T)(TReturn:Ojs.T)(TNext:Ojs.T) =
  struct
    type ('T, 'TReturn, 'TNext) parent = ('T, 'TReturn, 'TNext) Iterator.t
    let rec parent_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) parent
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (__TNext_of_js : Ojs.t -> __TNext) ->
            fun (x10692 : Ojs.t) ->
              Iterator.t_of_js __T_of_js __TReturn_of_js __TNext_of_js x10692
    and parent_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) parent -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (__TNext_to_js : __TNext -> Ojs.t) ->
            fun (x10688 : (__T, __TReturn, __TNext) Iterator.t) ->
              Iterator.t_to_js __T_to_js __TReturn_to_js __TNext_to_js x10688
    type t = (T.t, TReturn.t, TNext.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10700 : Ojs.t) ->
        parent_of_js T.t_of_js TReturn.t_of_js TNext.t_of_js x10700
    and t_to_js : t -> Ojs.t =
      fun (x10696 : (T.t, TReturn.t, TNext.t) parent) ->
        parent_to_js T.t_to_js TReturn.t_to_js TNext.t_to_js x10696
    let (next : t -> args:any list -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x10707 : t) ->
        fun ~args:(x10704 : any list) ->
          IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
            (let x10708 = t_to_js x10707 in
             Ojs.call (Ojs.get_prop_ascii x10708 "next") "apply"
               [|x10708;((let x10705 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10706 : any) ->
                               ignore
                                 (Ojs.call x10705 "push"
                                    [|(any_to_js x10706)|])) x10704;
                          x10705))|])
    let (return :
      t -> ?value:TReturn.t -> unit -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x10714 : t) ->
        fun ?value:(x10711 : TReturn.t option) ->
          fun () ->
            IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
              (let x10715 = t_to_js x10714 in
               Ojs.call (Ojs.get_prop_ascii x10715 "return") "apply"
                 [|x10715;((let x10712 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10711 with
                             | Some x10713 ->
                                 ignore
                                   (Ojs.call x10712 "push"
                                      [|(TReturn.t_to_js x10713)|])
                             | None -> ());
                            x10712))|])
    let (throw : t -> ?e:any -> unit -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x10721 : t) ->
        fun ?e:(x10718 : any option) ->
          fun () ->
            IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
              (let x10722 = t_to_js x10721 in
               Ojs.call (Ojs.get_prop_ascii x10722 "throw") "apply"
                 [|x10722;((let x10719 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10718 with
                             | Some x10720 ->
                                 ignore
                                   (Ojs.call x10719 "push"
                                      [|(any_to_js x10720)|])
                             | None -> ());
                            x10719))|])
  end
module Promise_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T Promise.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent = fun
      (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x10727 : Ojs.t) -> Promise.t_of_js __T_of_js x10727
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t = fun (type
      __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x10725 : __T Promise.t) -> Promise.t_to_js __T_to_js x10725
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10731 : Ojs.t) -> parent_of_js T.t_of_js x10731
    and t_to_js : t -> Ojs.t =
      fun (x10729 : T.t parent) -> parent_to_js T.t_to_js x10729
    let (finally :
      t ->
        ?onfinally:[ `Null  | `Undefined of undefined 
                   | `U1 of unit -> unit ]
          -> unit -> t)
      =
      fun (x10738 : t) ->
        fun
          ?onfinally:(x10733 :
                       [ `Null  | `Undefined of undefined 
                       | `U1 of unit -> unit ] option)
          ->
          fun () ->
            t_of_js
              (let x10739 = t_to_js x10738 in
               Ojs.call (Ojs.get_prop_ascii x10739 "finally") "apply"
                 [|x10739;((let x10734 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10733 with
                             | Some x10735 ->
                                 ignore
                                   (Ojs.call x10734 "push"
                                      [|((match x10735 with
                                          | `Null -> Ojs.null
                                          | `Undefined x10736 ->
                                              undefined_to_js x10736
                                          | `U1 x10737 ->
                                              Ojs.fun_to_js 1
                                                (fun _ -> x10737 ())))|])
                             | None -> ());
                            x10734))|])
    let (then_ :
      t ->
        ?onfulfilled:[ `Null  | `Undefined of undefined 
                     | `U1 of
                         T.t ->
                           [ `U1 of 'TResult1 
                           | `U2 of 'TResult1 PromiseLike.t ]
                         ]
          ->
          ?onrejected:[ `Null  | `Undefined of undefined 
                      | `U1 of
                          any ->
                            [ `U1 of 'TResult2 
                            | `U2 of 'TResult2 PromiseLike.t ]
                          ]
            -> unit -> ('TResult1, 'TResult2) union2 parent)
      =
      fun (x10757 : t) ->
        fun
          ?onfulfilled:(x10740 :
                         [ `Null  | `Undefined of undefined 
                         | `U1 of
                             T.t ->
                               [ `U1 of 'TResult1 
                               | `U2 of 'TResult1 PromiseLike.t ]
                             ]
                           option)
          ->
          fun
            ?onrejected:(x10741 :
                          [ `Null  | `Undefined of undefined 
                          | `U1 of
                              any ->
                                [ `U1 of 'TResult2 
                                | `U2 of 'TResult2 PromiseLike.t ]
                              ]
                            option)
            ->
            fun () ->
              parent_of_js
                (fun (x10759 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x10759)
                (let x10758 = t_to_js x10757 in
                 Ojs.call (Ojs.get_prop_ascii x10758 "then") "apply"
                   [|x10758;((let x10742 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x10740 with
                               | Some x10750 ->
                                   ignore
                                     (Ojs.call x10742 "push"
                                        [|((match x10750 with
                                            | `Null -> Ojs.null
                                            | `Undefined x10751 ->
                                                undefined_to_js x10751
                                            | `U1 x10752 ->
                                                Ojs.fun_to_js 1
                                                  (fun (x10753 : Ojs.t) ->
                                                     match x10752
                                                             (T.t_of_js
                                                                x10753)
                                                     with
                                                     | `U1 x10754 ->
                                                         Obj.magic x10754
                                                     | `U2 x10755 ->
                                                         PromiseLike.t_to_js
                                                           Obj.magic x10755)))|])
                               | None -> ());
                              (match x10741 with
                               | Some x10743 ->
                                   ignore
                                     (Ojs.call x10742 "push"
                                        [|((match x10743 with
                                            | `Null -> Ojs.null
                                            | `Undefined x10744 ->
                                                undefined_to_js x10744
                                            | `U1 x10745 ->
                                                Ojs.fun_to_js 1
                                                  (fun (x10746 : Ojs.t) ->
                                                     match x10745
                                                             (any_of_js
                                                                x10746)
                                                     with
                                                     | `U1 x10747 ->
                                                         Obj.magic x10747
                                                     | `U2 x10748 ->
                                                         PromiseLike.t_to_js
                                                           Obj.magic x10748)))|])
                               | None -> ());
                              x10742))|])
    let (catch :
      t ->
        ?onrejected:[ `Null  | `Undefined of undefined 
                    | `U1 of
                        any ->
                          [ `U1 of 'TResult 
                          | `U2 of 'TResult PromiseLike.t ]
                        ]
          -> unit -> ('TResult, (T.t, 'TResult) union2) union2 parent)
      =
      fun (x10771 : t) ->
        fun
          ?onrejected:(x10762 :
                        [ `Null  | `Undefined of undefined 
                        | `U1 of
                            any ->
                              [ `U1 of 'TResult 
                              | `U2 of 'TResult PromiseLike.t ]
                            ]
                          option)
          ->
          fun () ->
            parent_of_js
              (fun (x10773 : Ojs.t) ->
                 union2_of_js Obj.magic
                   (fun (x10775 : Ojs.t) ->
                      union2_of_js T.t_of_js Obj.magic x10775) x10773)
              (let x10772 = t_to_js x10771 in
               Ojs.call (Ojs.get_prop_ascii x10772 "catch") "apply"
                 [|x10772;((let x10763 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10762 with
                             | Some x10764 ->
                                 ignore
                                   (Ojs.call x10763 "push"
                                      [|((match x10764 with
                                          | `Null -> Ojs.null
                                          | `Undefined x10765 ->
                                              undefined_to_js x10765
                                          | `U1 x10766 ->
                                              Ojs.fun_to_js 1
                                                (fun (x10767 : Ojs.t) ->
                                                   match x10766
                                                           (any_of_js x10767)
                                                   with
                                                   | `U1 x10768 ->
                                                       Obj.magic x10768
                                                   | `U2 x10769 ->
                                                       PromiseLike.t_to_js
                                                         Obj.magic x10769)))|])
                             | None -> ());
                            x10763))|])
    let (any :
      [ `U1 of [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] list 
      | `U2 of [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ] -> 
        t)
      =
      fun
        (x10778 :
          [ `U1 of [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] list 
          | `U2 of [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ])
        ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|((match x10778 with
                 | `U1 x10779 ->
                     Ojs.list_to_js
                       (fun
                          (x10780 :
                            [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                          ->
                          match x10780 with
                          | `U1 x10781 -> T.t_to_js x10781
                          | `U2 x10782 ->
                              PromiseLike.t_to_js T.t_to_js x10782) x10779
                 | `U2 x10784 ->
                     Iterable.t_to_js
                       (fun
                          (x10785 :
                            [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                          ->
                          match x10785 with
                          | `U1 x10786 -> T.t_to_js x10786
                          | `U2 x10787 ->
                              PromiseLike.t_to_js T.t_to_js x10787) x10784))|])
    let (any' : T.t -> any Awaited.t parent) =
      fun (x10789 : T.t) ->
        parent_of_js
          (fun (x10790 : Ojs.t) -> Awaited.t_of_js any_of_js x10790)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(T.t_to_js x10789)|])
    let (any'' :
      [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ->
        T.t Awaited.t Awaited.t parent)
      =
      fun (x10792 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t) ->
        parent_of_js
          (fun (x10797 : Ojs.t) ->
             Awaited.t_of_js
               (fun (x10798 : Ojs.t) -> Awaited.t_of_js T.t_of_js x10798)
               x10797)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(Iterable.t_to_js
                  (fun (x10793 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                     ->
                     match x10793 with
                     | `U1 x10794 -> T.t_to_js x10794
                     | `U2 x10795 -> PromiseLike.t_to_js T.t_to_js x10795)
                  x10792)|])
    let (allSettled : T.t -> any parent) =
      fun (x10800 : T.t) ->
        parent_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(T.t_to_js x10800)|])
    let (allSettled' :
      [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ->
        T.t Awaited.t PromiseSettledResult.t list Awaited.t
          PromiseSettledResult.t list parent)
      =
      fun (x10802 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t) ->
        parent_of_js
          (fun (x10807 : Ojs.t) ->
             Ojs.list_of_js
               (fun (x10808 : Ojs.t) ->
                  PromiseSettledResult.t_of_js
                    (fun (x10809 : Ojs.t) ->
                       Awaited.t_of_js
                         (fun (x10810 : Ojs.t) ->
                            Ojs.list_of_js
                              (fun (x10811 : Ojs.t) ->
                                 PromiseSettledResult.t_of_js
                                   (fun (x10812 : Ojs.t) ->
                                      Awaited.t_of_js T.t_of_js x10812)
                                   x10811) x10810) x10809) x10808) x10807)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(Iterable.t_to_js
                  (fun (x10803 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                     ->
                     match x10803 with
                     | `U1 x10804 -> T.t_to_js x10804
                     | `U2 x10805 -> PromiseLike.t_to_js T.t_to_js x10805)
                  x10802)|])
    let (prototype : unit -> any parent) =
      fun () ->
        parent_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Promise")
             "prototype")
    let (create :
      (resolve:([ `U1 of T.t  | `U2 of T.t PromiseLike.t ] -> unit) ->
         reject:(?reason:any -> unit -> unit) -> unit)
        -> t)
      =
      fun
        (x10815 :
          resolve:([ `U1 of T.t  | `U2 of T.t PromiseLike.t ] -> unit) ->
            reject:(?reason:any -> unit -> unit) -> unit)
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Promise")
             [|(Ojs.fun_to_js 2
                  (fun (x10816 : Ojs.t) ->
                     fun (x10821 : Ojs.t) ->
                       x10815
                         ~resolve:(fun
                                     (x10817 :
                                       [ `U1 of T.t 
                                       | `U2 of T.t PromiseLike.t ])
                                     ->
                                     ignore
                                       (Ojs.apply x10816
                                          [|((match x10817 with
                                              | `U1 x10818 ->
                                                  T.t_to_js x10818
                                              | `U2 x10819 ->
                                                  PromiseLike.t_to_js
                                                    T.t_to_js x10819))|]))
                         ~reject:(fun ?reason:(x10822 : any option) ->
                                    fun () ->
                                      ignore
                                        (Ojs.call x10821 "apply"
                                           [|Ojs.null;((let x10823 =
                                                          Ojs.new_obj
                                                            (Ojs.get_prop_ascii
                                                               Ojs.global
                                                               "Array") 
                                                            [||] in
                                                        (match x10822 with
                                                         | Some x10824 ->
                                                             ignore
                                                               (Ojs.call
                                                                  x10823
                                                                  "push"
                                                                  [|(
                                                                    any_to_js
                                                                    x10824)|])
                                                         | None -> ());
                                                        x10823))|]))))|])
    let (all : T.t -> any parent) =
      fun (x10825 : T.t) ->
        parent_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(T.t_to_js x10825)|])
    let (race : T.t -> any Awaited.t parent) =
      fun (x10827 : T.t) ->
        parent_of_js
          (fun (x10828 : Ojs.t) -> Awaited.t_of_js any_of_js x10828)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(T.t_to_js x10827)|])
    let (reject : ?reason:any -> unit -> t) =
      fun ?reason:(x10830 : any option) ->
        fun () ->
          t_of_js
            (let x10833 = Ojs.get_prop_ascii Ojs.global "Promise" in
             Ojs.call (Ojs.get_prop_ascii x10833 "reject") "apply"
               [|x10833;((let x10831 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x10830 with
                           | Some x10832 ->
                               ignore
                                 (Ojs.call x10831 "push"
                                    [|(any_to_js x10832)|])
                           | None -> ());
                          x10831))|])
    let (resolve : unit -> unit parent) =
      fun () ->
        parent_of_js Ojs.unit_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve" [||])
    let (resolve' : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] -> t) =
      fun (x10835 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ]) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve"
             [|((match x10835 with
                 | `U1 x10836 -> T.t_to_js x10836
                 | `U2 x10837 -> PromiseLike.t_to_js T.t_to_js x10837))|])
    let (all' :
      [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ->
        T.t Awaited.t list Awaited.t list parent)
      =
      fun (x10839 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t) ->
        parent_of_js
          (fun (x10844 : Ojs.t) ->
             Ojs.list_of_js
               (fun (x10845 : Ojs.t) ->
                  Awaited.t_of_js
                    (fun (x10846 : Ojs.t) ->
                       Ojs.list_of_js
                         (fun (x10847 : Ojs.t) ->
                            Awaited.t_of_js T.t_of_js x10847) x10846) x10845)
               x10844)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(Iterable.t_to_js
                  (fun (x10840 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                     ->
                     match x10840 with
                     | `U1 x10841 -> T.t_to_js x10841
                     | `U2 x10842 -> PromiseLike.t_to_js T.t_to_js x10842)
                  x10839)|])
    let (race' :
      [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ->
        T.t Awaited.t Awaited.t parent)
      =
      fun (x10849 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t) ->
        parent_of_js
          (fun (x10854 : Ojs.t) ->
             Awaited.t_of_js
               (fun (x10855 : Ojs.t) -> Awaited.t_of_js T.t_of_js x10855)
               x10854)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(Iterable.t_to_js
                  (fun (x10850 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                     ->
                     match x10850 with
                     | `U1 x10851 -> T.t_to_js x10851
                     | `U2 x10852 -> PromiseLike.t_to_js T.t_to_js x10852)
                  x10849)|])
  end
module ProxyHandler_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ProxyHandler.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent = fun
      (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x10859 : Ojs.t) -> ProxyHandler.t_of_js __T_of_js x10859
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t = fun (type
      __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x10857 : __T ProxyHandler.t) ->
          ProxyHandler.t_to_js __T_to_js x10857
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10863 : Ojs.t) -> parent_of_js T.t_of_js x10863
    and t_to_js : t -> Ojs.t =
      fun (x10861 : T.t parent) -> parent_to_js T.t_to_js x10861
    let (apply_ : t -> target:T.t -> thisArg:any -> argArray:any list -> any)
      =
      fun (x10869 : t) ->
        fun ~target:(x10865 : T.t) ->
          fun ~thisArg:(x10866 : any) ->
            fun ~argArray:(x10867 : any list) ->
              any_of_js
                (Ojs.call (t_to_js x10869) "apply"
                   [|(T.t_to_js x10865);(any_to_js x10866);(Ojs.list_to_js
                                                              any_to_js
                                                              x10867)|])
    let (construct :
      t ->
        target:T.t ->
          argArray:any list -> newTarget:Function.t -> untyped_object)
      =
      fun (x10874 : t) ->
        fun ~target:(x10870 : T.t) ->
          fun ~argArray:(x10871 : any list) ->
            fun ~newTarget:(x10873 : Function.t) ->
              untyped_object_of_js
                (Ojs.call (t_to_js x10874) "construct"
                   [|(T.t_to_js x10870);(Ojs.list_to_js any_to_js x10871);(
                     Function.t_to_js x10873)|])
    let (defineProperty :
      t ->
        target:T.t ->
          p:[ `U1 of string  | `U2 of symbol ] ->
            attributes:PropertyDescriptor.t -> bool)
      =
      fun (x10880 : t) ->
        fun ~target:(x10875 : T.t) ->
          fun ~p:(x10876 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~attributes:(x10879 : PropertyDescriptor.t) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x10880) "defineProperty"
                   [|(T.t_to_js x10875);((match x10876 with
                                          | `U1 x10877 ->
                                              Ojs.string_to_js x10877
                                          | `U2 x10878 -> symbol_to_js x10878));(
                     PropertyDescriptor.t_to_js x10879)|])
    let (deleteProperty :
      t -> target:T.t -> p:[ `U1 of string  | `U2 of symbol ] -> bool) =
      fun (x10885 : t) ->
        fun ~target:(x10881 : T.t) ->
          fun ~p:(x10882 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.bool_of_js
              (Ojs.call (t_to_js x10885) "deleteProperty"
                 [|(T.t_to_js x10881);((match x10882 with
                                        | `U1 x10883 ->
                                            Ojs.string_to_js x10883
                                        | `U2 x10884 -> symbol_to_js x10884))|])
    let (get_ :
      t ->
        target:T.t ->
          p:[ `U1 of string  | `U2 of symbol ] -> receiver:any -> any)
      =
      fun (x10891 : t) ->
        fun ~target:(x10886 : T.t) ->
          fun ~p:(x10887 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~receiver:(x10890 : any) ->
              any_of_js
                (Ojs.call (t_to_js x10891) "get"
                   [|(T.t_to_js x10886);((match x10887 with
                                          | `U1 x10888 ->
                                              Ojs.string_to_js x10888
                                          | `U2 x10889 -> symbol_to_js x10889));(
                     any_to_js x10890)|])
    let (getOwnPropertyDescriptor :
      t ->
        target:T.t ->
          p:[ `U1 of string  | `U2 of symbol ] -> PropertyDescriptor.t option)
      =
      fun (x10896 : t) ->
        fun ~target:(x10892 : T.t) ->
          fun ~p:(x10893 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.option_of_js PropertyDescriptor.t_of_js
              (Ojs.call (t_to_js x10896) "getOwnPropertyDescriptor"
                 [|(T.t_to_js x10892);((match x10893 with
                                        | `U1 x10894 ->
                                            Ojs.string_to_js x10894
                                        | `U2 x10895 -> symbol_to_js x10895))|])
    let (getPrototypeOf : t -> target:T.t -> untyped_object option) =
      fun (x10899 : t) ->
        fun ~target:(x10898 : T.t) ->
          Ojs.option_of_js untyped_object_of_js
            (Ojs.call (t_to_js x10899) "getPrototypeOf"
               [|(T.t_to_js x10898)|])
    let (has :
      t -> target:T.t -> p:[ `U1 of string  | `U2 of symbol ] -> bool) =
      fun (x10905 : t) ->
        fun ~target:(x10901 : T.t) ->
          fun ~p:(x10902 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.bool_of_js
              (Ojs.call (t_to_js x10905) "has"
                 [|(T.t_to_js x10901);((match x10902 with
                                        | `U1 x10903 ->
                                            Ojs.string_to_js x10903
                                        | `U2 x10904 -> symbol_to_js x10904))|])
    let (isExtensible : t -> target:T.t -> bool) =
      fun (x10907 : t) ->
        fun ~target:(x10906 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10907) "isExtensible" [|(T.t_to_js x10906)|])
    let (ownKeys :
      t ->
        target:T.t ->
          [ `String of string  | `Symbol of symbol ] Primitive.t ArrayLike.t)
      =
      fun (x10909 : t) ->
        fun ~target:(x10908 : T.t) ->
          ArrayLike.t_of_js
            (fun (x10910 : Ojs.t) ->
               Primitive.t_of_js
                 (fun (x10911 : Ojs.t) ->
                    let x10912 = x10911 in
                    match Ojs.string_of_js
                            (Ojs.get_prop_ascii x10912 "dummy")
                    with
                    | "String" -> `String (Ojs.string_of_js x10912)
                    | "Symbol" -> `Symbol (symbol_of_js x10912)
                    | _ -> assert false) x10910)
            (Ojs.call (t_to_js x10909) "ownKeys" [|(T.t_to_js x10908)|])
    let (preventExtensions : t -> target:T.t -> bool) =
      fun (x10914 : t) ->
        fun ~target:(x10913 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10914) "preventExtensions"
               [|(T.t_to_js x10913)|])
    let (set_ :
      t ->
        target:T.t ->
          p:[ `U1 of string  | `U2 of symbol ] ->
            value:any -> receiver:any -> bool)
      =
      fun (x10921 : t) ->
        fun ~target:(x10915 : T.t) ->
          fun ~p:(x10916 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~value:(x10919 : any) ->
              fun ~receiver:(x10920 : any) ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x10921) "set"
                     [|(T.t_to_js x10915);((match x10916 with
                                            | `U1 x10917 ->
                                                Ojs.string_to_js x10917
                                            | `U2 x10918 ->
                                                symbol_to_js x10918));(
                       any_to_js x10919);(any_to_js x10920)|])
    let (setPrototypeOf : t -> target:T.t -> v:untyped_object option -> bool)
      =
      fun (x10925 : t) ->
        fun ~target:(x10922 : T.t) ->
          fun ~v:(x10923 : untyped_object option) ->
            Ojs.bool_of_js
              (Ojs.call (t_to_js x10925) "setPrototypeOf"
                 [|(T.t_to_js x10922);(Ojs.option_to_js untyped_object_to_js
                                         x10923)|])
  end
module AsyncGenerator_Make(T:Ojs.T)(TReturn:Ojs.T)(TNext:Ojs.T) =
  struct
    type ('T, 'TReturn, 'TNext) parent =
      ('T, 'TReturn, 'TNext) AsyncGenerator.t
    let rec parent_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) parent
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (__TNext_of_js : Ojs.t -> __TNext) ->
            fun (x10930 : Ojs.t) ->
              AsyncGenerator.t_of_js __T_of_js __TReturn_of_js __TNext_of_js
                x10930
    and parent_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) parent -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (__TNext_to_js : __TNext -> Ojs.t) ->
            fun (x10926 : (__T, __TReturn, __TNext) AsyncGenerator.t) ->
              AsyncGenerator.t_to_js __T_to_js __TReturn_to_js __TNext_to_js
                x10926
    type t = (T.t, TReturn.t, TNext.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10938 : Ojs.t) ->
        parent_of_js T.t_of_js TReturn.t_of_js TNext.t_of_js x10938
    and t_to_js : t -> Ojs.t =
      fun (x10934 : (T.t, TReturn.t, TNext.t) parent) ->
        parent_to_js T.t_to_js TReturn.t_to_js TNext.t_to_js x10934
    let (next :
      t -> args:any list -> (T.t, TReturn.t) IteratorResult.t Promise.t) =
      fun (x10945 : t) ->
        fun ~args:(x10942 : any list) ->
          Promise.t_of_js
            (fun (x10947 : Ojs.t) ->
               IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x10947)
            (let x10946 = t_to_js x10945 in
             Ojs.call (Ojs.get_prop_ascii x10946 "next") "apply"
               [|x10946;((let x10943 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10944 : any) ->
                               ignore
                                 (Ojs.call x10943 "push"
                                    [|(any_to_js x10944)|])) x10942;
                          x10943))|])
    let (return :
      t ->
        value:[ `U1 of TReturn.t  | `U2 of TReturn.t PromiseLike.t ] ->
          (T.t, TReturn.t) IteratorResult.t Promise.t)
      =
      fun (x10954 : t) ->
        fun
          ~value:(x10950 :
                   [ `U1 of TReturn.t  | `U2 of TReturn.t PromiseLike.t ])
          ->
          Promise.t_of_js
            (fun (x10955 : Ojs.t) ->
               IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x10955)
            (Ojs.call (t_to_js x10954) "return"
               [|((match x10950 with
                   | `U1 x10951 -> TReturn.t_to_js x10951
                   | `U2 x10952 -> PromiseLike.t_to_js TReturn.t_to_js x10952))|])
    let (throw : t -> e:any -> (T.t, TReturn.t) IteratorResult.t Promise.t) =
      fun (x10959 : t) ->
        fun ~e:(x10958 : any) ->
          Promise.t_of_js
            (fun (x10960 : Ojs.t) ->
               IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x10960)
            (Ojs.call (t_to_js x10959) "throw" [|(any_to_js x10958)|])
  end
module AsyncIterator_Make(T:Ojs.T)(TReturn:Ojs.T)(TNext:Ojs.T) =
  struct
    type ('T, 'TReturn, 'TNext) parent =
      ('T, 'TReturn, 'TNext) AsyncIterator.t
    let rec parent_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) parent
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (__TNext_of_js : Ojs.t -> __TNext) ->
            fun (x10967 : Ojs.t) ->
              AsyncIterator.t_of_js __T_of_js __TReturn_of_js __TNext_of_js
                x10967
    and parent_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) parent -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (__TNext_to_js : __TNext -> Ojs.t) ->
            fun (x10963 : (__T, __TReturn, __TNext) AsyncIterator.t) ->
              AsyncIterator.t_to_js __T_to_js __TReturn_to_js __TNext_to_js
                x10963
    type t = (T.t, TReturn.t, TNext.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10975 : Ojs.t) ->
        parent_of_js T.t_of_js TReturn.t_of_js TNext.t_of_js x10975
    and t_to_js : t -> Ojs.t =
      fun (x10971 : (T.t, TReturn.t, TNext.t) parent) ->
        parent_to_js T.t_to_js TReturn.t_to_js TNext.t_to_js x10971
    let (next :
      t -> args:any list -> (T.t, TReturn.t) IteratorResult.t Promise.t) =
      fun (x10982 : t) ->
        fun ~args:(x10979 : any list) ->
          Promise.t_of_js
            (fun (x10984 : Ojs.t) ->
               IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x10984)
            (let x10983 = t_to_js x10982 in
             Ojs.call (Ojs.get_prop_ascii x10983 "next") "apply"
               [|x10983;((let x10980 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10981 : any) ->
                               ignore
                                 (Ojs.call x10980 "push"
                                    [|(any_to_js x10981)|])) x10979;
                          x10980))|])
    let (return :
      t ->
        ?value:[ `U1 of TReturn.t  | `U2 of TReturn.t PromiseLike.t ] ->
          unit -> (T.t, TReturn.t) IteratorResult.t Promise.t)
      =
      fun (x10993 : t) ->
        fun
          ?value:(x10987 :
                   [ `U1 of TReturn.t  | `U2 of TReturn.t PromiseLike.t ]
                     option)
          ->
          fun () ->
            Promise.t_of_js
              (fun (x10995 : Ojs.t) ->
                 IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x10995)
              (let x10994 = t_to_js x10993 in
               Ojs.call (Ojs.get_prop_ascii x10994 "return") "apply"
                 [|x10994;((let x10988 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10987 with
                             | Some x10989 ->
                                 ignore
                                   (Ojs.call x10988 "push"
                                      [|((match x10989 with
                                          | `U1 x10990 ->
                                              TReturn.t_to_js x10990
                                          | `U2 x10991 ->
                                              PromiseLike.t_to_js
                                                TReturn.t_to_js x10991))|])
                             | None -> ());
                            x10988))|])
    let (throw :
      t -> ?e:any -> unit -> (T.t, TReturn.t) IteratorResult.t Promise.t) =
      fun (x11001 : t) ->
        fun ?e:(x10998 : any option) ->
          fun () ->
            Promise.t_of_js
              (fun (x11003 : Ojs.t) ->
                 IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x11003)
              (let x11002 = t_to_js x11001 in
               Ojs.call (Ojs.get_prop_ascii x11002 "throw") "apply"
                 [|x11002;((let x10999 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10998 with
                             | Some x11000 ->
                                 ignore
                                   (Ojs.call x10999 "push"
                                      [|(any_to_js x11000)|])
                             | None -> ());
                            x10999))|])
  end
module PromiseFulfilledResult_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T PromiseFulfilledResult.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent = fun
      (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x11008 : Ojs.t) ->
          PromiseFulfilledResult.t_of_js __T_of_js x11008
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t = fun (type
      __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x11006 : __T PromiseFulfilledResult.t) ->
          PromiseFulfilledResult.t_to_js __T_to_js x11006
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11012 : Ojs.t) -> parent_of_js T.t_of_js x11012
    and t_to_js : t -> Ojs.t =
      fun (x11010 : T.t parent) -> parent_to_js T.t_to_js x11010
    let (get_status : t -> [ `L_s43_fulfilled ]) =
      fun (x11014 : t) ->
        let x11015 = Ojs.get_prop_ascii (t_to_js x11014) "status" in
        match Ojs.string_of_js x11015 with
        | "fulfilled" -> `L_s43_fulfilled
        | _ -> assert false
    let (set_status : t -> [ `L_s43_fulfilled ] -> unit) =
      fun (x11016 : t) ->
        fun (x11017 : [ `L_s43_fulfilled ]) ->
          Ojs.set_prop_ascii (t_to_js x11016) "status"
            (match x11017 with
             | `L_s43_fulfilled -> Ojs.string_to_js "fulfilled")
    let (get_value : t -> T.t) =
      fun (x11018 : t) ->
        T.t_of_js (Ojs.get_prop_ascii (t_to_js x11018) "value")
    let (set_value : t -> T.t -> unit) =
      fun (x11019 : t) ->
        fun (x11020 : T.t) ->
          Ojs.set_prop_ascii (t_to_js x11019) "value" (T.t_to_js x11020)
  end
module WeakRef_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T WeakRef.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent = fun
      (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x11023 : Ojs.t) -> WeakRef.t_of_js __T_of_js x11023
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t = fun (type
      __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x11021 : __T WeakRef.t) -> WeakRef.t_to_js __T_to_js x11021
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11027 : Ojs.t) -> parent_of_js T.t_of_js x11027
    and t_to_js : t -> Ojs.t =
      fun (x11025 : T.t parent) -> parent_to_js T.t_to_js x11025
    let (deref : t -> T.t option) =
      fun (x11029 : t) ->
        Ojs.option_of_js T.t_of_js (Ojs.call (t_to_js x11029) "deref" [||])
    let (deref' : t -> T.t option) =
      fun (x11031 : t) ->
        Ojs.option_of_js T.t_of_js (Ojs.call (t_to_js x11031) "deref" [||])
    let (prototype : unit -> any parent) =
      fun () ->
        parent_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakRef")
             "prototype")
    let (create : ?target:T.t -> unit -> t) =
      fun ?target:(x11034 : T.t option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakRef")
               (let x11035 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x11034 with
                 | Some x11036 ->
                     ignore (Ojs.call x11035 "push" [|(T.t_to_js x11036)|])
                 | None -> ());
                x11035))
    let (prototype' : unit -> any parent) =
      fun () ->
        parent_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakRef")
             "prototype")
    let (create' : T.t -> t) =
      fun (x11038 : T.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakRef")
             [|(T.t_to_js x11038)|])
  end
module FinalizationRegistry_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T FinalizationRegistry.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent = fun
      (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x11041 : Ojs.t) -> FinalizationRegistry.t_of_js __T_of_js x11041
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t = fun (type
      __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x11039 : __T FinalizationRegistry.t) ->
          FinalizationRegistry.t_to_js __T_to_js x11039
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11045 : Ojs.t) -> parent_of_js T.t_of_js x11045
    and t_to_js : t -> Ojs.t =
      fun (x11043 : T.t parent) -> parent_to_js T.t_to_js x11043
    let (register :
      t ->
        target:untyped_object ->
          heldValue:any -> ?unregisterToken:untyped_object -> unit -> unit)
      =
      fun (x11052 : t) ->
        fun ~target:(x11047 : untyped_object) ->
          fun ~heldValue:(x11048 : any) ->
            fun ?unregisterToken:(x11049 : untyped_object option) ->
              fun () ->
                ignore
                  (let x11053 = t_to_js x11052 in
                   Ojs.call (Ojs.get_prop_ascii x11053 "register") "apply"
                     [|x11053;((let x11050 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x11050 "push"
                                     [|(untyped_object_to_js x11047)|]);
                                ignore
                                  (Ojs.call x11050 "push"
                                     [|(any_to_js x11048)|]);
                                (match x11049 with
                                 | Some x11051 ->
                                     ignore
                                       (Ojs.call x11050 "push"
                                          [|(untyped_object_to_js x11051)|])
                                 | None -> ());
                                x11050))|])
    let (unregister : t -> unregisterToken:untyped_object -> unit) =
      fun (x11055 : t) ->
        fun ~unregisterToken:(x11054 : untyped_object) ->
          ignore
            (Ojs.call (t_to_js x11055) "unregister"
               [|(untyped_object_to_js x11054)|])
    let (register' :
      t ->
        target:untyped_object ->
          heldValue:T.t -> ?unregisterToken:untyped_object -> unit -> unit)
      =
      fun (x11061 : t) ->
        fun ~target:(x11056 : untyped_object) ->
          fun ~heldValue:(x11057 : T.t) ->
            fun ?unregisterToken:(x11058 : untyped_object option) ->
              fun () ->
                ignore
                  (let x11062 = t_to_js x11061 in
                   Ojs.call (Ojs.get_prop_ascii x11062 "register") "apply"
                     [|x11062;((let x11059 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x11059 "push"
                                     [|(untyped_object_to_js x11056)|]);
                                ignore
                                  (Ojs.call x11059 "push"
                                     [|(T.t_to_js x11057)|]);
                                (match x11058 with
                                 | Some x11060 ->
                                     ignore
                                       (Ojs.call x11059 "push"
                                          [|(untyped_object_to_js x11060)|])
                                 | None -> ());
                                x11059))|])
    let (unregister' : t -> unregisterToken:untyped_object -> unit) =
      fun (x11064 : t) ->
        fun ~unregisterToken:(x11063 : untyped_object) ->
          ignore
            (Ojs.call (t_to_js x11064) "unregister"
               [|(untyped_object_to_js x11063)|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             "prototype")
    let (create : (any -> unit) -> t) =
      fun (x11065 : any -> unit) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             [|(Ojs.fun_to_js 1
                  (fun (x11066 : Ojs.t) -> x11065 (any_of_js x11066)))|])
    let (prototype' : unit -> any parent) =
      fun () ->
        parent_of_js any_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             "prototype")
    let (create' : (T.t -> unit) -> t) =
      fun (x11068 : T.t -> unit) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             [|(Ojs.fun_to_js 1
                  (fun (x11069 : Ojs.t) -> x11068 (T.t_of_js x11069)))|])
  end
let (nan : unit -> float) =
  fun () -> Ojs.float_of_js (Ojs.get_prop_ascii Ojs.global "NaN")
let (infinity : unit -> float) =
  fun () -> Ojs.float_of_js (Ojs.get_prop_ascii Ojs.global "Infinity")
let (eval : string -> any) =
  fun (x11070 : string) ->
    any_of_js (Ojs.call Ojs.global "eval" [|(Ojs.string_to_js x11070)|])
let (parseInt : string:string -> ?radix:float -> unit -> float) =
  fun ~string:(x11071 : string) ->
    fun ?radix:(x11072 : float option) ->
      fun () ->
        Ojs.float_of_js
          (let x11075 = Ojs.global in
           Ojs.call (Ojs.get_prop_ascii x11075 "parseInt") "apply"
             [|x11075;((let x11073 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        ignore
                          (Ojs.call x11073 "push"
                             [|(Ojs.string_to_js x11071)|]);
                        (match x11072 with
                         | Some x11074 ->
                             ignore
                               (Ojs.call x11073 "push"
                                  [|(Ojs.float_to_js x11074)|])
                         | None -> ());
                        x11073))|])
let (parseFloat : string -> float) =
  fun (x11076 : string) ->
    Ojs.float_of_js
      (Ojs.call Ojs.global "parseFloat" [|(Ojs.string_to_js x11076)|])
let (isNaN : float -> bool) =
  fun (x11077 : float) ->
    Ojs.bool_of_js (Ojs.call Ojs.global "isNaN" [|(Ojs.float_to_js x11077)|])
let (isFinite : float -> bool) =
  fun (x11078 : float) ->
    Ojs.bool_of_js
      (Ojs.call Ojs.global "isFinite" [|(Ojs.float_to_js x11078)|])
let (decodeURI : string -> string) =
  fun (x11079 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "decodeURI" [|(Ojs.string_to_js x11079)|])
let (decodeURIComponent : string -> string) =
  fun (x11080 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "decodeURIComponent" [|(Ojs.string_to_js x11080)|])
let (encodeURI : string -> string) =
  fun (x11081 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "encodeURI" [|(Ojs.string_to_js x11081)|])
let (encodeURIComponent :
  [ `Number of float  | `String of string  | `Boolean of bool ] Primitive.t
    -> string)
  =
  fun
    (x11082 :
      [ `Number of float  | `String of string  | `Boolean of bool ]
        Primitive.t)
    ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "encodeURIComponent"
         [|(Primitive.t_to_js
              (fun
                 (x11083 :
                   [ `Number of float  | `String of string 
                   | `Boolean of bool ])
                 ->
                 match x11083 with
                 | `Number x11084 -> Ojs.float_to_js x11084
                 | `String x11085 -> Ojs.string_to_js x11085
                 | `Boolean x11086 -> Ojs.bool_to_js x11086) x11082)|])
let (escape : string -> string) =
  fun (x11087 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "escape" [|(Ojs.string_to_js x11087)|])
let (unescape : string -> string) =
  fun (x11088 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "unescape" [|(Ojs.string_to_js x11088)|])
let (proxy : unit -> ProxyConstructor.t) =
  fun () -> ProxyConstructor.t_of_js (Ojs.get_prop_ascii Ojs.global "Proxy")
